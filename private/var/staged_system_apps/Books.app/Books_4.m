uint64_t sub_1003356F0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_100335734()
{
  unint64_t result;

  result = qword_1009DB9F0;
  if (!qword_1009DB9F0)
  {
    result = swift_getWitnessTable(&unk_10071BF58, &type metadata for WidgetImageManager.FetchError);
    atomic_store(result, (unint64_t *)&qword_1009DB9F0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetImageManager.FetchError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetImageManager.FetchError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_100335854 + 4 * byte_10071BEC5[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_100335888 + 4 * byte_10071BEC0[v4]))();
}

uint64_t sub_100335888(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100335890(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100335898);
  return result;
}

uint64_t sub_1003358A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003358ACLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1003358B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003358B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetImageManager.FetchError()
{
  return &type metadata for WidgetImageManager.FetchError;
}

unint64_t sub_1003358D8()
{
  unint64_t result;

  result = qword_1009DB9F8;
  if (!qword_1009DB9F8)
  {
    result = swift_getWitnessTable(&unk_10071BF30, &type metadata for WidgetImageManager.FetchError);
    atomic_store(result, (unint64_t *)&qword_1009DB9F8);
  }
  return result;
}

uint64_t sub_10033591C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100335928);
}

uint64_t sub_100335928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1003359A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003359B0);
}

uint64_t sub_1003359B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

id sub_100335A24@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id result;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  ValueMetadata *v24;
  _UNKNOWN **v25;
  __int128 v26[2];
  __int128 v27[2];
  __int128 v28[3];

  sub_10002E418((uint64_t)a1, (uint64_t)v28);
  sub_10002E418((uint64_t)a2, (uint64_t)v27);
  sub_10002E418((uint64_t)a4, (uint64_t)v26);
  v10 = (void *)objc_opt_self(BKAppDelegate);
  v11 = objc_msgSend(v10, "delegate");
  v12 = objc_msgSend(v11, "serviceCenter");

  v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v14 = objc_msgSend(v10, "delegate");
  v15 = objc_msgSend(v14, "engagementManager");

  result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (result)
  {
    v17 = result;
    v18 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    v24 = &type metadata for MenuLibraryOperationProvider;
    v25 = &off_10090F400;
    v19 = (_QWORD *)swift_allocObject(&unk_1008FE300, 56, 7);
    *(_QWORD *)&v23 = v19;
    v19[2] = v12;
    v19[3] = v13;
    v19[4] = v15;
    v19[5] = v17;
    v19[6] = v18;
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(a2);
    _s5Books15CurrentPageViewVwxx_0(a1);
    v20 = a5 + *(int *)(type metadata accessor for RemoveFromContinueActionItem(0) + 36);
    v21 = enum case for ContextActionType.removeFromContinue(_:);
    v22 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
    sub_100022840(v28, a5);
    sub_100022840(v27, a5 + 40);
    *(_QWORD *)(a5 + 80) = a3;
    sub_100022840(v26, a5 + 88);
    return (id)sub_100022840(&v23, a5 + 128);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100335C44()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[19] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[20] = v2;
  v1[21] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[22] = v3;
  v1[23] = v4;
  return swift_task_switch(sub_100335CB4, v3, v4);
}

uint64_t sub_100335CB4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  uint64_t v8;
  uint64_t inited;
  _QWORD *v10;
  uint64_t v12;

  sub_10023ADE8((_OWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 88))
  {
    sub_1001EB834((__int128 *)(v0 + 64), (_OWORD *)(v0 + 16));
    v1 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v2 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    sub_10003F198((_QWORD *)(v0 + 16), v2);
    dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v2, v3);
    v5 = v4;
    v6 = String._bridgeToObjectiveC()();
    v7 = objc_msgSend(v1, "libraryAssetOnMainQueueWithAssetID:", v6);
    *(_QWORD *)(v0 + 192) = v7;

    swift_bridgeObjectRelease(v5);
    if (v7)
    {
      v8 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
      inited = swift_initStackObject(v8, v0 + 112);
      *(_QWORD *)(v0 + 200) = inited;
      *(_OWORD *)(inited + 16) = xmmword_1007118F0;
      *(_QWORD *)(inited + 32) = v7;
      v12 = inited;
      specialized Array._endMutation()(inited);
      *(_QWORD *)(v0 + 208) = v12;
      *(_QWORD *)(v0 + 216) = static MainActor.shared.getter(v7);
      v10 = (_QWORD *)swift_task_alloc(dword_1009EAB24);
      *(_QWORD *)(v0 + 224) = v10;
      *v10 = v0;
      v10[1] = sub_100335E50;
      return sub_1005465B0(v12);
    }
    swift_release(*(_QWORD *)(v0 + 168));
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 168));
    sub_1001EB7F4(v0 + 64);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100335E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 224));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100335EC0, v2, v3);
}

uint64_t sub_100335EC0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[26];
  swift_release(v0[27]);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_100335F00, v0[22], v0[23]);
}

uint64_t sub_100335F00()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 168));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100335F44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v13;

  v1 = type metadata accessor for ContextActionSource(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - v6;
  v8 = v0[3];
  v9 = v0[4];
  sub_10003F198(v0, v8);
  dispatch thunk of ContextActionDataProtocol.source.getter(v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for ContextActionSource.continueEntry(_:), v1);
  v10 = static ContextActionSource.== infix(_:_:)(v7, v4);
  v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v4, v1);
  v11(v7, v1);
  return v10 & 1;
}

uint64_t sub_10033603C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009DBAB4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_100335C44();
}

uint64_t sub_100336084()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003360C8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009DBAC0);
  sub_100048F64(v0, (uint64_t)qword_1009DBAC0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000022, 0x80000001007C0570);
}

uint64_t LibraryBookUpdateCountOperation.result.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR___BKLibraryBookUpdateCountOperation_result);
  swift_beginAccess(v0 + OBJC_IVAR___BKLibraryBookUpdateCountOperation_result, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t LibraryBookUpdateCountOperation.result.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR___BKLibraryBookUpdateCountOperation_result);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*LibraryBookUpdateCountOperation.result.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKLibraryBookUpdateCountOperation_result, a1, 33, 0);
  return j__swift_endAccess;
}

id LibraryBookUpdateCountOperation.__allocating_init(libraryAssetProvider:updatesURL:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v5[OBJC_IVAR___BKLibraryBookUpdateCountOperation_result] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BKLibraryBookUpdateCountOperation_libraryAssetProvider] = a1;
  v6 = &v5[OBJC_IVAR___BKLibraryBookUpdateCountOperation_updatesURL];
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  v11.receiver = v5;
  v11.super_class = v2;
  v9 = objc_msgSendSuper2(&v11, "init");
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
  return v9;
}

id LibraryBookUpdateCountOperation.init(libraryAssetProvider:updatesURL:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  *(_QWORD *)&v2[OBJC_IVAR___BKLibraryBookUpdateCountOperation_result] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___BKLibraryBookUpdateCountOperation_libraryAssetProvider] = a1;
  v4 = &v2[OBJC_IVAR___BKLibraryBookUpdateCountOperation_updatesURL];
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a2, v5);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for LibraryBookUpdateCountOperation(0);
  v7 = objc_msgSendSuper2(&v9, "init");
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  return v7;
}

uint64_t type metadata accessor for LibraryBookUpdateCountOperation(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DBB18;
  if (!qword_1009DBB18)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for LibraryBookUpdateCountOperation);
  return result;
}

Swift::Void __swiftcall LibraryBookUpdateCountOperation.main()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  NSURL *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD v53[2];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v1 = v0;
  v2 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___BKLibraryBookUpdateCountOperation_libraryAssetProvider), "localNonSampleLibraryAssetStoreSummariesExcludeAudiobooks:", 1);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009CEC70);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  if (*(_QWORD *)(v4 + 16))
  {
    v5 = sub_100336D18(v4);
    swift_bridgeObjectRelease(v4);
    *((_QWORD *)&v55 + 1) = v3;
    *(_QWORD *)&v54 = v5;
    v6 = sub_10004CFC4(&v54, &v56);
    v7 = URL.absoluteString.getter(v6);
    v9 = v8;
    swift_bridgeObjectRelease(v8);
    v10 = HIBYTE(v9) & 0xF;
    if ((v9 & 0x2000000000000000) == 0)
      v10 = v7 & 0xFFFFFFFFFFFFLL;
    if (v10)
    {
      v11 = objc_msgSend((id)objc_opt_self(BUBag), "defaultBag");
      v12 = objc_msgSend(objc_allocWithZone((Class)AMSURLRequestEncoder), "initWithBag:", v11);

      objc_msgSend(v12, "setDialogOptions:", 1);
      objc_msgSend(v12, "setRequestEncoding:", 2);
      objc_msgSend(v12, "setCompressRequestBody:", 1);
      URL._bridgeToObjectiveC()(v13);
      v15 = v14;
      v16 = v57;
      v17 = sub_10003F198(&v56, v57);
      v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v16);
      v19 = objc_msgSend(v12, "requestWithMethod:URL:parameters:", 4, v15, v18);

      swift_unknownObjectRelease(v18);
      *(_QWORD *)&v54 = 0;
      v20 = objc_msgSend(v19, "resultWithError:", &v54);

      v21 = (void *)v54;
      if (v20)
      {
        v22 = (void *)objc_opt_self(AMSURLSession);
        v23 = v21;
        v24 = objc_msgSend(v22, "defaultSession");
        v25 = objc_msgSend(v24, "dataTaskPromiseWithRequest:", v20);

        *(_QWORD *)&v54 = 0;
        v26 = objc_msgSend(v25, "resultWithError:", &v54);

        v27 = v54;
        if (v26)
        {
          v28 = (id)v54;
          v29 = objc_msgSend(v26, "object");
          if (v29)
          {
            v30 = v29;
            _bridgeAnyObjectToAny(_:)(v29);
            swift_unknownObjectRelease(v30);
          }
          else
          {
            memset(v53, 0, sizeof(v53));
          }
          sub_10004C7B4((uint64_t)v53, (uint64_t)&v54);
          if (*((_QWORD *)&v55 + 1))
          {
            if ((swift_dynamicCast(&v52, &v54, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
            {
              v49 = v52;
              v50 = (uint64_t *)(v1 + OBJC_IVAR___BKLibraryBookUpdateCountOperation_result);
              swift_beginAccess(v50, &v54, 1, 0);
              v51 = *v50;
              *v50 = v49;

              swift_bridgeObjectRelease(v51);
            }
            else
            {

            }
          }
          else
          {

            sub_10004A7B8((uint64_t)&v54);
          }
LABEL_29:
          _s5Books15CurrentPageViewVwxx_0(&v56);
          return;
        }
        v39 = (id)v54;
        v37 = _convertNSErrorToError(_:)(v27);

        swift_willThrow(v40);
      }
      else
      {
        v36 = (id)v54;
        v37 = _convertNSErrorToError(_:)(v21);

        swift_willThrow(v38);
      }
      if (qword_1009CDEE0 != -1)
        swift_once(&qword_1009CDEE0, sub_1003360C8);
      v41 = type metadata accessor for Logger(0);
      sub_100048F64(v41, (uint64_t)qword_1009DBAC0);
      swift_errorRetain(v37);
      v42 = swift_errorRetain(v37);
      v43 = Logger.logObject.getter(v42);
      v44 = static os_log_type_t.error.getter(v43);
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc(12, -1);
        v46 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v45 = 138412290;
        swift_errorRetain(v37);
        v47 = _swift_stdlib_bridgeErrorToNSError(v37);
        *(_QWORD *)&v54 = v47;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, (char *)&v54 + 8, v45 + 4, v45 + 12);
        *v46 = v47;
        swift_errorRelease(v37);
        swift_errorRelease(v37);
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Encountered error: %@", v45, 0xCu);
        v48 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
        swift_arrayDestroy(v46, 1, v48);
        swift_slowDealloc(v46, -1, -1);
        swift_slowDealloc(v45, -1, -1);

        swift_errorRelease(v37);
      }
      else
      {

        swift_errorRelease(v37);
        swift_errorRelease(v37);
        swift_errorRelease(v37);

      }
      goto LABEL_29;
    }
    _s5Books15CurrentPageViewVwxx_0(&v56);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
    swift_bridgeObjectRelease(v4);
    sub_10004A7B8((uint64_t)&v54);
  }
  if (qword_1009CDEE0 != -1)
    swift_once(&qword_1009CDEE0, sub_1003360C8);
  v31 = type metadata accessor for Logger(0);
  v32 = sub_100048F64(v31, (uint64_t)qword_1009DBAC0);
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.default.getter(v33);
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "Empty request body", v35, 2u);
    swift_slowDealloc(v35, -1, -1);
  }

}

void LibraryBookUpdateCountOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.LibraryBookUpdateCountOperation", 37, "init()", 6, 0);
  __break(1u);
}

id LibraryBookUpdateCountOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibraryBookUpdateCountOperation(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_100336D18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t inited;
  _QWORD *v47;
  _OWORD v50[2];
  _BYTE v51[104];
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;

  v56 = _swiftEmptyArrayStorage;
  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
  {
LABEL_84:
    if (qword_1009CDEE0 != -1)
      goto LABEL_91;
    goto LABEL_85;
  }
  v2 = a1 + 32;
  swift_bridgeObjectRetain(a1);
  v3 = 0;
  v4 = _swiftEmptyArrayStorage;
  while (1)
  {
    v5 = *(_QWORD *)(v2 + 8 * v3);
    *(_QWORD *)&v50[0] = 0x644965726F7473;
    *((_QWORD *)&v50[0] + 1) = 0xE700000000000000;
    swift_bridgeObjectRetain(v5);
    AnyHashable.init<A>(_:)(v50, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v5 + 16) && (v6 = sub_1000561E8((uint64_t)&v52), (v7 & 1) != 0))
    {
      sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v54);
    }
    else
    {
      v54 = 0u;
      v55 = 0u;
    }
    sub_1000569AC((uint64_t)&v52);
    if (*((_QWORD *)&v55 + 1))
      break;
    swift_bridgeObjectRelease(v5);
    sub_10004A7B8((uint64_t)&v54);
LABEL_4:
    if (++v3 == v1)
    {
      swift_bridgeObjectRelease(a1);
      goto LABEL_84;
    }
  }
  if ((swift_dynamicCast(v50, &v54, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
    v16 = v5;
LABEL_21:
    swift_bridgeObjectRelease(v16);
    goto LABEL_4;
  }
  v8 = *((_QWORD *)&v50[0] + 1);
  v9 = HIBYTE(*((_QWORD *)&v50[0] + 1)) & 0xFLL;
  v10 = *(_QWORD *)&v50[0] & 0xFFFFFFFFFFFFLL;
  if ((*((_QWORD *)&v50[0] + 1) & 0x2000000000000000) != 0)
    v11 = HIBYTE(*((_QWORD *)&v50[0] + 1)) & 0xFLL;
  else
    v11 = *(_QWORD *)&v50[0] & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRelease(v5);
    v16 = v8;
    goto LABEL_21;
  }
  if ((*((_QWORD *)&v50[0] + 1) & 0x1000000000000000) != 0)
  {
    v13 = sub_100327700(*(uint64_t *)&v50[0], *((uint64_t *)&v50[0] + 1), 10);
    v15 = v38;
    goto LABEL_46;
  }
  if ((*((_QWORD *)&v50[0] + 1) & 0x2000000000000000) == 0)
  {
    if ((*(_QWORD *)&v50[0] & 0x1000000000000000) != 0)
      v12 = (unsigned __int8 *)((*((_QWORD *)&v50[0] + 1) & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v12 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(*(_QWORD *)&v50[0], *((_QWORD *)&v50[0] + 1));
    v13 = (uint64_t)sub_1003276D8(v12, v10, 10);
    v15 = v14 & 1;
LABEL_46:
    swift_bridgeObjectRelease(v8);
    if ((v15 & 1) != 0)
    {
      swift_bridgeObjectRelease(v5);
    }
    else
    {
      *(_QWORD *)&v54 = 0x64692D6D616461;
      *((_QWORD *)&v54 + 1) = 0xE700000000000000;
      AnyHashable.init<A>(_:)(&v54, &type metadata for String, &protocol witness table for String);
      *((_QWORD *)&v55 + 1) = &type metadata for Int;
      *(_QWORD *)&v54 = v13;
      sub_10004CFC4(&v54, v50);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      sub_1002C436C(v50, (uint64_t)&v52, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease(0x8000000000000000);
      sub_1000569AC((uint64_t)&v52);
      *(_QWORD *)&v50[0] = 0xD000000000000012;
      *((_QWORD *)&v50[0] + 1) = 0x80000001007C05C0;
      AnyHashable.init<A>(_:)(v50, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v5 + 16))
      {
        v22 = sub_1000561E8((uint64_t)&v52);
        if ((v23 & 1) != 0)
        {
          sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v22, (uint64_t)&v54);
        }
        else
        {
          v54 = 0u;
          v55 = 0u;
        }
      }
      else
      {
        v54 = 0u;
        v55 = 0u;
      }
      swift_bridgeObjectRelease(v5);
      sub_1000569AC((uint64_t)&v52);
      if (*((_QWORD *)&v55 + 1))
      {
        if ((swift_dynamicCast(v50, &v54, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
        {
          v24 = sub_10032467C(*(_QWORD *)&v50[0]);
          if ((v25 & 1) == 0)
          {
            v26 = v24;
            *(_QWORD *)&v54 = 0xD00000000000001CLL;
            *((_QWORD *)&v54 + 1) = 0x80000001007C05A0;
            AnyHashable.init<A>(_:)(&v54, &type metadata for String, &protocol witness table for String);
            *((_QWORD *)&v55 + 1) = &type metadata for Int;
            *(_QWORD *)&v54 = v26;
            sub_10004CFC4(&v54, v50);
            v27 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
            sub_1002C436C(v50, (uint64_t)&v52, v27);
            swift_bridgeObjectRelease(0x8000000000000000);
            sub_1000569AC((uint64_t)&v52);
          }
        }
      }
      else
      {
        sub_10004A7B8((uint64_t)&v54);
      }
      v53 = sub_10004CFD4((uint64_t *)&unk_1009CEC70);
      *(_QWORD *)&v52 = _swiftEmptyDictionarySingleton;
      if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
        v4 = sub_1005B0474(0, v4[2] + 1, 1, v4);
      v29 = v4[2];
      v28 = v4[3];
      if (v29 >= v28 >> 1)
        v4 = sub_1005B0474((_QWORD *)(v28 > 1), v29 + 1, 1, v4);
      v4[2] = v29 + 1;
      sub_10004CFC4(&v52, &v4[4 * v29 + 4]);
      v56 = v4;
    }
    goto LABEL_4;
  }
  *(_QWORD *)&v52 = *(_QWORD *)&v50[0];
  *((_QWORD *)&v52 + 1) = *((_QWORD *)&v50[0] + 1) & 0xFFFFFFFFFFFFFFLL;
  if (LOBYTE(v50[0]) == 43)
  {
    if (!v9)
      goto LABEL_90;
    if (v9 == 1 || (BYTE1(v50[0]) - 48) > 9u)
      goto LABEL_43;
    v13 = (BYTE1(v50[0]) - 48);
    if (v9 == 2)
      goto LABEL_45;
    if ((BYTE2(v50[0]) - 48) <= 9u)
    {
      v13 = 10 * (BYTE1(v50[0]) - 48) + (BYTE2(v50[0]) - 48);
      v17 = v9 - 3;
      if (v17)
      {
        v18 = (unsigned __int8 *)&v52 + 3;
        while (1)
        {
          v19 = *v18 - 48;
          if (v19 > 9)
            goto LABEL_43;
          v20 = 10 * v13;
          if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63)
            goto LABEL_43;
          v13 = v20 + v19;
          if (__OFADD__(v20, v19))
            goto LABEL_43;
          v15 = 0;
          ++v18;
          if (!--v17)
            goto LABEL_46;
        }
      }
      goto LABEL_45;
    }
    goto LABEL_43;
  }
  if (LOBYTE(v50[0]) != 45)
  {
    if (v9 && (LOBYTE(v50[0]) - 48) <= 9u)
    {
      v13 = (LOBYTE(v50[0]) - 48);
      if (v9 == 1)
        goto LABEL_45;
      if ((BYTE1(v50[0]) - 48) <= 9u)
      {
        v13 = 10 * (LOBYTE(v50[0]) - 48) + (BYTE1(v50[0]) - 48);
        v30 = v9 - 2;
        if (v30)
        {
          v31 = (unsigned __int8 *)&v52 + 2;
          while (1)
          {
            v32 = *v31 - 48;
            if (v32 > 9)
              goto LABEL_43;
            v33 = 10 * v13;
            if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63)
              goto LABEL_43;
            v13 = v33 + v32;
            if (__OFADD__(v33, v32))
              goto LABEL_43;
            v15 = 0;
            ++v31;
            if (!--v30)
              goto LABEL_46;
          }
        }
        goto LABEL_45;
      }
    }
LABEL_43:
    v13 = 0;
    v15 = 1;
    goto LABEL_46;
  }
  if (v9)
  {
    if (v9 == 1 || (BYTE1(v50[0]) - 48) > 9u)
      goto LABEL_43;
    if (v9 == 2)
    {
      v15 = 0;
      v13 = -(uint64_t)(BYTE1(v50[0]) - 48);
      goto LABEL_46;
    }
    if ((BYTE2(v50[0]) - 48) > 9u)
      goto LABEL_43;
    v13 = -10 * (BYTE1(v50[0]) - 48) - (BYTE2(v50[0]) - 48);
    v34 = v9 - 3;
    if (v34)
    {
      v35 = (unsigned __int8 *)&v52 + 3;
      while (1)
      {
        v36 = *v35 - 48;
        if (v36 > 9)
          goto LABEL_43;
        v37 = 10 * v13;
        if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63)
          goto LABEL_43;
        v13 = v37 - v36;
        if (__OFSUB__(v37, v36))
          goto LABEL_43;
        v15 = 0;
        ++v35;
        if (!--v34)
          goto LABEL_46;
      }
    }
LABEL_45:
    v15 = 0;
    goto LABEL_46;
  }
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  swift_once(&qword_1009CDEE0, sub_1003360C8);
LABEL_85:
  v39 = type metadata accessor for Logger(0);
  sub_100048F64(v39, (uint64_t)qword_1009DBAC0);
  v40 = v56;
  swift_bridgeObjectRetain(v56);
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.default.getter(v42);
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v44 = 134217984;
    *(_QWORD *)&v52 = v40[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, (char *)&v52 + 8, v44 + 4, v44 + 12);
    swift_bridgeObjectRelease(v40);
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "# of local books: %ld", v44, 0xCu);
    swift_slowDealloc(v44, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(v40);
  }
  v45 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v45, v51);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)&v52 = 0x6F622D6C61636F6CLL;
  *((_QWORD *)&v52 + 1) = 0xEB00000000736B6FLL;
  AnyHashable.init<A>(_:)(&v52, &type metadata for String, &protocol witness table for String);
  swift_beginAccess(&v56, &v52, 0, 0);
  v47 = v56;
  *(_QWORD *)(inited + 96) = sub_10004CFD4((uint64_t *)&unk_1009DBB30);
  *(_QWORD *)(inited + 72) = v47;
  return sub_1000560A8(inited);
}

uint64_t sub_1003375A0()
{
  return type metadata accessor for LibraryBookUpdateCountOperation(0);
}

uint64_t sub_1003375A8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\b";
  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_10071C0D8;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t destroy for MenuBookmarkItem(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 16));
  swift_release(*(_QWORD *)(a1 + 32));
  return swift_unknownObjectWeakDestroy(a1 + 56);
}

uint64_t initializeWithCopy for MenuBookmarkItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v8 = a1 + 56;
  v9 = a2 + 56;
  v10 = v4;
  swift_retain(v6);
  swift_retain(v7);
  swift_unknownObjectWeakCopyInit(v8, v9);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for MenuBookmarkItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain(v7);
  swift_release(v8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain(v10);
  swift_release(v9);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectWeakCopyAssign(a1 + 56, a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t initializeWithTake for MenuBookmarkItem(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectWeakTakeInit(a1 + 56, a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for MenuBookmarkItem(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_release(v6);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v7);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectWeakTakeAssign(a1 + 56, a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for MenuBookmarkItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MenuBookmarkItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MenuBookmarkItem()
{
  return &type metadata for MenuBookmarkItem;
}

unint64_t sub_100337908(uint64_t a1)
{
  unint64_t result;

  result = sub_1002344F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10033792C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086CA74, 1);
}

uint64_t sub_10033793C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char v17;
  _QWORD *v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  char *v27;
  uint64_t v28;
  double (**v29)(char);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;

  v33 = a4;
  v9 = sub_10004CFD4(&qword_1009DBB58);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009DBB60);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_10004CFD4(&qword_1009DBB68);
  __chkstk_darwin(v32);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a2 & 1;
  v34 = a2;
  v35 = a3;
  sub_10004CFD4(&qword_1009D8450);
  v18 = State.wrappedValue.getter(&v36);
  if (v36 == 1)
    v19 = (a5 + 8.0) / a5;
  else
    v19 = 1.0;
  v20 = static UnitPoint.center.getter(v18);
  v22 = v21;
  v23 = sub_10004CFD4(&qword_1009DBB70);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v11, a1, v23);
  v24 = &v11[*(int *)(v9 + 36)];
  *(double *)v24 = v19;
  *((double *)v24 + 1) = v19;
  *((double *)v24 + 2) = v20;
  *((_QWORD *)v24 + 3) = v22;
  v25 = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)(1.0, 300.0, 20.0, 0.0);
  v34 = a2 & 1;
  v35 = a3;
  State.wrappedValue.getter(&v36);
  v26 = v36;
  sub_10000B5E4((uint64_t)v11, (uint64_t)v14, &qword_1009DBB58);
  v27 = &v14[*(int *)(v12 + 36)];
  *(_QWORD *)v27 = v25;
  v27[8] = v26;
  sub_100010960((uint64_t)v11, &qword_1009DBB58);
  v28 = swift_allocObject(&unk_1008FE558, 40, 7);
  *(double *)(v28 + 16) = a5;
  *(_BYTE *)(v28 + 24) = v17;
  *(_QWORD *)(v28 + 32) = a3;
  sub_10000B5E4((uint64_t)v14, (uint64_t)v16, &qword_1009DBB60);
  v29 = (double (**)(char))&v16[*(int *)(v32 + 36)];
  *v29 = sub_100338C00;
  v29[1] = (double (*)(char))v28;
  swift_retain(a3);
  sub_100010960((uint64_t)v14, &qword_1009DBB60);
  return sub_100338C50((uint64_t)v16, v33);
}

uint64_t sub_100337BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10033793C(a1, *(_BYTE *)(v2 + 8), *(_QWORD *)(v2 + 16), a2, *(double *)v2);
}

uint64_t sub_100337BC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  __n128 v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t ObjCClassFromMetadata;
  void *v65;
  id v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id v78;
  _QWORD *v79;
  void (*v80)(char *, uint64_t);
  double (*v81)(char *, uint64_t);
  uint64_t v82;
  void *v83;
  id v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  __n128 v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t OpaqueTypeConformance2;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106;
  uint64_t result;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  unint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  _QWORD v139[2];
  char *v140;
  _QWORD *v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  uint64_t v146;
  uint64_t v147;

  v2 = v1;
  v134 = a1;
  v133 = sub_10004CFD4(&qword_1009DBB40);
  __chkstk_darwin(v133);
  v135 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for Locale(0);
  v125 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v129 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v131 = (char *)&v112 - v6;
  v130 = type metadata accessor for String.LocalizationValue(0);
  v124 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v126 = (char *)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v127 = (char *)&v112 - v9;
  v123 = type metadata accessor for AccessibilityActionKind(0);
  v120 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v119 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_10004CFD4(&qword_1009D8460);
  v114 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v12 = (char *)&v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_10004CFD4(&qword_1009D4B20);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v14 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_10004CFD4(&qword_1009D4B28);
  __chkstk_darwin(v118);
  v16 = (char *)&v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_10004CFD4(&qword_1009D4B30);
  __chkstk_darwin(v136);
  v121 = (void (*)(char *, char *, uint64_t))((char *)&v112 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v137 = sub_10004CFD4(&qword_1009DBB48);
  v128 = *(_QWORD *)(v137 - 8);
  __chkstk_darwin(v137);
  v138 = (char *)&v112 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(char **)(v1 + 16);
  KeyPath = swift_getKeyPath(&unk_10071C1A0);
  v140 = v19;
  v21 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v140, KeyPath, v21);
  swift_release(KeyPath);
  v22 = 0xE800000000000000;
  if (v19[264])
    v22 = 0xED00006C6C69662ELL;
  v113 = v22;
  sub_100338920(v1, (uint64_t)&v140);
  v23 = swift_allocObject(&unk_1008FE460, 88, 7);
  sub_1002344B4((uint64_t)&v140, v23 + 16);
  v139[0] = 0;
  v139[1] = 0xE000000000000000;
  v122 = sub_1001F2108();
  Button<>.init<A>(_:action:)(v139, sub_100338958, v23, &type metadata for String, v122);
  v24 = *(void **)v2;
  if (*(_QWORD *)v2)
  {
    v25 = *(_QWORD **)(v2 + 40);
    v26 = *(_QWORD *)(v2 + 48);
    v27 = *(char **)(v2 + 16);
    v28 = swift_getKeyPath(&unk_10071C1A0);
    v140 = v27;
    v29 = v24;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v140, v28, v21);
    swift_release(v28);
    if ((v27[264] & 1) != 0)
      v31 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
    else
      v31 = static Color.primary.getter(v30);
    v32 = v31;
    v33 = *(char **)(v2 + 16);
    v34 = swift_getKeyPath(&unk_10071C1A0);
    v140 = v33;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v140, v34, v21);
    swift_release(v34);
    if (v33[264] == 1)
      v36 = static Color.red.getter(v35);
    else
      v36 = 0;
    v140 = v29;
    v141 = v25;
    v142 = v26;
    v143 = 0x6B72616D6B6F6F62;
    v37 = v113;
    v144 = v113;
    v145 = 1;
    v146 = v32;
    v147 = v36;
    v38 = sub_100030B34((unint64_t *)&qword_1009F4060, &qword_1009D8460, (uint64_t)&protocol conformance descriptor for Button<A>);
    v39 = sub_10024C4C0();
    v40 = v115;
    View.buttonStyle<A>(_:)(&v140, v115, &type metadata for IconButtonStyle, v38, v39);

    sub_100209510(0x6B72616D6B6F6F62, v37);
    swift_release(v32);
    v41 = swift_release(v36);
    (*(void (**)(char *, uint64_t, __n128))(v114 + 8))(v12, v40, v41);
    v42 = *(_QWORD *)(v2 + 40);
    LOBYTE(v139[0]) = 0;
    State.init(wrappedValue:)(&v140, v139, &type metadata for Bool);
    LOBYTE(v38) = (_BYTE)v140;
    v43 = v141;
    v44 = v116;
    v45 = v117;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v16, v14, v117);
    v46 = v118;
    v47 = &v16[*(int *)(v118 + 36)];
    *(_QWORD *)v47 = v42;
    v47[8] = v38;
    *((_QWORD *)v47 + 2) = v43;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v45);
    sub_100338920(v2, (uint64_t)&v140);
    v48 = swift_allocObject(&unk_1008FE488, 88, 7);
    v49 = sub_1002344B4((uint64_t)&v140, v48 + 16);
    v50 = v119;
    static AccessibilityActionKind.default.getter(v49);
    v51 = sub_10024C520();
    v52 = (uint64_t)v121;
    View.accessibilityAction(_:_:)(v50, sub_100338964, v48, v46, v51);
    v53 = swift_release(v48);
    (*(void (**)(char *, uint64_t, __n128))(v120 + 8))(v50, v123, v53);
    sub_100010960((uint64_t)v16, &qword_1009D4B28);
    v54 = *(_QWORD **)(v2 + 32);
    LOBYTE(v140) = *(_BYTE *)(v2 + 24);
    v141 = v54;
    sub_10004CFD4(&qword_1009D8450);
    State.wrappedValue.getter(v139);
    sub_100338920(v2, (uint64_t)&v140);
    v55 = swift_allocObject(&unk_1008FE4B0, 88, 7);
    sub_1002344B4((uint64_t)&v140, v55 + 16);
    v120 = sub_10024C618();
    View.onChange<A>(of:initial:_:)(v139, 0, sub_100338970, v55, v136, &type metadata for Bool, v120, &protocol witness table for Bool);
    swift_release(v55);
    sub_100010960(v52, &qword_1009D4B30);
    v56 = *(_QWORD **)(v2 + 32);
    LOBYTE(v140) = *(_BYTE *)(v2 + 24);
    v141 = v56;
    State.wrappedValue.getter(v139);
    v57 = v127;
    if (LOBYTE(v139[0]) == 1)
    {
      v58 = String.LocalizationValue.init(stringLiteral:)(28239, 0xE200000000000000);
      v59 = v131;
      static Locale.current.getter(v58);
      v60 = v124;
      v61 = v126;
      v62 = v130;
      v121 = *(void (**)(char *, char *, uint64_t))(v124 + 16);
      v121(v126, v57, v130);
      v63 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v63);
      v65 = (void *)objc_opt_self(NSBundle);
      v123 = ObjCClassFromMetadata;
      v66 = objc_msgSend(v65, "bundleForClass:", ObjCClassFromMetadata);
      v67 = v125;
      v68 = v129;
      v69 = v62;
      v70 = v132;
      v118 = *(_QWORD *)(v125 + 16);
      ((void (*)(char *, char *, uint64_t))v118)(v129, v59, v132);
      v71 = String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, v66, v68, "Accessibility label for the bookmark button being in the on state in the action menu.", 85, 2);
    }
    else
    {
      v73 = String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
      v59 = v131;
      static Locale.current.getter(v73);
      v60 = v124;
      v61 = v126;
      v74 = v130;
      v121 = *(void (**)(char *, char *, uint64_t))(v124 + 16);
      v121(v126, v57, v130);
      v75 = type metadata accessor for BundleFinder();
      v76 = swift_getObjCClassFromMetadata(v75);
      v77 = (void *)objc_opt_self(NSBundle);
      v123 = v76;
      v78 = objc_msgSend(v77, "bundleForClass:", v76);
      v67 = v125;
      v68 = v129;
      v69 = v74;
      v70 = v132;
      v118 = *(_QWORD *)(v125 + 16);
      ((void (*)(char *, char *, uint64_t))v118)(v129, v59, v132);
      v71 = String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, v78, v68, "Accessibility label for the bookmark button being in the off state in the action menu.", 86, 2);
    }
    v119 = (char *)v71;
    v79 = v72;
    v80 = *(void (**)(char *, uint64_t))(v67 + 8);
    v80(v59, v70);
    v81 = *(double (**)(char *, uint64_t))(v60 + 8);
    v81(v57, v69);
    v82 = String.LocalizationValue.init(stringLiteral:)(0x6B72616D6B6F6F42, 0xE800000000000000);
    static Locale.current.getter(v82);
    v121(v61, v57, v69);
    type metadata accessor for BundleFinder();
    v83 = (void *)objc_opt_self(NSBundle);
    v84 = objc_msgSend(v83, "bundleForClass:", v123);
    ((void (*)(char *, char *, uint64_t))v118)(v68, v59, v70);
    v85 = String.init(localized:table:bundle:locale:comment:)(v61, 0, 0, v84, v68, "Accessibility label for the bookmark button in the action menu.", 63, 2);
    v87 = v86;
    v80(v59, v70);
    v88.n128_f64[0] = v81(v57, v69);
    v140 = (char *)v85;
    v141 = v87;
    v89 = v122;
    v90 = Text.init<A>(_:)(&v140, &type metadata for String, v122, v88);
    v92 = v91;
    v94 = v93;
    v140 = (char *)v136;
    v96 = v95 & 1;
    v141 = &type metadata for Bool;
    v142 = v120;
    v143 = (uint64_t)&protocol witness table for Bool;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v140, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    v98 = (uint64_t)v135;
    View.accessibility(label:)(v90, v92, v96, v94, v137, OpaqueTypeConformance2);
    sub_1001F5B28(v90, v92, v96);
    v99 = swift_bridgeObjectRelease(v94);
    v140 = v119;
    v141 = v79;
    v100 = Text.init<A>(_:)(&v140, &type metadata for String, v89, v99);
    v102 = v101;
    v104 = v103;
    v106 = v105 & 1;
    ModifiedContent<>.accessibility(value:)(v100, v101, v105 & 1, v103, v133);
    sub_1001F5B28(v100, v102, v106);
    swift_bridgeObjectRelease(v104);
    sub_100010960(v98, &qword_1009DBB40);
    return (*(uint64_t (**)(char *, uint64_t))(v128 + 8))(v138, v137);
  }
  else
  {
    v108 = *(_QWORD *)(v2 + 8);
    v109 = type metadata accessor for ChromeStyle(0);
    v110 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v108, v109, v110, v111);
    __break(1u);
  }
  return result;
}

uint64_t sub_1003387BC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(a1 + 56);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(a1 + 64);
    ObjectType = swift_getObjectType(result, v3);
    (*(void (**)(uint64_t, uint64_t))(v5 + 80))(ObjectType, v5);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

uint64_t sub_10033880C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;

  v2 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v7);
  LOBYTE(v7) = (v7 & 1) == 0;
  State.wrappedValue.setter(&v7, v2);
  result = swift_unknownObjectWeakLoadStrong(a1 + 56);
  if (result)
  {
    v4 = result;
    v5 = *(_QWORD *)(a1 + 64);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 80))(ObjectType, v5);
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

double sub_1003388C0(uint64_t a1, char *a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  _BYTE v7[9];
  uint64_t v8;

  v3 = *a2;
  v4 = *(_QWORD *)(a3 + 32);
  v7[1] = *(_BYTE *)(a3 + 24);
  v8 = v4;
  v7[0] = v3;
  v5 = sub_10004CFD4(&qword_1009D8450);
  *(_QWORD *)&result = State.wrappedValue.setter(v7, v5).n128_u64[0];
  return result;
}

uint64_t sub_100338920(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MenuBookmarkItem(a2, a1);
  return a2;
}

uint64_t sub_100338958()
{
  uint64_t v0;

  return sub_1003387BC(v0 + 16);
}

uint64_t sub_100338964()
{
  uint64_t v0;

  return sub_10033880C(v0 + 16);
}

double sub_100338970(uint64_t a1, char *a2)
{
  uint64_t v2;

  return sub_1003388C0(a1, a2, v2 + 16);
}

uint64_t destroy for HoverActionMenuItem(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 16));
}

uint64_t _s5Books19HoverActionMenuItemVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  swift_retain(v3);
  return a1;
}

uint64_t assignWithCopy for HoverActionMenuItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

uint64_t assignWithTake for HoverActionMenuItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for HoverActionMenuItem(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HoverActionMenuItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HoverActionMenuItem()
{
  return &type metadata for HoverActionMenuItem;
}

unint64_t sub_100338B0C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009DBB50;
  if (!qword_1009DBB50)
  {
    v1 = sub_100030B74(&qword_1009DBB40);
    v2[0] = sub_100030B74(&qword_1009D4B30);
    v2[1] = &type metadata for Bool;
    v2[2] = sub_10024C618();
    v2[3] = &protocol witness table for Bool;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>, 1);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DBB50);
  }
  return result;
}

uint64_t sub_100338BCC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086CA9C, 1);
}

uint64_t sub_100338BDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_100338C00(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  _BYTE v5[9];
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 32);
  v5[1] = *(_BYTE *)(v1 + 24);
  v6 = v2;
  v5[0] = a1;
  v3 = sub_10004CFD4(&qword_1009D8450);
  *(_QWORD *)&result = State.wrappedValue.setter(v5, v3).n128_u64[0];
  return result;
}

uint64_t sub_100338C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DBB68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100338C9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DBB78;
  if (!qword_1009DBB78)
  {
    v1 = sub_100030B74(&qword_1009DBB68);
    sub_100338D08();
    sub_100338E10();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DBB78);
  }
  return result;
}

unint64_t sub_100338D08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DBB80;
  if (!qword_1009DBB80)
  {
    v1 = sub_100030B74(&qword_1009DBB60);
    sub_100338D8C();
    sub_100030B34(&qword_1009D4070, &qword_1009D4078, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DBB80);
  }
  return result;
}

unint64_t sub_100338D8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DBB88;
  if (!qword_1009DBB88)
  {
    v1 = sub_100030B74(&qword_1009DBB58);
    sub_100030B34(&qword_1009DBB90, &qword_1009DBB70, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DBB88);
  }
  return result;
}

unint64_t sub_100338E10()
{
  unint64_t result;

  result = qword_1009DBB98;
  if (!qword_1009DBB98)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _HoverRegionModifier, &type metadata for _HoverRegionModifier);
    atomic_store(result, (unint64_t *)&qword_1009DBB98);
  }
  return result;
}

void *BookReaderLayoutController.defaultStatusBarHeight.getter()
{
  uint64_t v0;
  void *result;
  void *v2;

  result = (void *)swift_unknownObjectWeakLoadStrong(v0 + 328);
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "defaultStatusBarHeight");
    return (void *)swift_unknownObjectRelease(v2);
  }
  return result;
}

double BookReaderLayoutController.contentRect.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 16, v2, 0, 0);
  return *(double *)(v0 + 16);
}

uint64_t BookReaderLayoutController.contentRect.setter(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  _QWORD v11[4];
  _BYTE v12[24];

  swift_beginAccess(v4 + 16, v12, 1, 0);
  *(double *)(v4 + 16) = a1;
  *(double *)(v4 + 24) = a2;
  *(double *)(v4 + 32) = a3;
  *(double *)(v4 + 40) = a4;
  v9 = *(_QWORD *)(v4 + 48);
  *(double *)v11 = a1;
  *(double *)&v11[1] = a2;
  *(double *)&v11[2] = a3;
  *(double *)&v11[3] = a4;
  swift_retain(v9);
  CurrentValueSubject.send(_:)(v11);
  return swift_release(v9);
}

void (*BookReaderLayoutController.contentRect.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess(v1 + 16, v3, 33, 0);
  return sub_100338FAC;
}

void sub_100338FAC(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[4];
    v5 = *(_QWORD *)(v4 + 48);
    v6 = *(_OWORD *)(v4 + 32);
    *(_OWORD *)v3 = *(_OWORD *)(v4 + 16);
    *((_OWORD *)v3 + 1) = v6;
    swift_retain(v5);
    CurrentValueSubject.send(_:)(v3);
    swift_release(v5);
  }
  free(v3);
}

uint64_t sub_100339004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  id v10[2];
  _BYTE v11[24];

  v1 = v0;
  v2 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ThemeAppearanceManager(0);
  v6 = static ThemeAppearanceManager.shared.getter();
  swift_beginAccess(v1 + 88, v11, 0, 0);
  ThemeAppearanceManager.traitCollection.setter(*(id *)(v1 + 88));
  swift_release(v6);
  v10[0] = *(id *)(v1 + 88);
  v10[1] = &protocol witness table for UITraitCollection;
  v7 = v10[0];
  PassthroughSubject.send(_:)(v10);

  BookContentUserInterfaceStyle.init(traitCollection:)(*(id *)(v1 + 88));
  CurrentValueSubject.send(_:)(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id BookReaderLayoutController.traitCollection.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return *(id *)(v0 + 88);
}

void BookReaderLayoutController.traitCollection.setter(void *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  _BYTE v5[24];

  swift_beginAccess(v1 + 88, v5, 1, 0);
  v3 = *(void **)(v1 + 88);
  *(_QWORD *)(v1 + 88) = a1;
  v4 = a1;

  sub_100339004();
}

uint64_t (*BookReaderLayoutController.traitCollection.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess(v1 + 88, a1, 33, 0);
  return sub_1003391CC;
}

uint64_t sub_1003391CC(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess(a1);
  if ((a2 & 1) == 0)
    return sub_100339004();
  return result;
}

double BookReaderLayoutController.menuOuterMargin.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 96, v2, 0, 0);
  return *(double *)(v0 + 96);
}

uint64_t BookReaderLayoutController.menuOuterMargin.setter(double a1, double a2, double a3, double a4)
{
  double *v4;
  uint64_t result;
  _BYTE v10[24];

  result = swift_beginAccess(v4 + 12, v10, 1, 0);
  v4[12] = a1;
  v4[13] = a2;
  v4[14] = a3;
  v4[15] = a4;
  return result;
}

uint64_t (*BookReaderLayoutController.menuOuterMargin.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 96, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t BookReaderLayoutController.actionButtonLayout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 128;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10002E418(v3, a1);
}

uint64_t BookReaderLayoutController.actionButtonLayout.setter(__int128 *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + 128);
  swift_beginAccess(v3, v5, 33, 0);
  _s5Books15CurrentPageViewVwxx_0(v3);
  sub_100022840(a1, (uint64_t)v3);
  return swift_endAccess(v5);
}

uint64_t (*BookReaderLayoutController.actionButtonLayout.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 128, a1, 33, 0);
  return j__swift_endAccess;
}

double BookReaderLayoutController.safeAreaInsets.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 168, v2, 0, 0);
  return *(double *)(v0 + 168);
}

uint64_t BookReaderLayoutController.safeAreaInsets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;
  uint64_t result;
  _BYTE v10[24];

  result = swift_beginAccess(v4 + 21, v10, 1, 0);
  v4[21] = a1;
  v4[22] = a2;
  v4[23] = a3;
  v4[24] = a4;
  return result;
}

uint64_t (*BookReaderLayoutController.safeAreaInsets.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 168, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t BookReaderLayoutController.safeAreaInsetsPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4(&qword_1009DBBA0);
  v1 = sub_100030B34(&qword_1009DBBA8, &qword_1009DBBA0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

double BookReaderLayoutController.contentInsets.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 208, v2, 0, 0);
  return *(double *)(v0 + 208);
}

uint64_t BookReaderLayoutController.contentInsets.setter(double a1, double a2, double a3, double a4)
{
  double *v4;
  _QWORD v10[4];
  _BYTE v11[24];

  swift_beginAccess(v4 + 26, v11, 1, 0);
  v4[26] = a1;
  v4[27] = a2;
  v4[28] = a3;
  v4[29] = a4;
  *(double *)v10 = a1;
  *(double *)&v10[1] = a2;
  *(double *)&v10[2] = a3;
  *(double *)&v10[3] = a4;
  return PassthroughSubject.send(_:)(v10);
}

void (*BookReaderLayoutController.contentInsets.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess(v1 + 208, v3, 33, 0);
  return sub_1003395C0;
}

void sub_1003395C0(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  __int128 v5;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[4];
    v5 = *(_OWORD *)(v4 + 224);
    *(_OWORD *)v3 = *(_OWORD *)(v4 + 208);
    *((_OWORD *)v3 + 1) = v5;
    PassthroughSubject.send(_:)(v3);
  }
  free(v3);
}

uint64_t BookReaderLayoutController.closeBookInteracting.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 240, v2, 0, 0);
  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t BookReaderLayoutController.closeBookInteracting.setter(char a1)
{
  uint64_t v1;
  uint64_t result;
  _BYTE v4[24];

  result = swift_beginAccess(v1 + 240, v4, 1, 0);
  *(_BYTE *)(v1 + 240) = a1;
  return result;
}

uint64_t (*BookReaderLayoutController.closeBookInteracting.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 240, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t BookReaderLayoutController.contentRectPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009F0060);
  v1 = sub_100030B34(&qword_1009DBBB0, (uint64_t *)&unk_1009F0060, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t BookReaderLayoutController.contentInsetsPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4(&qword_1009DBBB8);
  v1 = sub_100030B34(&qword_1009DBBC0, &qword_1009DBBB8, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t BookReaderLayoutController.layoutSizePublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4(&qword_1009DBBC8);
  v1 = sub_100030B34(&qword_1009DBBD0, &qword_1009DBBC8, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t BookReaderLayoutController.layoutEnvironmentPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4(&qword_1009DBBD8);
  v1 = sub_100030B34(&qword_1009DBBE0, &qword_1009DBBD8, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t BookReaderLayoutController.userInterfaceStylePublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4(&qword_1009DBBE8);
  v1 = sub_100030B34(&qword_1009DBBF0, &qword_1009DBBE8, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t BookReaderLayoutController.isLowLight.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + 304);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + 296), a2);
  return dispatch thunk of LightLevelControlling.isLowLight.getter(ObjectType, v3) & 1;
}

uint64_t BookReaderLayoutController.isLowLightPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 304);
  ObjectType = swift_getObjectType();
  v7 = dispatch thunk of LightLevelControlling.isLowLightPublisher.getter(ObjectType, v1);
  v3 = sub_10004CFD4(&qword_1009D9D30);
  v4 = sub_100030B34(&qword_1009E7730, &qword_1009D9D30, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v5 = Publisher.eraseToAnyPublisher()(v3, v4);
  swift_release(v7);
  return v5;
}

_QWORD *BookReaderLayoutController.applicationForegroundState.getter@<X0>(_QWORD *a1@<X8>)
{
  return CurrentValueSubject.value.getter(a1);
}

uint64_t BookReaderLayoutController.applicationForegroundStatePublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4(&qword_1009DBBF8);
  v1 = sub_100030B34(&qword_1009DBC00, &qword_1009DBBF8, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

Swift::Void __swiftcall BookReaderLayoutController.willEnterForeground()()
{
  sub_100339A50((unsigned int *)&enum case for BookContentApplicationForegroundState.foreground(_:), (SEL *)&selRef_willEnterForeground);
}

Swift::Void __swiftcall BookReaderLayoutController.didEnterBackground()()
{
  sub_100339A50((unsigned int *)&enum case for BookContentApplicationForegroundState.background(_:), (SEL *)&selRef_didEnterBackground);
}

void *sub_100339A50(unsigned int *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *result;
  void *v10;
  uint64_t v11;

  v5 = type metadata accessor for BookContentApplicationForegroundState(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD))(v8 + 104))(v7, *a1);
  CurrentValueSubject.value.setter(v7);
  result = (void *)swift_unknownObjectWeakLoadStrong(v2 + 328);
  if (result)
  {
    v10 = result;
    objc_msgSend(result, *a2);
    return (void *)swift_unknownObjectRelease(v10);
  }
  return result;
}

BOOL BookReaderLayoutController.isCompactHeight.getter()
{
  return sub_100339B14((SEL *)&selRef_verticalSizeClass);
}

BOOL BookReaderLayoutController.isCompactWidth.getter()
{
  return sub_100339B14((SEL *)&selRef_horizontalSizeClass);
}

BOOL sub_100339B14(SEL *a1)
{
  uint64_t v1;
  _BYTE v4[24];

  swift_beginAccess(v1 + 88, v4, 0, 0);
  return objc_msgSend(*(id *)(v1 + 88), *a1) == (id)1;
}

BOOL BookReaderLayoutController.isDark.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return objc_msgSend(*(id *)(v0 + 88), "userInterfaceStyle") == (id)2;
}

double BookReaderLayoutController.layoutSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72);
}

BOOL BookReaderLayoutController.isPortrait.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 72) < *(double *)(v0 + 80);
}

void *BookReaderLayoutController.layoutEnvironment.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  _BYTE v4[24];

  swift_beginAccess(v0 + 88, v4, 0, 0);
  v1 = *(void **)(v0 + 88);
  v2 = v1;
  return v1;
}

double BookReaderLayoutController.infoBarHeight.getter()
{
  if (qword_1009CDF10 != -1)
    swift_once(&qword_1009CDF10, sub_10033A828);
  return *(double *)&qword_100A1E610;
}

double sub_100339C48()
{
  return 12.0;
}

uint64_t sub_100339C54(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  swift_unownedRetainStrong(a2);
  v7 = a2[32];
  swift_retain(v7);
  swift_release(a2);
  v10[0] = v5;
  v10[1] = v6;
  PassthroughSubject.send(_:)(v10);
  swift_release(v7);
  v8 = swift_unownedRetainStrong(a2);
  a2[7] = v3;
  a2[8] = v4;
  a2[9] = v5;
  a2[10] = v6;
  return swift_release(v8);
}

void sub_100339CD4(void *a1, uint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  void *v20;
  id v21;
  _BYTE v22[24];
  _QWORD v23[4];
  char v24;
  _QWORD v25[4];
  char v26;

  swift_unownedRetainStrong(a2);
  swift_beginAccess(a2 + 88, v22, 1, 0);
  v20 = *(void **)(a2 + 88);
  *(_QWORD *)(a2 + 88) = a1;
  v21 = a1;

  sub_100339004();
  swift_release(a2);

  swift_unownedRetainStrong(a2);
  *(double *)v23 = a3;
  *(double *)&v23[1] = a4;
  *(double *)&v23[2] = a5;
  *(double *)&v23[3] = a6;
  v24 = 0;
  *(double *)v25 = a7;
  *(double *)&v25[1] = a8;
  *(double *)&v25[2] = a9;
  *(double *)&v25[3] = a10;
  v26 = 0;
  sub_10033AA74((uint64_t)v23, (uint64_t)v25);
  swift_release(a2);
}

void sub_100339DBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  _OWORD v27[2];
  char v28;
  _OWORD v29[2];
  char v30;

  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  if (v9)
  {
    v10 = swift_unownedRetainStrong(a2);
    v11 = *(_QWORD *)(a2 + 288);
    swift_release(v10);
    if (v9 != v11)
    {
      v12 = swift_unownedRetainStrong(a2);
      *(_QWORD *)(a2 + 288) = v9;
      swift_release(v12);
      swift_unownedRetainStrong(a2);
      memset(v27, 0, sizeof(v27));
      v28 = 1;
      memset(v29, 0, sizeof(v29));
      v30 = 1;
      sub_10033AA74((uint64_t)v27, (uint64_t)v29);
      swift_release(a2);
    }
  }
  else
  {
    ContentLayoutLogger.getter(v6);
    v13 = swift_unownedRetain(a2);
    v14 = swift_unownedRetain(v13);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v29[0] = v18;
      *(_DWORD *)v17 = 136446210;
      v26 = v17 + 4;
      v19 = swift_unownedRetainStrong(a2);
      v20 = *(_QWORD *)(a2 + 288);
      v21 = swift_release(v19);
      v22 = BEBookLayoutMode.description.getter(v20, v21);
      v24 = v23;
      *(_QWORD *)&v27[0] = sub_100040F58(v22, v23, (uint64_t *)v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v27, (char *)v27 + 8, v26, v17 + 12);
      swift_bridgeObjectRelease(v24);
      swift_unownedRelease(a2);
      swift_unownedRelease(a2);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {
      swift_unownedRelease(a2);
      swift_unownedRelease(a2);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

double BookReaderLayoutController.computedEdgeInsets.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 288) == 2)
    return UIEdgeInsetsZero.top;
  else
    return BookReaderLayoutController.hostInsets.getter();
}

void BookReaderLayoutController.updateMenuMargin(safeAreaInsets:)(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  double v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  double *v38;
  uint64_t v39;
  char *v40;
  double *v41;
  uint64_t v42;
  char v43[24];
  char v44[24];

  v6 = type metadata accessor for Logger(0);
  v42 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v39 - v13;
  v15 = type metadata accessor for UserInterfaceSizeClass(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v40 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v39 - v19;
  *(_QWORD *)&v21 = swift_beginAccess(v3 + 88, v44, 0, 0).n128_u64[0];
  v41 = (double *)v3;
  UserInterfaceSizeClass.init(_:)(objc_msgSend(*(id *)(v3 + 88), "horizontalSizeClass", v21));
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v22(v14, 1, v15) == 1)
  {
    v11 = v14;
LABEL_5:
    v24 = sub_10033AA34((uint64_t)v11);
    v25 = ContentLayoutLogger.getter(v24);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.info.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Cannot calculate margin without size classes", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v6);
    return;
  }
  v39 = v6;
  v23 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v23(v20, v14, v15);
  UserInterfaceSizeClass.init(_:)(objc_msgSend(*(id *)(v3 + 88), "verticalSizeClass"));
  if (v22(v11, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
    v6 = v39;
    goto LABEL_5;
  }
  v29 = (uint64_t)v40;
  v23(v40, v11, v15);
  if (qword_1009CE628 != -1)
    swift_once(&qword_1009CE628, sub_100479520);
  v30 = sub_100479EFC((uint64_t)v20, v29, a2, a3);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v37 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  v37(v29, v15);
  v37((uint64_t)v20, v15);
  v38 = v41;
  swift_beginAccess(v41 + 12, v43, 1, 0);
  v38[12] = v30;
  *((_QWORD *)v38 + 13) = v32;
  *((_QWORD *)v38 + 14) = v34;
  *((_QWORD *)v38 + 15) = v36;
}

uint64_t BookReaderLayoutController.userInterfaceStyle.getter()
{
  uint64_t v0;
  _BYTE v2[24];

  swift_beginAccess(v0 + 88, v2, 0, 0);
  return BookContentUserInterfaceStyle.init(traitCollection:)(*(id *)(v0 + 88));
}

uint64_t BookReaderLayoutController.deinit()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 200));
  swift_release(*(_QWORD *)(v0 + 248));
  swift_release(*(_QWORD *)(v0 + 256));
  swift_release(*(_QWORD *)(v0 + 264));
  swift_release(*(_QWORD *)(v0 + 272));
  swift_release(*(_QWORD *)(v0 + 280));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 296));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 312));
  sub_1001FE9A0(v0 + 328);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 344));
  return v0;
}

uint64_t BookReaderLayoutController.__deallocating_deinit()
{
  uint64_t v0;

  BookReaderLayoutController.deinit();
  return swift_deallocClassInstance(v0, 352, 7);
}

double BookReaderLayoutController.infoBarTopInset.getter()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  id v3;
  char v4;
  double result;
  id v6;
  char v7;
  char v8;
  _BYTE v9[24];

  v1 = v0;
  v2 = (id *)(v0 + 88);
  swift_beginAccess(v0 + 88, v9, 0, 0);
  v3 = *(id *)(v0 + 88);
  v4 = UITraitCollection.isCompactHeight.getter();

  result = 10.0;
  if ((v4 & 1) == 0)
  {
    v6 = *v2;
    v7 = UITraitCollection.isCompactWidth.getter();

    result = 0.0;
    if ((v7 & 1) == 0)
    {
      v8 = BEBookLayoutMode.isScroll.getter(*(_QWORD *)(v1 + 288), 0.0);
      result = 8.0;
      if ((v8 & 1) != 0)
        return 0.0;
    }
  }
  return result;
}

double BookReaderLayoutController.infoBarBottomInset.getter(double a1)
{
  uint64_t v1;
  char v2;
  double result;

  v2 = BEBookLayoutMode.isScroll.getter(*(_QWORD *)(v1 + 288), a1);
  result = 12.0;
  if ((v2 & 1) != 0)
    return 0.0;
  return result;
}

BOOL sub_10033A53C(uint64_t a1, uint64_t a2)
{
  return sub_10033A554(a1, a2, (SEL *)&selRef_verticalSizeClass);
}

BOOL sub_10033A548(uint64_t a1, uint64_t a2)
{
  return sub_10033A554(a1, a2, (SEL *)&selRef_horizontalSizeClass);
}

BOOL sub_10033A554(uint64_t a1, uint64_t a2, SEL *a3)
{
  uint64_t v3;
  _BYTE v6[24];

  swift_beginAccess(v3 + 88, v6, 0, 0);
  return objc_msgSend(*(id *)(v3 + 88), *a3) == (id)1;
}

double sub_10033A5A4()
{
  return BookReaderLayoutController.hostInsets.getter();
}

double BookReaderLayoutController.hostInsets.getter()
{
  uint64_t v0;
  double v1;
  double v2;
  void *Strong;
  void *v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v9;
  _BYTE v10[24];

  if (qword_1009CDF10 != -1)
    swift_once(&qword_1009CDF10, sub_10033A828);
  v1 = *(double *)&qword_100A1E610;
  v2 = v1 + sub_10033A838();
  if (objc_msgSend(*(id *)(v0 + 88), "verticalSizeClass", swift_beginAccess(v0 + 88, v10, 0, 0).n128_f64[0]) == (id)1)
    goto LABEL_18;
  if (objc_msgSend(*(id *)(v0 + 88), "horizontalSizeClass") == (id)1)
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 328);
    if (Strong)
    {
      v4 = Strong;
      objc_msgSend(Strong, "defaultStatusBarHeight");
      v6 = v5;
      swift_unknownObjectRelease(v4);
    }
    else
    {
      v6 = 0.0;
    }
    v2 = v2 + v6;
    swift_beginAccess(v0 + 168, &v9, 0, 0);
    if (*(double *)(v0 + 184) > 0.0)
    {
LABEL_18:
      if (qword_1009CDEF8 != -1)
        swift_once(&qword_1009CDEF8, sub_10033A7F8);
      return v2;
    }
    if (qword_1009CDF08 != -1)
      swift_once(&qword_1009CDF08, sub_10033A818);
  }
  else
  {
    if (*(double *)(v0 + 72) >= *(double *)(v0 + 80))
    {
      if (qword_1009CDEF0 != -1)
        swift_once(&qword_1009CDEF0, sub_10033A7E8);
      v7 = qword_100A1E5F0;
    }
    else
    {
      if (qword_1009CDEE8 != -1)
        swift_once(&qword_1009CDEE8, sub_10033A7D8);
      v7 = qword_100A1E5E8;
    }
    v2 = v2 + *(double *)&v7;
    if (qword_1009CDF00 != -1)
      swift_once(&qword_1009CDF00, sub_10033A808);
  }
  return v2;
}

void sub_10033A7D8()
{
  qword_100A1E5E8 = 0x4046000000000000;
}

void sub_10033A7E8()
{
  qword_100A1E5F0 = 0x4038000000000000;
}

void sub_10033A7F8()
{
  qword_100A1E5F8 = 0x4038000000000000;
}

void sub_10033A808()
{
  qword_100A1E600 = 0x4034000000000000;
}

void sub_10033A818()
{
  qword_100A1E608 = 0x4030000000000000;
}

void sub_10033A828()
{
  qword_100A1E610 = 0x403C000000000000;
}

double sub_10033A838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id *v6;
  id v7;
  char v8;
  double v9;
  double v10;
  id v11;
  char v12;
  char v13;
  double v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  double v20;
  _BYTE v21[24];

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = (id *)(v0 + 88);
  swift_beginAccess(v0 + 88, v21, 0, 0);
  v7 = *(id *)(v0 + 88);
  v8 = UITraitCollection.isCompactHeight.getter();

  v10 = 10.0;
  if ((v8 & 1) == 0)
  {
    v11 = *v6;
    v12 = UITraitCollection.isCompactWidth.getter();

    v10 = 0.0;
    if ((v12 & 1) == 0)
    {
      v13 = BEBookLayoutMode.isScroll.getter(*(_QWORD *)(v1 + 288), v9);
      v9 = 8.0;
      if ((v13 & 1) != 0)
        v10 = 0.0;
      else
        v10 = 8.0;
    }
  }
  if ((BEBookLayoutMode.isScroll.getter(*(_QWORD *)(v1 + 288), v9) & 1) != 0)
    v14 = 0.0;
  else
    v14 = 12.0;
  v15 = ContentLayoutLogger.getter();
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    *(_DWORD *)v18 = 134218240;
    v20 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v18 + 4, v18 + 12);
    *(_WORD *)(v18 + 12) = 2048;
    v20 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, v21, v18 + 14, v18 + 22);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "InfoBar top inset %f bottom inset %f", (uint8_t *)v18, 0x16u);
    swift_slowDealloc(v18, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  return v10 + v14;
}

uint64_t type metadata accessor for BookReaderLayoutController()
{
  return objc_opt_self(_TtC5Books26BookReaderLayoutController);
}

uint64_t sub_10033AA34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10033AA74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double v5;
  double v6;
  float64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  double v13;
  double v14;
  double v15;
  float64_t v16;
  int v17;
  void *v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  char v27;
  void *v28;
  void *v29;
  double v30;
  float64x2_t v31;
  unint64_t v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  float64_t v39;
  float64_t v40;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  float64_t v45;
  float64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  double v50;
  double v51;
  double v52;
  float64x2_t v53;
  float64x2_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  float64_t v58;
  float64_t v59;
  float64_t v60;
  float64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[5];
  _BYTE v66[40];
  double v67[4];
  char v68;
  _BYTE v69[48];
  CGRect v70;

  v3 = v2;
  *(_QWORD *)&v54.f64[0] = a2;
  sub_100025B3C(a1, (uint64_t)v65, &qword_1009D4AD0);
  v5 = *(double *)&v65[1];
  v52 = *(double *)v65;
  v6 = *(double *)&v65[2];
  v7 = *(double *)&v65[3];
  v8 = type metadata accessor for AnalyticsEvent.Reading(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v3 + 328);
  if (Strong)
  {
    v12 = (void *)Strong;
    sub_100025B3C(a1, (uint64_t)v69, &qword_1009D4AD0);
    v50 = v5;
    v51 = v6;
    if ((v69[32] & 1) != 0)
    {
      swift_beginAccess(v3 + 16, &v64, 0, 0);
      v13 = *(double *)(v3 + 16);
      v14 = *(double *)(v3 + 24);
      v15 = *(double *)(v3 + 32);
      v16 = *(double *)(v3 + 40);
    }
    else
    {
      v13 = v52;
      v14 = v5;
      v15 = v6;
      v16 = v7;
    }
    *(double *)(v3 + 56) = v13;
    *(double *)(v3 + 64) = v14;
    *(double *)(v3 + 72) = v15;
    *(float64_t *)(v3 + 80) = v16;
    v17 = ((uint64_t (*)(void))CGRect.isLandscape.getter)() & 1;
    swift_beginAccess(v3 + 16, &v63, 1, 0);
    if (v17 != (CGRect.isLandscape.getter(*(double *)(v3 + 16), *(double *)(v3 + 24), *(double *)(v3 + 32), *(double *)(v3 + 40)) & 1)&& *(_QWORD *)(v3 + 312))
    {
      v53.f64[0] = v7;
      v18 = v12;
      v19 = *(_QWORD *)(v3 + 320);
      ObjectType = swift_getObjectType();
      swift_storeEnumTagMultiPayload(v10, v8, 7);
      v21 = v19;
      v12 = v18;
      v7 = v53.f64[0];
      dispatch thunk of ReadingAnalyticsEventSubmitting.submit(event:)(v10, ObjectType, v21);
      sub_10030A0A8((uint64_t)v10);
    }
    sub_100025B3C(*(uint64_t *)&v54.f64[0], (uint64_t)v67, (uint64_t *)&unk_1009DBF30);
    if ((v68 & 1) == 0)
    {
      v22 = v67[0];
      v23 = v67[1];
      v24 = v67[2];
      v25 = v67[3];
      if (v67[0] == 0.0)
      {
        swift_beginAccess(v3 + 88, &v55, 0, 0);
        v26 = *(id *)(v3 + 88);
        v27 = UITraitCollection.isCompactHeight.getter();

        if ((v27 & 1) == 0)
        {
          v28 = (void *)swift_unknownObjectWeakLoadStrong(v3 + 328);
          if (v28)
          {
            v29 = v28;
            objc_msgSend(v28, "defaultStatusBarHeight");
            v22 = v30;
            swift_unknownObjectRelease(v29);
          }
          else
          {
            v22 = 0.0;
          }
        }
      }
      swift_beginAccess(v3 + 168, &v56, 1, 0);
      *(double *)(v3 + 168) = v22;
      *(double *)(v3 + 176) = v23;
      *(double *)(v3 + 184) = v24;
      *(double *)(v3 + 192) = v25;
    }
    if (*(_QWORD *)(v3 + 288) == 2)
    {
      v31 = *(float64x2_t *)&UIEdgeInsetsZero.bottom;
      v53 = *(float64x2_t *)&UIEdgeInsetsZero.top;
      v54 = v31;
    }
    else
    {
      v53 = (float64x2_t)COERCE_UNSIGNED_INT64(BookReaderLayoutController.hostInsets.getter());
      v54 = (float64x2_t)v32;
    }
    v34 = v50;
    v33 = v51;
    sub_100025B3C(a1, (uint64_t)v66, &qword_1009D4AD0);
    if ((v66[32] & 1) != 0)
    {
      objc_msgSend(v12, "frame");
    }
    else
    {
      v35 = v52;
      v36 = v34;
      v37 = v33;
      v38 = v7;
    }
    v39 = v53.f64[1];
    v40 = v54.f64[1];
    v70.origin.x = sub_10001D044(v35, v36, v37, v38, v53.f64[0], v53.f64[1]);
    x = v70.origin.x;
    y = v70.origin.y;
    width = v70.size.width;
    height = v70.size.height;
    if (!CGRectEqualToRect(v70, *(CGRect *)(v3 + 16))
      || (swift_beginAccess(v3 + 208, &v57, 0, 0),
          (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(v3 + 208), v53), (int32x4_t)vceqq_f64(*(float64x2_t *)(v3 + 224), v54))), 0xFuLL))) & 1) == 0))
    {
      swift_beginAccess(v3 + 208, &v62, 1, 0);
      v46 = v53.f64[0];
      v45 = v54.f64[0];
      *(float64_t *)(v3 + 208) = v53.f64[0];
      *(float64_t *)(v3 + 216) = v39;
      *(float64_t *)(v3 + 224) = v45;
      *(float64_t *)(v3 + 232) = v40;
      v58 = v46;
      v59 = v39;
      v60 = v45;
      v61 = v40;
      PassthroughSubject.send(_:)(&v58);
      *(CGFloat *)(v3 + 16) = x;
      *(CGFloat *)(v3 + 24) = y;
      *(CGFloat *)(v3 + 32) = width;
      *(CGFloat *)(v3 + 40) = height;
      v47 = *(_QWORD *)(v3 + 48);
      v58 = x;
      v59 = y;
      v60 = width;
      v61 = height;
      swift_retain(v47);
      CurrentValueSubject.send(_:)(&v58);
      swift_release(v47);
    }
    *(_QWORD *)&v48 = swift_beginAccess(v3 + 168, &v58, 0, 0).n128_u64[0];
    BookReaderLayoutController.updateMenuMargin(safeAreaInsets:)(v48, *(double *)(v3 + 176), *(double *)(v3 + 184));
    swift_unknownObjectRelease(v12);
  }
}

ValueMetadata *type metadata accessor for BookReaderLayoutController.ActionButtonLayout()
{
  return &type metadata for BookReaderLayoutController.ActionButtonLayout;
}

double sub_10033AE6C(uint64_t a1, void *aBlock)
{
  uint64_t v2;
  void (*v3)(void (*)(uint64_t), uint64_t);
  void *v4;
  uint64_t v5;
  double result;

  v3 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v4 = _Block_copy(aBlock);
  v5 = swift_allocObject(&unk_1008FE860, 24, 7);
  *(_QWORD *)(v5 + 16) = v4;
  swift_retain(v2);
  v3(sub_10033FC74, v5);
  swift_release(v2);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

void sub_10033AEDC(uint64_t a1, uint64_t a2)
{
  Class isa;

  sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, Class))(a2 + 16))(a2, isa);

}

uint64_t sub_10033AF40(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

_QWORD *sub_10033AF78@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_10033FCF4();
  return EnvironmentValues.subscript.getter(a1, &type metadata for BuyButtonStyleKey, &type metadata for BuyButtonStyleKey, v2);
}

uint64_t sub_10033AFB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v10;

  v2 = type metadata accessor for BuyButtonView.Style(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v10 - v6;
  sub_100258C08(a1, (uint64_t)&v10 - v6);
  sub_100258C08((uint64_t)v7, (uint64_t)v4);
  v8 = sub_10033FCF4();
  EnvironmentValues.subscript.setter(v4, &type metadata for BuyButtonStyleKey, &type metadata for BuyButtonStyleKey, v8);
  return sub_100258C4C((uint64_t)v7);
}

char *sub_10033B06C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  char *v7;
  void *v8;
  id v9;
  _BYTE v11[120];

  v1 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController____lazy_storage___miniPlayerView;
  v2 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController____lazy_storage___miniPlayerView);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController____lazy_storage___miniPlayerView);
  }
  else
  {
    v4 = v0;
    sub_10033B128((uint64_t)v11);
    v5 = objc_allocWithZone((Class)type metadata accessor for AudiobookNowPlayingMiniTouchView());
    v6 = sub_100519BE0((uint64_t)v11, 0.0, 0.0, 0.0, 0.0);
    v7 = &v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_delegate];
    *((_QWORD *)v7 + 1) = &off_1008FE730;
    swift_unknownObjectWeakAssign(v7, v4);
    v8 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v6;
    v3 = v6;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_10033B128(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  id v13;
  id v14;
  BOOL v15;
  id v16;
  id v17;
  char v18;
  __int16 v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  __int16 v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v3 = sub_10033D3D8();
  v34 = v4;
  v35 = v3;
  v37 = v5;
  v7 = v6;
  v8 = objc_msgSend(v1, "traitCollection");
  v9 = objc_msgSend(v8, "preferredContentSizeCategory");

  v33 = static UIContentSizeCategory.>= infix(_:_:)(v9, UIContentSizeCategoryAccessibilityMedium);
  v10 = *(_QWORD *)&v1[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel];
  KeyPath = swift_getKeyPath(&unk_10071C4D0);
  v12 = swift_getKeyPath(&unk_10071C4F8);
  v32 = v10;
  static Published.subscript.getter(&v39, v10, KeyPath, v12);
  swift_release(KeyPath);
  swift_release(v12);
  v31 = v39;
  v36 = v7;
  v13 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRetain(v7).n128_f64[0]);
  v14 = objc_msgSend(v13, "verticalSizeClass");

  if (v14 == (id)1)
  {
    v15 = 1;
  }
  else
  {
    v16 = objc_msgSend(v1, "traitCollection");
    v17 = objc_msgSend(v16, "horizontalSizeClass");

    v15 = v17 == (id)1;
  }
  v18 = sub_10033D1F4();
  v20 = v19;
  v22 = v21;
  v23 = sub_10033D080();
  v25 = v24;
  v27 = v26;
  v28 = swift_getKeyPath(&unk_10071C518);
  v29 = swift_getKeyPath(&unk_10071C540);
  static Published.subscript.getter(&v38, v32, v28, v29);
  swift_release(v28);
  swift_release(v29);
  v30 = v38;
  *(_QWORD *)a1 = v31;
  *(_QWORD *)(a1 + 8) = v35;
  *(_QWORD *)(a1 + 16) = v34;
  *(_QWORD *)(a1 + 24) = v37;
  *(_QWORD *)(a1 + 32) = v36;
  *(_QWORD *)(a1 + 40) = v37;
  *(_QWORD *)(a1 + 48) = v36;
  *(_BYTE *)(a1 + 56) = v15;
  *(_BYTE *)(a1 + 57) = v33 & 1;
  *(_BYTE *)(a1 + 64) = v18 & 1;
  *(_BYTE *)(a1 + 72) = v20 & 1;
  *(_BYTE *)(a1 + 73) = HIBYTE(v20) & 1;
  *(_QWORD *)(a1 + 80) = v22;
  *(_BYTE *)(a1 + 88) = v23 & 1;
  *(_BYTE *)(a1 + 96) = v25 & 1;
  *(_BYTE *)(a1 + 97) = HIBYTE(v25) & 1;
  *(_QWORD *)(a1 + 104) = v27;
  *(_BYTE *)(a1 + 112) = v30;
}

void sub_10033B3F4()
{
  char *v0;
  char *v1;
  id v2;
  char *v3;
  char *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  objc_super v27;
  _OWORD v28[7];
  char v29;
  _OWORD v30[7];
  char v31;
  _OWORD v32[7];
  char v33;

  v27.receiver = v0;
  v27.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v27, "viewDidLoad");
  sub_10033B5C4(*(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel]);
  v1 = sub_10033B06C();
  v2 = objc_msgSend(objc_allocWithZone((Class)UIContextMenuInteraction), "initWithDelegate:", v0);
  objc_msgSend(v1, "addInteraction:", v2);

  v3 = sub_10033B06C();
  sub_10033B128((uint64_t)v28);
  v4 = &v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v5 = *(_OWORD *)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
  v7 = *(_OWORD *)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v6 = *(_OWORD *)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
  v30[2] = *(_OWORD *)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
  v30[3] = v5;
  v30[0] = v7;
  v30[1] = v6;
  v9 = *(_OWORD *)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
  v8 = *(_OWORD *)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
  v10 = *(_OWORD *)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
  v31 = v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
  v30[5] = v9;
  v30[6] = v8;
  v30[4] = v10;
  v11 = *(void **)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v12 = *(_QWORD *)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
  v13 = *(_QWORD *)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
  v14 = *(_QWORD *)&v3[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
  v15 = v28[0];
  v16 = v28[1];
  v17 = v28[3];
  *((_OWORD *)v4 + 2) = v28[2];
  *((_OWORD *)v4 + 3) = v17;
  *(_OWORD *)v4 = v15;
  *((_OWORD *)v4 + 1) = v16;
  v18 = v28[4];
  v19 = v28[5];
  v20 = v28[6];
  v4[112] = v29;
  *((_OWORD *)v4 + 5) = v19;
  *((_OWORD *)v4 + 6) = v20;
  *((_OWORD *)v4 + 4) = v18;
  sub_10033FD38((uint64_t)v30);
  sub_10033FD38((uint64_t)v28);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v12);

  v21 = *(_OWORD *)v4;
  v22 = *((_OWORD *)v4 + 1);
  v23 = *((_OWORD *)v4 + 3);
  v32[2] = *((_OWORD *)v4 + 2);
  v32[3] = v23;
  v32[0] = v21;
  v32[1] = v22;
  v24 = *((_OWORD *)v4 + 4);
  v25 = *((_OWORD *)v4 + 5);
  v26 = *((_OWORD *)v4 + 6);
  v33 = v4[112];
  v32[5] = v25;
  v32[6] = v26;
  v32[4] = v24;
  sub_10033FD38((uint64_t)v32);
  LOBYTE(v12) = sub_100665498((uint64_t)v30, (uint64_t)v32);
  sub_10033FD8C((uint64_t)v32);
  if ((v12 & 1) == 0)
    sub_10051C18C();
  sub_10033FD8C((uint64_t)v28);
  sub_10033FD8C((uint64_t)v30);

}

double sub_10033B5C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  double result;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  id v162;

  v159 = a1;
  v2 = sub_10004CFD4(&qword_1009D4D00);
  v3 = *(_QWORD *)(v2 - 8);
  v146 = v2;
  v147 = v3;
  __chkstk_darwin(v2);
  v144 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009DBFC8);
  v6 = *(_QWORD *)(v5 - 8);
  v148 = v5;
  v149 = v6;
  __chkstk_darwin(v5);
  v145 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_10004CFD4(&qword_1009D4D90);
  __chkstk_darwin(v141);
  v136 = (char *)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_10004CFD4(&qword_1009DE380);
  __chkstk_darwin(v138);
  v134 = (char *)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v133 = (char *)&v124 - v11;
  __chkstk_darwin(v12);
  v132 = (char *)&v124 - v13;
  v139 = sub_10004CFD4(&qword_1009D4D40);
  v140 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v135 = (char *)&v124 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_10004CFD4(&qword_1009D4D48);
  v143 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v137 = (char *)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = sub_10004CFD4(&qword_1009D4DB0);
  v151 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v130 = (char *)&v124 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = sub_10004CFD4(&qword_1009D4DB8);
  v150 = *(_QWORD *)(v155 - 8);
  __chkstk_darwin(v155);
  v131 = (char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_10004CFD4(&qword_1009D4D80);
  v129 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v126 = (char *)&v124 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10004CFD4(&qword_1009D4D88);
  v20 = *(_QWORD *)(v19 - 8);
  v152 = v19;
  v153 = v20;
  __chkstk_darwin(v19);
  v127 = (char *)&v124 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v22);
  v24 = (char *)&v124 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_10004CFD4(&qword_1009D4DE8);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v124 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10004CFD4((uint64_t *)&unk_1009D4DF0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (char *)&v124 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__artwork, &v162, 33, 0);
  v33 = sub_10004CFD4(&qword_1009D19F0);
  Published.projectedValue.getter(v33);
  swift_endAccess(&v162);
  v34 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v162 = (id)static OS_dispatch_queue.main.getter(v34);
  v35 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v156 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v157 = v35;
  v156(v24, 1, 1, v35);
  v36 = sub_100030B34((unint64_t *)&unk_1009DE390, &qword_1009D4DE8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v161 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v162, v24, v25, v34, v36, v161);
  sub_100010960((uint64_t)v24, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  v37 = swift_allocObject(&unk_1008FE810, 24, 7);
  v38 = v160;
  swift_unknownObjectWeakInit(v37 + 16);
  v39 = sub_100030B34(&qword_1009DE3A0, (uint64_t *)&unk_1009D4DF0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v40 = Publisher<>.sink(receiveValue:)(sub_10033FDDC, v37, v29, v39);
  v41 = swift_release(v37);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v32, v29, v41);
  v42 = v38 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_cancellables;
  swift_beginAccess(v38 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_cancellables, &v162, 33, 0);
  AnyCancellable.store(in:)(v42);
  swift_endAccess(&v162);
  swift_release(v40);
  v43 = v159;
  swift_beginAccess(v159 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playButtonState, &v162, 33, 0);
  v44 = sub_10004CFD4((uint64_t *)&unk_1009D19B0);
  v45 = v126;
  Published.projectedValue.getter(v44);
  v46 = swift_endAccess(&v162);
  v47 = v34;
  v158 = v34;
  v162 = (id)static OS_dispatch_queue.main.getter(v46);
  v48 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v156;
  v49 = v157;
  v156(v24, 1, 1, v157);
  v50 = sub_100030B34((unint64_t *)&unk_1009D4E90, &qword_1009D4D80, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v51 = v127;
  v52 = v128;
  v53 = v47;
  v54 = v161;
  v55 = v45;
  Publisher.receive<A>(on:options:)(&v162, v24, v128, v53, v50, v161);
  v56 = (uint64_t)v24;
  sub_100010960((uint64_t)v24, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v129 + 8))(v55, v52);
  v57 = swift_allocObject(&unk_1008FE810, 24, 7);
  swift_unknownObjectWeakInit(v57 + 16);
  v58 = sub_100030B34((unint64_t *)&unk_1009DBFD0, &qword_1009D4D88, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v59 = v152;
  v60 = Publisher<>.sink(receiveValue:)(sub_10033FDE4, v57, v152, v58);
  v61 = swift_release(v57);
  (*(void (**)(char *, uint64_t, __n128))(v153 + 8))(v51, v59, v61);
  swift_beginAccess(v42, &v162, 33, 0);
  v62 = v42;
  AnyCancellable.store(in:)(v42);
  swift_endAccess(&v162);
  swift_release(v60);
  swift_beginAccess(v43 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skipBackwardInterval, &v162, 33, 0);
  v153 = sub_10004CFD4((uint64_t *)&unk_1009D4E40);
  v63 = v130;
  Published.projectedValue.getter(v153);
  v64 = swift_endAccess(&v162);
  v65 = v158;
  v162 = (id)static OS_dispatch_queue.main.getter(v64);
  v66 = v49;
  v48(v56, 1, 1, v49);
  v152 = sub_100030B34((unint64_t *)&unk_1009DBFE0, &qword_1009D4DB0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v67 = v131;
  v68 = v154;
  Publisher.receive<A>(on:options:)(&v162, v56, v154, v65, v152, v54);
  sub_100010960(v56, (uint64_t *)&unk_1009D4AE0);

  v151 = *(_QWORD *)(v151 + 8);
  ((void (*)(char *, uint64_t))v151)(v63, v68);
  v69 = swift_allocObject(&unk_1008FE810, 24, 7);
  swift_unknownObjectWeakInit(v69 + 16);
  v70 = sub_100030B34((unint64_t *)&unk_1009D4E50, &qword_1009D4DB8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v71 = v155;
  v129 = v70;
  v72 = Publisher<>.sink(receiveValue:)(sub_10033FDEC, v69, v155, v70);
  v73 = swift_release(v69);
  v150 = *(_QWORD *)(v150 + 8);
  ((void (*)(char *, uint64_t, __n128))v150)(v67, v71, v73);
  swift_beginAccess(v42, &v162, 33, 0);
  AnyCancellable.store(in:)(v42);
  swift_endAccess(&v162);
  swift_release(v72);
  swift_beginAccess(v159 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skipForwardInterval, &v162, 33, 0);
  Published.projectedValue.getter(v153);
  v74 = swift_endAccess(&v162);
  v75 = v158;
  v162 = (id)static OS_dispatch_queue.main.getter(v74);
  v124 = v56;
  v76 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v156;
  v156((char *)v56, 1, 1, v66);
  v77 = v154;
  Publisher.receive<A>(on:options:)(&v162, v56, v154, v75, v152, v161);
  sub_100010960(v56, (uint64_t *)&unk_1009D4AE0);

  ((void (*)(char *, uint64_t))v151)(v63, v77);
  v78 = swift_allocObject(&unk_1008FE810, 24, 7);
  swift_unknownObjectWeakInit(v78 + 16);
  v79 = v155;
  v80 = Publisher<>.sink(receiveValue:)(sub_10033FDF4, v78, v155, v70);
  v81 = swift_release(v78);
  ((void (*)(char *, uint64_t, __n128))v150)(v67, v79, v81);
  swift_beginAccess(v62, &v162, 33, 0);
  AnyCancellable.store(in:)(v62);
  swift_endAccess(&v162);
  swift_release(v80);
  v82 = v159;
  swift_beginAccess(v159 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playedInterval, &v162, 33, 0);
  Published.projectedValue.getter(v153);
  v83 = swift_endAccess(&v162);
  v84 = v158;
  v162 = (id)static OS_dispatch_queue.main.getter(v83);
  v85 = v124;
  v76(v124, 1, 1, v157);
  Publisher.receive<A>(on:options:)(&v162, v85, v77, v84, v152, v161);
  sub_100010960(v85, (uint64_t *)&unk_1009D4AE0);

  ((void (*)(char *, uint64_t))v151)(v63, v77);
  v86 = swift_allocObject(&unk_1008FE810, 24, 7);
  swift_unknownObjectWeakInit(v86 + 16);
  v87 = Publisher<>.sink(receiveValue:)(sub_10033FDFC, v86, v79, v129);
  v88 = swift_release(v86);
  ((void (*)(char *, uint64_t, __n128))v150)(v67, v79, v88);
  v125 = v62;
  swift_beginAccess(v62, &v162, 33, 0);
  AnyCancellable.store(in:)(v62);
  swift_endAccess(&v162);
  swift_release(v87);
  swift_beginAccess(v82 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__audiobookTitle, &v162, 33, 0);
  v89 = sub_10004CFD4(&qword_1009D19E0);
  v90 = v132;
  Published.projectedValue.getter(v89);
  swift_endAccess(&v162);
  swift_beginAccess(v82 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__authorName, &v162, 33, 0);
  v91 = v133;
  Published.projectedValue.getter(v89);
  swift_endAccess(&v162);
  swift_beginAccess(v82 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__chapterTitle, &v162, 33, 0);
  v92 = v134;
  Published.projectedValue.getter(v89);
  swift_endAccess(&v162);
  swift_beginAccess(v82 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isPreview, &v162, 33, 0);
  v93 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  v94 = v136;
  Published.projectedValue.getter(v93);
  swift_endAccess(&v162);
  v95 = sub_100030B34((unint64_t *)&unk_1009DBFF0, &qword_1009DE380, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v96 = sub_100030B34((unint64_t *)&unk_1009DE3D0, &qword_1009D4D90, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v97 = v135;
  v98 = Publishers.CombineLatest4.init(_:_:_:_:)(v90, v91, v92, v94, v138, v138, v138, v141, v95, v95, v95, v96);
  v99 = v158;
  v162 = (id)static OS_dispatch_queue.main.getter(v98);
  v100 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v156;
  v101 = v157;
  v156((char *)v85, 1, 1, v157);
  v102 = sub_100030B34(&qword_1009D4EC0, &qword_1009D4D40, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>);
  v103 = v137;
  v104 = v139;
  Publisher.receive<A>(on:options:)(&v162, v85, v139, v99, v102, v161);
  sub_100010960(v85, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v140 + 8))(v97, v104);
  v105 = swift_allocObject(&unk_1008FE810, 24, 7);
  swift_unknownObjectWeakInit(v105 + 16);
  v106 = swift_allocObject(&unk_1008FE8D8, 32, 7);
  *(_QWORD *)(v106 + 16) = sub_10033FE04;
  *(_QWORD *)(v106 + 24) = v105;
  v107 = sub_100030B34((unint64_t *)&unk_1009D4EC8, &qword_1009D4D48, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v108 = v142;
  v109 = Publisher<>.sink(receiveValue:)(sub_10033FE30, v106, v142, v107);
  v110 = swift_release(v106);
  (*(void (**)(char *, uint64_t, __n128))(v143 + 8))(v103, v108, v110);
  v111 = v125;
  swift_beginAccess(v125, &v162, 33, 0);
  AnyCancellable.store(in:)(v111);
  swift_endAccess(&v162);
  swift_release(v109);
  swift_beginAccess(v159 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__buyButtonProvider, &v162, 33, 0);
  v112 = sub_10004CFD4((uint64_t *)&unk_1009DC000);
  v113 = v144;
  Published.projectedValue.getter(v112);
  v114 = swift_endAccess(&v162);
  v162 = (id)static OS_dispatch_queue.main.getter(v114);
  v100(v85, 1, 1, v101);
  v115 = sub_100030B34(&qword_1009D4EF8, &qword_1009D4D00, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v117 = v145;
  v116 = v146;
  Publisher.receive<A>(on:options:)(&v162, v85, v146, v99, v115, v161);
  sub_100010960(v85, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v147 + 8))(v113, v116);
  v118 = swift_allocObject(&unk_1008FE810, 24, 7);
  swift_unknownObjectWeakInit(v118 + 16);
  v119 = sub_100030B34(&qword_1009DC010, &qword_1009DBFC8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v120 = v148;
  v121 = Publisher<>.sink(receiveValue:)(sub_10033FE64, v118, v148, v119);
  v122 = swift_release(v118);
  (*(void (**)(char *, uint64_t, __n128))(v149 + 8))(v117, v120, v122);
  swift_beginAccess(v111, &v162, 33, 0);
  AnyCancellable.store(in:)(v111);
  swift_endAccess(&v162);
  *(_QWORD *)&result = swift_release(v121).n128_u64[0];
  return result;
}

void sub_10033C74C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  char *v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t *v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;

  v2 = v1;
  v38 = sub_10004CFD4(&qword_1009D4F10);
  __chkstk_darwin(v38);
  v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for BuyButtonView.Style(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D4F18);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v39 = (uint64_t *)((char *)&v38 - v13);
  v14 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_buyButtonViewController;
  v15 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_buyButtonViewController];
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v16, "willMoveToParentViewController:", 0, v38);
    objc_msgSend(v16, "removeFromParentViewController");
    v17 = objc_msgSend(v16, "view");
    if (!v17)
    {
      __break(1u);
LABEL_10:
      __break(1u);
      return;
    }
    v18 = v17;
    objc_msgSend(v17, "removeFromSuperview");

    objc_msgSend(v16, "didMoveToParentViewController:", 0);
  }
  v19 = (uint64_t)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_buyButtonProvider];
  swift_beginAccess(&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_buyButtonProvider], v42, 33, 0);
  sub_100258BB8(a1, v19);
  swift_endAccess(v42);
  sub_10000B5E4(a1, (uint64_t)&v40, (uint64_t *)&unk_1009D4CE0);
  if (v41)
  {
    sub_100022840(&v40, (uint64_t)v42);
    v20 = (void **)sub_10003F198(v42, v43);
    sub_10033F520(*v20);
    sub_10003F198(v42, v43);
    v21 = sub_100205964();
    KeyPath = swift_getKeyPath(&unk_10071C6C8);
    sub_10033DE48((uint64_t)v8);
    sub_100258C08((uint64_t)v8, (uint64_t)v5 + *(int *)(v38 + 28));
    *v5 = KeyPath;
    v23 = v39;
    sub_10000B5E4((uint64_t)v5, (uint64_t)v39 + *(int *)(v9 + 36), &qword_1009D4F10);
    *v23 = v21;
    swift_retain(v21);
    sub_100010960((uint64_t)v5, &qword_1009D4F10);
    sub_100258C4C((uint64_t)v8);
    swift_release(v21);
    sub_10000B5E4((uint64_t)v23, (uint64_t)v11, &qword_1009D4F18);
    v24 = objc_allocWithZone((Class)sub_10004CFD4((uint64_t *)&unk_1009D4F20));
    v25 = (void *)UIHostingController.init(rootView:)(v11);
    UIHostingController.safeAreaRegions.setter(0);
    v26 = *(void **)&v2[v14];
    *(_QWORD *)&v2[v14] = v25;
    v27 = v25;

    v28 = *(_QWORD *)(*sub_10003F198(v42, v43) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor);
    v29 = *(_QWORD *)(v28 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
    swift_unknownObjectRetain(v28);
    swift_unknownObjectRetain(v29);
    sub_100344A18();
    swift_unknownObjectRelease(v29);
    sub_1004A9FC4();
    sub_1004A9D70();
    swift_unknownObjectRelease(v28);
    objc_msgSend(v27, "willMoveToParentViewController:", v2);
    objc_msgSend(v2, "addChildViewController:", v27);
    v30 = *(void **)&v2[v14];
    *(_QWORD *)&v2[v14] = v25;
    v31 = v27;

    v32 = objc_msgSend(v31, "view");
    if (v32)
    {
      v33 = v32;
      v34 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
      objc_msgSend(v33, "setBackgroundColor:", v34);

      v35 = sub_10033B06C();
      v36 = objc_msgSend(v31, "view");
      sub_10051BDE4(v36);

      objc_msgSend(v31, "didMoveToParentViewController:", v2);
      sub_100010960((uint64_t)v23, &qword_1009D4F18);
      _s5Books15CurrentPageViewVwxx_0(v42);
      return;
    }
    goto LABEL_10;
  }
  sub_100010960((uint64_t)&v40, (uint64_t *)&unk_1009D4CE0);
  v37 = sub_10033B06C();
  sub_10051BDE4(0);

}

uint64_t sub_10033CC94()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;

  v0 = sub_10033B06C();
  v1 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v2 = swift_allocObject(v1, 56, 7);
  *(_OWORD *)(v2 + 16) = xmmword_1007118D0;
  v3 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardButton];
  *(_QWORD *)(v2 + 32) = v3;
  v4 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardButton];
  *(_QWORD *)(v2 + 40) = v4;
  v5 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingButton];
  *(_QWORD *)(v2 + 48) = v5;
  v10 = v2;
  specialized Array._endMutation()(v2);
  v6 = v3;
  v7 = v4;
  v8 = v5;

  return v10;
}

void sub_10033CD44(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v2 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_springLoadedInteraction;
  v3 = *(void **)&v1[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_springLoadedInteraction];
  *(_QWORD *)&v1[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_springLoadedInteraction] = a1;
  v11 = a1;
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v1, "view");
    if (!v5)
    {
      __break(1u);
      goto LABEL_9;
    }
    v6 = v5;
    objc_msgSend(v5, "removeInteraction:", v4);

  }
  v7 = *(void **)&v1[v2];
  if (!v7)
  {
LABEL_7:

    return;
  }
  v8 = v7;
  v9 = objc_msgSend(v1, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "addInteraction:", v8);

    v3 = v8;
    v11 = v10;
    goto LABEL_7;
  }
LABEL_9:
  __break(1u);
}

void sub_10033CE30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_cancellables));
  sub_100010960(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_buyButtonProvider, (uint64_t *)&unk_1009D4CE0);

  sub_100010960(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_contextMenuAppearDate, &qword_1009D7440);
  v1 = v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

}

uint64_t sub_10033CF8C()
{
  return type metadata accessor for AudiobookNowPlayingMiniTouchViewController(0);
}

uint64_t type metadata accessor for AudiobookNowPlayingMiniTouchViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DBFA0;
  if (!qword_1009DBFA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AudiobookNowPlayingMiniTouchViewController);
  return result;
}

void sub_10033CFD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v6[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[1] = "(";
  v6[2] = &unk_10071C4A8;
  sub_10006CDD0(319);
  if (v3 <= 0x3F)
  {
    v6[3] = *(_QWORD *)(v2 - 8) + 64;
    v4 = type metadata accessor for Logger(319);
    if (v5 <= 0x3F)
    {
      v6[4] = *(_QWORD *)(v4 - 8) + 64;
      v6[5] = &unk_10071C4A8;
      v6[6] = &unk_10071C4A8;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 584);
    }
  }
}

uint64_t sub_10033D080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_10071C560);
  v3 = swift_getKeyPath(&unk_10071C588);
  static Published.subscript.getter(&v10, v1, KeyPath, v3);
  swift_release(KeyPath);
  result = swift_release(v3);
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v5 = swift_getKeyPath(&unk_10071C5A8);
  v6 = swift_getKeyPath(&unk_10071C5D0);
  static Published.subscript.getter(&v10, v1, v5, v6);
  swift_release(v5);
  swift_release(v6);
  v7 = v11;
  swift_bridgeObjectRelease(v11);
  if (!v7)
    return 1;
  v8 = swift_getKeyPath(&unk_10071C5F0);
  v9 = swift_getKeyPath(&unk_10071C618);
  static Published.subscript.getter(&v10, v1, v8, v9);
  swift_release(v8);
  swift_release(v9);
  return LOBYTE(v10);
}

uint64_t sub_10033D1F4()
{
  char *v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  double v14;
  uint64_t v15;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel];
  KeyPath = swift_getKeyPath(&unk_10071C638);
  v3 = swift_getKeyPath(&unk_10071C660);
  static Published.subscript.getter(&v14, v1, KeyPath, v3);
  swift_release(KeyPath);
  result = swift_release(v3);
  if ((~*(_QWORD *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v5 = swift_getKeyPath(&unk_10071C5A8);
  v6 = swift_getKeyPath(&unk_10071C5D0);
  static Published.subscript.getter(&v14, v1, v5, v6);
  swift_release(v5);
  swift_release(v6);
  v7 = v15;
  swift_bridgeObjectRelease(v15);
  if (!v7)
    return 1;
  v8 = swift_getKeyPath(&unk_10071C5F0);
  v9 = swift_getKeyPath(&unk_10071C618);
  static Published.subscript.getter(&v14, v1, v8, v9);
  swift_release(v8);
  swift_release(v9);
  if ((LOBYTE(v14) & 1) != 0)
    return 1;
  v10 = objc_msgSend(v0, "traitCollection");
  v11 = objc_msgSend(v10, "verticalSizeClass");

  if (v11 == (id)1)
    return 1;
  v12 = objc_msgSend(v0, "traitCollection");
  v13 = objc_msgSend(v12, "horizontalSizeClass");

  return v13 == (id)1;
}

uint64_t sub_10033D3D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = type metadata accessor for Locale(0);
  v29 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - v12;
  v14 = *(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_10071C5F0);
  v16 = swift_getKeyPath(&unk_10071C618);
  static Published.subscript.getter(&v30, v14, KeyPath, v16);
  swift_release(KeyPath);
  swift_release(v16);
  if (v30 == 1)
  {
    v17 = swift_getKeyPath(&unk_10071C680);
    v18 = swift_getKeyPath(&unk_10071C6A8);
    static Published.subscript.getter(&v30, v14, v17, v18);
    swift_release(v17);
    swift_release(v18);
    v28 = v30;
    v19 = String.LocalizationValue.init(stringLiteral:)(0x656C706D6153, 0xE600000000000000);
    static Locale.current.getter(v19);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    v20 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
    v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v23 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v3, v6, v1);
    String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v22, v3, "Subtitle in audiobook mini player view when listening to an audiobook sample/preview", 84, 2);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v1);
    v24 = *(void (**)(char *, uint64_t))(v8 + 8);
    v25 = v28;
    v24(v13, v7);
  }
  else
  {
    v25 = sub_1001EF350();
    sub_10044B6D4(1);
  }
  return v25;
}

void sub_10033D684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;
  char v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  id v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  char v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  void *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  _OWORD v80[7];
  char v81;
  _OWORD v82[7];
  char v83;
  _OWORD v84[7];
  char v85;
  _OWORD v86[7];
  char v87;

  v71 = sub_10033D3D8();
  v1 = v0;
  v78 = v2;
  v79 = v3;
  v4 = sub_10033B06C();
  v5 = &v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v6 = *(void **)&v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v7 = *(_QWORD *)&v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
  v8 = *(_QWORD *)&v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
  v61 = *(_QWORD *)&v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 40];
  v63 = *(_QWORD *)&v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 24];
  v9 = v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 56];
  v57 = v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
  v59 = v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 57];
  v53 = v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 73];
  v55 = v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 72];
  v10 = *(_QWORD *)&v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
  v11 = v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 88];
  v12 = v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
  v52 = v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 97];
  v51 = *(_QWORD *)&v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 104];
  v50 = v4[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
  v67 = v6;
  v13 = *(_OWORD *)v5;
  v14 = *((_OWORD *)v5 + 1);
  v15 = *((_OWORD *)v5 + 3);
  v84[2] = *((_OWORD *)v5 + 2);
  v84[3] = v15;
  v84[0] = v13;
  v84[1] = v14;
  v16 = *((_OWORD *)v5 + 4);
  v17 = *((_OWORD *)v5 + 5);
  v18 = *((_OWORD *)v5 + 6);
  v85 = v5[112];
  v84[5] = v17;
  v84[6] = v18;
  v84[4] = v16;
  v73 = *((_QWORD *)v5 + 2);
  v75 = *(void **)v5;
  v69 = *((_QWORD *)v5 + 4);
  v65 = *((_QWORD *)v5 + 6);
  *(_QWORD *)v5 = v6;
  *((_QWORD *)v5 + 1) = v71;
  *((_QWORD *)v5 + 2) = v1;
  *((_QWORD *)v5 + 3) = v63;
  *((_QWORD *)v5 + 4) = v7;
  *((_QWORD *)v5 + 5) = v61;
  *((_QWORD *)v5 + 6) = v8;
  v5[56] = v9;
  v5[57] = v59;
  v5[64] = v57;
  v5[72] = v55;
  v5[73] = v53;
  *((_QWORD *)v5 + 10) = v10;
  v5[88] = v11;
  v5[96] = v12;
  v5[97] = v52;
  *((_QWORD *)v5 + 13) = v51;
  v5[112] = v50;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v1);
  sub_10033FD38((uint64_t)v84);
  v19 = v67;
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v65);
  swift_bridgeObjectRelease(v69);
  swift_bridgeObjectRelease(v73);

  v20 = *(_OWORD *)v5;
  v21 = *((_OWORD *)v5 + 1);
  v22 = *((_OWORD *)v5 + 3);
  v86[2] = *((_OWORD *)v5 + 2);
  v86[3] = v22;
  v86[0] = v20;
  v86[1] = v21;
  v23 = *((_OWORD *)v5 + 4);
  v24 = *((_OWORD *)v5 + 5);
  v25 = *((_OWORD *)v5 + 6);
  v87 = v5[112];
  v86[5] = v24;
  v86[6] = v25;
  v86[4] = v23;
  sub_10033FD38((uint64_t)v86);
  LOBYTE(v5) = sub_100665498((uint64_t)v84, (uint64_t)v86);
  sub_10033FD8C((uint64_t)v86);
  if ((v5 & 1) == 0)
    sub_10051C18C();
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v1);

  sub_10033FD8C((uint64_t)v84);
  v26 = sub_10033B06C();
  swift_bridgeObjectRelease(v1);
  v27 = &v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v28 = *(void **)&v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v29 = *(_QWORD *)&v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
  v30 = *(_QWORD *)&v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
  v68 = *(_QWORD *)&v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 8];
  v70 = *(_QWORD *)&v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 40];
  v31 = v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 56];
  v32 = v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 57];
  v33 = v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
  v34 = v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 72];
  v66 = v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 73];
  v64 = *(_QWORD *)&v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
  v60 = v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
  v62 = v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 88];
  v58 = v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 97];
  v56 = *(_QWORD *)&v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 104];
  v54 = v26[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
  v74 = v28;
  swift_bridgeObjectRetain(v29);
  v35 = *(_OWORD *)v27;
  v36 = *((_OWORD *)v27 + 1);
  v37 = *((_OWORD *)v27 + 3);
  v80[2] = *((_OWORD *)v27 + 2);
  v80[3] = v37;
  v80[0] = v35;
  v80[1] = v36;
  v38 = *((_OWORD *)v27 + 4);
  v39 = *((_OWORD *)v27 + 5);
  v40 = *((_OWORD *)v27 + 6);
  v81 = v27[112];
  v80[5] = v39;
  v80[6] = v40;
  v80[4] = v38;
  v76 = *((_QWORD *)v27 + 2);
  v77 = *(void **)v27;
  v72 = *((_QWORD *)v27 + 4);
  v41 = *((_QWORD *)v27 + 6);
  *(_QWORD *)v27 = v28;
  *((_QWORD *)v27 + 1) = v68;
  *((_QWORD *)v27 + 2) = v29;
  *((_QWORD *)v27 + 3) = v78;
  *((_QWORD *)v27 + 4) = v79;
  *((_QWORD *)v27 + 5) = v70;
  *((_QWORD *)v27 + 6) = v30;
  v27[56] = v31;
  v27[57] = v32;
  v27[64] = v33;
  v27[72] = v34;
  v27[73] = v66;
  *((_QWORD *)v27 + 10) = v64;
  v27[88] = v62;
  v27[96] = v60;
  v27[97] = v58;
  *((_QWORD *)v27 + 13) = v56;
  v27[112] = v54;
  swift_bridgeObjectRetain(v30);
  sub_10033FD38((uint64_t)v80);
  v42 = v74;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v79);
  swift_bridgeObjectRetain(v30);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v72);
  swift_bridgeObjectRelease(v76);

  v43 = *(_OWORD *)v27;
  v44 = *((_OWORD *)v27 + 1);
  v45 = *((_OWORD *)v27 + 3);
  v82[2] = *((_OWORD *)v27 + 2);
  v82[3] = v45;
  v82[0] = v43;
  v82[1] = v44;
  v46 = *((_OWORD *)v27 + 4);
  v47 = *((_OWORD *)v27 + 5);
  v48 = *((_OWORD *)v27 + 6);
  v83 = v27[112];
  v82[5] = v47;
  v82[6] = v48;
  v82[4] = v46;
  sub_10033FD38((uint64_t)v82);
  v49 = sub_100665498((uint64_t)v80, (uint64_t)v82);
  sub_10033FD8C((uint64_t)v82);
  if ((v49 & 1) == 0)
    sub_10051C18C();
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v79);
  swift_bridgeObjectRelease(v29);

  sub_10033FD8C((uint64_t)v80);
}

void sub_10033DAC4()
{
  char *v0;
  char v1;
  char *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char *v28;
  char v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  id v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  void *v57;
  id v58;
  void *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  char v67;
  _OWORD v68[7];
  char v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  char v77;
  _OWORD v78[7];
  char v79;

  v0 = sub_10033B06C();
  v1 = sub_10033D1F4();
  v2 = &v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v3 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v4 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
  v5 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
  v72 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
  v73 = v5;
  v70 = v3;
  v71 = v4;
  v6 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
  v7 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
  v8 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
  v77 = v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
  v75 = v7;
  v76 = v8;
  v74 = v6;
  v9 = v77;
  v10 = *((_QWORD *)&v72 + 1);
  v11 = v5;
  v12 = *((_QWORD *)&v71 + 1);
  v13 = v72;
  v14 = v71;
  v15 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v16 = *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
  v17 = *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
  v18 = *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
  v57 = (void *)v70;
  *(_OWORD *)v2 = v70;
  *((_QWORD *)v2 + 2) = v14;
  *((_QWORD *)v2 + 3) = v12;
  *((_QWORD *)v2 + 4) = v13;
  *((_QWORD *)v2 + 5) = v10;
  *((_QWORD *)v2 + 6) = v5;
  *((_WORD *)v2 + 28) = WORD4(v5);
  v2[64] = v1 & 1;
  v2[72] = v19 & 1;
  v2[73] = v20 & 1;
  *((_QWORD *)v2 + 10) = v21;
  v2[88] = BYTE8(v7);
  *((_WORD *)v2 + 48) = v8;
  *((_QWORD *)v2 + 13) = *((_QWORD *)&v8 + 1);
  v2[112] = v9;
  sub_10033FD38((uint64_t)&v70);
  sub_10033FD38((uint64_t)&v70);
  v58 = v57;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v16);

  v22 = *(_OWORD *)v2;
  v23 = *((_OWORD *)v2 + 1);
  v24 = *((_OWORD *)v2 + 3);
  v78[2] = *((_OWORD *)v2 + 2);
  v78[3] = v24;
  v78[0] = v22;
  v78[1] = v23;
  v25 = *((_OWORD *)v2 + 4);
  v26 = *((_OWORD *)v2 + 5);
  v27 = *((_OWORD *)v2 + 6);
  v79 = v2[112];
  v78[5] = v26;
  v78[6] = v27;
  v78[4] = v25;
  sub_10033FD38((uint64_t)v78);
  LOBYTE(v16) = sub_100665498((uint64_t)&v70, (uint64_t)v78);
  sub_10033FD8C((uint64_t)v78);
  if ((v16 & 1) == 0)
    sub_10051C18C();
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);

  sub_10033FD8C((uint64_t)&v70);
  v28 = sub_10033B06C();
  v29 = sub_10033D080();
  v30 = &v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v31 = *(_OWORD *)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v32 = *(_OWORD *)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
  v33 = *(_OWORD *)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
  v62 = *(_OWORD *)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
  v63 = v33;
  v60 = v31;
  v61 = v32;
  v34 = *(_OWORD *)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
  v35 = *(_OWORD *)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
  v36 = *(_OWORD *)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
  v67 = v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
  v65 = v35;
  v66 = v36;
  v64 = v34;
  v37 = v67;
  v38 = *((_QWORD *)&v62 + 1);
  v39 = v33;
  v40 = *((_QWORD *)&v61 + 1);
  v41 = v62;
  v42 = v61;
  v43 = *(void **)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v44 = *(_QWORD *)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
  v45 = *(_QWORD *)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
  v46 = *(_QWORD *)&v28[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
  v59 = (void *)v60;
  *(_OWORD *)v30 = v60;
  *((_QWORD *)v30 + 2) = v42;
  *((_QWORD *)v30 + 3) = v40;
  *((_QWORD *)v30 + 4) = v41;
  *((_QWORD *)v30 + 5) = v38;
  *((_QWORD *)v30 + 6) = v33;
  *((_WORD *)v30 + 28) = WORD4(v33);
  v30[64] = v34;
  *((_WORD *)v30 + 36) = WORD4(v34);
  *((_QWORD *)v30 + 10) = v35;
  v30[88] = v29 & 1;
  v30[96] = v47 & 1;
  v30[97] = v48 & 1;
  *((_QWORD *)v30 + 13) = v49;
  v30[112] = v37;
  sub_10033FD38((uint64_t)&v60);
  sub_10033FD38((uint64_t)&v60);
  v50 = v59;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v39);
  swift_bridgeObjectRelease(v46);
  swift_bridgeObjectRelease(v45);
  swift_bridgeObjectRelease(v44);

  v51 = *(_OWORD *)v30;
  v52 = *((_OWORD *)v30 + 1);
  v53 = *((_OWORD *)v30 + 3);
  v68[2] = *((_OWORD *)v30 + 2);
  v68[3] = v53;
  v68[0] = v51;
  v68[1] = v52;
  v54 = *((_OWORD *)v30 + 4);
  v55 = *((_OWORD *)v30 + 5);
  v56 = *((_OWORD *)v30 + 6);
  v69 = v30[112];
  v68[5] = v55;
  v68[6] = v56;
  v68[4] = v54;
  sub_10033FD38((uint64_t)v68);
  LOBYTE(v44) = sub_100665498((uint64_t)&v60, (uint64_t)v68);
  sub_10033FD8C((uint64_t)v68);
  if ((v44 & 1) == 0)
    sub_10051C18C();
  swift_bridgeObjectRelease(v39);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v42);

  sub_10033FD8C((uint64_t)&v60);
}

double sub_10033DE48@<D0>(uint64_t a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  _QWORD v21[5];
  uint64_t v22;

  v2 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksTransportControlsColor");
  v3 = Color.init(uiColor:)(v2);
  v4 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v5 = objc_allocWithZone((Class)UIColor);
  v21[4] = sub_10033DFF0;
  v22 = 0;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_10033F158;
  v21[3] = &unk_1008FE878;
  v6 = _Block_copy(v21);
  v7 = objc_msgSend(v5, "initWithDynamicProvider:", v6);
  _Block_release(v6);
  swift_release(v22);
  v8 = Color.init(uiColor:)(v7);
  swift_retain_n(v3, 2);
  swift_retain(v4);
  swift_retain(v8);
  v9.n128_u64[0] = 0.5;
  v10 = Color.opacity(_:)(v4, v9);
  v11.n128_u64[0] = 0.25;
  v12 = Color.opacity(_:)(v8, v11);
  swift_release(v8);
  swift_release(v4);
  swift_release(v3);
  v13 = a1 + *(int *)(type metadata accessor for BuyButtonView.Style(0) + 44);
  v14 = type metadata accessor for BlendMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)a1 = v3;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(a1 + 8) = _Q0;
  *(_QWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 32) = xmmword_1007147E0;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v12;
  result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  return result;
}

id sub_10033DFF0(void *a1)
{
  return sub_10033E008(a1, (SEL *)&selRef_blackColor);
}

id sub_10033DFFC(void *a1)
{
  return sub_10033E008(a1, (SEL *)&selRef_bc_booksGray);
}

id sub_10033E008(void *a1, SEL *a2)
{
  id v3;
  void *v4;
  SEL *v5;

  v3 = objc_msgSend(a1, "userInterfaceStyle");
  v4 = (void *)objc_opt_self(UIColor);
  v5 = (SEL *)&selRef_bc_booksSeparatorColor;
  if (v3 != (id)2)
    v5 = a2;
  return objc_msgSend(v4, *v5);
}

UIMenu sub_10033E05C()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  UIMenuElementSize v5;
  Swift::String v6;
  Swift::OpaquePointer v8;
  UIMenuElementSize aBlock[5];
  uint64_t v10;
  UIImage_optional v11;

  v0 = (void *)objc_opt_self(UIDeferredMenuElement);
  v1 = swift_allocObject(&unk_1008FE810, 24, 7);
  swift_unknownObjectWeakInit(v1 + 16);
  aBlock[4] = (UIMenuElementSize)sub_10033FC48;
  v10 = v1;
  aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (UIMenuElementSize)sub_10033AE6C;
  aBlock[3] = (UIMenuElementSize)&unk_1008FE828;
  v2 = _Block_copy(aBlock);
  v3 = objc_msgSend(v0, "elementWithUncachedProvider:", v2, swift_release(v10).n128_f64[0]);
  _Block_release(v2);
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v5 = swift_allocObject(v4, 40, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1007118F0;
  *(_QWORD *)(v5 + 32) = v3;
  aBlock[0] = v5;
  specialized Array._endMutation()(v5);
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v11.value.super.isa = 0;
  v11.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v11, 0, 0xFFFFFFFFFFFFFFFFLL, aBlock[0], v8);
}

void sub_10033E1B0(void (*a1)(uint64_t, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  _BYTE v28[24];

  v5 = type metadata accessor for ContextActionSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a3 += 16;
  swift_beginAccess(a3, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v10 = (void *)Strong;
    v11 = *(void **)(Strong + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler);
    swift_unknownObjectRetain(v11);
    v12 = objc_msgSend(v10, "view");
    if (v12)
    {
      v13 = v12;
      v14 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ContextActionSource.miniPlayer(_:), v5);
      ContextActionSource.key.getter(v14);
      v16 = v15;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v17 = String._bridgeToObjectiveC()();
      v18 = objc_msgSend(v11, "contextMenuItemsFor:from:actionSource:", v10, v13, v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

      swift_unknownObjectRelease(v11);
      v19 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
      v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

      if ((unint64_t)v20 >> 62)
      {
        if (v20 < 0)
          v24 = v20;
        else
          v24 = v20 & 0xFFFFFFFFFFFFFF8;
        v25 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
        v26 = swift_bridgeObjectRetain(v20);
        v22 = _bridgeCocoaArray<A>(_:)(v24, v25, v26);
        swift_bridgeObjectRelease(v20);
      }
      else
      {
        v21 = swift_bridgeObjectRetain(v20);
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v21);
        sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
        v22 = v20;
      }
      v23 = swift_bridgeObjectRelease(v20);
      a1(v22, v23);

      swift_bridgeObjectRelease(v22);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    ((void (*)(_QWORD *))a1)(_swiftEmptyArrayStorage);
  }
}

void sub_10033E5CC(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  void *v42;
  char v43[24];
  _OWORD v44[2];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v50;
  _OWORD v51[7];
  char v52;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v43, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_10033B06C();

    v7 = &v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v8 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 8];
    v9 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
    v10 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 24];
    v12 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 40];
    v13 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
    v14 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 56];
    v15 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 57];
    v16 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
    v17 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 72];
    v18 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 73];
    v19 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
    v20 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 88];
    v21 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
    v22 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 97];
    v23 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 104];
    v24 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
    v25 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v26 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
    v27 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
    v45 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
    v11 = v45;
    v46 = v27;
    v44[0] = v25;
    v44[1] = v26;
    v28 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
    v29 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
    v30 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
    v50 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
    v48 = v29;
    v49 = v30;
    v47 = v28;
    v42 = *(void **)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v31 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
    v32 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
    v33 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
    *(_QWORD *)v7 = v2;
    *((_QWORD *)v7 + 1) = v8;
    *((_QWORD *)v7 + 2) = v9;
    *((_QWORD *)v7 + 3) = v10;
    *((_QWORD *)v7 + 4) = v11;
    *((_QWORD *)v7 + 5) = v12;
    *((_QWORD *)v7 + 6) = v13;
    v7[56] = v14;
    v7[57] = v15;
    v7[64] = v16;
    v7[72] = v17;
    v7[73] = v18;
    *((_QWORD *)v7 + 10) = v19;
    v7[88] = v20;
    v7[96] = v21;
    v7[97] = v22;
    *((_QWORD *)v7 + 13) = v23;
    v7[112] = v24;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v13);
    v34 = v2;
    sub_10033FD38((uint64_t)v44);
    v35 = v34;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRelease(v33);
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v31);

    v36 = *(_OWORD *)v7;
    v37 = *((_OWORD *)v7 + 1);
    v38 = *((_OWORD *)v7 + 3);
    v51[2] = *((_OWORD *)v7 + 2);
    v51[3] = v38;
    v51[0] = v36;
    v51[1] = v37;
    v39 = *((_OWORD *)v7 + 4);
    v40 = *((_OWORD *)v7 + 5);
    v41 = *((_OWORD *)v7 + 6);
    v52 = v7[112];
    v51[5] = v40;
    v51[6] = v41;
    v51[4] = v39;
    sub_10033FD38((uint64_t)v51);
    LOBYTE(v31) = sub_100665498((uint64_t)v44, (uint64_t)v51);
    sub_10033FD8C((uint64_t)v51);
    if ((v31 & 1) == 0)
      sub_10051C18C();
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v9);

    sub_10033FD8C((uint64_t)v44);
  }
}

void sub_10033E7EC(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  char *v7;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  char v37;
  id v38;
  char v39[24];
  _OWORD v40[2];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  char v46;
  _OWORD v47[7];
  char v48;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v39, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v37 = v2;
    v6 = sub_10033B06C();

    v7 = &v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v8 = v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
    v9 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
    v10 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
    v44 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
    v45 = v9;
    v43 = v10;
    v11 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v12 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
    v13 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
    v41 = *(_OWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
    v42 = v13;
    v46 = v8;
    v40[0] = v11;
    v40[1] = v12;
    v14 = BYTE8(v44);
    v15 = v45;
    v16 = BYTE1(v45);
    v17 = *((_QWORD *)&v45 + 1);
    v18 = v43;
    v19 = BYTE8(v43);
    v20 = BYTE9(v43);
    v21 = v44;
    v22 = *((_QWORD *)&v41 + 1);
    v23 = v13;
    v24 = v41;
    v25 = v12;
    v26 = *(void **)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v27 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
    v28 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
    v29 = *(_QWORD *)&v6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
    v36 = (void *)v11;
    *(_OWORD *)v7 = v11;
    *((_OWORD *)v7 + 1) = v12;
    *((_QWORD *)v7 + 4) = v24;
    *((_QWORD *)v7 + 5) = v22;
    *((_QWORD *)v7 + 6) = v13;
    *((_WORD *)v7 + 28) = WORD4(v13);
    v7[64] = v18;
    v7[72] = v19;
    v7[73] = v20;
    *((_QWORD *)v7 + 10) = v21;
    v7[88] = v14;
    v7[96] = v15;
    v7[97] = v16;
    *((_QWORD *)v7 + 13) = v17;
    v7[112] = v37;
    sub_10033FD38((uint64_t)v40);
    sub_10033FD38((uint64_t)v40);
    v38 = v36;
    swift_bridgeObjectRetain(v25);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v27);

    v30 = *(_OWORD *)v7;
    v31 = *((_OWORD *)v7 + 1);
    v32 = *((_OWORD *)v7 + 3);
    v47[2] = *((_OWORD *)v7 + 2);
    v47[3] = v32;
    v47[0] = v30;
    v47[1] = v31;
    v33 = *((_OWORD *)v7 + 4);
    v34 = *((_OWORD *)v7 + 5);
    v35 = *((_OWORD *)v7 + 6);
    v48 = v7[112];
    v47[5] = v34;
    v47[6] = v35;
    v47[4] = v33;
    sub_10033FD38((uint64_t)v47);
    LOBYTE(v27) = sub_100665498((uint64_t)v40, (uint64_t)v47);
    sub_10033FD8C((uint64_t)v47);
    if ((v27 & 1) == 0)
      sub_10051C18C();
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v25);

    sub_10033FD8C((uint64_t)v40);
  }
}

void sub_10033EA08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  char v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  void *v32;
  id v33;
  char *v34;
  char v35[24];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  _OWORD v44[7];
  char v45;

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v35, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v34 = sub_10033B06C();
    v5 = sub_10033D080();
    v6 = &v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v7 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v8 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
    v9 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
    v38 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
    v39 = v9;
    v36 = v7;
    v37 = v8;
    v10 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
    v11 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
    v12 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
    v43 = v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
    v41 = v11;
    v42 = v12;
    v40 = v10;
    v13 = v43;
    v14 = *((_QWORD *)&v38 + 1);
    v15 = v9;
    v16 = *((_QWORD *)&v37 + 1);
    v17 = v38;
    v18 = v37;
    v19 = *(void **)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v20 = *(_QWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
    v21 = *(_QWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
    v22 = *(_QWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
    v32 = (void *)v36;
    *(_OWORD *)v6 = v36;
    *((_QWORD *)v6 + 2) = v18;
    *((_QWORD *)v6 + 3) = v16;
    *((_QWORD *)v6 + 4) = v17;
    *((_QWORD *)v6 + 5) = v14;
    *((_QWORD *)v6 + 6) = v9;
    *((_WORD *)v6 + 28) = WORD4(v9);
    v6[64] = v10;
    *((_WORD *)v6 + 36) = WORD4(v10);
    *((_QWORD *)v6 + 10) = v11;
    v6[88] = v5 & 1;
    v6[96] = v23 & 1;
    v6[97] = v24 & 1;
    *((_QWORD *)v6 + 13) = v25;
    v6[112] = v13;
    sub_10033FD38((uint64_t)&v36);
    sub_10033FD38((uint64_t)&v36);
    v33 = v32;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v20);

    v26 = *(_OWORD *)v6;
    v27 = *((_OWORD *)v6 + 1);
    v28 = *((_OWORD *)v6 + 3);
    v44[2] = *((_OWORD *)v6 + 2);
    v44[3] = v28;
    v44[0] = v26;
    v44[1] = v27;
    v29 = *((_OWORD *)v6 + 4);
    v30 = *((_OWORD *)v6 + 5);
    v31 = *((_OWORD *)v6 + 6);
    v45 = v6[112];
    v44[5] = v30;
    v44[6] = v31;
    v44[4] = v29;
    sub_10033FD38((uint64_t)v44);
    LOBYTE(v6) = sub_100665498((uint64_t)&v36, (uint64_t)v44);
    sub_10033FD8C((uint64_t)v44);
    if ((v6 & 1) == 0)
      sub_10051C18C();
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v18);

    sub_10033FD8C((uint64_t)&v36);
  }
}

void sub_10033EC20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  char v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  void *v32;
  id v33;
  char *v34;
  char v35[24];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  _OWORD v44[7];
  char v45;

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v35, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v34 = sub_10033B06C();
    v5 = sub_10033D1F4();
    v6 = &v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v7 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v8 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
    v9 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
    v38 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
    v39 = v9;
    v36 = v7;
    v37 = v8;
    v10 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
    v11 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
    v12 = *(_OWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
    v43 = v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
    v41 = v11;
    v42 = v12;
    v40 = v10;
    v13 = v43;
    v14 = *((_QWORD *)&v38 + 1);
    v15 = v9;
    v16 = *((_QWORD *)&v37 + 1);
    v17 = v38;
    v18 = v37;
    v19 = *(void **)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
    v20 = *(_QWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
    v21 = *(_QWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
    v22 = *(_QWORD *)&v34[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
    v32 = (void *)v36;
    *(_OWORD *)v6 = v36;
    *((_QWORD *)v6 + 2) = v18;
    *((_QWORD *)v6 + 3) = v16;
    *((_QWORD *)v6 + 4) = v17;
    *((_QWORD *)v6 + 5) = v14;
    *((_QWORD *)v6 + 6) = v9;
    *((_WORD *)v6 + 28) = WORD4(v9);
    v6[64] = v5 & 1;
    v6[72] = v23 & 1;
    v6[73] = v24 & 1;
    *((_QWORD *)v6 + 10) = v25;
    v6[88] = BYTE8(v11);
    *((_WORD *)v6 + 48) = v12;
    *((_QWORD *)v6 + 13) = *((_QWORD *)&v12 + 1);
    v6[112] = v13;
    sub_10033FD38((uint64_t)&v36);
    sub_10033FD38((uint64_t)&v36);
    v33 = v32;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v20);

    v26 = *(_OWORD *)v6;
    v27 = *((_OWORD *)v6 + 1);
    v28 = *((_OWORD *)v6 + 3);
    v44[2] = *((_OWORD *)v6 + 2);
    v44[3] = v28;
    v44[0] = v26;
    v44[1] = v27;
    v29 = *((_OWORD *)v6 + 4);
    v30 = *((_OWORD *)v6 + 5);
    v31 = *((_OWORD *)v6 + 6);
    v45 = v6[112];
    v44[5] = v30;
    v44[6] = v31;
    v44[4] = v29;
    sub_10033FD38((uint64_t)v44);
    LOBYTE(v6) = sub_100665498((uint64_t)&v36, (uint64_t)v44);
    sub_10033FD8C((uint64_t)v44);
    if ((v6 & 1) == 0)
      sub_10051C18C();
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v18);

    sub_10033FD8C((uint64_t)&v36);
  }
}

void sub_10033EE38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_10033D684();

  }
}

void sub_10033EE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _BYTE v14[24];

  v8 = a8 + 16;
  swift_beginAccess(a8 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v10 = (void *)Strong;
    sub_10033D684();

  }
  swift_beginAccess(v8, &v13, 0, 0);
  v11 = swift_unknownObjectWeakLoadStrong(v8);
  if (v11)
  {
    v12 = (void *)v11;
    sub_10033DAC4();

  }
}

void sub_10033EF04(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10033C74C(a1);

  }
}

id sub_10033F048(uint64_t a1)
{
  char *v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;

  v2 = v1;
  v3 = Logger.logObject.getter(a1);
  v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Stopping playback of audiobook due to undocking the mini player", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }

  v6 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler];
  objc_msgSend(v6, "stop");
  objc_msgSend(v6, "clearAudiobook");
  return objc_msgSend(v2, "close:", 1);
}

id sub_10033F158(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;
  void *v6;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v6 = (void *)v4();
  swift_release(v3);

  return v6;
}

void sub_10033F1A8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(id, uint64_t);
  id v7;

  v6 = *(void (**)(id, uint64_t))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a2;
  swift_unknownObjectRetain(a3);
  v6(v7, a3);
  swift_release(v5);
  swift_unknownObjectRelease(a3);

}

uint64_t sub_10033F218()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10033F23C(int a1, id a2)
{
  if (objc_msgSend(a2, "state") == (id)3)
    sub_10030AC4C(0, 0);
}

void sub_10033F27C()
{
  char *v0;
  uint64_t ObjectType;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  ObjectType = swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_cancellables] = &_swiftEmptySetSingleton;
  v2 = &v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_buyButtonProvider];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_QWORD *)v2 + 4) = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_buyButtonViewController] = 0;
  v3 = &v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_contextMenuAppearDate];
  v4 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v8 = ObjectType;
  v5 = sub_10004CFD4(&qword_1009DC018);
  v6 = String.init<A>(describing:)(&v8, v5);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v6, v7);
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController____lazy_storage___miniPlayerView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_springLoadedInteraction] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/AudiobookNowPlayingMiniTouchViewController.swift", 54, 2, 42, 0);
  __break(1u);
}

void sub_10033F3C0()
{
  char *v0;
  char *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD v24[7];
  char v25;
  _OWORD v26[7];
  char v27;
  _OWORD v28[7];
  char v29;

  v0 = sub_10033B06C();
  sub_10033B128((uint64_t)v24);
  v1 = &v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v2 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
  v3 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
  v4 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
  v26[0] = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v26[2] = v2;
  v26[3] = v3;
  v26[1] = v4;
  v6 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 80];
  v5 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 96];
  v7 = *(_OWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 64];
  v27 = v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 112];
  v26[5] = v6;
  v26[6] = v5;
  v26[4] = v7;
  v8 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v9 = *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16];
  v10 = *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 32];
  v11 = *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 48];
  v12 = v24[0];
  v13 = v24[1];
  v14 = v24[3];
  *((_OWORD *)v1 + 2) = v24[2];
  *((_OWORD *)v1 + 3) = v14;
  *(_OWORD *)v1 = v12;
  *((_OWORD *)v1 + 1) = v13;
  v15 = v24[4];
  v16 = v24[5];
  v17 = v24[6];
  v1[112] = v25;
  *((_OWORD *)v1 + 5) = v16;
  *((_OWORD *)v1 + 6) = v17;
  *((_OWORD *)v1 + 4) = v15;
  sub_10033FD38((uint64_t)v26);
  sub_10033FD38((uint64_t)v24);
  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);

  v18 = *(_OWORD *)v1;
  v19 = *((_OWORD *)v1 + 1);
  v20 = *((_OWORD *)v1 + 3);
  v28[2] = *((_OWORD *)v1 + 2);
  v28[3] = v20;
  v28[0] = v18;
  v28[1] = v19;
  v21 = *((_OWORD *)v1 + 4);
  v22 = *((_OWORD *)v1 + 5);
  v23 = *((_OWORD *)v1 + 6);
  v29 = v1[112];
  v28[5] = v22;
  v28[6] = v23;
  v28[4] = v21;
  sub_10033FD38((uint64_t)v28);
  LOBYTE(v9) = sub_100665498((uint64_t)v26, (uint64_t)v28);
  sub_10033FD8C((uint64_t)v28);
  if ((v9 & 1) == 0)
    sub_10051C18C();
  sub_10033FD8C((uint64_t)v24);
  sub_10033FD8C((uint64_t)v26);

}

uint64_t sub_10033F520(void *a1)
{
  _QWORD *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v32;
  _QWORD v33[3];
  uint64_t ObjectType;
  _UNKNOWN **v35;

  ObjectType = swift_getObjectType();
  v35 = &off_1008F3968;
  v33[0] = a1;
  v2 = *(_QWORD **)(*sub_10003F198(v33, ObjectType) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = a1;
  swift_retain(v2);
  v5 = Color.init(uiColor:)(objc_msgSend(v3, "bc_booksSecondaryIconBackgroundColor"));
  v6 = Color.init(uiColor:)(objc_msgSend(v3, "bc_booksBackground"));
  v7 = Color.init(_:)(objc_msgSend(v3, "labelColor"));
  v8 = Color.init(_:)(objc_msgSend(v3, "bc_booksOrange"));
  v9 = objc_allocWithZone((Class)UIColor);
  aBlock[4] = sub_10033DFFC;
  v32 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10033F158;
  aBlock[3] = &unk_1008FE8A0;
  v10 = _Block_copy(aBlock);
  v11 = objc_msgSend(v9, "initWithDynamicProvider:", v10);
  _Block_release(v10);
  swift_release(v32);
  v12 = Color.init(uiColor:)(v11);
  v13 = v2[4];
  v2[4] = v5;
  swift_retain(v5);
  swift_release(v13);
  v14 = v2[5];
  v2[5] = v12;
  swift_retain(v12);
  swift_release(v14);
  v16 = static Color.clear.getter(v15);
  v17 = v2[6];
  v2[6] = v16;
  swift_release(v17);
  v18 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v19 = v2[2];
  v2[2] = v18;
  swift_release(v19);
  v20 = v2[8];
  v2[8] = v7;
  swift_retain(v7);
  swift_release(v20);
  v21 = v2[9];
  v2[9] = v6;
  swift_retain(v6);
  swift_release(v21);
  v22 = v2[10];
  v2[10] = v7;
  swift_retain(v7);
  swift_release(v22);
  v23 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v24 = v2[13];
  v2[13] = v23;
  swift_release(v24);
  v25 = v2[14];
  v2[14] = v8;
  swift_retain(v8);
  swift_release(v25);
  v26 = v2[15];
  v2[15] = v8;
  swift_retain(v8);
  *(_QWORD *)&v27 = swift_release(v26).n128_u64[0];
  v2[7] = 0;
  v28 = Color.init(uiColor:)(objc_msgSend(v3, "bc_booksTransportControlsColor", v27));
  swift_release(v8);
  swift_release(v6);
  swift_release(v7);
  swift_release(v12);
  swift_release(v5);
  v29 = v2[28];
  v2[28] = v28;
  swift_release(v2);
  swift_release(v29);
  return _s5Books15CurrentPageViewVwxx_0(v33);
}

id sub_10033F800()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  _QWORD v8[5];
  uint64_t v9;

  v1 = swift_allocObject(&unk_1008FE7C0, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = (void *)objc_opt_self(UIContextMenuConfiguration);
  v8[4] = sub_10033FC1C;
  v9 = v1;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_10049ED58;
  v8[3] = &unk_1008FE7D8;
  v3 = _Block_copy(v8);
  v4 = v9;
  v5 = v0;
  swift_retain(v1);
  v6 = objc_msgSend(v2, "configurationWithIdentifier:previewProvider:actionProvider:", 0, 0, v3, swift_release(v4).n128_f64[0]);
  swift_release(v1);
  _Block_release(v3);
  return v6;
}

id sub_10033F8F4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id result;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  Class isa;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  id v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _BYTE v40[24];
  char v41[24];

  v39 = type metadata accessor for ContextActionSource(0);
  v1 = *(_QWORD *)(v39 - 8);
  __chkstk_darwin(v39);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - v8;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_contextMenuAppearDate];
  swift_beginAccess(&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_contextMenuAppearDate], v41, 0, 0);
  sub_10000B5E4(v14, (uint64_t)v9, &qword_1009D7440);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return (id)sub_100010960((uint64_t)v9, &qword_1009D7440);
  v34 = v14;
  v35 = v6;
  v37 = v11;
  v38 = v13;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v16 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler];
  v36 = v0;
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  v17 = result;
  v18 = v10;
  v19 = v39;
  v20 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ContextActionSource.miniPlayer(_:), v39);
  ContextActionSource.key.getter(v20);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v19);
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend(v16, "analyticsAssetPropertyProviderFor:actionSource:", v17, v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

  if (v24)
  {
    v26 = type metadata accessor for EventReporter(0, v25);
    v27 = (void *)static EventReporter.shared.getter(v26);
    result = objc_msgSend(v36, "ba_effectiveAnalyticsTracker");
    v29 = v37;
    v28 = v38;
    if (result)
    {
      v30 = result;
      isa = Date._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v27, "emitContextualActionSheetExposureEventWithTracker:startDate:propertyProvider:", v30, isa, v24);
      swift_unknownObjectRelease(v24);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v18);
      v32 = (uint64_t)v35;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v35, 1, 1, v18);
      v33 = v34;
      swift_beginAccess(v34, v40, 33, 0);
      sub_10006CD88(v32, v33);
      return (id)swift_endAccess(v40);
    }
    goto LABEL_10;
  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v18);
}

UIMenu sub_10033FC1C()
{
  return sub_10033E05C();
}

uint64_t sub_10033FC24()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10033FC48(void (*a1)(uint64_t, __n128), uint64_t a2)
{
  uint64_t v2;

  sub_10033E1B0(a1, a2, v2);
}

uint64_t sub_10033FC50()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_10033FC74(uint64_t a1)
{
  uint64_t v1;

  sub_10033AEDC(a1, *(_QWORD *)(v1 + 16));
}

_QWORD *sub_10033FCB4@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_10033FCF4();
  return EnvironmentValues.subscript.getter(a1, &type metadata for BuyButtonStyleKey, &type metadata for BuyButtonStyleKey, v2);
}

unint64_t sub_10033FCF4()
{
  unint64_t result;

  result = qword_1009DBFB8;
  if (!qword_1009DBFB8)
  {
    result = swift_getWitnessTable(&unk_100733A40, &type metadata for BuyButtonStyleKey);
    atomic_store(result, (unint64_t *)&qword_1009DBFB8);
  }
  return result;
}

uint64_t sub_10033FD38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(id *)a1;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t sub_10033FD8C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);

  return a1;
}

void sub_10033FDDC(void **a1)
{
  uint64_t v1;

  sub_10033E5CC(a1, v1);
}

void sub_10033FDE4(char *a1)
{
  uint64_t v1;

  sub_10033E7EC(a1, v1);
}

void sub_10033FDEC(uint64_t a1)
{
  uint64_t v1;

  sub_10033EA08(a1, v1);
}

void sub_10033FDF4(uint64_t a1)
{
  uint64_t v1;

  sub_10033EC20(a1, v1);
}

void sub_10033FDFC(uint64_t a1)
{
  uint64_t v1;

  sub_10033EE38(a1, v1);
}

void sub_10033FE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  sub_10033EE88(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t sub_10033FE0C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10033FE30(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

void sub_10033FE64(uint64_t a1)
{
  uint64_t v1;

  sub_10033EF04(a1, v1);
}

void sub_10033FE90()
{
  qword_1009DC020 = 0x4024000000000000;
}

void sub_10033FEF8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  NSString v6;
  void *v7;
  NSString v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  Class isa;
  id v36;
  id v37;
  id v38;
  id v39;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  objc_msgSend(v2, "setFont:", v3);

  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "bc_booksLabelColor");
  objc_msgSend(v2, "setTextColor:", v5);

  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v6);

  objc_msgSend(v2, "setTextAlignment:", 4);
  objc_msgSend(v2, "sizeToFit");
  objc_msgSend(v1, "addSubview:", v2);
  v7 = (void *)objc_opt_self(UIImage);
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "__systemImageNamedSwift:", v8);

  v39 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v9);
  v10 = objc_msgSend(v2, "font");
  if (v10)
  {
    v11 = v10;
    v38 = v0;
    v12 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v10);

    objc_msgSend(v39, "setPreferredSymbolConfiguration:", v12);
    objc_msgSend(v39, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v13 = objc_msgSend(v4, "bc_booksLabelColor");
    objc_msgSend(v39, "setTintColor:", v13);

    objc_msgSend(v1, "addSubview:", v39);
    v36 = (id)objc_opt_self(NSLayoutConstraint);
    v14 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v15 = swift_allocObject(v14, 80, 7);
    *(_OWORD *)(v15 + 16) = xmmword_10071C6F0;
    v16 = objc_msgSend(v1, "leadingAnchor");
    v17 = objc_msgSend(v39, "leadingAnchor");
    if (qword_1009CDF18 != -1)
      swift_once(&qword_1009CDF18, sub_10033FE90);
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, -*(double *)&qword_1009DC020, v36);

    *(_QWORD *)(v15 + 32) = v18;
    v19 = objc_msgSend(v1, "heightAnchor");
    v20 = objc_msgSend(v19, "constraintEqualToConstant:", 50.0);

    *(_QWORD *)(v15 + 40) = v20;
    v21 = objc_msgSend(v2, "centerYAnchor");
    v22 = objc_msgSend(v1, "centerYAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

    *(_QWORD *)(v15 + 48) = v23;
    v24 = objc_msgSend(v2, "leadingAnchor");
    v25 = objc_msgSend(v39, "trailingAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, *(double *)&qword_1009DC020);

    *(_QWORD *)(v15 + 56) = v26;
    v27 = objc_msgSend(v2, "trailingAnchor");
    v28 = objc_msgSend(v1, "layoutMarginsGuide");
    v29 = objc_msgSend(v28, "trailingAnchor");

    v30 = objc_msgSend(v27, "constraintLessThanOrEqualToAnchor:constant:", v29, -*(double *)&qword_1009DC020);
    *(_QWORD *)(v15 + 64) = v30;
    v31 = objc_msgSend(v39, "centerYAnchor");
    v32 = objc_msgSend(v1, "centerYAnchor");
    v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

    *(_QWORD *)(v15 + 72) = v33;
    specialized Array._endMutation()(v34);
    sub_10034132C();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v37, "activateConstraints:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

    objc_msgSend(v38, "setView:", v1);
  }
  else
  {
    __break(1u);
  }
}

id sub_100340530(uint64_t a1)
{
  return sub_10025965C(a1, type metadata accessor for EditDatePickerHeaderViewController);
}

uint64_t type metadata accessor for EditDatePickerHeaderViewController()
{
  return objc_opt_self(_TtC5Books34EditDatePickerHeaderViewController);
}

void sub_10034059C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  uint64_t v50;

  v47 = type metadata accessor for Locale(0);
  v0 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v2 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - v4;
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - v11;
  v48 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v48, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle3);
  objc_msgSend(v13, "setFont:", v14);

  v15 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksLabelColor");
  objc_msgSend(v13, "setTextColor:", v15);

  v16 = String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  static Locale.current.getter(v16);
  v17 = v6;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v21 = v0;
  v22 = *(void (**)(char *, char *, uint64_t))(v0 + 16);
  v23 = v47;
  v22(v2, v5, v47);
  String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v20, v2, "Done", 4, 2);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v23);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v17);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  objc_msgSend(v13, "setTextAlignment:", 1);
  objc_msgSend(v13, "setAdjustsFontForContentSizeCategory:", 1);
  v27 = v48;
  objc_msgSend(v48, "addSubview:", v13);
  v28 = (void *)objc_opt_self(NSLayoutConstraint);
  v29 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v30 = swift_allocObject(v29, 64, 7);
  *(_OWORD *)(v30 + 16) = xmmword_1007143B0;
  v31 = objc_msgSend(v13, "widthAnchor");
  v32 = objc_msgSend(v27, "widthAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v30 + 32) = v33;
  v34 = objc_msgSend(v13, "heightAnchor");
  v35 = objc_msgSend(v27, "heightAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v30 + 40) = v36;
  v37 = objc_msgSend(v13, "centerYAnchor");
  v38 = objc_msgSend(v27, "centerYAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v30 + 48) = v39;
  v40 = objc_msgSend(v13, "leadingAnchor");
  v41 = objc_msgSend(v27, "leadingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v30 + 56) = v42;
  v50 = v30;
  specialized Array._endMutation()(v43);
  v44 = v50;
  sub_10034132C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v28, "activateConstraints:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

  objc_msgSend(v49, "setView:", v27);
}

id sub_100340BCC(uint64_t a1)
{
  return sub_10025965C(a1, type metadata accessor for EditDatePickerDoneActionViewController);
}

uint64_t type metadata accessor for EditDatePickerDoneActionViewController()
{
  return objc_opt_self(_TtC5Books38EditDatePickerDoneActionViewController);
}

void sub_100340BF8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  Class isa;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  Class v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  Class v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v2);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v34 - v10;
  v12 = *(void **)&v1[OBJC_IVAR____TtC5Books28EditDatePickerViewController_datePicker];
  sub_1001FE7C4((uint64_t)&v1[OBJC_IVAR____TtC5Books28EditDatePickerViewController_initialDate], (uint64_t)v4);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)v13 == 1)
  {
    static Date.now.getter(v13);
    sub_100010D2C((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  }
  isa = Date._bridgeToObjectiveC()().super.isa;
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v11, v5);
  objc_msgSend(v12, "setDate:", isa);

  static Date.now.getter(v16);
  v17 = Date._bridgeToObjectiveC()().super.isa;
  v15(v8, v5);
  objc_msgSend(v12, "setMaximumDate:", v17);

  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v12, "setDatePickerMode:", 1);
  objc_msgSend(v12, "setPreferredDatePickerStyle:", 3);
  v18 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v18, "addSubview:", v12);
  v19 = (void *)objc_opt_self(NSLayoutConstraint);
  v20 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v21 = swift_allocObject(v20, 56, 7);
  *(_OWORD *)(v21 + 16) = xmmword_1007118D0;
  v22 = objc_msgSend(v12, "leadingAnchor");
  v23 = objc_msgSend(v18, "leadingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, 8.0);

  *(_QWORD *)(v21 + 32) = v24;
  v25 = objc_msgSend(v12, "trailingAnchor");
  v26 = objc_msgSend(v18, "trailingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v26, -8.0);

  *(_QWORD *)(v21 + 40) = v27;
  v28 = objc_msgSend(v18, "heightAnchor");
  v29 = objc_msgSend(v12, "heightAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v21 + 48) = v30;
  v35 = v21;
  specialized Array._endMutation()(v31);
  v32 = v35;
  sub_10034132C();
  v33 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "activateConstraints:", v33, swift_bridgeObjectRelease(v32).n128_f64[0]);

  objc_msgSend(v1, "setView:", v18);
}

id sub_100340FF0(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  char *v9;
  uint64_t v10;
  NSString v11;
  id v12;
  objc_super v14;

  v6 = OBJC_IVAR____TtC5Books28EditDatePickerViewController_datePicker;
  v7 = objc_allocWithZone((Class)UIDatePicker);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = &v8[OBJC_IVAR____TtC5Books28EditDatePickerViewController_initialDate];
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);

  if (a2)
  {
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for EditDatePickerViewController(0);
  v12 = objc_msgSendSuper2(&v14, "initWithNibName:bundle:", v11, a3);

  return v12;
}

id sub_100341224()
{
  return sub_10025965C(0, (uint64_t (*)(void))type metadata accessor for EditDatePickerViewController);
}

uint64_t sub_10034126C()
{
  return type metadata accessor for EditDatePickerViewController(0);
}

uint64_t type metadata accessor for EditDatePickerViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DC0B8;
  if (!qword_1009DC0B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for EditDatePickerViewController);
  return result;
}

void sub_1003412B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10006CDD0(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
  }
}

unint64_t sub_10034132C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DE3F0;
  if (!qword_1009DE3F0)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009DE3F0);
  }
  return result;
}

void sub_100341368(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  sub_100265DE0(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_10071C790;
    v4[2] = (char *)&value witness table for () + 64;
    v4[3] = &unk_10071C7A8;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[5] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[7] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 0, 8, v4, a1 + 32);
  }
}

uint64_t *sub_100341410(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  id v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a2, v8);
      v9 = v4;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *v4 = *a2;
      swift_retain(v13);
      v9 = v4;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[9];
    v15 = a3[10];
    v16 = (uint64_t *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)v4 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[12];
    *(_OWORD *)((char *)v4 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
    v23 = a3[14];
    *(uint64_t *)((char *)v4 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    v24 = *(void **)((char *)a2 + v23);
    *(uint64_t *)((char *)v4 + v23) = (uint64_t)v24;
    v25 = a3[15];
    v26 = (uint64_t *)((char *)v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v12 = v27[1];
    *v26 = *v27;
    v26[1] = v12;
    swift_bridgeObjectRetain(v18);
    swift_retain(v21);
    v28 = v24;
  }
  swift_retain(v12);
  return v4;
}

double sub_100341558(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[9] + 8));
  swift_release(*(_QWORD *)((char *)a1 + a2[10] + 8));

  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[15] + 8)).n128_u64[0];
  return result;
}

uint64_t *sub_1003415F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;

  v6 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[9];
  v13 = a3[10];
  v14 = (uint64_t *)((char *)a1 + v12);
  v15 = (uint64_t *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (uint64_t *)((char *)a1 + v13);
  v18 = (uint64_t *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  *(uint64_t *)((char *)a1 + v20) = *(uint64_t *)((char *)a2 + v20);
  v21 = a3[14];
  *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  v22 = *(void **)((char *)a2 + v21);
  *(uint64_t *)((char *)a1 + v21) = (uint64_t)v22;
  v23 = a3[15];
  v24 = (uint64_t *)((char *)a1 + v23);
  v25 = (uint64_t *)((char *)a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain(v16);
  swift_retain(v19);
  v27 = v22;
  swift_retain(v26);
  return a1;
}

uint64_t *sub_100341718(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D8790);
    v6 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  v12 = a3[9];
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  v17 = a3[10];
  v18 = (uint64_t *)((char *)a1 + v17);
  v19 = (uint64_t *)((char *)a2 + v17);
  v20 = v19[1];
  v21 = v18[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain(v20);
  swift_release(v21);
  v22 = a3[11];
  v23 = (uint64_t *)((char *)a1 + v22);
  v24 = (uint64_t *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
  *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  v25 = a3[14];
  v26 = *(void **)((char *)a2 + v25);
  v27 = *(void **)((char *)a1 + v25);
  *(uint64_t *)((char *)a1 + v25) = (uint64_t)v26;
  v28 = v26;

  v29 = a3[15];
  v30 = (uint64_t *)((char *)a1 + v29);
  v31 = (uint64_t *)((char *)a2 + v29);
  v32 = v31[1];
  v33 = v30[1];
  *v30 = *v31;
  v30[1] = v32;
  swift_retain(v32);
  swift_release(v33);
  return a1;
}

char *sub_100341890(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  v9 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  *(_OWORD *)&a1[a3[15]] = *(_OWORD *)&a2[a3[15]];
  return a1;
}

char *sub_100341974(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D8790);
    v6 = sub_10004CFD4(&qword_1009D8790);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ContentSizeCategory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[9];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v12 = *(_QWORD *)v10;
  v11 = *((_QWORD *)v10 + 1);
  v13 = *((_QWORD *)v9 + 1);
  *(_QWORD *)v9 = v12;
  *((_QWORD *)v9 + 1) = v11;
  swift_bridgeObjectRelease(v13);
  v14 = a3[10];
  v15 = *(_QWORD *)&a1[v14 + 8];
  *(_OWORD *)&a1[v14] = *(_OWORD *)&a2[v14];
  swift_release(v15);
  v16 = a3[12];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
  v17 = a3[14];
  *(_QWORD *)&a1[a3[13]] = *(_QWORD *)&a2[a3[13]];
  v18 = *(void **)&a1[v17];
  *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];

  v19 = a3[15];
  v20 = *(_QWORD *)&a1[v19 + 8];
  *(_OWORD *)&a1[v19] = *(_OWORD *)&a2[v19];
  swift_release(v20);
  return a1;
}

uint64_t sub_100341AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100341AB0);
}

uint64_t sub_100341AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10004CFD4(&qword_1009D39F8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100341B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100341B40);
}

uint64_t sub_100341B40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10004CFD4(&qword_1009D39F8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for OptionSlider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OptionSlider);
}

uint64_t sub_100341BCC(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10086CEA4, 1);
}

uint64_t sub_100341C00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_100341C18(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    __chkstk_darwin(a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return TupleView.init(_:)(v8, TupleTypeMetadata);
  }
  __chkstk_darwin(a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata(0, a2);
  __chkstk_darwin(TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return TupleView.init(_:)(v8, TupleTypeMetadata);
}

double sub_100341DCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD v20[3];

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(a1);
  v7 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, v1, a1, v6);
  v8 = type metadata accessor for MainActor(0);
  v9 = static MainActor.shared.getter(v8);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v11 = (v10 + 48) & ~v10;
  v12 = swift_allocObject(&unk_1008FE9E0, v11 + v5, v10 | 7);
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(a1 + 16);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v12 + v11, v7, a1);
  v13 = (uint64_t *)(v2 + *(int *)(a1 + 60));
  v15 = *v13;
  v14 = v13[1];
  v16 = (_QWORD *)swift_allocObject(&unk_1008FEA08, 48, 7);
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v15;
  v16[5] = v14;
  v17 = (_QWORD *)swift_allocObject(&unk_1008FEA30, 48, 7);
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = sub_100343EB8;
  v17[5] = v16;
  swift_retain(v14);
  Binding.init(get:set:)(v20, sub_100343E6C, v12, sub_100343EDC, v17, &type metadata for Double);
  return *(double *)&v20[2];
}

uint64_t sub_100341F38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = __chkstk_darwin(a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v2 + *(int *)(v5 + 56));
  isa = Double._bridgeToObjectiveC()().super.super.isa;
  v10 = objc_msgSend(v8, "stringFromNumber:", isa);

  if (!v10)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, a1);
LABEL_5:
    v11 = Double.description.getter(*(double *)&v7[*(int *)(a1 + 52)]);
    goto LABEL_6;
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v13 = v12;

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, a1);
  if (!v13)
    goto LABEL_5;
LABEL_6:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
  return v11;
}

uint64_t sub_10034204C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  uint64_t WitnessTable;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;

  v38 = a2;
  v4 = sub_100030B74(&qword_1009DC148);
  v36 = *(_QWORD *)(a1 + 16);
  v5 = type metadata accessor for ModifiedContent(255, v36, &type metadata for _FrameLayout);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _PaddingLayout);
  v7 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v8 = type metadata accessor for ModifiedContent(255, v6, v7);
  v9 = sub_100030B74(&qword_1009DC150);
  v10 = sub_100030B74(&qword_1009DC158);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v8, v9, v10, 0, 0);
  v12 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v12);
  v15 = type metadata accessor for OptionsAdaptiveStack(255, v12, WitnessTable, v14);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v4, v15, 0, 0);
  v17 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v35 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v17);
  v18 = type metadata accessor for VStack(0, v17, v35);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v35 - v23;
  v37 = a1;
  v25 = sub_100341F38(a1);
  v27 = v26;
  v28 = static HorizontalAlignment.leading.getter(v25);
  v29 = v28;
  if (qword_1009CDE08 != -1)
    v28 = swift_once(&qword_1009CDE08, sub_1002D87AC);
  __chkstk_darwin(v28);
  v30 = *(_QWORD *)(v37 + 24);
  *(&v35 - 6) = v36;
  *(&v35 - 5) = v30;
  *(&v35 - 4) = v2;
  *(&v35 - 3) = v25;
  *(&v35 - 2) = v27;
  VStack.init(alignment:spacing:content:)(v29, v31, 0, sub_100343574, &v35 - 8, v17, v35);
  swift_bridgeObjectRelease(v27);
  swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v18);
  v32 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v32(v24, v21, v18);
  v33 = *(void (**)(char *, uint64_t))(v19 + 8);
  v33(v21, v18);
  v32(v38, v24, v18);
  return ((uint64_t (*)(char *, uint64_t))v33)(v24, v18);
}

uint64_t sub_1003422EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata3;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t KeyPath;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  __n128 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  void (*v72)(uint64_t, uint64_t, __n128);
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t WitnessTable;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[2];
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v92 = a5;
  v91 = a4;
  v95 = a2;
  v96 = a3;
  v78 = a1;
  v97 = a6;
  v9 = sub_10004CFD4(&qword_1009D39F8);
  __chkstk_darwin(v9);
  v94 = (uint64_t *)((char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_10004CFD4(&qword_1009D26A0);
  __chkstk_darwin(v11);
  v93 = (uint64_t *)((char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for OptionSlider(0, a4, a5, v13);
  v89 = *(_QWORD *)(v14 - 8);
  v15 = v14;
  v79 = v14;
  v90 = *(_QWORD *)(v89 + 64);
  __chkstk_darwin(v14);
  v87 = (char *)&v77 - v16;
  v17 = type metadata accessor for ModifiedContent(255, a4, &type metadata for _FrameLayout);
  v18 = type metadata accessor for ModifiedContent(255, v17, &type metadata for _PaddingLayout);
  v19 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v20 = type metadata accessor for ModifiedContent(255, v18, v19);
  v21 = sub_100030B74(&qword_1009DC150);
  v22 = sub_100030B74(&qword_1009DC158);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v20, v21, v22, 0, 0);
  v24 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  v82 = v24;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v24);
  v85 = type metadata accessor for OptionsAdaptiveStack(0, v24, WitnessTable, v25);
  v86 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v80 = (uint64_t)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v84 = (char *)&v77 - v28;
  v88 = sub_10004CFD4(&qword_1009DC148);
  __chkstk_darwin(v88);
  v83 = (uint64_t)&v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v98 = (uint64_t)&v77 - v31;
  v32 = (uint64_t *)(a1 + *(int *)(v15 + 36));
  v33 = v32[1];
  v102 = *v32;
  v103 = v33;
  v34 = sub_1001F2108();
  v35 = swift_bridgeObjectRetain(v33);
  v36 = Text.init<A>(_:)(&v102, &type metadata for String, v34, v35);
  v38 = v37;
  v40 = v39;
  v77 = v39;
  v42 = v41 & 1;
  KeyPath = swift_getKeyPath(&unk_10071C820);
  v44 = static Font.callout.getter();
  v45 = swift_getKeyPath(&unk_10071C850);
  v46 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v47 = swift_getKeyPath(&unk_10071C880);
  v102 = v36;
  v103 = v38;
  v104 = v42;
  v105 = v40;
  v106 = KeyPath;
  v107 = 2;
  v108 = 0;
  v109 = v45;
  v110 = v44;
  v111 = v47;
  v112 = v46;
  v48 = sub_10004CFD4(&qword_1009DC160);
  v49 = sub_10034359C();
  View.accessibilityHidden(_:)(1, v48, v49);
  sub_1001F5B28(v36, v38, v42);
  swift_release(v46);
  swift_release(v47);
  swift_release(v44);
  swift_release(v45);
  swift_release(KeyPath);
  v50 = swift_bridgeObjectRelease(v77);
  v51 = v89;
  v52 = v87;
  v53 = v79;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v89 + 16))(v87, v78, v79, v50);
  v54 = *(unsigned __int8 *)(v51 + 80);
  v55 = v51;
  v56 = (v54 + 32) & ~v54;
  v57 = (v90 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = swift_allocObject(&unk_1008FE9B8, v57 + 16, v54 | 7);
  v59 = v92;
  *(_QWORD *)(v58 + 16) = v91;
  *(_QWORD *)(v58 + 24) = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v58 + v56, v52, v53);
  v60 = (_QWORD *)(v58 + v57);
  v61 = v96;
  *v60 = v95;
  v60[1] = v61;
  v62 = v93;
  v63 = v82;
  v64 = WitnessTable;
  sub_10026695C(v93);
  v65 = v94;
  sub_100266970(v94);
  v66 = v80;
  sub_1002669C4((uint64_t)v62, (uint64_t)v65, 0x4024000000000000, 0, (uint64_t)sub_1003437A4, v58, v63, v64, v80);
  v67 = v85;
  v68 = swift_getWitnessTable(&unk_1007153F0, v85);
  v69 = v86;
  v70 = *(void (**)(char *, uint64_t, uint64_t))(v86 + 16);
  v71 = v84;
  v70(v84, v66, v67);
  v72 = *(void (**)(uint64_t, uint64_t, __n128))(v69 + 8);
  v73 = swift_bridgeObjectRetain(v61);
  v72(v66, v67, v73);
  v74 = v98;
  v75 = v83;
  sub_10000B5E4(v98, v83, &qword_1009DC148);
  v102 = v75;
  v70((char *)v66, (uint64_t)v71, v67);
  v103 = v66;
  v101[0] = v88;
  v101[1] = v67;
  v99 = sub_10028156C(&qword_1009DC180, &qword_1009DC148, (void (*)(void))sub_10034359C, (void (*)(void))sub_100244A50);
  v100 = v68;
  sub_100341C18(&v102, 2uLL, (uint64_t)v101);
  ((void (*)(char *, uint64_t))v72)(v71, v67);
  sub_100010960(v74, &qword_1009DC148);
  ((void (*)(uint64_t, uint64_t))v72)(v66, v67);
  return sub_100010960(v75, &qword_1009DC148);
}

uint64_t sub_1003428F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t WitnessTable;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _OWORD *v114;
  __int128 v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(char *, uint64_t);
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  _QWORD v165[3];
  __int128 v166;
  uint64_t v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  char v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  void *v177;
  uint64_t v178;
  void *v179;

  *((_QWORD *)&v138 + 1) = a3;
  *(_QWORD *)&v138 = a2;
  v154 = a6;
  v150 = type metadata accessor for ContentSizeCategory(0);
  v149 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v147 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v144 = (uint64_t)&v127 - v11;
  v142 = sub_10004CFD4(&qword_1009DC188);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v127 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = sub_10004CFD4(&qword_1009DC190);
  __chkstk_darwin(v139);
  v146 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = sub_10004CFD4(&qword_1009DC198);
  __chkstk_darwin(v148);
  v145 = (uint64_t)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = sub_10004CFD4(&qword_1009DC158);
  __chkstk_darwin(v151);
  v153 = (uint64_t)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v143 = (char *)&v127 - v17;
  __chkstk_darwin(v18);
  v152 = (uint64_t)&v127 - v19;
  v132 = sub_10004CFD4(&qword_1009DC1A0);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v128 = (char *)&v127 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_10004CFD4(&qword_1009DC1A8);
  __chkstk_darwin(v135);
  v133 = (char *)&v127 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_10004CFD4(&qword_1009DC1B0);
  __chkstk_darwin(v134);
  v131 = (char *)&v127 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v136 = (char *)&v127 - v24;
  v158 = sub_10004CFD4(&qword_1009DC150);
  __chkstk_darwin(v158);
  v160 = (uint64_t)&v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v159 = (uint64_t)&v127 - v27;
  v127 = *(_QWORD *)(a4 - 8);
  __chkstk_darwin(v28);
  v30 = (char *)&v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for ModifiedContent(0, a4, &type metadata for _FrameLayout);
  v129 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v33 = (char *)&v127 - v32;
  v34 = type metadata accessor for ModifiedContent(0, v31, &type metadata for _PaddingLayout);
  v137 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v36 = (char *)&v127 - v35;
  v37 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v157 = type metadata accessor for ModifiedContent(0, v34, v37);
  v38 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v156 = (char *)&v127 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  v155 = (char *)&v127 - v41;
  v42 = a4;
  v43 = a4;
  v44 = a5;
  v46 = (int *)type metadata accessor for OptionSlider(0, v43, a5, v45);
  v47 = v46[10];
  v161 = a1;
  v48 = (*(uint64_t (**)(void))(a1 + v47))();
  if (qword_1009CDE10 != -1)
    v48 = swift_once(&qword_1009CDE10, sub_1002D87BC);
  v49 = qword_100A1E478;
  v50 = static Alignment.center.getter(v48);
  View.frame(width:height:alignment:)(v49, 0, 0, 1, v50, v51, v42, v44);
  v52 = (*(uint64_t (**)(char *, uint64_t))(v127 + 8))(v30, v42);
  v53 = static Edge.Set.trailing.getter(v52);
  v178 = v44;
  v179 = &protocol witness table for _FrameLayout;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v31);
  View.padding(_:_:)(v53, 0x4024000000000000, 0, v31, WitnessTable);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v33, v31);
  v176 = WitnessTable;
  v177 = &protocol witness table for _PaddingLayout;
  v55 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v34);
  v56 = v156;
  View.accessibilityHidden(_:)(1, v34, v55);
  (*(void (**)(char *, uint64_t))(v137 + 8))(v36, v34);
  v57 = sub_100244A50();
  v174 = v55;
  v175 = v57;
  v58 = v157;
  v129 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v157);
  v127 = *(_QWORD *)(v38 + 16);
  ((void (*)(char *, char *, uint64_t))v127)(v155, v56, v58);
  v137 = *(_QWORD *)(v38 + 8);
  ((void (*)(char *, uint64_t))v137)(v56, v58);
  v59 = v161;
  v60 = sub_100341DCC((uint64_t)v46);
  *(_QWORD *)&v168 = v61;
  *((_QWORD *)&v168 + 1) = v62;
  *(double *)&v169 = v60;
  v63 = v46[12];
  v166 = *(_OWORD *)(v59 + v46[11]);
  v64 = v59;
  v165[0] = *(_QWORD *)(v59 + v63);
  v65 = sub_100224AA8();
  v66 = v128;
  v67 = Slider<>.init<A>(value:in:step:onEditingChanged:)(&v168, &v166, v165, BKAppDelegate.enableMetricsInspectorOnDebugMode(), 0, &type metadata for Double, v65, v65);
  v68 = static Color.primary.getter(v67);
  KeyPath = swift_getKeyPath(&unk_10071C8B0);
  v70 = v130;
  v71 = (uint64_t)v133;
  v72 = v132;
  (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v133, v66, v132);
  v73 = v135;
  v74 = (uint64_t *)(v71 + *(int *)(v135 + 36));
  *v74 = KeyPath;
  v74[1] = v68;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v66, v72);
  v75 = (uint64_t *)(v64 + v46[9]);
  v77 = *v75;
  v76 = v75[1];
  *(_QWORD *)&v168 = v77;
  *((_QWORD *)&v168 + 1) = v76;
  v78 = sub_10034381C();
  v79 = sub_1001F2108();
  v80 = (uint64_t)v131;
  View.accessibilityLabel<A>(_:)(&v168, v73, &type metadata for String, v78, v79);
  sub_100010960(v71, &qword_1009DC1A8);
  v81 = v138;
  v168 = v138;
  v82 = (uint64_t)v136;
  ModifiedContent<>.accessibilityValue<A>(_:)(&v168, v134, &type metadata for String, v79);
  sub_100010960(v80, &qword_1009DC1B0);
  v83 = v160;
  sub_10000B5E4(v82, v160, &qword_1009DC1B0);
  *(_BYTE *)(v83 + *(int *)(v158 + 36)) = 1;
  sub_100010960(v82, &qword_1009DC1B0);
  sub_100025B3C(v83, v159, &qword_1009DC150);
  v168 = v81;
  v84 = swift_bridgeObjectRetain(*((_QWORD *)&v81 + 1));
  v85 = Text.init<A>(_:)(&v168, &type metadata for String, v79, v84);
  v87 = v86;
  v89 = v88;
  LOBYTE(v82) = v90 & 1;
  v91 = swift_getKeyPath(&unk_10071C820);
  v92 = static Font.body.getter(v91);
  v93 = swift_getKeyPath(&unk_10071C850);
  *(_QWORD *)&v168 = v85;
  *((_QWORD *)&v168 + 1) = v87;
  LOBYTE(v169) = v82;
  *((_QWORD *)&v169 + 1) = v89;
  *(_QWORD *)&v170 = v91;
  *((_QWORD *)&v170 + 1) = 1;
  v171 = 0;
  v172 = v93;
  v173 = v92;
  v94 = sub_10004CFD4(&qword_1009DC178);
  v95 = sub_100343620();
  v96 = v140;
  View.monospacedDigit()(v94, v95);
  sub_1001F5B28(v85, v87, v82);
  swift_release(v92);
  swift_release(v93);
  swift_release(v91);
  swift_bridgeObjectRelease(v89);
  v97 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  v98 = swift_getKeyPath(&unk_10071C880);
  v99 = v141;
  v100 = (uint64_t)v146;
  v101 = v142;
  (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v146, v96, v142);
  v102 = (uint64_t *)(v100 + *(int *)(v139 + 36));
  *v102 = v98;
  v102[1] = v97;
  (*(void (**)(char *, uint64_t))(v99 + 8))(v96, v101);
  v103 = v144;
  sub_100667DF8(v144);
  v104 = v149;
  v105 = (uint64_t)v147;
  v106 = v150;
  (*(void (**)(char *, _QWORD, uint64_t))(v149 + 104))(v147, enum case for ContentSizeCategory.extraLarge(_:), v150);
  LOBYTE(v97) = sub_1003438B8(v103, v105);
  v107 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
  v107(v105, v106);
  v108 = ((uint64_t (*)(uint64_t, uint64_t))v107)(v103, v106);
  if ((v97 & 1) != 0)
    v109 = 0x405E000000000000;
  else
    v109 = 0x4049000000000000;
  v110 = static Alignment.center.getter(v108);
  _FrameLayout.init(width:height:alignment:)(&v168, v109, 0, 0, 1, v110, v111);
  v112 = v145;
  sub_10000B5E4(v100, v145, &qword_1009DC190);
  v113 = v148;
  v114 = (_OWORD *)(v112 + *(int *)(v148 + 36));
  v115 = v169;
  *v114 = v168;
  v114[1] = v115;
  v114[2] = v170;
  sub_100010960(v100, &qword_1009DC190);
  v116 = sub_100343C40();
  v117 = (uint64_t)v143;
  View.accessibilityHidden(_:)(1, v113, v116);
  sub_100010960(v112, &qword_1009DC198);
  v118 = v152;
  sub_100025B3C(v117, v152, &qword_1009DC158);
  v119 = v156;
  v120 = v155;
  v121 = v157;
  ((void (*)(char *, char *, uint64_t))v127)(v156, v155, v157);
  *(_QWORD *)&v166 = v119;
  v122 = v159;
  v123 = v160;
  sub_10000B5E4(v159, v160, &qword_1009DC150);
  *((_QWORD *)&v166 + 1) = v123;
  v124 = v153;
  sub_10000B5E4(v118, v153, &qword_1009DC158);
  v167 = v124;
  v165[0] = v121;
  v165[1] = v158;
  v165[2] = v151;
  v162 = v129;
  v163 = sub_10028156C(&qword_1009DC1D8, &qword_1009DC150, (void (*)(void))sub_100343D58, (void (*)(void))sub_1002D1198);
  v164 = sub_10028156C(&qword_1009DC1E8, &qword_1009DC158, (void (*)(void))sub_100343C40, (void (*)(void))sub_100244A50);
  sub_100341C18((uint64_t *)&v166, 3uLL, (uint64_t)v165);
  sub_100010960(v118, &qword_1009DC158);
  sub_100010960(v122, &qword_1009DC150);
  v125 = (uint64_t (*)(char *, uint64_t))v137;
  ((void (*)(char *, uint64_t))v137)(v120, v121);
  sub_100010960(v124, &qword_1009DC158);
  sub_100010960(v123, &qword_1009DC150);
  return v125(v119, v121);
}

uint64_t sub_100343574@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1003422EC(v1[4], v1[5], v1[6], v1[2], v1[3], a1);
}

unint64_t sub_10034359C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DC168;
  if (!qword_1009DC168)
  {
    v1 = sub_100030B74(&qword_1009DC160);
    sub_100343620();
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DC168);
  }
  return result;
}

unint64_t sub_100343620()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DC170;
  if (!qword_1009DC170)
  {
    v1 = sub_100030B74(&qword_1009DC178);
    sub_1002EDF28();
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DC170);
  }
  return result;
}

uint64_t sub_1003436A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v5 = (int *)type metadata accessor for OptionSlider(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = (_QWORD *)(v4 + v8);
  v11 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(v4 + v8, v11) == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v4 + v8, v12);
  }
  else
  {
    swift_release(*v10);
  }
  v13 = (v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v10 + v5[9] + 8));
  swift_release(*(_QWORD *)((char *)v10 + v5[10] + 8));

  swift_release(*(_QWORD *)((char *)v10 + v5[15] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v4 + v13 + 8));
  return swift_deallocObject(v4, v13 + 16, v7 | 7);
}

uint64_t sub_1003437A4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(_QWORD *)(type metadata accessor for OptionSlider(0, v4, v5, a1) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (uint64_t *)(v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1003428F0(v2 + v7, *v8, v8[1], v4, v5, a2);
}

unint64_t sub_10034381C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DC1B8;
  if (!qword_1009DC1B8)
  {
    v1 = sub_100030B74(&qword_1009DC1A8);
    sub_100030B34(&qword_1009DC1C0, &qword_1009DC1A0, (uint64_t)&protocol conformance descriptor for Slider<A, B>);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DC1B8);
  }
  return result;
}

BOOL sub_1003438B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t (*v12)(char *, uint64_t);
  int v13;
  unint64_t v14;
  int v15;
  int v16;
  unint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for ContentSizeCategory(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v19 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v19 - v9, a2, v4);
  v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  v13 = v12(v10, v4);
  v14 = 0;
  v15 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v13 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v13 == enum case for ContentSizeCategory.small(_:))
    {
      v14 = 1;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.medium(_:))
    {
      v14 = 2;
      goto LABEL_24;
    }
    if (v13 == enum case for ContentSizeCategory.large(_:))
      goto LABEL_7;
    if (v13 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      v14 = 4;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      v14 = 5;
    }
    else if (v13 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      v14 = 6;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      v14 = 7;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      v14 = 8;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      v14 = 9;
    }
    else if (v13 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      v14 = 10;
    }
    else
    {
      if (v13 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_7:
        v14 = 3;
        goto LABEL_24;
      }
      v14 = 11;
    }
  }
LABEL_24:
  v11(v8, a1, v4);
  v16 = v12(v8, v4);
  if (v16 == v15)
  {
    v17 = 0;
  }
  else if (v16 == enum case for ContentSizeCategory.small(_:))
  {
    v17 = 1;
  }
  else if (v16 == enum case for ContentSizeCategory.medium(_:))
  {
    v17 = 2;
  }
  else
  {
    if (v16 != enum case for ContentSizeCategory.large(_:))
    {
      if (v16 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        v17 = 4;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        v17 = 5;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        v17 = 6;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        v17 = 7;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        v17 = 8;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        v17 = 9;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        v17 = 10;
        return v14 < v17;
      }
      if (v16 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        v17 = 11;
        return v14 < v17;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
    v17 = 3;
  }
  return v14 < v17;
}

unint64_t sub_100343C40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DC1C8;
  if (!qword_1009DC1C8)
  {
    v1 = sub_100030B74(&qword_1009DC198);
    sub_100343CAC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DC1C8);
  }
  return result;
}

unint64_t sub_100343CAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1009DC1D0;
  if (!qword_1009DC1D0)
  {
    v1 = sub_100030B74(&qword_1009DC190);
    v2[0] = sub_100030B74(&qword_1009DC178);
    v2[1] = sub_100343620();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.monospacedDigit()>>, 1);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DC1D0);
  }
  return result;
}

uint64_t sub_100343D58()
{
  return sub_10028156C(&qword_1009DC1E0, &qword_1009DC1B0, (void (*)(void))sub_10034381C, (void (*)(void))sub_100244A50);
}

uint64_t sub_100343D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = (int *)type metadata accessor for OptionSlider(0, *((_QWORD *)v4 + 4), *((_QWORD *)v4 + 5), a4);
  v6 = *((_QWORD *)v5 - 1);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 48) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_unknownObjectRelease(*((_QWORD *)v4 + 2));
  v10 = &v4[v8];
  v11 = sub_10004CFD4(&qword_1009D8790);
  if (swift_getEnumCaseMultiPayload(&v4[v8], v11) == 1)
  {
    v12 = type metadata accessor for ContentSizeCategory(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(&v4[v8], v12);
  }
  else
  {
    swift_release(*(_QWORD *)v10);
  }
  swift_bridgeObjectRelease(*(_QWORD *)&v10[v5[9] + 8]);
  swift_release(*(_QWORD *)&v10[v5[10] + 8]);

  swift_release(*(_QWORD *)&v10[v5[15] + 8]);
  return swift_deallocObject(v4, v8 + v9, v7 | 7);
}

double sub_100343E6C@<D0>(uint64_t a1@<X3>, double *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double result;

  v4 = type metadata accessor for OptionSlider(0, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a1);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  result = *(double *)(v2 + ((v5 + 48) & ~v5) + *(int *)(v4 + 52));
  *a2 = result;
  return result;
}

uint64_t sub_100343EB8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_100343EDC(double *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(double))(v1 + 32))(*a1);
}

uint64_t sub_100343F00(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata3;
  uint64_t v10;
  uint64_t WitnessTable;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *a1;
  v2 = sub_100030B74(&qword_1009DC148);
  v3 = type metadata accessor for ModifiedContent(255, v1, &type metadata for _FrameLayout);
  v4 = type metadata accessor for ModifiedContent(255, v3, &type metadata for _PaddingLayout);
  v5 = type metadata accessor for AccessibilityAttachmentModifier(255);
  v6 = type metadata accessor for ModifiedContent(255, v4, v5);
  v7 = sub_100030B74(&qword_1009DC150);
  v8 = sub_100030B74(&qword_1009DC158);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3(255, v6, v7, v8, 0, 0);
  v10 = type metadata accessor for TupleView(255, TupleTypeMetadata3);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v10);
  v13 = type metadata accessor for OptionsAdaptiveStack(255, v10, WitnessTable, v12);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(255, v2, v13, 0, 0);
  v15 = type metadata accessor for TupleView(255, TupleTypeMetadata2);
  v16 = swift_getWitnessTable(&protocol conformance descriptor for TupleView<A>, v15);
  v17 = type metadata accessor for VStack(255, v15, v16);
  return swift_getWitnessTable(&protocol conformance descriptor for VStack<A>, v17);
}

uint64_t sub_10034403C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009DC1F0);
  sub_100048F64(v0, (uint64_t)qword_1009DC1F0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000034, 0x80000001007C0B70);
}

uint64_t sub_1003440BC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071C958);
  v2 = swift_getKeyPath(&unk_10071C980);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_10034412C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  result = swift_weakLoadStrong(v1);
  if (result)
  {
    v3 = result;
    sub_100344180();
    return swift_release(v3);
  }
  return result;
}

void sub_100344180()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  id v8;
  char v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17[4];

  v1 = v0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "appIntentsInfo");

  }
  else
  {
    v4 = 0;
  }
  KeyPath = swift_getKeyPath(&unk_10071C958);
  v6 = swift_getKeyPath(&unk_10071C980);
  static Published.subscript.getter(v17, v1, KeyPath, v6);
  swift_release(KeyPath);
  swift_release(v6);
  v7 = v17[0];
  if (v17[0])
  {
    if (!v4)
    {

      v10 = 0;
      v13 = 0;
      goto LABEL_11;
    }
    sub_100009E04(0, (unint64_t *)&unk_1009E7700, BCAppIntentsAssetViewControllerInfo_ptr);
    v4 = v4;
    v8 = v7;
    v9 = static NSObject.== infix(_:_:)(v8, v4);

    if ((v9 & 1) != 0)
    {

      return;
    }
  }
  else if (!v4)
  {
    return;
  }
  v10 = v4;
  v11 = objc_msgSend(v10, "copyWithZone:", 0);
  _bridgeAnyObjectToAny(_:)(v11);
  swift_unknownObjectRelease(v11);
  v12 = sub_100009E04(0, (unint64_t *)&unk_1009E7700, BCAppIntentsAssetViewControllerInfo_ptr);
  swift_dynamicCast(&v16, v17, (char *)&type metadata for Any + 8, v12, 7);
  v13 = v16;

LABEL_11:
  v14 = swift_getKeyPath(&unk_10071C958);
  v15 = swift_getKeyPath(&unk_10071C980);
  v17[0] = v13;
  swift_retain(v1);
  static Published.subscript.setter(v17, v1, v14, v15);

}

uint64_t sub_10034434C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];
  uint64_t v13;

  v5 = swift_allocObject(&unk_1008FEAD8, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v12[4] = sub_10034466C;
  v13 = v5;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1000147F0;
  v12[3] = &unk_1008FEAF0;
  v6 = _Block_copy(v12);
  v7 = v13;
  swift_retain(a2);
  swift_release(v7);
  v8 = (id)BCAppIntentsAssetViewControllerAddInfoChangeObserver(v2, v6);
  _Block_release(v6);
  v9 = swift_allocObject(&unk_1008FEB28, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  v10 = type metadata accessor for AnyCancellable(0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  return AnyCancellable.init(_:)(sub_100344698, v9);
}

uint64_t sub_100344454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1001FE9A0(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker__appIntentsInfo;
  v2 = sub_10004CFD4(&qword_1009DC2E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker_task));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003444C0()
{
  return type metadata accessor for AppIntentsAssetViewControllerInfoTracker(0);
}

uint64_t sub_1003444C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject(&unk_1008FEB50, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain(a2);
  sub_1006498E4((void (*)(uint64_t))sub_10004DE04, v4);
  return swift_release(v4);
}

uint64_t sub_100344528(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100344548@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071C958);
  v5 = swift_getKeyPath(&unk_10071C980);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1003445C4(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071C958);
  v5 = swift_getKeyPath(&unk_10071C980);
  v8 = v2;
  v6 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

uint64_t sub_100344638()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10034465C()
{
  uint64_t v0;

  return sub_10034412C(v0);
}

uint64_t sub_10034466C()
{
  uint64_t v0;

  return sub_1003444C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100344674()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100344698()
{
  uint64_t v0;

  return BCAppIntentsAssetViewControllerRemoveInfoChangeObserver(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003446A0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003446C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[16];
  uint64_t v28;
  char v29;

  v1 = type metadata accessor for Locale(0);
  v25 = *(_QWORD *)(v1 - 8);
  v26 = v1;
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v24 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v24 - v12;
  v14 = *(_QWORD *)(v0 + 56);
  if (v14)
  {
    v15 = *(_QWORD *)(v0 + 48);
    v16 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    v15 = 0;
    v16 = 0xE000000000000000;
  }
  sub_1003455E4(v0 + 72, (uint64_t)v27);
  sub_1003455E4((uint64_t)v27, (uint64_t)&v28);
  if ((v29 & 1) != 0)
  {
LABEL_6:
    swift_bridgeObjectRetain(v14);
  }
  else
  {
    switch(v28)
    {
      case 1:
      case 3:
        goto LABEL_6;
      case 2:
        swift_bridgeObjectRetain(v14);
        swift_bridgeObjectRelease(v16);
        v17 = String.LocalizationValue.init(stringLiteral:)(1701147206, 0xE400000000000000);
        static Locale.current.getter(v17);
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
        v18 = type metadata accessor for BundleFinder();
        ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
        v20 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
        v21 = v25;
        v22 = v26;
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v4, v6, v26);
        v15 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v20, v4, "Accessibility Free Label Text", 29, 2);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
        break;
      default:
        swift_bridgeObjectRetain(v14);
        swift_bridgeObjectRelease(v16);
        v15 = 0;
        break;
    }
  }
  return v15;
}

uint64_t sub_100344930(void *a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;

  *(_QWORD *)(v2 + 104) = 0;
  swift_unknownObjectWeakInit(v2 + 112, 0);
  *(_QWORD *)(v2 + 128) = 0;
  swift_unknownObjectWeakInit(v2 + 120, 0);
  *(_QWORD *)(v2 + 136) = 0;
  *(_BYTE *)(v2 + 144) = 2;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_WORD *)(v2 + 80) = 514;
  *(_QWORD *)(v2 + 88) = 0;
  *(_BYTE *)(v2 + 96) = 1;
  v5 = *(void **)(v2 + 104);
  *(_QWORD *)(v2 + 104) = a1;
  v6 = a1;

  v7 = swift_unknownObjectWeakAssign(v2 + 112, a2);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    swift_retain(v2);
    objc_msgSend(v9, "setServiceDelegate:", v2);
    swift_unknownObjectRelease(v9);
    swift_release(v2);
  }
  swift_unknownObjectRelease(a2);

  return v2;
}

uint64_t sub_100344A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  void *Strong;
  void *v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  char v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  _QWORD v28[5];
  _QWORD *v29;

  v1 = v0;
  result = swift_unknownObjectWeakLoadStrong(v0 + 120);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(v0 + 128);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 112);
    if (Strong)
    {
      v6 = Strong;
      v7 = objc_msgSend(Strong, "isAudiobook");
      swift_unknownObjectRelease(v6);
    }
    else
    {
      v7 = 0;
    }
    *(_BYTE *)(v1 + 81) = v7;
    v8 = *(_QWORD *)(v1 + 24);
    v9 = *(_QWORD *)(v1 + 40);
    v10 = *(_QWORD *)(v1 + 56);
    v11 = *(_QWORD *)(v1 + 72);
    v12 = *(_BYTE *)(v1 + 80);
    v13 = (_QWORD *)(v3 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_buyParameters);
    v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_buyParameters + 8);
    *v13 = *(_QWORD *)(v1 + 16);
    v13[1] = v8;
    swift_bridgeObjectRetain_n(v8, 2);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRelease(v14);
    *(_BYTE *)(v3 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_canPreorder) = v12;
    sub_1004A9FC4();
    sub_1004A9D70();
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v8);
    v15 = *(void **)(v1 + 104);
    if (v15)
    {
      v16 = (_QWORD *)swift_allocObject(&unk_1008FEC70, 40, 7);
      v16[2] = v1;
      v16[3] = v3;
      v16[4] = v4;
      v28[4] = sub_10034568C;
      v29 = v16;
      v28[0] = _NSConcreteStackBlock;
      v28[1] = 1107296256;
      v28[2] = sub_10034502C;
      v28[3] = &unk_1008FEC88;
      v17 = _Block_copy(v28);
      v18 = v29;
      v19 = v15;
      swift_retain(v1);
      swift_unknownObjectRetain(v3);
      objc_msgSend(v19, "get:", v17, swift_release(v18).n128_f64[0]);
      _Block_release(v17);

    }
    v20 = objc_msgSend((id)objc_opt_self(NSProcessInfo), "processInfo");
    v21 = objc_msgSend(v20, "environment");

    v22 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v21, &type metadata for String, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v22 + 16) && (sub_10004CE80(0xD00000000000001BLL, 0x80000001007C0CD0), (v23 & 1) != 0))
    {
      swift_unknownObjectRelease(v3);
      return swift_bridgeObjectRelease(v22);
    }
    else
    {
      swift_bridgeObjectRelease(v22);
      v24 = objc_msgSend((id)objc_opt_self(BKReachability), "reachabilityForInternetConnection");
      v25 = *(void **)(v1 + 136);
      *(_QWORD *)(v1 + 136) = v24;

      v26 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1009CDF28 != -1)
        swift_once(&qword_1009CDF28, sub_10034562C);
      objc_msgSend(v26, "addObserver:selector:name:object:", v1, "networkReachabilityChangedWithNotification:", qword_100A1E620, *(_QWORD *)(v1 + 136));

      v27 = *(id *)(v1 + 136);
      objc_msgSend(v27, "startNotifier");

      return swift_unknownObjectRelease(v3);
    }
  }
  return result;
}

uint64_t sub_100344D58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  if (result)
  {
    v6 = result;
    v7 = objc_opt_self(AEUserPublishingProductProfile);
    result = swift_dynamicCastObjCClass(v6, v7);
    if (result)
    {
      v8 = (void *)result;
      swift_unknownObjectRetain(v6);
      v9 = objc_msgSend(v8, "buyParameters");
      if (v9)
      {
        v10 = v9;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v13 = v12;

      }
      else
      {
        v11 = 0;
        v13 = 0xE000000000000000;
      }
      v14 = *(_QWORD *)(a3 + 24);
      *(_QWORD *)(a3 + 16) = v11;
      *(_QWORD *)(a3 + 24) = v13;
      swift_bridgeObjectRelease(v14);
      v15 = objc_msgSend(v8, "priceString");
      if (!v15)
        goto LABEL_9;
      v16 = v15;
      v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v19 = v18;

      v48 = v17;
      v49 = v19;
      v20 = sub_1001F15BC();
      LOBYTE(v16) = Collection.isNotEmpty.getter(&type metadata for String, v20);
      swift_bridgeObjectRelease(v19);
      if ((v16 & 1) != 0)
        v21 = objc_msgSend(v8, "priceString", v17, v19);
      else
LABEL_9:
        v21 = objc_msgSend(v8, "actionTextWithType:", 0, v48, v49);
      v22 = v21;
      v23 = v22;
      if (v22)
      {
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v26 = v25;

      }
      else
      {
        v24 = 0;
        v26 = 0;
      }
      v27 = *(_QWORD *)(a3 + 40);
      *(_QWORD *)(a3 + 32) = v24;
      *(_QWORD *)(a3 + 40) = v26;
      swift_bridgeObjectRelease(v27);
      v28 = objc_msgSend(v8, "priceString");
      if (v28)
      {
        v29 = v28;
        v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
        v32 = v31;

      }
      else
      {
        v30 = 0;
        v32 = 0;
      }
      v33 = *(_QWORD *)(a3 + 72);
      *(_QWORD *)(a3 + 64) = v30;
      *(_QWORD *)(a3 + 72) = v32;
      swift_bridgeObjectRelease(v33);
      v34 = objc_msgSend(v8, "actionTextWithType:", 0);
      if (v34)
      {
        v35 = v34;
        v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        v38 = v37;

      }
      else
      {
        v36 = 0;
        v38 = 0;
      }
      v39 = *(_QWORD *)(a3 + 56);
      *(_QWORD *)(a3 + 48) = v36;
      *(_QWORD *)(a3 + 56) = v38;
      swift_bridgeObjectRelease(v39);
      *(_BYTE *)(a3 + 80) = objc_msgSend(v8, "isPreorder");
      *(_QWORD *)(a3 + 88) = objc_msgSend(v8, "offerType");
      *(_BYTE *)(a3 + 96) = 0;
      v40 = *(_QWORD *)(a3 + 16);
      v41 = *(_QWORD *)(a3 + 24);
      v42 = *(_QWORD *)(a3 + 40);
      v43 = *(_QWORD *)(a3 + 56);
      v44 = *(_QWORD *)(a3 + 72);
      v45 = *(_BYTE *)(a3 + 80);
      v46 = (_QWORD *)(a4 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_buyParameters);
      v47 = *(_QWORD *)(a4 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_buyParameters + 8);
      *v46 = v40;
      v46[1] = v41;
      swift_bridgeObjectRetain_n(v41, 2);
      swift_bridgeObjectRetain(v42);
      swift_bridgeObjectRetain(v43);
      swift_bridgeObjectRetain(v44);
      swift_bridgeObjectRelease(v47);
      *(_BYTE *)(a4 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_canPreorder) = v45;
      sub_1004A9FC4();
      sub_1004A9D70();
      swift_unknownObjectRelease(v6);
      swift_bridgeObjectRelease(v44);
      swift_bridgeObjectRelease(v43);
      swift_bridgeObjectRelease(v42);
      return swift_bridgeObjectRelease(v41);
    }
  }
  return result;
}

uint64_t sub_10034502C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  swift_unknownObjectRetain(a2);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

  return swift_unknownObjectRelease(a2);
}

id sub_100345104()
{
  uint64_t v0;
  void *Strong;
  id v2;
  id v3;
  id v4;
  unsigned __int8 v5;
  id v6;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 112);
  if (Strong)
  {
    v2 = Strong;
    if ((objc_msgSend(Strong, "respondsToSelector:", "storeReachable") & 1) != 0)
    {
      v3 = objc_msgSend(v2, "storeReachable");
LABEL_9:
      v6 = v3;
      swift_unknownObjectRelease(v2);
      return v6;
    }
    swift_unknownObjectRelease(v2);
  }
  if ((objc_msgSend((id)objc_opt_self(BKReachability), "isOffline") & 1) == 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
    v5 = objc_msgSend(v4, "isStoreAccountManagedAppleID");

    if ((v5 & 1) == 0)
    {
      v2 = objc_msgSend((id)objc_opt_self(BURestrictionsProvider), "sharedInstance");
      v3 = objc_msgSend(v2, "isBookStoreAllowed");
      goto LABEL_9;
    }
  }
  return 0;
}

uint64_t sub_1003451F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);

  sub_1001FE9A0(v0 + 112);
  sub_1001FE9A0(v0 + 120);

  return swift_deallocClassInstance(v0, 145, 7);
}

uint64_t type metadata accessor for BuyButtonDataManager()
{
  return objc_opt_self(_TtC5Books20BuyButtonDataManager);
}

uint64_t _s5IssueVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

uint64_t initializeWithCopy for BuyButtonDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for BuyButtonDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  v12 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v12;
  return a1;
}

__n128 initializeWithCopy for KeyboardAvoidance(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for BuyButtonDataModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for BuyButtonDataModel(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BuyButtonDataModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BuyButtonDataModel()
{
  return &type metadata for BuyButtonDataModel;
}

uint64_t sub_1003455E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DC4B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

NSString sub_10034562C()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100A1E620 = (uint64_t)result;
  return result;
}

uint64_t sub_100345660()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10034568C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100344D58(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_100345724(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = OBJC_IVAR___BKNowPlayingIndicatorView_levelCornerRadius;
  *(double *)(v1 + OBJC_IVAR___BKNowPlayingIndicatorView_levelCornerRadius) = a1;
  v3 = (uint64_t *)(v1 + OBJC_IVAR___BKNowPlayingIndicatorView_levelViews);
  swift_beginAccess(v1 + OBJC_IVAR___BKNowPlayingIndicatorView_levelViews, v12, 0, 0);
  v4 = *v3;
  if (!((unint64_t)v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(v4);
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v4);
  }
  if (v4 < 0)
    v11 = v4;
  else
    v11 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v4);
  result = _CocoaArrayWrapper.endIndex.getter(v11);
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease(v4);
LABEL_3:
  if (v5 >= 1)
  {
    v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v4);
      else
        v8 = *(id *)(v4 + 8 * v7 + 32);
      v9 = v8;
      ++v7;
      v10 = objc_msgSend(v8, "layer");
      objc_msgSend(v10, "setCornerRadius:", *(double *)(v1 + v2));

    }
    while (v5 != v7);
    return swift_bridgeObjectRelease(v4);
  }
  __break(1u);
  return result;
}

id sub_100345B18(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  objc_super v17;

  *(_QWORD *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_levelViews] = _swiftEmptyArrayStorage;
  v4[OBJC_IVAR___BKNowPlayingIndicatorView_needsLevelUpdate] = 0;
  *(_QWORD *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_interLevelSpacing] = 0x3FE0000000000000;
  *(_QWORD *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_levelCornerRadius] = 0x3FE0000000000000;
  *(_QWORD *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_levelWidth] = 0x4008000000000000;
  *(_QWORD *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_maximumLevelHeight] = 0x402A000000000000;
  *(_QWORD *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_minimumLevelHeight] = 0x4008000000000000;
  *(_QWORD *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_numberOfLevels] = 3;
  *(_QWORD *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_playbackState] = 0;
  v4[OBJC_IVAR___BKNowPlayingIndicatorView_showsLevelGutters] = 0;
  v9 = OBJC_IVAR___BKNowPlayingIndicatorView_levelGuttersColor;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v4;
  v12 = objc_msgSend(v10, "whiteColor");
  v13 = objc_msgSend(v12, "colorWithAlphaComponent:", 0.2);

  *(_QWORD *)&v4[v9] = v13;
  v14 = OBJC_IVAR___BKNowPlayingIndicatorView_levelColor;
  *(_QWORD *)&v11[v14] = objc_msgSend(v10, "whiteColor");

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  v15 = objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  sub_100346374();

  return v15;
}

Swift::Void __swiftcall NowPlayingIndicatorView.layoutSubviews()()
{
  char *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double MaxY;
  id v15;
  uint64_t v16;
  _BYTE v17[24];
  objc_super v18;
  CGRect v19;

  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  objc_msgSendSuper2(&v18, "layoutSubviews");
  v1 = (uint64_t *)&v0[OBJC_IVAR___BKNowPlayingIndicatorView_levelViews];
  swift_beginAccess(&v0[OBJC_IVAR___BKNowPlayingIndicatorView_levelViews], v17, 0, 0);
  v2 = *v1;
  if (!((unint64_t)v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(v2);
    return;
  }
  if (v2 < 0)
    v16 = v2;
  else
    v16 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v16);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = OBJC_IVAR___BKNowPlayingIndicatorView_levelWidth;
    v6 = OBJC_IVAR___BKNowPlayingIndicatorView_interLevelSpacing;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      else
        v7 = *(id *)(v2 + 8 * v4 + 32);
      v8 = v7;
      v9 = v4 + 1;
      objc_msgSend(v7, "frame");
      v11 = v10;
      v12 = *(double *)&v0[v5];
      v13 = (v12 + *(double *)&v0[v6]) * (double)v4;
      objc_msgSend(v0, "bounds");
      MaxY = CGRectGetMaxY(v19);
      objc_msgSend(v8, "setFrame:", v13, MaxY, v12, v11);
      v15 = objc_msgSend(v8, "layer");
      objc_msgSend(v15, "setFrame:", v13, MaxY, v12, v11);

      v4 = v9;
    }
    while (v3 != v9);
    goto LABEL_13;
  }
  __break(1u);
}

void NowPlayingIndicatorView.draw(_:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  double v13;
  double MaxY;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  objc_super v21;
  CGRect v22;

  v21.receiver = v4;
  v21.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  objc_msgSendSuper2(&v21, "drawRect:", a1, a2, a3, a4);
  if (v4[OBJC_IVAR___BKNowPlayingIndicatorView_showsLevelGutters] == 1)
  {
    v9 = *(void **)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_levelGuttersColor];
    if (v9)
    {
      v10 = *(id *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_levelGuttersColor];
    }
    else
    {
      v10 = objc_msgSend(*(id *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_levelColor], "colorWithAlphaComponent:", 0.2);
      v9 = 0;
    }
    v11 = v9;
    objc_msgSend(v10, "setFill");
    objc_msgSend(v4, "bounds");
    v12 = OBJC_IVAR___BKNowPlayingIndicatorView_levelWidth;
    v13 = *(double *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_levelWidth];
    MaxY = CGRectGetMaxY(v22);
    v15 = *(_QWORD *)&v4[OBJC_IVAR___BKNowPlayingIndicatorView_numberOfLevels];
    if (v15 < 0)
    {
      __break(1u);
      return;
    }
    v16 = MaxY;
    v17 = 0;
    v18 = OBJC_IVAR___BKNowPlayingIndicatorView_interLevelSpacing;
    while (1)
    {
      UIRectFillUsingOperation(1, (*(double *)&v4[v12] + *(double *)&v4[v18]) * (double)v17, 0.0, v13, v16);
      if (v15 == v17)
        break;
      if (__OFADD__(v17++, 1))
      {
        __break(1u);
        break;
      }
    }

  }
  v20 = OBJC_IVAR___BKNowPlayingIndicatorView_needsLevelUpdate;
  if (v4[OBJC_IVAR___BKNowPlayingIndicatorView_needsLevelUpdate] == 1)
  {
    sub_100346374();
    v4[v20] = 0;
  }
}

Swift::Void __swiftcall NowPlayingIndicatorView.tintColorDidChange()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  objc_msgSendSuper2(&v1, "tintColorDidChange");
  if (*((_BYTE *)v0 + OBJC_IVAR___BKNowPlayingIndicatorView_showsLevelGutters) == 1)
    objc_msgSend(v0, "setNeedsDisplay");
  sub_100346374();
}

id NowPlayingIndicatorView.isHidden.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  return objc_msgSendSuper2(&v2, "isHidden");
}

void NowPlayingIndicatorView.isHidden.setter(char a1)
{
  void *v1;
  objc_class *v3;
  unsigned int v4;
  objc_super v5;
  objc_super v6;

  v3 = (objc_class *)type metadata accessor for NowPlayingIndicatorView();
  v6.receiver = v1;
  v6.super_class = v3;
  v4 = objc_msgSendSuper2(&v6, "isHidden");
  v5.receiver = v1;
  v5.super_class = v3;
  objc_msgSendSuper2(&v5, "setHidden:", a1 & 1);
  if ((objc_msgSend(v1, "isHidden") & 1) == 0)
  {
    if (v4)
      sub_100346860();
  }
}

id sub_100346374()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id result;
  uint64_t v21;
  uint64_t v22;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  _BYTE v36[24];
  char v37[24];

  v4 = OBJC_IVAR___BKNowPlayingIndicatorView_numberOfLevels;
  v5 = *(uint64_t *)((char *)v1 + OBJC_IVAR___BKNowPlayingIndicatorView_numberOfLevels);
  if (v5 < 0)
    goto LABEL_47;
  v0 = v1;
  v6 = &unk_1009DC000;
  if (!v5)
  {
    v3 = 0;
LABEL_22:
    v1 = (uint64_t *)((char *)v0 + v6[151]);
    swift_beginAccess(v1, v36, 0, 0);
    v2 = *v1;
    if ((unint64_t)*v1 >> 62)
      goto LABEL_48;
    if (v3 < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_24;
LABEL_27:
    sub_100346860();
    return objc_msgSend(v0, "setNeedsLayout");
  }
  v1 = (uint64_t *)((char *)v1 + OBJC_IVAR___BKNowPlayingIndicatorView_levelViews);
  v33 = OBJC_IVAR___BKNowPlayingIndicatorView_numberOfLevels;
  v34 = OBJC_IVAR___BKNowPlayingIndicatorView_levelCornerRadius;
  v7 = OBJC_IVAR___BKNowPlayingIndicatorView_levelColor;
  swift_beginAccess(v1, v37, 0, 0);
  v2 = 0;
  while (1)
  {
    v10 = *v1;
    if ((unint64_t)*v1 >> 62)
      break;
    if (v2 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_9;
LABEL_16:
    v14 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    if (!v14)
      goto LABEL_6;
    v15 = v14;
    v16 = objc_msgSend(v15, "layer");
    objc_msgSend(v16, "setCornerRadius:", *(double *)((char *)v0 + v34));
    objc_msgSend(v16, "setAnchorPoint:", 0.5, 1.0);
    swift_beginAccess(v1, v36, 33, 0);
    v11 = v15;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
    v18 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v17 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v18 >= v17 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
    v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v11);
    specialized Array._endMutation()(v8);
    swift_endAccess(v36);
    objc_msgSend(v0, "addSubview:", v11);

LABEL_5:
    v9 = objc_msgSend(v11, "layer");
    v4 = (uint64_t)objc_msgSend(*(id *)((char *)v0 + v7), "CGColor");
    objc_msgSend(v9, "setBackgroundColor:", v4);

LABEL_6:
    if (v5 == ++v2)
    {
      v4 = v33;
      v3 = *(uint64_t *)((char *)v0 + v33);
      v6 = (_QWORD *)&unk_1009DC000;
      goto LABEL_22;
    }
  }
  if (v10 < 0)
    v12 = *v1;
  else
    v12 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v13 = _CocoaArrayWrapper.endIndex.getter(v12);
  swift_bridgeObjectRelease(v10);
  if (v2 >= v13)
    goto LABEL_16;
LABEL_9:
  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*v1);
    v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v3);
    swift_bridgeObjectRelease(v3);
    goto LABEL_5;
  }
  if ((unint64_t)v2 < *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v3 + 8 * v2 + 32);
    goto LABEL_5;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  if (v2 < 0)
    v30 = v2;
  else
    v30 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v31 = _CocoaArrayWrapper.endIndex.getter(v30);
  swift_bridgeObjectRelease(v2);
  if (v3 >= v31)
    goto LABEL_27;
LABEL_24:
  v19 = *(uint64_t *)((char *)v0 + v4);
  v3 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    if (v3 < 0)
      v32 = *v1;
    else
      v32 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v3);
    if (v2 >= v19)
      goto LABEL_26;
    goto LABEL_57;
  }
  v2 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v2 < v19)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_26:
  if (v19 == v2)
    goto LABEL_27;
  if (v19 < v2)
  {
    v21 = ~v19;
    do
    {
      v4 = *v1;
      if ((*v1 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain(*v1);
        v3 = specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v4);
        swift_bridgeObjectRelease(v4);
      }
      else
      {
        if (v19 < 0)
          goto LABEL_44;
        if ((unint64_t)v19 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_46;
        v3 = (uint64_t)*(id *)(v4 + 8 * v19 + 32);
      }
      objc_msgSend((id)v3, "removeFromSuperview");
      swift_beginAccess(v1, v35, 33, 0);
      v22 = *v1;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
      *v1 = v22;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v22 < 0 || (v22 & 0x4000000000000000) != 0)
      {
        v22 = sub_100064598(v22);
        *v1 = v22;
      }
      v4 = v22 & 0xFFFFFFFFFFFFFF8;
      v24 = *(_QWORD *)(v4 + 16);
      if (v19 >= v24)
        goto LABEL_45;
      if ((uint64_t)(v21 + v24) < 0)
        goto LABEL_59;
      v25 = v19 + 1;
      v26 = v24 - 1;
      v27 = v4 + 8 * v19;
      v28 = *(void **)(v27 + 32);
      v29 = memmove((void *)(v27 + 32), (const void *)(v27 + 40), 8 * (v21 + v24));
      *(_QWORD *)(v4 + 16) = v26;
      specialized Array._endMutation()(v29);
      swift_endAccess(v35);

      --v21;
      v19 = v25;
    }
    while (v2 != v25);
    goto LABEL_27;
  }
LABEL_58:
  __break(1u);
LABEL_59:
  result = (id)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_100346860()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  Class isa;
  Class v11;
  NSString v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  NSString v19;
  id v20;
  void *v21;
  id v22;
  uint32_t v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Class v29;
  double v30;
  NSString v31;
  id v32;
  void *v33;
  id v34;
  Class v35;
  Class v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[32];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BKNowPlayingIndicatorView_levelViews);
  swift_beginAccess(v0 + OBJC_IVAR___BKNowPlayingIndicatorView_levelViews, v43, 0, 0);
  v2 = *v1;
  if ((unint64_t)v2 >> 62)
  {
LABEL_18:
    if (v2 < 0)
      v37 = v2;
    else
      v37 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v2, 2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v2);
    if (v3)
      goto LABEL_3;
LABEL_22:
    swift_bridgeObjectRelease(v2);
    return;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  if (!v3)
    goto LABEL_22;
LABEL_3:
  v40 = OBJC_IVAR___BKNowPlayingIndicatorView_playbackState;
  v4 = 4;
  v38 = OBJC_IVAR___BKNowPlayingIndicatorView_maximumLevelHeight;
  v39 = OBJC_IVAR___BKNowPlayingIndicatorView_minimumLevelHeight;
  v41 = v3;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v2);
    else
      v13 = *(id *)(v2 + 8 * v4);
    v14 = v13;
    v15 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    v16 = objc_msgSend(v13, "layer");
    v17 = objc_msgSend(v16, "presentationLayer");
    if (!v17)
      v17 = v16;
    v18 = *(_QWORD *)(v0 + v40);
    if (v18 != 2)
      break;
    v5 = String._bridgeToObjectiveC()();
    v6 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v5);

    objc_msgSend(v6, "setDuration:", 0.45);
    v7 = (void *)objc_opt_self(CAMediaTimingFunction);
    v8 = v6;
    v9 = objc_msgSend(v7, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
    objc_msgSend(v8, "setTimingFunction:", v9);

    objc_msgSend(v8, "setRemovedOnCompletion:", 0);
    objc_msgSend(v8, "setFillMode:", kCAFillModeBoth);
    objc_msgSend(v17, "bounds");
    isa = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v8, "setFromValue:", isa);

    v11 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v8, "setToValue:", v11);

LABEL_5:
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v16, "addAnimation:forKey:", v8, v12);

    ++v4;
    if (v15 == v41)
      goto LABEL_22;
  }
  if (v18 == 1)
  {
    v19 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend((id)objc_opt_self(CAKeyframeAnimation), "animationWithKeyPath:", v19);

    v21 = (void *)objc_opt_self(CAMediaTimingFunction);
    v8 = v20;
    v22 = objc_msgSend(v21, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
    objc_msgSend(v8, "setTimingFunction:", v22);

    objc_msgSend(v8, "setRemovedOnCompletion:", 0);
    objc_msgSend(v8, "setFillMode:", kCAFillModeBoth);
    v23 = arc4random();
    v24 = *(double *)(v0 + v38);
    v25 = v24 * 0.5 + v24 * 0.5 * ((double)(v23 % 0xB) / 10.0);
    objc_msgSend(v8, "setDuration:", v24 / v25 * 0.65);
    v26 = sub_10004CFD4(&qword_1009D4B80);
    v27 = swift_allocObject(v26, 128, 7);
    *(_OWORD *)(v27 + 16) = xmmword_100712B60;
    v28 = *(_QWORD *)(v0 + v39);
    *(_QWORD *)(v27 + 56) = &type metadata for CGFloat;
    *(_QWORD *)(v27 + 32) = v28;
    *(_QWORD *)(v27 + 88) = &type metadata for CGFloat;
    *(double *)(v27 + 64) = v25;
    *(_QWORD *)(v27 + 120) = &type metadata for CGFloat;
    *(_QWORD *)(v27 + 96) = v28;
    v29 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v8, "setValues:", v29, swift_bridgeObjectRelease(v27).n128_f64[0]);

    LODWORD(v30) = 2139095040;
    objc_msgSend(v8, "setRepeatCount:", v30);
    goto LABEL_5;
  }
  if (!v18)
  {
    v31 = String._bridgeToObjectiveC()();
    v32 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v31);

    objc_msgSend(v32, "setDuration:", 0.45);
    v33 = (void *)objc_opt_self(CAMediaTimingFunction);
    v8 = v32;
    v34 = objc_msgSend(v33, "functionWithName:", kCAMediaTimingFunctionEaseInEaseOut);
    objc_msgSend(v8, "setTimingFunction:", v34);

    objc_msgSend(v8, "setRemovedOnCompletion:", 0);
    objc_msgSend(v8, "setFillMode:", kCAFillModeBoth);
    objc_msgSend(v17, "bounds");
    v35 = CGFloat._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v8, "setFromValue:", v35);

    v36 = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v8, "setToValue:", v36);

    goto LABEL_5;
  }
  v42 = *(_QWORD *)(v0 + v40);
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for NowPlayingIndicatorView.PlaybackState, &v42, &type metadata for NowPlayingIndicatorView.PlaybackState, &type metadata for Int);
  __break(1u);
}

id NowPlayingIndicatorView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NowPlayingIndicatorView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for NowPlayingIndicatorView()
{
  return objc_opt_self(BKNowPlayingIndicatorView);
}

void sub_100346F9C()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;

  *(_QWORD *)&v0[OBJC_IVAR___BKNowPlayingIndicatorView_levelViews] = &_swiftEmptyArrayStorage;
  v0[OBJC_IVAR___BKNowPlayingIndicatorView_needsLevelUpdate] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKNowPlayingIndicatorView_interLevelSpacing] = 0x3FE0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR___BKNowPlayingIndicatorView_levelCornerRadius] = 0x3FE0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR___BKNowPlayingIndicatorView_levelWidth] = 0x4008000000000000;
  *(_QWORD *)&v0[OBJC_IVAR___BKNowPlayingIndicatorView_maximumLevelHeight] = 0x402A000000000000;
  *(_QWORD *)&v0[OBJC_IVAR___BKNowPlayingIndicatorView_minimumLevelHeight] = 0x4008000000000000;
  *(_QWORD *)&v0[OBJC_IVAR___BKNowPlayingIndicatorView_numberOfLevels] = 3;
  *(_QWORD *)&v0[OBJC_IVAR___BKNowPlayingIndicatorView_playbackState] = 0;
  v0[OBJC_IVAR___BKNowPlayingIndicatorView_showsLevelGutters] = 0;
  v1 = OBJC_IVAR___BKNowPlayingIndicatorView_levelGuttersColor;
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "whiteColor");
  v4 = objc_msgSend(v3, "colorWithAlphaComponent:", 0.2);

  *(_QWORD *)&v0[v1] = v4;
  v5 = OBJC_IVAR___BKNowPlayingIndicatorView_levelColor;
  *(_QWORD *)&v0[v5] = objc_msgSend(v2, "whiteColor");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/NowPlayingIndicatorView.swift", 35, 2, 119, 0);
  __break(1u);
}

void _s5Books23NowPlayingIndicatorViewC12sizeThatFitsySo6CGSizeVAFF_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKNowPlayingIndicatorView_numberOfLevels);
  if (v1)
  {
    if (__OFSUB__(v1, 1))
      __break(1u);
  }
}

unint64_t sub_100347174()
{
  unint64_t result;

  result = qword_1009DC4F8;
  if (!qword_1009DC4F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for NowPlayingIndicatorView.PlaybackState, &type metadata for NowPlayingIndicatorView.PlaybackState);
    atomic_store(result, (unint64_t *)&qword_1009DC4F8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingIndicatorView.PlaybackState()
{
  return &type metadata for NowPlayingIndicatorView.PlaybackState;
}

uint64_t sub_1003471C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void *v40;
  void *v41;
  uint64_t v42;

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v3 = swift_allocObject(v2, 112, 7);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadButton);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_grabberView);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed);
  *(_OWORD *)(v3 + 16) = xmmword_10071CB60;
  v8 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPause);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  v9 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider);
  *(_QWORD *)(v3 + 48) = v6;
  *(_QWORD *)(v3 + 56) = v7;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardButton);
  *(_QWORD *)(v3 + 64) = v8;
  *(_QWORD *)(v3 + 72) = v9;
  v11 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardButton);
  *(_QWORD *)(v3 + 80) = v10;
  *(_QWORD *)(v3 + 88) = v11;
  v40 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton);
  v41 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton);
  *(_QWORD *)(v3 + 96) = v40;
  *(_QWORD *)(v3 + 104) = v41;
  v42 = v3;
  specialized Array._endMutation()(v3);
  v12 = v42;
  v13 = *(void **)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__routeView);
  if (v13)
  {
    v14 = v13;
    v15 = v4;
    v16 = v5;
    v17 = v6;
    v18 = v7;
    v19 = v8;
    v20 = v9;
    v21 = v10;
    v22 = v11;
    v23 = v40;
    v24 = v41;
    v25 = v14;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
    v27 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v26 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v27 >= v26 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
    v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
    specialized Array._endMutation()(v28);

    return v42;
  }
  else
  {
    v29 = v4;
    v30 = v5;
    v31 = v6;
    v32 = v7;
    v33 = v8;
    v34 = v9;
    v35 = v10;
    v36 = v11;
    v37 = v40;
    v38 = v41;
  }
  return v12;
}

void sub_1003473B4()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "bc_nowPlayingVibrantQuaternary");
  objc_msgSend(v0, "set");

  if (qword_1009CDFA8 != -1)
    swift_once(&qword_1009CDFA8, sub_100347C28);
  v1 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithOvalInRect:", 0.0, 0.0, *(double *)&qword_1009DC5C8, *(double *)&qword_1009DC5C8);
  objc_msgSend(v1, "fill");

}

void sub_100347484(double a1, double a2)
{
  void *v2;
  id v5;
  void *v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  id v19;
  void *v20;
  CGRect v21;
  CGRect v22;

  v5 = objc_msgSend(v2, "titleLabel");
  if (v5)
  {
    v6 = v5;
    CGRectMakeWithSize(a1, a2);
    objc_msgSend(v2, "setBounds:");
    objc_msgSend(v2, "layoutIfNeeded");
    v7 = objc_msgSend(v2, "titleLabel");
    if (v7 && (v8 = v7, objc_msgSend(v7, "_baselineOffsetFromBottom"), v10 = v9, v8, v10 != 0.0))
    {
      objc_msgSend(v6, "bounds");
      objc_msgSend(v2, "convertPoint:fromCoordinateSpace:", v6, 0.0, CGRectGetHeight(v22) - v10);

    }
    else
    {
      CGRectMakeWithSize(a1, a2);
      objc_msgSend(v2, "contentRectForBounds:");
      objc_msgSend(v2, "titleRectForContentRect:");
      v12 = v11;
      v14 = v13;
      v16 = v15;
      v18 = v17;
      v19 = objc_msgSend(v6, "font");
      if (v19)
      {
        v20 = v19;
        objc_msgSend(v19, "ascender");

        v21.origin.x = v12;
        v21.origin.y = v14;
        v21.size.width = v16;
        v21.size.height = v18;
        CGRectGetMinY(v21);

      }
      else
      {
        __break(1u);
      }
    }
  }
}

uint64_t type metadata accessor for ConstraintsDisabledView()
{
  return objc_opt_self(_TtC5Books23ConstraintsDisabledView);
}

id sub_100347654(uint64_t a1, double a2, double a3)
{
  void *v3;
  objc_class *ObjectType;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjCClassFromMetadata;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  id v23;
  uint64_t v24;
  objc_class *v26;
  objc_super v27;

  ObjectType = (objc_class *)swift_getObjectType();
  v8 = objc_msgSend(v3, "subviews");
  v9 = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

  if ((unint64_t)v10 >> 62)
    goto LABEL_16;
  v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v10);
  for (; v11; v11 = _CocoaArrayWrapper.endIndex.getter(v24))
  {
    v26 = ObjectType;
    v12 = sub_100009E04(0, &qword_1009DC918, UISlider_ptr);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v12);
    v14 = 4;
    ObjectType = (objc_class *)&selRef__mediaLibraryDidChange_;
    while (1)
    {
      v15 = (v10 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14 - 4, v10)
          : *(id *)(v10 + 8 * v14);
      v16 = v15;
      v17 = v14 - 3;
      if (__OFADD__(v14 - 4, 1))
        break;
      if ((objc_msgSend(v15, "isKindOfClass:", ObjCClassFromMetadata) & 1) != 0)
      {
        swift_bridgeObjectRelease_n(v10, 2);
        objc_msgSend(v16, "convertPoint:fromCoordinateSpace:", v3, a2, a3);
        v20 = v19;
        v22 = v21;
        v18 = v16;
        if (objc_msgSend(v18, "pointInside:withEvent:", a1, v20, v22))
        {
          v23 = objc_msgSend(v18, "hitTest:withEvent:", a1, v20, v22);

          goto LABEL_22;
        }

        goto LABEL_14;
      }

      ++v14;
      if (v17 == v11)
      {
        swift_bridgeObjectRelease_n(v10, 2);
        v18 = 0;
LABEL_14:
        ObjectType = v26;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_16:
    if (v10 < 0)
      v24 = v10;
    else
      v24 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
  }
  swift_bridgeObjectRelease_n(v10, 2);
  v18 = 0;
LABEL_21:
  v27.receiver = v3;
  v27.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v27, "hitTest:withEvent:", a1, a2, a3);
LABEL_22:

  return v23;
}

uint64_t type metadata accessor for TransportContainer()
{
  return objc_opt_self(_TtC5Books18TransportContainer);
}

id sub_1003479F4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView____lazy_storage___backgroundImageView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView____lazy_storage___backgroundImageView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView____lazy_storage___backgroundImageView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v5 = objc_msgSend(v4, "layer");
    objc_msgSend(v5, "addSublayer:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_backgroundGradientLayer));

    v6 = objc_msgSend(v4, "layer");
    objc_msgSend(v6, "addSublayer:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lowerHalfGradientLayer));

    v7 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v8 = v2;
  return v3;
}

void sub_100347AE4()
{
  qword_1009DC548 = 0x4024000000000000;
}

void sub_100347AF4()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v1 = objc_msgSend(v0, "CGColor");

  qword_1009DC550 = (uint64_t)v1;
}

double sub_100347B54()
{
  double result;

  result = 0.0;
  xmmword_1009DC558 = xmmword_10071CB70;
  return result;
}

void sub_100347B6C()
{
  qword_1009DC568 = 0x4040000000000000;
}

void sub_100347B7C()
{
  qword_1009DC570 = 0;
}

void sub_100347B88()
{
  qword_1009DC578 = 0x4034000000000000;
}

void sub_100347B98()
{
  qword_1009DC580 = 0x4044000000000000;
}

void sub_100347BA8()
{
  qword_1009DC588 = 0x4040000000000000;
}

void sub_100347BB8()
{
  qword_1009DC590 = 0x403C000000000000;
}

void sub_100347BC8()
{
  qword_1009DC598 = 0x4022000000000000;
}

void sub_100347BD8()
{
  qword_1009DC5A0 = 0x4034000000000000;
}

void sub_100347BE8()
{
  qword_1009DC5A8 = 0x401C000000000000;
}

void sub_100347BF8()
{
  qword_1009DC5B0 = 0x4042000000000000;
}

void sub_100347C08()
{
  qword_1009DC5B8 = 0x4020000000000000;
}

void sub_100347C18()
{
  qword_1009DC5C0 = 0x402C000000000000;
}

void sub_100347C28()
{
  qword_1009DC5C8 = 0x403C000000000000;
}

void sub_100347C38()
{
  qword_1009DC5D0 = 0x4030000000000000;
}

void sub_100347C48()
{
  qword_1009DC5D8 = 0x403A000000000000;
}

void sub_100347C58()
{
  qword_1009DC5E0 = 0x4020000000000000;
}

void sub_100347C68()
{
  qword_1009DC5E8 = 0x403C000000000000;
}

void sub_100347C78()
{
  qword_1009DC5F0 = 0x4044000000000000;
}

void sub_100347C88()
{
  qword_1009DC5F8 = 0x404E000000000000;
}

void sub_100347C98()
{
  qword_1009DC600 = 0x4053800000000000;
}

void sub_100347CAC()
{
  qword_1009DC608 = 0x4047000000000000;
}

void sub_100347CBC()
{
  qword_1009DC610 = 0x4040000000000000;
}

void sub_100347CCC()
{
  qword_1009DC618 = 0x404A000000000000;
}

void sub_100347CDC()
{
  qword_1009DC620 = 0x4032000000000000;
}

void sub_100347CEC()
{
  qword_1009DC628 = 0x407AC00000000000;
}

void sub_100347D00()
{
  qword_1009DC630 = 0x4070E00000000000;
}

void sub_100347D14()
{
  qword_1009DC638 = 0x4034000000000000;
}

void sub_100347D24()
{
  qword_1009DC640 = 0x4074A00000000000;
}

void sub_100347D38()
{
  qword_1009DC648 = 0x4020000000000000;
}

void sub_100347D48()
{
  qword_1009DC650 = 0x4044000000000000;
}

void sub_100347D58()
{
  qword_1009DC658 = 0x4036000000000000;
}

void sub_100347D68()
{
  qword_1009DC660 = 0x403A000000000000;
}

void sub_100347D78()
{
  qword_1009DC668 = 0x4034000000000000;
}

void sub_100347D88()
{
  qword_1009DC670 = 0x4049000000000000;
}

void sub_100347D98()
{
  qword_1009DC678 = 0x4040000000000000;
}

void sub_100347DA8()
{
  qword_1009DC680 = 0x4038000000000000;
}

void sub_100347DB8()
{
  qword_1009DC688 = 0x4047000000000000;
}

void sub_100347DC8()
{
  qword_1009DC690 = 0x4040000000000000;
}

void sub_100347DD8()
{
  qword_1009DC698 = 0x4028000000000000;
}

void sub_100347DE8()
{
  qword_1009DC6A0 = 0x4072400000000000;
}

void sub_100347DFC()
{
  qword_1009DC6A8 = 0x4084D80000000000;
}

void sub_100347E10()
{
  qword_1009DC6B0 = 0x403C000000000000;
}

void sub_100347E20()
{
  qword_1009DC6B8 = 0x4030000000000000;
}

void sub_100347E30()
{
  qword_1009DC6C0 = 0;
}

void sub_100347E3C()
{
  qword_1009DC6C8 = 0x4040000000000000;
}

void sub_100347E4C()
{
  qword_1009DC6D0 = 0x4044000000000000;
}

void sub_100347E5C()
{
  qword_1009DC6D8 = 0x4038000000000000;
}

void sub_100347E6C()
{
  qword_1009DC6E0 = 0x4035000000000000;
}

void sub_100347E7C()
{
  qword_1009DC6E8 = 0x4040000000000000;
}

double sub_100347E8C()
{
  double result;

  result = 54.0;
  xmmword_1009DC6F0 = xmmword_10071CB80;
  return result;
}

void sub_100347EA4()
{
  qword_1009DC700 = 0x4036000000000000;
}

void sub_100347EB4()
{
  qword_1009DC708 = 0x4038000000000000;
}

double sub_100347EC4()
{
  double result;

  result = -10.0;
  xmmword_1009DC710 = xmmword_10071CB90;
  *(_OWORD *)&qword_1009DC720 = xmmword_10071CB90;
  return result;
}

void sub_100347EDC()
{
  qword_1009DC730 = 0x4000000000000000;
}

double sub_100347EEC()
{
  double result;

  result = 0.0;
  xmmword_1009DC738 = xmmword_10071CBA0;
  *(_OWORD *)&qword_1009DC748 = xmmword_10071CBA0;
  return result;
}

void sub_100347F04()
{
  qword_1009DC758 = 0x4036000000000000;
}

void sub_100347F14()
{
  qword_1009DC760 = 0x4008000000000000;
}

void sub_100347F24()
{
  qword_1009DC768 = 0x4008000000000000;
}

void sub_100347F34()
{
  qword_1009DC770 = 0x4018000000000000;
}

void sub_100347F44()
{
  qword_1009DC778 = 0x4018000000000000;
}

double sub_100347F54()
{
  double result;

  result = 60.0;
  xmmword_1009DC780 = xmmword_10071CBB0;
  return result;
}

void sub_100347F6C()
{
  qword_1009DC790 = 0x4024000000000000;
}

void sub_100347F7C()
{
  qword_1009DC798 = 0x4047000000000000;
}

void sub_100347F8C()
{
  qword_1009DC7A0 = 0x4026000000000000;
}

void sub_100347F9C()
{
  qword_1009DC7A8 = 0x4035000000000000;
}

void sub_100347FAC()
{
  qword_1009DC7B0 = 0x3FF0000000000000;
}

void sub_100347FBC()
{
  qword_1009DC7B8 = 0x4008000000000000;
}

void sub_100347FCC()
{
  qword_1009DC7C0 = 0x4040800000000000;
}

id sub_100347FE0(void *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *ObjCClassFromMetadata;
  id v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  objc_class *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  objc_class *v70;
  objc_super v71;
  objc_class *v72;

  v10 = &v5[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10, 0);
  v70 = (objc_class *)type metadata accessor for AudiobookNowPlayingFullscreenTouchView(0);
  v72 = v70;
  v11 = v5;
  v12 = sub_10004CFD4(&qword_1009DC910);
  v13 = String.init<A>(describing:)(&v72, v12);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v13, v14);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playImage] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_pauseImage] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_scrubberImpactBehavior] = 0;
  v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadState] = 3;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView____lazy_storage___backgroundImageView] = 0;
  v15 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView;
  *(_QWORD *)&v11[v15] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageShadowView;
  *(_QWORD *)&v11[v16] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_bottomToolbarContainer;
  *(_QWORD *)&v11[v17] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_dismissButton;
  v19 = (void *)objc_opt_self(UIButton);
  *(_QWORD *)&v11[v18] = objc_msgSend(v19, "buttonWithType:", 0);
  v20 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator;
  *(_QWORD *)&v11[v20] = objc_msgSend(objc_allocWithZone((Class)IMRadialProgressButton), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v21 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadSpinner;
  *(_QWORD *)&v11[v21] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  v22 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadButton;
  *(_QWORD *)&v11[v22] = objc_msgSend(v19, "buttonWithType:", 0);
  v23 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_grabberView;
  *(_QWORD *)&v11[v23] = objc_msgSend(objc_allocWithZone((Class)_UIGrabber), "init");
  v24 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack;
  *(_QWORD *)&v11[v24] = objc_msgSend(objc_allocWithZone((Class)BKHUDTrack), "init");
  v25 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_loadingSpinner;
  *(_QWORD *)&v11[v25] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  v26 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton;
  *(_QWORD *)&v11[v26] = objc_msgSend((id)objc_opt_self(BCMenuConfiguringButton), "buttonWithType:", 0);
  v27 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_played;
  *(_QWORD *)&v11[v27] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v28 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider;
  *(_QWORD *)&v11[v28] = objc_msgSend(objc_allocWithZone((Class)BKScrubberSlider), "init");
  v29 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed;
  *(_QWORD *)&v11[v29] = objc_msgSend(v19, "buttonWithType:", 0);
  v30 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleLabel;
  *(_QWORD *)&v11[v30] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v31 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleMarqueeView;
  *(_QWORD *)&v11[v31] = objc_msgSend(objc_allocWithZone((Class)MPUMarqueeView), "init");
  v32 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel;
  *(_QWORD *)&v11[v32] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v33 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleMarqueeView;
  *(_QWORD *)&v11[v33] = objc_msgSend(objc_allocWithZone((Class)MPUMarqueeView), "init");
  v34 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton;
  v35 = type metadata accessor for SleepButton();
  *(_QWORD *)&v11[v34] = objc_msgSend((id)swift_getObjCClassFromMetadata(v35), "buttonWithType:", 0);
  v36 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlay;
  *(_QWORD *)&v11[v36] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v37 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer;
  *(_QWORD *)&v11[v37] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConstraintsDisabledView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v38 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton;
  *(_QWORD *)&v11[v38] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AudiobookNowPlayingTOCButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v39 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_transportContainer;
  *(_QWORD *)&v11[v39] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TransportContainer()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v40 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_backgroundGradientLayer;
  *(_QWORD *)&v11[v40] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v41 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lowerHalfGradientLayer;
  *(_QWORD *)&v11[v41] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v42 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPause;
  v43 = type metadata accessor for NowPlayingTransportButton();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v43);
  v45 = objc_msgSend(ObjCClassFromMetadata, "buttonWithType:", 0);
  *(_QWORD *)&v11[v42] = v45;
  v46 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardButton;
  v47 = objc_msgSend(ObjCClassFromMetadata, "buttonWithType:", 0);
  *(_QWORD *)&v11[v46] = v47;
  v48 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardButton;
  v49 = objc_msgSend(ObjCClassFromMetadata, "buttonWithType:", 0);
  *(_QWORD *)&v11[v48] = v49;
  v50 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__toPlayInAudiobook;
  *(_QWORD *)&v11[v50] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v51 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__mainViewContainer;
  *(_QWORD *)&v11[v51] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v52 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__transportSubcontainer;
  *(_QWORD *)&v11[v52] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v53 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeContainer;
  *(_QWORD *)&v11[v53] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v54 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeMaxImageView;
  *(_QWORD *)&v11[v54] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v55 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeMinImageView;
  *(_QWORD *)&v11[v55] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_buyButton] = 0;
  v56 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__routeView;
  *(_QWORD *)&v11[v56] = objc_msgSend(objc_allocWithZone((Class)AVRoutePickerView), "init");
  v57 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeView;
  *(_QWORD *)&v11[v57] = objc_msgSend(objc_allocWithZone((Class)MPVolumeView), "init");
  v58 = &v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  *((_OWORD *)v58 + 22) = 0u;
  *((_OWORD *)v58 + 23) = 0u;
  *((_OWORD *)v58 + 20) = 0u;
  *((_OWORD *)v58 + 21) = 0u;
  *((_OWORD *)v58 + 18) = 0u;
  *((_OWORD *)v58 + 19) = 0u;
  *((_OWORD *)v58 + 16) = 0u;
  *((_OWORD *)v58 + 17) = 0u;
  *((_OWORD *)v58 + 14) = 0u;
  *((_OWORD *)v58 + 15) = 0u;
  *((_OWORD *)v58 + 12) = 0u;
  *((_OWORD *)v58 + 13) = 0u;
  *((_OWORD *)v58 + 10) = 0u;
  *((_OWORD *)v58 + 11) = 0u;
  *((_OWORD *)v58 + 8) = 0u;
  *((_OWORD *)v58 + 9) = 0u;
  *((_OWORD *)v58 + 6) = 0u;
  *((_OWORD *)v58 + 7) = 0u;
  *((_OWORD *)v58 + 4) = 0u;
  *((_OWORD *)v58 + 5) = 0u;
  *((_OWORD *)v58 + 2) = 0u;
  *((_OWORD *)v58 + 3) = 0u;
  *(_OWORD *)v58 = 0u;
  *((_OWORD *)v58 + 1) = 0u;
  *(_OWORD *)(v58 + 383) = 0u;
  v59 = &v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong];
  *(_QWORD *)v59 = 0;
  *((_QWORD *)v59 + 1) = 0;
  v60 = &v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextShort];
  *(_QWORD *)v60 = 0;
  *((_QWORD *)v60 + 1) = 0;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_viewModel] = a1;
  v61 = (objc_class *)type metadata accessor for NowPlayingVibrancyEffectView();
  v62 = objc_allocWithZone(v61);
  v63 = a1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardVibrancyEffectContainerView] = sub_10055C90C(v49, 0);
  v64 = objc_allocWithZone(v61);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPauseVibrancyEffectContainerView] = sub_10055C90C(v45, 0);
  v65 = objc_allocWithZone(v61);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardVibrancyEffectContainerView] = sub_10055C90C(v47, 0);

  v71.receiver = v11;
  v71.super_class = v70;
  v66 = objc_msgSendSuper2(&v71, "initWithFrame:", a2, a3, a4, a5);
  sub_1003487B0();
  v67 = v66;
  objc_msgSend(v67, "setOverrideUserInterfaceStyle:", 2);

  return v67;
}

uint64_t sub_1003487B0()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  Class isa;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  void (*v24)(_QWORD *__return_ptr, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  double v32;
  id v33;
  uint64_t *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void (*v39)(_QWORD *__return_ptr, uint64_t);
  uint64_t v40;

  v1 = v0;
  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "secondaryLabelColor");
  objc_msgSend(v1, "setTintColor:", v3);

  v4 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__mainViewContainer];
  objc_msgSend(v1, "addSubview:", v4);
  v5 = sub_1003479F4();
  objc_msgSend(v4, "addSubview:", v5);

  v6 = sub_1003479F4();
  v7 = objc_msgSend(v2, "bc_booksBackground");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = sub_1003479F4();
  objc_msgSend(v8, "setOpaque:", 1);

  v9 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lowerHalfGradientLayer];
  v10 = sub_10004CFD4(&qword_1009D4B80);
  v11 = swift_allocObject(v10, 96, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10070FC00;
  v12 = objc_msgSend(v2, "blackColor");
  v13 = objc_msgSend(v12, "colorWithAlphaComponent:", 0.0);

  v14 = objc_msgSend(v13, "CGColor");
  type metadata accessor for CGColor(0);
  v16 = v15;
  *(_QWORD *)(v11 + 56) = v15;
  *(_QWORD *)(v11 + 32) = v14;
  v17 = objc_msgSend(v2, "blackColor");
  v18 = objc_msgSend(v17, "colorWithAlphaComponent:", 0.3);

  v19 = objc_msgSend(v18, "CGColor");
  *(_QWORD *)(v11 + 88) = v16;
  *(_QWORD *)(v11 + 64) = v19;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v9, "setColors:", isa);

  v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_viewModel];
  KeyPath = swift_getKeyPath(&unk_10071CD20);
  v23 = swift_getKeyPath(&unk_10071CD48);
  static Published.subscript.getter(&v39, v21, KeyPath, v23);
  swift_release(KeyPath);
  swift_release(v23);
  v24 = v39;
  if (v39)
  {
    v25 = v40;
    v26 = swift_retain(v40);
    v24(&v39, v26);
    sub_10002AD00((uint64_t)v24, v25);
    v27 = v39;
    sub_10034B774(v39);

    sub_10002AD00((uint64_t)v24, v25);
  }
  else
  {
    sub_10034B774(0);
  }
  v28 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView];
  if (qword_1009CDF30 != -1)
    swift_once(&qword_1009CDF30, sub_100347AE4);
  objc_msgSend(v28, "_setContinuousCornerRadius:", *(double *)&qword_1009DC548);
  objc_msgSend(v28, "setClipsToBounds:", 1);
  v29 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageShadowView];
  v30 = objc_msgSend(v29, "layer");
  if (qword_1009CDF38 != -1)
    swift_once(&qword_1009CDF38, sub_100347AF4);
  objc_msgSend(v30, "setShadowColor:", qword_1009DC550);

  v31 = objc_msgSend(v29, "layer");
  LODWORD(v32) = 1050253722;
  objc_msgSend(v31, "setShadowOpacity:", v32);

  v33 = objc_msgSend(v29, "layer");
  if (v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 396] == 1)
  {
    if (qword_1009CDF48 != -1)
      swift_once(&qword_1009CDF48, sub_100347B6C);
    v34 = &qword_1009DC568;
  }
  else
  {
    if (qword_1009CE0B8 != -1)
      swift_once(&qword_1009CE0B8, sub_100347E5C);
    v34 = &qword_1009DC6D8;
  }
  objc_msgSend(v33, "setShadowRadius:", *(double *)v34);

  v35 = objc_msgSend(v29, "layer");
  if (qword_1009CDF40 != -1)
    swift_once(&qword_1009CDF40, sub_100347B54);
  objc_msgSend(v35, "setShadowOffset:", xmmword_1009DC558);

  sub_10034BFCC();
  sub_10034C2A4();
  objc_msgSend(v4, "addSubview:", v29);
  objc_msgSend(v4, "addSubview:", v28);
  sub_10034CE14();
  sub_10034D0D8();
  sub_10034DEFC();
  sub_100009E04(0, &qword_1009E7710, UITraitCollection_ptr);
  v36 = static UITraitCollection.bc_allAPITraits.getter();
  v37 = UIView.registerForTraitChanges(_:action:)(v36, "_traitCollectionDidChangeWithSender:previousTraitCollection:");
  swift_unknownObjectRelease(v37);
  return swift_bridgeObjectRelease(v36);
}

id sub_100348D70()
{
  void *v0;
  objc_class *v1;
  id v2;
  objc_super v4;
  _QWORD v5[4];

  v1 = (objc_class *)type metadata accessor for AudiobookNowPlayingFullscreenTouchView(0);
  v5[3] = v1;
  v5[0] = v0;
  v2 = v0;
  static UIAccessibility.removeAccessibilityStatusChangeObserver(_:)(v5);
  _s5Books15CurrentPageViewVwxx_0(v5);
  v4.receiver = v2;
  v4.super_class = v1;
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_100349180()
{
  return type metadata accessor for AudiobookNowPlayingFullscreenTouchView(0);
}

uint64_t type metadata accessor for AudiobookNowPlayingFullscreenTouchView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DC900;
  if (!qword_1009DC900)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AudiobookNowPlayingFullscreenTouchView);
  return result;
}

void sub_100349240(void *a1)
{
  char *v1;
  char *v2;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  __n128 v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14[2];

  v2 = v1;
  sub_100349374();
  sub_100349588();
  sub_100349868();
  if (a1)
    v4 = objc_msgSend(a1, "accessibilityContrast");
  else
    v4 = 0;
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = objc_msgSend(v5, "accessibilityContrast");

  if (!a1 || v4 != v6)
  {
    sub_100349E98();
    sub_100349FF8();
    v7 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_viewModel];
    KeyPath = swift_getKeyPath(&unk_10071CD20);
    v9 = swift_getKeyPath(&unk_10071CD48);
    static Published.subscript.getter(v14, v7, KeyPath, v9);
    swift_release(KeyPath);
    v10 = swift_release(v9);
    v11 = v14[0];
    if (v14[0])
    {
      v12 = v14[1];
      ((void (*)(void **__return_ptr, __n128))v14[0])(v14, v10);
      v13 = v14[0];
      if (v14[0])
      {
        sub_10034B774(v14[0]);

      }
      sub_10002AD00((uint64_t)v11, (uint64_t)v12);
    }
  }
}

void sub_100349374()
{
  uint64_t v0;
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  NSString v9;
  id v10;
  id v11;
  void *v12;
  NSString v13;
  id v14;
  id v15;
  id v16;

  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v1, "_scaledValueForValue:", 100.0);
  v3 = v2;

  v4 = v3 / 100.0;
  if (v3 >= 110.0)
    v4 = 1.1;
  if (v3 < 100.0)
    v5 = 1.0;
  else
    v5 = v4;
  v6 = sub_100351B64() * v5;
  v7 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 7, 2, v6);
  v8 = (void *)objc_opt_self(UIImage);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "__systemImageNamedSwift:", v9);

  if (v10)
  {
    v11 = objc_msgSend(v10, "imageWithConfiguration:", v7);

  }
  else
  {
    v11 = 0;
  }
  v12 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playImage);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playImage) = v11;

  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v8, "__systemImageNamedSwift:", v13);

  if (v14)
  {
    v15 = objc_msgSend(v14, "imageWithConfiguration:", v7);

  }
  else
  {
    v15 = 0;
  }
  v16 = *(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_pauseImage);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_pauseImage) = v15;

}

void sub_100349588()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  double v4;
  UIImage *v5;
  UIImage *v6;
  UIImage *v7;
  UIImage *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  char isEscapingClosureAtFileLocation;
  double v17;
  id v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "bc_nowPlayingVibrantSecondary");
  v18 = objc_msgSend(v1, "bc_nowPlayingVibrantTertiary");
  if (qword_1009CE108 != -1)
    swift_once(&qword_1009CE108, sub_100347F14);
  v3 = *(double *)&qword_1009DC760;
  v4 = *(double *)&qword_1009DC760 + 1.0;
  v5 = sub_100352364(0, v2, *(double *)&qword_1009DC760 + 1.0, *(double *)&qword_1009DC760);
  if (!v5)
    goto LABEL_8;
  v6 = v5;
  v7 = sub_100352364(1, v18, v4, v3);
  if (!v7)
  {

LABEL_8:
    return;
  }
  v8 = v7;
  v9 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider];
  objc_msgSend(v9, "setMinimumTrackImage:forState:", v6, 0);
  objc_msgSend(v9, "setMaximumTrackImage:forState:", v8, 0);
  objc_msgSend(v9, "setMinimumValueImage:", 0);
  objc_msgSend(v9, "setMaximumValueImage:", 0);
  objc_msgSend(v9, "setFineScrubbing:", 1);
  v10 = objc_msgSend(v0, "traitCollection");
  v11 = swift_allocObject(&unk_1008FEE58, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  v12 = swift_allocObject(&unk_1008FEE80, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_100352520;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_100238D90;
  v20 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100605AE4;
  aBlock[3] = &unk_1008FEE98;
  v13 = _Block_copy(aBlock);
  v14 = v20;
  v15 = v0;
  swift_retain(v12);
  objc_msgSend(v10, "performAsCurrentTraitCollection:", v13, swift_release(v14).n128_f64[0]);

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 125, 1667, 46, 1);
  *(_QWORD *)&v17 = swift_release(v12).n128_u64[0];
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v9, "setSemanticContentAttribute:", 1, v17);
    swift_release(v11);

  }
}

void sub_100349868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  __n128 v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  NSString v84;
  _QWORD *v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  uint64_t v96;

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v3 = swift_allocObject(v2, 152, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10071CBC0;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_grabberView);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleMarqueeView);
  *(_QWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 40) = v5;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleMarqueeView);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadButton);
  *(_QWORD *)(v3 + 48) = v6;
  *(_QWORD *)(v3 + 56) = v7;
  v8 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator);
  v9 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider);
  *(_QWORD *)(v3 + 64) = v8;
  *(_QWORD *)(v3 + 72) = v9;
  v10 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_played);
  v11 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__toPlayInAudiobook);
  *(_QWORD *)(v3 + 80) = v10;
  *(_QWORD *)(v3 + 88) = v11;
  v89 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlay);
  v90 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeMinImageView);
  *(_QWORD *)(v3 + 96) = v89;
  *(_QWORD *)(v3 + 104) = v90;
  v91 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeMaxImageView);
  v92 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed);
  *(_QWORD *)(v3 + 112) = v91;
  *(_QWORD *)(v3 + 120) = v92;
  v93 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton);
  v94 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton);
  *(_QWORD *)(v3 + 128) = v93;
  *(_QWORD *)(v3 + 136) = v94;
  v95 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton);
  *(_QWORD *)(v3 + 144) = v95;
  v96 = v3;
  specialized Array._endMutation()(v3);
  v12 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__routeView);
  if (v12)
  {
    v13 = v12;
    v14 = v4;
    v15 = v5;
    v16 = v6;
    v17 = v7;
    v18 = v8;
    v19 = v9;
    v20 = v10;
    v21 = v11;
    v22 = v89;
    v23 = v90;
    v24 = v91;
    v25 = v92;
    v26 = v93;
    v27 = v94;
    v28 = v95;
    v29 = v13;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
    v31 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v30 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v31 >= v30 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
    v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v29);
    specialized Array._endMutation()(v32);

  }
  else
  {
    v33 = v4;
    v34 = v5;
    v35 = v6;
    v36 = v7;
    v37 = v8;
    v38 = v9;
    v39 = v10;
    v40 = v11;
    v41 = v89;
    v42 = v90;
    v43 = v91;
    v44 = v92;
    v45 = v93;
    v46 = v94;
    v47 = v95;
  }
  v48 = *(void **)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeView);
  if (v48)
  {
    v49 = v48;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
    v51 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v50 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v51 >= v50 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
    v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v49);
    specialized Array._endMutation()(v52);

  }
  v53 = *(void **)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardButton);
  v54 = *(void **)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPause);
  v55 = *(void **)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardButton);
  v56 = v53;
  v57 = v54;
  v58 = v55;
  v59 = objc_msgSend(v56, "imageView", swift_bridgeObjectRetain(v96).n128_f64[0]);
  if (v59)
  {
    v60 = v59;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v59);
    v62 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v61 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v62 >= v61 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v61 > 1, v62 + 1, 1);
    v63 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v62, v60);
    specialized Array._endMutation()(v63);
  }
  v64 = objc_msgSend(v57, "imageView");
  if (v64)
  {
    v65 = v64;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v64);
    v67 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v66 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v67 >= v66 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v66 > 1, v67 + 1, 1);
    v68 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v67, v65);
    specialized Array._endMutation()(v68);
  }
  v69 = objc_msgSend(v58, "imageView");
  if (v69)
  {
    v70 = v69;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v69);
    v72 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v71 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v72 >= v71 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
    v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v70);
    specialized Array._endMutation()(v73);
  }

  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v85 = _swiftEmptyArrayStorage;
    else
      v85 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v86 = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
    v87 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v75 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v85, v86, v87);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
    v74 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v74);
    sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
    v75 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  sub_100374798((uint64_t)v75);
  if (!((unint64_t)v96 >> 62))
  {
    v76 = *(_QWORD *)((v96 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v96);
    if (v76)
      goto LABEL_26;
LABEL_40:
    swift_bridgeObjectRelease_n(v96, 2);
    swift_bridgeObjectRelease(v96);
    return;
  }
  if (v96 < 0)
    v88 = v96;
  else
    v88 = v96 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v96);
  v76 = _CocoaArrayWrapper.endIndex.getter(v88);
  if (!v76)
    goto LABEL_40;
LABEL_26:
  if (v76 >= 1)
  {
    v77 = 0;
    v78 = kCAFilterPlusL;
    do
    {
      if ((v96 & 0xC000000000000001) != 0)
        v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v77, v96);
      else
        v79 = *(id *)(v96 + 8 * v77 + 32);
      v80 = v79;
      ++v77;
      v81 = objc_msgSend(v79, "layer");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
      v83 = v82;
      v84 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v83);
      objc_msgSend(v81, "setCompositingFilter:", v84);

    }
    while (v76 != v77);
    goto LABEL_40;
  }
  __break(1u);
}

void sub_100349E98()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v2 = objc_msgSend(v1, "accessibilityContrast");

  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleLabel);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "bc_nowPlayingVibrantPrimary");
  v6 = v5;
  if (v2 == (id)1)
  {
    v7 = objc_msgSend(v5, "colorWithAlphaComponent:", 1.0);

    objc_msgSend(v3, "setTextColor:", v7);
    v8 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel);
    v9 = objc_msgSend(v4, "bc_nowPlayingVibrantPrimary");
  }
  else
  {
    objc_msgSend(v3, "setTextColor:", v5);

    v8 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel);
    v9 = objc_msgSend(v4, "bc_nowPlayingVibrantSecondary");
  }
  v10 = v9;
  objc_msgSend(v8, "setTextColor:");

}

void sub_100349FF8()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;

  v1 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v2 = objc_msgSend(v1, "accessibilityContrast");

  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_played);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = objc_msgSend(v4, "bc_nowPlayingVibrantTertiary");
  v6 = v5;
  if (v2 == (id)1)
  {
    v7 = objc_msgSend(v5, "colorWithAlphaComponent:", 1.0);

    objc_msgSend(v3, "setTextColor:", v7);
    v8 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlay);
    v9 = objc_msgSend(v4, "bc_nowPlayingVibrantTertiary");
    v10 = objc_msgSend(v9, "colorWithAlphaComponent:", 1.0);

    objc_msgSend(v8, "setTextColor:", v10);
    v11 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__toPlayInAudiobook);
    v12 = objc_msgSend(v4, "bc_nowPlayingVibrantTertiary");
    v15 = objc_msgSend(v12, "colorWithAlphaComponent:", 1.0);

  }
  else
  {
    objc_msgSend(v3, "setTextColor:", v5);

    v13 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlay);
    v14 = objc_msgSend(v4, "bc_nowPlayingVibrantTertiary");
    objc_msgSend(v13, "setTextColor:", v14);

    v11 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__toPlayInAudiobook);
    v15 = objc_msgSend(v4, "bc_nowPlayingVibrantTertiary");
  }
  objc_msgSend(v11, "setTextColor:", v15);

}

void sub_10034A210()
{
  char *v0;
  char *v1;
  char *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double v8;
  double v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Class isa;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  id v66;
  void *v67;
  double v68;
  double v69;
  double v70;
  double v71;
  id v72;
  double v73;
  double v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  void *v89;
  id v90;
  void *v91;
  double v92;
  id v93;
  void *v94;
  id v95;
  double v96;
  double v97;
  double v98;
  id v99;
  void *v100;
  id v101;
  uint64_t v102;
  uint64_t KeyPath;
  uint64_t v104;
  uint64_t v105;
  NSString v106;
  uint64_t v107;
  uint64_t inited;
  NSString *v109;
  id v110;
  unint64_t v111;
  Class v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  id v116;
  uint64_t v117;
  double v118;
  double v119;
  double v120;
  double v121;
  double v122;
  double v123;
  double v124;
  uint64_t *v125;
  unint64_t v126;
  uint64_t v127;
  void *v128;
  char v129[72];
  _QWORD v130[2];
  CGRect v131;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  *((_OWORD *)v2 + 4) = 0u;
  *((_OWORD *)v2 + 5) = 0u;
  *((_OWORD *)v2 + 6) = 0u;
  *((_OWORD *)v2 + 7) = 0u;
  *((_OWORD *)v2 + 8) = 0u;
  *((_OWORD *)v2 + 9) = 0u;
  *((_OWORD *)v2 + 10) = 0u;
  *((_OWORD *)v2 + 11) = 0u;
  *((_OWORD *)v2 + 12) = 0u;
  *((_OWORD *)v2 + 13) = 0u;
  *((_OWORD *)v2 + 14) = 0u;
  *((_OWORD *)v2 + 15) = 0u;
  *((_OWORD *)v2 + 16) = 0u;
  *((_OWORD *)v2 + 17) = 0u;
  *((_OWORD *)v2 + 18) = 0u;
  *((_OWORD *)v2 + 19) = 0u;
  *((_OWORD *)v2 + 20) = 0u;
  *((_OWORD *)v2 + 21) = 0u;
  *((_OWORD *)v2 + 22) = 0u;
  *((_OWORD *)v2 + 23) = 0u;
  *(_OWORD *)(v2 + 383) = 0u;
  v3 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  *(_QWORD *)v2 = v4;
  objc_msgSend(v1, "bounds");
  *((_QWORD *)v2 + 2) = v5;
  *((_QWORD *)v2 + 3) = v6;
  v7 = objc_msgSend(v1, "safeAreaInsets");
  v2[392] = v8 <= 30.0;
  v2[394] = isMegaPad(v7);
  v9 = *((double *)v2 + 2);
  if (v9 <= *((double *)v2 + 3))
    v9 = *((double *)v2 + 3);
  v2[396] = v9 < 570.0;
  v2[395] = v9 < 670.0;
  v10 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__routeView];
  if (v10)
  {
    v11 = v10;
    v2[397] = objc_msgSend(v11, "isHidden") ^ 1;

  }
  else
  {
    v2[397] = 0;
  }
  sub_10034EC68();
  v12 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_buyButton];
  if (v12)
  {
    objc_msgSend(v12, "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  }
  else
  {
    v14 = 0;
    v13 = 0;
  }
  *((_QWORD *)v2 + 4) = v13;
  *((_QWORD *)v2 + 5) = v14;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_grabberView], "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  *((_QWORD *)v2 + 6) = v15;
  *((_QWORD *)v2 + 7) = v16;
  v17 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v17, "scale");
  v19 = v18;

  v20 = objc_msgSend((id)objc_opt_self(NSString), "stringWithDuration:explicitPositive:", 0, -28800.0);
  if (!v20)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009E9020, NSString_ptr);
    v20 = (id)NSString.init(stringLiteral:)("-8:00:00", 8, 2);
  }
  v21 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_played];
  v22 = objc_msgSend(v21, "attributedText");
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend(v22, "attributesAtIndex:effectiveRange:", 0, 0);

    type metadata accessor for Key(0);
    v26 = v25;
    v27 = sub_100352538();
    v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v24, v26, (char *)&type metadata for Any + 8, v27);

  }
  else
  {
    v28 = sub_1001DA774((uint64_t)_swiftEmptyArrayStorage);
  }
  type metadata accessor for Key(0);
  v30 = v29;
  v126 = sub_100352538();
  v127 = v30;
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v28);
  v128 = v20;
  objc_msgSend(v20, "sizeWithAttributes:", isa);
  v33 = v32;
  v35 = v34;

  *((double *)v2 + 8) = CGSizeCeilForScale(v33, v35, v19);
  *((_QWORD *)v2 + 9) = v36;
  v37 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleLabel];
  objc_msgSend(v37, "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  *((_QWORD *)v2 + 10) = v38;
  *((_QWORD *)v2 + 11) = v39;
  v40 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel];
  objc_msgSend(v40, "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  *((_QWORD *)v2 + 12) = v41;
  *((_QWORD *)v2 + 13) = v42;
  *((_OWORD *)v2 + 7) = *((_OWORD *)v2 + 4);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__toPlayInAudiobook], "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  *((_QWORD *)v2 + 16) = v43;
  *((_QWORD *)v2 + 17) = v44;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider], "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  *((_QWORD *)v2 + 18) = v45;
  *((_QWORD *)v2 + 19) = v46;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardButton], "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  *((_QWORD *)v2 + 20) = v47;
  *((_QWORD *)v2 + 21) = v48;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPause], "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  *((_QWORD *)v2 + 22) = v49;
  *((_QWORD *)v2 + 23) = v50;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardButton], "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  *((_QWORD *)v2 + 24) = v51;
  *((_QWORD *)v2 + 25) = v52;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton], "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  *((_QWORD *)v2 + 28) = v53;
  *((_QWORD *)v2 + 29) = v54;
  v55 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed];
  objc_msgSend(v55, "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  *((_QWORD *)v2 + 26) = v56;
  *((_QWORD *)v2 + 27) = v57;
  v58 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeView];
  if (v58)
  {
    objc_msgSend(v58, "sizeThatFits:", *((double *)v2 + 2), *((double *)v2 + 3));
  }
  else
  {
    v60 = 0;
    v59 = 0;
  }
  *((_QWORD *)v2 + 30) = v59;
  *((_QWORD *)v2 + 31) = v60;
  objc_msgSend(v1, "bounds", v126, v127);
  v61 = 1.0;
  if (v62 > 0.0)
  {
    objc_msgSend(v1, "bounds", 1.0);
    v64 = v63;
    objc_msgSend(v1, "bounds");
    v61 = v64 / v65;
  }
  *((double *)v2 + 32) = v61;
  *((_QWORD *)v2 + 33) = 0x3FF0000000000000;
  v66 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView], "image");
  if (v66)
  {
    v67 = v66;
    objc_msgSend(v66, "size");
    if (v68 > 0.0)
    {
      objc_msgSend(v67, "size");
      v70 = v69;
      objc_msgSend(v67, "size");
      *((double *)v2 + 33) = v70 / v71;
    }

  }
  v72 = objc_msgSend(v1, "bounds");
  *((double *)v2 + 34) = CGSizeLength(v72, v73, v74);
  *((double *)v2 + 35) = v19;
  v75 = objc_msgSend(v37, "font");
  v76 = v75;
  if (v75)
  {
    objc_msgSend(v75, "ascender");
    *((_QWORD *)v2 + 36) = v77;
    objc_msgSend(v76, "capHeight");
    *((_QWORD *)v2 + 37) = v78;
    objc_msgSend(v76, "lineHeight");
  }
  else
  {
    *((_QWORD *)v2 + 36) = 0;
    *((_QWORD *)v2 + 37) = 0;
    v79 = 0;
  }
  *((_QWORD *)v2 + 38) = v79;
  v80 = objc_msgSend(v40, "font");
  v81 = v80;
  if (v80)
  {
    objc_msgSend(v80, "ascender");
    *((_QWORD *)v2 + 39) = v82;
    objc_msgSend(v81, "lineHeight");
  }
  else
  {
    *((_QWORD *)v2 + 39) = 0;
    v83 = 0;
  }
  *((_QWORD *)v2 + 40) = v83;
  v84 = objc_msgSend(v21, "font");
  if (v84)
  {
    v85 = v84;
    objc_msgSend(v84, "ascender");
    v87 = v86;

    *((_QWORD *)v2 + 41) = v87;
    v88 = objc_msgSend(v1, "window");
    if (v88)
    {
      v89 = v88;
      v90 = objc_msgSend(v1, "superview");
      if (v90)
      {
        v91 = v90;
        v92 = 0.0;
        if ((objc_msgSend(v1, "im_isCompactHeight") & 1) == 0)
        {
          v93 = objc_msgSend(v89, "windowScene");
          if (v93)
          {
            v94 = v93;
            v95 = objc_msgSend(v93, "statusBarManager");

            if (v95)
            {
              objc_msgSend(v95, "bc_defaultPortraitStatusBarHeight");
              v92 = v96;

            }
          }
        }
        objc_msgSend(v1, "frame");
        objc_msgSend(v89, "convertRect:fromCoordinateSpace:", v91);
        v97 = v92 - CGRectGetMinY(v131);
        if (v97 < 0.0)
          v97 = 0.0;
        *((double *)v2 + 42) = v97;

      }
      else
      {
        v91 = v89;
      }

    }
    v98 = *((double *)v2 + 3) - *((double *)v2 + 42);
    if (qword_1009CE088 != -1)
      swift_once(&qword_1009CE088, sub_100347DFC);
    *((double *)v2 + 43) = v98 - (*(double *)&qword_1009DC6A8 + -20.0);
    v99 = objc_msgSend(v55, "titleLabel");
    if (v99
      && (v100 = v99, v101 = objc_msgSend(v99, "font"), v100, v101))
    {
      v102 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_viewModel];
      KeyPath = swift_getKeyPath(&unk_10071CD68);
      v104 = swift_getKeyPath(&unk_10071CD90);
      static Published.subscript.getter(v130, v102, KeyPath, v104);
      swift_release(KeyPath);
      swift_release(v104);
      v105 = v130[1];
      v106 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v105);
      v107 = sub_10004CFD4((uint64_t *)&unk_1009D7480);
      inited = swift_initStackObject(v107, v129);
      *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
      *(_QWORD *)(inited + 32) = NSFontAttributeName;
      *(_QWORD *)(inited + 64) = sub_100009E04(0, &qword_1009EB8E0, UIFont_ptr);
      *(_QWORD *)(inited + 40) = v101;
      v109 = NSFontAttributeName;
      v110 = v101;
      v111 = sub_1001DA774(inited);
      v112 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v111);
      objc_msgSend(v106, "sizeWithAttributes:", v112);
      v114 = v113;

      *((_QWORD *)v2 + 44) = v114;
    }
    else
    {
      *((_QWORD *)v2 + 44) = 0;
    }
    v2[393] = *((double *)v2 + 2) <= *((double *)v2 + 3);
    v115 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v116 = objc_msgSend(v115, "userInterfaceLayoutDirection");

    v2[398] = v116 == (id)1;
    v117 = *(_QWORD *)v2;
    if (*(_QWORD *)v2 == 1)
    {
      v118 = *((double *)v2 + 2);
      if (qword_1009CE008 != -1)
        swift_once(&qword_1009CE008, sub_100347CEC);
      v117 = v118 >= *(double *)&qword_1009DC628;
    }
    *((_QWORD *)v2 + 1) = v117;
    if (v117)
    {
      if (qword_1009CE010 != -1)
        swift_once(&qword_1009CE010, sub_100347D00);
      v119 = *((double *)v2 + 2);
      if (v119 >= *(double *)&qword_1009DC630)
        v120 = *(double *)&qword_1009DC630;
      else
        v120 = *((double *)v2 + 2);
      if (qword_1009CDFF8 != -1)
        swift_once(&qword_1009CDFF8, sub_100347CCC);
      v121 = v119 * 0.5;
      v122 = *(double *)&qword_1009DC618 + *(double *)&qword_1009DC618 * 1.5;
      if (qword_1009CE000 != -1)
        swift_once(&qword_1009CE000, sub_100347CDC);
      v123 = v121 - (v122 + *(double *)&qword_1009DC620);
      if (v120 > v123)
        v123 = v120;
      *((double *)v2 + 46) = v123;
      v124 = *((double *)v2 + 2) + *(double *)&qword_1009DC618 * -1.5 + *(double *)&qword_1009DC618 * -1.5;
      if (v120 > v124)
        v124 = v120;
      if (v2[393])
        v123 = v124;
      *((double *)v2 + 47) = v124;
      *((double *)v2 + 48) = v123;
    }
    else
    {
      if (v2[392] == 1)
      {
        if (qword_1009CE058 != -1)
          swift_once(&qword_1009CE058, sub_100347D98);
        v125 = &qword_1009DC678;
      }
      else
      {
        if (qword_1009CE060 != -1)
          swift_once(&qword_1009CE060, sub_100347DA8);
        v125 = &qword_1009DC680;
      }
      *((_QWORD *)v2 + 45) = *v125;
    }

  }
  else
  {
    __break(1u);
  }
}

void sub_10034AD4C()
{
  char *v0;
  double *v1;
  uint64_t v2;
  id v3;
  double MaxY;
  uint64_t *v5;
  double v6;
  double v7;
  CGRect v8;
  CGRect v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;

  v1 = (double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 8];
  if (v2)
  {
    if (v2 == 1)
    {
      objc_msgSend(v0, "bounds");
      v11.origin.x = 0.0;
      v11.origin.y = 0.0;
      v11.size.width = 0.0;
      v11.size.height = 0.0;
      if (!CGRectEqualToRect(v8, v11))
      {
        sub_10034EFE8();
        v3 = sub_10034F18C();
        sub_10034F354(v3);
        sub_10034AF18();
        sub_10034F690();
        sub_10034F900();
      }
    }
  }
  else if (v1[3] >= v1[2])
  {
    objc_msgSend(v0, "bounds");
    v12.origin.x = 0.0;
    v12.origin.y = 0.0;
    v12.size.width = 0.0;
    v12.size.height = 0.0;
    if (!CGRectEqualToRect(v9, v12))
    {
      sub_10034EFE8();
      sub_10034F18C();
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_dismissButton], "frame");
      MaxY = CGRectGetMaxY(v10);
      if (*((_BYTE *)v1 + 392) == 1)
      {
        if (qword_1009CE098 != -1)
        {
          v6 = MaxY;
          swift_once(&qword_1009CE098, sub_100347E20);
          MaxY = v6;
        }
        v5 = &qword_1009DC6B8;
      }
      else
      {
        if (qword_1009CE0A0 != -1)
        {
          v7 = MaxY;
          swift_once(&qword_1009CE0A0, sub_100347E30);
          MaxY = v7;
        }
        v5 = &qword_1009DC6C0;
      }
      sub_10034FB98(MaxY + *(double *)v5);
      sub_10034B320();
      sub_10034FD88();
      sub_10034FF28();
    }
  }
}

id sub_10034AF18()
{
  char *v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  CGFloat v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v39;
  double v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView], "frame");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = (double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  v10 = *(double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 384];
  objc_msgSend(v0, "bounds");
  v11 = CGRectGetWidth(v41) - v10;
  if (qword_1009CE028 != -1)
    swift_once(&qword_1009CE028, sub_100347D38);
  v12 = v11 * 0.5;
  v13 = *(double *)&qword_1009DC648;
  v42.origin.x = v2;
  v42.origin.y = v4;
  v42.size.width = v6;
  v42.size.height = v8;
  CGRectGetMaxY(v42);
  if (v9[3] > 0.0)
  {
    objc_msgSend(v0, "safeAreaInsets", 0.0);
    objc_msgSend(v0, "safeAreaInsets");
  }
  if (qword_1009CDFB8 != -1)
    swift_once(&qword_1009CDFB8, sub_100347C48);
  v14 = CGRectRoundedForScale(v12 + v13);
  v15 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer];
  objc_msgSend(v15, "setFrame:", v14);
  objc_msgSend(v15, "bounds");
  sub_100350304(v16, v17, v18, v19);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  if (*((_BYTE *)v9 + 398) == 1
    && !objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleMarqueeView], "animationDirection"))
  {
    if (qword_1009CE0F8 != -1)
      swift_once(&qword_1009CE0F8, sub_100347EEC);
    v28 = *((double *)&xmmword_1009DC738 + 1) * 0.5;
  }
  else
  {
    if (qword_1009CE0F8 != -1)
      swift_once(&qword_1009CE0F8, sub_100347EEC);
    v28 = *((double *)&xmmword_1009DC738 + 1);
  }
  v43.origin.x = v21;
  v43.origin.y = v23;
  v43.size.width = v25;
  v43.size.height = v27;
  v40 = v28;
  v29 = CGRectGetMinX(v43) - v28;
  v44.origin.x = v21;
  v44.origin.y = v23;
  v44.size.width = v25;
  v44.size.height = v27;
  CGRectGetWidth(v44);
  v39 = v21;
  v30 = CGRectRoundedForScale(v29);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleMarqueeView], "setFrame:");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleLabel], "setFrame:", CGRectRoundedForScale(0.0));
  v45.origin.x = v30;
  v45.origin.y = v32;
  v45.size.width = v34;
  v45.size.height = v36;
  CGRectGetMinY(v45);
  v46.origin.x = v30;
  v46.origin.y = v32;
  v46.size.width = v34;
  v46.size.height = v36;
  CGRectGetHeight(v46);
  v47.origin.x = v39;
  v47.origin.y = v23;
  v47.size.width = v25;
  v47.size.height = v27;
  v37 = CGRectGetMinX(v47) - v40;
  v48.origin.x = v39;
  v48.origin.y = v23;
  v48.size.width = v25;
  v48.size.height = v27;
  CGRectGetWidth(v48);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleMarqueeView], "setFrame:", CGRectRoundedForScale(v37));
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel], "setFrame:", CGRectRoundedForScale(0.0));
}

id sub_10034B320()
{
  char *v0;
  double *v1;
  double v2;
  void *v3;
  double v4;
  double v5;
  CGFloat v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat MinX;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView], "frame");
  CGRectGetMaxY(v32);
  v1 = (double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  if (v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 392] == 1)
  {
    if (qword_1009CE090 != -1)
      swift_once(&qword_1009CE090, sub_100347E10);
  }
  else if (v1[3] > 0.0)
  {
    objc_msgSend(v0, "safeAreaInsets");
    objc_msgSend(v0, "safeAreaInsets");
  }
  if (*((_BYTE *)v1 + 396) == 1)
  {
    if (qword_1009CE0C0 != -1)
      swift_once(&qword_1009CE0C0, sub_100347E6C);
  }
  else if (qword_1009CE040 != -1)
  {
    swift_once(&qword_1009CE040, sub_100347D68);
  }
  if (qword_1009CE0C8 != -1)
    swift_once(&qword_1009CE0C8, sub_100347E7C);
  v2 = CGRectRoundedForScale(*(double *)&qword_1009DC6E8);
  v3 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer];
  objc_msgSend(v3, "setFrame:", v2);
  objc_msgSend(v3, "bounds");
  sub_100350304(v4, v5, v6, v7);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  if (*((_BYTE *)v1 + 398) == 1
    && !objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleMarqueeView], "animationDirection"))
  {
    if (qword_1009CE0F8 != -1)
      swift_once(&qword_1009CE0F8, sub_100347EEC);
    v16 = *((double *)&xmmword_1009DC738 + 1) * 0.5;
  }
  else
  {
    if (qword_1009CE0F8 != -1)
      swift_once(&qword_1009CE0F8, sub_100347EEC);
    v16 = *((double *)&xmmword_1009DC738 + 1);
  }
  v33.origin.x = v9;
  v33.origin.y = v11;
  v33.size.width = v13;
  v33.size.height = v15;
  MinX = CGRectGetMinX(v33);
  v34.size.width = v13;
  v31 = v13;
  v18 = MinX - v16;
  v34.origin.x = v9;
  v34.origin.y = v11;
  v34.size.height = v15;
  CGRectGetWidth(v34);
  v19 = CGRectRoundedForScale(v18);
  v29 = v11;
  v30 = v15;
  v21 = v20;
  v23 = v22;
  v24 = v9;
  v26 = v25;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleMarqueeView], "setFrame:");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleLabel], "setFrame:", CGRectRoundedForScale(0.0));
  v35.origin.x = v19;
  v35.origin.y = v21;
  v35.size.width = v23;
  v35.size.height = v26;
  CGRectGetMinY(v35);
  v36.origin.x = v19;
  v36.origin.y = v21;
  v36.size.width = v23;
  v36.size.height = v26;
  CGRectGetHeight(v36);
  v37.origin.x = v24;
  v37.origin.y = v29;
  v37.size.width = v31;
  v37.size.height = v30;
  v27 = CGRectGetMinX(v37) - v16;
  v38.origin.x = v24;
  v38.origin.y = v29;
  v38.size.width = v31;
  v38.size.height = v30;
  CGRectGetWidth(v38);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleMarqueeView], "setFrame:", CGRectRoundedForScale(v27));
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel], "setFrame:", CGRectRoundedForScale(0.0));
}

void sub_10034B774(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  double v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  Class isa;
  uint64_t v31;
  uint64_t v32;
  id v33;

  v3 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  v4 = objc_msgSend(v3, "accessibilityContrast");

  v5 = 0.25;
  if (v4 != (id)1)
  {
    if (qword_1009CDF50 != -1)
      swift_once(&qword_1009CDF50, sub_100347B7C);
    v5 = *(double *)&qword_1009DC570;
  }
  if (a1)
  {
    v31 = v1;
    v6 = (void *)objc_opt_self(UIColor);
    v7 = a1;
    v8 = objc_msgSend(v6, "whiteColor");
    v9 = UIColor.mix(withColor:factor:)(v8, 0.2);

    v10 = objc_msgSend(v6, "blackColor");
    v11 = UIColor.mix(withColor:factor:)(v10, 0.3);

    v12 = objc_msgSend(v11, "bc_resaturatedColorByFactor:", 1.5);
    if (!v12)
      v12 = v11;
    v13 = objc_msgSend(v6, "whiteColor", v31);
    v14 = UIColor.mix(withColor:factor:)(v13, 0.08);

    v15 = objc_msgSend(v6, "blackColor");
    v16 = UIColor.mix(withColor:factor:)(v15, v5);

    v17 = objc_msgSend(v6, "blackColor");
    v18 = UIColor.mix(withColor:factor:)(v17, 0.3);

    v19 = objc_msgSend(v18, "bc_resaturatedColorByFactor:", 1.5);
    if (!v19)
      v19 = v18;
    v20 = objc_msgSend(v6, "whiteColor");
    v33 = UIColor.mix(withColor:factor:)(v20, 0.08);

    v1 = v32;
  }
  else
  {
    v21 = (void *)objc_opt_self(UIColor);
    v14 = objc_msgSend(v21, "bc_booksBackground");
    v33 = objc_msgSend(v21, "bc_booksBackground");
  }
  v22 = *(void **)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_backgroundGradientLayer);
  v23 = sub_10004CFD4(&qword_1009D4B80);
  v24 = swift_allocObject(v23, 96, 7);
  *(_OWORD *)(v24 + 16) = xmmword_10070FC00;
  v25 = v33;
  if (v4 != (id)1)
    v25 = v14;
  v26 = objc_msgSend(v25, "CGColor");
  type metadata accessor for CGColor(0);
  v28 = v27;
  *(_QWORD *)(v24 + 56) = v27;
  *(_QWORD *)(v24 + 32) = v26;
  v29 = objc_msgSend(v33, "CGColor");
  *(_QWORD *)(v24 + 88) = v28;
  *(_QWORD *)(v24 + 64) = v29;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v24);
  objc_msgSend(v22, "setColors:", isa);

  sub_100349868();
}

void sub_10034BB00(void *a1)
{
  sub_10034BB18(a1, &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardButton);
}

void sub_10034BB0C(void *a1)
{
  sub_10034BB18(a1, &OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardButton);
}

void sub_10034BB18(void *a1, _QWORD *a2)
{
  uint64_t v2;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;

  v5 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v5, "_scaledValueForValue:", 100.0);
  v7 = v6;

  v8 = v7 / 100.0;
  if (v7 >= 110.0)
    v8 = 1.1;
  if (v7 < 100.0)
    v9 = 1.0;
  else
    v9 = v8;
  v10 = sub_100351CC4() * v9;
  v11 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 5, 2, v10);
  v12 = objc_msgSend(a1, "imageByApplyingSymbolConfiguration:", v11);
  objc_msgSend(*(id *)(v2 + *a2), "setImage:forState:", v12, 0);

}

void sub_10034BC48()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  Class isa;
  double v11;
  double v12;
  uint64_t v13;
  NSString v14;
  uint64_t v15;
  id v16;
  CGRect v17;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__toPlayInAudiobook);
  v16 = objc_msgSend(v1, "attributedText");
  if (v16 && (uint64_t)objc_msgSend(v16, "length") >= 1)
  {
    v2 = objc_msgSend(v16, "attributesAtIndex:effectiveRange:", 0, 0);
    type metadata accessor for Key(0);
    v4 = v3;
    v5 = sub_100352538();
    v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, v4, (char *)&type metadata for Any + 8, v5);

  }
  else
  {
    v6 = sub_1001DA774((uint64_t)_swiftEmptyArrayStorage);
  }
  v7 = v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong;
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong + 8);
  if (!v8)
  {
    swift_bridgeObjectRelease(v6);
    v15 = *(_QWORD *)(v7 + 8);
    if (v15)
    {
LABEL_12:
      swift_bridgeObjectRetain(v15);
      v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v15);
      goto LABEL_13;
    }
LABEL_10:
    v14 = 0;
LABEL_13:
    objc_msgSend(v1, "setText:", v14);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain(*(_QWORD *)(v0
                                     + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong
                                     + 8));
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  type metadata accessor for Key(0);
  sub_100352538();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v6);
  objc_msgSend(v9, "sizeWithAttributes:", isa);
  v12 = v11;

  objc_msgSend(v1, "frame");
  if (CGRectGetWidth(v17) >= v12)
  {

    v15 = *(_QWORD *)(v7 + 8);
    if (v15)
      goto LABEL_12;
    goto LABEL_10;
  }
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextShort + 8);
  if (v13)
  {
    swift_bridgeObjectRetain(v13);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v1, "setText:", v14);

LABEL_16:
}

uint64_t sub_10034BEC4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[51];

  v4[0] = &unk_10071CC98;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_10071CCB0;
    v4[4] = &unk_10071CCB0;
    v4[5] = &unk_10071CCB0;
    v4[6] = &unk_10071CCC8;
    v4[7] = &unk_10071CCB0;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[15] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[18] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[20] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[21] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[22] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[23] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[24] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[25] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[26] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[27] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[28] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[29] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[30] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[31] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[32] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[33] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[34] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[35] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[36] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[37] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[38] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[39] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[40] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[41] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[42] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[43] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[44] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[45] = &unk_10071CCB0;
    v4[46] = &unk_10071CCB0;
    v4[47] = &unk_10071CCB0;
    v4[48] = &unk_10071CCE0;
    v4[49] = &unk_10071CCF8;
    v4[50] = &unk_10071CCF8;
    return swift_updateClassMetadata2(a1, 256, 51, v4, a1 + 80);
  }
  return result;
}

id sub_10034BFCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  NSString v24;
  id v25;
  id v27[2];

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)v27 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)v27 - v14;
  v27[0] = *(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__mainViewContainer);
  objc_msgSend(v27[0], "addSubview:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_grabberView));
  v16 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_dismissButton);
  objc_msgSend(v16, "setExclusiveTouch:", 1);
  objc_msgSend(v16, "addTarget:action:forControlEvents:", v1, "onClose:", 64);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x65736F6C43, 0xE500000000000000);
  static Locale.current.getter(v17);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v20, v6, "Accessibility label for a close button", 38, 2);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setAccessibilityLabel:", v23);

  objc_msgSend(v16, "setShowsLargeContentViewer:", 1);
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  objc_msgSend(v16, "setLargeContentTitle:", v24);

  v25 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
  objc_msgSend(v16, "addInteraction:", v25);

  return objc_msgSend(v27[0], "addSubview:", v16);
}

void sub_10034C2A4()
{
  uint64_t v0;
  char **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjCClassFromMetadata;
  id v26;
  char *v27;
  char **v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  id v34;
  id v35;
  uint64_t v36;
  char *v37;
  void *v38;
  NSString v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  void *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  NSString v68;
  NSString v69;
  char *v70;
  NSString v71;
  char *v72;
  NSString v73;
  id v74;
  char *v75;
  id v76;
  id v77;
  void *v78;
  uint64_t v79;
  void *v80;
  id v81;
  id v82;
  uint64_t v83;
  char *v84;
  void (*v85)(char *, uint64_t);
  char *v86;
  char *v87;
  id v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  id v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  id v99;
  id v100;

  v96 = type metadata accessor for Locale(0);
  v1 = *(char ***)(v96 - 8);
  v2 = __chkstk_darwin(v96);
  v4 = (uint64_t)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v84 - v5;
  v97 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v97 - 8);
  v8 = __chkstk_darwin(v97);
  v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v84 - v11;
  v13 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_bottomToolbarContainer);
  objc_msgSend(v13, "setOpaque:", 0);
  v14 = objc_msgSend(v13, "layer");
  objc_msgSend(v14, "setAllowsGroupBlending:", 0);

  v15 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__mainViewContainer);
  v99 = v13;
  objc_msgSend(v15, "addSubview:", v13);
  v16 = objc_opt_self(_UIImageSymbolConfiguration);
  v17 = (id)objc_opt_self(UIFont);
  if (qword_1009CDF58 != -1)
LABEL_26:
    swift_once(&qword_1009CDF58, sub_100347B88);
  v18 = objc_msgSend(v17, "boldSystemFontOfSize:", *(double *)&qword_1009DC578, v84);
  v98 = objc_msgSend((id)v16, "_configurationWithFont:", v18);

  v19 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed);
  v100 = (id)objc_opt_self(UIColor);
  v20 = objc_msgSend(v100, "bc_nowPlayingVibrantSecondary");
  v95 = v0;
  v21 = v20;
  objc_msgSend(v19, "setTitleColor:forState:", v20, 0);

  objc_msgSend(v19, "setContentHorizontalAlignment:", 1);
  objc_msgSend(v19, "addTarget:action:forControlEvents:", v0, "onNarrationSpeed:", 64);
  v22 = String.LocalizationValue.init(stringLiteral:)(0x6F6974617272614ELL, 0xEF6465657053206ELL);
  static Locale.current.getter(v22);
  v23 = v97;
  v90 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v90(v10, v12, v97);
  v24 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v24);
  v88 = (id)objc_opt_self(NSBundle);
  v89 = ObjCClassFromMetadata;
  v26 = objc_msgSend(v88, "bundleForClass:", ObjCClassFromMetadata);
  v27 = v6;
  v28 = v1;
  v29 = v1[2];
  v30 = v96;
  v87 = v29;
  ((void (*)(uint64_t, char *, uint64_t))v29)(v4, v27, v96);
  v92 = v10;
  v93 = v4;
  String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v26, v4, "Narration Speed", 15, 2);
  v32 = v31;
  v86 = v28[1];
  ((void (*)(char *, uint64_t))v86)(v27, v30);
  v85 = *(void (**)(char *, uint64_t))(v7 + 8);
  v85(v12, v23);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v32);
  objc_msgSend(v19, "setAccessibilityLabel:", v33);

  objc_msgSend(v19, "setShowsLargeContentViewer:", 1);
  v34 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
  objc_msgSend(v19, "addInteraction:", v34);

  v35 = v99;
  objc_msgSend(v99, "addSubview:", v19);
  v36 = v95;
  v37 = *(char **)(v95 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton);
  v38 = (void *)objc_opt_self(UIImage);
  v39 = String._bridgeToObjectiveC()();
  v91 = v38;
  v40 = objc_msgSend(v38, "__systemImageNamedSwift:", v39);

  v94 = v27;
  v41 = v98;
  if (v40)
  {
    v42 = objc_msgSend(v40, "imageWithConfiguration:", v98);

    v40 = objc_msgSend(v42, "imageWithRenderingMode:", 2);
  }
  objc_msgSend(v37, "setImage:forState:", v40, 0);

  objc_msgSend(v37, "setTitle:forState:", 0, 0);
  v43 = v100;
  v44 = objc_msgSend(v100, "bc_nowPlayingVibrantSecondary");
  objc_msgSend(v37, "setTintColor:", v44);

  v45 = objc_msgSend(v43, "bc_nowPlayingVibrantSecondary");
  objc_msgSend(v37, "setTitleColor:forState:", v45, 0);

  if (qword_1009CDF60 != -1)
    swift_once(&qword_1009CDF60, sub_100347B98);
  *(_QWORD *)&v37[OBJC_IVAR____TtC5Books11SleepButton_fixedHeight] = qword_1009DC580;
  if (qword_1009CE130 != -1)
    swift_once(&qword_1009CE130, sub_100347F6C);
  *(_QWORD *)&v37[OBJC_IVAR____TtC5Books11SleepButton_internalPadding] = qword_1009DC790;
  objc_msgSend(v37, "setShowsLargeContentViewer:", 1);
  v46 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
  objc_msgSend(v37, "addInteraction:", v46);

  objc_msgSend(v35, "addSubview:", v37);
  v47 = *(void **)(v36 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__routeView);
  if (v47)
  {
    v17 = v47;
    v48 = objc_msgSend(v43, "bc_nowPlayingVibrantSecondary");
    objc_msgSend(v17, "setTintColor:", v48);

    objc_msgSend(v35, "insertSubview:below:", v17, v37);
    v49 = objc_msgSend(v17, "subviews");
    v50 = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
    v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v50);

    v84 = v12;
    v0 = v36;
    if ((unint64_t)v16 >> 62)
    {
      if (v16 < 0)
        v83 = v16;
      else
        v83 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v51 = _CocoaArrayWrapper.endIndex.getter(v83);
      if (v51)
      {
LABEL_11:
        v52 = sub_100009E04(0, qword_1009D7740, UIButton_ptr);
        v7 = swift_getObjCClassFromMetadata(v52);
        v12 = (char *)(v16 & 0xC000000000000001);
        v4 = 4;
        v1 = &selRef__mediaLibraryDidChange_;
        while (1)
        {
          if (v12)
            v53 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v16);
          else
            v53 = (char *)*(id *)(v16 + 8 * v4);
          v6 = v53;
          v10 = (char *)(v4 - 3);
          if (__OFADD__(v4 - 4, 1))
          {
            __break(1u);
            goto LABEL_26;
          }
          if (objc_msgSend(v53, "isKindOfClass:", v7))
            break;

          ++v4;
          if (v10 == (char *)v51)
            goto LABEL_18;
        }
        swift_bridgeObjectRelease_n(v16, 2);
        v54 = objc_opt_self(UIButton);
        v55 = swift_dynamicCastObjCClass(v6, v54);
        v35 = v99;
        if (v55)
        {
          v56 = v84;
          v57 = (void *)v55;
          v58 = String.LocalizationValue.init(stringLiteral:)(0x79616C50726941, 0xE700000000000000);
          v59 = v94;
          static Locale.current.getter(v58);
          v60 = v92;
          v90(v92, v56, v97);
          v61 = objc_msgSend(v88, "bundleForClass:", v89);
          v62 = v93;
          v63 = v96;
          ((void (*)(uint64_t, char *, uint64_t))v87)(v93, v59, v96);
          String.init(localized:table:bundle:locale:comment:)(v60, 0, 0, v61, v62, "AirPlay", 7, 2);
          v65 = v64;
          v66 = v59;
          v36 = v95;
          ((void (*)(char *, uint64_t))v86)(v66, v63);
          v85(v56, v97);
          v67 = v6;
          v68 = String._bridgeToObjectiveC()();
          objc_msgSend(v57, "setAccessibilityIdentifier:", v68);

          v69 = String._bridgeToObjectiveC()();
          objc_msgSend(v57, "setAccessibilityLabel:", v69);

          objc_msgSend(v57, "setShowsLargeContentViewer:", 1);
          v70 = v67;
          v71 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease(v65);
          objc_msgSend(v57, "setLargeContentTitle:", v71);

          v72 = v70;
          v73 = String._bridgeToObjectiveC()();
          v74 = objc_msgSend(v91, "_systemImageNamed:", v73);

          objc_msgSend(v57, "setLargeContentImage:", v74);
          v6 = (char *)objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
          objc_msgSend(v57, "addInteraction:", v6);

        }
        else
        {
          v36 = v0;
        }

        v41 = v98;
        goto LABEL_23;
      }
    }
    else
    {
      v51 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v16);
      if (v51)
        goto LABEL_11;
    }
LABEL_18:
    swift_bridgeObjectRelease_n(v16, 2);
    v36 = v0;
    v41 = v98;
    v35 = v99;
LABEL_23:

    v43 = v100;
  }
  v75 = *(char **)(v36 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton);
  v76 = objc_msgSend(v43, "bc_nowPlayingVibrantSecondary", v84);
  objc_msgSend(v75, "setTintColor:", v76);

  v77 = objc_msgSend(v43, "bc_nowPlayingVibrantQuaternary");
  v78 = v35;
  v79 = OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_platterColor;
  v80 = *(void **)&v75[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_platterColor];
  *(_QWORD *)&v75[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_platterColor] = v77;
  v81 = v77;

  objc_msgSend(*(id *)&v75[OBJC_IVAR____TtC5Books28AudiobookNowPlayingTOCButton_supplementalView], "setBackgroundColor:", *(_QWORD *)&v75[v79]);
  v82 = objc_msgSend(v43, "bc_nowPlayingVibrantPrimary");
  sub_100283150(v82);

  objc_msgSend(v75, "setContentHorizontalAlignment:", 2);
  objc_msgSend(v75, "addTarget:action:forControlEvents:", v36, "onTOC:", 64);
  objc_msgSend(v78, "addSubview:", v75);

}

uint64_t sub_10034CE14()
{
  char *v0;
  NSString v1;
  void *v2;
  NSString v3;
  void *v4;
  NSString v5;
  void *v6;
  NSString v7;
  void *v8;
  NSString v9;
  void *v10;
  NSString v11;
  void *v12;
  NSString v13;
  void *v14;
  NSString v15;
  void *v16;
  NSString v17;
  void *v18;
  NSString v19;
  char *v20;
  _QWORD v22[4];

  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setAccessibilityIdentifier:", v1);

  v2 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_dismissButton];
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setAccessibilityIdentifier:", v3);

  v4 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPause];
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v4, "setAccessibilityIdentifier:", v5);

  v6 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardButton];
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setAccessibilityIdentifier:", v7);

  v8 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardButton];
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setAccessibilityIdentifier:", v9);

  v10 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView];
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setAccessibilityIdentifier:", v11);

  v12 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton];
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setAccessibilityIdentifier:", v13);

  v14 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed];
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setAccessibilityIdentifier:", v15);

  v16 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton];
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setAccessibilityIdentifier:", v17);

  v18 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton];
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setAccessibilityIdentifier:", v19);

  v22[3] = type metadata accessor for AudiobookNowPlayingFullscreenTouchView(0);
  v22[0] = v0;
  v20 = v0;
  static UIAccessibility.addAccessibilityStatusChangeObserver(_:selector:)(v22, "relayoutSubviews");
  return _s5Books15CurrentPageViewVwxx_0(v22);
}

void sub_10034D0D8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  NSString v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  NSString v19;
  id v20;
  void *v21;
  NSString v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  double v30;
  double v31;
  id v32;
  char *v33;
  id v34;
  id v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjCClassFromMetadata;
  id v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSString v50;
  id v51;
  id v52;
  id v53;
  id v54;
  NSString v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  NSString v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  id v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSString v80;
  id v81;
  uint64_t v82;
  id v83;
  void (*v84)(char *, char *, uint64_t);
  id v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  id v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  _QWORD aBlock[5];
  uint64_t v107;

  v104 = type metadata accessor for Locale(0);
  v96 = *(_QWORD *)(v104 - 8);
  v1 = __chkstk_darwin(v104);
  v101 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v103 = (char *)&v82 - v3;
  v102 = type metadata accessor for String.LocalizationValue(0);
  v95 = *(_QWORD *)(v102 - 8);
  v4 = __chkstk_darwin(v102);
  v99 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v100 = (char *)&v82 - v6;
  v7 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer];
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setAllowsGroupBlending:", 0);

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__mainViewContainer], "addSubview:", v7);
  v9 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleLabel];
  objc_msgSend(v9, "setTextAlignment:", 4);
  v105 = v0;
  v10 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleMarqueeView];
  objc_msgSend(v10, "setContentGap:", 32.0);
  objc_msgSend(v10, "setAnimationReferenceView:", v7);
  if (qword_1009CE0F8 != -1)
    swift_once(&qword_1009CE0F8, sub_100347EEC);
  objc_msgSend(v10, "setFadeEdgeInsets:", xmmword_1009DC738, *(double *)&qword_1009DC748, unk_1009DC750);
  v11 = objc_msgSend(v10, "contentView");
  if (!v11)
  {
    __break(1u);
    goto LABEL_27;
  }
  v12 = v11;
  objc_msgSend(v11, "addSubview:", v9);

  objc_msgSend(v10, "setViewForContentSize:", v9);
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "_setLayoutDebuggingIdentifier:", v13);

  objc_msgSend(v7, "addSubview:", v10);
  v14 = v105;
  v15 = *(void **)&v105[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel];
  objc_msgSend(v15, "setTextAlignment:", 4);
  v16 = *(void **)&v14[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleMarqueeView];
  objc_msgSend(v16, "setContentGap:", 32.0);
  objc_msgSend(v16, "setAnimationReferenceView:", v7);
  objc_msgSend(v16, "setFadeEdgeInsets:", xmmword_1009DC738, *(double *)&qword_1009DC748, unk_1009DC750);
  v17 = objc_msgSend(v16, "contentView");
  if (!v17)
  {
LABEL_27:
    __break(1u);
    return;
  }
  v18 = v17;
  objc_msgSend(v17, "addSubview:", v15);

  objc_msgSend(v16, "setViewForContentSize:", v15);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "_setLayoutDebuggingIdentifier:", v19);

  objc_msgSend(v10, "addCoordinatedMarqueeView:", v16);
  objc_msgSend(v7, "addSubview:", v16);
  v93 = (id)objc_opt_self(_UIImageSymbolConfiguration);
  v20 = objc_msgSend(v93, "_configurationWithPointSize:weight:", 4, 20.0);
  v21 = (void *)objc_opt_self(UIImage);
  v22 = String._bridgeToObjectiveC()();
  v94 = v21;
  v23 = objc_msgSend(v21, "__systemImageNamedSwift:", v22);

  v24 = v7;
  if (v23)
  {
    v25 = objc_msgSend(v23, "imageWithConfiguration:", v20);

  }
  else
  {
    v25 = 0;
  }
  v26 = *(void **)&v105[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton];
  objc_msgSend(v26, "setImage:forState:", v25, 0);
  v27 = sub_100009E04(0, (unint64_t *)&qword_1009DC920, UIGraphicsImageRendererFormat_ptr);
  v28 = objc_msgSend((id)swift_getObjCClassFromMetadata(v27), "preferredFormat");
  v29 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v29, "scale");
  v31 = v30;

  objc_msgSend(v28, "setScale:", v31);
  if (qword_1009CDFA8 != -1)
    swift_once(&qword_1009CDFA8, sub_100347C28);
  v32 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v28, *(double *)&qword_1009DC5C8, *(double *)&qword_1009DC5C8);
  aBlock[4] = sub_1003473B4;
  v107 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100064AFC;
  aBlock[3] = &unk_1008FEEC0;
  v33 = (char *)_Block_copy(aBlock);
  v34 = objc_msgSend(v32, "imageWithActions:", v33, swift_release(v107).n128_f64[0]);
  _Block_release(v33);
  if ((swift_isEscapingClosureAtFileLocation(0, "", 125, 1424, 60, 1) & 1) != 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  v89 = v32;
  v90 = v28;
  v91 = v25;
  v92 = v20;
  v88 = v34;
  objc_msgSend(v26, "setBackgroundImage:forState:", v34, 0);
  v97 = (id)objc_opt_self(UIColor);
  v35 = objc_msgSend(v97, "bc_nowPlayingVibrantPrimary");
  objc_msgSend(v26, "setTintColor:", v35);

  objc_msgSend(v26, "setContentHorizontalAlignment:", 0);
  v98 = v24;
  v36 = v100;
  v37 = String.LocalizationValue.init(stringLiteral:)(0x7463412065726F4DLL, 0xEC000000736E6F69);
  v38 = v103;
  static Locale.current.getter(v37);
  v39 = v95;
  v40 = v99;
  v41 = v102;
  v87 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  v87(v99, v36, v102);
  v42 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v42);
  v85 = (id)objc_opt_self(NSBundle);
  v86 = ObjCClassFromMetadata;
  v44 = objc_msgSend(v85, "bundleForClass:", ObjCClassFromMetadata);
  v45 = v96;
  v46 = v101;
  v47 = v104;
  v84 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
  v84(v101, v38, v104);
  String.init(localized:table:bundle:locale:comment:)(v40, 0, 0, v44, v46, "More Actions", 12, 2);
  v49 = v48;
  v96 = *(_QWORD *)(v45 + 8);
  ((void (*)(char *, uint64_t))v96)(v38, v47);
  v25 = v98;
  v95 = *(_QWORD *)(v39 + 8);
  ((void (*)(char *, uint64_t))v95)(v36, v41);
  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v49);
  objc_msgSend(v26, "setAccessibilityLabel:", v50);

  objc_msgSend(v26, "setShowsLargeContentViewer:", 1);
  v51 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
  objc_msgSend(v26, "addInteraction:", v51);

  objc_msgSend(v25, "addSubview:", v26);
  v33 = v105;
  v28 = *(id *)&v105[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator];
  objc_msgSend(v28, "setInscribeProgress:", 0);
  objc_msgSend(v28, "setProgressLineCap:", 1);
  if (qword_1009CE0F0 != -1)
LABEL_25:
    swift_once(&qword_1009CE0F0, sub_100347EDC);
  objc_msgSend(v28, "setProgressThickness:", *(double *)&qword_1009DC730);
  v52 = objc_msgSend(v97, "bc_booksTableSelectionColor");
  objc_msgSend(v28, "setTrackColor:", v52);

  objc_msgSend(v28, "setTrackDiameter:", *(double *)&qword_1009DC5C8);
  objc_msgSend(v28, "setTrackThickness:", *(double *)&qword_1009DC730);
  objc_msgSend(v28, "setShowsTouchWhenHighlighted:", 0);
  v53 = v93;
  if (qword_1009CDF78 != -1)
    swift_once(&qword_1009CDF78, sub_100347BC8);
  v54 = objc_msgSend(v53, "_configurationWithPointSize:", *(double *)&qword_1009DC598);
  v55 = String._bridgeToObjectiveC()();
  v56 = v94;
  v57 = objc_msgSend(v94, "__systemImageNamedSwift:", v55);

  v83 = v54;
  if (v57)
  {
    v58 = objc_msgSend(v57, "imageWithConfiguration:", v54);

    v57 = objc_msgSend(v58, "imageWithRenderingMode:", 2);
  }
  objc_msgSend(v28, "setCenterImageNormal:", v57);

  objc_msgSend(v28, "setAlpha:", 0.0);
  objc_msgSend(v25, "addSubview:", v28);
  objc_msgSend(v28, "addTarget:action:forControlEvents:", v33, "cancelDownload:", 64);
  v59 = *(void **)&v33[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadSpinner];
  objc_msgSend(v59, "setAlpha:", 0.0);
  objc_msgSend(v25, "addSubview:", v59);
  if (qword_1009CDF70 != -1)
    swift_once(&qword_1009CDF70, sub_100347BB8);
  v60 = objc_msgSend(v53, "_configurationWithPointSize:", *(double *)&qword_1009DC590);
  v61 = String._bridgeToObjectiveC()();
  v62 = objc_msgSend(v56, "__systemImageNamedSwift:", v61);

  v93 = v60;
  if (v62)
  {
    v63 = objc_msgSend(v62, "imageWithConfiguration:", v60);

    v64 = objc_msgSend(v63, "imageWithRenderingMode:", 2);
  }
  else
  {
    v64 = 0;
  }
  v65 = v97;
  v66 = *(void **)&v33[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadButton];
  objc_msgSend(v66, "setImage:forState:", v64, 0);
  v67 = objc_msgSend(v66, "imageView");
  if (v67)
  {
    v68 = v67;
    objc_msgSend(v67, "setContentMode:", 1);

  }
  objc_msgSend(v66, "setAlpha:", 0.0);
  v69 = objc_msgSend(v65, "bc_nowPlayingVibrantPrimary");
  objc_msgSend(v66, "setTintColor:", v69);

  v70 = v100;
  v71 = String.LocalizationValue.init(stringLiteral:)(0x64616F6C6E776F44, 0xE800000000000000);
  v72 = v103;
  static Locale.current.getter(v71);
  v73 = v99;
  v74 = v102;
  v87(v99, v70, v102);
  v75 = objc_msgSend(v85, "bundleForClass:", v86);
  v76 = v101;
  v77 = v104;
  v84(v101, v72, v104);
  String.init(localized:table:bundle:locale:comment:)(v73, 0, 0, v75, v76, "Download", 8, 2);
  v79 = v78;
  ((void (*)(char *, uint64_t))v96)(v72, v77);
  ((void (*)(char *, uint64_t))v95)(v70, v74);
  v80 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v79);
  objc_msgSend(v66, "setAccessibilityLabel:", v80);

  objc_msgSend(v66, "setShowsLargeContentViewer:", 1);
  v81 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "init");
  objc_msgSend(v66, "addInteraction:", v81);

  objc_msgSend(v98, "addSubview:", v66);
  objc_msgSend(v66, "addTarget:action:forControlEvents:", v105, "startDownload:", 64);
  sub_100349E98();

}

void sub_10034DEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  NSString v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjCClassFromMetadata;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  NSString v39;
  UIAccessibilityTraits v40;
  unint64_t v41;
  UIAccessibilityTraits v42;
  id v43;
  void *v44;
  NSString v45;
  uint64_t v46;
  char *v47;
  char *v48;
  id v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  unint64_t v56;
  UIAccessibilityTraits v57;
  void *v58;
  NSString v59;
  void *v60;
  double v61;
  double v62;
  double v63;
  void *v64;
  id v65;
  id v66;
  void *v67;
  NSString v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  double v77;
  NSString v78;
  id v79;
  id v80;
  NSString v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  id v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  id v106;
  CGAffineTransform v107;

  v103 = type metadata accessor for Locale(0);
  v100 = *(_QWORD *)(v103 - 8);
  v1 = __chkstk_darwin(v103);
  v102 = (char *)&v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v98 = (char *)&v91 - v3;
  v99 = type metadata accessor for String.LocalizationValue(0);
  v104 = *(_QWORD *)(v99 - 8);
  v4 = __chkstk_darwin(v99);
  v101 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v97 = (char *)&v91 - v6;
  v7 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_transportContainer);
  objc_msgSend(v7, "setOpaque:", 0);
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setAllowsGroupBlending:", 0);

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__mainViewContainer), "addSubview:", v7);
  sub_100350238();
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack);
  v105 = v7;
  objc_msgSend(v7, "addSubview:", v9);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__transportSubcontainer);
  objc_msgSend(v10, "setOpaque:", 0);
  v11 = objc_msgSend(v10, "layer");
  objc_msgSend(v11, "setAllowsGroupBlending:", 0);

  objc_msgSend(v7, "addSubview:", v10);
  v12 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardButton);
  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "bc_nowPlayingVibrantPrimary");
  objc_msgSend(v12, "setTintColor:", v14);

  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v12, "addTarget:action:forControlEvents:", v0, "skipForwardStart:", 17);
  objc_msgSend(v12, "addTarget:action:forControlEvents:", v0, "skipForwardTouchUpInside:", 64);
  objc_msgSend(v12, "addTarget:action:forControlEvents:", v0, "skipForwardTouchCancel:", 288);
  objc_msgSend(v10, "addSubview:", *(_QWORD *)(v0+ OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardVibrancyEffectContainerView));
  sub_100349374();
  v15 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPause);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v15, "setBackgroundImage:forState:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playImage), 0);
  v16 = objc_msgSend(v13, "bc_nowPlayingVibrantPrimary");
  objc_msgSend(v15, "setTintColor:", v16);

  objc_msgSend(v15, "addTarget:action:forControlEvents:", v0, "onPlayPause:", 64);
  objc_msgSend(v10, "addSubview:", *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPauseVibrancyEffectContainerView));
  v17 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardButton);
  v106 = v13;
  v18 = objc_msgSend(v13, "bc_nowPlayingVibrantPrimary");
  objc_msgSend(v17, "setTintColor:", v18);

  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v17, "addTarget:action:forControlEvents:", v0, "skipBackwardStart:", 17);
  objc_msgSend(v17, "addTarget:action:forControlEvents:", v0, "skipBackwardTouchUpInside:", 64);
  objc_msgSend(v17, "addTarget:action:forControlEvents:", v0, "skipBackwardTouchCancel:", 288);
  objc_msgSend(v10, "addSubview:", *(_QWORD *)(v0+ OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardVibrancyEffectContainerView));
  v19 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_played);
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setText:", v20);

  objc_msgSend(v19, "setTextAlignment:", 0);
  v21 = v97;
  v22 = String.LocalizationValue.init(stringLiteral:)(0x646579616C50, 0xE600000000000000);
  v23 = v98;
  static Locale.current.getter(v22);
  v96 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
  v24 = v101;
  v25 = v21;
  v26 = v21;
  v27 = v99;
  v96(v101, v25, v99);
  v28 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v28);
  v95 = ObjCClassFromMetadata;
  v94 = (id)objc_opt_self(NSBundle);
  v30 = objc_msgSend(v94, "bundleForClass:", ObjCClassFromMetadata);
  v31 = v100;
  v93 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v32 = v102;
  v33 = v103;
  v93(v102, v23, v103);
  String.init(localized:table:bundle:locale:comment:)(v24, 0, 0, v30, v32, "Accessibility label for the amount of time that has already been played within an audiobook chapter", 99, 2);
  v35 = v34;
  v100 = *(_QWORD *)(v31 + 8);
  ((void (*)(char *, uint64_t))v100)(v23, v33);
  v104 = *(_QWORD *)(v104 + 8);
  v36 = v0;
  v92 = v0;
  v37 = v26;
  v38 = v27;
  ((void (*)(char *, uint64_t))v104)(v26, v27);
  v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  objc_msgSend(v19, "setAccessibilityLabel:", v39);

  v40 = UIAccessibilityTraitUpdatesFrequently;
  v41 = (unint64_t)objc_msgSend(v19, "accessibilityTraits");
  if ((v40 & ~v41) != 0)
    v42 = v40;
  else
    v42 = 0;
  objc_msgSend(v19, "setAccessibilityTraits:", v42 | v41);
  v43 = v105;
  objc_msgSend(v105, "addSubview:", v19);
  v44 = *(void **)(v36 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlay);
  v45 = String._bridgeToObjectiveC()();
  objc_msgSend(v44, "setText:", v45);

  objc_msgSend(v44, "setTextAlignment:", 2);
  v46 = String.LocalizationValue.init(stringLiteral:)(0x79616C70206F54, 0xE700000000000000);
  v47 = v23;
  static Locale.current.getter(v46);
  v48 = v101;
  v96(v101, v37, v27);
  v49 = objc_msgSend(v94, "bundleForClass:", v95);
  v50 = v102;
  v51 = v103;
  v93(v102, v47, v103);
  String.init(localized:table:bundle:locale:comment:)(v48, 0, 0, v49, v50, "Accessibility label for the amount of time that remains to be played within an audiobook chapter", 96, 2);
  v53 = v52;
  ((void (*)(char *, uint64_t))v100)(v47, v51);
  ((void (*)(char *, uint64_t))v104)(v37, v38);
  v54 = v92;
  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v53);
  objc_msgSend(v44, "setAccessibilityLabel:", v55);

  v56 = (unint64_t)objc_msgSend(v44, "accessibilityTraits");
  if ((v40 & ~v56) != 0)
    v57 = v40;
  else
    v57 = 0;
  objc_msgSend(v44, "setAccessibilityTraits:", v57 | v56);
  objc_msgSend(v43, "addSubview:", v44);
  v58 = *(void **)(v54 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__toPlayInAudiobook);
  v59 = String._bridgeToObjectiveC()();
  objc_msgSend(v58, "setText:", v59);

  objc_msgSend(v58, "setTextAlignment:", 1);
  objc_msgSend(v43, "addSubview:", v58);
  v60 = *(void **)(v54 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_loadingSpinner);
  objc_msgSend(v60, "intrinsicContentSize");
  v62 = v61;
  v63 = 0.0;
  if (v62 != 0.0)
  {
    if (qword_1009CDFA0 != -1)
      swift_once(&qword_1009CDFA0, sub_100347C18);
    v63 = *(double *)&qword_1009DC5C0 / v62;
  }
  CGAffineTransformMakeScale(&v107, v63, v63);
  objc_msgSend(v60, "setTransform:", &v107);
  objc_msgSend(v43, "addSubview:", v60);
  v64 = *(void **)(v54 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeContainer);
  objc_msgSend(v64, "setOpaque:", 0);
  v65 = objc_msgSend(v64, "layer");
  objc_msgSend(v65, "setAllowsGroupBlending:", 0);

  objc_msgSend(v43, "addSubview:", v64);
  v66 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithTextStyle:scale:", UIFontTextStyleFootnote, 2);
  v67 = (void *)objc_opt_self(UIImage);
  v68 = String._bridgeToObjectiveC()();
  v69 = objc_msgSend(v67, "__systemImageNamedSwift:", v68);

  if (v69)
  {
    v70 = objc_msgSend(v69, "imageWithConfiguration:", v66);

    v71 = objc_msgSend(v70, "imageWithRenderingMode:", 2);
  }
  else
  {
    v71 = 0;
  }
  v72 = *(void **)(v54 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeMinImageView);
  objc_msgSend(v72, "setImage:", v71);
  v73 = objc_msgSend(v106, "bc_nowPlayingVibrantSecondary");
  objc_msgSend(v72, "setTintColor:", v73);

  objc_msgSend(v64, "addSubview:", v72);
  v74 = *(void **)(v54 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeView);
  if (v74)
  {
    v75 = v74;
    v76 = objc_msgSend(v106, "bc_nowPlayingVibrantSecondary");
    objc_msgSend(v75, "setTintColor:", v76);

    objc_msgSend(v75, "setShowsRouteButton:", 0);
    if (qword_1009CE160 != -1)
      swift_once(&qword_1009CE160, sub_100347FCC);
    v77 = *(double *)&qword_1009DC7C0;
    v78 = String._bridgeToObjectiveC()();
    v79 = objc_msgSend(v67, "imageNamed:", v78);

    v80 = objc_msgSend(v79, "im_imageWithSize:", v77, v77);
    objc_msgSend(v75, "setVolumeThumbImage:forState:", v80, 0);
    objc_msgSend(v64, "addSubview:", v75);

  }
  v81 = String._bridgeToObjectiveC()();
  v82 = objc_msgSend(v67, "__systemImageNamedSwift:", v81);

  if (v82)
  {
    v83 = objc_msgSend(v82, "imageWithConfiguration:", v66);

    v84 = objc_msgSend(v83, "imageWithRenderingMode:", 2);
  }
  else
  {
    v84 = 0;
  }
  v85 = *(void **)(v54 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeMaxImageView);
  objc_msgSend(v85, "setImage:", v84);
  v86 = v106;
  v87 = objc_msgSend(v106, "bc_nowPlayingVibrantSecondary");
  objc_msgSend(v85, "setTintColor:", v87);

  objc_msgSend(v64, "addSubview:", v85);
  sub_100349588();
  v88 = *(void **)(v54 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider);
  v89 = objc_msgSend(v86, "bc_nowPlayingVibrantQuaternary");
  objc_msgSend(v88, "setBufferIndicatorColor:", v89);

  v90 = objc_msgSend(v86, "bc_nowPlayingVibrantSecondary");
  objc_msgSend(v88, "setSessionIndicatorColor:", v90);

  objc_msgSend(v88, "addTarget:action:forControlEvents:", v54, "setChapterProgress:", 4096);
  if (qword_1009CE0E8 != -1)
    swift_once(&qword_1009CE0E8, sub_100347EC4);
  objc_msgSend(v88, "setTouchInsets:", xmmword_1009DC710, *(double *)&qword_1009DC720, unk_1009DC728);
  objc_msgSend(v105, "addSubview:", v88);
  sub_100349FF8();

}

void sub_10034EC68()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleLabel);
  v2 = sub_1005D55EC((uint64_t)UIFontTextStyleTitle3, (uint64_t)UIContentSizeCategoryExtraExtraExtraLarge);
  objc_msgSend(v1, "setFont:", v2);

  v3 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel);
  v4 = (void *)objc_opt_self(UIFont);
  v5 = objc_msgSend(v4, "_preferredFontForTextStyle:maximumContentSizeCategory:", UIFontTextStyleTitle3, UIContentSizeCategoryExtraExtraExtraLarge);
  objc_msgSend(v3, "setFont:", v5);

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 8) == 1)
  {
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 394))
      v6 = (id *)&UIFontTextStyleBody;
    else
      v6 = (id *)&UIFontTextStyleCaption1;
    v7 = *v6;
    v8 = objc_msgSend(v4, "_preferredFontForTextStyle:maximumContentSizeCategory:", v7, UIContentSizeCategoryAccessibilityExtraExtraLarge);

    if (v8)
      goto LABEL_6;
  }
  else
  {
    v8 = objc_msgSend(v4, "_preferredFontForTextStyle:maximumContentSizeCategory:", UIFontTextStyleCaption1, UIContentSizeCategoryExtraExtraExtraLarge);
    if (v8)
    {
LABEL_6:
      objc_msgSend(v8, "pointSize");
      v19 = objc_msgSend(v4, "monospacedDigitSystemFontOfSize:weight:");

      v9 = v19;
      goto LABEL_9;
    }
  }
  v9 = 0;
LABEL_9:
  v20 = v9;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_played), "setFont:");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlay), "setFont:", v20);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__toPlayInAudiobook), "setFont:", v20);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed);
  v11 = objc_msgSend(v10, "titleLabel");
  if (!v11)
  {
LABEL_17:
    objc_msgSend(v10, "_setTouchInsets:", -20.0, -20.0, -20.0, -20.0);

    return;
  }
  v12 = v11;
  v13 = objc_msgSend((id)objc_opt_self(TUIFontSpec), "defaultFontSpec");
  if (!v13)
  {
    __break(1u);
    goto LABEL_19;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "fontSpecWithDesign:", UIFontDescriptorSystemDesignRounded);

  if (!v15)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v16 = objc_msgSend(v15, "fontSpecWithWeight:", UIFontWeightSemibold);

  if (!v16)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (qword_1009CE0D8 != -1)
    swift_once(&qword_1009CE0D8, sub_100347EA4);
  v17 = objc_msgSend(v16, "fontSpecWithPointSize:", *(double *)&qword_1009DC700);

  if (v17)
  {
    v18 = objc_msgSend(v17, "font");

    objc_msgSend(v12, "setFont:", v18);
    goto LABEL_17;
  }
LABEL_21:
  __break(1u);
}

id sub_10034EFE8()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  double MinX;
  double MidY;
  double Width;
  double MaxY;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__mainViewContainer];
  objc_msgSend(v9, "setFrame:");
  v10 = sub_1003479F4();
  objc_msgSend(v10, "setFrame:", v2, v4, v6, v8);

  v11 = sub_1003479F4();
  objc_msgSend(v9, "bounds");
  objc_msgSend(v11, "setFrame:");

  v12 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v12, "begin");
  objc_msgSend(v12, "setDisableActions:", 1);
  v13 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_backgroundGradientLayer];
  objc_msgSend(v9, "bounds");
  objc_msgSend(v13, "setFrame:");
  v14 = *(void **)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lowerHalfGradientLayer];
  objc_msgSend(v9, "bounds");
  MinX = CGRectGetMinX(v20);
  objc_msgSend(v9, "bounds");
  MidY = CGRectGetMidY(v21);
  objc_msgSend(v9, "bounds");
  Width = CGRectGetWidth(v22);
  objc_msgSend(v9, "bounds");
  MaxY = CGRectGetMaxY(v23);
  objc_msgSend(v9, "bounds");
  objc_msgSend(v14, "setFrame:", MinX, MidY, Width, MaxY - CGRectGetMidY(v24));
  return objc_msgSend(v12, "commit");
}

id sub_10034F18C()
{
  char *v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double *v9;
  double v10;
  CGFloat MidX;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double Width;
  CGRect v19;
  CGRect v20;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__mainViewContainer], "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = (double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  v10 = 0.0;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 8]
    && *((_BYTE *)v9 + 392) == 1)
  {
    if (qword_1009CE078 != -1)
      swift_once(&qword_1009CE078, sub_100347DD8);
    v10 = *(double *)&qword_1009DC698;
  }
  v19.origin.x = v2;
  v19.origin.y = v4;
  v19.size.width = v6;
  v19.size.height = v8;
  MidX = CGRectGetMidX(v19);
  v12 = CGFloatRoundForScale(MidX + v9[6] * -0.5, v9[35]);
  objc_msgSend(v0, "safeAreaInsets");
  v14 = v10 + v13;
  if (qword_1009CDF88 != -1)
    swift_once(&qword_1009CDF88, sub_100347BE8);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_grabberView], "setFrame:", v12, v14 + *(double *)&qword_1009DC5A8, v9[6], v9[7]);
  objc_msgSend(v0, "safeAreaInsets");
  v16 = v15;
  v20.origin.x = v2;
  v20.origin.y = v4;
  v20.size.width = v6;
  v20.size.height = v8;
  Width = CGRectGetWidth(v20);
  if (qword_1009CDF68 != -1)
    swift_once(&qword_1009CDF68, sub_100347BA8);
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_dismissButton], "setFrame:", 0.0, v10 + v16, Width, *(double *)&qword_1009DC588);
}

void sub_10034F354(id a1)
{
  char *v1;
  double *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  id v22;

  v2 = (double *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  if (*(double *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 256] > 1.5 && v2[3] > 0.0)
  {
    objc_msgSend(v1, "safeAreaInsets", 0.0);
    a1 = objc_msgSend(v1, "safeAreaInsets");
  }
  if (*((_BYTE *)v2 + 393) == 1)
  {
    if (qword_1009CDFE0 != -1)
      a1 = (id)swift_once(&qword_1009CDFE0, sub_100347C98);
    if (v2[3] > 0.0)
    {
      objc_msgSend(v1, "safeAreaInsets", 0.0);
      a1 = objc_msgSend(v1, "safeAreaInsets");
    }
  }
  else if (qword_1009CDFD8 != -1)
  {
    a1 = (id)swift_once(&qword_1009CDFD8, sub_100347C88);
  }
  if (qword_1009CE020 != -1)
    a1 = (id)swift_once(&qword_1009CE020, sub_100347D24);
  CGRectFitRectInRectAbsoluteNoRounding(a1);
  v4 = CGRectRoundedForScale(v3);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView], "setFrame:");
  v11 = *(void **)&v1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageShadowView];
  objc_msgSend(v11, "setFrame:", v4, v6, v8, v10);
  v12 = objc_msgSend(v11, "layer");
  objc_msgSend(v11, "bounds");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  if (qword_1009CDF30 != -1)
    swift_once(&qword_1009CDF30, sub_100347AE4);
  v21 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v14, v16, v18, v20, *(double *)&qword_1009DC548);
  v22 = objc_msgSend(v21, "CGPath");

  objc_msgSend(v12, "setShadowPath:", v22);
}

id sub_10034F690()
{
  char *v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double *v9;
  double MinX;
  CGRect v12;
  CGRect v13;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer], "frame");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  if (qword_1009CDF60 != -1)
    swift_once(&qword_1009CDF60, sub_100347B98);
  v9 = (double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  sub_100347484(*(double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 208], *(double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 216]);
  objc_msgSend(v0, "safeAreaInsets");
  if (qword_1009CE018 != -1)
    swift_once(&qword_1009CE018, sub_100347D14);
  if (*((_BYTE *)v9 + 393) == 1)
  {
    if (qword_1009CDFC8 != -1)
      swift_once(&qword_1009CDFC8, sub_100347C68);
    if (v9[3] > 0.0)
    {
      objc_msgSend(v0, "safeAreaInsets", 0.0);
      objc_msgSend(v0, "safeAreaInsets");
    }
  }
  else if (qword_1009CDFC0 != -1)
  {
    swift_once(&qword_1009CDFC0, sub_100347C58);
  }
  v12.origin.x = v2;
  v12.origin.y = v4;
  v12.size.width = v6;
  v12.size.height = v8;
  MinX = CGRectGetMinX(v12);
  v13.origin.x = v2;
  v13.origin.y = v4;
  v13.size.width = v6;
  v13.size.height = v8;
  CGRectGetWidth(v13);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_bottomToolbarContainer], "setFrame:", CGRectRoundedForScale(MinX));
  return sub_100351570();
}

id sub_10034F900()
{
  char *v0;
  double v1;
  double v2;
  double x;
  double width;
  CGFloat height;
  double MaxY;
  double MinY;
  double v8;
  double *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGFloat v18;
  double v19;
  double v20;
  double v22;
  double v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  if (qword_1009CE148 != -1)
    swift_once(&qword_1009CE148, sub_100347F9C);
  v1 = *(double *)&qword_1009DC7A8;
  if (qword_1009CE158 != -1)
    swift_once(&qword_1009CE158, sub_100347FBC);
  v2 = *(double *)&qword_1009DC7B8;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer], "frame");
  x = v24.origin.x;
  width = v24.size.width;
  height = v24.size.height;
  MaxY = CGRectGetMaxY(v24);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_bottomToolbarContainer], "frame");
  MinY = CGRectGetMinY(v25);
  if (qword_1009CDF60 != -1)
    swift_once(&qword_1009CDF60, sub_100347B98);
  v8 = *(double *)&qword_1009DC580;
  if (qword_1009CE100 != -1)
    swift_once(&qword_1009CE100, sub_100347F04);
  v9 = (double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  v10 = CGFloatRoundForScale(MinY + (v8 - *(double *)&qword_1009DC758) * 0.5, *(double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 280]);
  if (*((_BYTE *)v9 + 393) == 1)
  {
    if (qword_1009CE030 != -1)
      swift_once(&qword_1009CE030, sub_100347D48);
    v11 = *(double *)&qword_1009DC650;
  }
  else
  {
    v22 = MaxY;
    v23 = v2;
    v12 = v1;
    if (qword_1009CE038 != -1)
      swift_once(&qword_1009CE038, sub_100347D58);
    v13 = *(double *)&qword_1009DC658;
    v14 = v9[3];
    v11 = 0.0;
    if (v14 > 0.0)
    {
      objc_msgSend(v0, "safeAreaInsets", 0.0);
      v16 = v15;
      objc_msgSend(v0, "safeAreaInsets");
      v11 = (v9[3] - v9[42]) * ((v14 - (v16 + v17)) * 0.026 / v9[3]);
    }
    if (v13 > v11)
      v11 = v13;
    v1 = v12;
    MaxY = v22;
    v2 = v23;
  }
  v18 = MaxY + 27.0;
  v19 = (v1 - v2) * 0.5 + v10 - v11;
  v26.origin.x = x;
  v26.origin.y = v18;
  v26.size.width = width;
  v26.size.height = height;
  v20 = v19 - CGRectGetMinY(v26);
  return sub_1003507F8(x, v18, width, v20);
}

void sub_10034FB98(double a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  id v26;

  v3 = v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm;
  v4 = *(double *)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 16);
  v5 = v4
     - (*(double *)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 360)
      + *(double *)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 360));
  v6 = *(double *)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 24) - (v5 + a1);
  if (qword_1009CE080 != -1)
  {
    swift_once(&qword_1009CE080, sub_100347DE8);
    v4 = *(double *)(v3 + 16);
  }
  v7 = 0.0;
  if (v6 < *(double *)&qword_1009DC6A0)
    v7 = *(double *)&qword_1009DC6A0 - v6;
  v8 = CGRectRoundedForScale((v4 - (v5 - v7)) * 0.5);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView), "setFrame:");
  v15 = *(void **)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageShadowView);
  objc_msgSend(v15, "setFrame:", v8, v10, v12, v14);
  v16 = objc_msgSend(v15, "layer");
  objc_msgSend(v15, "bounds");
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  if (qword_1009CDF30 != -1)
    swift_once(&qword_1009CDF30, sub_100347AE4);
  v25 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v18, v20, v22, v24, *(double *)&qword_1009DC548);
  v26 = objc_msgSend(v25, "CGPath");

  objc_msgSend(v16, "setShadowPath:", v26);
}

id sub_10034FD88()
{
  uint64_t v0;
  uint64_t v1;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MinX;
  CGRect v8;
  CGRect v9;

  if (qword_1009CDF60 != -1)
    swift_once(&qword_1009CDF60, sub_100347B98);
  v1 = v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm;
  sub_100347484(*(double *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 208), *(double *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 216));
  if (*(_BYTE *)(v1 + 392) == 1)
  {
    if (qword_1009CE048 != -1)
      swift_once(&qword_1009CE048, sub_100347D78);
  }
  else if (qword_1009CE050 != -1)
  {
    swift_once(&qword_1009CE050, sub_100347D88);
  }
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer), "frame");
  x = v8.origin.x;
  y = v8.origin.y;
  width = v8.size.width;
  height = v8.size.height;
  MinX = CGRectGetMinX(v8);
  v9.origin.x = x;
  v9.origin.y = y;
  v9.size.width = width;
  v9.size.height = height;
  CGRectGetWidth(v9);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_bottomToolbarContainer), "setFrame:", CGRectRoundedForScale(MinX));
  return sub_1003517FC();
}

id sub_10034FF28()
{
  char *v0;
  double v1;
  double v2;
  double x;
  double width;
  CGFloat height;
  double *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double MinY;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v32;
  double v33;
  double v34;
  double MaxY;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  if (qword_1009CE148 != -1)
    swift_once(&qword_1009CE148, sub_100347F9C);
  v1 = *(double *)&qword_1009DC7A8;
  if (qword_1009CE158 != -1)
    swift_once(&qword_1009CE158, sub_100347FBC);
  v2 = *(double *)&qword_1009DC7B8;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer], "frame");
  x = v36.origin.x;
  width = v36.size.width;
  height = v36.size.height;
  MaxY = CGRectGetMaxY(v36);
  if (qword_1009CE0A8 != -1)
    swift_once(&qword_1009CE0A8, sub_100347E3C);
  v34 = *(double *)&qword_1009DC6C8;
  v6 = (double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  v7 = *(double *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 24];
  v8 = 0.0;
  if (v7 > 0.0)
  {
    objc_msgSend(v0, "safeAreaInsets", 0.0);
    v10 = v9;
    objc_msgSend(v0, "safeAreaInsets");
    v8 = (v6[3] - v6[42]) * ((v7 - (v10 + v11)) * 0.04 / v6[3]);
  }
  v33 = v8;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_bottomToolbarContainer], "frame");
  MinY = CGRectGetMinY(v37);
  if (qword_1009CDF60 != -1)
    swift_once(&qword_1009CDF60, sub_100347B98);
  v13 = *(double *)&qword_1009DC580;
  if (qword_1009CE100 != -1)
    swift_once(&qword_1009CE100, sub_100347F04);
  v14 = CGFloatRoundForScale(MinY + (v13 - *(double *)&qword_1009DC758) * 0.5, v6[35]);
  if (qword_1009CE0B0 != -1)
    swift_once(&qword_1009CE0B0, sub_100347E4C);
  v15 = *(double *)&qword_1009DC6D0;
  v16 = v6[3];
  v17 = 0.0;
  if (v16 > 0.0)
  {
    objc_msgSend(v0, "safeAreaInsets", 0.0);
    v32 = v14;
    v18 = height;
    v19 = width;
    v20 = x;
    v21 = v2;
    v22 = v1;
    v24 = v23;
    objc_msgSend(v0, "safeAreaInsets");
    v26 = v24 + v25;
    v1 = v22;
    v2 = v21;
    x = v20;
    width = v19;
    height = v18;
    v14 = v32;
    v17 = (v6[3] - v6[42]) * ((v16 - v26) * 0.05 / v6[3]);
  }
  v27 = v34;
  if (v33 < v34)
    v27 = v33;
  v28 = MaxY + v27;
  if (v17 >= v15)
    v17 = v15;
  v29 = (v1 - v2) * 0.5 + v14 - v17;
  v38.origin.x = x;
  v38.origin.y = MaxY + v27;
  v38.size.width = width;
  v38.size.height = height;
  v30 = v29 - CGRectGetMinY(v38);
  return sub_1003507F8(x, v28, width, v30);
}

id sub_100350238()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack);
  v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v1, "setFont:", v2);

  v3 = objc_msgSend((id)objc_opt_self(UIColor), "bc_nowPlayingVibrantPrimary");
  objc_msgSend(v1, "setTextColor:", v3);

  objc_msgSend(v1, "setTitle:", 0);
  return objc_msgSend(v1, "setAlpha:", 0.0);
}

void sub_100350304(double a1, double a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v7;
  CGRectEdge v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  double v14;
  void *v15;
  uint64_t v16;
  id v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  _QWORD rect[5];
  CGRect slice;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;

  v7 = v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 398))
    v8 = CGRectMinXEdge;
  else
    v8 = CGRectMaxXEdge;
  if (qword_1009CDFA8 != -1)
    swift_once(&qword_1009CDFA8, sub_100347C28);
  v9 = *(double *)&qword_1009DC5C8;
  memset(&slice, 0, sizeof(slice));
  memset(&rect[1], 0, 32);
  v45.origin.x = 0.0;
  v45.origin.y = 0.0;
  v45.size.width = a3;
  v45.size.height = a4;
  CGRectDivide(v45, &slice, (CGRect *)&rect[1], *(CGFloat *)&qword_1009DC5C8, v8);
  v10 = *(double *)&rect[1];
  v11 = *(double *)&rect[2];
  v12 = *(double *)&rect[3];
  v13 = *(double *)&rect[4];
  v14 = CGRectCenterRectInRect(0.0);
  CGRectRoundedForScale(v14);
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton), "setFrame:");
  v15 = *(void **)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_buyButton);
  if (v15)
  {
    v16 = qword_1009CDFB0;
    v17 = v15;
    if (v16 != -1)
      swift_once(&qword_1009CDFB0, sub_100347C38);
    memset(&slice, 0, sizeof(slice));
    memset(&rect[1], 0, 32);
    v46.origin.x = v10;
    v46.origin.y = v11;
    v46.size.width = v12;
    v46.size.height = v13;
    CGRectDivide(v46, &slice, (CGRect *)&rect[1], *(CGFloat *)&qword_1009DC5D0, v8);
    v47 = *(CGRect *)&rect[1];
    v18 = *(double *)(v7 + 32);
    memset(&slice, 0, sizeof(slice));
    memset(&rect[1], 0, 32);
    CGRectDivide(v47, &slice, (CGRect *)&rect[1], v18, v8);
    v11 = *(double *)&rect[2];
    rect[0] = rect[1];
    v12 = *(double *)&rect[3];
    v13 = *(double *)&rect[4];
    v19 = CGRectCenterRectInRect(0.0);
    v20 = CGRectRoundedForScale(v19);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    objc_msgSend(v17, "setFrame:");
    memset(&slice, 0, sizeof(slice));
    memset(&rect[1], 0, 32);
    v48.origin.x = v20;
    v48.origin.y = v22;
    v48.size.width = v24;
    v48.size.height = v26;
    CGRectDivide(v48, &slice, (CGRect *)&rect[1], v9, v8);
    v27 = CGRectCenterRectInRect(0.0);
    v28 = CGRectRoundedForScale(v27);
    v30 = v29;
    v32 = v31;
    v34 = v33;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator), "setFrame:");
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadSpinner), "setFrame:", v28, v30, v32, v34);
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadButton), "setFrame:", v28, v30, v32, v34);

  }
  else
  {
    if (*(_BYTE *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadState) == 3)
    {
      if (qword_1009CDF60 != -1)
        swift_once(&qword_1009CDF60, sub_100347B98);
      memset(&slice, 0, sizeof(slice));
      memset(&rect[1], 0, 32);
      *(CGFloat *)rect = v10;
      v49.origin.x = v10;
      v49.origin.y = v11;
      v49.size.width = v12;
      v49.size.height = v13;
      CGRectDivide(v49, &slice, (CGRect *)&rect[1], *(CGFloat *)&qword_1009DC580, v8);
    }
    else
    {
      if (qword_1009CDFB0 != -1)
        swift_once(&qword_1009CDFB0, sub_100347C38);
      memset(&slice, 0, sizeof(slice));
      memset(&rect[1], 0, 32);
      v50.origin.x = v10;
      v50.origin.y = v11;
      v50.size.width = v12;
      v50.size.height = v13;
      CGRectDivide(v50, &slice, (CGRect *)&rect[1], *(CGFloat *)&qword_1009DC5D0, v8);
      v51 = *(CGRect *)&rect[1];
      memset(&slice, 0, sizeof(slice));
      memset(&rect[1], 0, 32);
      CGRectDivide(v51, &slice, (CGRect *)&rect[1], v9, v8);
      v11 = *(double *)&rect[2];
      rect[0] = rect[1];
      v12 = *(double *)&rect[3];
      v13 = *(double *)&rect[4];
    }
    v35 = CGRectCenterRectInRect(0.0);
    v36 = CGRectRoundedForScale(v35);
    v38 = v37;
    v40 = v39;
    v42 = v41;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator), "setFrame:");
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadSpinner), "setFrame:", v36, v38, v40, v42);
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadButton), "setFrame:", v36, v38, v40, v42);
  }
  if (qword_1009CDF80 != -1)
    swift_once(&qword_1009CDF80, sub_100347BD8);
  memset(&slice, 0, sizeof(slice));
  memset(&rect[1], 0, 32);
  *(_QWORD *)&v52.origin.x = rect[0];
  v52.origin.y = v11;
  v52.size.width = v12;
  v52.size.height = v13;
  CGRectDivide(v52, &slice, (CGRect *)&rect[1], *(CGFloat *)&qword_1009DC5A0, v8);
}

id sub_1003507F8(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  void *v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGFloat Width;
  CGFloat rect;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  if (qword_1009CE148 != -1)
    swift_once(&qword_1009CE148, sub_100347F9C);
  if (qword_1009CE158 != -1)
    swift_once(&qword_1009CE158, sub_100347FBC);
  v9 = *(void **)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_transportContainer);
  objc_msgSend(v9, "setFrame:", a1, a2, a3, a4);
  sub_100350AAC();
  objc_msgSend(v9, "bounds");
  CGRectGetMaxY(v25);
  objc_msgSend(v9, "bounds");
  v10 = CGRectRoundedForScale(0.0);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  rect = v10;
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeContainer), "setFrame:");
  sub_100350E5C();
  if (qword_1009CE128 != -1)
    swift_once(&qword_1009CE128, sub_100347F54);
  v17 = *(double *)&xmmword_1009DC780;
  if (qword_1009CE138 != -1)
    swift_once(&qword_1009CE138, sub_100347F7C);
  v18 = *(double *)&qword_1009DC798;
  v19 = *(double *)&qword_1009DC798;
  if (qword_1009CE0D0 != -1)
  {
    swift_once(&qword_1009CE0D0, sub_100347E8C);
    v19 = *(double *)&qword_1009DC798;
  }
  v20 = *(double *)&xmmword_1009DC6F0;
  v21 = *(double *)&xmmword_1009DC780;
  if (qword_1009CE108 != -1)
    swift_once(&qword_1009CE108, sub_100347F14);
  v26.origin.x = rect;
  v26.origin.y = v12;
  v26.size.width = v14;
  v26.size.height = v16;
  CGRectGetMinY(v26);
  objc_msgSend(v9, "bounds");
  Width = CGRectGetWidth(v27);
  objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__transportSubcontainer), "setFrame:", CGRectRoundedForScale((Width - (v17 + v18 + v20 + v19 + v21)) * 0.5));
  return sub_100351184();
}

void sub_100350AAC()
{
  uint64_t v0;
  void *v1;
  double v2;
  CGFloat v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  uint64_t v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double MinX;
  CGFloat v19;
  double v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat x;
  double y;
  double width;
  double height;
  CGFloat v30;
  double MaxX;
  CGFloat v32;
  CGFloat v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_transportContainer);
  objc_msgSend(v1, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm;
  if (qword_1009CE108 != -1)
    swift_once(&qword_1009CE108, sub_100347F14);
  v34.origin.x = v3;
  v34.origin.y = v5;
  v34.size.width = v7;
  v34.size.height = v9;
  CGRectGetWidth(v34);
  v11 = CGRectRoundedForScale(0.0);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider), "setFrame:");
  v35.origin.x = v11;
  v35.origin.y = v13;
  v35.size.width = v15;
  v35.size.height = v17;
  MinX = CGRectGetMinX(v35);
  v36.origin.x = v11;
  v36.origin.y = v13;
  v36.size.width = v15;
  v36.size.height = v17;
  CGRectGetMinY(v36);
  if (qword_1009CDF90 != -1)
    swift_once(&qword_1009CDF90, sub_100347BF8);
  if (qword_1009CDF98 != -1)
    swift_once(&qword_1009CDF98, sub_100347C08);
  v37.origin.x = v11;
  v37.origin.y = v13;
  v37.size.width = v15;
  v37.size.height = v17;
  CGRectGetWidth(v37);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack), "setFrame:", CGRectRoundedForScale(MinX));
  if (qword_1009CE110 != -1)
    swift_once(&qword_1009CE110, sub_100347F24);
  if (qword_1009CE0E0 != -1)
    swift_once(&qword_1009CE0E0, sub_100347EB4);
  v19 = CGRectRoundedForScale(0.0);
  v32 = v21;
  v33 = v20;
  v22 = v19;
  v24 = v23;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_played), "setFrame:");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_loadingSpinner), "setFrame:", CGRectRoundedForScale(0.0));
  objc_msgSend(v1, "bounds");
  v38.origin.x = CGRectRoundedForScale(v25 - *(double *)(v10 + 112));
  x = v38.origin.x;
  y = v38.origin.y;
  width = v38.size.width;
  height = v38.size.height;
  v30 = v38.origin.x - CGRectGetWidth(v38);
  v39.origin.x = x;
  v39.origin.y = y;
  v39.size.width = width;
  v39.size.height = height;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlay), "setFrame:", v30, y, width + CGRectGetWidth(v39), height);
  v40.origin.x = v22;
  v40.origin.y = v24;
  v40.size.width = v33;
  v40.size.height = v32;
  MaxX = CGRectGetMaxX(v40);
  v41.origin.x = x;
  v41.origin.y = y;
  v41.size.width = width;
  v41.size.height = height;
  CGRectGetMinX(v41);
  v42.origin.x = v22;
  v42.origin.y = v24;
  v42.size.width = v33;
  v42.size.height = v32;
  CGRectGetMaxX(v42);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__toPlayInAudiobook), "setFrame:", CGRectRoundedForScale(MaxX));
  sub_10034BC48();
}

id sub_100350E5C()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  double MaxX;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  void *v37;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat v42;
  CGFloat x;
  CGFloat v44;
  double v45;
  double v46;
  CGRect v47;
  CGRect v48;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeContainer), "bounds");
  v2 = v1;
  v4 = v3;
  v5 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeMaxImageView);
  objc_msgSend(v5, "sizeThatFits:", v1, v3);
  v7 = v6;
  v8 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeMinImageView);
  objc_msgSend(v8, "sizeThatFits:", v2, v4);
  v10 = v9;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 398) == 1)
  {
    v47.origin.x = CGRectRoundedForScale(0.0);
    y = v47.origin.y;
    x = v47.origin.x;
    height = v47.size.height;
    width = v47.size.width;
    MaxX = CGRectGetMaxX(v47);
    if (qword_1009CE140 != -1)
      swift_once(&qword_1009CE140, sub_100347F8C);
    v12 = MaxX + *(double *)&qword_1009DC7A0;
    if (qword_1009CE150 != -1)
      swift_once(&qword_1009CE150, sub_100347FAC);
    v13 = CGRectRoundedForScale(v12);
    v45 = v15;
    v46 = v14;
    v17 = v16;
    v18 = CGRectRoundedForScale(v2 - v10);
    v21 = v20;
    v23 = v22;
    v25 = y;
    v24 = x;
    v27 = height;
    v26 = width;
  }
  else
  {
    v48.origin.x = CGRectRoundedForScale(0.0);
    v21 = v48.size.width;
    v23 = v48.size.height;
    v42 = v48.origin.y;
    v44 = v48.origin.x;
    v28 = CGRectGetMaxX(v48);
    if (qword_1009CE140 != -1)
      swift_once(&qword_1009CE140, sub_100347F8C);
    v29 = v28 + *(double *)&qword_1009DC7A0;
    if (qword_1009CE150 != -1)
      swift_once(&qword_1009CE150, sub_100347FAC);
    v30 = CGRectRoundedForScale(v29);
    v17 = v31;
    v45 = v33;
    v46 = v32;
    v13 = v30;
    v24 = CGRectRoundedForScale(v2 - v7);
    v25 = v34;
    v26 = v35;
    v27 = v36;
    v19 = v42;
    v18 = v44;
  }
  objc_msgSend(v8, "setFrame:", v18, v19, v21, v23, *(_QWORD *)&height, *(_QWORD *)&width);
  v37 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeView);
  if (v37)
    objc_msgSend(v37, "setFrame:", v13, v17, v46, v45);
  return objc_msgSend(v5, "setFrame:", v24, v25, v26, v27);
}

id sub_100351184()
{
  uint64_t v0;
  double v1;
  double v2;
  double *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  char *v10;
  id result;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  char *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  char *v26;
  id v27;
  void *v28;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__transportSubcontainer), "bounds");
  v2 = v1;
  v3 = (double *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm);
  v4 = *(double *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 160);
  v5 = *(double *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 168);
  if (qword_1009CE128 != -1)
    swift_once(&qword_1009CE128, sub_100347F54);
  v6 = *((double *)&xmmword_1009DC780 + 1);
  v7 = v3[35];
  v8 = CGFloatRoundForScale((v4 - *(double *)&xmmword_1009DC780) * 0.5, v7);
  v9 = CGFloatRoundForScale((v5 - v6) * 0.5, v7);
  v10 = *(char **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardButton);
  objc_msgSend(v10, "setHitRectInsets:", v9, v8, v9, v8);
  *(double *)&v10[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidth] = v3[21] + 8.0;
  result = *(id *)&v10[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
  if (!result)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  objc_msgSend(result, "setConstant:");
  objc_msgSend(v10, "invalidateIntrinsicContentSize");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardVibrancyEffectContainerView), "setFrame:", CGRectRoundedForScale(-v8));
  v12 = objc_msgSend(v10, "titleLabel");
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, "setTextAlignment:", 1);

  }
  objc_msgSend(v10, "setContentHorizontalAlignment:", 0);
  objc_msgSend(v10, "setContentVerticalAlignment:", 0);
  v14 = v3[22];
  v15 = v3[23];
  if (qword_1009CE0D0 != -1)
    swift_once(&qword_1009CE0D0, sub_100347E8C);
  v16 = *((double *)&xmmword_1009DC6F0 + 1);
  v17 = v3[35];
  v18 = CGFloatRoundForScale((v14 - *(double *)&xmmword_1009DC6F0) * 0.5, v17);
  v19 = CGFloatRoundForScale((v15 - v16) * 0.5, v17);
  v20 = *(char **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPause);
  objc_msgSend(v20, "setHitRectInsets:", v19, v18, v19, v18);
  *(double *)&v20[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidth] = v3[23] + 8.0;
  result = *(id *)&v20[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
  if (!result)
    goto LABEL_14;
  objc_msgSend(result, "setConstant:");
  objc_msgSend(v20, "invalidateIntrinsicContentSize");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPauseVibrancyEffectContainerView), "setFrame:", CGRectRoundedForScale((v2 - v3[22]) * 0.5));
  v21 = v3[25];
  v22 = *((double *)&xmmword_1009DC780 + 1);
  v23 = v3[35];
  v24 = CGFloatRoundForScale((v3[24] - *(double *)&xmmword_1009DC780) * 0.5, v23);
  v25 = CGFloatRoundForScale((v21 - v22) * 0.5, v23);
  v26 = *(char **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardButton);
  objc_msgSend(v26, "setHitRectInsets:", v25, v24, v25, v24);
  *(double *)&v26[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidth] = v3[25] + 8.0;
  result = *(id *)&v26[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
  if (!result)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  objc_msgSend(result, "setConstant:");
  objc_msgSend(v26, "invalidateIntrinsicContentSize");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardVibrancyEffectContainerView), "setFrame:", CGRectRoundedForScale(v24 + v2 - v3[24]));
  v27 = objc_msgSend(v26, "titleLabel");
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v27, "setTextAlignment:", 1);

  }
  objc_msgSend(v26, "setContentHorizontalAlignment:", 0);
  return objc_msgSend(v26, "setContentVerticalAlignment:", 0);
}

id sub_100351570()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  CGFloat v5;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  double MaxX;
  double v17;
  double v18;
  id result;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  v1 = v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 397))
    v2 = 3.0;
  else
    v2 = 2.0;
  if (qword_1009CDF60 != -1)
    swift_once(&qword_1009CDF60, sub_100347B98);
  v3 = *(double *)&qword_1009DC580;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_bottomToolbarContainer), "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  if (qword_1009CDFD0 != -1)
    swift_once(&qword_1009CDFD0, sub_100347C78);
  v12 = *(double *)&qword_1009DC5F0;
  v20.origin.x = v5;
  v20.origin.y = v7;
  v20.size.width = v9;
  v20.size.height = v11;
  v13 = (CGRectGetWidth(v20) - (v2 * v3 + *(double *)(v1 + 224))) / v2;
  if (v13 >= v12)
    v14 = v12;
  else
    v14 = v13;
  v15 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed);
  objc_msgSend(v15, "contentRectForBounds:", CGRectMakeWithSize(*(double *)(v1 + 208), *(double *)(v1 + 216)));
  objc_msgSend(v15, "titleRectForContentRect:");
  CGRectGetMinX(v21);
  objc_msgSend(v15, "setFrame:", CGRectRoundedForScale(0.0));
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton), "setFrame:", CGRectRoundedForScale(v3 + v14 + 0.0));
  v22.origin.x = v5;
  v22.origin.y = v7;
  v22.size.width = v9;
  v22.size.height = v11;
  MaxX = CGRectGetMaxX(v22);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton), "setFrame:", CGRectRoundedForScale(MaxX - v3));
  if (*(_BYTE *)(v1 + 397))
    v17 = v3 + v14;
  else
    v17 = 0.0;
  v18 = CGRectRoundedForScale(MaxX - v17 - v3);
  result = *(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__routeView);
  if (result)
    return objc_msgSend(result, "setFrame:", v18);
  return result;
}

id sub_1003517FC()
{
  uint64_t v0;
  double *v1;
  _BYTE *v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  CGRect v13;
  CGRect v14;

  v1 = (double *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm);
  v2 = (_BYTE *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm + 397);
  if (*v2)
    v3 = 3.0;
  else
    v3 = 2.0;
  if (qword_1009CDF60 != -1)
    swift_once(&qword_1009CDF60, sub_100347B98);
  v4 = *(double *)&qword_1009DC580;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_bottomToolbarContainer), "bounds");
  v5 = (CGRectGetWidth(v13) - (v3 * v4 + v1[28])) / v3;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed);
  objc_msgSend(v6, "contentRectForBounds:", CGRectMakeWithSize(v1[26], v1[27]));
  objc_msgSend(v6, "titleRectForContentRect:");
  CGRectGetMinX(v14);
  v7 = v4 + v5;
  objc_msgSend(v6, "setFrame:", CGRectRoundedForScale(0.0));
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton), "setFrame:", CGRectRoundedForScale(v4 + v5 + 0.0));
  v8 = -v4;
  if (*v2)
    v8 = v5;
  v9 = v7 + 0.0 + v1[28] + v8;
  v10 = CGRectRoundedForScale(v9);
  v11 = *(void **)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__routeView);
  if (v11)
    objc_msgSend(v11, "setFrame:", v10);
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton), "setFrame:", CGRectRoundedForScale(v7 + v9));
}

void sub_1003519F4(uint64_t a1)
{
  CGFloat v2;
  CGFloat v3;
  CGContext *v4;
  void *v5;
  CGFloat v6;
  CGColor *v7;
  UIImage *v8;
  id v9;
  CGSize v10;
  CGRect v11;

  v9 = objc_msgSend((id)objc_opt_self(UIColor), "bc_nowPlayingVibrantPrimary");
  if (qword_1009CE120 != -1)
    swift_once(&qword_1009CE120, sub_100347F44);
  v2 = *(double *)&qword_1009DC778;
  if (qword_1009CE118 != -1)
    swift_once(&qword_1009CE118, sub_100347F34);
  v3 = *(double *)&qword_1009DC770;
  v10.height = *(double *)&qword_1009DC770 + 0.5;
  v10.width = v2;
  UIGraphicsBeginImageContextWithOptions(v10, 0, 0.0);
  v4 = UIGraphicsGetCurrentContext();
  v5 = v9;
  if (v4)
  {
    v6 = *(double *)&qword_1009DC778;
    v7 = (CGColor *)objc_msgSend(v9, "CGColor");
    CGContextSetFillColorWithColor(v4, v7);

    v11.origin.x = 0.0;
    v11.origin.y = 0.5;
    v11.size.width = v6;
    v11.size.height = v3;
    CGContextFillEllipseInRect(v4, v11);
    v8 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider), "setThumbImage:forState:", v8, 0);

    v5 = v9;
  }

}

double sub_100351B64()
{
  void *v0;
  id v1;
  unint64_t v2;
  double v3;
  double v4;
  uint64_t *v5;
  CGRect v7;
  CGRect v8;
  CGRect v9;

  objc_msgSend(v0, "bounds");
  if (CGRectGetHeight(v7) > 0.0)
  {
    objc_msgSend(v0, "bounds");
    objc_msgSend(v0, "bounds", CGRectGetWidth(v8));
    CGRectGetHeight(v9);
  }
  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v2 = (unint64_t)objc_msgSend(v1, "userInterfaceIdiom");

  objc_msgSend(v0, "bounds");
  if (v2 == 1)
  {
    v4 = v3;
    if (qword_1009CE008 != -1)
      swift_once(&qword_1009CE008, sub_100347CEC);
    v2 = v4 >= *(double *)&qword_1009DC628;
  }
  if ((v2 | 4) == 5)
  {
    if (qword_1009CDFE8 != -1)
      swift_once(&qword_1009CDFE8, sub_100347CAC);
    v5 = &qword_1009DC608;
  }
  else
  {
    if (qword_1009CE068 != -1)
      swift_once(&qword_1009CE068, sub_100347DB8);
    v5 = &qword_1009DC688;
  }
  return *(double *)v5;
}

double sub_100351CC4()
{
  void *v0;
  id v1;
  unint64_t v2;
  double v3;
  double v4;
  uint64_t *v5;
  CGRect v7;
  CGRect v8;
  CGRect v9;

  objc_msgSend(v0, "bounds");
  if (CGRectGetHeight(v7) > 0.0)
  {
    objc_msgSend(v0, "bounds");
    objc_msgSend(v0, "bounds", CGRectGetWidth(v8));
    CGRectGetHeight(v9);
  }
  v1 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v2 = (unint64_t)objc_msgSend(v1, "userInterfaceIdiom");

  objc_msgSend(v0, "bounds");
  if (v2 == 1)
  {
    v4 = v3;
    if (qword_1009CE008 != -1)
      swift_once(&qword_1009CE008, sub_100347CEC);
    v2 = v4 >= *(double *)&qword_1009DC628;
  }
  if ((v2 | 4) == 5)
  {
    if (qword_1009CDFF0 != -1)
      swift_once(&qword_1009CDFF0, sub_100347CBC);
    v5 = &qword_1009DC610;
  }
  else
  {
    if (qword_1009CE070 != -1)
      swift_once(&qword_1009CE070, sub_100347DC8);
    v5 = &qword_1009DC690;
  }
  return *(double *)v5;
}

uint64_t sub_100351ED8(char *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  result = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_delegate]);
  if (result)
  {
    v8 = result;
    swift_unknownObjectRetain_n(a3, 2);
    v9 = a1;
    v10 = objc_opt_self(UIView);
    v11 = swift_dynamicCastObjCClass(a3, v10);
    v12 = (void *)v11;
    if (!v11)
      v11 = swift_unknownObjectRelease(a3);
    a4(v11);
    swift_unknownObjectRelease(a3);

    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_100351F8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t Strong;
  uint64_t v7;
  float v8;

  swift_unknownObjectRetain(a1);
  v3 = objc_opt_self(BKScrubberSlider);
  v4 = swift_dynamicCastObjCClass(a1, v3);
  if (v4)
  {
    v5 = (void *)v4;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_delegate);
    if (Strong)
    {
      v7 = Strong;
      objc_msgSend(v5, "value");
      sub_1002584B0(v8);
      swift_unknownObjectRelease(v7);
    }
  }
  return swift_unknownObjectRelease(a1);
}

void sub_100352078(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v7;

  swift_unknownObjectRetain(a3);
  v7 = a1;
  sub_1003520F4(a3, a4);
  swift_unknownObjectRelease(a3);

}

uint64_t sub_1003520F4(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;

  swift_unknownObjectRetain(a1);
  v5 = objc_opt_self(UIView);
  if (swift_dynamicCastObjCClass(a1, v5)
    && (Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_delegate)) != 0)
  {
    v7 = Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), *a2, 1);
    swift_unknownObjectRelease(a1);
    v8 = v7;
  }
  else
  {
    v8 = a1;
  }
  return swift_unknownObjectRelease(v8);
}

uint64_t sub_1003521A8(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t result;
  uint64_t v8;
  void *v9;
  char *v10;

  result = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_delegate]);
  if (result)
  {
    v8 = result;
    v9 = *(void **)(result + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler);
    swift_unknownObjectRetain(a3);
    v10 = a1;
    objc_msgSend(v9, *a4);
    swift_unknownObjectRelease(a3);

    return swift_unknownObjectRelease(v8);
  }
  return result;
}

void *initializeWithCopy for AudiobookNowPlayingFullscreenTouchView.LayoutMetrics(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x18FuLL);
}

uint64_t getEnumTagSinglePayload for AudiobookNowPlayingFullscreenTouchView.LayoutMetrics(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 399))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 392);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiobookNowPlayingFullscreenTouchView.LayoutMetrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 398) = 0;
    *(_WORD *)(result + 396) = 0;
    *(_DWORD *)(result + 392) = 0;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 399) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 399) = 0;
    if (a2)
      *(_BYTE *)(result + 392) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiobookNowPlayingFullscreenTouchView.LayoutMetrics()
{
  return &type metadata for AudiobookNowPlayingFullscreenTouchView.LayoutMetrics;
}

UIImage *sub_100352364(char a1, void *a2, double a3, double a4)
{
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  UIImage *v13;
  double v14;
  double v15;
  UIImage *v16;

  UIGraphicsBeginImageContextWithOptions(*(CGSize *)&a3, 0, 0.0);
  objc_msgSend(a2, "set");
  v8 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  v9 = v8;
  if ((a1 & 1) != 0)
    v10 = 0.0;
  else
    v10 = a3;
  v11 = a3 + -1.0;
  if ((a1 & 1) != 0)
    v12 = 1.0;
  else
    v12 = a3 + -1.0;
  objc_msgSend(v8, "moveToPoint:", v10, 0.0);
  objc_msgSend(v9, "addLineToPoint:", v12, 0.0);
  objc_msgSend(v9, "addArcWithCenter:radius:startAngle:endAngle:clockwise:", a1 & 1, v12, a4 * 0.5, a4 * 0.5, 4.71238898, 1.57079633);
  objc_msgSend(v9, "addLineToPoint:", v10, a4);
  objc_msgSend(v9, "closePath");
  objc_msgSend(v9, "fill");
  v13 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  if (v13)
  {
    if ((a1 & 1) != 0)
      v14 = v11;
    else
      v14 = 0.0;
    if ((a1 & 1) != 0)
      v15 = 0.0;
    else
      v15 = v11;
    v16 = -[UIImage resizableImageWithCapInsets:](v13, "resizableImageWithCapInsets:", 0.0, v15, 0.0, v14);

  }
  else
  {

    return 0;
  }
  return v16;
}

uint64_t sub_1003524FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100352520()
{
  uint64_t v0;

  sub_1003519F4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100352528()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100352538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D7490;
  if (!qword_1009D7490)
  {
    type metadata accessor for Key(255);
    result = swift_getWitnessTable(&unk_10070F218, v1);
    atomic_store(result, (unint64_t *)&qword_1009D7490);
  }
  return result;
}

void sub_100352588()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *ObjCClassFromMetadata;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;

  v1 = &v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  v48 = type metadata accessor for AudiobookNowPlayingFullscreenTouchView(0);
  v2 = sub_10004CFD4(&qword_1009DC910);
  v3 = String.init<A>(describing:)(&v48, v2);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v3, v4);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playImage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_pauseImage] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_scrubberImpactBehavior] = 0;
  v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadState] = 3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView____lazy_storage___backgroundImageView] = 0;
  v5 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_artworkImageShadowView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_bottomToolbarContainer;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_dismissButton;
  v9 = (void *)objc_opt_self(UIButton);
  *(_QWORD *)&v0[v8] = objc_msgSend(v9, "buttonWithType:", 0);
  v10 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadIndicator;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone((Class)IMRadialProgressButton), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v11 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadSpinner;
  *(_QWORD *)&v0[v11] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  v12 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_downloadButton;
  *(_QWORD *)&v0[v12] = objc_msgSend(v9, "buttonWithType:", 0);
  v13 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_grabberView;
  *(_QWORD *)&v0[v13] = objc_msgSend(objc_allocWithZone((Class)_UIGrabber), "init");
  v14 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_hudTrack;
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone((Class)BKHUDTrack), "init");
  v15 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_loadingSpinner;
  *(_QWORD *)&v0[v15] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  v16 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_overflowButton;
  *(_QWORD *)&v0[v16] = objc_msgSend((id)objc_opt_self(BCMenuConfiguringButton), "buttonWithType:", 0);
  v17 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_played;
  *(_QWORD *)&v0[v17] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v18 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_progressSlider;
  *(_QWORD *)&v0[v18] = objc_msgSend(objc_allocWithZone((Class)BKScrubberSlider), "init");
  v19 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_playbackSpeed;
  *(_QWORD *)&v0[v19] = objc_msgSend(v9, "buttonWithType:", 0);
  v20 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleLabel;
  *(_QWORD *)&v0[v20] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v21 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_primaryTitleMarqueeView;
  *(_QWORD *)&v0[v21] = objc_msgSend(objc_allocWithZone((Class)MPUMarqueeView), "init");
  v22 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleLabel;
  *(_QWORD *)&v0[v22] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v23 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_secondaryTitleMarqueeView;
  *(_QWORD *)&v0[v23] = objc_msgSend(objc_allocWithZone((Class)MPUMarqueeView), "init");
  v24 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_sleepButton;
  v25 = type metadata accessor for SleepButton();
  *(_QWORD *)&v0[v24] = objc_msgSend((id)swift_getObjCClassFromMetadata(v25), "buttonWithType:", 0);
  v26 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlay;
  *(_QWORD *)&v0[v26] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v27 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_titlesContainer;
  *(_QWORD *)&v0[v27] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ConstraintsDisabledView()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v28 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_tocButton;
  *(_QWORD *)&v0[v28] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AudiobookNowPlayingTOCButton()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v29 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_transportContainer;
  *(_QWORD *)&v0[v29] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TransportContainer()), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v30 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_backgroundGradientLayer;
  *(_QWORD *)&v0[v30] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v31 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lowerHalfGradientLayer;
  *(_QWORD *)&v0[v31] = objc_msgSend(objc_allocWithZone((Class)CAGradientLayer), "init");
  v32 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__playPause;
  v33 = type metadata accessor for NowPlayingTransportButton();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v33);
  *(_QWORD *)&v0[v32] = objc_msgSend(ObjCClassFromMetadata, "buttonWithType:", 0);
  v35 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipForwardButton;
  *(_QWORD *)&v0[v35] = objc_msgSend(ObjCClassFromMetadata, "buttonWithType:", 0);
  v36 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__skipBackwardButton;
  *(_QWORD *)&v0[v36] = objc_msgSend(ObjCClassFromMetadata, "buttonWithType:", 0);
  v37 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__toPlayInAudiobook;
  *(_QWORD *)&v0[v37] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v38 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__mainViewContainer;
  *(_QWORD *)&v0[v38] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v39 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__transportSubcontainer;
  *(_QWORD *)&v0[v39] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v40 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeContainer;
  *(_QWORD *)&v0[v40] = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v41 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeMaxImageView;
  *(_QWORD *)&v0[v41] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v42 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeMinImageView;
  *(_QWORD *)&v0[v42] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_buyButton] = 0;
  v43 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__routeView;
  *(_QWORD *)&v0[v43] = objc_msgSend(objc_allocWithZone((Class)AVRoutePickerView), "init");
  v44 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView__volumeView;
  *(_QWORD *)&v0[v44] = objc_msgSend(objc_allocWithZone((Class)MPVolumeView), "init");
  v45 = &v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_lm];
  v45[22] = 0u;
  v45[23] = 0u;
  v45[20] = 0u;
  v45[21] = 0u;
  v45[18] = 0u;
  v45[19] = 0u;
  v45[16] = 0u;
  v45[17] = 0u;
  v45[14] = 0u;
  v45[15] = 0u;
  v45[12] = 0u;
  v45[13] = 0u;
  v45[10] = 0u;
  v45[11] = 0u;
  v45[8] = 0u;
  v45[9] = 0u;
  v45[6] = 0u;
  v45[7] = 0u;
  v45[4] = 0u;
  v45[5] = 0u;
  v45[2] = 0u;
  v45[3] = 0u;
  *v45 = 0u;
  v45[1] = 0u;
  *(_OWORD *)((char *)v45 + 383) = 0u;
  v46 = &v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextLong];
  *v46 = 0;
  v46[1] = 0;
  v47 = &v0[OBJC_IVAR____TtC5Books38AudiobookNowPlayingFullscreenTouchView_toPlayInAudiobookTextShort];
  *v47 = 0;
  v47[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/AudiobookNowPlayingFullscreenTouchView.swift", 50, 2, 358, 0);
  __break(1u);
}

uint64_t sub_100352C68(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  __int128 v7;
  __int128 v8;
  void *v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v20);
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    v9 = (void *)a2[10];
    *(_QWORD *)(v4 + 80) = v9;
    v10 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(v4 + 112) = v10;
    v11 = v10;
    v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
    v13 = v9;
    v12(v4 + 88, (uint64_t)(a2 + 11), v11);
    v14 = *(int *)(a3 + 32);
    v15 = v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = *(int *)(a3 + 36);
    v19 = *(_OWORD *)((char *)a2 + v18 + 24);
    *(_OWORD *)(v4 + v18 + 24) = v19;
    (**(void (***)(void))(v19 - 8))();
  }
  return v4;
}

uint64_t sub_100352D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 40));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 88));
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + *(int *)(a2 + 36)));
}

uint64_t sub_100352E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  v8 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v9;
  v10 = v9;
  v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  v12 = v8;
  v11(a1 + 88, a2 + 88, v10);
  v13 = *(int *)(a3 + 32);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = *(int *)(a3 + 36);
  v18 = *(_OWORD *)(a2 + v17 + 24);
  *(_OWORD *)(a1 + v17 + 24) = v18;
  (**(void (***)(void))(v18 - 8))();
  return a1;
}

_QWORD *sub_100352F10(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  sub_1001EAB00(a1, a2);
  sub_1001EAB00(a1 + 5, a2 + 5);
  v6 = (void *)a1[10];
  v7 = (void *)a2[10];
  a1[10] = v7;
  v8 = v7;

  sub_1001EAB00(a1 + 11, a2 + 11);
  v9 = *(int *)(a3 + 32);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for ContextActionType(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  sub_1001EAB00((_QWORD *)((char *)a1 + *(int *)(a3 + 36)), (_QWORD *)((char *)a2 + *(int *)(a3 + 36)));
  return a1;
}

uint64_t sub_100352FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 88);
  v9 = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v9;
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_OWORD *)(a1 + 88) = v8;
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = *(int *)(a3 + 36);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v17;
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  return a1;
}

uint64_t sub_100353074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 40));
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(void **)(a1 + 80);
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 88));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v9 = *(int *)(a3 + 32);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = *(int *)(a3 + 36);
  v14 = a1 + v13;
  v15 = a2 + v13;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + v13));
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 32) = *(_QWORD *)(v15 + 32);
  return a1;
}

uint64_t sub_100353158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100353164);
}

uint64_t sub_100353164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1003531E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003531EC);
}

uint64_t sub_1003531EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for GetSampleActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DC980;
  if (!qword_1009DC980)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for GetSampleActionItem);
  return result;
}

uint64_t sub_10035329C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_10071CDE0;
  v4[3] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    v4[5] = "(";
    swift_initStructMetadata(a1, 256, 6, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10035331C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t SampleActionItem;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  _QWORD *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;

  v1 = v0;
  SampleActionItem = type metadata accessor for GetSampleActionItem(0);
  __chkstk_darwin(SampleActionItem);
  v4 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ContextActionSource(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - v10;
  sub_10023ADE8(&v40);
  if (!v41)
  {
    sub_100010960((uint64_t)&v40, qword_1009D1448);
    v26 = 0;
    return v26 & 1;
  }
  v39 = v4;
  sub_1001EB834(&v40, &v43);
  v12 = v44;
  v13 = v45;
  sub_10003F198(&v43, v44);
  v14 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v12, v13);
  v15 = *(_QWORD *)(v14 + 16);
  swift_bridgeObjectRelease(v14);
  if (v15 < 2)
    goto LABEL_9;
  v16 = v44;
  v17 = v45;
  sub_10003F198(&v43, v44);
  v18 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v16, v17);
  v19 = v18;
  v20 = *(_QWORD *)(v18 + 16);
  if (!v20)
  {
LABEL_8:
    swift_bridgeObjectRelease(v19);
LABEL_9:
    _s5Books15CurrentPageViewVwxx_0(&v43);
    v26 = 0;
    return v26 & 1;
  }
  v21 = v18 + 32;
  while (1)
  {
    sub_10002E418(v21, (uint64_t)&v40);
    v22 = v41;
    v23 = v42;
    sub_10003F198(&v40, v41);
    v24 = AssetInfo.isPurchased.getter(v22, v23);
    if (v24 == 2)
      break;
    v25 = v24;
    _s5Books15CurrentPageViewVwxx_0(&v40);
    if ((v25 & 1) == 0)
      goto LABEL_12;
    v21 += 40;
    if (!--v20)
      goto LABEL_8;
  }
  _s5Books15CurrentPageViewVwxx_0(&v40);
LABEL_12:
  swift_bridgeObjectRelease(v19);
  v27 = v1[3];
  v28 = v1[4];
  sub_10003F198(v1, v27);
  dispatch thunk of ContextActionDataProtocol.source.getter(v27, v28);
  v29 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
  v29(v8, enum case for ContextActionSource.unifiedProductItem(_:), v5);
  v30 = static ContextActionSource.== infix(_:_:)(v11, v8);
  v31 = *(void (**)(char *, uint64_t))(v6 + 8);
  v31(v8, v5);
  v31(v11, v5);
  v32 = (uint64_t)v1;
  v33 = v39;
  sub_10002CD84(v32, (uint64_t)v39, type metadata accessor for GetSampleActionItem);
  if ((v30 & 1) != 0)
  {
    v26 = 1;
  }
  else
  {
    v34 = v33[3];
    v35 = v39[4];
    sub_10003F198(v39, v34);
    v36 = v34;
    v33 = v39;
    dispatch thunk of ContextActionDataProtocol.source.getter(v36, v35);
    v29(v8, enum case for ContextActionSource.productPage(_:), v5);
    v26 = static ContextActionSource.== infix(_:_:)(v11, v8);
    v31(v8, v5);
    v31(v11, v5);
  }
  sub_10002C8F0((uint64_t)v33, type metadata accessor for GetSampleActionItem);
  _s5Books15CurrentPageViewVwxx_0(&v43);
  return v26 & 1;
}

_QWORD *sub_10035361C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *result;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v1 = v0;
  sub_10023ADE8(&v42);
  if (!v43)
  {
    sub_100010960((uint64_t)&v42, qword_1009D1448);
    return _swiftEmptyArrayStorage;
  }
  sub_1001EB834(&v42, &v44);
  *(_QWORD *)&v42 = _swiftEmptyArrayStorage;
  v2 = _swiftEmptyDictionarySingleton;
  v41 = _swiftEmptyDictionarySingleton;
  v3 = v45;
  v4 = v46;
  sub_10003F198(&v44, v45);
  v5 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v3, v4);
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
LABEL_25:
    swift_bridgeObjectRelease(v5);
    v31 = v45;
    v32 = v46;
    sub_10003F198(&v44, v45);
    v33 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v31, v32);
    v34 = v33;
    v35 = *(_QWORD *)(v33 + 16);
    if (v35)
    {
      v36 = v33 + 32;
      do
      {
        sub_10035390C(v36, v1, &v44, (uint64_t *)&v41, (_QWORD **)&v42);
        v36 += 40;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease(v34);
      v2 = v41;
    }
    else
    {
      swift_bridgeObjectRelease(v33);
    }
    v37 = v42;
    swift_bridgeObjectRelease(v2);
    _s5Books15CurrentPageViewVwxx_0(&v44);
    return (_QWORD *)v37;
  }
  v39 = v5;
  v40 = v0;
  v7 = (_QWORD *)(v5 + 32);
  while (1)
  {
    v8 = v7[3];
    v9 = v7[4];
    sub_10003F198(v7, v8);
    v10 = AssetInfo.editionKind.getter(v8, v9);
    if (!v11)
      goto LABEL_6;
    v12 = v10;
    v13 = v11;
    v14 = _swiftEmptyDictionarySingleton[2];
    if (v14)
    {
      v15 = sub_10004CE80(v10, v11);
      if ((v16 & 1) != 0)
        v14 = *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v15);
      else
        v14 = 0;
    }
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
    v20 = sub_10004CE80(v12, v13);
    v21 = _swiftEmptyDictionarySingleton[2];
    v22 = (v19 & 1) == 0;
    v23 = v21 + v22;
    if (__OFADD__(v21, v22))
      goto LABEL_34;
    v24 = v19;
    if (_swiftEmptyDictionarySingleton[3] >= v23)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v19 & 1) == 0)
          goto LABEL_20;
      }
      else
      {
        sub_1002C0448();
        if ((v24 & 1) == 0)
          goto LABEL_20;
      }
    }
    else
    {
      sub_100025834(v23, isUniquelyReferenced_nonNull_native);
      v25 = sub_10004CE80(v12, v13);
      if ((v24 & 1) != (v26 & 1))
        goto LABEL_36;
      v20 = v25;
      if ((v24 & 1) == 0)
      {
LABEL_20:
        _swiftEmptyDictionarySingleton[(v20 >> 6) + 8] |= 1 << v20;
        v27 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v20);
        *v27 = v12;
        v27[1] = v13;
        *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v20) = v17;
        v28 = _swiftEmptyDictionarySingleton[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_35;
        _swiftEmptyDictionarySingleton[2] = v30;
        swift_bridgeObjectRetain(v13);
        goto LABEL_5;
      }
    }
    *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v20) = v17;
LABEL_5:
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(0x8000000000000000);
LABEL_6:
    v7 += 5;
    if (!--v6)
    {
      v41 = _swiftEmptyDictionarySingleton;
      v5 = v39;
      v1 = v40;
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_10035390C(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t *a4, _QWORD **a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  __n128 v48;
  _BOOL8 v49;
  void *v50;
  id v51;
  id v52;
  char *v53;
  objc_class *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  void *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  id v72;
  id v73;
  char isUniquelyReferenced_nonNull_native;
  void *v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t (*v78)(uint64_t);
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  void *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  id v93;
  id v94;
  char v95;
  void *v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  _QWORD **v104;
  uint64_t SampleActionItem;
  uint64_t v106;
  char *v107;
  _QWORD *v108;
  uint64_t *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  __int128 v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;

  v108 = a3;
  v104 = a5;
  v109 = a4;
  v101 = type metadata accessor for ListenSampleActionItem(0);
  __chkstk_darwin(v101);
  v102 = (uint64_t)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v103 = (char *)&v101 - v9;
  SampleActionItem = type metadata accessor for ReadSampleActionItem(0);
  __chkstk_darwin(SampleActionItem);
  v106 = (uint64_t)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v107 = (char *)&v101 - v12;
  v116 = type metadata accessor for MenuCoverImageProvider(0);
  v112 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v111 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v110 = (char *)&v101 - v15;
  v16 = type metadata accessor for ContextActionSource(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E418(a1, (uint64_t)&v113);
  v20 = objc_allocWithZone((Class)type metadata accessor for ContextActionDataModel.Asset(0));
  v21 = ContextActionDataModel.Asset.init(assetInfo:)(&v113);
  v23 = a2[3];
  v22 = a2[4];
  sub_10003F198(a2, v23);
  v24 = dispatch thunk of ContextActionDataProtocol.sourceView.getter(v23, v22);
  v25 = objc_allocWithZone((Class)type metadata accessor for ContextActionDataModel(0));
  v26 = (void *)ContextActionDataModel.init(asset:sourceView:)(v21, v24);
  v27 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for ContextActionSource.getSampleActionItem(_:), v16);
  v28 = ContextActionSource.key.getter(v27);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v114 = &type metadata for String;
  *(_QWORD *)&v113 = v28;
  *((_QWORD *)&v113 + 1) = v30;
  v31 = a2;
  v32 = (_QWORD *)a1;
  dispatch thunk of ContextActionDataModel.originatingLocation.setter(&v113);
  v33 = v108[3];
  v34 = v108[4];
  sub_10003F198(v108, v33);
  v35 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v33, v34);
  dispatch thunk of ContextActionDataModel.presentationRefID.setter(v35);
  v36 = v31[3];
  v37 = v31[4];
  v108 = v31;
  sub_10003F198(v31, v36);
  v38 = dispatch thunk of ContextActionDataProtocol.shouldReportFigaro.getter(v36, v37);
  dispatch thunk of ContextActionDataModel.shouldReportFigaro.setter(v38 & 1);
  v39 = v32[3];
  v40 = v32[4];
  sub_10003F198(v32, v39);
  v41 = AssetInfo.editionKind.getter(v39, v40);
  if (v42)
    v43 = v42;
  else
    v43 = 0xE000000000000000;
  v44 = *v109;
  if (!*(_QWORD *)(*v109 + 16))
    goto LABEL_9;
  if (!v42)
    v41 = 0;
  v45 = sub_10004CE80(v41, v43);
  if ((v46 & 1) != 0)
  {
    v47 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 8 * v45);
    v48 = swift_bridgeObjectRelease(v43);
    v49 = v47 > 1;
  }
  else
  {
LABEL_9:
    v48 = swift_bridgeObjectRelease(v43);
    v49 = 0;
  }
  dispatch thunk of ContextActionDataModel.actionItemNeedsDifferentiation.setter(v49, v48);
  v50 = (void *)objc_opt_self(BKLibraryManager);
  v51 = v26;
  v52 = objc_msgSend(v50, "defaultManager");
  v53 = v110;
  MenuCoverImageProvider.init()();
  v54 = (objc_class *)type metadata accessor for ContextActionData();
  v55 = objc_allocWithZone(v54);
  v57 = (uint64_t)v111;
  v56 = v112;
  v58 = v116;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v111, v53, v116);
  v59 = v52;
  v60 = sub_1003830F4(v51, (uint64_t)v59, v57, v55);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v58);

  if (v60)
  {
    v61 = v32[3];
    v62 = v32[4];
    sub_10003F198(v32, v61);
    v63 = dispatch thunk of AssetInfo.assetType.getter(v61, v62);
    if ((static AssetType.== infix(_:_:)(v63, 1) & 1) != 0)
    {
      v64 = v107;
      *((_QWORD *)v107 + 3) = v54;
      v64[4] = sub_100008DB0(&qword_1009DDF40, (uint64_t (*)(uint64_t))type metadata accessor for ContextActionData, (uint64_t)&unk_100717224);
      *v64 = v60;
      v65 = v108;
      sub_10002E418((uint64_t)(v108 + 5), (uint64_t)(v64 + 5));
      v66 = (void *)v65[10];
      sub_10002E418((uint64_t)(v65 + 11), (uint64_t)(v64 + 11));
      v67 = (char *)v64 + *(int *)(SampleActionItem + 32);
      v68 = enum case for ContextActionType.readSample(_:);
      v69 = type metadata accessor for ContextActionType(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 104))(v67, v68, v69);
      v64[10] = v66;
      sub_10002CD84((uint64_t)v64, v106, type metadata accessor for ReadSampleActionItem);
      v70 = v104;
      v71 = *v104;
      v72 = v66;
      v73 = v60;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v71);
      *v70 = v71;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v71 = sub_1005B1048(0, v71[2] + 1, 1, v71);
        *v70 = v71;
      }
      v75 = v51;
      v77 = v71[2];
      v76 = v71[3];
      if (v77 >= v76 >> 1)
      {
        v71 = sub_1005B1048((_QWORD *)(v76 > 1), v77 + 1, 1, v71);
        *v70 = v71;
      }
      v114 = (_QWORD *)SampleActionItem;
      v78 = type metadata accessor for ReadSampleActionItem;
      v115 = sub_100008DB0((unint64_t *)&unk_1009DDFE0, type metadata accessor for ReadSampleActionItem, (uint64_t)&unk_100736568);
      v79 = sub_1000257F8(&v113);
      v80 = v106;
      sub_10002CD84(v106, (uint64_t)v79, type metadata accessor for ReadSampleActionItem);
      v71[2] = v77 + 1;
      sub_100022840(&v113, (uint64_t)&v71[5 * v77 + 4]);
      sub_10002C8F0(v80, type metadata accessor for ReadSampleActionItem);

      v81 = (uint64_t)v107;
LABEL_23:
      sub_10002C8F0(v81, v78);
      return;
    }
    v82 = v32[3];
    v83 = v32[4];
    sub_10003F198(v32, v82);
    v84 = dispatch thunk of AssetInfo.assetType.getter(v82, v83);
    if ((static AssetType.== infix(_:_:)(v84, 0) & 1) != 0)
    {
      v85 = v103;
      *((_QWORD *)v103 + 3) = v54;
      v85[4] = sub_100008DB0(&qword_1009DDF40, (uint64_t (*)(uint64_t))type metadata accessor for ContextActionData, (uint64_t)&unk_100717224);
      *v85 = v60;
      v86 = v108;
      sub_10002E418((uint64_t)(v108 + 5), (uint64_t)(v85 + 5));
      v87 = (void *)v86[10];
      sub_10002E418((uint64_t)(v86 + 11), (uint64_t)(v85 + 11));
      v88 = (char *)v85 + *(int *)(v101 + 32);
      v89 = enum case for ContextActionType.audioSample(_:);
      v90 = type metadata accessor for ContextActionType(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 104))(v88, v89, v90);
      v85[10] = v87;
      sub_10002CD84((uint64_t)v85, v102, type metadata accessor for ListenSampleActionItem);
      v91 = v104;
      v92 = *v104;
      v93 = v87;
      v94 = v60;
      v95 = swift_isUniquelyReferenced_nonNull_native(v92);
      *v91 = v92;
      if ((v95 & 1) == 0)
      {
        v92 = sub_1005B1048(0, v92[2] + 1, 1, v92);
        *v91 = v92;
      }
      v96 = v51;
      v98 = v92[2];
      v97 = v92[3];
      if (v98 >= v97 >> 1)
      {
        v92 = sub_1005B1048((_QWORD *)(v97 > 1), v98 + 1, 1, v92);
        *v91 = v92;
      }
      v114 = (_QWORD *)v101;
      v78 = type metadata accessor for ListenSampleActionItem;
      v115 = sub_100008DB0((unint64_t *)&unk_1009CECB0, type metadata accessor for ListenSampleActionItem, (uint64_t)&unk_1007329E8);
      v99 = sub_1000257F8(&v113);
      v100 = v102;
      sub_10002CD84(v102, (uint64_t)v99, type metadata accessor for ListenSampleActionItem);
      v92[2] = v98 + 1;
      sub_100022840(&v113, (uint64_t)&v92[5 * v98 + 4]);
      sub_10002C8F0(v100, type metadata accessor for ListenSampleActionItem);

      v81 = (uint64_t)v103;
      goto LABEL_23;
    }

  }
}

uint64_t sub_1003540AC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t SampleActionItem;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  _BYTE v17[16];
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  _BYTE v21[40];

  v3 = sub_10004CFD4(&qword_1009DC9F8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = v1;
  v18 = v1;
  v7 = sub_10004CFD4(&qword_1009DCA00);
  v8 = sub_10004CFD4(&qword_1009DCA08);
  v9 = sub_100030B34(&qword_1009DCA10, &qword_1009DCA00, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v10 = sub_100355EDC(&qword_1009DCA18, &qword_1009DCA08, (uint64_t)&protocol witness table for AnyView, (uint64_t)&protocol conformance descriptor for <> ForEach<A, B, C>);
  Menu.init(content:label:)(sub_100355DC4, v19, sub_100355DCC, v17, v7, v8, v9, v10);
  KeyPath = swift_getKeyPath(&unk_10071CE98);
  SampleActionItem = type metadata accessor for GetSampleActionItem(0);
  sub_10002E418(v1 + *(int *)(SampleActionItem + 36), (uint64_t)v21);
  v13 = sub_10004CFD4(&qword_1009DCA20);
  a1[3] = v13;
  a1[4] = sub_100355E30();
  v14 = sub_1000257F8(a1);
  v15 = (_QWORD *)((char *)v14 + *(int *)(v13 + 36));
  sub_10000B5E4((uint64_t)v21, (uint64_t)(v15 + 1), &qword_1009DCA48);
  *v15 = KeyPath;
  (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v4 + 16))(v14, v6, v3);
  sub_100010960((uint64_t)v21, &qword_1009DCA48);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10035426C()
{
  uint64_t KeyPath;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = sub_10035361C();
  KeyPath = swift_getKeyPath(&unk_10071CEC8);
  v1 = sub_10004CFD4(&qword_1009DC9E8);
  v2 = sub_100030B34((unint64_t *)&unk_1009DCA60, &qword_1009DC9E8, (uint64_t)&protocol conformance descriptor for [A]);
  return ForEach<>.init(_:id:content:)(&v4, KeyPath, sub_100354364, 0, v1, &type metadata for AnyView, v2, &protocol witness table for AnyHashable, &protocol witness table for AnyView);
}

uint64_t sub_100354320(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_10003F198(a1, v1);
  return dispatch thunk of ContextActionItem.identifier.getter(v1, v2);
}

uint64_t sub_100354364@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v3 = a1[3];
  v4 = a1[4];
  sub_10003F198(a1, v3);
  dispatch thunk of ContextActionItem.menuItemView.getter(v14, v3, v4);
  v5 = v15;
  v6 = v16;
  v7 = sub_10003F198(v14, v15);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v14[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v10, v8);
  *a2 = AnyView.init<A>(_:)(v10, v5, v6);
  return _s5Books15CurrentPageViewVwxx_0(v14);
}

uint64_t sub_10035441C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  _QWORD v5[4];
  _BYTE v6[16];
  uint64_t v7;

  v7 = a1;
  v5[2] = a1;
  v1 = sub_10004CFD4(&qword_1009DCA50);
  v2 = sub_100355EDC(&qword_1009DCA58, &qword_1009DCA50, (uint64_t)&protocol witness table for Image, (uint64_t)&protocol conformance descriptor for <A> A?);
  return Label.init(title:icon:)(sub_100355ECC, v6, sub_100355ED4, v5, &type metadata for Text, v1, &protocol witness table for Text, v2, v3);
}

uint64_t sub_1003544BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t SampleActionItem;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  __n128 v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v11[2];

  SampleActionItem = type metadata accessor for GetSampleActionItem(0);
  v3 = sub_100008DB0((unint64_t *)&unk_1009DE020, type metadata accessor for GetSampleActionItem, (uint64_t)&unk_10071CDF8);
  v11[0] = ContextActionItem.title.getter(SampleActionItem, v3);
  v11[1] = v4;
  v5 = sub_1001F2108();
  result = Text.init<A>(_:)(v11, &type metadata for String, v5, v6);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v9 & 1;
  *(_QWORD *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_10035454C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t SampleActionItem;
  uint64_t v3;
  uint64_t result;

  SampleActionItem = type metadata accessor for GetSampleActionItem(0);
  v3 = sub_100008DB0((unint64_t *)&unk_1009DE020, type metadata accessor for GetSampleActionItem, (uint64_t)&unk_10071CDF8);
  result = ContextActionItem.image.getter(SampleActionItem, v3);
  if (result)
    result = Image.init(uiImage:)();
  *a1 = result;
  return result;
}

uint64_t sub_1003545B4()
{
  return EnvironmentValues.contextActionIconProvider.getter();
}

uint64_t sub_1003545D4(uint64_t a1)
{
  _BYTE v2[40];

  sub_10000B5E4(a1, (uint64_t)v2, &qword_1009DCA48);
  return EnvironmentValues.contextActionIconProvider.setter(v2);
}

uint64_t sub_100354610()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t SampleActionItem;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[3] = v0;
  SampleActionItem = type metadata accessor for GetSampleActionItem(0);
  v1[4] = SampleActionItem;
  v1[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(SampleActionItem - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for MainActor(0);
  v1[6] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v1[7] = v4;
  v1[8] = v5;
  return swift_task_switch(sub_1003546A0, v4, v5);
}

uint64_t sub_1003546A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = sub_10035331C();
  sub_10002CD84(v2, v1, type metadata accessor for GetSampleActionItem);
  if ((v3 & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 40);
    v5 = sub_10035361C();
    *(_QWORD *)(v0 + 16) = v5;
    v6 = sub_10004CFD4(&qword_1009DC9E8);
    v7 = sub_100030B34(&qword_1009DC9F0, &qword_1009DC9E8, (uint64_t)&protocol conformance descriptor for [A]);
    v8 = Collection.isNotEmpty.getter(v6, v7);
    swift_bridgeObjectRelease(v5);
    sub_10002C8F0(v4, type metadata accessor for GetSampleActionItem);
    if ((v8 & 1) != 0)
    {
      v9 = (_QWORD *)(*(_QWORD *)(v0 + 24) + *(int *)(*(_QWORD *)(v0 + 32) + 36));
      v10 = v9[3];
      v11 = v9[4];
      sub_10003F198(v9, v10);
      v12 = sub_10035361C();
      *(_QWORD *)(v0 + 72) = v12;
      v13 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of ContextActionIconProviding.coverImages(actionItems:)[1]);
      *(_QWORD *)(v0 + 80) = v13;
      *v13 = v0;
      v13[1] = sub_100354810;
      return dispatch thunk of ContextActionIconProviding.coverImages(actionItems:)(v12, v10, v11);
    }
    v15 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 48);
    sub_10002C8F0(*(_QWORD *)(v0 + 40), type metadata accessor for GetSampleActionItem);
  }
  swift_release(v15);
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100354810(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 72);
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = a1;
  swift_task_dealloc(v3);
  swift_bridgeObjectRelease(v4);
  return swift_task_switch(sub_100354870, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_100354870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  objc_class *v7;
  char v8;
  _QWORD *v9;
  UIMenuElementSize v10;
  UIMenuElementSize preferredElementSize;
  Swift::String v12;
  Class isa;
  Swift::OpaquePointer v15;
  UIImage_optional v16;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v3 = sub_100008DB0((unint64_t *)&unk_1009DE020, type metadata accessor for GetSampleActionItem, (uint64_t)&unk_10071CDF8);
  v4 = ContextActionItem.title.getter(v2, v3);
  v6 = v5;
  v7 = (objc_class *)ContextActionItem.image.getter(v2, v3);
  v8 = ContextActionType.subMenuIdentifier.getter();
  v9 = sub_10035361C();
  swift_bridgeObjectRetain(v1);
  sub_100355C7C((uint64_t)v9, v1);
  preferredElementSize = v10;
  swift_bridgeObjectRelease(v9);
  swift_bridgeObjectRelease_n(v1, 2);
  v12._countAndFlagsBits = v4;
  v12._object = v6;
  v16.value.super.isa = v7;
  v16.is_nil = v8;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v12, (Swift::String_optional)0, v16, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v15).super.super.isa;
  swift_task_dealloc(*(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(Class))(v0 + 8))(isa);
}

uint64_t sub_1003549B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  id v32;
  NSString v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;

  v6 = a1[3];
  v7 = a1[4];
  sub_10003F198(a1, v6);
  result = ContextActionItem.uiAction.getter(v6, v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = a1[3];
    v11 = a1[4];
    sub_10003F198(a1, v10);
    dispatch thunk of ContextActionItem.data.getter(v45, v10, v11);
    v12 = v46;
    v13 = v47;
    sub_10003F198(v45, v46);
    v14 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v12, v13);
    v15 = v14;
    if (*(_QWORD *)(v14 + 16))
    {
      sub_10002E418(v14 + 32, (uint64_t)&v48);
    }
    else
    {
      v50 = 0;
      v48 = 0u;
      v49 = 0u;
    }
    swift_bridgeObjectRelease(v15);
    v16 = *((_QWORD *)&v49 + 1);
    if (*((_QWORD *)&v49 + 1))
    {
      v17 = v50;
      sub_10003F198(&v48, *((uint64_t *)&v49 + 1));
      v18 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v16, v17);
      v20 = v19;
      _s5Books15CurrentPageViewVwxx_0(&v48);
      _s5Books15CurrentPageViewVwxx_0(v45);
      v21 = objc_msgSend(v9, "title");
      v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v24 = v23;

      v25 = objc_msgSend(v9, "subtitle");
      if (v25)
      {
        v26 = v25;
        v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
        v43 = v28;
        v44 = v27;

      }
      else
      {
        v43 = 0;
        v44 = 0;
      }
      v29 = *(_QWORD *)(a2 + 16);
      v51 = v22;
      if (v29)
      {
        swift_bridgeObjectRetain(v20);
        v30 = sub_10004CE80(v18, v20);
        if ((v31 & 1) != 0)
        {
          v42 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v30);
          v32 = v42;
        }
        else
        {
          v42 = 0;
        }
        swift_bridgeObjectRelease(v20);
      }
      else
      {
        v42 = 0;
      }
      v33 = String._bridgeToObjectiveC()();
      v34 = objc_msgSend(v9, "discoverabilityTitle", swift_bridgeObjectRelease(v20).n128_f64[0]);
      if (v34)
      {
        v35 = v34;
        v36 = v24;
        v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
        v39 = v38;

      }
      else
      {
        v36 = v24;
        v37 = 0;
        v39 = 0;
      }
      sub_100009E04(0, &qword_1009E6120, UIAction_ptr);
      v40 = objc_msgSend(v9, "attributes");
      v41 = swift_allocObject(&unk_1008FEF10, 24, 7);
      *(_QWORD *)(v41 + 16) = v9;
      result = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v51, v36, v44, v43, v42, 0, v33, v37, v39, v40, 0, sub_100355DAC, v41);
    }
    else
    {

      _s5Books15CurrentPageViewVwxx_0(v45);
      sub_100010960((uint64_t)&v48, qword_1009D4378);
      result = 0;
    }
  }
  *a3 = result;
  return result;
}

uint64_t sub_100354CB0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009DC9E4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1001EB614;
  return sub_100354610();
}

uint64_t sub_100354CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 16) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100354D5C, v2, v3);
}

uint64_t sub_100354D5C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100354D8C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  ValueMetadata *v17;
  unint64_t v18;

  v12 = a6 + *(int *)(a5 + 32);
  v13 = enum case for ContextActionType.getSample(_:);
  v14 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  sub_10002E418((uint64_t)a1, a6);
  sub_10002E418((uint64_t)a2, a6 + 40);
  *(_QWORD *)(a6 + 80) = a3;
  sub_10002E418((uint64_t)a4, a6 + 88);
  v17 = &type metadata for GetSampleActionItemIconProvider;
  v18 = sub_100354E74();
  _s5Books15CurrentPageViewVwxx_0(a4);
  _s5Books15CurrentPageViewVwxx_0(a2);
  _s5Books15CurrentPageViewVwxx_0(a1);
  return sub_100022840(&v16, a6 + *(int *)(a5 + 36));
}

unint64_t sub_100354E74()
{
  unint64_t result;

  result = qword_1009DC9D8;
  if (!qword_1009DC9D8)
  {
    result = swift_getWitnessTable(&unk_10071CF10, &type metadata for GetSampleActionItemIconProvider);
    atomic_store(result, &qword_1009DC9D8);
  }
  return result;
}

uint64_t sub_100354EB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  double v24;
  uint64_t v25;
  uint64_t v27;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v5 = type metadata accessor for ContentKind(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v29[-1] - v10;
  v12 = a1[3];
  v13 = a1[4];
  sub_10003F198(a1, v12);
  dispatch thunk of ContextActionItem.data.getter(v29, v12, v13);
  v14 = v30;
  v15 = v31;
  sub_10003F198(v29, v30);
  v16 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v14, v15);
  v17 = v16;
  if (*(_QWORD *)(v16 + 16))
  {
    sub_10002E418(v16 + 32, (uint64_t)&v32);
  }
  else
  {
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
  }
  swift_bridgeObjectRelease(v17);
  v18 = *((_QWORD *)&v33 + 1);
  if (!*((_QWORD *)&v33 + 1))
  {
    _s5Books15CurrentPageViewVwxx_0(v29);
    sub_100010960((uint64_t)&v32, qword_1009D4378);
    v35 = 0u;
    v36 = 0u;
    v37 = 0;
    goto LABEL_11;
  }
  v19 = v34;
  sub_10003F198(&v32, *((uint64_t *)&v33 + 1));
  dispatch thunk of ContextAssetInfoProtocol.toFoundationAssetInfo()(&v35, v18, v19);
  _s5Books15CurrentPageViewVwxx_0(&v32);
  _s5Books15CurrentPageViewVwxx_0(v29);
  if (!*((_QWORD *)&v36 + 1))
  {
LABEL_11:
    sub_100010960((uint64_t)&v35, &qword_1009EC950);
    v27 = type metadata accessor for FlatCoverView(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a2, 1, 1, v27);
  }
  sub_100022840(&v35, (uint64_t)v38);
  v20 = v39;
  v21 = v40;
  sub_10003F198(v38, v39);
  dispatch thunk of AssetInfo.contentKind.getter(v20, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for ContentKind.audiobook(_:), v5);
  v22 = static ContentKind.== infix(_:_:)(v11, v8);
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v23(v8, v5);
  v23(v11, v5);
  if ((v22 & 1) != 0)
    v24 = 26.0;
  else
    v24 = 40.0;
  sub_10002E418((uint64_t)v38, (uint64_t)&v35);
  FlatCoverView.init(assetInfo:intrinsicSize:cornerRadius:)(&v35, 26.0, v24, 2.5);
  v25 = type metadata accessor for FlatCoverView(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a2, 0, 1, v25);
  return _s5Books15CurrentPageViewVwxx_0(v38);
}

uint64_t sub_10035514C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[34] = a2;
  v3[35] = a3;
  v3[33] = a1;
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D3150) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[36] = swift_task_alloc(v4);
  v3[37] = swift_task_alloc(v4);
  v5 = sub_10004CFD4(&qword_1009DCA90);
  v3[38] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[39] = v6;
  v3[40] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1003551E8, 0, 0);
}

uint64_t sub_1003551E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjectType;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  __int128 *v46;
  uint64_t v47;

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (_QWORD *)(v0 + 16);
    v4 = (_QWORD *)(v0 + 56);
    v5 = v0 + 96;
    v46 = (__int128 *)(v0 + 136);
    v6 = (_QWORD *)(v1 + 32);
    swift_bridgeObjectRetain(v1);
    do
    {
      v7 = v6[3];
      v8 = v6[4];
      sub_10003F198(v6, v7);
      dispatch thunk of ContextActionItem.data.getter(v4, v7, v8);
      v9 = *(_QWORD *)(v0 + 80);
      v10 = *(_QWORD *)(v0 + 88);
      sub_10003F198(v4, v9);
      v11 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v9, v10);
      v12 = v11;
      if (*(_QWORD *)(v11 + 16))
      {
        sub_10002E418(v11 + 32, v5);
      }
      else
      {
        *(_QWORD *)(v5 + 32) = 0;
        *(_OWORD *)v5 = 0u;
        *(_OWORD *)(v5 + 16) = 0u;
      }
      swift_bridgeObjectRelease(v12);
      if (*(_QWORD *)(v0 + 120))
      {
        v47 = v2;
        v13 = *(_QWORD *)(v0 + 288);
        v14 = *(_QWORD *)(v0 + 296);
        sub_100022840((__int128 *)v5, (uint64_t)v3);
        _s5Books15CurrentPageViewVwxx_0(v4);
        v15 = *(_QWORD *)(v0 + 40);
        v16 = *(_QWORD *)(v0 + 48);
        sub_10003F198(v3, v15);
        v17 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v15, v16);
        if ((static ContextActionAssetType.== infix(_:_:)(v17, 3) & 1) != 0)
          v18 = 26.0;
        else
          v18 = 40.0;
        v19 = type metadata accessor for TaskPriority(0);
        v20 = *(_QWORD *)(v19 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v14, 1, 1, v19);
        sub_10002E418((uint64_t)v3, (uint64_t)v46);
        v21 = swift_allocObject(&unk_1008FEF58, 88, 7);
        *(_QWORD *)(v21 + 16) = 0;
        *(_QWORD *)(v21 + 24) = 0;
        sub_100022840(v46, v21 + 32);
        *(_QWORD *)(v21 + 72) = 0x403A000000000000;
        *(double *)(v21 + 80) = v18;
        v22 = *(_QWORD *)(v21 + 16);
        v23 = *(_QWORD *)(v21 + 24);
        v24 = (_QWORD *)swift_allocObject(&unk_1008FEF80, 48, 7);
        v24[2] = v22;
        v24[3] = v23;
        v24[4] = &unk_1009DCAA0;
        v24[5] = v21;
        sub_10000B5E4(v14, v13, &qword_1009D3150);
        v25 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19);
        v26 = swift_unknownObjectRetain(v22);
        v27 = *(_QWORD *)(v0 + 288);
        if (v25 == 1)
        {
          sub_100010960(*(_QWORD *)(v0 + 288), &qword_1009D3150);
          v28 = 0;
        }
        else
        {
          v29 = TaskPriority.rawValue.getter(v26);
          (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v27, v19);
          v28 = v29;
        }
        v2 = v47;
        v3 = (_QWORD *)(v0 + 16);
        v30 = v24[2];
        if (v30)
        {
          v31 = v24[3];
          ObjectType = swift_getObjectType();
          swift_unknownObjectRetain(v30);
          v33 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v31);
          v35 = v34;
          swift_unknownObjectRelease(v30);
        }
        else
        {
          v33 = 0;
          v35 = 0;
        }
        v36 = **(_QWORD **)(v0 + 272);
        v37 = swift_allocObject(&unk_1008FEFA8, 32, 7);
        *(_QWORD *)(v37 + 16) = &unk_1009DCAB0;
        *(_QWORD *)(v37 + 24) = v24;
        v38 = sub_10004CFD4(&qword_1009DCA70);
        v39 = v35 | v33;
        if (v35 | v33)
        {
          v39 = v0 + 176;
          *(_QWORD *)(v0 + 176) = 0;
          *(_QWORD *)(v0 + 184) = 0;
          *(_QWORD *)(v0 + 192) = v33;
          *(_QWORD *)(v0 + 200) = v35;
        }
        v4 = (_QWORD *)(v0 + 56);
        v40 = *(_QWORD *)(v0 + 296);
        *(_QWORD *)(v0 + 208) = 1;
        *(_QWORD *)(v0 + 216) = v39;
        *(_QWORD *)(v0 + 224) = v36;
        v41 = swift_task_create(v28 | 0x3100, v0 + 208, v38, &unk_1009DCAC0, v37);
        swift_release(v41);
        sub_100010960(v40, &qword_1009D3150);
        _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
        v5 = v0 + 96;
      }
      else
      {
        sub_100010960(v5, qword_1009D4378);
        _s5Books15CurrentPageViewVwxx_0(v4);
      }
      v6 += 5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 280));
  }
  v42 = **(_QWORD **)(v0 + 272);
  v43 = sub_10004CFD4(&qword_1009DCA70);
  TaskGroup.makeAsyncIterator()(v42, v43);
  *(_QWORD *)(v0 + 336) = _swiftEmptyDictionarySingleton;
  v44 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
  *(_QWORD *)(v0 + 328) = v44;
  *v44 = v0;
  v44[1] = sub_1003555EC;
  return TaskGroup.Iterator.next(isolation:)(v0 + 232, 0, 0, *(_QWORD *)(v0 + 304));
}

uint64_t sub_1003555EC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 328));
  return swift_task_switch(sub_100355640, 0, 0);
}

unint64_t sub_100355640()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t result;
  char v12;
  uint64_t v13;
  _BOOL8 v14;
  BOOL v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v3 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  if (!v2)
  {
    v18 = *(_QWORD *)(v0 + 336);
    v19 = *(_QWORD *)(v0 + 320);
    v20 = *(_QWORD *)(v0 + 296);
    v21 = *(_QWORD *)(v0 + 288);
    v22 = *(_QWORD **)(v0 + 264);
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 312) + 8))(v19, *(_QWORD *)(v0 + 304));
    *v22 = v18;
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    swift_task_dealloc(v21);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(void **)(v0 + 248);
  if (!v4)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 240));
LABEL_17:
    v30 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 328) = v30;
    *v30 = v0;
    v30[1] = sub_1003555EC;
    return TaskGroup.Iterator.next(isolation:)(v0 + 232, 0, 0, *(_QWORD *)(v0 + 304));
  }
  v5 = *(_QWORD **)(v0 + 336);
  v6 = v4;
  swift_bridgeObjectRetain(v2);
  v8 = mainScreenScaleFactor(v7);
  v9 = UIImage.cornerRadius(_:)(v8 * 2.5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
  *(_QWORD *)(v0 + 256) = v5;
  result = sub_10004CE80(v3, v2);
  v13 = v5[2];
  v14 = (v12 & 1) == 0;
  v15 = __OFADD__(v13, v14);
  v16 = v13 + v14;
  if (v15)
  {
    __break(1u);
    goto LABEL_13;
  }
  v1 = v12;
  v5 = (_QWORD *)(v0 + 256);
  if (*(_QWORD *)(*(_QWORD *)(v0 + 336) + 24) >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_10;
LABEL_13:
    v26 = result;
    sub_1002C07F8();
    result = v26;
    v23 = (_QWORD *)*v5;
    if ((v1 & 1) != 0)
      goto LABEL_11;
    goto LABEL_14;
  }
  sub_10037B7EC(v16, isUniquelyReferenced_nonNull_native);
  result = sub_10004CE80(v3, v2);
  if ((v1 & 1) != (v17 & 1))
    return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
LABEL_10:
  v23 = (_QWORD *)*v5;
  if ((v1 & 1) != 0)
  {
LABEL_11:
    v24 = v23[7];
    v25 = 8 * result;

    *(_QWORD *)(v24 + v25) = v9;
LABEL_16:
    swift_bridgeObjectRelease(0x8000000000000000);
    swift_bridgeObjectRelease_n(v2, 2);

    *(_QWORD *)(v0 + 336) = v23;
    goto LABEL_17;
  }
LABEL_14:
  v23[(result >> 6) + 8] |= 1 << result;
  v27 = (uint64_t *)(v23[6] + 16 * result);
  *v27 = v3;
  v27[1] = v2;
  *(_QWORD *)(v23[7] + 8 * result) = v9;
  v28 = v23[2];
  v15 = __OFADD__(v28, 1);
  v29 = v28 + 1;
  if (!v15)
  {
    v23[2] = v29;
    swift_bridgeObjectRetain(v2);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003558BC(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(double *)(v5 + 24) = a1;
  *(double *)(v5 + 32) = a2;
  *(_QWORD *)(v5 + 16) = a5;
  return swift_task_switch(sub_1003558D8, 0, 0);
}

uint64_t sub_1003558D8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[3];
  v3 = v1[4];
  sub_10003F198(v1, v2);
  *(_QWORD *)(v0 + 40) = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v2, v3);
  *(_QWORD *)(v0 + 48) = v4;
  v5 = v1[3];
  v6 = v1[4];
  sub_10003F198(v1, v5);
  v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of ContextAssetInfoProtocol.rawCoverImage(size:)[1]);
  *(_QWORD *)(v0 + 56) = v7;
  *v7 = v0;
  v7[1] = sub_100355970;
  return dispatch thunk of ContextAssetInfoProtocol.rawCoverImage(size:)(v5, v6, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_100355970(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v5;

  v3 = *v1;
  v5 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 56));
  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(v5 + 8))(*(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), a1);
}

uint64_t sub_1003559C0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  *(_QWORD *)(v4 + 16) = a1;
  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc(a4[1]);
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_100355A18;
  return v7();
}

uint64_t sub_100355A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v7;
  uint64_t v9;

  v7 = *(_QWORD **)(*v3 + 16);
  v9 = *v3;
  swift_task_dealloc(*(_QWORD *)(*v3 + 24));
  *v7 = a1;
  v7[1] = a2;
  v7[2] = a3;
  return (*(uint64_t (**)(void))(v9 + 8))();
}

uint64_t sub_100355A80(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_task_switch(sub_100355A98, 0, 0);
}

uint64_t sub_100355A98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[3];
  v2 = sub_10004CFD4(&qword_1009DCA70);
  v3 = sub_10004CFD4(&qword_1009DCA78);
  v4 = swift_task_alloc(32);
  v0[4] = v4;
  *(_QWORD *)(v4 + 16) = v1;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[5] = v5;
  *v5 = v0;
  v5[1] = sub_100355B58;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 2, v2, v3, 0, 0, &unk_1009DCA88, v4, v2);
}

uint64_t sub_100355B58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 40));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100355BB4, 0, 0);
}

uint64_t sub_100355BB4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100355BBC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 40) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 48) = v3;
  *v3 = v2;
  v3[1] = sub_100355C24;
  return v5(v2 + 16);
}

uint64_t sub_100355C24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 40);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  v3 = *(_QWORD *)(v1 + 32);
  *(_OWORD *)v2 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(v2 + 16) = v3;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

void sub_100355C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v13 = (unint64_t)_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = (_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain(a1);
    do
    {
      v8 = sub_1003549B4(v6, a2, &v12);
      if (v2)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(v13);
        return;
      }
      v9 = v12;
      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v11 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v10 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v11 >= v10 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v9);
        specialized Array._endMutation()(v7);
      }
      v6 += 5;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
  }
}

uint64_t sub_100355D88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100355DAC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "performWithSender:target:", 0, 0);
}

uint64_t sub_100355DC4()
{
  return sub_10035426C();
}

uint64_t sub_100355DCC()
{
  uint64_t v0;

  return sub_10035441C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100355DD4()
{
  return EnvironmentValues.contextActionIconProvider.getter();
}

uint64_t sub_100355DF4(uint64_t a1)
{
  _BYTE v2[40];

  sub_10000B5E4(a1, (uint64_t)v2, &qword_1009DCA48);
  return EnvironmentValues.contextActionIconProvider.setter(v2);
}

unint64_t sub_100355E30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DCA28;
  if (!qword_1009DCA28)
  {
    v1 = sub_100030B74(&qword_1009DCA20);
    sub_100030B34(&qword_1009DCA30, &qword_1009DC9F8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    sub_100030B34(&qword_1009DCA38, &qword_1009DCA40, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DCA28);
  }
  return result;
}

uint64_t sub_100355ECC@<X0>(uint64_t a1@<X8>)
{
  return sub_1003544BC(a1);
}

uint64_t sub_100355ED4@<X0>(uint64_t *a1@<X8>)
{
  return sub_10035454C(a1);
}

uint64_t sub_100355EDC(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100030B74(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100355F38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  sub_10003F198(a1, v1);
  return dispatch thunk of ContextActionItem.identifier.getter(v1, v2);
}

ValueMetadata *type metadata accessor for GetSampleActionItemIconProvider()
{
  return &type metadata for GetSampleActionItemIconProvider;
}

uint64_t sub_100355F8C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086D5F4, 1);
}

uint64_t sub_100355F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1009DCA84);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000AE34;
  return sub_10035514C(a1, a2, v6);
}

uint64_t sub_100356004()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100356030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = (_QWORD *)swift_task_alloc(dword_1009DCA9C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1003560A0;
  v4[3] = v2;
  v4[4] = v3;
  v4[2] = v0 + 32;
  return swift_task_switch(sub_1003558D8, 0, 0);
}

uint64_t sub_1003560A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  v8 = *v3;
  swift_task_dealloc(*(_QWORD *)(*v3 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3);
}

uint64_t sub_100356108()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100356134(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009DCAAC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1009DCAA8 + dword_1009DCAA8))(a1, v4, v5, v6);
}

uint64_t sub_1003561B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003561DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009DCABC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AE34;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1009DCAB8 + dword_1009DCAB8))(a1, v4);
}

unint64_t sub_100356250()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DCAC8;
  if (!qword_1009DCAC8)
  {
    v1 = sub_100030B74(&qword_1009DCAD0);
    sub_100008DB0(&qword_1009DCAD8, (uint64_t (*)(uint64_t))&type metadata accessor for FlatCoverView, (uint64_t)&protocol conformance descriptor for FlatCoverView);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1009DCAC8);
  }
  return result;
}

uint64_t sub_1003562CC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for ShortcutTileColor(0);
  sub_10001BFD8(v0, qword_100A1E700);
  v1 = sub_100048F64(v0, (uint64_t)qword_100A1E700);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, enum case for ShortcutTileColor.tangerine(_:), v0);
}

uint64_t sub_100356328@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CE168 != -1)
    swift_once(&qword_1009CE168, sub_1003562CC);
  v2 = type metadata accessor for ShortcutTileColor(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1E700);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

ValueMetadata *type metadata accessor for BooksAppShortcutsProvider()
{
  return &type metadata for BooksAppShortcutsProvider;
}

uint64_t sub_1003563A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  Swift::String v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  void (*v74)(char *, uint64_t);
  Swift::String v75;
  void (*v76)(_QWORD);
  Swift::String v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  Swift::String v81;
  char *v82;
  Swift::String v83;
  void (*v84)(char *);
  char *v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  Swift::String v88;
  char *v89;
  Swift::String v90;
  Swift::String v91;
  char *v92;
  Swift::String v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  Swift::String v96;
  char *v97;
  Swift::String v98;
  void (*v99)(char *, uint64_t);
  Swift::String v100;
  char *v101;
  Swift::String v102;
  uint64_t v103;
  Swift::String v104;
  char *v105;
  Swift::String v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *);
  Swift::String v111;
  char *v112;
  Swift::String v113;
  void (*v114)(char *, uint64_t);
  Swift::String v115;
  char *v116;
  Swift::String v117;
  uint64_t v118;
  Swift::String v119;
  char *v120;
  Swift::String v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t, uint64_t);
  Swift::String v126;
  char *v127;
  Swift::String v128;
  Swift::String v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  Swift::String v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  void (*v167)(char *, uint64_t, uint64_t);
  void (*v168)(char *, uint64_t);
  Swift::String v169;
  uint64_t v170;
  char *v171;
  Swift::String v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t);
  Swift::String v177;
  char *v178;
  Swift::String v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(char *, uint64_t, uint64_t);
  void (*v185)(char *, uint64_t);
  Swift::String v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  Swift::String v190;
  uint64_t v191;
  Swift::String v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  Swift::String v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(char *, uint64_t);
  Swift::String v200;
  char *v201;
  Swift::String v202;
  char *v203;
  char *v204;
  uint64_t v205;
  void (*v206)(char *, uint64_t, uint64_t);
  Swift::String v207;
  uint64_t v208;
  char *v209;
  Swift::String v210;
  uint64_t v211;
  void (*v212)(char *, uint64_t);
  Swift::String v213;
  uint64_t v214;
  char *v215;
  Swift::String v216;
  void (*v217)(char *, uint64_t);
  Swift::String v218;
  uint64_t v219;
  char *v220;
  Swift::String v221;
  uint64_t v222;
  Swift::String v223;
  char *v224;
  Swift::String v225;
  void (*v226)(char *);
  void (*v227)(char *, uint64_t);
  Swift::String v228;
  char *v229;
  Swift::String v230;
  uint64_t v231;
  Swift::String v232;
  char *v233;
  Swift::String v234;
  Swift::String v235;
  char *v236;
  uint64_t v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  unint64_t v255;
  void (*v256)(_QWORD);
  char *v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  char *v276;
  unint64_t v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  unint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  void (*v293)(char *, uint64_t);
  unsigned int v294;
  void (*v295)(char *);
  _QWORD v296[3];
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  char v302;
  _BYTE v303[96];

  v263 = sub_10004CFD4(&qword_1009DCAE0);
  __chkstk_darwin(v263);
  v273 = (char *)&v247 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v272 = (char *)&v247 - v2;
  __chkstk_darwin(v3);
  v271 = (char *)&v247 - v4;
  __chkstk_darwin(v5);
  v270 = (char *)&v247 - v6;
  __chkstk_darwin(v7);
  v269 = (char *)&v247 - v8;
  __chkstk_darwin(v9);
  v268 = (char *)&v247 - v10;
  __chkstk_darwin(v11);
  v267 = (char *)&v247 - v12;
  __chkstk_darwin(v13);
  v266 = (char *)&v247 - v14;
  __chkstk_darwin(v15);
  v265 = (char *)&v247 - v16;
  __chkstk_darwin(v17);
  v264 = (char *)&v247 - v18;
  __chkstk_darwin(v19);
  v262 = (char *)&v247 - v20;
  __chkstk_darwin(v21);
  v261 = (char *)&v247 - v22;
  v284 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v285 = *(_QWORD *)(v284 - 8);
  __chkstk_darwin(v284);
  v282 = (char *)&v247 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for Locale(0);
  __chkstk_darwin(v24);
  v281 = (char *)&v247 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v26);
  v279 = (char *)&v247 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for LocalizedStringResource(0);
  v29 = __chkstk_darwin(v28);
  v280 = (char *)&v247 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v292 = type metadata accessor for AppShortcutPhraseToken(0, v29);
  v293 = *(void (**)(char *, uint64_t))(v292 - 8);
  __chkstk_darwin(v292);
  v32 = (char *)&v247 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = sub_10004CFD4(&qword_1009DCAE8);
  __chkstk_darwin(v249);
  v275 = (char *)&v247 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v257 = (char *)&v247 - v35;
  __chkstk_darwin(v36);
  v254 = (char *)&v247 - v37;
  __chkstk_darwin(v38);
  v259 = (char *)&v247 - v39;
  __chkstk_darwin(v40);
  v253 = (char *)&v247 - v41;
  __chkstk_darwin(v42);
  v252 = (char *)&v247 - v43;
  __chkstk_darwin(v44);
  v251 = (char *)&v247 - v45;
  __chkstk_darwin(v46);
  v274 = (char *)&v247 - v47;
  __chkstk_darwin(v48);
  v250 = (char *)&v247 - v49;
  __chkstk_darwin(v50);
  v291 = (char *)&v247 - v51;
  __chkstk_darwin(v52);
  v256 = (void (*)(_QWORD))((char *)&v247 - v53);
  v55 = __chkstk_darwin(v54);
  v57 = (char *)&v247 - v56;
  v283 = type metadata accessor for AppShortcut(0, v55);
  v260 = *(_QWORD *)(v283 - 8);
  __chkstk_darwin(v283);
  v278 = (char *)&v247 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v303, 0, sizeof(v303));
  *(_QWORD *)&v297 = sub_1001FB3C8(0, (uint64_t)v303);
  *((_QWORD *)&v297 + 1) = v59;
  *(_QWORD *)&v298 = v60;
  v61 = sub_10004CFD4(&qword_1009DCAF0);
  v62 = *(_QWORD *)(sub_10004CFD4(&qword_1009DCAF8) - 8);
  v63 = *(_QWORD *)(v62 + 72);
  v64 = *(unsigned __int8 *)(v62 + 80);
  v65 = (v64 + 32) & ~v64;
  v66 = swift_allocObject(v61, v65 + 98 * v63, v64 | 7);
  v258 = v66;
  *(_OWORD *)(v66 + 16) = xmmword_10071CF50;
  v67 = v66 + v65;
  v68 = sub_1001FC1E8();
  v287 = 0xD000000000000011;
  ((void (*)(void))AppShortcutPhrase.init(stringLiteral:))();
  v288 = 0xD000000000000014;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000014, 0x80000001007C18D0, &type metadata for OpenBookIntent, v68);
  v286 = 0xD000000000000010;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000010, 0x80000001007C18F0, &type metadata for OpenBookIntent, v68);
  v255 = 0xD000000000000013;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000013, 0x80000001007C1910, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000015, 0x80000001007C1930, &type metadata for OpenBookIntent, v68);
  v290 = 0xD000000000000018;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000018, 0x80000001007C1950, &type metadata for OpenBookIntent, v68);
  v289 = 0xD000000000000015;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000015, 0x80000001007C1970, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000014, 0x80000001007C1990, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007C19B0, &type metadata for OpenBookIntent, v68);
  v277 = 0xD000000000000023;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000023, 0x80000001007C19D0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007C1A00, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0x20794D206E65704FLL, 0xEC0000006B6F6F42, &type metadata for OpenBookIntent, v68);
  v248 = v67 + 12 * v63;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for OpenBookIntent, v68);
  v69._object = (void *)0x80000001007C1A20;
  v69._countAndFlagsBits = 0xD000000000000015;
  v70 = v249;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v69);
  v294 = enum case for AppShortcutPhraseToken.applicationName(_:);
  v71 = v293;
  v295 = (void (*)(char *))*((_QWORD *)v293 + 13);
  v276 = v32;
  v72 = v292;
  v295(v32);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v32, v70);
  v73 = (void (*)(char *, uint64_t))*((_QWORD *)v71 + 1);
  v73(v32, v72);
  v74 = v73;
  v293 = v73;
  v75._countAndFlagsBits = 0;
  v75._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v75);
  AppShortcutPhrase.init(stringInterpolation:)(v57, &type metadata for OpenBookIntent, v68);
  v248 = v67 + 13 * v63;
  v76 = v256;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for OpenBookIntent, v68);
  v77._object = (void *)0x80000001007C1A40;
  v77._countAndFlagsBits = v290;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v77);
  v78 = v276;
  v79 = v294;
  v80 = v292;
  ((void (*)(char *, _QWORD, uint64_t))v295)(v276, v294, v292);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v78, v70);
  v74(v78, v80);
  v81._countAndFlagsBits = 0;
  v81._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v81);
  AppShortcutPhrase.init(stringInterpolation:)(v76, &type metadata for OpenBookIntent, v68);
  v256 = (void (*)(_QWORD))(v67 + 14 * v63);
  v82 = v291;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for OpenBookIntent, v68);
  v83._object = (void *)0x80000001007C1A60;
  v83._countAndFlagsBits = v288;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v83);
  v84 = v295;
  ((void (*)(char *, uint64_t, uint64_t))v295)(v78, v79, v80);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v78, v70);
  v85 = v78;
  v86 = v78;
  v87 = v293;
  v293(v85, v80);
  v88._countAndFlagsBits = 0;
  v88._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v88);
  AppShortcutPhrase.init(stringInterpolation:)(v82, &type metadata for OpenBookIntent, v68);
  v291 = (char *)(16 * v63);
  v248 = v67 + 15 * v63;
  v89 = v250;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for OpenBookIntent, v68);
  v90._countAndFlagsBits = 0xD000000000000017;
  v256 = (void (*)(_QWORD))0xD000000000000017;
  v90._object = (void *)0x80000001007C1A80;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v90);
  ((void (*)(char *, _QWORD, uint64_t))v84)(v86, v294, v80);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v86, v70);
  v87(v86, v80);
  v91._countAndFlagsBits = 0;
  v91._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v91);
  AppShortcutPhrase.init(stringInterpolation:)(v89, &type metadata for OpenBookIntent, v68);
  v250 = &v291[v67];
  v92 = v274;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for OpenBookIntent, v68);
  v93._object = (void *)0x80000001007C1AA0;
  v93._countAndFlagsBits = 0xD000000000000019;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v93);
  v94 = v294;
  v95 = (void (*)(char *, uint64_t, uint64_t))v295;
  ((void (*)(char *, _QWORD, uint64_t))v295)(v86, v294, v80);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v86, v70);
  v293(v86, v80);
  v96._countAndFlagsBits = 0;
  v96._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v96);
  AppShortcutPhrase.init(stringInterpolation:)(v92, &type metadata for OpenBookIntent, v68);
  v291 += v67 + v63;
  v97 = v251;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for OpenBookIntent, v68);
  v98._countAndFlagsBits = 0xD00000000000001CLL;
  v274 = (char *)0xD00000000000001CLL;
  v98._object = (void *)0x80000001007C1AC0;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v98);
  v95(v86, v94, v80);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v86, v70);
  v99 = v293;
  v293(v86, v80);
  v100._countAndFlagsBits = 0;
  v100._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v100);
  AppShortcutPhrase.init(stringInterpolation:)(v97, &type metadata for OpenBookIntent, v68);
  v291 = (char *)(v67 + 18 * v63);
  v101 = v252;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for OpenBookIntent, v68);
  v102._object = (void *)0x80000001007C1AE0;
  v102._countAndFlagsBits = 0xD000000000000019;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v102);
  v103 = v294;
  ((void (*)(char *, _QWORD, uint64_t))v295)(v86, v294, v80);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v86, v70);
  v99(v86, v80);
  v104._countAndFlagsBits = 0;
  v104._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v104);
  AppShortcutPhrase.init(stringInterpolation:)(v101, &type metadata for OpenBookIntent, v68);
  v291 = (char *)(v67 + 19 * v63);
  v105 = v253;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for OpenBookIntent, v68);
  v106._object = (void *)0x80000001007C1B00;
  v106._countAndFlagsBits = v290;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v106);
  v107 = v103;
  v108 = v80;
  v109 = v80;
  v110 = v295;
  ((void (*)(char *, uint64_t, uint64_t))v295)(v86, v107, v109);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v86, v70);
  v99(v86, v108);
  v111._countAndFlagsBits = 0;
  v111._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v111);
  AppShortcutPhrase.init(stringInterpolation:)(v105, &type metadata for OpenBookIntent, v68);
  v253 = (char *)(v67 + 20 * v63);
  v112 = v259;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for OpenBookIntent, v68);
  v113._countAndFlagsBits = 0xD00000000000001DLL;
  v291 = (char *)0xD00000000000001DLL;
  v113._object = (void *)0x80000001007C1B20;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v113);
  ((void (*)(char *, _QWORD, uint64_t))v110)(v86, v294, v108);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v86, v70);
  v114 = v293;
  v293(v86, v108);
  v115._countAndFlagsBits = 0;
  v115._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v115);
  AppShortcutPhrase.init(stringInterpolation:)(v112, &type metadata for OpenBookIntent, v68);
  v253 = (char *)(v67 + 21 * v63);
  v116 = v254;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(39, 1, &type metadata for OpenBookIntent, v68);
  v117._countAndFlagsBits = 0xD000000000000027;
  v259 = (char *)0xD000000000000027;
  v117._object = (void *)0x80000001007C1B40;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v117);
  v118 = v294;
  ((void (*)(char *, _QWORD, uint64_t))v295)(v86, v294, v108);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v86, v70);
  v114(v86, v108);
  v119._countAndFlagsBits = 0;
  v119._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v119);
  AppShortcutPhrase.init(stringInterpolation:)(v116, &type metadata for OpenBookIntent, v68);
  v254 = (char *)(v67 + 22 * v63);
  v120 = v257;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for OpenBookIntent, v68);
  v121._object = (void *)0x80000001007C1B70;
  v121._countAndFlagsBits = (uint64_t)v291;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v121);
  v122 = v118;
  v123 = v118;
  v124 = v292;
  v125 = (void (*)(char *, uint64_t, uint64_t))v295;
  ((void (*)(char *, uint64_t, uint64_t))v295)(v86, v123, v292);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v86, v70);
  v293(v86, v124);
  v126._countAndFlagsBits = 0;
  v126._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v126);
  AppShortcutPhrase.init(stringInterpolation:)(v120, &type metadata for OpenBookIntent, v68);
  v257 = (char *)(v67 + 23 * v63);
  v127 = v275;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for OpenBookIntent, v68);
  v128._object = (void *)0x80000001007C1B90;
  v128._countAndFlagsBits = v286;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v128);
  v125(v86, v122, v124);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v86, v70);
  v293(v86, v124);
  v129._countAndFlagsBits = 0;
  v129._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v129);
  AppShortcutPhrase.init(stringInterpolation:)(v127, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v287, 0x80000001007C1BB0, &type metadata for OpenBookIntent, v68);
  v130 = v288;
  AppShortcutPhrase.init(stringLiteral:)(v288, 0x80000001007C1BD0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v286, 0x80000001007C1BF0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v255, 0x80000001007C1C10, &type metadata for OpenBookIntent, v68);
  v131 = v289;
  AppShortcutPhrase.init(stringLiteral:)(v289, 0x80000001007C1C30, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v290, 0x80000001007C1C50, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v131, 0x80000001007C1C70, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v130, 0x80000001007C1C90, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007C1CB0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0x20794D2064616552, 0xEC0000006B6F6F42, &type metadata for OpenBookIntent, v68);
  v253 = (char *)0xD00000000000001ALL;
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007C1CD0, &type metadata for OpenBookIntent, v68);
  v132 = v291;
  AppShortcutPhrase.init(stringLiteral:)(v291, 0x80000001007C1CF0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007C1D10, &type metadata for OpenBookIntent, v68);
  v133 = v274;
  AppShortcutPhrase.init(stringLiteral:)(v274, 0x80000001007C1D30, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001007C1D50, &type metadata for OpenBookIntent, v68);
  v275 = (char *)0xD000000000000021;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000021, 0x80000001007C1D70, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001007C1DA0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v132, 0x80000001007C1DC0, &type metadata for OpenBookIntent, v68);
  v257 = (char *)0xD000000000000022;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000022, 0x80000001007C1DE0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v289, 0x80000001007C1E10, &type metadata for OpenBookIntent, v68);
  v251 = (char *)0xD00000000000001BLL;
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001007C1E30, &type metadata for OpenBookIntent, v68);
  v286 = 0xD00000000000001ELL;
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001007C1E50, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007C1E70, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v132, 0x80000001007C1E90, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001007C1EB0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000022, 0x80000001007C1ED0, &type metadata for OpenBookIntent, v68);
  v255 = 0xD00000000000001FLL;
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001007C1F00, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001007C1F20, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v277, 0x80000001007C1F40, &type metadata for OpenBookIntent, v68);
  v252 = (char *)0xD000000000000016;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000016, 0x80000001007C1F70, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v132, 0x80000001007C1F90, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000020, 0x80000001007C1FB0, &type metadata for OpenBookIntent, v68);
  v134 = v133;
  AppShortcutPhrase.init(stringLiteral:)(v133, 0x80000001007C1FE0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001007C2000, &type metadata for OpenBookIntent, v68);
  v135 = v275;
  AppShortcutPhrase.init(stringLiteral:)(v275, 0x80000001007C2020, &type metadata for OpenBookIntent, v68);
  v254 = (char *)0xD000000000000024;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000024, 0x80000001007C2050, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v135, 0x80000001007C2080, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000020, 0x80000001007C20B0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000025, 0x80000001007C20E0, &type metadata for OpenBookIntent, v68);
  v136 = v290;
  AppShortcutPhrase.init(stringLiteral:)(v290, 0x80000001007C2110, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007C2130, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v134, 0x80000001007C2150, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v136, 0x80000001007C2170, &type metadata for OpenBookIntent, v68);
  v137 = v251;
  AppShortcutPhrase.init(stringLiteral:)(v251, 0x80000001007C2190, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v132, 0x80000001007C21B0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000020, 0x80000001007C21D0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v132, 0x80000001007C2200, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v134, 0x80000001007C2220, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v135, 0x80000001007C2240, &type metadata for OpenBookIntent, v68);
  v138 = v288;
  AppShortcutPhrase.init(stringLiteral:)(v288, 0x80000001007C2270, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000012, 0x80000001007C2290, &type metadata for OpenBookIntent, v68);
  v139 = v289;
  AppShortcutPhrase.init(stringLiteral:)(v289, 0x80000001007C22B0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v287, 0x80000001007C22D0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v138, 0x80000001007C22F0, &type metadata for OpenBookIntent, v68);
  v140 = v252;
  AppShortcutPhrase.init(stringLiteral:)(v252, 0x80000001007C2310, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007C2330, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v140, 0x80000001007C2350, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v139, 0x80000001007C2370, &type metadata for OpenBookIntent, v68);
  v141 = (uint64_t)v253;
  AppShortcutPhrase.init(stringLiteral:)(v253, 0x80000001007C2390, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v254, 0x80000001007C23B0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v141, 0x80000001007C23E0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0x794D206F74206F47, 0xED00006B6F6F4220, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v256, 0x80000001007C2400, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v141, 0x80000001007C2420, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v140, 0x80000001007C2440, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007C2460, &type metadata for OpenBookIntent, v68);
  v142 = v137;
  AppShortcutPhrase.init(stringLiteral:)(v137, 0x80000001007C2480, &type metadata for OpenBookIntent, v68);
  v143 = v286;
  AppShortcutPhrase.init(stringLiteral:)(v286, 0x80000001007C24A0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v142, 0x80000001007C24C0, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v141, 0x80000001007C24E0, &type metadata for OpenBookIntent, v68);
  v144 = v255;
  AppShortcutPhrase.init(stringLiteral:)(v255, 0x80000001007C2500, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000029, 0x80000001007C2520, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(v144, 0x80000001007C2550, &type metadata for OpenBookIntent, v68);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000012, 0x80000001007C2570, &type metadata for OpenBookIntent, v68);
  v145 = v279;
  v146 = String.LocalizationValue.init(stringLiteral:)(0x7275432064616552, 0xEC000000746E6572);
  v147 = v281;
  static Locale.current.getter(v146);
  LODWORD(v255) = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v256 = *(void (**)(_QWORD))(v285 + 104);
  v148 = v282;
  v256(v282);
  v149 = v280;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v145, 0, 0, v147, v148, "Title for OpenBookIntent.", 25, 2);
  v150 = v278;
  AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)(&v297, v258, v149, 0x6C69662E6B6F6F62, 0xE90000000000006CLL, &type metadata for OpenBookIntent, v68);
  v258 = static AppShortcutsBuilder.buildExpression(_:)(v150);
  v260 = *(_QWORD *)(v260 + 8);
  ((void (*)(char *, uint64_t))v260)(v150, v283);
  v302 = 0;
  v300 = 0u;
  v301 = 0u;
  v299 = 0u;
  v298 = 0u;
  v297 = 0u;
  v296[0] = sub_1006201AC(0, (uint64_t)&v297);
  v296[1] = v151;
  v296[2] = v152;
  v153 = sub_10004CFD4(&qword_1009DCB00);
  v154 = *(_QWORD *)(sub_10004CFD4(&qword_1009DCB08) - 8);
  v155 = *(_QWORD *)(v154 + 72);
  v156 = *(unsigned __int8 *)(v154 + 80);
  v157 = (v156 + 32) & ~v156;
  v158 = swift_allocObject(v153, v157 + 24 * v155, v156 | 7);
  v254 = (char *)v158;
  *(_OWORD *)(v158 + 16) = xmmword_10071CF60;
  v159 = v158 + v157;
  v160 = sub_100358FD8();
  AppShortcutPhrase.init(stringLiteral:)(v140, 0x80000001007C25B0, &type metadata for PlayAudiobookIntent, v160);
  v288 = v159;
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007C25D0, &type metadata for PlayAudiobookIntent, v160);
  AppShortcutPhrase.init(stringLiteral:)(v289, 0x80000001007C25F0, &type metadata for PlayAudiobookIntent, v160);
  AppShortcutPhrase.init(stringLiteral:)(v290, 0x80000001007C2610, &type metadata for PlayAudiobookIntent, v160);
  AppShortcutPhrase.init(stringLiteral:)(v141, 0x80000001007C2630, &type metadata for PlayAudiobookIntent, v160);
  AppShortcutPhrase.init(stringLiteral:)(v291, 0x80000001007C2650, &type metadata for PlayAudiobookIntent, v160);
  AppShortcutPhrase.init(stringLiteral:)(v141, 0x80000001007C2670, &type metadata for PlayAudiobookIntent, v160);
  AppShortcutPhrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007C2690, &type metadata for PlayAudiobookIntent, v160);
  AppShortcutPhrase.init(stringLiteral:)(v143, 0x80000001007C26B0, &type metadata for PlayAudiobookIntent, v160);
  AppShortcutPhrase.init(stringLiteral:)(0xD00000000000002DLL, 0x80000001007C26D0, &type metadata for PlayAudiobookIntent, v160);
  AppShortcutPhrase.init(stringLiteral:)(v277, 0x80000001007C2700, &type metadata for PlayAudiobookIntent, v160);
  AppShortcutPhrase.init(stringLiteral:)(v287, 0x80000001007C2730, &type metadata for PlayAudiobookIntent, v160);
  v290 = v159 + 12 * v155;
  v161 = v261;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for PlayAudiobookIntent, v160);
  v162._object = (void *)0x80000001007C2750;
  v162._countAndFlagsBits = v141;
  v163 = v263;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v162);
  v164 = v276;
  v165 = v294;
  v166 = v292;
  v167 = (void (*)(char *, uint64_t, uint64_t))v295;
  ((void (*)(char *, _QWORD, uint64_t))v295)(v276, v294, v292);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v164, v163);
  v168 = v293;
  v293(v164, v166);
  v169._countAndFlagsBits = 0;
  v169._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v169);
  AppShortcutPhrase.init(stringInterpolation:)(v161, &type metadata for PlayAudiobookIntent, v160);
  v170 = v288;
  v290 = v288 + 13 * v155;
  v171 = v262;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for PlayAudiobookIntent, v160);
  v172._object = (void *)0x80000001007C2770;
  v172._countAndFlagsBits = (uint64_t)v291;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v172);
  v173 = v165;
  v174 = v292;
  v167(v164, v173, v292);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v164, v163);
  v175 = v174;
  v176 = v168;
  v168(v164, v175);
  v177._countAndFlagsBits = 0;
  v177._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v177);
  AppShortcutPhrase.init(stringInterpolation:)(v171, &type metadata for PlayAudiobookIntent, v160);
  v290 = v170 + 14 * v155;
  v178 = v264;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for PlayAudiobookIntent, v160);
  v179._object = (void *)0x80000001007C2790;
  v179._countAndFlagsBits = 0xD000000000000019;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v179);
  v180 = v164;
  v181 = v164;
  v182 = v294;
  v183 = v292;
  v184 = (void (*)(char *, uint64_t, uint64_t))v295;
  ((void (*)(char *, _QWORD, uint64_t))v295)(v181, v294, v292);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v180, v163);
  v176(v180, v183);
  v185 = v176;
  v186._countAndFlagsBits = 0;
  v186._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v186);
  AppShortcutPhrase.init(stringInterpolation:)(v178, &type metadata for PlayAudiobookIntent, v160);
  v285 = v155;
  v290 = 16 * v155;
  v187 = 15 * v155;
  v188 = v288;
  v287 = v288 + v187;
  v189 = v265;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(28, 1, &type metadata for PlayAudiobookIntent, v160);
  v190._object = (void *)0x80000001007C27B0;
  v190._countAndFlagsBits = (uint64_t)v274;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v190);
  v191 = v292;
  v184(v180, v182, v292);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v180, v163);
  v185(v180, v191);
  v192._countAndFlagsBits = 0;
  v192._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v192);
  AppShortcutPhrase.init(stringInterpolation:)(v189, &type metadata for PlayAudiobookIntent, v160);
  v193 = v290;
  v287 = v188 + v290;
  v194 = v188;
  v195 = v266;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for PlayAudiobookIntent, v160);
  v196._object = (void *)0x80000001007C27D0;
  v196._countAndFlagsBits = v286;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v196);
  v197 = v292;
  v184(v180, v182, v292);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v180, v163);
  v198 = v197;
  v199 = v293;
  v293(v180, v198);
  v200._countAndFlagsBits = 0;
  v200._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v200);
  AppShortcutPhrase.init(stringInterpolation:)(v195, &type metadata for PlayAudiobookIntent, v160);
  v290 = v194 + v193 + v285;
  v201 = v267;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(33, 1, &type metadata for PlayAudiobookIntent, v160);
  v202._object = (void *)0x80000001007C27F0;
  v202._countAndFlagsBits = (uint64_t)v275;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v202);
  v203 = v180;
  v204 = v180;
  v205 = v292;
  v206 = (void (*)(char *, uint64_t, uint64_t))v295;
  ((void (*)(char *, uint64_t, uint64_t))v295)(v204, v182, v292);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v203, v163);
  v199(v203, v205);
  v207._countAndFlagsBits = 0;
  v207._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v207);
  AppShortcutPhrase.init(stringInterpolation:)(v201, &type metadata for PlayAudiobookIntent, v160);
  v208 = v288;
  v209 = v268;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(30, 1, &type metadata for PlayAudiobookIntent, v160);
  v210._object = (void *)0x80000001007C2820;
  v210._countAndFlagsBits = v286;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v210);
  v211 = v292;
  v206(v203, v182, v292);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v203, v163);
  v212 = v293;
  v293(v203, v211);
  v213._countAndFlagsBits = 0;
  v213._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v213);
  AppShortcutPhrase.init(stringInterpolation:)(v209, &type metadata for PlayAudiobookIntent, v160);
  v214 = v285;
  v290 = v208 + 19 * v285;
  v215 = v269;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for PlayAudiobookIntent, v160);
  v216._object = (void *)0x80000001007C2840;
  v216._countAndFlagsBits = (uint64_t)v291;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v216);
  v206(v203, v294, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v203, v163);
  v212(v203, v211);
  v217 = v212;
  v218._countAndFlagsBits = 0;
  v218._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v218);
  AppShortcutPhrase.init(stringInterpolation:)(v215, &type metadata for PlayAudiobookIntent, v160);
  v219 = v288;
  v291 = (char *)(v288 + 20 * v214);
  v220 = v270;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(34, 1, &type metadata for PlayAudiobookIntent, v160);
  v221._object = (void *)0x80000001007C2860;
  v221._countAndFlagsBits = (uint64_t)v257;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v221);
  v222 = v294;
  ((void (*)(char *, _QWORD, uint64_t))v295)(v203, v294, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v203, v163);
  v217(v203, v211);
  v223._countAndFlagsBits = 0;
  v223._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v223);
  AppShortcutPhrase.init(stringInterpolation:)(v220, &type metadata for PlayAudiobookIntent, v160);
  v291 = (char *)(v219 + 21 * v214);
  v224 = v271;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(49, 1, &type metadata for PlayAudiobookIntent, v160);
  v225._countAndFlagsBits = 0xD000000000000031;
  v225._object = (void *)0x80000001007C2890;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v225);
  v226 = v295;
  ((void (*)(char *, uint64_t, uint64_t))v295)(v203, v222, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v203, v163);
  v227 = v293;
  v293(v203, v211);
  v228._countAndFlagsBits = 0;
  v228._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v228);
  AppShortcutPhrase.init(stringInterpolation:)(v224, &type metadata for PlayAudiobookIntent, v160);
  v291 = (char *)(v288 + 22 * v214);
  v229 = v272;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(39, 1, &type metadata for PlayAudiobookIntent, v160);
  v230._object = (void *)0x80000001007C28D0;
  v230._countAndFlagsBits = (uint64_t)v259;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v230);
  v231 = v294;
  ((void (*)(char *, _QWORD, uint64_t))v226)(v203, v294, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v203, v163);
  v227(v203, v211);
  v232._countAndFlagsBits = 0;
  v232._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v232);
  AppShortcutPhrase.init(stringInterpolation:)(v229, &type metadata for PlayAudiobookIntent, v160);
  v233 = v273;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for PlayAudiobookIntent, v160);
  v234._object = (void *)0x80000001007C2900;
  v234._countAndFlagsBits = v289;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v234);
  ((void (*)(char *, uint64_t, uint64_t))v295)(v203, v231, v211);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)(v203, v163);
  v227(v203, v211);
  v235._countAndFlagsBits = 0;
  v235._object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v235);
  AppShortcutPhrase.init(stringInterpolation:)(v233, &type metadata for PlayAudiobookIntent, v160);
  v236 = v279;
  v237 = String.LocalizationValue.init(stringLiteral:)(0x7275432079616C50, 0xEC000000746E6572);
  v238 = v281;
  static Locale.current.getter(v237);
  v239 = v282;
  ((void (*)(char *, _QWORD, uint64_t))v256)(v282, v255, v284);
  v240 = v280;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v236, 0, 0, v238, v239, "Title for PlayAudiobookIntent.", 30, 2);
  v241 = v278;
  AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)(v296, v254, v240, 0x6E6F687064616568, 0xEA00000000007365, &type metadata for PlayAudiobookIntent, v160);
  v242 = static AppShortcutsBuilder.buildExpression(_:)(v241);
  ((void (*)(char *, uint64_t))v260)(v241, v283);
  v243 = sub_10004CFD4(&qword_1009DCB18);
  v244 = swift_allocObject(v243, 48, 7);
  *(_OWORD *)(v244 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v244 + 32) = v258;
  *(_QWORD *)(v244 + 40) = v242;
  v245 = static AppShortcutsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v244);
  return v245;
}

unint64_t sub_100358FD8()
{
  unint64_t result;

  result = qword_1009DCB10;
  if (!qword_1009DCB10)
  {
    result = swift_getWitnessTable(&unk_10073567C, &type metadata for PlayAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009DCB10);
  }
  return result;
}

Swift::Void __swiftcall SidebarDataManagerProtocol.addUserCollection()()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 48))(0, 0);
}

void sub_100359034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  void (*v32)(char *, uint64_t, __n128);
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  _QWORD v45[3];

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009DCC60);
  v44 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v45[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v45[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books18SidebarDataManager_selectedItemReceiver);
  v45[0] = v9;
  v10 = swift_allocObject(&unk_1008FF140, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  swift_retain(v9);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009DB470);
  v12 = sub_100030B34((unint64_t *)&unk_1009DCC70, (uint64_t *)&unk_1009DB470, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v13 = Publisher<>.sink(receiveValue:)(sub_10035AC9C, v10, v11, v12);
  swift_release(v10);
  swift_release(v45[0]);
  v14 = v1 + OBJC_IVAR____TtC5Books18SidebarDataManager_cancellables;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books18SidebarDataManager_cancellables, v45, 33, 0);
  AnyCancellable.store(in:)(v14);
  swift_endAccess(v45);
  swift_release(v13);
  v15 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(JSASearchFeedControllerUpdateSearchTextNotification, 0);

  v16 = swift_allocObject(&unk_1008FF140, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = sub_100008C8C();
  v18 = Publisher<>.sink(receiveValue:)(sub_10035ACA4, v16, v5, v17);
  v19 = swift_release(v16);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v19);
  swift_beginAccess(v14, v45, 33, 0);
  AnyCancellable.store(in:)(v14);
  swift_endAccess(v45);
  swift_release(v18);
  v45[0] = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books18SidebarDataManager_standardItemsReceiver);
  v20 = v45[0];
  v21 = swift_allocObject(&unk_1008FF140, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16);
  swift_retain(v20);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009DCC80);
  v23 = sub_100030B34(&qword_1009D35D0, (uint64_t *)&unk_1009DCC80, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v24 = Publisher<>.sink(receiveValue:)(sub_10035ACAC, v21, v22, v23);
  swift_release(v21);
  swift_release(v45[0]);
  swift_beginAccess(v14, v45, 33, 0);
  AnyCancellable.store(in:)(v14);
  swift_endAccess(v45);
  swift_release(v24);
  if (qword_1009CE488 != -1)
    swift_once(&qword_1009CE488, sub_10000A650);
  v25 = (void *)qword_100A1E8A8;
  swift_beginAccess(qword_100A1E8A8 + OBJC_IVAR____TtC5Books25LibraryCollectionsService__defaultCollections, v45, 33, 0);
  v26 = v25;
  v27 = sub_10004CFD4((uint64_t *)&unk_1009DCC90);
  Published.projectedValue.getter(v27);
  swift_endAccess(v45);

  v28 = swift_allocObject(&unk_1008FF140, 24, 7);
  swift_unknownObjectWeakInit(v28 + 16);
  v29 = sub_100030B34(&qword_1009EA060, (uint64_t *)&unk_1009DCC60, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v30 = Publisher<>.sink(receiveValue:)(sub_10035ACB4, v28, v2, v29);
  v31 = swift_release(v28);
  v32 = *(void (**)(char *, uint64_t, __n128))(v44 + 8);
  v32(v4, v2, v31);
  swift_beginAccess(v14, v45, 33, 0);
  AnyCancellable.store(in:)(v14);
  swift_endAccess(v45);
  swift_release(v30);
  v33 = (void *)qword_100A1E8A8;
  swift_beginAccess(qword_100A1E8A8 + OBJC_IVAR____TtC5Books25LibraryCollectionsService__userCollections, v45, 33, 0);
  v34 = v33;
  Published.projectedValue.getter(v27);
  swift_endAccess(v45);

  v35 = swift_allocObject(&unk_1008FF140, 24, 7);
  swift_unknownObjectWeakInit(v35 + 16);
  v36 = Publisher<>.sink(receiveValue:)(sub_10035ACBC, v35, v2, v29);
  v37 = swift_release(v35);
  v32(v4, v2, v37);
  swift_beginAccess(v14, v45, 33, 0);
  AnyCancellable.store(in:)(v14);
  swift_endAccess(v45);
  swift_release(v36);
  v38 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
  objc_msgSend(v38, "addObserver:accountTypes:", v1, 1);

  v39 = type metadata accessor for AccountController(0);
  v43 = (void *)static AccountController.shared.getter(v39, v40, v41, v42);
  AccountController.add(observer:)(v1);

}

void sub_10035959C(void **a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  _QWORD v11[2];
  char v12;
  uint64_t v13;
  char v14;
  char v15[24];

  v2 = (char *)*a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    if (v2)
    {
      v7 = *(_QWORD *)&v2[OBJC_IVAR___BKRootBarItem_identifier];
      v6 = *(_QWORD *)&v2[OBJC_IVAR___BKRootBarItem_identifier + 8];
      v8 = v2;
      swift_bridgeObjectRetain(v6);
      if ((objc_msgSend(v8, "isSearch") & 1) != 0)
      {
        v9 = 1;
      }
      else if (objc_msgSend(v8, "isDefaultCollection"))
      {
        v9 = 2;
      }
      else if (objc_msgSend(v8, "isCustomCollection"))
      {
        v9 = 3;
      }
      else
      {
        v9 = 1;
      }
      v10 = v8[OBJC_IVAR___BKRootBarItem_editNameOnSelect];
      v11[0] = v7;
      v11[1] = v6;
      v12 = v9;
      v13 = 2;
      v14 = v10;
      PassthroughSubject.send(_:)(v11);
      swift_bridgeObjectRelease(v6);

    }
  }
}

double sub_1003596BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = Notification.userInfo.getter();
    if (v6)
    {
      v7 = v6;
      *(_QWORD *)&v15 = 0x6554686372616573;
      *((_QWORD *)&v15 + 1) = 0xEA00000000007478;
      AnyHashable.init<A>(_:)(&v15, &type metadata for String, &protocol witness table for String);
      if (*(_QWORD *)(v7 + 16) && (v8 = sub_1000561E8((uint64_t)&v13), (v9 & 1) != 0))
      {
        sub_10004CD0C(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v15);
      }
      else
      {
        v15 = 0u;
        v16 = 0u;
      }
      swift_bridgeObjectRelease(v7);
      sub_1000569AC((uint64_t)&v13);
      if (*((_QWORD *)&v16 + 1))
      {
        v10 = swift_dynamicCast(&v13, &v15, (char *)&type metadata for Any + 8, &type metadata for String, 6);
        v11 = v13;
        if (v10)
        {
          v12 = v14;
        }
        else
        {
          v11 = 0;
          v12 = 0;
        }
        goto LABEL_13;
      }
    }
    else
    {
      v15 = 0u;
      v16 = 0u;
    }
    sub_10004A7B8((uint64_t)&v15);
    v11 = 0;
    v12 = 0;
LABEL_13:
    v13 = v11;
    v14 = v12;
    PassthroughSubject.send(_:)(&v13);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  return result;
}

void sub_100359810(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  unint64_t *v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  BOOL v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  char *v57;
  uint64_t v58;
  BOOL v59;
  unint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char *v68;
  uint64_t v69;
  BOOL v70;
  unint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  char v86[24];
  uint64_t v87[6];
  char v88[8];
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93[6];
  char v94[8];
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99[6];
  char v100[8];
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char v105[8];
  uint64_t v106;
  char v107[8];
  uint64_t v108;
  char v109[8];
  uint64_t v110;
  char v111[8];
  uint64_t v112;
  char v113[8];
  uint64_t v114;
  char v115[8];
  uint64_t v116;
  Swift::String v117;
  Swift::String v118;
  Swift::String v119;
  Swift::String v120;
  Swift::String v121;
  Swift::String v122;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v86, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (!Strong)
    return;
  v5 = (void *)Strong;
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v77 = v2;
    else
      v77 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v6 = _CocoaArrayWrapper.endIndex.getter(v77);
    v80 = v5;
    if (v6)
      goto LABEL_4;
LABEL_114:
    v8 = _swiftEmptyArrayStorage;
LABEL_115:
    swift_bridgeObjectRelease(v2);
    v85 = v8;
    v78 = sub_10004CFD4(&qword_1009D3530);
    v79 = sub_100030B34(&qword_1009DCCA0, &qword_1009D3530, (uint64_t)&protocol conformance descriptor for [A]);
    if ((Collection.isNotEmpty.getter(v78, v79) & 1) != 0)
    {
      v85 = v8;
      PassthroughSubject.send(_:)(&v85);
      swift_bridgeObjectRelease(v8);

    }
    else
    {

      swift_bridgeObjectRelease(v8);
    }
    return;
  }
  v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  v80 = v5;
  if (!v6)
    goto LABEL_114;
LABEL_4:
  if (v6 >= 1)
  {
    v7 = 0;
    v81 = v2 & 0xC000000000000001;
    v8 = _swiftEmptyArrayStorage;
    v82 = v6;
    v83 = v2;
    while (1)
    {
      if (v81)
        v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v2);
      else
        v9 = (char *)*(id *)(v2 + 8 * v7 + 32);
      v10 = v9;
      if ((objc_msgSend(v9, "isSearch", v80) & 1) != 0)
      {
        v11 = (uint64_t *)&v10[OBJC_IVAR___BKRootBarItem_identifier];
        v12 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_identifier];
        v13 = *(void **)&v10[OBJC_IVAR___BKRootBarItem_identifier + 8];
        v14 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_titleOverride + 8];
        if (v14)
        {
          v84 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_titleOverride];
          swift_bridgeObjectRetain(v13);
          v15 = 0;
          v16 = v14;
          v17 = v14;
LABEL_27:
          swift_bridgeObjectRetain_n(v14, 2);
          swift_bridgeObjectRelease(v17);
          swift_bridgeObjectRelease(v15);
          v36 = (unint64_t *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride];
          v37 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride + 8];
          if (v37)
            goto LABEL_60;
        }
        else
        {
          swift_bridgeObjectRetain_n(*(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_identifier + 8], 2);
          _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v12, (unint64_t)v13);
          v27 = v26;
          swift_bridgeObjectRelease(v26);
          if (v27)
          {
            swift_bridgeObjectRelease(v13);
            v28 = 14;
          }
          else
          {
            v117._countAndFlagsBits = v12;
            v117._object = v13;
            v28 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v117);
            if (v28 == 16)
              v28 = 15;
          }
          sub_100047B64(v28, v87);
          v17 = v87[1];
          v35 = v87[2];
          v16 = v87[3];
          v15 = v87[5];
          sub_1002215B0((uint64_t)v87, (uint64_t)v107);
          if (v108)
          {
            v84 = v35;
            v14 = 0;
            goto LABEL_27;
          }
          v84 = 0;
          v36 = (unint64_t *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride];
          v37 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride + 8];
          v16 = 0xE000000000000000;
          if (v37)
            goto LABEL_60;
        }
        v39 = *v11;
        v38 = (void *)v11[1];
        v40 = &v10[OBJC_IVAR___BKRootBarItem_countryCode];
        v41 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_countryCode + 8];
        if (v41
          && (*(_QWORD *)v40 == 28778 ? (v42 = v41 == 0xE200000000000000) : (v42 = 0),
              (v42
            || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v40, v41, 28778, 0xE200000000000000, 0) & 1) != 0)
           && ((v37 = 0x80000001007C2AD0, v43 = 0x80000001007C2AB0, v39 == 0x7972617262696CLL)
             ? (v44 = v38 == (void *)0xE700000000000000)
             : (v44 = 0),
               v44
            || (_stringCompareWithSmolCheck(_:_:expecting:)(v39, v38, 0x7972617262696CLL, 0xE700000000000000, 0) & 1) != 0)))
        {
          v45 = 0;
          v46 = 0xD000000000000017;
        }
        else
        {
          swift_bridgeObjectRetain(v38);
          _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v39, (unint64_t)v38);
          v48 = v47;
          swift_bridgeObjectRelease(v47);
          if (v48)
          {
            swift_bridgeObjectRelease(v38);
            v49 = 14;
          }
          else
          {
            v118._countAndFlagsBits = v39;
            v118._object = v38;
            LODWORD(v49) = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v118);
            if (v49 == 16)
              v49 = 15;
            else
              v49 = v49;
          }
          sub_100047804(v49, (uint64_t)v88);
          v43 = v89;
          v46 = v90;
          v37 = v91;
          v45 = v92;
          sub_1002215B0((uint64_t)v88, (uint64_t)v105);
          if (!v106)
            goto LABEL_108;
        }

        swift_bridgeObjectRelease(v43);
        swift_bridgeObjectRelease(v45);
LABEL_61:
        v51 = 1;
        goto LABEL_62;
      }
      v18 = objc_msgSend(v10, "isDefaultCollection");
      v19 = (uint64_t *)&v10[OBJC_IVAR___BKRootBarItem_identifier];
      v12 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_identifier];
      v13 = *(void **)&v10[OBJC_IVAR___BKRootBarItem_identifier + 8];
      v20 = (uint64_t *)&v10[OBJC_IVAR___BKRootBarItem_titleOverride];
      v21 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_titleOverride + 8];
      if ((v18 & 1) == 0)
      {
        if (v21)
        {
          v84 = *v20;
          swift_bridgeObjectRetain(v13);
          v24 = 0;
          v16 = v21;
          v25 = v21;
          goto LABEL_59;
        }
        swift_bridgeObjectRetain_n(*(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_identifier + 8], 2);
        _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v12, (unint64_t)v13);
        v33 = v32;
        swift_bridgeObjectRelease(v32);
        if (v33)
        {
          swift_bridgeObjectRelease(v13);
          v34 = 14;
        }
        else
        {
          v120._countAndFlagsBits = v12;
          v120._object = v13;
          v34 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v120);
          if (v34 == 16)
            v34 = 15;
        }
        sub_100047B64(v34, v99);
        v25 = v99[1];
        v84 = v99[2];
        v16 = v99[3];
        v24 = v99[5];
        sub_1002215B0((uint64_t)v99, (uint64_t)v115);
        if (v116)
        {
          v21 = 0;
LABEL_59:
          swift_bridgeObjectRetain_n(v21, 2);
          swift_bridgeObjectRelease(v25);
          swift_bridgeObjectRelease(v24);
          v36 = (unint64_t *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride];
          v37 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride + 8];
          if (v37)
          {
LABEL_60:
            v46 = *v36;
            swift_bridgeObjectRetain(v37);

            goto LABEL_61;
          }
        }
        else
        {
          v84 = 0;
          v36 = (unint64_t *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride];
          v37 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride + 8];
          v16 = 0xE000000000000000;
          if (v37)
            goto LABEL_60;
        }
        v66 = *v19;
        v67 = (void *)v19[1];
        v68 = &v10[OBJC_IVAR___BKRootBarItem_countryCode];
        v69 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_countryCode + 8];
        if (v69)
        {
          v70 = *(_QWORD *)v68 == 28778 && v69 == 0xE200000000000000;
          if (v70
            || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v68, v69, 28778, 0xE200000000000000, 0) & 1) != 0)
          {
            v37 = 0x80000001007C2AD0;
            v71 = 0x80000001007C2AB0;
            v72 = v66 == 0x7972617262696CLL && v67 == (void *)0xE700000000000000;
            if (v72
              || (_stringCompareWithSmolCheck(_:_:expecting:)(v66, v67, 0x7972617262696CLL, 0xE700000000000000, 0) & 1) != 0)
            {
              v73 = 0;
              v46 = 0xD000000000000017;
LABEL_107:

              swift_bridgeObjectRelease(v71);
              swift_bridgeObjectRelease(v73);
              goto LABEL_61;
            }
          }
        }
        swift_bridgeObjectRetain(v67);
        _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v66, (unint64_t)v67);
        v75 = v74;
        swift_bridgeObjectRelease(v74);
        if (v75)
        {
          swift_bridgeObjectRelease(v67);
          v76 = 14;
        }
        else
        {
          v122._countAndFlagsBits = v66;
          v122._object = v67;
          LODWORD(v76) = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v122);
          if (v76 == 16)
            v76 = 15;
          else
            v76 = v76;
        }
        sub_100047804(v76, (uint64_t)v100);
        v71 = v101;
        v46 = v102;
        v37 = v103;
        v73 = v104;
        sub_1002215B0((uint64_t)v100, (uint64_t)v113);
        if (v114)
          goto LABEL_107;
LABEL_108:

        v46 = 0;
        v37 = 0xE000000000000000;
        goto LABEL_61;
      }
      if (v21)
        break;
      swift_bridgeObjectRetain_n(*(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_identifier + 8], 2);
      _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v12, (unint64_t)v13);
      v30 = v29;
      swift_bridgeObjectRelease(v29);
      if (v30)
      {
        swift_bridgeObjectRelease(v13);
        v31 = 14;
      }
      else
      {
        v119._countAndFlagsBits = v12;
        v119._object = v13;
        v31 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v119);
        if (v31 == 16)
          v31 = 15;
      }
      sub_100047B64(v31, v93);
      v23 = v93[1];
      v84 = v93[2];
      v16 = v93[3];
      v22 = v93[5];
      sub_1002215B0((uint64_t)v93, (uint64_t)v111);
      if (v112)
      {
        v21 = 0;
LABEL_53:
        swift_bridgeObjectRetain_n(v21, 2);
        swift_bridgeObjectRelease(v23);
        swift_bridgeObjectRelease(v22);
        v50 = (unint64_t *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride];
        v37 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride + 8];
        if (v37)
          goto LABEL_54;
        goto LABEL_69;
      }
      v84 = 0;
      v50 = (unint64_t *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride];
      v37 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_iconNameOverride + 8];
      v16 = 0xE000000000000000;
      if (v37)
      {
LABEL_54:
        v46 = *v50;
        swift_bridgeObjectRetain(v37);

        v51 = 2;
        goto LABEL_62;
      }
LABEL_69:
      v55 = *v19;
      v56 = (void *)v19[1];
      v57 = &v10[OBJC_IVAR___BKRootBarItem_countryCode];
      v58 = *(_QWORD *)&v10[OBJC_IVAR___BKRootBarItem_countryCode + 8];
      if (v58
        && (*(_QWORD *)v57 == 28778 ? (v59 = v58 == 0xE200000000000000) : (v59 = 0),
            (v59
          || (_stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v57, v58, 28778, 0xE200000000000000, 0) & 1) != 0)
         && ((v37 = 0x80000001007C2AD0, v60 = 0x80000001007C2AB0, v55 == 0x7972617262696CLL)
           ? (v61 = v56 == (void *)0xE700000000000000)
           : (v61 = 0),
             v61
          || (_stringCompareWithSmolCheck(_:_:expecting:)(v55, v56, 0x7972617262696CLL, 0xE700000000000000, 0) & 1) != 0)))
      {
        v62 = 0;
        v46 = 0xD000000000000017;
      }
      else
      {
        swift_bridgeObjectRetain(v56);
        _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v55, (unint64_t)v56);
        v64 = v63;
        swift_bridgeObjectRelease(v63);
        if (v64)
        {
          swift_bridgeObjectRelease(v56);
          v65 = 14;
        }
        else
        {
          v121._countAndFlagsBits = v55;
          v121._object = v56;
          LODWORD(v65) = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v121);
          if (v65 == 16)
            v65 = 15;
          else
            v65 = v65;
        }
        sub_100047804(v65, (uint64_t)v94);
        v60 = v95;
        v46 = v96;
        v37 = v97;
        v62 = v98;
        sub_1002215B0((uint64_t)v94, (uint64_t)v109);
        if (!v110)
        {

          v46 = 0;
          v37 = 0xE000000000000000;
          v51 = 2;
          goto LABEL_62;
        }
      }

      swift_bridgeObjectRelease(v60);
      swift_bridgeObjectRelease(v62);
      v51 = 2;
LABEL_62:
      if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        v8 = sub_1005B105C(0, v8[2] + 1, 1, v8);
      v53 = v8[2];
      v52 = v8[3];
      if (v53 >= v52 >> 1)
        v8 = sub_1005B105C((_QWORD *)(v52 > 1), v53 + 1, 1, v8);
      ++v7;
      v8[2] = v53 + 1;
      v54 = &v8[7 * v53];
      v54[4] = v12;
      v54[5] = v13;
      *((_BYTE *)v54 + 48) = v51;
      v54[7] = v84;
      v54[8] = v16;
      v54[9] = v46;
      v54[10] = v37;
      v2 = v83;
      if (v82 == v7)
        goto LABEL_115;
    }
    v84 = *v20;
    swift_bridgeObjectRetain(v13);
    v22 = 0;
    v16 = v21;
    v23 = v21;
    goto LABEL_53;
  }
  __break(1u);
}

void sub_10035A1CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  id v17;
  unsigned __int8 v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char v24[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if ((unint64_t)v2 >> 62)
      goto LABEL_22;
    v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v7 = _swiftEmptyArrayStorage;
      if (!v6)
      {
LABEL_19:
        v23 = v7;
        PassthroughSubject.send(_:)(&v23);
        swift_bridgeObjectRelease(v7);

        return;
      }
      v23 = _swiftEmptyArrayStorage;
      sub_100366BF8(0, v6 & ~(v6 >> 63), 0);
      if (v6 < 0)
        break;
      v22 = v5;
      v8 = 0;
      v7 = v23;
      while (v6 != v8)
      {
        if ((v2 & 0xC000000000000001) != 0)
          v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v2);
        else
          v9 = *(id *)(v2 + 8 * v8 + 32);
        v10 = v9;
        v11 = objc_msgSend(v9, "collectionID");
        if (!v11)
          goto LABEL_27;
        v12 = v11;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v14 = v13;

        v15 = String._bridgeToObjectiveC()();
        v16 = objc_msgSend(v10, "hidden", swift_bridgeObjectRelease(v14).n128_f64[0]);
        if (v16)
        {
          v17 = v16;
          v18 = objc_msgSend(v16, "BOOLValue");

          v10 = v17;
        }
        else
        {
          v18 = 0;
        }

        v23 = v7;
        v5 = v7[2];
        v19 = v7[3];
        if (v5 >= v19 >> 1)
        {
          sub_100366BF8(v19 > 1, v5 + 1, 1);
          v7 = v23;
        }
        ++v8;
        v7[2] = v5 + 1;
        v20 = &v7[2 * v5];
        v20[4] = v15;
        *((_BYTE *)v20 + 40) = v18;
        if (v6 == v8)
        {
          v5 = v22;
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_22:
      if (v2 < 0)
        v21 = v2;
      else
        v21 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      v6 = _CocoaArrayWrapper.endIndex.getter(v21);
      swift_bridgeObjectRelease(v2);
    }
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

void sub_10035A3E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  _BYTE v28[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v28, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if ((unint64_t)v2 >> 62)
      goto LABEL_20;
    v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      v7 = _swiftEmptyArrayStorage;
      if (!v6)
      {
LABEL_17:
        v27 = v7;
        v24 = v7;
        PassthroughSubject.send(_:)(&v27);
        swift_bridgeObjectRelease(v24);

        return;
      }
      v27 = _swiftEmptyArrayStorage;
      sub_100366C14(0, v6 & ~(v6 >> 63), 0);
      if (v6 < 0)
        break;
      v8 = 0;
      v7 = v27;
      v26 = (void *)v5;
      while (v6 != v8)
      {
        v9 = v7;
        if ((v2 & 0xC000000000000001) != 0)
          v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v2);
        else
          v10 = *(id *)(v2 + 8 * v8 + 32);
        v11 = v10;
        v12 = objc_msgSend(v10, "collectionID", v26);
        if (!v12)
          goto LABEL_25;
        v13 = v12;
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v16 = v15;

        v17 = objc_msgSend(v11, "title");
        if (!v17)
          goto LABEL_26;
        v18 = v17;
        v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
        v21 = v20;

        v7 = v9;
        v27 = v9;
        v5 = v9[2];
        v22 = v7[3];
        if (v5 >= v22 >> 1)
        {
          sub_100366C14(v22 > 1, v5 + 1, 1);
          v7 = v27;
        }
        ++v8;
        v7[2] = v5 + 1;
        v23 = &v7[4 * v5];
        v23[4] = v14;
        v23[5] = v16;
        v23[6] = v19;
        v23[7] = v21;
        if (v6 == v8)
        {
          v5 = (uint64_t)v26;
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_20:
      if (v2 < 0)
        v25 = v2;
      else
        v25 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      v6 = _CocoaArrayWrapper.endIndex.getter(v25);
      swift_bridgeObjectRelease(v2);
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
}

id sub_10035A5F4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  objc_class *ObjectType;
  id v5;
  void *v6;
  id v7;
  objc_super v9;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  v5 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
  objc_msgSend(v5, "removeObserver:accountTypes:", v3, 1);

  type metadata accessor for AccountController(0);
  v6 = (void *)static AccountController.shared.getter();
  v7 = v3;
  AccountController.remove(observer:)();

  v9.receiver = v7;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, "dealloc");
}

uint64_t type metadata accessor for SidebarDataManager()
{
  return objc_opt_self(_TtC5Books18SidebarDataManager);
}

uint64_t sub_10035A878()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC5Books18SidebarDataManager_selectionStatePublisher));
}

uint64_t sub_10035A88C()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC5Books18SidebarDataManager_searchBarPublisher));
}

uint64_t sub_10035A8A0()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC5Books18SidebarDataManager_standardItemsPublisher));
}

void sub_10035A8B4(void *a1, char a2)
{
  id v4;

  if (qword_1009CE488 != -1)
    swift_once(&qword_1009CE488, sub_10000A650);
  v4 = (id)qword_100A1E8A8;
  sub_10041D030(a1, a2 & 1);

}

uint64_t sub_10035A924()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC5Books18SidebarDataManager_defaultCollectionsPublisher));
}

double sub_10035A93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  _QWORD *v9;
  id v10;
  double result;

  if (qword_1009CE488 != -1)
    swift_once(&qword_1009CE488, sub_10000A650);
  v8 = (void *)qword_100A1E8A8;
  sub_100059BB4();
  v9 = (_QWORD *)swift_allocObject(&unk_1008FF230, 48, 7);
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a1;
  v9[5] = a2;
  v10 = v8;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10035B0F4, v9);

  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

double sub_10035AA0C(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  id v6;
  double result;

  if (qword_1009CE488 != -1)
    swift_once(&qword_1009CE488, sub_10000A650);
  v4 = (void *)qword_100A1E8A8;
  sub_100059BB4();
  v5 = swift_allocObject(&unk_1008FF208, 32, 7);
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = v4;
  swift_bridgeObjectRetain(a2);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10035B0C0, v5);

  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

double sub_10035AAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10035AB24(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1008FF1B8, (uint64_t)sub_10035AD0C);
}

double sub_10035AAF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10035AB24(a1, a2, a3, a4, a5, a6, a7, (uint64_t)&unk_1008FF190, (uint64_t)sub_10035ACC8);
}

double sub_10035AB24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  double result;

  if (qword_1009CE488 != -1)
    swift_once(&qword_1009CE488, sub_10000A650);
  v13 = (void *)qword_100A1E8A8;
  sub_100059BB4();
  v14 = swift_allocObject(&unk_1008FF168, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = (_QWORD *)swift_allocObject(a8, 48, 7);
  v15[2] = v14;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a1;
  v16 = v13;
  swift_retain(v14);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a1);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(a9, v15);

  swift_release(v14);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

uint64_t sub_10035AC24()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC5Books18SidebarDataManager_userCollectionsPublisher));
}

uint64_t sub_10035AC38()
{
  _QWORD *v0;

  return swift_retain(*(_QWORD *)(*v0 + OBJC_IVAR____TtC5Books18SidebarDataManager_accountPublisher));
}

void sub_10035AC4C()
{
  sub_100359034();
}

uint64_t sub_10035AC78()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10035AC9C(void **a1)
{
  uint64_t v1;

  sub_10035959C(a1, v1);
}

double sub_10035ACA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1003596BC(a1, v1);
}

void sub_10035ACAC(uint64_t *a1)
{
  uint64_t v1;

  sub_100359810(a1, v1);
}

void sub_10035ACB4(uint64_t *a1)
{
  uint64_t v1;

  sub_10035A1CC(a1, v1);
}

void sub_10035ACBC(uint64_t *a1)
{
  uint64_t v1;

  sub_10035A3E8(a1, v1);
}

void sub_10035ACC8()
{
  uint64_t v0;

  sub_10041AB44(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10035ACD8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

double sub_10035AD0C()
{
  uint64_t v0;

  return sub_10041A7EC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

double sub_10035AD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  _QWORD v17[2];

  v4 = sub_10004CFD4(&qword_1009DCCA8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE488 != -1)
    swift_once(&qword_1009CE488, sub_10000A650);
  v8 = (void *)qword_100A1E8A8;
  v9 = (_QWORD *)swift_allocObject(&unk_1008FF258, 64, 7);
  v9[2] = v8;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = 0;
  v9[6] = 0;
  v9[7] = _swiftEmptyArrayStorage;
  v10 = sub_10004CFD4((uint64_t *)&unk_1009DCCB0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  swift_bridgeObjectRetain(a2);
  v11 = v8;
  v12 = Future.init(_:)(sub_10035B13C, v9);
  v17[1] = v12;
  v13 = sub_100030B34((unint64_t *)&unk_1009E2820, (uint64_t *)&unk_1009DCCB0, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  Publisher.map<A>(_:)(sub_1004196E0, 0, v10, &type metadata for String, v13);
  swift_release(v12);
  v14 = sub_100030B34((unint64_t *)&unk_1009DCCC0, &qword_1009DCCA8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v15 = Publisher.eraseToAnyPublisher()(v4, v14);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

double sub_10035AEE0(uint64_t a1)
{
  int64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  double result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_100045E44(0, v1, 0);
    v3 = (_QWORD *)(a1 + 40);
    do
    {
      v5 = *(v3 - 1);
      v4 = *v3;
      v7 = _swiftEmptyArrayStorage[2];
      v6 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain(*v3);
      if (v7 >= v6 >> 1)
        sub_100045E44(v6 > 1, v7 + 1, 1);
      v3 += 4;
      _swiftEmptyArrayStorage[2] = v7 + 1;
      v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v5;
      v8[5] = v4;
      --v1;
    }
    while (v1);
  }
  if (qword_1009CE488 != -1)
    swift_once(&qword_1009CE488, sub_10000A650);
  v9 = (void *)qword_100A1E8A8;
  sub_100059BB4();
  v10 = swift_allocObject(&unk_1008FF168, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = swift_allocObject(&unk_1008FF1E0, 32, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = _swiftEmptyArrayStorage;
  v12 = v9;
  swift_retain(v10);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10035B094, v11);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);

  swift_release(v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_10035B068()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10035B094()
{
  uint64_t v0;

  sub_100419FF0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10035B09C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_10035B0C0()
{
  uint64_t v0;

  sub_100419BB8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10035B0C8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10035B0F4()
{
  uint64_t *v0;

  sub_1004196EC(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10035B100()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

double sub_10035B13C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_10041B0D8(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

void sub_10035B248()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  double v13;
  objc_super v14;

  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for SleepButton();
  objc_msgSendSuper2(&v14, "layoutSubviews");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v5 = *(double *)&v0[OBJC_IVAR____TtC5Books11SleepButton_imageSize];
  v6 = *(double *)&v0[OBJC_IVAR____TtC5Books11SleepButton_imageSize + 8];
  v7 = *(double *)&v0[OBJC_IVAR____TtC5Books11SleepButton_internalPadding];
  v8 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v8, "scale");

  v9 = objc_msgSend(v0, "titleLabel");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setFrame:", CGRectRoundedForScale(v2 + v5 + (v4 - v6) * 0.5 + v7));

  }
  v11 = objc_msgSend(v0, "imageView");
  if (v11)
  {
    v12 = v11;
    v13 = CGRectCenterRectInRect(0.0);
    objc_msgSend(v12, "setFrame:", CGRectRoundedForScale(v13));

  }
}

uint64_t sub_10035B47C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v22[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v22[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0x7065656C53, 0xE500000000000000);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Accessibility label for the audiobook sleep timer button", 56, 2);
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  qword_1009DCCD0 = v18;
  *(_QWORD *)algn_1009DCCD8 = v20;
  return result;
}

uint64_t sub_10035B6D4()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Books11SleepButton_showsDuration) != 1)
    return 0;
  if (qword_1009CDDE8 != -1)
    swift_once(&qword_1009CDDE8, sub_1002CA940);
  v1 = objc_msgSend((id)qword_100A1E450, "stringFromTimeInterval:", round(*(double *)(v0 + OBJC_IVAR____TtC5Books11SleepButton_duration)));
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

id sub_10035B798(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  if (v6)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v6);
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

void *sub_10035B800()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Books11SleepButton_showsDuration) == 1)
  {
    v1 = objc_msgSend(v0, "titleLabel");
    v2 = v1;
    if (v1)
    {
      v3 = objc_msgSend(v1, "text");

      if (v3)
      {
        v2 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v3);

      }
      else
      {
        return 0;
      }
    }
  }
  else
  {
    if (qword_1009CE170 != -1)
      swift_once(&qword_1009CE170, sub_10035B47C);
    v2 = (void *)qword_1009DCCD0;
    swift_bridgeObjectRetain(*(_QWORD *)algn_1009DCCD8);
  }
  return v2;
}

void sub_10035B9B8()
{
  unsigned __int8 *v0;
  int v1;
  void *v2;
  double v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  double v13;
  double v14;
  double v15;
  id v16;
  Class isa;
  double v18;
  double *v19;

  if (v0[OBJC_IVAR____TtC5Books11SleepButton_showsDuration] == 1)
  {
    v1 = v0[OBJC_IVAR____TtC5Books11SleepButton_showsHours];
    v2 = (void *)objc_opt_self(NSString);
    v3 = 1800.0;
    if (v1)
      v3 = 288000.0;
    v4 = objc_msgSend(v2, "stringWithDuration:", v3);
    v5 = objc_msgSend(v0, "titleLabel");
    if (v5
      && (v6 = v5, v7 = objc_msgSend(v5, "attributedText"), v6, v7))
    {
      v8 = objc_msgSend(v7, "attributesAtIndex:effectiveRange:", 0, 0);

      type metadata accessor for Key(0);
      v10 = v9;
      v11 = sub_100352538();
      v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v8, v10, (char *)&type metadata for Any + 8, v11);

      if (!v4)
      {
LABEL_7:
        swift_bridgeObjectRelease(v12);
        v13 = 0.0;
LABEL_11:
        v15 = *(double *)&v0[OBJC_IVAR____TtC5Books11SleepButton_fixedHeight];
        v14 = v13 + v15 + *(double *)&v0[OBJC_IVAR____TtC5Books11SleepButton_internalPadding];
        goto LABEL_12;
      }
    }
    else
    {
      v12 = sub_1001DA774((uint64_t)_swiftEmptyArrayStorage);
      if (!v4)
        goto LABEL_7;
    }
    type metadata accessor for Key(0);
    sub_100352538();
    v16 = v4;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v16, "sizeWithAttributes:", isa, swift_bridgeObjectRelease(v12).n128_f64[0]);
    v13 = v18;

    goto LABEL_11;
  }
  v14 = *(double *)&v0[OBJC_IVAR____TtC5Books11SleepButton_fixedHeight];
  v15 = v14;
LABEL_12:
  v19 = (double *)&v0[OBJC_IVAR____TtC5Books11SleepButton_calculatedSize];
  *v19 = v14;
  v19[1] = v15;
}

id sub_10035BC7C(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  _QWORD *v4;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books11SleepButton_fixedHeight] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books11SleepButton_internalPadding] = 0;
  v3 = &v1[OBJC_IVAR____TtC5Books11SleepButton_calculatedSize];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books11SleepButton_duration] = 0;
  v4 = &v1[OBJC_IVAR____TtC5Books11SleepButton_imageSize];
  *v4 = 0;
  v4[1] = 0;
  v1[OBJC_IVAR____TtC5Books11SleepButton_showsDuration] = 0;
  v1[OBJC_IVAR____TtC5Books11SleepButton_showsHours] = 0;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for SleepButton();
  v5 = objc_msgSendSuper2(&v7, "initWithCoder:", a1);

  return v5;
}

id sub_10035BD48()
{
  return sub_10023803C(type metadata accessor for SleepButton);
}

uint64_t type metadata accessor for SleepButton()
{
  return objc_opt_self(_TtC5Books11SleepButton);
}

void sub_10035BD78()
{
  qword_1009DCCE0 = 0x4034000000000000;
}

void sub_10035BD88()
{
  qword_1009DCCE8 = 0x4024000000000000;
}

void sub_10035BD98()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  void (*v22)(char *, char *, _QWORD *);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  void *v28;
  NSString v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  Class isa;
  double v59;
  uint64_t v60;
  id v61;
  id v62;
  uint64_t v63;
  _QWORD *v64;
  id v65;
  uint64_t v66;

  v64 = (_QWORD *)type metadata accessor for Locale(0);
  v0 = *(v64 - 1);
  __chkstk_darwin(v64);
  v2 = (char *)&v60 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v60 - v4;
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v60 - v11;
  v65 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v65, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = (void *)objc_opt_self(UIFont);
  if (qword_1009CE178 != -1)
    swift_once(&qword_1009CE178, sub_10035BD78);
  v15 = objc_msgSend(v14, "systemFontOfSize:weight:", *(double *)&qword_1009DCCE0, UIFontWeightSemibold);
  objc_msgSend(v13, "setFont:", v15);

  v61 = (id)objc_opt_self(UIColor);
  v16 = objc_msgSend(v61, "bc_booksLabelColor");
  objc_msgSend(v13, "setTextColor:", v16);

  objc_msgSend(v13, "setAdjustsFontForContentSizeCategory:", 1);
  v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007C2D10);
  static Locale.current.getter(v17);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v63 = v6;
  v21 = v0;
  v22 = *(void (**)(char *, char *, _QWORD *))(v0 + 16);
  v23 = v64;
  v22(v2, v5, v64);
  String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v20, v2, "Custom Sleep Timer", 18, 2);
  v25 = v24;
  (*(void (**)(char *, _QWORD *))(v21 + 8))(v5, v23);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v63);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  objc_msgSend(v13, "setTextAlignment:", 4);
  objc_msgSend(v13, "sizeToFit");
  v27 = v65;
  objc_msgSend(v65, "addSubview:", v13);
  v28 = (void *)objc_opt_self(UIImage);
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v28, "__systemImageNamedSwift:", v29);

  v31 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v30);
  v32 = objc_msgSend(v13, "font");
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v32);

    objc_msgSend(v31, "setPreferredSymbolConfiguration:", v34);
    objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v35 = objc_msgSend(v61, "bc_booksLabelColor");
    objc_msgSend(v31, "setTintColor:", v35);

    objc_msgSend(v27, "addSubview:", v31);
    v64 = (_QWORD *)objc_opt_self(NSLayoutConstraint);
    v36 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v37 = swift_allocObject(v36, 80, 7);
    *(_OWORD *)(v37 + 16) = xmmword_10071C6F0;
    v38 = objc_msgSend(v27, "leadingAnchor");
    v39 = objc_msgSend(v31, "leadingAnchor");
    if (qword_1009CE180 != -1)
      swift_once(&qword_1009CE180, sub_10035BD88);
    v40 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v39, -*(double *)&qword_1009DCCE8);

    *(_QWORD *)(v37 + 32) = v40;
    v41 = objc_msgSend(v27, "heightAnchor");
    v42 = objc_msgSend(v41, "constraintEqualToConstant:", 56.0);

    *(_QWORD *)(v37 + 40) = v42;
    v43 = objc_msgSend(v13, "centerYAnchor");
    v44 = objc_msgSend(v27, "centerYAnchor");
    v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

    *(_QWORD *)(v37 + 48) = v45;
    v46 = objc_msgSend(v13, "leadingAnchor");
    v47 = objc_msgSend(v31, "trailingAnchor");
    v48 = objc_msgSend(v46, "constraintEqualToAnchor:constant:", v47, *(double *)&qword_1009DCCE8);

    *(_QWORD *)(v37 + 56) = v48;
    v49 = objc_msgSend(v13, "trailingAnchor");
    v50 = objc_msgSend(v27, "layoutMarginsGuide");
    v51 = objc_msgSend(v50, "trailingAnchor");

    v52 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v51, -*(double *)&qword_1009DCCE8);
    *(_QWORD *)(v37 + 64) = v52;
    v53 = objc_msgSend(v31, "centerYAnchor");
    v54 = objc_msgSend(v27, "centerYAnchor");
    v55 = objc_msgSend(v53, "constraintEqualToAnchor:", v54);

    *(_QWORD *)(v37 + 72) = v55;
    v66 = v37;
    specialized Array._endMutation()(v56);
    v57 = v66;
    sub_10034132C();
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v57).n128_u64[0];
    objc_msgSend(v64, "activateConstraints:", isa, v59);

    objc_msgSend(v62, "setView:", v27);
  }
  else
  {
    __break(1u);
  }
}

id sub_10035C5A0()
{
  return sub_10023803C(type metadata accessor for AudiobookSleepTimerCustomHeaderViewController);
}

uint64_t type metadata accessor for AudiobookSleepTimerCustomHeaderViewController()
{
  return objc_opt_self(_TtC5Books45AudiobookSleepTimerCustomHeaderViewController);
}

void sub_10035C5CC()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  id v18;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Books43AudiobookSleepTimerCustomDateViewController_datePicker];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v2, "setDatePickerMode:", 3);
  v18 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v18, "addSubview:", v2);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v5 = swift_allocObject(v4, 56, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1007118D0;
  v6 = objc_msgSend(v2, "rightAnchor");
  v7 = objc_msgSend(v18, "rightAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, 0.0);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v2, "leftAnchor");
  v10 = objc_msgSend(v18, "leftAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, 0.0);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v18, "heightAnchor");
  v13 = objc_msgSend(v2, "heightAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v5 + 48) = v14;
  specialized Array._endMutation()(v15);
  v16 = v5;
  sub_10034132C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

  objc_msgSend(v1, "setView:", v18);
}

id sub_10035C9EC()
{
  return sub_10023803C(type metadata accessor for AudiobookSleepTimerCustomDateViewController);
}

uint64_t type metadata accessor for AudiobookSleepTimerCustomDateViewController()
{
  return objc_opt_self(_TtC5Books43AudiobookSleepTimerCustomDateViewController);
}

void sub_10035CA28()
{
  qword_1009DCCF0 = 0x4034000000000000;
}

void sub_10035CA38()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  Class isa;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;

  v48 = type metadata accessor for Locale(0);
  v0 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v2 = (char *)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v46 - v4;
  v6 = type metadata accessor for String.LocalizationValue(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v46 - v11;
  v47 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v47, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v13 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v14 = (void *)objc_opt_self(UIFont);
  if (qword_1009CE188 != -1)
    swift_once(&qword_1009CE188, sub_10035CA28);
  v15 = objc_msgSend(v14, "systemFontOfSize:weight:", *(double *)&qword_1009DCCF0, UIFontWeightSemibold);
  objc_msgSend(v13, "setFont:", v15);

  v16 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksLabelColor");
  objc_msgSend(v13, "setTextColor:", v16);

  v17 = String.LocalizationValue.init(stringLiteral:)(1701736260, 0xE400000000000000);
  static Locale.current.getter(v17);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  v18 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v21 = v0;
  v22 = *(void (**)(char *, char *, uint64_t))(v0 + 16);
  v23 = v48;
  v22(v2, v5, v48);
  String.init(localized:table:bundle:locale:comment:)(v9, 0, 0, v20, v2, "Done", 4, 2);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v23);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  objc_msgSend(v13, "setTextAlignment:", 1);
  objc_msgSend(v13, "setAdjustsFontForContentSizeCategory:", 1);
  v27 = v47;
  objc_msgSend(v47, "addSubview:", v13);
  v28 = (void *)objc_opt_self(NSLayoutConstraint);
  v29 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v30 = swift_allocObject(v29, 64, 7);
  *(_OWORD *)(v30 + 16) = xmmword_1007143B0;
  v31 = objc_msgSend(v13, "widthAnchor");
  v32 = objc_msgSend(v27, "widthAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v30 + 32) = v33;
  v34 = objc_msgSend(v13, "heightAnchor");
  v35 = objc_msgSend(v27, "heightAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v30 + 40) = v36;
  v37 = objc_msgSend(v13, "centerYAnchor");
  v38 = objc_msgSend(v27, "centerYAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v30 + 48) = v39;
  v40 = objc_msgSend(v13, "leadingAnchor");
  v41 = objc_msgSend(v27, "leadingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v30 + 56) = v42;
  v50 = v30;
  specialized Array._endMutation()(v43);
  v44 = v50;
  sub_10034132C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v28, "activateConstraints:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

  objc_msgSend(v49, "setView:", v27);
}

id sub_10035CFC8(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(id))
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  id v12;
  id v13;
  objc_super v15;

  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
    v9 = v8;
    v10 = a4;
    v11 = String._bridgeToObjectiveC()();
    v12 = (id)swift_bridgeObjectRelease(v9);
  }
  else
  {
    v12 = a4;
    v11 = 0;
  }
  v15.receiver = a1;
  v15.super_class = (Class)a5(v12);
  v13 = objc_msgSendSuper2(&v15, "initWithNibName:bundle:", v11, a4);

  return v13;
}

id sub_10035D07C(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  objc_super v6;

  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return objc_msgSendSuper2(&v6, "initWithCoder:", a3);
}

id sub_10035D0C0()
{
  return sub_10023803C(type metadata accessor for AudiobookSleepTimerOKActionViewController);
}

uint64_t type metadata accessor for AudiobookSleepTimerOKActionViewController()
{
  return objc_opt_self(_TtC5Books41AudiobookSleepTimerOKActionViewController);
}

void sub_10035D0EC(double a1)
{
  char *v1;
  NSString v3;
  void *v4;
  int v5;
  int v6;
  char *v7;
  id v8;
  char *v9;
  char v10;

  v10 = 0;
  if (round(a1) > 0.0)
  {
    v3 = objc_msgSend((id)objc_opt_self(NSString), "stringWithDuration:explicitPositive:showsHours:", 0, &v10, a1);
    if (v3)
      goto LABEL_5;
    __break(1u);
  }
  v3 = String._bridgeToObjectiveC()();
LABEL_5:
  v4 = v3;
  objc_msgSend(v1, "setTitle:forState:", v3, 0);

  *(double *)&v1[OBJC_IVAR____TtC5Books11SleepButton_duration] = a1;
  v5 = a1 > 0.0;
  v6 = v1[OBJC_IVAR____TtC5Books11SleepButton_showsDuration];
  v1[OBJC_IVAR____TtC5Books11SleepButton_showsDuration] = v5;
  if (v5 != v6)
  {
    v7 = &v1[OBJC_IVAR____TtC5Books11SleepButton_calculatedSize];
    *(_QWORD *)v7 = 0;
    *((_QWORD *)v7 + 1) = 0;
    v8 = objc_msgSend(v1, "superview");
    objc_msgSend(v8, "setNeedsLayout");

  }
  v1[OBJC_IVAR____TtC5Books11SleepButton_showsHours] = v10;
  v9 = &v1[OBJC_IVAR____TtC5Books11SleepButton_calculatedSize];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
}

uint64_t sub_10035D240()
{
  uint64_t v0;

  v0 = static HorizontalAlignment.center.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_10035D268()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_10035D294();
  result = HorizontalAlignment.init(_:)(&_s12CustomCenterON, v0);
  qword_100A1E718 = result;
  return result;
}

unint64_t sub_10035D294()
{
  unint64_t result;

  result = qword_1009DCDD8;
  if (!qword_1009DCDD8)
  {
    result = swift_getWitnessTable(&unk_10071D108, &_s12CustomCenterON);
    atomic_store(result, (unint64_t *)&qword_1009DCDD8);
  }
  return result;
}

ValueMetadata *_s12CustomCenterOMa()
{
  return &_s12CustomCenterON;
}

_QWORD *sub_10035D2E8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  unint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_10071D300);
  v6 = v1;
  v4 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v4);
  swift_release(KeyPath);
  return CurrentValueSubject.value.getter(a1);
}

uint64_t sub_10035D360@<X0>(double *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  id v34;
  __int128 v35;
  void *v36;
  id v37;
  id v38;
  double v39;
  int v40;
  double v41;
  double v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  double v50;
  void *v51;
  unint64_t v52;
  id v53;
  id v54;
  double v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  id v60;
  id v61;
  double v62;
  double v63;
  uint64_t v64;
  char v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  double *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  __int128 v84;
  char *v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  double *v92;
  _QWORD v93[2];

  v2 = v1;
  v92 = a1;
  v3 = sub_10004CFD4(&qword_1009D55C0);
  __chkstk_darwin(v3);
  v5 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for PageTurnViewModel.State(0);
  v6 = __chkstk_darwin(v90);
  v87 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v80 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v80 - v12;
  __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v80 - v14);
  v16 = _s14descr1008F7311C5StateO4TurnVMa(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v91 = (uint64_t)&v80 - v21;
  KeyPath = swift_getKeyPath(&unk_10071D300);
  v23 = v1 + OBJC_IVAR____TtC5Books17PageTurnViewModel___observationRegistrar;
  v93[0] = v2;
  v88 = sub_1003611FC();
  v89 = v23;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v93, KeyPath, v88);
  swift_release(KeyPath);
  v24 = *(_QWORD *)(v2 + 88);
  CurrentValueSubject.value.getter(v15);
  sub_10035DA88((uint64_t)v5);
  sub_10002C8F0((uint64_t)v15, type metadata accessor for PageTurnViewModel.State);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
  {
    result = sub_100010960((uint64_t)v5, &qword_1009D55C0);
    _Q0 = 0uLL;
    v27 = 1.0;
    v28 = 0.0;
    v29 = 0.0;
    v30 = 0.0;
    goto LABEL_39;
  }
  v85 = v20;
  v86 = v24;
  v82 = v13;
  v83 = v10;
  v31 = v91;
  sub_10002C960((uint64_t)v5, v91, _s14descr1008F7311C5StateO4TurnVMa);
  v81 = v16;
  v32 = *(int *)(v16 + 24);
  v33 = static LocationMovement.Direction.== infix(_:_:)(*(unsigned __int8 *)(v31 + v32), 0);
  v34 = objc_msgSend((id)objc_opt_self(UITraitCollection), "currentTraitCollection");
  objc_msgSend(v34, "displayCornerRadius");
  v84 = v35;

  v36 = (void *)objc_opt_self(UIApplication);
  v37 = objc_msgSend(v36, "sharedApplication");
  v38 = objc_msgSend(v37, "userInterfaceLayoutDirection");

  v39 = 1.0;
  if (v38 == (id)1)
    v39 = -1.0;
  v40 = *(unsigned __int8 *)(v2 + 16);
  if (*(_BYTE *)(v2 + 16))
    v41 = -v39;
  else
    v41 = v39;
  if ((v33 & 1) != 0)
    v42 = -0.5;
  else
    v42 = 0.5;
  v43 = swift_getKeyPath(&unk_10071D350);
  v93[0] = v2;
  v44 = v88;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v93, v43, v88);
  swift_release(v43);
  if (*(_BYTE *)(v2 + 56) == 1)
  {
    if ((v33 & 1) != 0)
      v30 = 0.0;
    else
      v30 = 2.0;
    v45 = *(unsigned __int8 *)(v31 + v32);
    v46 = (uint64_t)v87;
    v48 = v82;
    v47 = v83;
    if (v45 == 1)
    {
      v49 = swift_getKeyPath(&unk_10071D300);
      v93[0] = v2;
      ObservationRegistrar.access<A, B>(_:keyPath:)(v93, v49, v44);
      swift_release(v49);
      CurrentValueSubject.value.getter(v48);
      v50 = sub_10035F228();
      sub_10002C8F0((uint64_t)v48, type metadata accessor for PageTurnViewModel.State);
      v51 = v36;
      v52 = v44;
      v53 = objc_msgSend(v51, "sharedApplication");
      v54 = objc_msgSend(v53, "userInterfaceLayoutDirection");

      v27 = 1.0;
      v55 = -1.0;
      if (v54 != (id)1)
        v55 = 1.0;
      if (v40)
        v55 = -v55;
      v56 = -(v50 * v55);
      sub_10035DC6C();
      v28 = (1.0 - v57) * v56;
    }
    else
    {
      v60 = objc_msgSend(v36, "sharedApplication");
      v61 = objc_msgSend(v60, "userInterfaceLayoutDirection");

      v27 = 1.0;
      v62 = -1.0;
      if (v61 != (id)1)
        v62 = 1.0;
      if (v40)
        v63 = -v62;
      else
        v63 = v62;
      v64 = swift_getKeyPath(&unk_10071D300);
      v93[0] = v2;
      v52 = v44;
      ObservationRegistrar.access<A, B>(_:keyPath:)(v93, v64, v44);
      swift_release(v64);
      CurrentValueSubject.value.getter(v48);
      v65 = sub_10035F3C4();
      sub_10002C8F0((uint64_t)v48, type metadata accessor for PageTurnViewModel.State);
      v66 = 220.0;
      if ((v65 & 1) != 0)
        v66 = 68.0;
      v67 = v63 * v66;
      sub_10035DC6C();
      v28 = v67 * (1.0 - v68);
    }
    v59 = v90;
  }
  else
  {
    sub_10035DC6C();
    v27 = v58;
    v30 = 2.0;
    v28 = 0.0;
    v59 = v90;
    v48 = v82;
    v47 = v83;
    v52 = v44;
    v46 = (uint64_t)v87;
  }
  v69 = swift_getKeyPath(&unk_10071D300);
  v93[0] = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v93, v69, v52);
  swift_release(v69);
  CurrentValueSubject.value.getter(v47);
  sub_10002CD84((uint64_t)v47, v46, type metadata accessor for PageTurnViewModel.State);
  LODWORD(v69) = swift_getEnumCaseMultiPayload(v46, v59);
  sub_10002C8F0(v46, type metadata accessor for PageTurnViewModel.State);
  sub_10002C8F0((uint64_t)v47, type metadata accessor for PageTurnViewModel.State);
  v70 = v91;
  v71 = (uint64_t)v85;
  sub_10002CD84(v91, (uint64_t)v85, _s14descr1008F7311C5StateO4TurnVMa);
  if ((_DWORD)v69)
  {
    v72 = *(_QWORD *)(v71 + *(int *)(v81 + 32));
    sub_10002C8F0(v71, _s14descr1008F7311C5StateO4TurnVMa);
    if (!v72)
      goto LABEL_36;
  }
  else
  {
    sub_10002C8F0(v71, _s14descr1008F7311C5StateO4TurnVMa);
  }
  v27 = 0.0;
LABEL_36:
  v29 = v42 * v41;
  v73 = swift_getKeyPath(&unk_10071D300);
  v93[0] = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v93, v73, v52);
  swift_release(v73);
  CurrentValueSubject.value.getter(v48);
  v74 = sub_10035F558();
  sub_10002C8F0((uint64_t)v48, type metadata accessor for PageTurnViewModel.State);
  if ((v74 & 0xFE) == 2)
  {
    v27 = 1.0;
    v28 = 0.0;
  }
  result = sub_10002C8F0(v70, _s14descr1008F7311C5StateO4TurnVMa);
  __asm { FMOV            V0.2D, #1.0 }
  *(_QWORD *)&_Q0 = v84;
LABEL_39:
  v79 = v92;
  *v92 = v28;
  v79[1] = v27;
  *((_OWORD *)v79 + 1) = _Q0;
  v79[4] = v29;
  v79[5] = v30;
  return result;
}

uint64_t sub_10035DA1C()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071D328);
  v4 = v0;
  v2 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t sub_10035DA88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009DD030);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(v2, (uint64_t)v6, type metadata accessor for PageTurnViewModel.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10002C960((uint64_t)v6, (uint64_t)v9, type metadata accessor for PageTurnViewModel.State.Active);
      v11 = type metadata accessor for PageTurnViewModel.State.Active(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 0, 1, v11);
      goto LABEL_6;
    }
  }
  else
  {
    sub_10002C8F0((uint64_t)v6, type metadata accessor for PageTurnViewModel.State);
  }
  v11 = type metadata accessor for PageTurnViewModel.State.Active(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
LABEL_6:
  type metadata accessor for PageTurnViewModel.State.Active(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) == 1)
  {
    sub_100010960((uint64_t)v9, &qword_1009DD030);
    v12 = _s14descr1008F7311C5StateO4TurnVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
  else
  {
    sub_10002CD84((uint64_t)&v9[*(int *)(v11 + 24)], a1, _s14descr1008F7311C5StateO4TurnVMa);
    sub_10002C8F0((uint64_t)v9, type metadata accessor for PageTurnViewModel.State.Active);
    v14 = _s14descr1008F7311C5StateO4TurnVMa(0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 0, 1, v14);
  }
}

void sub_10035DC6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t KeyPath;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D55C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PageTurnViewModel.State(0);
  v6 = __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v10 = (uint64_t *)((char *)&v24 - v9);
  KeyPath = swift_getKeyPath(&unk_10071D328);
  v25 = v0;
  v12 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, KeyPath, v12);
  swift_release(KeyPath);
  v13 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v0 + 80));
  v15 = v14;
  v17 = PageTurnStyle.rawValue.getter(2);
  v18 = v16;
  if (v13 == v17 && v15 == v16)
  {
    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v17, v16, 0);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v18);
    if ((v19 & 1) == 0)
    {
      v20 = swift_getKeyPath(&unk_10071D300);
      v25 = v1;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v20, v12);
      swift_release(v20);
      CurrentValueSubject.value.getter(v10);
      sub_10035DA88((uint64_t)v4);
      sub_10002C8F0((uint64_t)v10, type metadata accessor for PageTurnViewModel.State);
      v21 = _s14descr1008F7311C5StateO4TurnVMa(0);
      (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v4, 1, v21);
      sub_100010960((uint64_t)v4, &qword_1009D55C0);
    }
  }
  v22 = swift_getKeyPath(&unk_10071D300);
  v25 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, v22, v12);
  swift_release(v22);
  CurrentValueSubject.value.getter(v8);
  v23 = sub_10035F558();
  sub_10002C8F0((uint64_t)v8, type metadata accessor for PageTurnViewModel.State);
  __asm { BR              X10 }
}

uint64_t sub_10035DF48()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071D3A0);
  v4 = v0;
  v2 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_10035DFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t KeyPath;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, int *);
  unsigned int v34;
  double v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v41;
  id v42;
  double v43;
  double v44;
  uint64_t v45;
  char v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  id *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  double v59;
  id v60;
  id v61;
  double v62;
  double v63;
  double v64;
  double v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  id *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v1 = _s14descr1008F7311C5StateO4TurnVMa(0);
  v76 = *(_QWORD *)(v1 - 8);
  v77 = (int *)v1;
  v2 = __chkstk_darwin(v1);
  v67 = (uint64_t)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __chkstk_darwin(v2);
  v71 = (uint64_t)&v66 - v5;
  __chkstk_darwin(v4);
  v69 = (uint64_t)&v66 - v6;
  v80 = type metadata accessor for PageTurnViewModel.State(0);
  v7 = __chkstk_darwin(v80);
  v72 = (id *)((char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __chkstk_darwin(v7);
  v11 = (id *)((char *)&v66 - v10);
  __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v66 - v12);
  v14 = sub_10004CFD4(&qword_1009D55C0);
  v15 = __chkstk_darwin(v14);
  v68 = (uint64_t)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v75 = (uint64_t)&v66 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v66 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v66 - v22;
  KeyPath = swift_getKeyPath(&unk_10071D300);
  v81 = v0;
  v25 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v81, KeyPath, v25);
  swift_release(KeyPath);
  v26 = *(_QWORD *)(v0 + 88);
  CurrentValueSubject.value.getter(v13);
  sub_10035DA88((uint64_t)v23);
  v73 = v13;
  sub_10002C8F0((uint64_t)v13, type metadata accessor for PageTurnViewModel.State);
  v27 = swift_getKeyPath(&unk_10071D300);
  v74 = v0;
  v81 = v0;
  v78 = v25;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v81, v27, v25);
  swift_release(v27);
  v79 = v26;
  CurrentValueSubject.value.getter(v11);
  if (swift_getEnumCaseMultiPayload(v11, v80))
  {
    sub_10002C8F0((uint64_t)v11, type metadata accessor for PageTurnViewModel.State);
    sub_10000B5E4((uint64_t)v23, (uint64_t)v21, &qword_1009D55C0);
    v28 = v76;
    v29 = v77;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v76 + 48))(v21, 1, v77) == 1)
    {
      sub_100010960((uint64_t)v23, &qword_1009D55C0);
      sub_100010960((uint64_t)v21, &qword_1009D55C0);
      return 0;
    }
    v31 = v69;
    sub_10002C960((uint64_t)v21, v69, _s14descr1008F7311C5StateO4TurnVMa);
    v70 = *(id *)(v31 + v29[5]);
    sub_10002C8F0(v31, _s14descr1008F7311C5StateO4TurnVMa);
  }
  else
  {
    v70 = *v11;
    v28 = v76;
    v29 = v77;
  }
  v32 = v75;
  sub_10000B5E4((uint64_t)v23, v75, &qword_1009D55C0);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v28 + 48);
  v34 = v33(v32, 1, v29);
  v77 = (int *)v33;
  if (v34 == 1)
  {
    sub_100010960(v32, &qword_1009D55C0);
    v35 = 0.0;
    v36 = v73;
    v37 = v74;
  }
  else
  {
    v38 = v71;
    sub_10002C960(v32, v71, _s14descr1008F7311C5StateO4TurnVMa);
    v39 = swift_getKeyPath(&unk_10071D350);
    v37 = v74;
    v81 = v74;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v81, v39, v78);
    swift_release(v39);
    if (*(_BYTE *)(v37 + 56) == 1)
    {
      v36 = v73;
      v40 = v78;
      if ((*(_BYTE *)(v38 + v29[6]) & 1) != 0)
      {
        v41 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        v42 = objc_msgSend(v41, "userInterfaceLayoutDirection");

        v43 = 1.0;
        if (v42 == (id)1)
          v43 = -1.0;
        if (*(_BYTE *)(v37 + 16))
          v44 = -v43;
        else
          v44 = v43;
        v45 = swift_getKeyPath(&unk_10071D300);
        v81 = v37;
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v81, v45, v40);
        swift_release(v45);
        CurrentValueSubject.value.getter(v36);
        v46 = sub_10035F3C4();
        sub_10002C8F0((uint64_t)v36, type metadata accessor for PageTurnViewModel.State);
        v47 = 220.0;
        if ((v46 & 1) != 0)
          v47 = 68.0;
        v48 = v44 * v47;
        sub_10035DC6C();
        v50 = v49;
        sub_10002C8F0(v38, _s14descr1008F7311C5StateO4TurnVMa);
        v35 = v48 * v50;
      }
      else
      {
        v58 = swift_getKeyPath(&unk_10071D300);
        v81 = v37;
        ObservationRegistrar.access<A, B>(_:keyPath:)(&v81, v58, v40);
        swift_release(v58);
        CurrentValueSubject.value.getter(v36);
        v59 = sub_10035F228();
        sub_10002C8F0((uint64_t)v36, type metadata accessor for PageTurnViewModel.State);
        v60 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
        v61 = objc_msgSend(v60, "userInterfaceLayoutDirection");

        v62 = 1.0;
        if (v61 == (id)1)
          v62 = -1.0;
        if (*(_BYTE *)(v37 + 16))
          v62 = -v62;
        v63 = -(v59 * v62);
        sub_10035DC6C();
        v65 = v64;
        sub_10002C8F0(v38, _s14descr1008F7311C5StateO4TurnVMa);
        v35 = v65 * v63;
      }
      goto LABEL_20;
    }
    sub_10002C8F0(v38, _s14descr1008F7311C5StateO4TurnVMa);
    v35 = 0.0;
    v36 = v73;
  }
  v40 = v78;
LABEL_20:
  v51 = swift_getKeyPath(&unk_10071D350);
  v81 = v37;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v81, v51, v40);
  swift_release(v51);
  if (*(_BYTE *)(v37 + 56) == 1)
  {
    v52 = swift_getKeyPath(&unk_10071D300);
    v81 = v37;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v81, v52, v40);
    swift_release(v52);
    v53 = v72;
    CurrentValueSubject.value.getter(v72);
    if (swift_getEnumCaseMultiPayload(v53, v80))
    {
      sub_10002C8F0((uint64_t)v53, type metadata accessor for PageTurnViewModel.State);
      v54 = v68;
      sub_10000B5E4((uint64_t)v23, v68, &qword_1009D55C0);
      if (((unsigned int (*)(uint64_t, uint64_t, int *))v77)(v54, 1, v29) == 1)
      {
        sub_100010960(v54, &qword_1009D55C0);
      }
      else
      {
        v55 = v67;
        sub_10002C960(v54, v67, _s14descr1008F7311C5StateO4TurnVMa);
        static LocationMovement.Direction.== infix(_:_:)(*(unsigned __int8 *)(v55 + v29[6]), 0);
        sub_10002C8F0(v55, _s14descr1008F7311C5StateO4TurnVMa);
      }
    }
    else
    {

    }
  }
  v56 = swift_getKeyPath(&unk_10071D300);
  v81 = v37;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v81, v56, v40);
  swift_release(v56);
  CurrentValueSubject.value.getter(v36);
  v57 = sub_10035F558();
  sub_10002C8F0((uint64_t)v36, type metadata accessor for PageTurnViewModel.State);
  sub_100010960((uint64_t)v23, &qword_1009D55C0);
  if ((v57 & 0xFE) == 2)
    return 0;
  else
    return *(_QWORD *)&v35;
}

uint64_t sub_10035E788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = v0;
  KeyPath = swift_getKeyPath(&unk_10071D378);
  v6 = v0;
  v3 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 72));
  return v4;
}

double sub_10035E804()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;
  uint64_t v20;

  KeyPath = swift_getKeyPath(&unk_10071D328);
  v20 = v0;
  v2 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v20, KeyPath, v2);
  swift_release(KeyPath);
  v3 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v0 + 80));
  v5 = v4;
  v6 = PageTurnStyle.rawValue.getter(2);
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
    return 0.12;
  }
  v9 = v7;
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  if ((v10 & 1) != 0)
    return 0.12;
  if (qword_1009CE198 != -1)
    swift_once(&qword_1009CE198, sub_100361264);
  v11 = *(double *)&qword_1009DCDE0;
  if (qword_1009CE1A0 != -1)
    swift_once(&qword_1009CE1A0, sub_100361274);
  v12 = *(double *)&qword_1009DCDE8;
  if (qword_1009CE1A8 != -1)
    swift_once(&qword_1009CE1A8, sub_100361288);
  v13 = *(double *)&qword_1009DCDF0;
  sub_10035FF1C();
  v15 = v14;
  v16 = objc_msgSend(objc_allocWithZone((Class)CASpringAnimation), "init");
  objc_msgSend(v16, "setMass:", v11);
  objc_msgSend(v16, "setStiffness:", v12);
  objc_msgSend(v16, "setDamping:", v13);
  objc_msgSend(v16, "setInitialVelocity:", v15);
  objc_msgSend(v16, "settlingDuration");
  v18 = v17;

  return v18;
}

double sub_10035EA0C()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071D3C8);
  v4 = v0;
  v2 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(double *)(v0 + 24);
}

uint64_t sub_10035EA7C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 17) = a2;
  return result;
}

double *sub_10035EA84(double *result, double a2, double a3, double a4, double a5)
{
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  return result;
}

uint64_t sub_10035EA90()
{
  uint64_t v0;
  uint64_t KeyPath;
  unint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071D350);
  v4 = v0;
  v2 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + 56);
}

void sub_10035EAFC(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071D350);
  v6 = v3;
  v5 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 56);
}

double sub_10035EB70(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071D350);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_1003611FC();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1003612A4, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_10035EC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = a2;
  *(_QWORD *)(a1 + 72) = a3;
  swift_bridgeObjectRetain(a3);
  return swift_bridgeObjectRelease(v3);
}

void sub_10035EC38(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071D328);
  v6 = v3;
  v5 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 80);
}

double sub_10035ECAC(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071D328);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_1003611FC();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1003612B4, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

double sub_10035ED3C(uint64_t a1, char a2)
{
  uint64_t KeyPath;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double result;
  _QWORD v15[3];
  char v16;
  uint64_t v17;

  *(_BYTE *)(a1 + 80) = a2;
  KeyPath = swift_getKeyPath(&unk_10071D328);
  v17 = a1;
  v4 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v17, KeyPath, v4);
  swift_release(KeyPath);
  v5 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(a1 + 80));
  v7 = v6;
  v8 = PageTurnStyle.rawValue.getter(0);
  if (v5 == v8 && v7 == v9)
  {
    v12 = 1;
    v11 = v7;
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
  }
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v11);
  v13 = swift_getKeyPath(&unk_10071D350);
  __chkstk_darwin(v13);
  v15[2] = a1;
  v16 = v12 & 1;
  v17 = a1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v17, v13, sub_1003616B0, v15, (char *)&type metadata for () + 8, v4);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

_QWORD *sub_10035EE90@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071D300);
  v7 = v3;
  v5 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  return CurrentValueSubject.value.getter(a2);
}

uint64_t sub_10035EF08(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t KeyPath;
  unint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002CD84(a1, (uint64_t)v6, type metadata accessor for PageTurnViewModel.State);
  v7 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071D300);
  v12 = v7;
  v13 = v6;
  v14 = v7;
  v9 = sub_1003611FC();
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v14, KeyPath, sub_1003616C4, v11, (char *)&type metadata for () + 8, v9);
  swift_release(KeyPath);
  return sub_10002C8F0((uint64_t)v6, type metadata accessor for PageTurnViewModel.State);
}

uint64_t sub_10035EFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;

  v3 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(a2, (uint64_t)v5, v6);
  return CurrentValueSubject.value.setter(v5);
}

void sub_10035F088()
{
  uint64_t v0;
  char *v1;

  v1 = (char *)sub_10035F0F4
     + 4
     * byte_10071D145[*(unsigned __int8 *)(v0
                                         + *(int *)(type metadata accessor for PageTurnViewModel.State.Active(0) + 28))];
  __asm { BR              X10 }
}

uint64_t sub_10035F0F4()
{
  Swift::String v0;
  Swift::String v1;
  uint64_t v3;

  v0._countAndFlagsBits = 0x696D726F66726570;
  v0._object = (void *)0xEE006E727554676ELL;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(0xEE006E727554676ELL);
  v1._countAndFlagsBits = 62;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  return v3;
}

uint64_t sub_10035F1A0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_10035F1D4 + 4 * byte_10071D14A[*v0]))(0x727554736465656ELL, 0xE90000000000006ELL);
}

uint64_t sub_10035F1D4()
{
  return 0x696D726F66726570;
}

double sub_10035F228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  double v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009DD030);
  __chkstk_darwin(v5);
  v7 = (double *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002CD84(v1, (uint64_t)v4, type metadata accessor for PageTurnViewModel.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v2);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10002C960((uint64_t)v4, (uint64_t)v7, type metadata accessor for PageTurnViewModel.State.Active);
      v9 = type metadata accessor for PageTurnViewModel.State.Active(0);
      (*(void (**)(double *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
      goto LABEL_6;
    }
  }
  else
  {
    sub_10002C8F0((uint64_t)v4, type metadata accessor for PageTurnViewModel.State);
  }
  v9 = type metadata accessor for PageTurnViewModel.State.Active(0);
  (*(void (**)(double *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
LABEL_6:
  type metadata accessor for PageTurnViewModel.State.Active(0);
  if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
    sub_100010960((uint64_t)v7, &qword_1009DD030);
    return 0.0;
  }
  else
  {
    v10 = *v7;
    sub_10002C8F0((uint64_t)v7, type metadata accessor for PageTurnViewModel.State.Active);
  }
  return v10;
}

uint64_t sub_10035F3C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009DD030);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(v1, (uint64_t)v4, type metadata accessor for PageTurnViewModel.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v2);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10002C960((uint64_t)v4, (uint64_t)v7, type metadata accessor for PageTurnViewModel.State.Active);
      v9 = type metadata accessor for PageTurnViewModel.State.Active(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
      goto LABEL_6;
    }
  }
  else
  {
    sub_10002C8F0((uint64_t)v4, type metadata accessor for PageTurnViewModel.State);
  }
  v9 = type metadata accessor for PageTurnViewModel.State.Active(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
LABEL_6:
  type metadata accessor for PageTurnViewModel.State.Active(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
    sub_100010960((uint64_t)v7, &qword_1009DD030);
    return 0;
  }
  else
  {
    v10 = v7[8];
    sub_10002C8F0((uint64_t)v7, type metadata accessor for PageTurnViewModel.State.Active);
  }
  return v10;
}

uint64_t sub_10035F558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009DD030);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(v1, (uint64_t)v4, type metadata accessor for PageTurnViewModel.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v2);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10002C960((uint64_t)v4, (uint64_t)v7, type metadata accessor for PageTurnViewModel.State.Active);
      v9 = type metadata accessor for PageTurnViewModel.State.Active(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
      goto LABEL_6;
    }
  }
  else
  {
    sub_10002C8F0((uint64_t)v4, type metadata accessor for PageTurnViewModel.State);
  }
  v9 = type metadata accessor for PageTurnViewModel.State.Active(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
LABEL_6:
  type metadata accessor for PageTurnViewModel.State.Active(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v7, 1, v9) == 1)
  {
    sub_100010960((uint64_t)v7, &qword_1009DD030);
    return 4;
  }
  else
  {
    v10 = v7[*(int *)(v9 + 28)];
    sub_10002C8F0((uint64_t)v7, type metadata accessor for PageTurnViewModel.State.Active);
  }
  return v10;
}

uint64_t sub_10035F6F0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v3 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009DD030);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v20 - v10;
  sub_10002CD84(v1, (uint64_t)v5, type metadata accessor for PageTurnViewModel.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v3);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10002C960((uint64_t)v5, (uint64_t)v11, type metadata accessor for PageTurnViewModel.State.Active);
      v13 = type metadata accessor for PageTurnViewModel.State.Active(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 0, 1, v13);
      goto LABEL_6;
    }
  }
  else
  {
    sub_10002C8F0((uint64_t)v5, type metadata accessor for PageTurnViewModel.State);
  }
  v13 = type metadata accessor for PageTurnViewModel.State.Active(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
LABEL_6:
  type metadata accessor for PageTurnViewModel.State.Active(0);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48);
  if (v14(v11, 1, v13))
  {
    sub_10000B5E4((uint64_t)v11, (uint64_t)v9, &qword_1009DD030);
    sub_10002C8F0(v1, type metadata accessor for PageTurnViewModel.State);
    if (v14(v9, 1, v13) == 1)
    {
      sub_100010960((uint64_t)v9, &qword_1009DD030);
      v15 = 2;
    }
    else
    {
      sub_10002C960((uint64_t)v9, v1, type metadata accessor for PageTurnViewModel.State.Active);
      v15 = 1;
    }
    swift_storeEnumTagMultiPayload(v1, v3, v15);
    return sub_100010960((uint64_t)v11, &qword_1009DD030);
  }
  else
  {
    v11[*(int *)(v13 + 28)] = a1;
    sub_10002C8F0(v1, type metadata accessor for PageTurnViewModel.State);
    if (v14(v11, 1, v13) == 1)
    {
      sub_100010960((uint64_t)v11, &qword_1009DD030);
      v16 = v1;
      v17 = v3;
      v18 = 2;
    }
    else
    {
      sub_10002C960((uint64_t)v11, v1, type metadata accessor for PageTurnViewModel.State.Active);
      v16 = v1;
      v17 = v3;
      v18 = 1;
    }
    return swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
}

uint64_t sub_10035F978(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = v1;
  v4 = type metadata accessor for PageTurnViewModel.State.Active(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (id *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002CD84(v3, (uint64_t)v9, type metadata accessor for PageTurnViewModel.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v9, a1);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10002C960((uint64_t)v9, (uint64_t)v6, type metadata accessor for PageTurnViewModel.State.Active);
      sub_10035F088();
      v12 = v11;
      sub_10002C8F0((uint64_t)v6, type metadata accessor for PageTurnViewModel.State.Active);
    }
    else
    {
      return 1701602409;
    }
  }
  else
  {

    return 0x6E69726170657270;
  }
  return v12;
}

uint64_t sub_10035FA9C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t KeyPath;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v5 = a1 & 1;
  v6 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 1;
  *(_BYTE *)(v3 + 56) = 1;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0xE000000000000000;
  swift_storeEnumTagMultiPayload(v8, v10, 2);
  v11 = sub_10004CFD4(&qword_1009DD040);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  *(_QWORD *)(v3 + 88) = CurrentValueSubject.init(_:)(v8);
  *(_QWORD *)(v3 + 96) = _swiftEmptyArrayStorage;
  _s5Books17REActionMenuStateC22__observationRegistrar33_32ABA65274D463EF405FFF160E47F6ACLL11Observation0nF0Vvpfi_0();
  *(_BYTE *)(v3 + 16) = v5;
  *(_BYTE *)(v3 + 80) = a2;
  *(_BYTE *)(v3 + 17) = 0;
  v12 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  *(_OWORD *)(v3 + 24) = *(_OWORD *)&UIEdgeInsetsZero.top;
  *(_OWORD *)(v3 + 40) = v12;
  KeyPath = swift_getKeyPath(&unk_10071D328);
  v25 = v3;
  v14 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v25, KeyPath, v14);
  swift_release(KeyPath);
  v15 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v3 + 80));
  v17 = v16;
  v19 = PageTurnStyle.rawValue.getter(0);
  v20 = v18;
  if (v15 != v19 || (v21 = v17, v17 != v18))
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, v19, v18, 0);
    v21 = v20;
  }
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v21);
  v22 = swift_getKeyPath(&unk_10071D350);
  __chkstk_darwin(v22);
  *(&v24 - 2) = v3;
  *((_BYTE *)&v24 - 8) = v9 & 1;
  v25 = v3;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v25, v22, sub_1003616B0, &v24 - 4, (char *)&type metadata for () + 8, v14);
  swift_release(v22);
  return v3;
}

uint64_t sub_10035FCAC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t v8;
  _BYTE v10[16];
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v3 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  KeyPath = swift_getKeyPath(&unk_10071D300);
  v13 = v1;
  v7 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v13, KeyPath, v7);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(v5);
  sub_10035F6F0(a1);
  v8 = swift_getKeyPath(&unk_10071D300);
  v11 = v1;
  v12 = v5;
  v13 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, v8, sub_100361244, v10, (char *)&type metadata for () + 8, v7);
  swift_release(v8);
  return sub_10002C8F0((uint64_t)v5, type metadata accessor for PageTurnViewModel.State);
}

uint64_t sub_10035FDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;

  v0 = type metadata accessor for Logger(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v4 = Logger.init(_:)((id)qword_100A1ECD8);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.info.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Cancel reset animation", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_10035FCAC(4);
}

void sub_10035FF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t KeyPath;
  unint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_10004CFD4(&qword_1009D55C0);
  __chkstk_darwin(v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = _s14descr1008F7311C5StateO4TurnVMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10071D300);
  v16 = v0;
  v12 = sub_1003611FC();
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v16, KeyPath, v12);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(v6);
  sub_10035DA88((uint64_t)v3);
  sub_10002C8F0((uint64_t)v6, type metadata accessor for PageTurnViewModel.State);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
  {
    sub_100010960((uint64_t)v3, &qword_1009D55C0);
  }
  else
  {
    sub_10002C960((uint64_t)v3, (uint64_t)v10, _s14descr1008F7311C5StateO4TurnVMa);
    sub_10035DFB4();
    if (v13)
    {
      v14 = v13;
      sub_10002C8F0((uint64_t)v10, _s14descr1008F7311C5StateO4TurnVMa);

    }
    else
    {
      sub_10002C8F0((uint64_t)v10, _s14descr1008F7311C5StateO4TurnVMa);
    }
  }
}

uint64_t sub_10036012C()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_bridgeObjectRelease(v0[9]);
  swift_release(v0[11]);
  swift_bridgeObjectRelease(v0[12]);
  v1 = (char *)v0 + OBJC_IVAR____TtC5Books17PageTurnViewModel___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_100360194()
{
  return type metadata accessor for PageTurnViewModel(0);
}

uint64_t type metadata accessor for PageTurnViewModel(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009DCE28, (uint64_t)&nominal type descriptor for PageTurnViewModel);
}

uint64_t sub_1003601B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = &unk_10071D1B8;
  v4[1] = &unk_10071D1B8;
  v4[2] = &unk_10071D1D0;
  v4[3] = &unk_10071D1B8;
  v4[4] = &unk_10071D1E8;
  v4[5] = &unk_10071D200;
  v4[6] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[7] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

char *sub_100360264(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v28;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v11);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v28 = type metadata accessor for PageTurnViewModel.State.Active(0);
      v12 = *(int *)(v28 + 24);
      v13 = &a1[v12];
      v14 = &a2[v12];
      v15 = type metadata accessor for SpreadPaginationEntity(0);
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      v17 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
      v18 = v17[5];
      v19 = *(void **)&v14[v18];
      *(_QWORD *)&v13[v18] = v19;
      v13[v17[6]] = v14[v17[6]];
      v20 = v17[7];
      v21 = &v13[v20];
      v22 = &v14[v20];
      v23 = v19;
      v16(v21, v22, v15);
      v24 = v17[8];
      v25 = *(void **)&v14[v24];
      *(_QWORD *)&v13[v24] = v25;
      *(_QWORD *)&v13[v17[9]] = *(_QWORD *)&v14[v17[9]];
      *(_QWORD *)&v13[v17[10]] = *(_QWORD *)&v14[v17[10]];
      a1[*(int *)(v28 + 28)] = a2[*(int *)(v28 + 28)];
      v26 = v25;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v10 = v9;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t type metadata accessor for PageTurnViewModel.State.Active(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009DCFF0, (uint64_t)&nominal type descriptor for PageTurnViewModel.State.Active);
}

void sub_100360418(id *a1, uint64_t a2)
{
  id *v2;
  int EnumCaseMultiPayload;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  int *v7;

  v2 = a1;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
      return;
    v4 = (char *)v2 + *(int *)(type metadata accessor for PageTurnViewModel.State.Active(0) + 24);
    v5 = type metadata accessor for SpreadPaginationEntity(0);
    v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v6(v4, v5);
    v7 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);

    v6(&v4[v7[7]], v5);
    v2 = (id *)&v4[v7[8]];
  }

}

char *sub_1003604C0(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v25;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1[8] = a2[8];
    v25 = type metadata accessor for PageTurnViewModel.State.Active(0);
    v9 = *(int *)(v25 + 24);
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for SpreadPaginationEntity(0);
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v14 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
    v15 = v14[5];
    v16 = *(void **)&v11[v15];
    *(_QWORD *)&v10[v15] = v16;
    v10[v14[6]] = v11[v14[6]];
    v17 = v14[7];
    v18 = &v10[v17];
    v19 = &v11[v17];
    v20 = v16;
    v13(v18, v19, v12);
    v21 = v14[8];
    v22 = *(void **)&v11[v21];
    *(_QWORD *)&v10[v21] = v22;
    *(_QWORD *)&v10[v14[9]] = *(_QWORD *)&v11[v14[9]];
    *(_QWORD *)&v10[v14[10]] = *(_QWORD *)&v11[v14[10]];
    a1[*(int *)(v25 + 28)] = a2[*(int *)(v25 + 28)];
    v23 = v22;
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = *(void **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v8 = v7;
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

char *sub_100360638(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v25;

  if (a1 != a2)
  {
    sub_10002C8F0((uint64_t)a1, type metadata accessor for PageTurnViewModel.State);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v25 = type metadata accessor for PageTurnViewModel.State.Active(0);
      v9 = *(int *)(v25 + 24);
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for SpreadPaginationEntity(0);
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      v13(v10, v11, v12);
      v14 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
      v15 = v14[5];
      v16 = *(void **)&v11[v15];
      *(_QWORD *)&v10[v15] = v16;
      v10[v14[6]] = v11[v14[6]];
      v17 = v14[7];
      v18 = &v10[v17];
      v19 = &v11[v17];
      v20 = v16;
      v13(v18, v19, v12);
      v21 = v14[8];
      v22 = *(void **)&v11[v21];
      *(_QWORD *)&v10[v21] = v22;
      *(_QWORD *)&v10[v14[9]] = *(_QWORD *)&v11[v14[9]];
      *(_QWORD *)&v10[v14[10]] = *(_QWORD *)&v11[v14[10]];
      a1[*(int *)(v25 + 28)] = a2[*(int *)(v25 + 28)];
      v23 = v22;
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v8 = v7;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t type metadata accessor for PageTurnViewModel.State(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009DCF60, (uint64_t)&nominal type descriptor for PageTurnViewModel.State);
}

char *sub_1003607DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1[8] = a2[8];
    v6 = type metadata accessor for PageTurnViewModel.State.Active(0);
    v7 = *(int *)(v6 + 24);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = type metadata accessor for SpreadPaginationEntity(0);
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    v12 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
    *(_QWORD *)&v8[v12[5]] = *(_QWORD *)&v9[v12[5]];
    v8[v12[6]] = v9[v12[6]];
    v11(&v8[v12[7]], &v9[v12[7]], v10);
    *(_QWORD *)&v8[v12[8]] = *(_QWORD *)&v9[v12[8]];
    *(_QWORD *)&v8[v12[9]] = *(_QWORD *)&v9[v12[9]];
    *(_QWORD *)&v8[v12[10]] = *(_QWORD *)&v9[v12[10]];
    a1[*(int *)(v6 + 28)] = a2[*(int *)(v6 + 28)];
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_100360914(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;

  if (a1 != a2)
  {
    sub_10002C8F0((uint64_t)a1, type metadata accessor for PageTurnViewModel.State);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      v6 = type metadata accessor for PageTurnViewModel.State.Active(0);
      v7 = *(int *)(v6 + 24);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for SpreadPaginationEntity(0);
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      v12 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
      *(_QWORD *)&v8[v12[5]] = *(_QWORD *)&v9[v12[5]];
      v8[v12[6]] = v9[v12[6]];
      v11(&v8[v12[7]], &v9[v12[7]], v10);
      *(_QWORD *)&v8[v12[8]] = *(_QWORD *)&v9[v12[8]];
      *(_QWORD *)&v8[v12[9]] = *(_QWORD *)&v9[v12[9]];
      *(_QWORD *)&v8[v12[10]] = *(_QWORD *)&v9[v12[10]];
      a1[*(int *)(v6 + 28)] = a2[*(int *)(v6 + 28)];
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100360A68(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for PageTurnViewModel.State.Active(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_100360ADC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  int *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v22);
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = *(int *)(a3 + 24);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = type metadata accessor for SpreadPaginationEntity(0);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
    v13 = v12[5];
    v14 = *(void **)(v9 + v13);
    *(_QWORD *)(v8 + v13) = v14;
    *(_BYTE *)(v8 + v12[6]) = *(_BYTE *)(v9 + v12[6]);
    v15 = v12[7];
    v16 = v8 + v15;
    v17 = v9 + v15;
    v18 = v14;
    v11(v16, v17, v10);
    v19 = v12[8];
    v20 = *(void **)(v9 + v19);
    *(_QWORD *)(v8 + v19) = v20;
    *(_QWORD *)(v8 + v12[9]) = *(_QWORD *)(v9 + v12[9]);
    *(_QWORD *)(v8 + v12[10]) = *(_QWORD *)(v9 + v12[10]);
    *((_BYTE *)v4 + *(int *)(a3 + 28)) = *((_BYTE *)a2 + *(int *)(a3 + 28));
    v21 = v20;
  }
  return v4;
}

void sub_100360C08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  int *v5;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = type metadata accessor for SpreadPaginationEntity(0);
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v5 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);

  v4(v2 + v5[7], v3);
}

uint64_t sub_100360C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for SpreadPaginationEntity(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
  v12 = v11[5];
  v13 = *(void **)(v8 + v12);
  *(_QWORD *)(v7 + v12) = v13;
  *(_BYTE *)(v7 + v11[6]) = *(_BYTE *)(v8 + v11[6]);
  v14 = v11[7];
  v15 = v7 + v14;
  v16 = v8 + v14;
  v17 = v13;
  v10(v15, v16, v9);
  v18 = v11[8];
  v19 = *(void **)(v8 + v18);
  *(_QWORD *)(v7 + v18) = v19;
  *(_QWORD *)(v7 + v11[9]) = *(_QWORD *)(v8 + v11[9]);
  *(_QWORD *)(v7 + v11[10]) = *(_QWORD *)(v8 + v11[10]);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  v20 = v19;
  return a1;
}

uint64_t sub_100360D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for SpreadPaginationEntity(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v11 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
  v12 = v11[5];
  v13 = *(void **)(v8 + v12);
  v14 = *(void **)(v7 + v12);
  *(_QWORD *)(v7 + v12) = v13;
  v15 = v13;

  *(_BYTE *)(v7 + v11[6]) = *(_BYTE *)(v8 + v11[6]);
  v10(v7 + v11[7], v8 + v11[7], v9);
  v16 = v11[8];
  v17 = *(void **)(v7 + v16);
  v18 = *(void **)(v8 + v16);
  *(_QWORD *)(v7 + v16) = v18;
  v19 = v18;

  *(_QWORD *)(v7 + v11[9]) = *(_QWORD *)(v8 + v11[9]);
  *(_QWORD *)(v7 + v11[10]) = *(_QWORD *)(v8 + v11[10]);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100360E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int *v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for SpreadPaginationEntity(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
  *(_QWORD *)(v7 + v11[5]) = *(_QWORD *)(v8 + v11[5]);
  *(_BYTE *)(v7 + v11[6]) = *(_BYTE *)(v8 + v11[6]);
  v10(v7 + v11[7], v8 + v11[7], v9);
  *(_QWORD *)(v7 + v11[8]) = *(_QWORD *)(v8 + v11[8]);
  *(_QWORD *)(v7 + v11[9]) = *(_QWORD *)(v8 + v11[9]);
  *(_QWORD *)(v7 + v11[10]) = *(_QWORD *)(v8 + v11[10]);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100360F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  int *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = type metadata accessor for SpreadPaginationEntity(0);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v11 = (int *)_s14descr1008F7311C5StateO4TurnVMa(0);
  v12 = v11[5];
  v13 = *(void **)(v7 + v12);
  *(_QWORD *)(v7 + v12) = *(_QWORD *)(v8 + v12);

  *(_BYTE *)(v7 + v11[6]) = *(_BYTE *)(v8 + v11[6]);
  v10(v7 + v11[7], v8 + v11[7], v9);
  v14 = v11[8];
  v15 = *(void **)(v7 + v14);
  *(_QWORD *)(v7 + v14) = *(_QWORD *)(v8 + v14);

  *(_QWORD *)(v7 + v11[9]) = *(_QWORD *)(v8 + v11[9]);
  *(_QWORD *)(v7 + v11[10]) = *(_QWORD *)(v8 + v11[10]);
  *(_BYTE *)(a1 + *(int *)(a3 + 28)) = *(_BYTE *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100361068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100361074);
}

uint64_t sub_100361074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = _s14descr1008F7311C5StateO4TurnVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v10);
  }
}

uint64_t sub_1003610F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003610FC);
}

uint64_t sub_1003610FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = a2 + 1;
  }
  else
  {
    v7 = _s14descr1008F7311C5StateO4TurnVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_10036116C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[1] = &unk_10071D1B8;
  result = _s14descr1008F7311C5StateO4TurnVMa(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    v4[3] = &unk_10071D228;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
    return 0;
  }
  return result;
}

unint64_t sub_1003611FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D6380;
  if (!qword_1009D6380)
  {
    v1 = type metadata accessor for PageTurnViewModel(255);
    result = swift_getWitnessTable(&unk_10071D2E0, v1);
    atomic_store(result, (unint64_t *)&qword_1009D6380);
  }
  return result;
}

uint64_t sub_100361244()
{
  uint64_t v0;

  return sub_10035EFF8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_100361264()
{
  qword_1009DCDE0 = 0x3FF0000000000000;
}

void sub_100361274()
{
  qword_1009DCDE8 = 0x4072C00000000000;
}

void sub_100361288()
{
  qword_1009DCDF0 = 0x4041800000000000;
}

void sub_1003612A4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 56) = *(_BYTE *)(v0 + 24);
}

double sub_1003612B4()
{
  uint64_t v0;

  return sub_10035ED3C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1003612D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;

  if (*(double *)a1 != *(double *)a2)
    return 0;
  if (*(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
    return 0;
  v4 = type metadata accessor for PageTurnViewModel.State.Active(0);
  if (!sub_100264044(a1 + *(int *)(v4 + 24), a2 + *(int *)(v4 + 24)))
    return 0;
  v5 = *(int *)(v4 + 28);
  v6 = *(unsigned __int8 *)(a1 + v5);
  v7 = *(unsigned __int8 *)(a2 + v5);
  if (v6 == 4)
  {
    if (v7 != 4)
      return 0;
  }
  else if (v7 == 4 || v6 != v7)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_100361374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  char v19;
  uint64_t v20;
  uint64_t v22;

  v4 = type metadata accessor for PageTurnViewModel.State.Active(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v22 - v8;
  v10 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009DD038);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_10002CD84(a1, (uint64_t)v16, type metadata accessor for PageTurnViewModel.State);
  sub_10002CD84(a2, v17, type metadata accessor for PageTurnViewModel.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v10);
  if (!EnumCaseMultiPayload)
  {
    if (!swift_getEnumCaseMultiPayload(v17, v10))
    {
      sub_10002C8F0(v17, type metadata accessor for PageTurnViewModel.State);
      v20 = (uint64_t)v16;
LABEL_9:
      sub_10002C8F0(v20, type metadata accessor for PageTurnViewModel.State);
      v19 = 1;
      return v19 & 1;
    }
LABEL_11:
    sub_100010960((uint64_t)v16, &qword_1009DD038);
    v19 = 0;
    return v19 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload(v17, v10) == 2)
    {
      v20 = (uint64_t)v16;
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  sub_10002CD84((uint64_t)v16, (uint64_t)v12, type metadata accessor for PageTurnViewModel.State);
  if (swift_getEnumCaseMultiPayload(v17, v10) != 1)
  {
    sub_10002C8F0((uint64_t)v12, type metadata accessor for PageTurnViewModel.State.Active);
    goto LABEL_11;
  }
  sub_10002C960((uint64_t)v12, (uint64_t)v9, type metadata accessor for PageTurnViewModel.State.Active);
  sub_10002C960(v17, (uint64_t)v7, type metadata accessor for PageTurnViewModel.State.Active);
  v19 = sub_1003612D8((uint64_t)v9, (uint64_t)v7);
  sub_10002C8F0((uint64_t)v7, type metadata accessor for PageTurnViewModel.State.Active);
  sub_10002C8F0((uint64_t)v9, type metadata accessor for PageTurnViewModel.State.Active);
  sub_10002C8F0((uint64_t)v16, type metadata accessor for PageTurnViewModel.State);
  return v19 & 1;
}

uint64_t storeEnumTagSinglePayload for PageTurnViewModel.State.AnimationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10036162C + 4 * byte_10071D153[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100361660 + 4 * byte_10071D14E[v4]))();
}

uint64_t sub_100361660(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100361668(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100361670);
  return result;
}

uint64_t sub_10036167C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100361684);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100361688(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100361690(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageTurnViewModel.State.AnimationState()
{
  return &type metadata for PageTurnViewModel.State.AnimationState;
}

void sub_1003616B0()
{
  sub_1003612A4();
}

uint64_t sub_1003616C4()
{
  return sub_100361244();
}

uint64_t *sub_1003616D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t, __n128);
  __n128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t, __n128);
  __n128 v28;
  char *v30;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = type metadata accessor for HistoryModel.Entry(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = sub_10004CFD4(&qword_1009DD048);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      v13 = *(int *)(v7 + 20);
      v30 = (char *)a1 + v13;
      v14 = (char *)a2 + v13;
      v15 = type metadata accessor for UUID(0);
      v16 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v15 - 8) + 16);
      v17 = swift_bridgeObjectRetain(v12);
      v16(v30, v14, v15, v17);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v18 = *(int *)(a3 + 20);
    v19 = (uint64_t *)((char *)a1 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    if (v9(v20, 1, v7))
    {
      v21 = sub_10004CFD4(&qword_1009DD048);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v22 = v20[1];
      *v19 = *v20;
      v19[1] = v22;
      v23 = *(int *)(v7 + 20);
      v24 = (char *)v19 + v23;
      v25 = (char *)v20 + v23;
      v26 = type metadata accessor for UUID(0);
      v27 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v26 - 8) + 16);
      v28 = swift_bridgeObjectRetain(v22);
      v27(v24, v25, v26, v28);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for HistoryModel.Entry(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009DD140, (uint64_t)&nominal type descriptor for HistoryModel.Entry);
}

uint64_t sub_1003618AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for HistoryModel.Entry(0);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
    v6 = a1 + *(int *)(v4 + 20);
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v8, 1, v4);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v8 + 8));
    v10 = v8 + *(int *)(v4 + 20);
    v11 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  return result;
}

_QWORD *sub_100361988(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(_QWORD *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t, __n128);
  __n128 v26;
  char *v28;

  v6 = type metadata accessor for HistoryModel.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = sub_10004CFD4(&qword_1009DD048);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = *(int *)(v6 + 20);
    v28 = (char *)a1 + v11;
    v12 = (char *)a2 + v11;
    v13 = type metadata accessor for UUID(0);
    v14 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v13 - 8) + 16);
    v15 = swift_bridgeObjectRetain(v10);
    v14(v28, v12, v13, v15);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = *(int *)(a3 + 20);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  if (v8(v18, 1, v6))
  {
    v19 = sub_10004CFD4(&qword_1009DD048);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = v18[1];
    *v17 = *v18;
    v17[1] = v20;
    v21 = *(int *)(v6 + 20);
    v22 = (char *)v17 + v21;
    v23 = (char *)v18 + v21;
    v24 = type metadata accessor for UUID(0);
    v25 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v24 - 8) + 16);
    v26 = swift_bridgeObjectRetain(v20);
    v25(v22, v23, v24, v26);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_100361B1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t, __n128);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t, __n128);
  __n128 v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;

  v6 = type metadata accessor for HistoryModel.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v11 = a2[1];
      a1[1] = v11;
      v12 = *(int *)(v6 + 20);
      v44 = (char *)a1 + v12;
      v13 = (char *)a2 + v12;
      v14 = type metadata accessor for UUID(0);
      v15 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v14 - 8) + 16);
      v16 = swift_bridgeObjectRetain(v11);
      v15(v44, v13, v14, v16);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_100361DA8((uint64_t)a1);
LABEL_6:
    v17 = sub_10004CFD4(&qword_1009DD048);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *a1 = *a2;
  v32 = a2[1];
  v33 = a1[1];
  a1[1] = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease(v33);
  v34 = *(int *)(v6 + 20);
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 24))(v35, v36, v37);
LABEL_7:
  v18 = *(int *)(a3 + 20);
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  v21 = v8((_QWORD *)((char *)a1 + v18), 1, v6);
  v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      *v19 = *v20;
      v38 = v20[1];
      v39 = v19[1];
      v19[1] = v38;
      swift_bridgeObjectRetain(v38);
      swift_bridgeObjectRelease(v39);
      v40 = *(int *)(v6 + 20);
      v41 = (char *)v19 + v40;
      v42 = (char *)v20 + v40;
      v43 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 24))(v41, v42, v43);
      return a1;
    }
    sub_100361DA8((uint64_t)v19);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v30 = sub_10004CFD4(&qword_1009DD048);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v19 = *v20;
  v23 = v20[1];
  v19[1] = v23;
  v24 = *(int *)(v6 + 20);
  v25 = (char *)v19 + v24;
  v26 = (char *)v20 + v24;
  v27 = type metadata accessor for UUID(0);
  v28 = *(void (**)(char *, char *, uint64_t, __n128))(*(_QWORD *)(v27 - 8) + 16);
  v29 = swift_bridgeObjectRetain(v23);
  v28(v25, v26, v27, v29);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  return a1;
}

uint64_t sub_100361DA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HistoryModel.Entry(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_100361DE4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(_OWORD *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = type metadata accessor for HistoryModel.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = sub_10004CFD4(&qword_1009DD048);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v10 = *(int *)(v6 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (_OWORD *)((char *)a1 + v14);
  v16 = (_OWORD *)((char *)a2 + v14);
  if (v8(v16, 1, v6))
  {
    v17 = sub_10004CFD4(&qword_1009DD048);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v15 = *v16;
    v18 = *(int *)(v6 + 20);
    v19 = (char *)v15 + v18;
    v20 = (char *)v16 + v18;
    v21 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

_QWORD *sub_100361F4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  int v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v6 = type metadata accessor for HistoryModel.Entry(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v11 = *(int *)(v6 + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_100361DA8((uint64_t)a1);
LABEL_6:
    v15 = sub_10004CFD4(&qword_1009DD048);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v27 = a2[1];
  v28 = a1[1];
  *a1 = *a2;
  a1[1] = v27;
  swift_bridgeObjectRelease(v28);
  v29 = *(int *)(v6 + 20);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
LABEL_7:
  v16 = *(int *)(a3 + 20);
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = v8((_QWORD *)((char *)a1 + v16), 1, v6);
  v20 = v8(v18, 1, v6);
  if (!v19)
  {
    if (!v20)
    {
      v33 = v18[1];
      v34 = v17[1];
      *v17 = *v18;
      v17[1] = v33;
      swift_bridgeObjectRelease(v34);
      v35 = *(int *)(v6 + 20);
      v36 = (char *)v17 + v35;
      v37 = (char *)v18 + v35;
      v38 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 40))(v36, v37, v38);
      return a1;
    }
    sub_100361DA8((uint64_t)v17);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    v25 = sub_10004CFD4(&qword_1009DD048);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v21 = *(int *)(v6 + 20);
  v22 = (char *)v17 + v21;
  v23 = (char *)v18 + v21;
  v24 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  return a1;
}

uint64_t sub_10036217C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100362188);
}

uint64_t sub_100362188(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DD048);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1003621C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003621D4);
}

uint64_t sub_1003621D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DD048);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HistoryModel(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009DD0A8, (uint64_t)&nominal type descriptor for HistoryModel);
}

void sub_10036222C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_100362294(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = v4[0];
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

void sub_100362294(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009DD0B8)
  {
    v2 = type metadata accessor for HistoryModel.Entry(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009DD0B8);
  }
}

uint64_t *sub_1003622E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v11);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for UUID(0);
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain(v5);
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_100362384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1003623CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = type metadata accessor for UUID(0);
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain(v4);
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_10036243C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *sub_1003624B8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_100362514(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100362580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036258C);
}

uint64_t sub_10036258C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_100362608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100362614);
}

uint64_t sub_100362614(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100362688(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_10071D4B0;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003626FC(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  v6 = *a1;
  v7 = a1[1];
  v8 = a2[1];
  v9 = v6 == *a2 && v7 == v8;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(v6, v7, *a2, v8, 0) & 1) != 0)
    return static UUID.== infix(_:_:)((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20));
  else
    return 0;
}

BOOL sub_100362770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v44;
  uint64_t *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v4 = type metadata accessor for HistoryModel.Entry(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v51 = (uint64_t *)((char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v50 - v8);
  v10 = sub_10004CFD4(&qword_1009DD178);
  __chkstk_darwin(v10);
  v57 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - v13;
  v15 = sub_10004CFD4(&qword_1009DD048);
  __chkstk_darwin(v15);
  v52 = (uint64_t *)((char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v53 = (uint64_t)&v50 - v18;
  __chkstk_darwin(v19);
  v56 = (uint64_t)&v50 - v20;
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v50 - v22);
  __chkstk_darwin(v24);
  v26 = (char *)&v50 - v25;
  __chkstk_darwin(v27);
  v29 = (char *)&v50 - v28;
  v54 = a1;
  sub_100362CD0(a1, (uint64_t)&v50 - v28);
  v55 = a2;
  sub_100362CD0(a2, (uint64_t)v26);
  v30 = (uint64_t)&v14[*(int *)(v10 + 48)];
  sub_100362CD0((uint64_t)v29, (uint64_t)v14);
  sub_100362CD0((uint64_t)v26, v30);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v31((uint64_t)v14, 1, v4) != 1)
  {
    sub_100362CD0((uint64_t)v14, (uint64_t)v23);
    if (v31(v30, 1, v4) != 1)
    {
      sub_100362D18(v30, (uint64_t)v9);
      v34 = v23[1];
      v35 = v9[1];
      v36 = *v23 == *v9 && v34 == v35;
      if (!v36 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v23, v34, *v9, v35, 0) & 1) == 0)
      {
        sub_100361DA8((uint64_t)v9);
        v45 = &qword_1009DD048;
        sub_100010960((uint64_t)v26, &qword_1009DD048);
        sub_100010960((uint64_t)v29, &qword_1009DD048);
        sub_100361DA8((uint64_t)v23);
        v33 = (uint64_t)v14;
LABEL_28:
        v32 = v45;
        goto LABEL_29;
      }
      v37 = static UUID.== infix(_:_:)((char *)v23 + *(int *)(v4 + 20), (char *)v9 + *(int *)(v4 + 20));
      sub_100361DA8((uint64_t)v9);
      sub_100010960((uint64_t)v26, &qword_1009DD048);
      sub_100010960((uint64_t)v29, &qword_1009DD048);
      sub_100361DA8((uint64_t)v23);
      sub_100010960((uint64_t)v14, &qword_1009DD048);
      if ((v37 & 1) == 0)
        return 0;
      goto LABEL_13;
    }
    sub_100010960((uint64_t)v26, &qword_1009DD048);
    sub_100010960((uint64_t)v29, &qword_1009DD048);
    sub_100361DA8((uint64_t)v23);
LABEL_6:
    v32 = &qword_1009DD178;
    v33 = (uint64_t)v14;
LABEL_29:
    sub_100010960(v33, v32);
    return 0;
  }
  sub_100010960((uint64_t)v26, &qword_1009DD048);
  sub_100010960((uint64_t)v29, &qword_1009DD048);
  if (v31(v30, 1, v4) != 1)
    goto LABEL_6;
  sub_100010960((uint64_t)v14, &qword_1009DD048);
LABEL_13:
  v38 = type metadata accessor for HistoryModel(0);
  v39 = v56;
  sub_100362CD0(v54 + *(int *)(v38 + 20), v56);
  v40 = v53;
  sub_100362CD0(v55 + *(int *)(v38 + 20), v53);
  v41 = v57;
  v42 = v57 + *(int *)(v10 + 48);
  sub_100362CD0(v39, v57);
  sub_100362CD0(v40, v42);
  if (v31(v41, 1, v4) == 1)
  {
    sub_100010960(v40, &qword_1009DD048);
    sub_100010960(v39, &qword_1009DD048);
    if (v31(v42, 1, v4) == 1)
    {
      sub_100010960(v41, &qword_1009DD048);
      return 1;
    }
    v45 = &qword_1009DD178;
    goto LABEL_27;
  }
  v44 = v52;
  sub_100362CD0(v41, (uint64_t)v52);
  if (v31(v42, 1, v4) == 1)
  {
    v45 = &qword_1009DD178;
LABEL_26:
    sub_100010960(v40, &qword_1009DD048);
    sub_100010960(v39, &qword_1009DD048);
    sub_100361DA8((uint64_t)v44);
LABEL_27:
    v33 = v41;
    goto LABEL_28;
  }
  v46 = v51;
  sub_100362D18(v42, (uint64_t)v51);
  v47 = v44[1];
  v48 = v46[1];
  if ((*v44 != *v46 || v47 != v48) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v44, v47, *v46, v48, 0) & 1) == 0)
  {
    sub_100361DA8((uint64_t)v46);
    v45 = &qword_1009DD048;
    goto LABEL_26;
  }
  v49 = static UUID.== infix(_:_:)((char *)v44 + *(int *)(v4 + 20), (char *)v46 + *(int *)(v4 + 20));
  sub_100361DA8((uint64_t)v46);
  sub_100010960(v40, &qword_1009DD048);
  sub_100010960(v39, &qword_1009DD048);
  sub_100361DA8((uint64_t)v44);
  sub_100010960(v41, &qword_1009DD048);
  return (v49 & 1) != 0;
}

uint64_t sub_100362CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DD048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100362D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HistoryModel.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_100362D74()
{
  return sub_10023803C(type metadata accessor for AnalyticsDebugTextViewCell);
}

uint64_t type metadata accessor for AnalyticsDebugTextViewCell()
{
  return objc_opt_self(_TtC5Books26AnalyticsDebugTextViewCell);
}

id sub_100362DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  objc_super v13;

  v7 = (void *)a1;
  if (a4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    a1 = swift_bridgeObjectRelease(v9);
  }
  else
  {
    v10 = 0;
  }
  v13.receiver = v7;
  v13.super_class = (Class)a5(a1);
  v11 = objc_msgSendSuper2(&v13, "initWithStyle:reuseIdentifier:", a3, v10);

  return v11;
}

id sub_100362E48()
{
  return sub_10023803C(type metadata accessor for AnalyticsDebugSwitchCell);
}

uint64_t type metadata accessor for AnalyticsDebugSwitchCell()
{
  return objc_opt_self(_TtC5Books24AnalyticsDebugSwitchCell);
}

void sub_100362F80()
{
  char *v0;
  id v1;
  NSString v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  NSString v24;
  uint64_t v25;
  char *v26;
  uint64_t ObjCClassFromMetadata;
  unint64_t v28;
  uint64_t v29;
  objc_super v30;

  v30.receiver = v0;
  v30.super_class = (Class)type metadata accessor for AnalyticsDebugViewController();
  objc_msgSendSuper2(&v30, "viewDidLoad");
  v1 = objc_msgSend(v0, "navigationItem");
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v2);

  v3 = sub_10004CFD4(&qword_1009DD208);
  v4 = swift_allocObject(v3, 176, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100712B60;
  v5 = swift_allocObject(&unk_1008FF460, 24, 7);
  *(_QWORD *)(v5 + 16) = v0;
  *(_OWORD *)(v4 + 32) = xmmword_10071D520;
  *(_QWORD *)(v4 + 48) = sub_100363F30;
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = 0;
  *(_BYTE *)(v4 + 72) = 0;
  v6 = swift_allocObject(&unk_1008FF488, 24, 7);
  *(_QWORD *)(v6 + 16) = v0;
  *(_OWORD *)(v4 + 80) = xmmword_10071D530;
  *(_QWORD *)(v4 + 96) = &j___s13BookAnalytics8DefaultsO28analyticsJitterLowBoundValueSivgZ;
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 112) = "jitterLowBoundTextFieldChangeWithTextField:";
  *(_BYTE *)(v4 + 120) = 1;
  v7 = swift_allocObject(&unk_1008FF4B0, 24, 7);
  *(_QWORD *)(v7 + 16) = v0;
  *(_QWORD *)(v4 + 128) = 0xD000000000000011;
  *(_QWORD *)(v4 + 136) = 0x80000001007C2FB0;
  *(_QWORD *)(v4 + 144) = &j___s13BookAnalytics8DefaultsO30analyticsJitterUpperBoundValueSivgZ;
  *(_QWORD *)(v4 + 152) = v7;
  *(_QWORD *)(v4 + 160) = "jitterUpperBoundTextFieldChangeWithTextField:";
  *(_BYTE *)(v4 + 168) = 1;
  v8 = OBJC_IVAR___BKAnalyticsDebugViewController_analyticsDatas;
  v9 = *(_QWORD *)&v0[OBJC_IVAR___BKAnalyticsDebugViewController_analyticsDatas];
  *(_QWORD *)&v0[OBJC_IVAR___BKAnalyticsDebugViewController_analyticsDatas] = v4;
  v26 = v0;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)&v0[v8];
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain_n(v10, 2);
    v12 = (_BYTE *)(v10 + 72);
    v25 = v10;
    while (1)
    {
      v29 = v11;
      v13 = *((_QWORD *)v12 - 5);
      v14 = *((_QWORD *)v12 - 4);
      v15 = *((_QWORD *)v12 - 3);
      v16 = *((_QWORD *)v12 - 2);
      if ((*v12 & 1) != 0)
      {
        v17 = type metadata accessor for AnalyticsDebugTextViewCell();
        v28 = 0x80000001007C2F50;
      }
      else
      {
        v17 = type metadata accessor for AnalyticsDebugSwitchCell();
        v28 = 0x80000001007C2F70;
      }
      sub_100363998(v13, v14, v15, v16);
      v18 = objc_msgSend(v26, "tableView");
      if (!v18)
        break;
      v19 = v16;
      v20 = v15;
      v21 = v14;
      v22 = v13;
      v23 = v18;
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
      v24 = String._bridgeToObjectiveC()();
      objc_msgSend(v23, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v24, swift_bridgeObjectRelease(v28).n128_f64[0]);

      sub_1003639D8(v22, v21, v20, v19);
      v12 += 48;
      v11 = v29 - 1;
      if (v29 == 1)
      {
        swift_bridgeObjectRelease_n(v25, 2);
        return;
      }
    }
    __break(1u);
  }
}

void sub_1003632B8(uint64_t a1, _BYTE *a2)
{
  char v3;
  id v4;
  id v5;

  v3 = a2[OBJC_IVAR___BKAnalyticsDebugViewController_analyticsJitterEnabled];
  a2[OBJC_IVAR___BKAnalyticsDebugViewController_analyticsJitterEnabled] = (v3 & 1) == 0;
  if ((v3 & 1) != 0)
  {
    static Defaults.analyticsJitterLowBoundValue.setter(-600);
    static Defaults.analyticsJitterUpperBoundValue.setter(600);
  }
  static Defaults.analyticsJitterSettingsEnabled.setter();
  v4 = objc_msgSend(a2, "tableView");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "reloadData");

  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_100363434(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(id);
  uint64_t v10;
  int v11;
  unint64_t v12;
  NSString v13;
  Class isa;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  char v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  _QWORD aBlock[5];
  uint64_t v37;

  v2 = v1;
  result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR___BKAnalyticsDebugViewController_analyticsDatas);
    if (result < *(_QWORD *)(v5 + 16))
    {
      v6 = v5 + 48 * result;
      v7 = *(_QWORD *)(v6 + 40);
      v9 = *(uint64_t (**)(id))(v6 + 48);
      v8 = *(_QWORD *)(v6 + 56);
      v10 = *(_QWORD *)(v6 + 64);
      v11 = *(unsigned __int8 *)(v6 + 72);
      if (*(_BYTE *)(v6 + 72))
        v12 = 0x80000001007C2F50;
      else
        v12 = 0x80000001007C2F70;
      v35 = *(_QWORD *)(v6 + 32);
      sub_100363998(v35, v7, (uint64_t)v9, v8);
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v12);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      v15 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v13, isa);

      if (v11 == 1)
      {
        v16 = objc_allocWithZone((Class)UITextField);
        swift_retain(v8);
        v17 = objc_msgSend(v16, "initWithFrame:", 0.0, 0.0, 50.0, 20.0);
        objc_msgSend(v17, "addTarget:action:forControlEvents:", v2, v10, 0x20000);
        aBlock[0] = v9(objc_msgSend(v17, "setKeyboardType:", 4));
        dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        v19 = v18;
        v20 = String._bridgeToObjectiveC()();
        objc_msgSend(v17, "setText:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

        v21 = (void *)objc_opt_self(UIColor);
        v22 = v17;
        v23 = objc_msgSend(v21, "lightGrayColor");
        objc_msgSend(v22, "setBackgroundColor:", v23);

        v24 = objc_msgSend(v15, "textLabel");
        if (!v24)
        {
          v26 = v35;
          goto LABEL_14;
        }
        v25 = v24;
        v26 = v35;
        v27 = String._bridgeToObjectiveC()();
        objc_msgSend(v25, "setText:", v27);
      }
      else
      {
        swift_retain(v8);
        v29 = static Defaults.analyticsJitterSettingsEnabled.getter(v28);
        v30 = objc_allocWithZone((Class)type metadata accessor for DebugBoolDefaultSwitch());
        aBlock[4] = v9;
        v37 = v8;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10004DCB4;
        aBlock[3] = &unk_1008FF428;
        v31 = _Block_copy(aBlock);
        v32 = v37;
        swift_retain_n(v8, 2);
        v22 = objc_msgSend(v30, "initWithInitialValue:synchronize:action:", v29 & 1, v31, 0, swift_release(v32).n128_f64[0]);
        swift_release(v8);
        _Block_release(v31);
        v33 = objc_msgSend(v15, "textLabel");
        if (!v33)
        {
          v26 = v35;
          goto LABEL_14;
        }
        v25 = v33;
        v26 = v35;
        v27 = String._bridgeToObjectiveC()();
        objc_msgSend(v25, "setText:", v27);
      }

LABEL_14:
      v34 = v22;
      objc_msgSend(v15, "setAccessoryView:", v34);
      sub_1003639D8(v26, v7, (uint64_t)v9, v8);
      swift_release(v8);

      return (unint64_t)v15;
    }
  }
  __break(1u);
  return result;
}

id sub_10036395C()
{
  return sub_10023803C(type metadata accessor for AnalyticsDebugViewController);
}

uint64_t type metadata accessor for AnalyticsDebugViewController()
{
  return objc_opt_self(BKAnalyticsDebugViewController);
}

uint64_t sub_100363998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain(a2);
  return swift_retain(a4);
}

uint64_t destroy for AnalyticsDebugData(uint64_t *a1)
{
  return sub_1003639D8(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1003639D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRelease(a2);
  return swift_release(a4);
}

uint64_t initializeWithCopy for AnalyticsDebugData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_100363998(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for AnalyticsDebugData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_100363998(*(_QWORD *)a2, v4, v5, v6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  sub_1003639D8(v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AnalyticsDebugData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  sub_1003639D8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsDebugData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnalyticsDebugData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_100363BE4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 40);
}

uint64_t sub_100363BEC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsDebugData()
{
  return &type metadata for AnalyticsDebugData;
}

void sub_100363C08(void *a1, void (*a2)(uint64_t, __n128))
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  unsigned __int8 *v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  _QWORD v28[3];

  v3 = objc_msgSend(a1, "text");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

    v8 = HIBYTE(v7) & 0xF;
    v9 = v5 & 0xFFFFFFFFFFFFLL;
    if ((v7 & 0x2000000000000000) != 0)
      v10 = HIBYTE(v7) & 0xF;
    else
      v10 = v5 & 0xFFFFFFFFFFFFLL;
    if (!v10)
    {
      swift_bridgeObjectRelease(v7);
      return;
    }
    if ((v7 & 0x1000000000000000) != 0)
    {
      v12 = sub_100327700(v5, v7, 10);
      LOBYTE(v5) = v27;
LABEL_45:
      v23 = swift_bridgeObjectRelease(v7);
      if ((v5 & 1) == 0)
        a2(v12, v23);
      return;
    }
    if ((v7 & 0x2000000000000000) == 0)
    {
      if ((v5 & 0x1000000000000000) != 0)
        v11 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v11 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v5, v7);
      v12 = (uint64_t)sub_1003276D8(v11, v9, 10);
      LOBYTE(v5) = v13 & 1;
      goto LABEL_45;
    }
    v28[0] = v5;
    v28[1] = v7 & 0xFFFFFFFFFFFFFFLL;
    if (v5 == 43)
    {
      if (!v8)
        goto LABEL_58;
      if (v8 == 1 || (BYTE1(v5) - 48) > 9u)
        goto LABEL_32;
      v12 = (BYTE1(v5) - 48);
      if (v8 != 2)
      {
        if ((BYTE2(v5) - 48) > 9u)
          goto LABEL_32;
        v12 = 10 * (BYTE1(v5) - 48) + (BYTE2(v5) - 48);
        v14 = v8 - 3;
        if (v14)
        {
          v15 = (unsigned __int8 *)v28 + 3;
          while (1)
          {
            v16 = *v15 - 48;
            if (v16 > 9)
              goto LABEL_32;
            v17 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
              goto LABEL_32;
            v12 = v17 + v16;
            if (__OFADD__(v17, v16))
              goto LABEL_32;
            LOBYTE(v5) = 0;
            ++v15;
            if (!--v14)
              goto LABEL_45;
          }
        }
      }
    }
    else
    {
      if (v5 == 45)
      {
        if (v8)
        {
          if (v8 != 1 && (BYTE1(v5) - 48) <= 9u)
          {
            if (v8 == 2)
            {
              LOBYTE(v5) = 0;
              v12 = -(uint64_t)(BYTE1(v5) - 48);
              goto LABEL_45;
            }
            if ((BYTE2(v5) - 48) <= 9u)
            {
              v12 = -10 * (BYTE1(v5) - 48) - (BYTE2(v5) - 48);
              v22 = v8 - 3;
              if (!v22)
                goto LABEL_44;
              v24 = (unsigned __int8 *)v28 + 3;
              while (1)
              {
                v25 = *v24 - 48;
                if (v25 > 9)
                  break;
                v26 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                  break;
                v12 = v26 - v25;
                if (__OFSUB__(v26, v25))
                  break;
                LOBYTE(v5) = 0;
                ++v24;
                if (!--v22)
                  goto LABEL_45;
              }
            }
          }
LABEL_32:
          v12 = 0;
          LOBYTE(v5) = 1;
          goto LABEL_45;
        }
        __break(1u);
LABEL_58:
        __break(1u);
        return;
      }
      if (!v8 || (v5 - 48) > 9u)
        goto LABEL_32;
      v12 = (v5 - 48);
      if (v8 != 1)
      {
        if ((BYTE1(v5) - 48) > 9u)
          goto LABEL_32;
        v12 = 10 * (v5 - 48) + (BYTE1(v5) - 48);
        v18 = v8 - 2;
        if (v18)
        {
          v19 = (unsigned __int8 *)v28 + 2;
          while (1)
          {
            v20 = *v19 - 48;
            if (v20 > 9)
              goto LABEL_32;
            v21 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
              goto LABEL_32;
            v12 = v21 + v20;
            if (__OFADD__(v21, v20))
              goto LABEL_32;
            LOBYTE(v5) = 0;
            ++v19;
            if (!--v18)
              goto LABEL_45;
          }
        }
      }
    }
LABEL_44:
    LOBYTE(v5) = 0;
    goto LABEL_45;
  }
}

uint64_t sub_100363F0C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100363F30(uint64_t a1)
{
  uint64_t v1;

  sub_1003632B8(a1, *(_BYTE **)(v1 + 16));
}

uint64_t sub_100363F48()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009DD210);
  sub_100048F64(v0, (uint64_t)qword_1009DD210);
  sub_100009B88();
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000021, 0x80000001007C3010);
}

BOOL sub_100364008(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v17;

  v2 = sub_10004CFD4(&qword_1009DD228);
  __chkstk_darwin(v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v5 = a1;
    UISceneConnectionOptions._appIntentExecution.getter();

    v6 = type metadata accessor for _AppIntentExecution(0);
    v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 1, v6) != 1;
    sub_100364168((uint64_t)v4);
  }
  else
  {
    if (qword_1009CE1B0 != -1)
      swift_once(&qword_1009CE1B0, sub_100363F48);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100048F64(v8, (uint64_t)qword_1009DD210);
    v10 = Logger.logObject.getter(v9);
    v14 = static os_log_type_t.debug.getter(v10, v11, v12, v13);
    if (os_log_type_enabled(v10, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v14, "No options found", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    return 0;
  }
  return v7;
}

uint64_t sub_100364168(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009DD228);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003641A8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;

  v3 = v1 + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_cachedConfiguration;
  v4 = type metadata accessor for Configuration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_onChangeBlocks) = &_swiftEmptyArrayStorage;
  *(_QWORD *)(v1 + 16) = a1;
  v5 = (void *)objc_opt_self(NSNotificationCenter);
  v6 = a1;
  v7 = objc_msgSend(v5, "defaultCenter");
  v8 = swift_retain(v1);
  v9 = (void *)static NSNotificationName.rcDataContainerConfigDidChange.getter(v8);
  objc_msgSend(v7, "addObserver:selector:name:object:", v1, "onConfigurationChange:", v9, v6);

  swift_release(v1);
  return v1;
}

uint64_t sub_1003642A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  void *v38;
  Class isa;
  id v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v59;
  _BYTE *v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE v90[4];
  unsigned int v91;
  uint64_t v92;
  id v93;
  _BYTE *v94;
  _BYTE *v95;
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  void *v99;
  __int128 v100;
  __int128 v101;

  v2 = sub_10004CFD4(&qword_1009DD3E0);
  __chkstk_darwin(v2);
  v97 = &v90[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_10004CFD4(&qword_1009DD3E8);
  __chkstk_darwin(v4);
  v96 = &v90[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10004CFD4(&qword_1009DD3F0);
  v7 = __chkstk_darwin(v6);
  v95 = &v90[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v10 = &v90[-v9];
  v11 = sub_10004CFD4(&qword_1009DD3F8);
  __chkstk_darwin(v11);
  v13 = &v90[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_10004CFD4(&qword_1009DD400);
  __chkstk_darwin(v14);
  v16 = &v90[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_10004CFD4(&qword_1009DD408);
  __chkstk_darwin(v17);
  v19 = &v90[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = sub_10004CFD4(&qword_1009DD410);
  __chkstk_darwin(v20);
  v22 = &v90[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = sub_10004CFD4(&qword_1009DD418);
  __chkstk_darwin(v23);
  v25 = &v90[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = sub_10004CFD4(&qword_1009DD420);
  __chkstk_darwin(v26);
  v28 = &v90[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = sub_10004CFD4(&qword_1009DD428);
  v30 = __chkstk_darwin(v29);
  v32 = &v90[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v33 = RCDataContainer.configs.getter(v30);
  v34 = *(_QWORD *)(v33 + 16);
  v98 = a1;
  if (!v34 || (v35 = sub_10004CE80(0x6C616E6F73726570, 0xEF6E6F6974617A69), (v36 & 1) == 0))
  {
    v100 = 0u;
    v101 = 0u;
    swift_bridgeObjectRelease(v33);
    goto LABEL_8;
  }
  sub_10004CD0C(*(_QWORD *)(v33 + 56) + 32 * v35, (uint64_t)&v100);
  swift_bridgeObjectRelease(v33);
  if (!*((_QWORD *)&v101 + 1))
  {
LABEL_8:
    sub_100010960((uint64_t)&v100, (uint64_t *)&unk_1009D04E0);
    goto LABEL_9;
  }
  v37 = sub_10004CFD4(&qword_1009D3090);
  if ((swift_dynamicCast(&v99, &v100, (char *)&type metadata for Any + 8, v37, 6) & 1) == 0)
  {
LABEL_9:
    v50 = type metadata accessor for Configuration.GenreRecommendationConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v32, 1, 1, v50);
    v51 = type metadata accessor for Configuration.SeedBasedRecommendationConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v28, 1, 1, v51);
    v52 = type metadata accessor for Configuration.CollectionsConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v25, 1, 1, v52);
    v53 = type metadata accessor for Configuration.ScorersConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v22, 1, 1, v53);
    v54 = type metadata accessor for Configuration.MediaTypeMethod(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v19, 1, 1, v54);
    v55 = type metadata accessor for Configuration.MediaTypesRecommendationServiceConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v16, 1, 1, v55);
    v56 = type metadata accessor for Configuration.BooksClusteringServiceConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v13, 1, 1, v56);
    v57 = type metadata accessor for Configuration.MediaTypeConfiguration(0);
    v58 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56);
    v58(v10, 1, 1, v57);
    v94 = v19;
    v59 = v16;
    v60 = v13;
    v61 = v10;
    v62 = v95;
    v58(v95, 1, 1, v57);
    v63 = type metadata accessor for Configuration.PersonalizationMetadataServiceConfiguration(0);
    v64 = v96;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v96, 1, 1, v63);
    v65 = type metadata accessor for TabiConfiguration(0);
    v66 = v97;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v97, 1, 1, v65);
    return Configuration.init(genreRecommendationConfiguration:seedBasedRecommendationConfiguration:collectionsConfiguration:scorersConfiguration:profileGenreDenylistForGenres:profileGenreDenylistForBooks:indefiniteAuthorIDs:mediaTypeMethod:mediaTypesRecommendationServiceConfiguration:booksClusteringServiceConfiguration:ebookConfiguration:audiobookConfiguration:personalizationMetadataServiceConfiguration:tabiConfiguration:)(v32, v28, v25, v22, 0, 0, 0, v94, v59, v60, v61, v62, v64, v66);
  }
  v94 = v10;
  v38 = v99;
  v93 = (id)objc_opt_self(NSJSONSerialization);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v38);
  *(_QWORD *)&v100 = 0;
  v40 = objc_msgSend(v93, "dataWithJSONObject:options:error:", isa, 0, &v100);

  v41 = (id)v100;
  if (v40)
  {
    v42 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v92 = v43;

    v44 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
    v45 = JSONDecoder.init()();
    v46 = type metadata accessor for Configuration(0);
    v47 = sub_100008DB0(&qword_1009DD430, (uint64_t (*)(uint64_t))&type metadata accessor for Configuration, (uint64_t)&protocol conformance descriptor for Configuration);
    v93 = v42;
    v48 = v42;
    v49 = v92;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(v46, v48, v92, v46, v47);
    swift_release(v45);
    return sub_10005EE1C((uint64_t)v93, v49);
  }
  else
  {
    v67 = v41;
    v68 = (void *)_convertNSErrorToError(_:)(v41);

    swift_willThrow(v69);
    v93 = v68;
    sub_100009B88();
    v92 = static OS_os_log.rcDataContainer.getter();
    v91 = static os_log_type_t.error.getter(v92);
    v70 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v71 = swift_allocObject(v70, 72, 7);
    *(_OWORD *)(v71 + 16) = xmmword_10070CCA0;
    *(_QWORD *)&v100 = 0;
    *((_QWORD *)&v100 + 1) = 0xE000000000000000;
    v99 = v68;
    v72 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    _print_unlocked<A, B>(_:_:)(&v99, &v100, v72, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v73 = v100;
    *(_QWORD *)(v71 + 56) = &type metadata for String;
    *(_QWORD *)(v71 + 64) = sub_10002BE50();
    *(_OWORD *)(v71 + 32) = v73;
    v74 = (void *)v92;
    os_log(_:dso:log:type:_:)("Unable to decode personalization configuration: %{public}@", 58, 2, &_mh_execute_header, v92, v91, v71);

    swift_bridgeObjectRelease(v71);
    v75 = type metadata accessor for Configuration.GenreRecommendationConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v32, 1, 1, v75);
    v76 = type metadata accessor for Configuration.SeedBasedRecommendationConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v28, 1, 1, v76);
    v77 = type metadata accessor for Configuration.CollectionsConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v25, 1, 1, v77);
    v78 = type metadata accessor for Configuration.ScorersConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v22, 1, 1, v78);
    v79 = type metadata accessor for Configuration.MediaTypeMethod(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v19, 1, 1, v79);
    v80 = type metadata accessor for Configuration.MediaTypesRecommendationServiceConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v16, 1, 1, v80);
    v81 = type metadata accessor for Configuration.BooksClusteringServiceConfiguration(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v13, 1, 1, v81);
    v82 = type metadata accessor for Configuration.MediaTypeConfiguration(0);
    v83 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56);
    v83(v94, 1, 1, v82);
    v84 = v95;
    v83(v95, 1, 1, v82);
    v85 = type metadata accessor for Configuration.PersonalizationMetadataServiceConfiguration(0);
    v86 = v96;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v96, 1, 1, v85);
    v87 = type metadata accessor for TabiConfiguration(0);
    v88 = v97;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v97, 1, 1, v87);
    Configuration.init(genreRecommendationConfiguration:seedBasedRecommendationConfiguration:collectionsConfiguration:scorersConfiguration:profileGenreDenylistForGenres:profileGenreDenylistForBooks:indefiniteAuthorIDs:mediaTypeMethod:mediaTypesRecommendationServiceConfiguration:booksClusteringServiceConfiguration:ebookConfiguration:audiobookConfiguration:personalizationMetadataServiceConfiguration:tabiConfiguration:)(v32, v28, v25, v22, 0, 0, 0, v19, v16, v13, v94, v84, v86, v88);
    return swift_errorRelease(v93);
  }
}

uint64_t sub_100364BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[8] = a4;
  v5 = sub_10004CFD4(&qword_1009DD3D8);
  v4[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Configuration(0);
  v4[10] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[11] = v7;
  v4[12] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE1B8 != -1)
    swift_once(&qword_1009CE1B8, sub_100007894);
  return swift_task_switch(sub_100364C9C, qword_1009DD230, 0);
}

uint64_t sub_100364C9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, __n128);
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(v0 + 88);
  v1 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  sub_1003642A0(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v1, v3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  v6 = v5 + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_cachedConfiguration;
  swift_beginAccess(v5 + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_cachedConfiguration, v0 + 16, 33, 0);
  sub_10006C920(v4, v6);
  swift_endAccess(v0 + 16);
  v7 = (_QWORD *)(v5 + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_onChangeBlocks);
  v8 = swift_beginAccess(v5 + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_onChangeBlocks, v0 + 40, 0, 0);
  v9 = *v7;
  v10 = *(_QWORD *)(*v7 + 16);
  if (v10)
  {
    swift_bridgeObjectRetain(*v7);
    v11 = (_QWORD *)(v9 + 40);
    do
    {
      v12 = *(_QWORD *)(v0 + 96);
      v14 = (void (*)(uint64_t, __n128))*(v11 - 1);
      v13 = *v11;
      v15 = swift_retain(*v11);
      v14(v12, v15);
      swift_release(v13);
      v11 += 2;
      --v10;
    }
    while (v10);
    v8 = swift_bridgeObjectRelease(v9);
  }
  v16 = *(_QWORD *)(v0 + 96);
  v17 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 88) + 8))(v16, *(_QWORD *)(v0 + 80), v8);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100364F88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  if (qword_1009CE1B8 != -1)
    swift_once(&qword_1009CE1B8, sub_100007894);
  return swift_task_switch(sub_100364FF0, qword_1009DD230, 0);
}

uint64_t sub_100364FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = swift_allocObject(&unk_1008FF500, 32, 7);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v2;
  v5 = (_QWORD **)(v3 + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_onChangeBlocks);
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_onChangeBlocks, v0 + 16, 33, 0);
  v6 = *v5;
  swift_retain(v2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
  *v5 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_1005B1184(0, v6[2] + 1, 1, v6);
    *v5 = v6;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    v6 = sub_1005B1184((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    *v5 = v6;
  }
  v6[2] = v9 + 1;
  v10 = &v6[2 * v9];
  v10[4] = sub_10004DE04;
  v10[5] = v4;
  swift_endAccess(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100365100()
{
  id *v0;

  sub_100010960((uint64_t)v0 + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_cachedConfiguration, &qword_1009DD3D8);
  swift_bridgeObjectRelease(*(id *)((char *)v0
                                  + OBJC_IVAR____TtC5Books35PersonalizationConfigurationService_onChangeBlocks));
  return swift_deallocClassInstance(v0, *((unsigned int *)*v0 + 12), *((unsigned __int16 *)*v0 + 26));
}

uint64_t sub_100365150()
{
  return type metadata accessor for PersonalizationConfigurationService(0);
}

uint64_t sub_100365158@<X0>(uint64_t a1@<X8>)
{
  return sub_1003642A0(a1);
}

double sub_10036517C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v5 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v9 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  v10 = qword_1009CE1B8;
  swift_retain(v8);
  swift_retain(a2);
  if (v10 != -1)
    swift_once(&qword_1009CE1B8, sub_100007894);
  v11 = qword_1009DD230;
  v12 = sub_100008DB0(&qword_1009DD3C0, (uint64_t (*)(uint64_t))_s5Books18PropertyValueActorV9ActorTypeCMa_0, (uint64_t)&unk_10071D65C);
  v13 = (_QWORD *)swift_allocObject(&unk_1008FF4D8, 56, 7);
  v13[2] = v11;
  v13[3] = v12;
  v13[4] = v8;
  v13[5] = a1;
  v13[6] = a2;
  swift_retain(v11);
  v14 = sub_10030C02C((uint64_t)v7, (uint64_t)&unk_1009DD3C8, (uint64_t)v13);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

uint64_t sub_1003652BC()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003652F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009DD3BC);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000AE34;
  return sub_100364F88(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100365370()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100365394()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003653C0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009DD43C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_100364BEC(a1, v4, v5, v6);
}

CGFloat sub_10036542C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  void (*v24)(char *, uint64_t, __n128);
  char v25;
  __n128 v26;
  void (*v27)(char *, uint64_t, __n128);
  double MinX;
  double v29;
  CGFloat v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  v12 = type metadata accessor for DocumentPaginationDirection(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v19 = (char *)&v32 - v18;
  DocumentPaginationEntity.paginationDirection.getter(v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DocumentPaginationDirection.rightToLeft(_:), v12);
  v20 = sub_100365660();
  dispatch thunk of RawRepresentable.rawValue.getter(&v34, v12, v20);
  dispatch thunk of RawRepresentable.rawValue.getter(&v32, v12, v20);
  v21 = v35;
  v22 = v33;
  if (v34 == v32 && v35 == v33)
  {
    v23 = swift_bridgeObjectRelease_n(v35, 2);
    v24 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
    v24(v15, v12, v23);
    ((void (*)(char *, uint64_t))v24)(v19, v12);
  }
  else
  {
    v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v32, v33, 0);
    swift_bridgeObjectRelease(v21);
    v26 = swift_bridgeObjectRelease(v22);
    v27 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
    v27(v15, v12, v26);
    ((void (*)(char *, uint64_t))v27)(v19, v12);
    if ((v25 & 1) == 0)
    {
      v37.origin.x = a1;
      v37.origin.y = a2;
      v37.size.width = a3;
      v37.size.height = a4;
      MinX = CGRectGetMinX(v37);
      goto LABEL_7;
    }
  }
  v36.origin.x = a1;
  v36.origin.y = a2;
  v36.size.width = a3;
  v36.size.height = a4;
  MinX = CGRectGetMaxX(v36);
LABEL_7:
  v29 = MinX;
  v38.origin.x = 0.0;
  v38.origin.y = 0.0;
  v38.size.width = a5;
  v38.size.height = a6;
  v30 = v29 - CGRectGetWidth(v38) * 0.5;
  v39.origin.x = a1;
  v39.origin.y = a2;
  v39.size.width = a3;
  v39.size.height = a4;
  CGRectGetMinY(v39);
  v40.origin.y = 0.0;
  v40.origin.x = v30;
  v40.size.width = a5;
  v40.size.height = a6;
  CGRectGetHeight(v40);
  return v30;
}

unint64_t sub_100365660()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DD448;
  if (!qword_1009DD448)
  {
    v1 = type metadata accessor for DocumentPaginationDirection(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DocumentPaginationDirection, v1);
    atomic_store(result, (unint64_t *)&qword_1009DD448);
  }
  return result;
}

double destroy for IconButtonStyle(uint64_t a1)
{
  double result;

  sub_100209510(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  swift_release(*(_QWORD *)(a1 + 48));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 56)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for IconButtonStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  v8 = v4;
  sub_100209420(v5, v6);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_BYTE *)(a1 + 40) = v7;
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  swift_retain(v9);
  swift_retain(v10);
  return a1;
}

uint64_t assignWithCopy for IconButtonStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 40);
  sub_100209420(v7, v8);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v9;
  sub_100209510(v10, v11);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v15;
  swift_retain(v15);
  swift_release(v14);
  return a1;
}

uint64_t assignWithTake for IconButtonStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = v5;
  sub_100209510(v6, v7);
  swift_release(*(_QWORD *)(a1 + 48));
  v8 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release(v8);
  return a1;
}

ValueMetadata *type metadata accessor for IconButtonStyle()
{
  return &type metadata for IconButtonStyle;
}

ValueMetadata *type metadata accessor for IconImage()
{
  return &type metadata for IconImage;
}

uint64_t sub_1003658A4(uint64_t a1, uint64_t a2)
{
  return sub_100365D74(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_1003658C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086DDC8, 1);
}

void sub_1003658D0(uint64_t a1@<X8>)
{
  _QWORD *v1;
  int *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t KeyPath;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v3 = (int *)sub_10004CFD4(&qword_1009DD450);
  __chkstk_darwin(v3);
  v5 = (_QWORD *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = v1[1];
  v6 = v1[2];
  v9 = ButtonStyleConfiguration.isPressed.getter(v8);
  sub_100025B3C((uint64_t)(v1 + 7), (uint64_t)&v25, &qword_1009DD458);
  *v5 = swift_getKeyPath(&unk_10071D700);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v5, v10, 0);
  v11 = (_QWORD *)((char *)v5 + v3[9]);
  sub_100365D44(&v25);
  v12 = type metadata accessor for ChromeStyle(0);
  v13 = sub_100288CBC();
  EnvironmentObject.init()(v12, v13);
  *v11 = v14;
  v11[1] = v15;
  v16 = (char *)v5 + v3[10];
  sub_100365A7C((uint64_t)v1, (uint64_t)&v22);
  v21 = v22;
  v17 = v23;
  v18 = v24;
  v19 = v1[6];
  KeyPath = swift_getKeyPath(&unk_10071D730);
  *(_OWORD *)v16 = v21;
  *((_QWORD *)v16 + 2) = v17;
  v16[24] = v18;
  *((_QWORD *)v16 + 4) = KeyPath;
  *((_QWORD *)v16 + 5) = v19;
  *(_QWORD *)((char *)v5 + v3[11]) = v7;
  *(_QWORD *)((char *)v5 + v3[12]) = v6;
  *((_BYTE *)v5 + v3[13]) = v9 & 1;
  *((_BYTE *)v5 + v3[14]) = 0;
  sub_100025B3C((uint64_t)&v25, (uint64_t)v5 + v3[15], &qword_1009DD458);
  sub_100025B3C((uint64_t)v5, a1, &qword_1009DD450);
  swift_retain(v19);
}

double sub_100365A7C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  char v36;

  v4 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Font.TextStyle(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D59A8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t, double))(v8 + 104))(v10, enum case for Font.TextStyle.body(_:), v7, v12);
    v17 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
    swift_bridgeObjectRetain(v15);
    v18 = static Font.system(_:design:weight:)(v10, v6, 0, 1);
    sub_100010960((uint64_t)v6, &qword_1009CEDD0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v19 = Font.bold()(v18);
    swift_release(v18);
    v30 = v16;
    v31 = v15;
    v32 = v19;
    v33 = 1;
    v20 = sub_1002EE42C();
  }
  else
  {
    v21 = swift_bridgeObjectRetain(*(_QWORD *)(a1 + 32));
    v22 = Image.init(_:bundle:)(v16, v15, 0, v21);
    v23 = enum case for Image.TemplateRenderingMode.template(_:);
    v24 = type metadata accessor for Image.TemplateRenderingMode(0);
    v25 = *(_QWORD *)(v24 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v14, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v14, 0, 1, v24);
    v26 = Image.renderingMode(_:)(v14, v22);
    swift_release(v22);
    sub_100010960((uint64_t)v14, &qword_1009D59A8);
    v30 = v26;
    v20 = sub_1002EE42C();
    v31 = 0;
    v32 = 0;
    v33 = 0;
  }
  _ConditionalContent<>.init(storage:)(&v30, &type metadata for Image, &type metadata for SymbolImageView, &protocol witness table for Image, v20);
  result = *(double *)&v34;
  v28 = v35;
  v29 = v36;
  *(_OWORD *)a2 = v34;
  *(_QWORD *)(a2 + 16) = v28;
  *(_BYTE *)(a2 + 24) = v29;
  return result;
}

void sub_100365D04(uint64_t a1@<X8>)
{
  sub_1003658D0(a1);
}

_QWORD *sub_100365D44(_QWORD *a1)
{
  swift_retain(*a1);
  return a1;
}

uint64_t sub_100365D74(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) == 0)
      return 0;
  }
  else if ((a6 & 1) != 0)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
}

unint64_t sub_100365DBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DD460;
  if (!qword_1009DD460)
  {
    v1 = sub_100030B74(&qword_1009DD450);
    result = swift_getWitnessTable(&unk_100716600, v1);
    atomic_store(result, (unint64_t *)&qword_1009DD460);
  }
  return result;
}

uint64_t sub_100365E08(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void **v9;
  void *v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v18 = _swiftEmptyArrayStorage;
  result = sub_100366A6C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        v18 = v3;
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_100366A6C(v7 > 1, v8 + 1, 1);
          v3 = v18;
        }
        ++v5;
        v16 = type metadata accessor for ContextAssetInfo();
        v17 = sub_100368A68();
        *(_QWORD *)&v15 = v6;
        v3[2] = v8 + 1;
        sub_100022840(&v15, (uint64_t)&v3[5 * v8 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v9 = (void **)(a1 + 32);
      do
      {
        v10 = *v9;
        v18 = v3;
        v11 = v3[2];
        v12 = v3[3];
        v13 = v10;
        if (v11 >= v12 >> 1)
        {
          sub_100366A6C(v12 > 1, v11 + 1, 1);
          v3 = v18;
        }
        v16 = type metadata accessor for ContextAssetInfo();
        v17 = sub_100368A68();
        *(_QWORD *)&v15 = v13;
        v3[2] = v11 + 1;
        sub_100022840(&v15, (uint64_t)&v3[5 * v11 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100365FC8(uint64_t a1)
{
  return sub_10003AA28(a1, (unint64_t *)&unk_1009DC2F0, UIResponder_ptr);
}

uint64_t sub_100365FDC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t i;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  _QWORD *v16;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v13 = a1;
    else
      v13 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v16 = _swiftEmptyArrayStorage;
  result = sub_10003AC8C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        v6 = type metadata accessor for HighlightPaginationEntity(0);
        swift_dynamicCast(v15, &v14, v6, (char *)&type metadata for Any + 8, 7);
        v3 = v16;
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        {
          sub_10003AC8C(0, v3[2] + 1, 1);
          v3 = v16;
        }
        v8 = v3[2];
        v7 = v3[3];
        if (v8 >= v7 >> 1)
        {
          sub_10003AC8C(v7 > 1, v8 + 1, 1);
          v3 = v16;
        }
        v3[2] = v8 + 1;
        sub_10004CFC4(v15, &v3[4 * v8 + 4]);
      }
    }
    else
    {
      v9 = (uint64_t *)(a1 + 32);
      v10 = type metadata accessor for HighlightPaginationEntity(0);
      do
      {
        v14 = *v9;
        swift_retain(v14);
        swift_dynamicCast(v15, &v14, v10, (char *)&type metadata for Any + 8, 7);
        v3 = v16;
        if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        {
          sub_10003AC8C(0, v3[2] + 1, 1);
          v3 = v16;
        }
        v12 = v3[2];
        v11 = v3[3];
        if (v12 >= v11 >> 1)
        {
          sub_10003AC8C(v11 > 1, v12 + 1, 1);
          v3 = v16;
        }
        v3[2] = v12 + 1;
        sub_10004CFC4(v15, &v3[4 * v12 + 4]);
        ++v9;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10036620C(uint64_t a1)
{
  return sub_100024D14(a1, &qword_1009D3090);
}

_QWORD *sub_100366218(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v9[2];
  _OWORD v10[2];
  _QWORD *v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v11 = _swiftEmptyArrayStorage;
    sub_10003AC8C(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v9[0] = *(v4 - 1);
      v9[1] = v5;
      swift_bridgeObjectRetain(v5);
      swift_dynamicCast(v10, v9, &type metadata for String, (char *)&type metadata for Any + 8, 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_10003AC8C(0, v2[2] + 1, 1);
        v2 = v11;
      }
      v7 = v2[2];
      v6 = v2[3];
      if (v7 >= v6 >> 1)
      {
        sub_10003AC8C(v6 > 1, v7 + 1, 1);
        v2 = v11;
      }
      v4 += 2;
      v2[2] = v7 + 1;
      sub_10004CFC4(v10, &v2[4 * v7 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_10036633C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[2];
  _QWORD *v14;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = _swiftEmptyArrayStorage;
  if (!v2)
    return (uint64_t)v3;
  v14 = _swiftEmptyArrayStorage;
  result = sub_10003AC8C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      v3 = v14;
      do
      {
        v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
        swift_dynamicCast(v13, &v12, (char *)&type metadata for Swift.AnyObject + 8, (char *)&type metadata for Any + 8, 7);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_10003AC8C(0, v3[2] + 1, 1);
          v3 = v14;
        }
        v7 = v3[2];
        v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_10003AC8C(v6 > 1, v7 + 1, 1);
          v3 = v14;
        }
        ++v5;
        v3[2] = v7 + 1;
        sub_10004CFC4(v13, &v3[4 * v7 + 4]);
      }
      while (v2 != v5);
    }
    else
    {
      v8 = (uint64_t *)(a1 + 32);
      v3 = v14;
      do
      {
        v12 = *v8;
        swift_unknownObjectRetain(v12);
        swift_dynamicCast(v13, &v12, (char *)&type metadata for Swift.AnyObject + 8, (char *)&type metadata for Any + 8, 7);
        if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
        {
          sub_10003AC8C(0, v3[2] + 1, 1);
          v3 = v14;
        }
        v10 = v3[2];
        v9 = v3[3];
        if (v10 >= v9 >> 1)
        {
          sub_10003AC8C(v9 > 1, v10 + 1, 1);
          v3 = v14;
        }
        v3[2] = v10 + 1;
        sub_10004CFC4(v13, &v3[4 * v10 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100366570(uint64_t a1)
{
  __n128 v2;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = sub_10004CFD4(&qword_1009D2360);
    v7 = _bridgeCocoaArray<A>(_:)(v4, v5, v6);
    swift_bridgeObjectRelease(a1);
    return v7;
  }
  else
  {
    v2 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
    return a1;
  }
}

id BKSharedWithYouProvider.dynamicArray.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC5Books23BKSharedWithYouProvider_dynamicArray);
}

void sub_1003665F8(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t inited;
  char *v10;
  unint64_t v11;
  id v12;
  Class isa;
  Class v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v26;
  _QWORD v27[2];
  _BYTE v28[104];

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v8, v28);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  v27[0] = 0x6D614E6775626564;
  v27[1] = 0xE900000000000065;
  v10 = v2;
  AnyHashable.init<A>(_:)(v27, &type metadata for String, &protocol witness table for String);
  *(_QWORD *)(inited + 96) = &type metadata for String;
  *(_QWORD *)(inited + 72) = 0xD000000000000022;
  *(_QWORD *)(inited + 80) = 0x80000001007B2540;
  v11 = sub_1000560A8(inited);
  v12 = objc_allocWithZone((Class)BSUIDynamicArray);
  sub_10004CFD4((uint64_t *)&unk_1009CEC70);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v14 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  v15 = objc_msgSend(v12, "initWithArray:options:", isa, v14);

  if (v15)
  {
    *(_QWORD *)&v10[OBJC_IVAR____TtC5Books23BKSharedWithYouProvider_dynamicArray] = v15;
    *(_QWORD *)&v10[OBJC_IVAR____TtC5Books23BKSharedWithYouProvider_sharedWithYouController] = a1;
    v16 = a1;

    v26.receiver = v10;
    v26.super_class = ObjectType;
    v17 = objc_msgSendSuper2(&v26, "init");
    v18 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v7, 1, 1, v18);
    type metadata accessor for MainActor(0);
    v19 = v17;
    v20 = v16;
    v21 = v19;
    v22 = static MainActor.shared.getter(v21);
    v23 = (_QWORD *)swift_allocObject(&unk_1008FF738, 48, 7);
    v23[2] = v22;
    v23[3] = &protocol witness table for MainActor;
    v23[4] = v20;
    v23[5] = v21;
    v24 = sub_10030C02C((uint64_t)v7, (uint64_t)&unk_1009DD630, (uint64_t)v23);
    swift_release(v24);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100366878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003668E4, v7, v8);
}

uint64_t sub_1003668E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 32));
  v2 = BSUISharedWithYouController.attach(_:)(v1);
  dispatch thunk of BSUISharedWithYouController.refresh()(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100366924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_10036693C, 0, 0);
}

uint64_t sub_10036693C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[3] = *(_QWORD *)(v0[2] + OBJC_IVAR____TtC5Books23BKSharedWithYouProvider_sharedWithYouController);
  v1 = type metadata accessor for MainActor(0);
  v0[4] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003669B8, v2, v3);
}

uint64_t sub_1003669B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_release(*(_QWORD *)(v0 + 32));
  dispatch thunk of BSUISharedWithYouController.refresh()(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100366A24(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100368120(a1, a2, a3, *v3, &qword_1009DD4D0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366A50(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100366F84(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100366A6C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368440(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD4A8, &qword_1009DD4B0);
  *v3 = result;
  return result;
}

uint64_t sub_100366A98(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368AD8(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD4D8, (uint64_t (*)(_QWORD))&type metadata accessor for ScoredBook);
  *v3 = result;
  return result;
}

uint64_t sub_100366AC4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100367128(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366AE0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100367284(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366AFC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100368910(a1, a2, a3, *v3, &qword_1009D2F30);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366B20(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100367408(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366B3C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368AD8(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD6D8, (uint64_t (*)(_QWORD))&type metadata accessor for LibraryBookInfo);
  *v3 = result;
  return result;
}

uint64_t sub_100366B68(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368AD8(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD6D0, (uint64_t (*)(_QWORD))&type metadata accessor for LibraryAudiobookInfo);
  *v3 = result;
  return result;
}

uint64_t sub_100366B94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10003F208(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD638, &qword_1009DD640);
  *v3 = result;
  return result;
}

uint64_t sub_100366BC0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100367554(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366BDC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003676A0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100366BF8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100367828(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366C14(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100368120(a1, a2, a3, *v3, &qword_1009DD4E8);
  *v3 = (char *)result;
  return result;
}

uint64_t type metadata accessor for BKSharedWithYouProvider()
{
  return objc_opt_self(_TtC5Books23BKSharedWithYouProvider);
}

uint64_t sub_100366C60(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368440(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1009DD6B0, &qword_1009DDF20);
  *v3 = result;
  return result;
}

uint64_t sub_100366C8C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368440(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD680, &qword_1009DD688);
  *v3 = result;
  return result;
}

uint64_t sub_100366CB8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368AD8(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1009DD5F8, (uint64_t (*)(_QWORD))&type metadata accessor for ScoredGenre);
  *v3 = result;
  return result;
}

uint64_t sub_100366CE4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10036798C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100366D00(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368AD8(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD580, (uint64_t (*)(_QWORD))&type metadata accessor for ContinuousClock.Instant);
  *v3 = result;
  return result;
}

uint64_t sub_100366D2C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100367CD0(a1, a2, a3, *v3, &qword_1009DD5A0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366D58(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100367B48(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366D74(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368440(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD6A0, &qword_1009DD6A8);
  *v3 = result;
  return result;
}

uint64_t sub_100366DA0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100367CD0(a1, a2, a3, *v3, &qword_1009DD5C8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366DCC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100367E50(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366DE8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100367FB8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366E04(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100368120(a1, a2, a3, *v3, &qword_1009DD5C0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366E30(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100368120(a1, a2, a3, *v3, &qword_1009DD5B8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366E5C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10036828C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100366E78(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1003685E4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100366E94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10003F208(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD668, &qword_1009DD560);
  *v3 = result;
  return result;
}

uint64_t sub_100366EC0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368768(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_100366EDC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_100368910(a1, a2, a3, *v3, &qword_1009DD578);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_100366F00(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368AD8(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD4C8, (uint64_t (*)(_QWORD))&type metadata accessor for UserFeature);
  *v3 = result;
  return result;
}

uint64_t sub_100366F2C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368AD8(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD590, (uint64_t (*)(_QWORD))&type metadata accessor for SelectionInfo);
  *v3 = result;
  return result;
}

uint64_t sub_100366F58(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_100368AD8(a1, a2, a3, (_QWORD *)*v3, &qword_1009DD5B0, (uint64_t (*)(_QWORD))&type metadata accessor for SeedBook);
  *v3 = result;
  return result;
}

uint64_t sub_100366F84(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4((uint64_t *)&unk_1009D2B30);
    v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 48 * v8)
      memmove(v11 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 48 * v8 || v13 >= v14 + 48 * v8)
  {
    sub_10004CFD4((uint64_t *)&unk_1009D2380);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100367128(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009DD5E0);
    v11 = (char *)swift_allocObject(v10, 4 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 29;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 2);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[4 * v8])
      memmove(v14, v15, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[4 * v8] || v14 >= &v15[4 * v8])
  {
    memcpy(v14, v15, 4 * v8);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100367284(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4((uint64_t *)&unk_1009DD5E8);
    v11 = (char *)swift_allocObject(v10, 24 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v8])
      memmove(v13, v14, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[24 * v8] || v13 >= &v14[24 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100367408(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009DD5D8);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100367554(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009DD650);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003676A0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4((uint64_t *)&unk_1009DD4B8);
    v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 4);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 16 * v8)
      memmove(v11 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 16 * v8 || v14 >= v15 + 16 * v8)
  {
    sub_10004CFD4(&qword_1009D2A80);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100367828(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009DD4F0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  v16 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10036798C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009DD4F8);
    v11 = (_QWORD *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 56 * v8)
      memmove(v11 + 4, a4 + 4, 56 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 56 * v8 || v13 >= v14 + 56 * v8)
  {
    sub_10004CFD4(&qword_1009DD500);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100367B34(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1000448CC(a1, a2, a3, a4, &qword_1009DD748, &qword_1009DD750);
}

uint64_t sub_100367B48(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009DD648);
    v11 = (char *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[56 * v8])
      memmove(v13, v14, 56 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[56 * v8] || v13 >= &v14[56 * v8])
  {
    swift_arrayInitWithCopy(v13);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100367CD0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;
  size_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10004CFD4(a5);
    v12 = (char *)swift_allocObject(v11, 72 * v10 + 32, 7);
    v13 = j__malloc_size_0(v12);
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * ((uint64_t)(v13 - 32) / 72);
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v12 + 32;
  v15 = a4 + 32;
  v16 = 72 * v9;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v14 >= &v15[v16])
      memmove(v14, v15, v16);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy(v14);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100367E50(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009DD588);
    v11 = (char *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  v15 = 40 * v8;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100367FB8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009DD5D0);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100368120(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10004CFD4(a5);
    v12 = (char *)swift_allocObject(v11, 32 * v10 + 32, 7);
    v13 = j__malloc_size_0(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 1;
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 5);
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[32 * v9])
      memmove(v15, v16, 32 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[32 * v9] || v15 >= &v16[32 * v9])
  {
    swift_arrayInitWithCopy(v15);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10036828C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009DD658);
    v11 = (_QWORD *)swift_allocObject(v10, 40 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 40 * v8)
      memmove(v11 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 40 * v8 || v13 >= v14 + 40 * v8)
  {
    sub_10004CFD4(&qword_1009DD660);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10036842C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100368440(a1, a2, a3, a4, (uint64_t *)&unk_1009DD690, &qword_1009D6FF0);
}

uint64_t sub_100368440(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    v13 = sub_10004CFD4(a5);
    v14 = (_QWORD *)swift_allocObject(v13, 40 * v12 + 32, 7);
    v15 = j__malloc_size_0(v14);
    v14[2] = v11;
    v14[3] = 2 * ((uint64_t)(v15 - 32) / 40);
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  v16 = (unint64_t)(v14 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v14 != a4 || v16 >= v17 + 40 * v11)
      memmove(v14 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v17 >= v16 + 40 * v11 || v16 >= v17 + 40 * v11)
  {
    sub_10004CFD4(a6);
    swift_arrayInitWithCopy(v14 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v14;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003685E4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4(&qword_1009DD570);
    v11 = (_QWORD *)swift_allocObject(v10, 8 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    v11[2] = v8;
    v11[3] = 2 * (v13 >> 3);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v14 = (unint64_t)(v11 + 4);
  v15 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= v15 + 8 * v8)
      memmove(v11 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v15 >= v14 + 8 * v8 || v14 >= v15 + 8 * v8)
  {
    type metadata accessor for MCatalogRequestRelationship(0);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100368768(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_10004CFD4((uint64_t *)&unk_1009DD670);
    v11 = (_QWORD *)swift_allocObject(v10, 56 * v9 + 32, 7);
    v12 = j__malloc_size_0(v11);
    v11[2] = v8;
    v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v13 = (unint64_t)(v11 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= v14 + 56 * v8)
      memmove(v11 + 4, a4 + 4, 56 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v14 >= v13 + 56 * v8 || v13 >= v14 + 56 * v8)
  {
    sub_10004CFD4((uint64_t *)&unk_1009EF330);
    swift_arrayInitWithCopy(v11 + 4);
LABEL_28:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100368910(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    v11 = sub_10004CFD4(a5);
    v12 = (char *)swift_allocObject(v11, 8 * v10 + 32, 7);
    v13 = j__malloc_size_0(v12);
    v14 = v13 - 32;
    if (v13 < 32)
      v14 = v13 - 25;
    *((_QWORD *)v12 + 2) = v9;
    *((_QWORD *)v12 + 3) = 2 * (v14 >> 3);
  }
  else
  {
    v12 = (char *)_swiftEmptyArrayStorage;
  }
  v15 = v12 + 32;
  v16 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v12 != a4 || v15 >= &v16[8 * v9])
      memmove(v15, v16, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v16 >= &v15[8 * v9] || v15 >= &v16[8 * v9])
  {
    memcpy(v15, v16, 8 * v9);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v12;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

unint64_t sub_100368A68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DD4E0;
  if (!qword_1009DD4E0)
  {
    v1 = type metadata accessor for ContextAssetInfo();
    result = swift_getWitnessTable(&unk_100716928, v1);
    atomic_store(result, (unint64_t *)&qword_1009DD4E0);
  }
  return result;
}

uint64_t sub_100368AB0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100368AD8(a1, a2, a3, a4, &qword_1009DD598, (uint64_t (*)(_QWORD))&type metadata accessor for Event);
}

uint64_t sub_100368AC4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100368AD8(a1, a2, a3, a4, &qword_1009DD5B0, (uint64_t (*)(_QWORD))&type metadata accessor for SeedBook);
}

uint64_t sub_100368AD8(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_10004CFD4(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size_0(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = a6(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v24 = (char *)v18 + v23;
  v25 = (char *)a4 + v23;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v24 >= &v25[*(_QWORD *)(v22 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v24, v25, v11, v21);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v24, v25);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v26 = *(_QWORD *)(v22 + 72) * v11;
  v27 = &v24[v26];
  v28 = (unint64_t)&v25[v26];
  if (v25 >= v27 || (unint64_t)v24 >= v28)
  {
    swift_arrayInitWithCopy(v24);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100368CB8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100368CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1009DD60C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001FC2C4;
  v3[2] = v2;
  return swift_task_switch(sub_10036693C, 0, 0);
}

uint64_t sub_100368D44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100368D68()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100368D9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009DD62C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000AE34;
  return sub_100366878(a1, v4, v5, v7, v6);
}

uint64_t sub_100368E14()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009DD758);
  sub_100048F64(v0, (uint64_t)qword_1009DD758);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000018, 0x800000010071D770);
}

void sub_100368E90(void *a1)
{
  char *v1;
  void *v3;
  id v4;
  id v5;
  char *v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  id v14;
  int v15;
  uint64_t countAndFlagsBits;
  id object;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  char v22;
  char v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  NSString v28;
  id v29;
  id v30;
  char v31;
  int v32;
  uint64_t v33;
  void *v34;
  id v35;
  id v36;
  double v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  char v42;
  unint64_t v43;
  void *v44;
  NSString v45;
  id v46;
  _QWORD *v47;
  char v48;
  double v49;
  Swift::String v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  objc_super v56;

  v56.receiver = v1;
  v56.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v56, "validateCommand:", a1);
  v3 = *(void **)&v1[OBJC_IVAR___BKAppInternalActionHandler_sceneManager];
  v4 = objc_msgSend(v3, "primarySceneController");
  v5 = objc_msgSend(v4, "rootBarCoordinator");

  if (v5)
  {
    v6 = (char *)objc_msgSend(v5, "selectedItem");
    swift_unknownObjectRelease(v5);
    if (v6)
    {
      v7 = *(_QWORD *)&v6[OBJC_IVAR___BKRootBarItem_identifier];
      v5 = *(id *)&v6[OBJC_IVAR___BKRootBarItem_identifier + 8];
      swift_bridgeObjectRetain(v5);

    }
    else
    {
      v7 = 0;
      v5 = 0;
    }
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(a1, "action");
  if ((static Selector.== infix(_:_:)("books_internal_selectSidebarItem:", v8) & 1) != 0)
  {
    v9 = objc_msgSend(a1, "propertyList");
    if (v9)
    {
      v10 = v9;
      _bridgeAnyObjectToAny(_:)(v9);
      swift_unknownObjectRelease(v10);
    }
    else
    {
      v51 = 0u;
      v52 = 0u;
    }
    sub_10004C7B4((uint64_t)&v51, (uint64_t)&v53);
    if (v55)
    {
      v15 = swift_dynamicCast(&v50, &v53, (char *)&type metadata for Any + 8, &type metadata for String, 6);
      if (v15)
        countAndFlagsBits = v50._countAndFlagsBits;
      else
        countAndFlagsBits = 0;
      if (v15)
        object = v50._object;
      else
        object = 0;
      if (v5)
      {
        if (object)
        {
          if (v7 == countAndFlagsBits && v5 == object)
          {
            swift_bridgeObjectRelease(v5);
            v12 = (unint64_t)object;
            goto LABEL_30;
          }
          v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v5, countAndFlagsBits, object, 0);
          swift_bridgeObjectRelease(v5);
          v11 = swift_bridgeObjectRelease(object).n128_u64[0];
          if ((v23 & 1) != 0)
            goto LABEL_45;
          goto LABEL_39;
        }
      }
      else
      {
        v5 = object;
        if (!object)
          goto LABEL_45;
      }
    }
    else
    {
      sub_10004A7B8((uint64_t)&v53);
      if (!v5)
        goto LABEL_45;
    }
    v11 = swift_bridgeObjectRelease(v5).n128_u64[0];
    goto LABEL_39;
  }
  if ((static Selector.== infix(_:_:)("books_internal_selectSidebarSearch:", v8) & 1) != 0)
  {
    if (v5)
    {
      if (v7 == 0x686372616573 && v5 == (id)0xE600000000000000)
      {
        v12 = 0xE600000000000000;
LABEL_30:
        v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
        v18 = 1;
LABEL_46:
        objc_msgSend(a1, "setState:", v18, *(double *)&v11);
        return;
      }
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v5, 0x686372616573, 0xE600000000000000, 0);
      v11 = swift_bridgeObjectRelease(v5).n128_u64[0];
      if ((v22 & 1) != 0)
      {
LABEL_45:
        v18 = 1;
        goto LABEL_46;
      }
    }
LABEL_39:
    v18 = 0;
    goto LABEL_46;
  }
  if ((static Selector.== infix(_:_:)("books_internal_selectSidebarCollection:", v8) & 1) != 0)
  {
    v13 = objc_msgSend(a1, "propertyList");
    if (v13)
    {
      v14 = v13;
      _bridgeAnyObjectToAny(_:)(v13);
      swift_unknownObjectRelease(v14);
    }
    else
    {
      v51 = 0u;
      v52 = 0u;
    }
    sub_10004C7B4((uint64_t)&v51, (uint64_t)&v53);
    if (v55)
    {
      if ((swift_dynamicCast(&v50, &v53, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v24 = v50._object;
        v53 = 0x3A6D6F74737563;
        v54 = 0xE700000000000000;
        String.append(_:)(v50);
        swift_bridgeObjectRelease(v24);
        v25 = v54;
        if (v5)
        {
          if (v7 == v53 && v5 == (id)v54)
          {
            swift_bridgeObjectRelease(v5);
            v26 = swift_bridgeObjectRelease(v25).n128_u64[0];
LABEL_64:
            objc_msgSend(a1, "setState:", 1, *(double *)&v26);
            return;
          }
          v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v5, v53, v54, 0);
          swift_bridgeObjectRelease(v5);
          v26 = swift_bridgeObjectRelease(v25).n128_u64[0];
          if ((v31 & 1) != 0)
            goto LABEL_64;
        }
        else
        {
          v26 = swift_bridgeObjectRelease(v54).n128_u64[0];
        }
      }
      else
      {
        v26 = swift_bridgeObjectRelease(v5).n128_u64[0];
      }
    }
    else
    {
      swift_bridgeObjectRelease(v5);
      sub_10004A7B8((uint64_t)&v53);
    }
LABEL_91:
    objc_msgSend(a1, "setState:", 0, *(double *)&v26);
    return;
  }
  swift_bridgeObjectRelease(v5);
  if ((static Selector.== infix(_:_:)("books_internal_toggleFakePlayer:", v8) & 1) != 0)
  {
    v19 = objc_msgSend(v3, "primarySceneController");
    v20 = objc_msgSend(v19, "rootBarCoordinator");

    if (v20)
    {
      v21 = objc_msgSend(v20, "miniPlayerViewController");
      swift_unknownObjectRelease(v20);
      if (v21)
      {

        v18 = 1;
        goto LABEL_46;
      }
    }
    goto LABEL_39;
  }
  if ((static Selector.== infix(_:_:)("books_internal_toggleRecordingLiveResizeStats:", v8) & 1) != 0)
  {
    v18 = objc_msgSend(*(id *)&v1[OBJC_IVAR___BKAppInternalActionHandler_userDefaults], "BOOLForKey:", TUIUserDefaultRecordLiveResizeStats);
    goto LABEL_46;
  }
  if ((static Selector.== infix(_:_:)("books_internal_disableStoreInternalDebugMessageUI:", v8) & 1) != 0)
  {
    v27 = *(void **)&v1[OBJC_IVAR___BKAppInternalActionHandler_userDefaults];
    v28 = String._bridgeToObjectiveC()();
    LODWORD(v27) = objc_msgSend(v27, "BOOLForKey:", v28);

    v18 = v27;
    goto LABEL_46;
  }
  if ((static Selector.== infix(_:_:)("books_internal_setLegacyAccount:", v8) & 1) != 0)
  {
    v29 = objc_msgSend(a1, "propertyList");
    if (v29)
    {
      v30 = v29;
      _bridgeAnyObjectToAny(_:)(v29);
      swift_unknownObjectRelease(v30);
    }
    else
    {
      v51 = 0u;
      v52 = 0u;
    }
    sub_10004C7B4((uint64_t)&v51, (uint64_t)&v53);
    if (v55)
    {
      v32 = swift_dynamicCast(&v50, &v53, (char *)&type metadata for Any + 8, &type metadata for String, 6);
      if (v32)
        v33 = v50._countAndFlagsBits;
      else
        v33 = 0;
      if (v32)
        v34 = v50._object;
      else
        v34 = 0;
    }
    else
    {
      sub_10004A7B8((uint64_t)&v53);
      v33 = 0;
      v34 = 0;
    }
    v35 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
    v36 = objc_msgSend(v35, "activeStoreAccount");

    if (v36 && (v38 = objc_msgSend(v36, "username"), v36, v38))
    {
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38);
      v41 = v40;

      if (v34)
      {
        if (v39 == v33 && v34 == v41)
        {
          *(_QWORD *)&v37 = swift_bridgeObjectRelease(v41).n128_u64[0];
LABEL_84:
          v43 = (unint64_t)objc_msgSend(a1, "attributes", v37) | 1;
LABEL_86:
          objc_msgSend(a1, "setAttributes:", v43);
          if (v34)
          {
            v44 = *(void **)&v1[OBJC_IVAR___BKAppInternalActionHandler_accountStore];
            v45 = String._bridgeToObjectiveC()();
            v46 = objc_msgSend(v44, "ams_iTunesAccountWithUsername:", v45, swift_bridgeObjectRelease(v34).n128_f64[0]);

            if (v46)
            {
              v47 = sub_100369648();
              v48 = sub_1004EC100(0xD000000000000033, 0x80000001007B8E30, v47);
              *(_QWORD *)&v49 = swift_bridgeObjectRelease(v47).n128_u64[0];
              if ((v48 & 1) != 0)
              {
                objc_msgSend(a1, "setState:", 1, v49);

                return;
              }

            }
          }
          goto LABEL_91;
        }
        v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, v33, v34, 0);
        *(_QWORD *)&v37 = swift_bridgeObjectRelease(v41).n128_u64[0];
        if ((v42 & 1) != 0)
          goto LABEL_84;
      }
      else
      {
        swift_bridgeObjectRelease(v41);
      }
    }
    else if (!v34)
    {
      goto LABEL_84;
    }
    v43 = (unint64_t)objc_msgSend(a1, "attributes") & 0xFFFFFFFFFFFFFFFELL;
    goto LABEL_86;
  }
}

_QWORD *sub_100369648()
{
  void *v0;
  _QWORD *result;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  result = objc_msgSend(v0, "accountProperties");
  if (result)
  {
    v2 = result;
    *(_QWORD *)&v7[0] = 0xD000000000000010;
    *((_QWORD *)&v7[0] + 1) = 0x80000001007B8E10;
    v3 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v7, &type metadata for String);
    v4 = objc_msgSend(v2, "__swift_objectForKeyedSubscript:", v3);
    swift_unknownObjectRelease(v3);

    if (v4)
    {
      _bridgeAnyObjectToAny(_:)(v4);
      swift_unknownObjectRelease(v4);
    }
    else
    {
      memset(v7, 0, sizeof(v7));
    }
    sub_10004C7B4((uint64_t)v7, (uint64_t)v8);
    if (v9)
    {
      v5 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
      if ((swift_dynamicCast(&v6, v8, (char *)&type metadata for Any + 8, v5, 6) & 1) != 0)
        return (_QWORD *)v6;
    }
    else
    {
      sub_10004A7B8((uint64_t)v8);
    }
    return _swiftEmptyArrayStorage;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003697C4()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___BKAppInternalActionHandler_sceneManager), "bookFlowController");
  v2 = objc_msgSend(v1, "sceneHosting");

  if (v2)
  {
    v3 = objc_msgSend(v2, "currentSceneController");
    swift_unknownObjectRelease(v2);
    if (v3)
    {
      v4 = objc_msgSend(v3, "genericPresenting");
      swift_unknownObjectRelease(v3);
      v5 = objc_msgSend(objc_allocWithZone((Class)BKDebugViewController), "initWithStyle:", 1);
      v6 = objc_msgSend(objc_allocWithZone((Class)BSUINavigationController), "initWithRootViewController:", v5);
      objc_msgSend(v4, "presenterShowModalController:animated:completion:", v6, 1, 0);
      swift_unknownObjectRelease(v4);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003699B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void *v9;
  id v10;
  void *v11;
  unint64_t v12;
  NSURL *v13;
  void *v14;
  void *v15;
  Class isa;
  uint64_t v17;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000030, 0x80000001007C3470);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    v9 = *(void **)(v0 + OBJC_IVAR___BKAppInternalActionHandler_application);
    v10 = objc_msgSend(v9, "delegate");
    if (v10)
    {
      v11 = v10;
      if ((objc_msgSend(v10, "respondsToSelector:", "application:openURL:options:") & 1) != 0)
      {
        v12 = sub_1001DAB4C((uint64_t)_swiftEmptyArrayStorage);
        URL._bridgeToObjectiveC()(v13);
        v15 = v14;
        type metadata accessor for OpenURLOptionsKey(0);
        sub_10036BA9C();
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v11, "application:openURL:options:", v9, v15, isa);
        swift_unknownObjectRelease(v11);
        swift_bridgeObjectRelease(v12);

      }
      else
      {
        swift_unknownObjectRelease(v11);
      }
    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

void sub_100369B98()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___BKAppInternalActionHandler_sceneManager), "primarySceneController");
  v2 = objc_msgSend(v1, "rootBarCoordinator");

  if (v2)
  {
    v3 = objc_msgSend(v2, "miniPlayerViewController");

    if (v3)
    {
      objc_msgSend(v2, "undockMiniPlayer");
      swift_unknownObjectRelease(v2);
    }
    else
    {
      v4 = type metadata accessor for FakePlayerViewController();
      v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v4)), "init");
      objc_msgSend(v2, "dockMiniPlayer:", v5);
      swift_unknownObjectRelease(v2);

    }
  }
}

uint64_t sub_100369CA0(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  id v7;
  uint64_t v8;
  id v9;
  _OWORD v11[2];

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v8);
    v9 = (id)swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    v9 = a1;
  }
  a4(v9);

  return sub_10004A7B8((uint64_t)v11);
}

double sub_10036A1BC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  double result;
  uint64_t v17;
  id v18;
  id v19;
  NSString v20;
  id v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  sub_10004AA7C(a1, (uint64_t)&v22);
  if (!*((_QWORD *)&v23 + 1))
  {
    sub_10004A7B8((uint64_t)&v22);
    goto LABEL_6;
  }
  v3 = sub_10021AC80();
  if ((swift_dynamicCast(&v21, &v22, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
  {
LABEL_6:
    v24 = 0u;
    v25 = 0u;
LABEL_7:
    sub_10004A7B8((uint64_t)&v24);
    goto LABEL_8;
  }
  v4 = v21;
  v5 = objc_msgSend(v21, "propertyList");

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)(v5);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_10004C7B4((uint64_t)&v22, (uint64_t)&v24);
  if (!*((_QWORD *)&v25 + 1))
    goto LABEL_7;
  if ((swift_dynamicCast(&v22, &v24, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v17 = *((_QWORD *)&v22 + 1);
    v18 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR___BKAppInternalActionHandler_sceneManager), "primarySceneController"));
    v19 = objc_msgSend(v18, "rootBarCoordinator");

    if (v19)
    {
      v20 = String._bridgeToObjectiveC()();
      objc_msgSend(v19, "selectWithIdentifier:isUserAction:", v20, 1);
      swift_bridgeObjectRelease(v17);

      swift_unknownObjectRelease(v19);
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
    }
    return result;
  }
LABEL_8:
  if (qword_1009CE1C0 != -1)
    swift_once(&qword_1009CE1C0, sub_100368E14);
  v6 = type metadata accessor for Logger(0);
  sub_100048F64(v6, (uint64_t)qword_1009DD758);
  v7 = sub_10004AA7C(a1, (uint64_t)&v24);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (void *)swift_slowAlloc(32, -1);
    v21 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_10004AA7C((uint64_t)&v24, (uint64_t)&v22);
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
    v13 = String.init<A>(describing:)(&v22, v12);
    v15 = v14;
    *(_QWORD *)&v22 = sub_100040F58(v13, v14, (uint64_t *)&v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, (char *)&v22 + 8, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v15);
    sub_10004A7B8((uint64_t)&v24);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    sub_10004A7B8((uint64_t)&v24);
  }

  return result;
}

double sub_10036A5CC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  double result;
  void *object;
  void *v18;
  double v19;
  uint64_t v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  Swift::String v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  sub_10004AA7C(a1, (uint64_t)&v25);
  if (!*((_QWORD *)&v26 + 1))
  {
    sub_10004A7B8((uint64_t)&v25);
    goto LABEL_6;
  }
  v3 = sub_10021AC80();
  if ((swift_dynamicCast(&v24, &v25, (char *)&type metadata for Any + 8, v3, 6) & 1) == 0)
  {
LABEL_6:
    v27 = 0u;
    v28 = 0u;
LABEL_7:
    sub_10004A7B8((uint64_t)&v27);
    goto LABEL_8;
  }
  v4 = v24;
  v5 = objc_msgSend(v24, "propertyList");

  if (v5)
  {
    _bridgeAnyObjectToAny(_:)(v5);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v25 = (Swift::String)0;
    v26 = 0u;
  }
  sub_10004C7B4((uint64_t)&v25, (uint64_t)&v27);
  if (!*((_QWORD *)&v28 + 1))
    goto LABEL_7;
  if ((swift_dynamicCast(&v25, &v27, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    object = v25._object;
    v18 = *(void **)(v1 + OBJC_IVAR___BKAppInternalActionHandler_sceneManager);
    *(_QWORD *)&v27 = 0x3A6D6F74737563;
    *((_QWORD *)&v27 + 1) = 0xE700000000000000;
    String.append(_:)(v25);
    *(_QWORD *)&v19 = swift_bridgeObjectRelease(object).n128_u64[0];
    v20 = *((_QWORD *)&v27 + 1);
    v21 = objc_msgSend(v18, "primarySceneController", v19);
    v22 = objc_msgSend(v21, "rootBarCoordinator");

    if (v22)
    {
      v23 = String._bridgeToObjectiveC()();
      objc_msgSend(v22, "selectWithIdentifier:isUserAction:", v23, 1);
      swift_bridgeObjectRelease(v20);

      swift_unknownObjectRelease(v22);
    }
    else
    {
      *(_QWORD *)&result = swift_bridgeObjectRelease(v20).n128_u64[0];
    }
    return result;
  }
LABEL_8:
  if (qword_1009CE1C0 != -1)
    swift_once(&qword_1009CE1C0, sub_100368E14);
  v6 = type metadata accessor for Logger(0);
  sub_100048F64(v6, (uint64_t)qword_1009DD758);
  v7 = sub_10004AA7C(a1, (uint64_t)&v27);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.error.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (void *)swift_slowAlloc(32, -1);
    v24 = v11;
    *(_DWORD *)v10 = 136315138;
    sub_10004AA7C((uint64_t)&v27, (uint64_t)&v25);
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
    v13 = String.init<A>(describing:)(&v25, v12);
    v15 = v14;
    v25._countAndFlagsBits = sub_100040F58(v13, v14, (uint64_t *)&v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v25._object, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v15);
    sub_10004A7B8((uint64_t)&v27);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    sub_10004A7B8((uint64_t)&v27);
  }

  return result;
}

id sub_10036A91C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  NSString v16;
  id v17;
  id v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  BOOL v23;
  uint8_t *v24;
  uint8_t *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint8_t *v33;
  os_log_t v34;
  char *v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  unint64_t v45;
  id result;
  uint64_t (*v47)(char *, uint64_t);
  char *v48;
  void *v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  Class isa;
  NSString v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  id v72;
  uint8_t *v73;
  os_log_t v74;
  uint8_t *v75;
  int v76;
  char *v77;
  id v78;
  id v79;
  char *v80;
  uint64_t aBlock[3];
  void *v82;
  void (*v83)(uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85[2];
  __int128 v86;
  __int128 v87;

  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v73 - v8;
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000001ALL, 0x80000001007C3420);
  v10 = *(void **)(v1 + OBJC_IVAR___BKAppInternalActionHandler_accountStore);
  sub_10004AA7C(a1, (uint64_t)aBlock);
  if (!v82)
    goto LABEL_12;
  v11 = sub_10021AC80();
  if ((swift_dynamicCast(&v86, aBlock, (char *)&type metadata for Any + 8, v11, 6) & 1) == 0)
  {
LABEL_13:
    v36 = sub_10004AA7C(a1, (uint64_t)aBlock);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v85[0] = v40;
      *(_DWORD *)v39 = 136315138;
      v80 = (char *)v3;
      sub_10004AA7C((uint64_t)aBlock, (uint64_t)&v86);
      v41 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
      v42 = String.init<A>(describing:)(&v86, v41);
      v43 = v9;
      v45 = v44;
      *(_QWORD *)&v86 = sub_100040F58(v42, v44, v85);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, (char *)&v86 + 8, v39 + 4, v39 + 12);
      swift_bridgeObjectRelease(v45);
      sub_10004A7B8((uint64_t)aBlock);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Could not trigger command: %s", v39, 0xCu);
      swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v40, -1, -1);
      swift_slowDealloc(v39, -1, -1);

      return (id)(*(uint64_t (**)(char *, char *))(v4 + 8))(v43, v80);
    }
    sub_10004A7B8((uint64_t)aBlock);

    v47 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
    v48 = v9;
    return (id)v47(v48, v3);
  }
  v12 = (void *)v86;
  v13 = objc_msgSend((id)v86, "propertyList");
  if (v13)
  {
    v14 = v13;
    _bridgeAnyObjectToAny(_:)(v13);
    swift_unknownObjectRelease(v14);
  }
  else
  {
    v86 = 0u;
    v87 = 0u;
  }
  sub_10004C7B4((uint64_t)&v86, (uint64_t)aBlock);
  if (!v82)
  {

LABEL_12:
    sub_10004A7B8((uint64_t)aBlock);
    goto LABEL_13;
  }
  if ((swift_dynamicCast(v85, aBlock, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {

    goto LABEL_13;
  }
  v80 = v9;
  v15 = v85[1];
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v10, "ams_iTunesAccountWithUsername:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  if (!v17)
  {

    v9 = v80;
    goto LABEL_13;
  }
  v18 = v17;
  v19 = v80;
  v20 = Logger.logObject.getter(v18);
  v21 = static os_log_type_t.default.getter(v20);
  v22 = v21;
  v23 = os_log_type_enabled(v20, v21);
  v78 = v12;
  v79 = v18;
  if (v23)
  {
    v24 = (uint8_t *)swift_slowAlloc(12, -1);
    v77 = (char *)swift_slowAlloc(32, -1);
    aBlock[0] = (uint64_t)v77;
    v75 = v24;
    v76 = v22;
    *(_DWORD *)v24 = 136315138;
    v25 = v24 + 12;
    v73 = v24 + 4;
    v26 = v18;
    v27 = objc_msgSend(v26, "description");
    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v74 = v20;
    v29 = v28;
    v31 = v30;

    v32 = v31;
    *(_QWORD *)&v86 = sub_100040F58(v29, v31, aBlock);
    v19 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, (char *)&v86 + 8, v73, v25);

    v18 = v79;
    swift_bridgeObjectRelease(v32);
    v34 = v74;
    v33 = v75;
    _os_log_impl((void *)&_mh_execute_header, v74, (os_log_type_t)v76, "Account to turn into legacy: %s", v75, 0xCu);
    v35 = v77;
    swift_arrayDestroy(v77, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v33, -1, -1);

  }
  else
  {

  }
  result = objc_msgSend(v18, "accountProperties");
  if (result)
  {
    v49 = result;
    *(_QWORD *)&v86 = 0xD000000000000010;
    *((_QWORD *)&v86 + 1) = 0x80000001007B8E10;
    v50 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(&v86, &type metadata for String);
    v51 = objc_msgSend(v49, "__swift_objectForKeyedSubscript:", v50);
    swift_unknownObjectRelease(v50);

    if (v51)
    {
      _bridgeAnyObjectToAny(_:)(v51);
      swift_unknownObjectRelease(v51);
    }
    else
    {
      v86 = 0u;
      v87 = 0u;
    }
    sub_10004C7B4((uint64_t)&v86, (uint64_t)aBlock);
    if (v82)
    {
      v52 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
      if ((swift_dynamicCast(v85, aBlock, (char *)&type metadata for Any + 8, v52, 6) & 1) != 0)
      {
        v53 = (_QWORD *)v85[0];
LABEL_29:
        if ((sub_1004EC100(0xD000000000000033, 0x80000001007B8E30, v53) & 1) != 0)
        {
          swift_bridgeObjectRelease(v53);
          v55 = Logger.logObject.getter(v54);
          v56 = static os_log_type_t.default.getter(v55);
          if (os_log_type_enabled(v55, v56))
          {
            v57 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v57 = 0;
            _os_log_impl((void *)&_mh_execute_header, v55, v56, "MENU: Legacy account already has the right media types", v57, 2u);
            swift_slowDealloc(v57, -1, -1);

          }
          else
          {

          }
        }
        else
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v53);
          v77 = "";
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v53 = sub_100043ED0(0, v53[2] + 1, 1, v53);
          v60 = v53[2];
          v59 = v53[3];
          if (v60 >= v59 >> 1)
            v53 = sub_100043ED0((_QWORD *)(v59 > 1), v60 + 1, 1, v53);
          v53[2] = v60 + 1;
          v61 = &v53[2 * v60];
          v61[4] = 0xD000000000000033;
          v61[5] = 0x80000001007B8E30;
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v53);
          v63 = String._bridgeToObjectiveC()();
          v64 = v79;
          objc_msgSend(v79, "setAccountProperty:forKey:", isa, v63);

          v65 = objc_msgSend(v10, "ams_saveAccount:verifyCredentials:", v64, 0);
          v19 = v80;
          (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v80, v3);
          v66 = *(unsigned __int8 *)(v4 + 80);
          v67 = (v66 + 16) & ~v66;
          v68 = (v5 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
          v69 = swift_allocObject(&unk_1008FF760, v68 + 8, v66 | 7);
          (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v69 + v67, v6, v3);
          *(_QWORD *)(v69 + v68) = v64;
          v83 = sub_10036BA00;
          v84 = v69;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_1002A7214;
          v82 = &unk_1008FF778;
          v70 = _Block_copy(aBlock);
          v71 = v84;
          v72 = v64;
          objc_msgSend(v65, "addFinishBlock:", v70, swift_release(v71).n128_f64[0]);

          _Block_release(v70);
        }
        v47 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
        v48 = v19;
        return (id)v47(v48, v3);
      }
    }
    else
    {
      sub_10004A7B8((uint64_t)aBlock);
    }
    v53 = _swiftEmptyArrayStorage;
    goto LABEL_29;
  }
  __break(1u);
  return result;
}

void sub_10036B194(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  os_log_t osloga;
  NSObject *oslog;
  _QWORD v21[3];
  _BYTE v22[8];
  uint64_t v23;
  os_log_t v24;

  if (a2)
  {
    swift_errorRetain(a2);
    swift_errorRetain(a2);
    v6 = a4;
    swift_errorRetain(a2);
    v7 = v6;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(22, -1);
      v11 = (_QWORD *)swift_slowAlloc(8, -1);
      osloga = (os_log_t)swift_slowAlloc(32, -1);
      v23 = (uint64_t)v7;
      v24 = osloga;
      *(_DWORD *)v10 = 138412546;
      v12 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v10 + 4, v10 + 12);
      *v11 = v7;

      *(_WORD *)(v10 + 12) = 2080;
      swift_getErrorValue(a2, v22, v21);
      v13 = Error.localizedDescription.getter(v21[1], v21[2]);
      v15 = v14;
      v23 = sub_100040F58(v13, v14, (uint64_t *)&v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24, v10 + 14, v10 + 22);
      swift_bridgeObjectRelease(v15);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Error saving legacy books account %@: %s", (uint8_t *)v10, 0x16u);
      v16 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v11, 1, v16);
      swift_slowDealloc(v11, -1, -1);
      swift_arrayDestroy(osloga, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(osloga, -1, -1);
      swift_slowDealloc(v10, -1, -1);
      swift_errorRelease(a2);

    }
    else
    {
      swift_errorRelease(a2);

      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }
  }
  else
  {
    oslog = Logger.logObject.getter(a1);
    v17 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v17, "Success saving legacy books account", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
}

uint64_t sub_10036B478(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *))
{
  id v7;
  uint64_t v8;
  id v9;
  _OWORD v11[2];

  if (a3)
  {
    v7 = a1;
    v8 = swift_unknownObjectRetain(a3);
    _bridgeAnyObjectToAny(_:)(v8);
    swift_unknownObjectRelease(a3);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
    v9 = a1;
  }
  a4(v11);

  return sub_10004A7B8((uint64_t)v11);
}

uint64_t type metadata accessor for AppInternalActionHandler()
{
  return objc_opt_self(BKAppInternalActionHandler);
}

void sub_10036B67C()
{
  void *v0;
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  NSString v12;
  id v13;
  id v14;
  void *v15;
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for FakePlayerViewController();
  objc_msgSendSuper2(&v16, "viewDidLoad");
  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "bounds");
    v4 = v3;
    v6 = v5;
    v8 = v7;
    v10 = v9;

    v11 = objc_msgSend(objc_allocWithZone((Class)UILabel), "initWithFrame:", v4, v6, v8, v10);
    objc_msgSend(v11, "setAutoresizingMask:", 18);
    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v11, "setText:", v12);

    v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
    objc_msgSend(v11, "setTextColor:", v13);

    objc_msgSend(v11, "setTextAlignment:", 1);
    v14 = objc_msgSend(v0, "view");
    if (v14)
    {
      v15 = v14;
      objc_msgSend(v14, "addSubview:", v11);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10036B938()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FakePlayerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FakePlayerViewController()
{
  return objc_opt_self(_TtC5BooksP33_4CE531663E8287118D36641A99287EBA24FakePlayerViewController);
}

uint64_t sub_10036B98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_10036BA00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for Logger(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_10036B194(a1, a2, v2 + v6, *(void **)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10036BA60(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Achievement(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10036BA9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D0CD8;
  if (!qword_1009D0CD8)
  {
    type metadata accessor for OpenURLOptionsKey(255);
    result = swift_getWitnessTable(&unk_10070F094, v1);
    atomic_store(result, (unint64_t *)&qword_1009D0CD8);
  }
  return result;
}

uint64_t sub_10036BAE4(uint64_t a1)
{
  return sub_10036D464(a1, qword_1009DD800);
}

void sub_10036BAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  void *v11;
  uint64_t KeyPath;
  uint64_t v13;
  __n128 v14;
  char v15;
  uint64_t v16;
  char v17;
  _QWORD v18[3];
  _BYTE v19[24];

  v6 = type metadata accessor for Location(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v19, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v11 = (void *)Strong;
    KeyPath = swift_getKeyPath(&unk_10071D9B8);
    v18[0] = a3;
    v13 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v18, KeyPath, v13);
    swift_release(KeyPath);
    v14 = swift_beginAccess(a3 + 352, v18, 0, 0);
    v15 = *(_BYTE *)(a3 + 352);
    v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, a1, v6, v14);
    if ((v15 & 1) != 0)
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {
      v17 = Location.hasRequestedLocation.getter(v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v17 & 1) == 0)
        sub_10036C234(a1);

    }
  }
}

uint64_t sub_10036BC60(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  uint64_t result;
  char *v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  char *v20;
  double (*v21)();
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[16];
  uint64_t v27;
  _BYTE v28[24];

  v7 = type metadata accessor for Location(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v28, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v13 = (char *)result;
    v14 = *(_QWORD *)(result + OBJC_IVAR____TtC5Books18BookActionMediator_actionMenuState);
    if (v11)
    {
      ObjectType = swift_getObjectType();
      swift_retain(v14);
      v16 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, a4);
      v17 = dispatch thunk of BookPaginationEntity.pageCount.getter();
      swift_release(v16);
      KeyPath = swift_getKeyPath(&unk_10071D990);
      __chkstk_darwin(KeyPath);
      *(_QWORD *)&v26[-16] = v14;
      *(_QWORD *)&v26[-8] = v17;
      v27 = v14;
      v19 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
      v20 = (char *)&type metadata for () + 8;
      v21 = sub_10036FF5C;
    }
    else
    {
      swift_retain(*(_QWORD *)(result + OBJC_IVAR____TtC5Books18BookActionMediator_actionMenuState));
      v22 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
      KeyPath = swift_getKeyPath(&unk_10071D990);
      __chkstk_darwin(KeyPath);
      *(_QWORD *)&v26[-16] = v14;
      *(_QWORD *)&v26[-8] = v22;
      v27 = v14;
      v19 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
      v20 = (char *)&type metadata for () + 8;
      v21 = sub_10036FEEC;
    }
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v27, KeyPath, v21, &v26[-32], v20, v19);
    swift_release(v14);
    swift_release(KeyPath);
    v23 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Books18BookActionMediator_currentLocationProvider];
    v24 = *(_QWORD *)&v13[OBJC_IVAR____TtC5Books18BookActionMediator_currentLocationProvider + 8];
    v25 = swift_getObjectType();
    swift_unknownObjectRetain(v23);
    dispatch thunk of LocationProviding.currentLocation.getter(v25, v24);
    swift_unknownObjectRelease(v23);
    sub_10036C234((uint64_t)v10);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

double sub_10036BEEC(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v10[3];
  char v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books18BookActionMediator_actionMenuState);
    swift_retain(v7);

    KeyPath = swift_getKeyPath(&unk_10071D968);
    __chkstk_darwin(KeyPath);
    v10[2] = v7;
    v11 = v2;
    v12 = v7;
    v9 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_10036FEC8, v10, (char *)&type metadata for () + 8, v9);
    swift_release(v7);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

double sub_10036C004(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v10[3];
  char v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books18BookActionMediator_actionMenuState);
    swift_retain(v7);

    KeyPath = swift_getKeyPath(&unk_10071D940);
    __chkstk_darwin(KeyPath);
    v10[2] = v7;
    v11 = v2;
    v12 = v7;
    v9 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_10036FEA4, v10, (char *)&type metadata for () + 8, v9);
    swift_release(v7);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

double sub_10036C11C(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  _QWORD v10[3];
  char v11;
  uint64_t v12;
  _BYTE v13[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books18BookActionMediator_actionMenuState);
    swift_retain(v7);

    KeyPath = swift_getKeyPath(&unk_10071D918);
    __chkstk_darwin(KeyPath);
    v10[2] = v7;
    v11 = v2;
    v12 = v7;
    v9 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v12, KeyPath, sub_10036FE80, v10, (char *)&type metadata for () + 8, v9);
    swift_release(v7);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

_QWORD *sub_10036C234(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[5];
  _QWORD *v21;

  v3 = *(_QWORD **)(v1 + OBJC_IVAR____TtC5Books18BookActionMediator_actionMenuState);
  v4 = v3[19];
  v5 = swift_retain(v4);
  v6 = PageNumberProvider.rawPageNumber(for:)(a1, v5);
  swift_release(v4);
  KeyPath = swift_getKeyPath(&unk_10071D8F0);
  v20[2] = v3;
  v20[3] = v6;
  v21 = v3;
  v8 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v21, KeyPath, sub_10036FE60, v20, (char *)&type metadata for () + 8, v8);
  swift_release(KeyPath);
  v9 = *sub_10003F198(v3 + 10, v3[13]);
  Strong = swift_unknownObjectWeakLoadStrong(v9 + 72);
  if (Strong)
  {
    v11 = Strong;
    v12 = *(_QWORD *)(v9 + 80);
    ObjectType = swift_getObjectType();
    v14 = dispatch thunk of Paginating.chapterName(pageNumber:)(v6, ObjectType, v12);
    v16 = v15;
    swift_unknownObjectRelease(v11);
  }
  else
  {
    v14 = 0;
    v16 = 0xE000000000000000;
  }
  REActionMenuState.chapterTitle.setter(v14, v16);
  v17 = sub_1003031E4();
  return sub_1002FE0B8(v17, v18);
}

id sub_10036C3B4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookActionMediator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10036C47C()
{
  REActionMenuState.transition(to:)(0x8000000000000000);
}

uint64_t sub_10036C4A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books18BookActionMediator_actionMenuState);
  KeyPath = swift_getKeyPath(&unk_10071D8C8);
  v6 = v1;
  v3 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v3);
  swift_release(KeyPath);
  v4 = *(_QWORD *)(v1 + 272);
  sub_100300604(v4, *(_BYTE *)(v1 + 280));
  return v4;
}

void sub_10036C54C(char a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint8_t *v54;
  id v55;
  NSString v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t ObjectType;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  Class isa;
  NSObject *v71;
  uint64_t v72;
  double v73;
  uint64_t v74;

  v3 = v2;
  v6 = type metadata accessor for PageLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for SpreadPaginationEntity(0);
  isa = v10[-1].isa;
  v71 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v13);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Location(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v68 = v6;
    v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books18BookActionMediator_paginationService);
    v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books18BookActionMediator_paginationService + 8);
    ObjectType = swift_getObjectType();
    v67 = v20;
    v69 = v21;
    dispatch thunk of Paginating.locationForBookProgress(_:)(ObjectType, v21, a2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {
      sub_10036DA40((uint64_t)v15);
      if (qword_1009CE1C8 != -1)
        swift_once(&qword_1009CE1C8, sub_10036BAE4);
      v22 = type metadata accessor for Logger(0);
      v23 = sub_100048F64(v22, (uint64_t)qword_1009DD800);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.error.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v26 = 134217984;
        v73 = a2;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v73, &v74, v26 + 4, v26 + 12);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Cannot find location for progress %f", v26, 0xCu);
        swift_slowDealloc(v26, -1, -1);
      }

      return;
    }
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v65 = v3;
    v31 = *(_QWORD **)(v3 + OBJC_IVAR____TtC5Books18BookActionMediator_actionMenuState);
    v32 = *sub_10003F198(v31 + 10, v31[13]);
    Strong = swift_unknownObjectWeakLoadStrong(v32 + 72);
    if (Strong)
    {
      v34 = Strong;
      v35 = *(_QWORD *)(v32 + 80);
      v36 = swift_getObjectType();
      v37 = dispatch thunk of Paginating.pageOffsetForBookProgress(_:)(v36, v35, a2);
      swift_unknownObjectRelease(v34);
      if (__OFADD__(v37, 1))
      {
        __break(1u);
        goto LABEL_31;
      }
      v38 = v7;
      v39 = v37 + 1;
    }
    else
    {
      v38 = v7;
      v39 = 0;
    }
    KeyPath = swift_getKeyPath(&unk_10071D8F0);
    v73 = *(double *)&v31;
    v41 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v73, KeyPath, v41);
    swift_release(KeyPath);
    swift_beginAccess(v31 + 27, &v73, 0, 0);
    if (v39 != v31[27])
    {
      if (qword_1009CE1C8 != -1)
        swift_once(&qword_1009CE1C8, sub_10036BAE4);
      v47 = type metadata accessor for Logger(0);
      v48 = sub_100048F64(v47, (uint64_t)qword_1009DD800);
      v49 = Logger.logObject.getter(v48);
      v53 = static os_log_type_t.debug.getter(v49, v50, v51, v52);
      if (os_log_type_enabled(v49, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v54 = 134217984;
        v72 = v39;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v54 + 4, v54 + 12);
        _os_log_impl((void *)&_mh_execute_header, v49, v53, "chapterScrub to page number %ld", v54, 0xCu);
        swift_slowDealloc(v54, -1, -1);
      }

      v55 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v56 = String._bridgeToObjectiveC()();
      v57 = objc_msgSend(v55, "BOOLForKey:", v56);

      if (v57)
      {
        v58 = *(_QWORD *)(v65 + OBJC_IVAR____TtC5Books18BookActionMediator_currentLocationController + 8);
        v59 = swift_getObjectType();
        dispatch thunk of LocationControlling.moveTo(pageNumber:)(v39, v59, v58);
      }
      else
      {
        v60 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v69);
        Location.pageLocation.getter(v60);
        BookPaginationEntity.adjustedSpread(containing:)(v9);
        v61 = swift_release(v60);
        (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v9, v68, v61);
        v62 = *(_QWORD *)(v65 + OBJC_IVAR____TtC5Books18BookActionMediator_pageTurnController + 24);
        v63 = *(_QWORD *)(v65 + OBJC_IVAR____TtC5Books18BookActionMediator_pageTurnController + 32);
        sub_10003F198((_QWORD *)(v65 + OBJC_IVAR____TtC5Books18BookActionMediator_pageTurnController), v62);
        dispatch thunk of PageTurnControlling.turn(to:animated:)(v12, 1, v62, v63);
        (*((void (**)(char *, NSObject *))isa + 1))(v12, v71);
      }
      goto LABEL_29;
    }
    if (qword_1009CE1C8 == -1)
    {
LABEL_19:
      v42 = type metadata accessor for Logger(0);
      v43 = sub_100048F64(v42, (uint64_t)qword_1009DD800);
      v44 = Logger.logObject.getter(v43);
      v45 = static os_log_type_t.info.getter(v44);
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Ignoring scrub to same page", v46, 2u);
        swift_slowDealloc(v46, -1, -1);
      }

LABEL_29:
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      return;
    }
LABEL_31:
    swift_once(&qword_1009CE1C8, sub_10036BAE4);
    goto LABEL_19;
  }
  if (qword_1009CE1C8 != -1)
    swift_once(&qword_1009CE1C8, sub_10036BAE4);
  v27 = type metadata accessor for Logger(0);
  v28 = sub_100048F64(v27, (uint64_t)qword_1009DD800);
  v71 = Logger.logObject.getter(v28);
  v29 = static os_log_type_t.info.getter(v71);
  if (os_log_type_enabled(v71, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v71, v29, "Refresh not needed", v30, 2u);
    swift_slowDealloc(v30, -1, -1);
  }

}

void sub_10036CC2C(NSObject *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  NSObject *v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  os_log_type_t v55;
  id v56;
  NSString v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t ObjectType;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  NSObject *v75;
  _QWORD v76[3];

  v5 = type metadata accessor for PageLocation(0);
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SpreadPaginationEntity(0);
  v73 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v11);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Location(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v70 = v8;
    v18 = v2;
    v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books18BookActionMediator_actionMenuState);
    KeyPath = swift_getKeyPath(&unk_10071D8F0);
    v74 = a1;
    v21 = KeyPath;
    v76[0] = v19;
    v22 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v76, v21, v22);
    v23 = v21;
    v24 = v74;
    swift_release(v23);
    swift_beginAccess(v19 + 216, v76, 0, 0);
    v25 = *(NSObject **)(v19 + 216);
    if (v25 == v24)
    {
      if (qword_1009CE1C8 != -1)
        swift_once(&qword_1009CE1C8, sub_10036BAE4);
      v26 = type metadata accessor for Logger(0);
      v27 = sub_100048F64(v26, (uint64_t)qword_1009DD800);
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.info.getter(v28);
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Ignoring scrub to same page", v30, 2u);
        swift_slowDealloc(v30, -1, -1);
      }

    }
    else
    {
      v69 = v2;
      v35 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books18BookActionMediator_paginationService);
      v36 = *(_QWORD *)(v18 + OBJC_IVAR____TtC5Books18BookActionMediator_paginationService + 8);
      ObjectType = swift_getObjectType();
      v68 = v35;
      dispatch thunk of Paginating.locationForBookPageNumber(_:)(v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
      {
        sub_10036DA40((uint64_t)v13);
        if (qword_1009CE1C8 != -1)
          swift_once(&qword_1009CE1C8, sub_10036BAE4);
        v37 = type metadata accessor for Logger(0);
        v38 = sub_100048F64(v37, (uint64_t)qword_1009DD800);
        v39 = Logger.logObject.getter(v38);
        v40 = static os_log_type_t.error.getter(v39);
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc(12, -1);
          v42 = v24;
          v43 = v41;
          *(_DWORD *)v41 = 134217984;
          v75 = v42;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v41 + 4, v41 + 12);
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "Cannot find location for page %ld", v43, 0xCu);
          swift_slowDealloc(v43, -1, -1);
        }

      }
      else
      {
        v66 = v36;
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
        if (qword_1009CE1C8 != -1)
          swift_once(&qword_1009CE1C8, sub_10036BAE4);
        v44 = type metadata accessor for Logger(0);
        v45 = sub_100048F64(v44, (uint64_t)qword_1009DD800);
        v46 = Logger.logObject.getter(v45);
        v50 = static os_log_type_t.debug.getter(v46, v47, v48, v49);
        v51 = os_log_type_enabled(v46, v50);
        v52 = v70;
        if (v51)
        {
          v53 = v50;
          v54 = swift_slowAlloc(22, -1);
          *(_DWORD *)v54 = 134218240;
          v75 = v25;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v54 + 4, v54 + 12);
          *(_WORD *)(v54 + 12) = 2048;
          v75 = v74;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v75, v76, v54 + 14, v54 + 22);
          v55 = v53;
          v52 = v70;
          _os_log_impl((void *)&_mh_execute_header, v46, v55, "scrubbing from page number %ld to %ld", (uint8_t *)v54, 0x16u);
          swift_slowDealloc(v54, -1, -1);
        }

        v56 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
        v57 = String._bridgeToObjectiveC()();
        v58 = objc_msgSend(v56, "BOOLForKey:", v57);

        if (v58)
        {
          v59 = *(_QWORD *)(v69 + OBJC_IVAR____TtC5Books18BookActionMediator_currentLocationController + 8);
          v60 = swift_getObjectType();
          dispatch thunk of LocationControlling.moveTo(pageNumber:)(v74, v60, v59);
        }
        else
        {
          v61 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v66);
          Location.pageLocation.getter(v61);
          BookPaginationEntity.adjustedSpread(containing:)(v7);
          v62 = swift_release(v61);
          (*(void (**)(char *, uint64_t, __n128))(v71 + 8))(v7, v72, v62);
          v63 = *(_QWORD *)(v69 + OBJC_IVAR____TtC5Books18BookActionMediator_pageTurnController + 24);
          v64 = *(_QWORD *)(v69 + OBJC_IVAR____TtC5Books18BookActionMediator_pageTurnController + 32);
          sub_10003F198((_QWORD *)(v69 + OBJC_IVAR____TtC5Books18BookActionMediator_pageTurnController), v63);
          dispatch thunk of PageTurnControlling.turn(to:animated:)(v10, 1, v63, v64);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v10, v52);
        }
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      }
    }
  }
  else
  {
    if (qword_1009CE1C8 != -1)
      swift_once(&qword_1009CE1C8, sub_10036BAE4);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_100048F64(v31, (uint64_t)qword_1009DD800);
    v74 = Logger.logObject.getter(v32);
    v33 = static os_log_type_t.info.getter(v74);
    if (os_log_type_enabled(v74, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v74, v33, "Refresh not needed", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

  }
}

uint64_t sub_10036D2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t ObjectType;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books18BookActionMediator_currentLocationController + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Books18BookActionMediator_currentLocationController), a2);
  return dispatch thunk of LocationControlling.moveTo(pageNumber:)(a1, ObjectType, v4);
}

uint64_t sub_10036D340(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v3 = type metadata accessor for LocationMovement(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v12[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E418(v1 + OBJC_IVAR____TtC5Books18BookActionMediator_pageTurnController, (uint64_t)v12);
  v7 = v13;
  v8 = v14;
  v9 = sub_10003F198(v12, v13);
  if ((a1 & 1) != 0)
    static LocationMovement.spreadForward.getter(v9);
  else
    static LocationMovement.spreadBackward.getter(v9);
  dispatch thunk of PageTurnControlling.turn(_:animated:)(v6, 0, v7, v8);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return _s5Books15CurrentPageViewVwxx_0(v12);
}

uint64_t sub_10036D41C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books18BookActionMediator_orientationLockHandler + 8);
  ObjectType = swift_getObjectType(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Books18BookActionMediator_orientationLockHandler), a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v3 + 8) + 8))(ObjectType);
}

uint64_t sub_10036D458(uint64_t a1)
{
  return sub_10036D464(a1, qword_100A1E720);
}

uint64_t sub_10036D464(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = type metadata accessor for Logger(0);
  sub_10001BFD8(v3, a2);
  sub_100048F64(v3, (uint64_t)a2);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001ELL, 0x80000001007C36A0);
}

uint64_t PageSnapshotDataGenerator.snapshot(withPageNumber:size:completion:)(void (*a1)(char *, uint64_t, __n128), void (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __n128 v53;
  void (*v54)(char *, uint64_t, __n128);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(void);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  char *v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  void (*v74)(_QWORD);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, __n128);
  uint64_t v81;
  void (*v82)(_QWORD, _QWORD, __n128);
  uint64_t v83;

  v4 = v3;
  v80 = a1;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for PageLocation(0);
  v10 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v69 - v13;
  __chkstk_darwin(v15);
  v77 = (char *)&v69 - v16;
  v17 = type metadata accessor for Logger(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  __chkstk_darwin(v17);
  v73 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v69 - v21;
  if (qword_1009CE1D0 != -1)
    swift_once(&qword_1009CE1D0, sub_10036D458);
  v23 = sub_100048F64(v17, (uint64_t)qword_100A1E720);
  v79 = v18;
  v72 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v72(v22, v23, v17);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 24);
  if (!Strong)
    goto LABEL_6;
  v25 = Strong;
  v74 = a2;
  v75 = a3;
  v71 = v4;
  swift_getObjectType();
  dispatch thunk of Paginating.locationForBookPageNumber(_:)(v80);
  swift_unknownObjectRelease(v25);
  v26 = type metadata accessor for Location(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v9, 1, v26);
  if ((_DWORD)v28 == 1)
  {
    Strong = sub_10036DA40((uint64_t)v9);
    a2 = v74;
LABEL_6:
    v29 = Logger.logObject.getter(Strong);
    v33 = static os_log_type_t.debug.getter(v29, v30, v31, v32);
    if (os_log_type_enabled(v29, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v34 = 134217984;
      v82 = (void (*)(_QWORD, _QWORD, __n128))v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &v83, v34 + 4, v34 + 12);
      _os_log_impl((void *)&_mh_execute_header, v29, v33, "Preparing snapshot for pageNumber %ld but broken location", v34, 0xCu);
      swift_slowDealloc(v34, -1, -1);
    }

    a2(0);
    goto LABEL_9;
  }
  Location.pageLocation.getter(v28);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v26);
  v37 = v77;
  v38 = v78;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v77, v14, v78);
  v39 = v76;
  v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 16))(v76, v37, v38);
  v41 = Logger.logObject.getter(v40);
  v45 = static os_log_type_t.debug.getter(v41, v42, v43, v44);
  v46 = v45;
  if (os_log_type_enabled(v41, v45))
  {
    v47 = swift_slowAlloc(22, -1);
    v48 = swift_slowAlloc(32, -1);
    v70 = v48;
    *(_DWORD *)v47 = 134218242;
    v81 = (uint64_t)v80;
    v82 = (void (*)(_QWORD, _QWORD, __n128))v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v47 + 4, v47 + 12);
    *(_WORD *)(v47 + 12) = 2080;
    v69 = v47 + 14;
    v49 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
    LODWORD(v80) = v46;
    v50 = dispatch thunk of CustomStringConvertible.description.getter(v38, v49);
    v52 = v51;
    v81 = sub_100040F58(v50, v51, (uint64_t *)&v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v69, v47 + 22);
    v53 = swift_bridgeObjectRelease(v52);
    v54 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
    v54(v39, v38, v53);
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v80, "Preparing snapshot for pageNumber %ld location: %s", (uint8_t *)v47, 0x16u);
    v55 = v70;
    swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v55, -1, -1);
    swift_slowDealloc(v47, -1, -1);

  }
  else
  {

    v54 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
    ((void (*)(char *, uint64_t))v54)(v39, v38);
  }
  v57 = (void (*)(void))v74;
  v56 = v75;
  v58 = swift_weakLoadStrong(v71 + 16);
  if (v58)
  {
    v59 = v58;
    v80 = v54;
    v60 = v73;
    v72(v73, (uint64_t)v22, v17);
    v61 = v79;
    v62 = *(unsigned __int8 *)(v79 + 80);
    v63 = (v62 + 32) & ~v62;
    v64 = swift_allocObject(&unk_1008FF7B0, v63 + v19, v62 | 7);
    *(_QWORD *)(v64 + 16) = v57;
    *(_QWORD *)(v64 + 24) = v56;
    (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v64 + v63, v60, v17);
    v65 = swift_retain(v56);
    v66 = v77;
    BookContentLayoutController.createSnapshotImage(forLocation:completion:)(v77, sub_10036F1C4, v64, v65);
    v67 = v59;
    v35 = v61;
    swift_release(v67);
    v68 = swift_release(v64);
    v80(v66, v78, v68);
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v22, v17);
  }
  v57();
  ((void (*)(char *, uint64_t))v54)(v77, v78);
LABEL_9:
  v35 = v79;
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v22, v17);
}

uint64_t sub_10036DA40(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10036DA80(uint64_t a1, void (*a2)(id), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  void (*v27)(char *, uint64_t, __n128);
  uint64_t v28;
  id v29;
  id v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(id);
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v5 = type metadata accessor for BookContent.SnapshotError(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  v15 = sub_10004CFD4(&qword_1009DDBD0);
  __chkstk_darwin(v15);
  v17 = (id *)((char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10036FF0C(a1, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v33 = a3;
    (*(void (**)(char *, id *, uint64_t))(v6 + 32))(v14, v17, v5);
    v18 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    v19 = v18(v11, v14, v5);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v36 = v32;
      *(_DWORD *)v22 = 136315138;
      v31 = v22 + 4;
      v18(v8, v11, v5);
      v23 = String.init<A>(describing:)(v8, v5);
      v25 = v24;
      v35 = sub_100040F58(v23, v24, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v31, v22 + 12);
      v26 = swift_bridgeObjectRelease(v25);
      v27 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
      v27(v11, v5, v26);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed snapshotting: %s", v22, 0xCu);
      v28 = v32;
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      v27 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
      ((void (*)(char *, uint64_t))v27)(v11, v5);
    }
    v34(0);
    ((void (*)(char *, uint64_t))v27)(v14, v5);
  }
  else
  {
    v29 = *v17;
    v30 = *v17;
    v34(v29);

  }
}

uint64_t PageSnapshotDataGenerator.deinit()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  sub_1001FE9A0(v0 + 24);
  return v0;
}

uint64_t PageSnapshotDataGenerator.__deallocating_deinit()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  sub_1001FE9A0(v0 + 24);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t sub_10036DDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 120);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 120);
  }
  else
  {
    Strong = swift_weakLoadStrong(v0 + 96);
    v4 = swift_unknownObjectWeakLoadStrong(v0 + 72);
    v5 = *(_QWORD *)(v0 + 80);
    v6 = type metadata accessor for PageSnapshotDataGenerator();
    v2 = swift_allocObject(v6, 40, 7);
    swift_weakInit(v2 + 16, 0);
    *(_QWORD *)(v2 + 32) = 0;
    swift_unknownObjectWeakInit(v2 + 24, 0);
    swift_weakAssign(v2 + 16);
    swift_release(Strong);
    *(_QWORD *)(v2 + 32) = v5;
    swift_unknownObjectWeakAssign(v2 + 24, v4);
    swift_unknownObjectRelease(v4);
    v7 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)(v0 + 120) = v2;
    swift_retain(v2);
    swift_release(v7);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

id sub_10036DED8()
{
  _QWORD *v0;
  void *v1;
  id v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;

  v1 = (void *)v0[16];
  if (v1)
  {
    v2 = (id)v0[16];
  }
  else
  {
    v3 = v0;
    v4 = v0[5];
    v5 = v0[6];
    sub_10003F198(v0 + 2, v4);
    dispatch thunk of BookEntityType.assetID.getter(v4, v5);
    v7 = v6;
    v8 = sub_10036DDF4();
    v9 = objc_allocWithZone((Class)BEPageSnapshotCache);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    v11 = objc_msgSend(v9, "initWithIdentifier:dataSource:", v10, v8);

    swift_release(v8);
    v12 = (void *)v3[16];
    v3[16] = v11;
    v2 = v11;

    v1 = 0;
  }
  v13 = v1;
  return v2;
}

uint64_t BookActionMenuDataSource.__allocating_init(bookEntity:environmentProvider:contentLayoutController:readingSettingsProvider:paginationProvider:pageNumberProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10036E010(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10036FC98);
}

uint64_t BookActionMenuDataSource.init(bookEntity:environmentProvider:contentLayoutController:readingSettingsProvider:paginationProvider:pageNumberProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_10036E010(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10036FB74);
}

uint64_t sub_10036E010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v25;

  ObjectType = swift_getObjectType(a2, a2);
  v19 = swift_getObjectType(a4, v18);
  v21 = swift_getObjectType(a8, v20);
  v22 = a10(a1, a2, a3, a4, a6, a7, a8, v25, ObjectType, v19, v21, a5, a9);
  swift_unknownObjectRelease(a2);
  swift_release(a3);
  swift_unknownObjectRelease(a4);
  swift_unknownObjectRelease(a6);
  swift_unknownObjectRelease(a8);
  return v22;
}

uint64_t BookActionMenuDataSource.snapshotImage(forPage:onOperationCreation:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  double *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  double *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD aBlock[5];
  double *v66;

  v6 = v5;
  v62 = a5;
  v63 = a3;
  v60 = a4;
  v61 = a2;
  v59 = a1;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v64 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for BookThemeEntity(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_unknownObjectWeakLoadStrong(v6 + 13);
  if (result)
  {
    v19 = result;
    v58 = v11;
    v20 = v6[14];
    Strong = swift_weakLoadStrong(v6 + 12);
    if (Strong)
    {
      v53 = v13;
      v54 = Strong;
      v56 = v10;
      v57 = v8;
      v23 = v6[5];
      v22 = v6[6];
      sub_10003F198(v6 + 2, v23);
      v55 = v7;
      v24 = dispatch thunk of BookEntityType.assetID.getter(v23, v22);
      v52 = v25;
      ObjectType = swift_getObjectType();
      v27 = dispatch thunk of ReadingSettingsProviding.currentTheme.getter(ObjectType, v20);
      v28 = BookThemeEntity.snapshotTheme()(v27);
      v29 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      v30 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(v29);
      v32 = v31;
      v33 = swift_getObjectType();
      v34 = dispatch thunk of BookContentLayoutProviding.contentSize.getter(v33, v32);
      v36 = v35;
      swift_unknownObjectRelease(v30);
      v37 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      v38 = (void *)static OS_dispatch_queue.main.getter(v37);
      v39 = (double *)swift_allocObject(&unk_1008FF7D8, 104, 7);
      *((_QWORD *)v39 + 2) = v6;
      *((_QWORD *)v39 + 3) = v28;
      v40 = v52;
      *((_QWORD *)v39 + 4) = v24;
      *((_QWORD *)v39 + 5) = v40;
      *((_QWORD *)v39 + 6) = v59;
      v39[7] = v34;
      *((_QWORD *)v39 + 8) = v36;
      v42 = v62;
      v41 = v63;
      *((_QWORD *)v39 + 9) = v60;
      *((_QWORD *)v39 + 10) = v42;
      *((_QWORD *)v39 + 11) = v61;
      *((_QWORD *)v39 + 12) = v41;
      aBlock[4] = sub_10030A548;
      v66 = v39;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000147F0;
      aBlock[3] = &unk_1008FF7F0;
      v43 = _Block_copy(aBlock);
      v44 = v66;
      swift_retain(v6);
      swift_retain(v28);
      swift_retain(v42);
      swift_retain(v41);
      swift_release(v44);
      v45 = v53;
      static DispatchQoS.unspecified.getter(v46);
      aBlock[0] = _swiftEmptyArrayStorage;
      v47 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v48 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
      v49 = sub_100065324();
      v51 = v55;
      v50 = v56;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v48, v49, v55, v47);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v45, v50, v43);
      _Block_release(v43);
      swift_release(v28);
      swift_unknownObjectRelease(v19);
      swift_release(v54);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v50, v51);
      return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v45, v58);
    }
    else
    {
      return swift_unknownObjectRelease(v19);
    }
  }
  return result;
}

void sub_10036E48C(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(id))
{
  id v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  uint64_t v22;
  id v23;
  _QWORD v24[5];
  uint64_t v25;

  v16 = sub_10036DED8();
  v17 = String._bridgeToObjectiveC()();
  dispatch thunk of SnapshotTheme.snapshotIdentifier.getter();
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v24[4] = a8;
  v25 = a9;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  v24[2] = sub_10000B65C;
  v24[3] = &unk_1008FF948;
  v21 = _Block_copy(v24);
  v22 = v25;
  swift_retain(a9);
  swift_release(v22);
  v23 = objc_msgSend(v16, "snapshotForAsset:page:snapshotThemeIdentifier:size:completion:", v17, a7, v20, v21, a1, a2);
  _Block_release(v21);

  if (v23)
  {
    a10(v23);

  }
}

UIView __swiftcall BookActionMenuDataSource.snapshotView()()
{
  return (UIView)objc_msgSend(objc_allocWithZone((Class)UIView), "init");
}

uint64_t BookActionMenuDataSource.contentInsetTop()()
{
  return sub_10036F030((void (*)(uint64_t, uint64_t))&dispatch thunk of BookContentLayoutProviding.contentContainerTopInset.getter);
}

double BookActionMenuDataSource.safeAreaInsets()()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  double v3;
  double v4;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 88);
  if (!Strong)
    return 0.0;
  v2 = Strong;
  objc_msgSend(Strong, "safeAreaInsets");
  v4 = v3;
  swift_unknownObjectRelease(v2);
  return v4;
}

uint64_t BookActionMenuDataSource.pageNumber(forProgress:)(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;

  result = swift_unknownObjectWeakLoadStrong(v1 + 72);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(v1 + 80);
    ObjectType = swift_getObjectType(result, v4);
    v8 = dispatch thunk of Paginating.pageOffsetForBookProgress(_:)(ObjectType, v6, a1);
    swift_unknownObjectRelease(v5);
    result = v8 + 1;
    if (__OFADD__(v8, 1))
      __break(1u);
  }
  return result;
}

Swift::String_optional __swiftcall BookActionMenuDataSource.chapterName(forPage:)(Swift::Int forPage)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  Swift::String_optional result;

  Strong = swift_unknownObjectWeakLoadStrong(v1 + 72);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(v1 + 80);
    ObjectType = swift_getObjectType(Strong, v4);
    v8 = dispatch thunk of Paginating.chapterName(pageNumber:)(forPage, ObjectType, v6);
    v10 = v9;
    swift_unknownObjectRelease(v5);
  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  v11 = v8;
  v12 = v10;
  result.value._object = v12;
  result.value._countAndFlagsBits = v11;
  return result;
}

Swift::String_optional __swiftcall BookActionMenuDataSource.pagesRemainingInChapterString(afterPage:)(Swift::Int afterPage)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::UInt v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String_optional result;

  v3 = v1 + 96;
  Strong = swift_weakLoadStrong(v1 + 96);
  if (!Strong)
    goto LABEL_12;
  v5 = Strong;
  v6 = swift_unknownObjectWeakLoadStrong(v1 + 72);
  if (!v6)
  {
    swift_release(v5);
    goto LABEL_12;
  }
  v7 = v6;
  v8 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(v6);
  v10 = v9;
  ObjectType = swift_getObjectType();
  v12 = dispatch thunk of BookContentLayoutProviding.columnCount.getter(ObjectType, v10);
  swift_unknownObjectRelease(v8);
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_16:
    v25 = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
    __break(1u);
    goto LABEL_17;
  }
  if (!v12)
  {
    swift_release(v5);
    swift_unknownObjectRelease(v7);
    goto LABEL_12;
  }
  v13 = swift_weakLoadStrong(v3);
  if (!v13
    || (v14 = v13,
        v15 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter(v13),
        v17 = v16,
        v18 = swift_getObjectType(),
        v19 = dispatch thunk of BookContentLayoutProviding.columnCount.getter(v18, v17),
        swift_unknownObjectRelease(v15),
        swift_release(v14),
        v19 != 2))
  {
    if (__OFSUB__(afterPage--, 1))
    {
      __break(1u);
      goto LABEL_16;
    }
  }
  swift_getObjectType();
  v21 = Paginating.pagesRemainingInChapter(afterBookPageOffset:)(afterPage);
  if (!v22)
  {
    v23 = _s5Books24BookActionMenuDataSourceC29pagesRemainingInChapterString18remainingPageCountSSSgSu_tFZ_0(v21 / v12);
    v24 = v27;
    swift_release(v5);
    swift_unknownObjectRelease(v7);
    goto LABEL_13;
  }
  swift_unknownObjectRelease(v7);
  swift_release(v5);
  swift_errorRelease(v22);
LABEL_12:
  v23 = 0;
  v24 = 0;
LABEL_13:
  v25 = (uint64_t)v23;
  v26 = v24;
LABEL_17:
  result.value._object = v26;
  result.value._countAndFlagsBits = v25;
  return result;
}

UIColor_optional __swiftcall BookActionMenuDataSource.annotationColor(forPage:)(Swift::Int forPage)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  Swift::Bool v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  __n128 v29;
  objc_class *v30;
  __n128 v31;
  uint64_t v32;
  objc_class *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  UIColor_optional result;

  v3 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Location(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 72);
  if (!Strong)
    goto LABEL_20;
  v12 = Strong;
  v13 = *(_QWORD *)(v1 + 80);
  ObjectType = swift_getObjectType();
  dispatch thunk of Paginating.locationForBookPageNumber(_:)(forPage);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    swift_unknownObjectRelease(v12);
    sub_10036DA40((uint64_t)v5);
LABEL_20:
    v30 = 0;
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  v15 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v13);
  v16 = Location.documentOrdinal.getter(v15);
  v17 = BookPaginationEntity.document(for:)(v16);
  v19 = swift_release(v15);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v19);
    swift_unknownObjectRelease(v12);
    goto LABEL_20;
  }
  v20 = Location.pageOffset.getter(v18);
  v21 = ((uint64_t (*)(void))dispatch thunk of DocumentPaginationEntity.pages.getter)();
  v22 = v21;
  if ((unint64_t)v21 >> 62)
  {
    if (v21 >= 0)
      v21 &= 0xFFFFFFFFFFFFFF8uLL;
    v23 = _CocoaArrayWrapper.endIndex.getter(v21);
  }
  else
  {
    v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v24 = swift_bridgeObjectRelease(v22);
  if (v20 >= v23)
  {
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v24);
    swift_unknownObjectRelease(v12);
    v32 = v17;
    goto LABEL_19;
  }
  v25 = dispatch thunk of DocumentPaginationEntity.pages.getter(v24);
  v26 = v25;
  if ((v25 & 0xC000000000000001) == 0)
  {
    if (v20 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v20 < *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v20 = *(_QWORD *)(v25 + 8 * v20 + 32);
      swift_retain(v20);
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_38;
  }
  v20 = specialized _ArrayBuffer._getElementSlowPath(_:)(v20, v25);
LABEL_12:
  v27 = swift_bridgeObjectRelease(v26);
  v26 = dispatch thunk of PagePaginationEntity.bookmarkEntityReferences.getter(v27);
  if (!((unint64_t)v26 >> 62))
  {
    v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_14;
  }
LABEL_38:
  if (v26 < 0)
    v45 = v26;
  else
    v45 = v26 & 0xFFFFFFFFFFFFFF8;
  v28 = _CocoaArrayWrapper.endIndex.getter(v45);
LABEL_14:
  v29 = swift_bridgeObjectRelease(v26);
  if (!v28)
  {
    v34 = dispatch thunk of PagePaginationEntity.highlightPaginationEntityReferences.getter(v29);
    v35 = v34;
    if ((unint64_t)v34 >> 62)
    {
      if (v34 >= 0)
        v34 &= 0xFFFFFFFFFFFFFF8uLL;
      v33 = (objc_class *)_CocoaArrayWrapper.endIndex.getter(v34);
      if (v33)
      {
LABEL_24:
        if ((v35 & 0xC000000000000001) != 0)
        {
          v36 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v35);
        }
        else
        {
          if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_48;
          }
          v36 = *(_QWORD *)(v35 + 32);
          swift_retain(v36);
        }
        v37 = swift_bridgeObjectRelease(v35);
        v48 = v36;
        v38 = dispatch thunk of HighlightPaginationEntityReference.highlightPaginationEntity.getter(v37);
        v39 = Location.documentOrdinal.getter(v38);
        v40 = dispatch thunk of Paginating.annotation(for:in:)(v38, v39, ObjectType, v13);
        swift_release(v38);
        if (v40)
        {
          v41 = type metadata accessor for HighlightAnnotationEntity(0);
          v42 = swift_dynamicCastClass(v40, v41);
          if (v42)
          {
            v43 = dispatch thunk of HighlightAnnotationEntity.style.getter(v42);
            v30 = (objc_class *)AnnotationStyle.color.getter(v43);
            swift_unknownObjectRelease(v12);
            swift_release(v40);
            swift_release(v48);
            goto LABEL_16;
          }
          swift_release(v40);
        }
        swift_unknownObjectRelease(v12);
        swift_release(v48);
        swift_release(v17);
        v44 = swift_release(v20);
        (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v44);
        goto LABEL_20;
      }
    }
    else
    {
      v33 = *(objc_class **)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v33)
        goto LABEL_24;
    }
    v46 = swift_bridgeObjectRelease(v35);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v46);
    swift_unknownObjectRelease(v12);
    swift_release(v17);
    v32 = v20;
LABEL_19:
    swift_release(v32);
    goto LABEL_20;
  }
  v30 = (objc_class *)objc_msgSend((id)objc_opt_self(UIColor), "redColor");
  swift_unknownObjectRelease(v12);
LABEL_16:
  swift_release(v17);
  v31 = swift_release(v20);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v31);
LABEL_21:
  v33 = v30;
LABEL_48:
  result.value.super.isa = v33;
  result.is_nil = v11;
  return result;
}

double BookActionMenuDataSource.contentSize()()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  double v7;

  Strong = swift_weakLoadStrong(v0 + 96);
  if (!Strong)
    return 0.0;
  v2 = Strong;
  v3 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter();
  v5 = v4;
  ObjectType = swift_getObjectType(v3, v4);
  v7 = dispatch thunk of BookContentLayoutProviding.contentSize.getter(ObjectType, v5);
  swift_release(v2);
  swift_unknownObjectRelease(v3);
  return v7;
}

Swift::Bool __swiftcall BookActionMenuDataSource.isVerticalContentProgression()()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + 72);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(v0 + 80);
    ObjectType = swift_getObjectType(Strong, v2);
    v6 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v4);
    v8 = v7;
    v9 = swift_getObjectType(v6, v7);
    v10 = dispatch thunk of BookContentLayoutProviding.layout.getter(v9, v8);
    swift_unknownObjectRelease(v6);
    swift_unknownObjectRelease(v3);
    LOBYTE(Strong) = v10 == 2;
  }
  return Strong;
}

Swift::Bool __swiftcall BookActionMenuDataSource.isRightToLeft()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = type metadata accessor for BookNavigationDirection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v19 - v6;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 72);
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(v0 + 80);
    ObjectType = swift_getObjectType();
    v12 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v10);
    BookPaginationEntity.navigationDirection.getter();
    swift_release(v12);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for BookNavigationDirection.rightToLeft(_:), v1);
    v13 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
    dispatch thunk of RawRepresentable.rawValue.getter(&v21, v1, v13);
    dispatch thunk of RawRepresentable.rawValue.getter(&v19, v1, v13);
    v14 = v22;
    v15 = v20;
    if (v21 == v19 && v22 == v20)
    {
      v16 = 1;
      v15 = v22;
    }
    else
    {
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v19, v20, 0);
    }
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v15);
    swift_unknownObjectRelease(v9);
    v17 = *(void (**)(char *, uint64_t))(v2 + 8);
    v17(v5, v1);
    v17(v7, v1);
  }
  else
  {
    v16 = 0;
  }
  return v16 & 1;
}

uint64_t BookActionMenuDataSource.gutterWidth()()
{
  return sub_10036F030((void (*)(uint64_t, uint64_t))&dispatch thunk of BookContentLayoutProviding.gutterWidth.getter);
}

uint64_t sub_10036F030(void (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  result = swift_weakLoadStrong(v1 + 96);
  if (result)
  {
    v4 = result;
    v5 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter();
    v7 = v6;
    ObjectType = swift_getObjectType(v5, v6);
    a1(ObjectType, v7);
    swift_release(v4);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

Swift::Bool __swiftcall BookActionMenuDataSource.isSpread()()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;

  Strong = swift_weakLoadStrong(v0 + 96);
  if (Strong)
  {
    v2 = Strong;
    v3 = dispatch thunk of BookContentLayoutController.contentLayoutProvider.getter();
    v5 = v4;
    ObjectType = swift_getObjectType(v3, v4);
    v7 = dispatch thunk of BookContentLayoutProviding.columnCount.getter(ObjectType, v5);
    swift_unknownObjectRelease(v3);
    swift_release(v2);
    LOBYTE(Strong) = v7 == 2;
  }
  return Strong;
}

uint64_t BookActionMenuDataSource.deinit()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  sub_1001FE9A0(v0 + 56);
  sub_1001FE9A0(v0 + 72);
  sub_1001FE9A0(v0 + 88);
  swift_weakDestroy(v0 + 96);
  sub_1001FE9A0(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 120));

  return v0;
}

uint64_t BookActionMenuDataSource.__deallocating_deinit()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  sub_1001FE9A0(v0 + 56);
  sub_1001FE9A0(v0 + 72);
  sub_1001FE9A0(v0 + 88);
  swift_weakDestroy(v0 + 96);
  sub_1001FE9A0(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 120));

  return swift_deallocClassInstance(v0, 136, 7);
}

id _s5Books24BookActionMenuDataSourceC29pagesRemainingInChapterString18remainingPageCountSSSgSu_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id result;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[16];

  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v40[-v7];
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = &v40[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v15 = &v40[-v14];
  switch(a1)
  {
    case -1:
      return 0;
    case 1:
      v22 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007C3740);
      static Locale.current.getter(v22);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v23 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v23);
      v25 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v20 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v25, v6, "Singular pages left in chapter remaining count - normal", 55, 2);
      goto LABEL_7;
    case 0:
      v16 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007C37A0);
      static Locale.current.getter(v16);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
      v17 = type metadata accessor for BundleFinder();
      v18 = swift_getObjCClassFromMetadata(v17);
      v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v18);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
      v20 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v19, v6, "Last page in chapter string - normal", 36, 2);
LABEL_7:
      v21 = v20;
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
      (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
      return (id)v21;
  }
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000018, 0x80000001007C36E0);
  static Locale.current.getter(v26);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v13, v15, v9);
  v27 = type metadata accessor for BundleFinder();
  v28 = swift_getObjCClassFromMetadata(v27);
  v29 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v28);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v6, v8, v2);
  v30 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v29, v6, "Plural pages left in chapter with remaining page count - normal", 63, 2);
  v32 = v31;
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v15, v9);
  result = objc_msgSend((id)objc_opt_self(NSNumberFormatter), "imaxLocalizedUnsignedInteger:", a1);
  if (result)
  {
    v34 = result;
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v37 = v36;

    v38 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v39 = swift_allocObject(v38, 72, 7);
    *(_OWORD *)(v39 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v39 + 56) = &type metadata for String;
    *(_QWORD *)(v39 + 64) = sub_10002BE50();
    *(_QWORD *)(v39 + 32) = v35;
    *(_QWORD *)(v39 + 40) = v37;
    v21 = String.init(format:_:)(v30, v32, v39);
    swift_bridgeObjectRelease(v32);
    return (id)v21;
  }
  __break(1u);
  return result;
}

double sub_10036F5E4(uint64_t a1, uint64_t a2, void (**a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __n128 v53;
  void (*v54)(char *, uint64_t, __n128);
  os_log_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  char *v64;
  __n128 v65;
  char *v66;
  double result;
  uint64_t v68;
  os_log_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v79 = a1;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v5);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = type metadata accessor for PageLocation(0);
  v8 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v76 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v68 - v11;
  __chkstk_darwin(v13);
  v77 = (char *)&v68 - v14;
  v15 = type metadata accessor for Logger(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v73 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v68 - v19;
  v21 = swift_allocObject(&unk_1008FF908, 24, 7);
  *(_QWORD *)(v21 + 16) = a3;
  _Block_copy(a3);
  if (qword_1009CE1D0 != -1)
    swift_once(&qword_1009CE1D0, sub_10036D458);
  v22 = sub_100048F64(v15, (uint64_t)qword_100A1E720);
  v72 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v72(v20, v22, v15);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 24);
  if (Strong)
  {
    v24 = a2;
    v25 = Strong;
    v74 = v21;
    v75 = v16;
    v71 = v24;
    swift_getObjectType();
    dispatch thunk of Paginating.locationForBookPageNumber(_:)(v79);
    swift_unknownObjectRelease(v25);
    v26 = type metadata accessor for Location(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v7, 1, v26);
    if ((_DWORD)v28 != 1)
    {
      Location.pageLocation.getter(v28);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v26);
      v35 = v77;
      v36 = v78;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v77, v12, v78);
      v37 = v76;
      v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v76, v35, v36);
      v39 = Logger.logObject.getter(v38);
      v43 = static os_log_type_t.debug.getter(v39, v40, v41, v42);
      v44 = v43;
      if (os_log_type_enabled(v39, v43))
      {
        v45 = swift_slowAlloc(22, -1);
        v69 = v39;
        v46 = v37;
        v47 = v45;
        v48 = swift_slowAlloc(32, -1);
        v70 = v48;
        *(_DWORD *)v47 = 134218242;
        v80 = v79;
        v81 = v48;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v47 + 4, v47 + 12);
        *(_WORD *)(v47 + 12) = 2080;
        v68 = v47 + 14;
        v49 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
        LODWORD(v79) = v44;
        v50 = dispatch thunk of CustomStringConvertible.description.getter(v36, v49);
        v52 = v51;
        v80 = sub_100040F58(v50, v51, &v81);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v68, v47 + 22);
        v53 = swift_bridgeObjectRelease(v52);
        v54 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
        v54(v46, v36, v53);
        v55 = v69;
        _os_log_impl((void *)&_mh_execute_header, v69, (os_log_type_t)v79, "Preparing snapshot for pageNumber %ld location: %s", (uint8_t *)v47, 0x16u);
        v56 = v70;
        swift_arrayDestroy(v70, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v56, -1, -1);
        swift_slowDealloc(v47, -1, -1);

      }
      else
      {

        v54 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
        ((void (*)(char *, uint64_t))v54)(v37, v36);
      }
      v21 = v74;
      v16 = v75;
      v57 = swift_weakLoadStrong(v71 + 16);
      if (v57)
      {
        v58 = v57;
        v59 = v73;
        v72(v73, (uint64_t)v20, v15);
        v60 = *(unsigned __int8 *)(v16 + 80);
        v61 = (v60 + 32) & ~v60;
        v62 = swift_allocObject(&unk_1008FF930, v61 + v17, v60 | 7);
        *(_QWORD *)(v62 + 16) = sub_10036FE0C;
        *(_QWORD *)(v62 + 24) = v21;
        (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v62 + v61, v59, v15);
        v63 = swift_retain(v21);
        v64 = v77;
        BookContentLayoutController.createSnapshotImage(forLocation:completion:)(v77, sub_10036F1C4, v62, v63);
        swift_release(v58);
        v65 = swift_release(v62);
        v66 = v64;
      }
      else
      {
        a3[2](a3, 0);
        v66 = v77;
      }
      v54(v66, v78, v65);
      goto LABEL_16;
    }
    Strong = sub_10036DA40((uint64_t)v7);
    v21 = v74;
    v16 = v75;
  }
  v29 = Logger.logObject.getter(Strong);
  v33 = static os_log_type_t.debug.getter(v29, v30, v31, v32);
  if (os_log_type_enabled(v29, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v34 = 134217984;
    v81 = v79;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v34 + 4, v34 + 12);
    _os_log_impl((void *)&_mh_execute_header, v29, v33, "Preparing snapshot for pageNumber %ld but broken location", v34, 0xCu);
    swift_slowDealloc(v34, -1, -1);
  }

  a3[2](a3, 0);
LABEL_16:
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v15);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

_QWORD *sub_10036FB74(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  _QWORD *v17;

  a8[8] = 0;
  v17 = a8 + 7;
  swift_unknownObjectWeakInit(a8 + 7);
  a8[10] = 0;
  swift_unknownObjectWeakInit(a8 + 9);
  swift_unknownObjectWeakInit(a8 + 11);
  swift_weakInit(a8 + 12, 0);
  a8[14] = 0;
  swift_unknownObjectWeakInit(a8 + 13);
  a8[15] = 0;
  a8[16] = 0;
  sub_100022840(a1, (uint64_t)(a8 + 2));
  swift_unknownObjectWeakAssign(a8 + 11, a2);
  a8[14] = a12;
  swift_unknownObjectWeakAssign(a8 + 13, a4);
  swift_weakAssign(a8 + 12);
  a8[10] = a6;
  swift_unknownObjectWeakAssign(a8 + 9, a5);
  a8[8] = a13;
  swift_unknownObjectWeakAssign(v17, a7);
  return a8;
}

_QWORD *sub_10036FC98(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v18;
  _QWORD *v19;

  v18 = type metadata accessor for BookActionMenuDataSource();
  v19 = (_QWORD *)swift_allocObject(v18, 136, 7);
  return sub_10036FB74(a1, a2, a3, a4, a5, a6, a7, v19, a9, a10, a11, a12, a13);
}

uint64_t sub_10036FD34()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[10]);
  swift_release(v0[12]);
  return swift_deallocObject(v0, 104, 7);
}

uint64_t type metadata accessor for BookActionMediator()
{
  return objc_opt_self(_TtC5Books18BookActionMediator);
}

uint64_t type metadata accessor for PageSnapshotDataGenerator()
{
  return objc_opt_self(_TtC5Books25PageSnapshotDataGenerator);
}

uint64_t type metadata accessor for BookActionMenuDataSource()
{
  return objc_opt_self(_TtC5Books24BookActionMenuDataSource);
}

uint64_t sub_10036FDE8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10036FE0C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

void sub_10036FE20(uint64_t a1)
{
  uint64_t v1;

  type metadata accessor for Logger(0);
  sub_10036DA80(a1, *(void (**)(id))(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10036FE60()
{
  uint64_t v0;

  sub_1002FEDB0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10036FE80()
{
  uint64_t v0;

  return sub_1003013D8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10036FEA4()
{
  uint64_t v0;

  return sub_100300FB4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_10036FEC8()
{
  uint64_t v0;

  return sub_100300B90(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

double sub_10036FEEC()
{
  uint64_t v0;

  return sub_1002FFF84(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10036FF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DDBD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_10036FF5C()
{
  return sub_10036FEEC();
}

void sub_10036FF70()
{
  qword_100A1E738 = 0x403C000000000000;
}

uint64_t sub_10036FF80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t KeyPath;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t OpaqueTypeConformance2;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[2];
  _QWORD v98[3];

  v2 = v1;
  v96 = a1;
  v3 = type metadata accessor for AutomaticHoverEffect(0);
  v94 = *(_QWORD *)(v3 - 8);
  v95 = v3;
  __chkstk_darwin(v3);
  v93 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ContentShapeKinds(0);
  v91 = *(_QWORD *)(v5 - 8);
  v92 = v5;
  __chkstk_darwin(v5);
  v90 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessibilityActionKind(0);
  v88 = *(_QWORD *)(v7 - 8);
  v89 = v7;
  __chkstk_darwin(v7);
  v87 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for AccessibilityChildBehavior(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v10 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009DDBD8);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_10004CFD4(&qword_1009DDBE0);
  __chkstk_darwin(v14);
  v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = sub_10004CFD4(&qword_1009DDBE8);
  v75 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_10004CFD4(&qword_1009DDBF0);
  __chkstk_darwin(v80);
  v76 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v78 = (char *)&v72 - v21;
  __chkstk_darwin(v22);
  v81 = (char *)&v72 - v23;
  v79 = sub_10004CFD4(&qword_1009DDBF8);
  __chkstk_darwin(v79);
  v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_10004CFD4(&qword_1009DDC00);
  __chkstk_darwin(v83);
  v86 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10004CFD4(&qword_1009DDC08);
  v84 = *(_QWORD *)(v27 - 8);
  v85 = v27;
  __chkstk_darwin(v27);
  v82 = (char *)&v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE590 != -1)
    v28 = swift_once(&qword_1009CE590, sub_100478EE4);
  v30 = *(double *)&static REConstants.tapTargetSize;
  *v13 = static Alignment.center.getter(v28);
  v13[1] = v31;
  v32 = sub_10004CFD4(&qword_1009DDC10);
  sub_100370688(v2, (_QWORD *)((char *)v13 + *(int *)(v32 + 44)), v30, v30);
  v34 = static Color.clear.getter(v33);
  KeyPath = swift_getKeyPath(&unk_10071DA48);
  sub_10000B5E4((uint64_t)v13, (uint64_t)v16, &qword_1009DDBD8);
  v36 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  *v36 = KeyPath;
  v36[1] = v34;
  v37 = sub_100010960((uint64_t)v13, &qword_1009DDBD8);
  static AccessibilityChildBehavior.combine.getter(v37);
  v38 = sub_100371328();
  View.accessibilityElement(children:)(v10, v14, v38);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v10, v74);
  sub_100010960((uint64_t)v16, &qword_1009DDBE0);
  v39 = *(_QWORD *)(v2 + 16);
  v40 = *(_BYTE *)(v2 + 24);
  sub_1001F2508(v39, v40);
  v41 = sub_100667C14(v39, v40);
  sub_1001F2564(v39, v40);
  if ((v41 & 1) != 0)
  {
    v42 = 0;
    v43 = 0xE000000000000000;
  }
  else
  {
    v42 = sub_100370ED4();
    v43 = v44;
  }
  v98[0] = v42;
  v98[1] = v43;
  v97[0] = v14;
  v97[1] = v38;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v97, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v46 = sub_1001F2108();
  v47 = (uint64_t)v76;
  v48 = v77;
  View.accessibilityLabel<A>(_:)(v98, v77, &type metadata for String, OpaqueTypeConformance2, v46);
  v49 = swift_bridgeObjectRelease(v43);
  v50 = (*(uint64_t (**)(char *, uint64_t, __n128))(v75 + 8))(v18, v48, v49);
  v51 = v87;
  static AccessibilityActionKind.default.getter(v50);
  v52 = (uint64_t)v78;
  v53 = v80;
  ModifiedContent<>.accessibilityAction(_:_:)(v51, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), v80);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v51, v89);
  sub_100010960(v47, &qword_1009DDBF0);
  sub_1001F2508(v39, v40);
  LOBYTE(OpaqueTypeConformance2) = sub_100667C14(v39, v40);
  sub_1001F2564(v39, v40);
  v54 = (uint64_t)v81;
  ModifiedContent<>.accessibilityHidden(_:)(OpaqueTypeConformance2 & 1, v53);
  sub_100010960(v52, &qword_1009DDBF0);
  v55 = swift_getKeyPath(&unk_10071DA78);
  sub_10000B5E4(v54, (uint64_t)v25, &qword_1009DDBF0);
  v56 = &v25[*(int *)(v79 + 36)];
  *(_QWORD *)v56 = v55;
  v56[8] = 0;
  v57 = sub_100010960(v54, &qword_1009DDBF0);
  v58 = v90;
  static ContentShapeKinds.hoverEffect.getter(v57);
  v59 = v83;
  v60 = (uint64_t)v86;
  v61 = &v86[*(int *)(v83 + 36)];
  v62 = sub_10004CFD4(&qword_1009DDC28);
  v64 = v91;
  v63 = v92;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(&v61[*(int *)(v62 + 40)], v58, v92);
  *v61 = 0;
  sub_10000B5E4((uint64_t)v25, v60, &qword_1009DDBF8);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v58, v63);
  v65 = sub_100010960((uint64_t)v25, &qword_1009DDBF8);
  v66 = v93;
  static CustomHoverEffect<>.automatic.getter(v65);
  v67 = sub_1003713CC();
  v68 = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v69 = v82;
  v70 = v95;
  View.hoverEffect<A>(_:isEnabled:)(v66, 1, v59, v95, v67, v68);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v66, v70);
  sub_100010960(v60, &qword_1009DDC00);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v84 + 32))(v96, v69, v85);
}

void sub_100370688(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  __n128 v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  double v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t *v100;
  _QWORD *v101;
  void *v102;
  uint64_t v103;
  uint64_t KeyPath;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 v110;
  uint64_t v111;
  unsigned __int8 v112;
  uint64_t v113;
  uint64_t v114;

  v8 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v8);
  v100 = (uint64_t *)((char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v99 = type metadata accessor for Image.Scale(0);
  v10 = *(_QWORD *)(v99 - 8);
  __chkstk_darwin(v99);
  v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v13);
  v15 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_10004CFD4(&qword_1009D3900);
  __chkstk_darwin(v107);
  v98 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009D3908);
  __chkstk_darwin(v17);
  v106 = (uint64_t)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v96 = (char *)&v84 - v20;
  __chkstk_darwin(v21);
  v103 = (uint64_t)&v84 - v22;
  v105 = static Color.clear.getter(v23);
  KeyPath = swift_getKeyPath(&unk_10071DAA8);
  v24 = *(_BYTE *)(a1 + 25);
  v25 = type metadata accessor for ChromeStyle(0);
  v26 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  v28 = EnvironmentObject.init()(v25, v26);
  v102 = v27;
  v95 = v29;
  if ((v24 & 1) == 0)
  {
    v97 = static Color.clear.getter(v27);
    v31 = static Edge.Set.all.getter(v30);
    v94 = v31;
LABEL_7:
    v39 = 1.0;
    goto LABEL_8;
  }
  v92 = v26;
  v93 = v25;
  v25 = v8;
  v32 = v12;
  v33 = a1;
  v34 = *(void **)a1;
  if (!v34)
  {
    EnvironmentObject.error()(0, *(_QWORD *)(v33 + 8), v93, v92, v28);
    __break(1u);
    goto LABEL_16;
  }
  v35 = swift_getKeyPath(&unk_10071DB80);
  v36 = swift_getKeyPath(&unk_10071DBA8);
  v37 = v34;
  static Published.subscript.getter(&v109, v37, v35, v36);

  swift_release(v35);
  v38 = swift_release(v36);
  v97 = v109;
  v94 = static Edge.Set.all.getter(v38);
  type metadata accessor for DebugOptions(0);
  v31 = static DebugOptions.fullyFadeChrome.getter();
  if ((v31 & 1) == 0)
  {
    a1 = v33;
    v12 = v32;
    v8 = v25;
    v25 = v93;
    v26 = v92;
    goto LABEL_7;
  }
  v39 = 0.01;
  a1 = v33;
  v12 = v32;
  v8 = v25;
  v25 = v93;
  v26 = v92;
LABEL_8:
  if (qword_1009CE1D8 != -1)
    v31 = swift_once(&qword_1009CE1D8, sub_10036FF70);
  v40 = qword_100A1E738;
  v41 = static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(&v109, v40, 0, v40, 0, v41, v42);
  v43 = v109;
  LODWORD(v92) = v110;
  v91 = v111;
  v90 = v112;
  v89 = v113;
  v88 = v114;
  v44 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  v87 = v44;
  v101 = (_QWORD *)a1;
  v93 = v43;
  v85 = a2;
  if ((v24 & 1) != 0)
  {
    v47 = v8;
    v51 = 0.0;
    v86 = static Color.clear.getter(v44);
    goto LABEL_14;
  }
  v46 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v47 = v8;
    v48 = swift_getKeyPath(&unk_10071DAD8);
    v49 = swift_getKeyPath(&unk_10071DB00);
    v50 = v46;
    static Published.subscript.getter(&v108, v50, v48, v49);

    swift_release(v48);
    swift_release(v49);
    v86 = v108;
    v51 = 1.0;
LABEL_14:
    v52 = swift_getKeyPath(&unk_10071DAA8);
    v53 = static Font.Weight.semibold.getter(v52);
    v54 = type metadata accessor for Font.Design(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v15, 1, 1, v54);
    v55 = static Font.system(size:weight:design:)(*(_QWORD *)&v53, 0, v15, 16.0);
    sub_100010960((uint64_t)v15, &qword_1009CEDD0);
    v56 = swift_getKeyPath(&unk_10071DB20);
    v57 = v12;
    v58 = v12;
    v59 = v99;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v57, enum case for Image.Scale.medium(_:), v99);
    v60 = swift_getKeyPath(&unk_10071DB50);
    v61 = v10;
    v62 = v100;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))((char *)v100 + *(int *)(v47 + 28), v58, v59);
    *v62 = v60;
    v63 = (uint64_t *)v98;
    sub_10000B5E4((uint64_t)v62, (uint64_t)&v98[*(int *)(v107 + 36)], &qword_1009D38F8);
    v64 = v87;
    *v63 = v87;
    v63[1] = v52;
    v65 = v86;
    v63[2] = v86;
    v63[3] = v56;
    v63[4] = v55;
    swift_retain(v64);
    swift_retain(v52);
    swift_retain(v65);
    swift_retain(v56);
    swift_retain(v55);
    sub_100010960((uint64_t)v62, &qword_1009D38F8);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v58, v59);
    swift_release(v55);
    swift_release(v56);
    swift_release(v65);
    swift_release(v52);
    swift_release(v64);
    v66 = sub_10022717C();
    v67 = v96;
    View.accessibilityHidden(_:)(1, v107, v66);
    sub_100010960((uint64_t)v63, &qword_1009D3900);
    v68 = (uint64_t)v67;
    v69 = v103;
    sub_1003715A0(v68, v103);
    v70 = v101[4];
    v107 = v101[5];
    v71 = v101[7];
    v100 = (uint64_t *)v101[6];
    v72 = v106;
    sub_10000B5E4(v69, v106, &qword_1009D3908);
    v74 = KeyPath;
    v73 = v105;
    v75 = v85;
    *v85 = KeyPath;
    v75[1] = v73;
    *((double *)v75 + 2) = v51;
    v76 = v102;
    v77 = v95;
    v75[3] = (uint64_t)v102;
    v75[4] = v77;
    v78 = v97;
    v75[5] = v97;
    *((_BYTE *)v75 + 48) = v94;
    *((double *)v75 + 7) = v39;
    v75[8] = v93;
    *((_BYTE *)v75 + 72) = v92;
    v75[10] = v91;
    *((_BYTE *)v75 + 88) = v90;
    v79 = v88;
    v75[12] = v89;
    v75[13] = v79;
    *((_WORD *)v75 + 56) = 256;
    *((_BYTE *)v75 + 114) = 0;
    v80 = sub_10004CFD4(&qword_1009DDC50);
    sub_10000B5E4(v72, (uint64_t)v75 + *(int *)(v80 + 48), &qword_1009D3908);
    v81 = (char *)v75 + *(int *)(v80 + 64);
    *(double *)v81 = a3;
    *((double *)v81 + 1) = a4;
    v81[16] = 0;
    v82 = v107;
    *((_QWORD *)v81 + 3) = v70;
    *((_QWORD *)v81 + 4) = v82;
    *((_QWORD *)v81 + 5) = v100;
    *((_QWORD *)v81 + 6) = v71;
    *(_OWORD *)(v81 + 56) = 0u;
    *(_OWORD *)(v81 + 72) = 0u;
    *((_QWORD *)v81 + 11) = 0xBFF0000000000000;
    swift_unknownObjectRetain_n(v70, 2);
    swift_retain_n(v71, 2);
    swift_retain(v74);
    swift_retain(v73);
    v83 = v76;
    swift_retain(v78);
    sub_100010960(v69, &qword_1009D3908);
    swift_bridgeObjectRelease_n(0, 2);
    swift_release(v71);
    swift_unknownObjectRelease(v70);
    sub_100010960(v72, &qword_1009D3908);
    swift_release(v78);

    swift_release(v73);
    swift_release(v74);
    return;
  }
LABEL_16:
  EnvironmentObject.error()(0, v101[1], v25, v26, v45);
  __break(1u);
}

uint64_t sub_100370E9C@<X0>(uint64_t a1@<X8>)
{
  return sub_10036FF80(a1);
}

uint64_t sub_100370ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  _BYTE v20[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v20[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v20[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v20[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0x65736F6C43, 0xE500000000000000);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "An accessibility title for a close button", 41, 2);
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  return v18;
}

double destroy for CloseButton(uint64_t a1)
{
  double result;

  sub_1001F2564(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 32));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 56)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for CloseButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = v4;
  sub_1001F2508(v6, v7);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v9 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v9;
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  swift_unknownObjectRetain(v9);
  swift_retain(v11);
  return a1;
}

uint64_t assignWithCopy for CloseButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  sub_1001F2508(v7, v8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  sub_1001F2564(v9, v10);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  swift_unknownObjectRetain(v11);
  swift_unknownObjectRelease(v13);
  *(_QWORD *)(a1 + 40) = v12;
  v15 = *(_QWORD *)(a2 + 48);
  v14 = *(_QWORD *)(a2 + 56);
  v16 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v15;
  *(_QWORD *)(a1 + 56) = v14;
  swift_retain(v14);
  swift_release(v16);
  return a1;
}

uint64_t assignWithTake for CloseButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1001F2564(v6, v7);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 32));
  v8 = *(_QWORD *)(a1 + 56);
  v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  swift_release(v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CloseButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CloseButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloseButton()
{
  return &type metadata for CloseButton;
}

uint64_t sub_100371310(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086E114, 1);
}

unint64_t sub_100371328()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DDC18;
  if (!qword_1009DDC18)
  {
    v1 = sub_100030B74(&qword_1009DDBE0);
    sub_100030B34(&qword_1009DDC20, &qword_1009DDBD8, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DDC18);
  }
  return result;
}

unint64_t sub_1003713CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DDC30;
  if (!qword_1009DDC30)
  {
    v1 = sub_100030B74(&qword_1009DDC00);
    sub_100371450();
    sub_100030B34(&qword_1009DDC48, &qword_1009DDC28, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DDC30);
  }
  return result;
}

unint64_t sub_100371450()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DDC38;
  if (!qword_1009DDC38)
  {
    v1 = sub_100030B74(&qword_1009DDBF8);
    sub_1003714D4();
    sub_100030B34((unint64_t *)&unk_1009D8600, &qword_1009D1CD0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DDC38);
  }
  return result;
}

unint64_t sub_1003714D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1009DDC40;
  if (!qword_1009DDC40)
  {
    v1 = sub_100030B74(&qword_1009DDBF0);
    v2[0] = sub_100030B74(&qword_1009DDBE0);
    v2[1] = sub_100371328();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DDC40);
  }
  return result;
}

uint64_t sub_1003715A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D3908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003715F0()
{
  _QWORD v1[4];

  v1[0] = sub_100030B74(&qword_1009DDC00);
  v1[1] = type metadata accessor for AutomaticHoverEffect(255);
  v1[2] = sub_1003713CC();
  v1[3] = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
}

uint64_t sub_100371678(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10067082C(*a1, *a2);
}

unint64_t sub_100371688()
{
  unint64_t result;

  result = qword_1009DDC58;
  if (!qword_1009DDC58)
  {
    result = swift_getWitnessTable(&unk_10071DBDC, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDC58);
  }
  return result;
}

Swift::Int sub_1003716CC()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[9];

  v1 = *v0;
  Hasher.init(_seed:)(v7, 0);
  v2 = 0x80000001007B2390;
  v3 = 0xD00000000000001BLL;
  if (v1 != 1)
  {
    v3 = 0x73754372656D6974;
    v2 = 0xEB000000006D6F74;
  }
  if (v1)
    v4 = v3;
  else
    v4 = 0x66664F72656D6974;
  if (v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(v7, v4, v5);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

uint64_t sub_100371778(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v2 = 0x80000001007B2390;
  v3 = 0xD00000000000001BLL;
  if (*v1 != 1)
  {
    v3 = 0x73754372656D6974;
    v2 = 0xEB000000006D6F74;
  }
  if (*v1)
    v4 = v3;
  else
    v4 = 0x66664F72656D6974;
  if (*v1)
    v5 = v2;
  else
    v5 = 0xE800000000000000;
  String.hash(into:)(a1, v4, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100371800(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v8[9];

  v2 = *v1;
  Hasher.init(_seed:)(v8, a1);
  v3 = 0x80000001007B2390;
  v4 = 0xD00000000000001BLL;
  if (v2 != 1)
  {
    v4 = 0x73754372656D6974;
    v3 = 0xEB000000006D6F74;
  }
  if (v2)
    v5 = v4;
  else
    v5 = 0x66664F72656D6974;
  if (v2)
    v6 = v3;
  else
    v6 = 0xE800000000000000;
  String.hash(into:)(v8, v5, v6);
  swift_bridgeObjectRelease(v6);
  return Hasher._finalize()();
}

unint64_t sub_1003718A8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100372860(*a1);
  *a2 = result;
  return result;
}

void sub_1003718D4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0x80000001007B2390;
  v5 = 0xD00000000000001BLL;
  if (v2 != 1)
  {
    v5 = 0x73754372656D6974;
    v4 = 0xEB000000006D6F74;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x66664F72656D6974;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100371940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100371A7C();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_10037199C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100371A7C();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_1003719EC()
{
  unint64_t result;

  result = qword_1009DDC60;
  if (!qword_1009DDC60)
  {
    result = swift_getWitnessTable(&unk_10071DD0C, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDC60);
  }
  return result;
}

unint64_t sub_100371A34()
{
  unint64_t result;

  result = qword_1009DDC68;
  if (!qword_1009DDC68)
  {
    result = swift_getWitnessTable(&unk_10071DD44, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDC68);
  }
  return result;
}

unint64_t sub_100371A7C()
{
  unint64_t result;

  result = qword_1009DDC70;
  if (!qword_1009DDC70)
  {
    result = swift_getWitnessTable(&unk_10071DC44, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDC70);
  }
  return result;
}

unint64_t sub_100371AC4()
{
  unint64_t result;

  result = qword_1009DDC78;
  if (!qword_1009DDC78)
  {
    result = swift_getWitnessTable(&unk_10071DD74, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDC78);
  }
  return result;
}

unint64_t sub_100371B0C()
{
  unint64_t result;

  result = qword_1009DDC80;
  if (!qword_1009DDC80)
  {
    result = swift_getWitnessTable(&unk_10071DD9C, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDC80);
  }
  return result;
}

unint64_t sub_100371B54()
{
  unint64_t result;

  result = qword_1009DDC88;
  if (!qword_1009DDC88)
  {
    result = swift_getWitnessTable(&unk_10071DDC4, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDC88);
  }
  return result;
}

unint64_t sub_100371B9C()
{
  unint64_t result;

  result = qword_1009DDC90;
  if (!qword_1009DDC90)
  {
    result = swift_getWitnessTable(&unk_10071DE1C, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDC90);
  }
  return result;
}

uint64_t sub_100371BE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  Swift::String v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t);
  uint64_t v29;
  Swift::String v30;
  uint64_t v31;
  char *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v40 = a1;
  v38 = type metadata accessor for String.LocalizationValue.Placeholder(0);
  v1 = *(_QWORD *)(v38 - 8);
  v2 = __chkstk_darwin(v38);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue.StringInterpolation(0, v2);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v8);
  v39 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  v36 = *(_QWORD *)(v20 - 8);
  v37 = v20;
  __chkstk_darwin(v20);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = String.LocalizationValue.init(stringLiteral:)(0x6954207065656C53, 0xEB0000000072656DLL);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v25(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "AppIntent: Sleep Timer", 22, 2);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
  v27 = v1;
  v28 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v29 = v38;
  v28(v4, enum case for String.LocalizationValue.Placeholder.int(_:), v38);
  String.LocalizationValue.StringInterpolation.appendInterpolation(placeholder:specifier:)(v4, 1684827173, 0xE400000000000000);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v29);
  v30._countAndFlagsBits = 0x736574756E696D20;
  v30._object = (void *)0xE800000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v30);
  v31 = String.LocalizationValue.init(stringInterpolation:)(v7);
  static Locale.current.getter(v31);
  v25(v13, v24, v35);
  v32 = v39;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "AppIntent: Sleep Timer: # minutes", 33, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v37);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v22, v32);
}

unint64_t sub_100371F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  _BYTE *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  unint64_t result;
  uint64_t v53;
  char *v54;
  unsigned int v55;
  char *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *);
  char *v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v68 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v75 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v4 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v72 = v13;
  __chkstk_darwin(v13);
  v56 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009DDCC8);
  v17 = sub_10004CFD4(&qword_1009D0960);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = v17;
  v74 = v17;
  v20 = *(_QWORD *)(v18 + 72);
  v21 = *(unsigned __int8 *)(v18 + 80);
  v22 = (v21 + 32) & ~v21;
  v64 = v20;
  v65 = 2 * v20;
  v23 = swift_allocObject(v16, v22 + 3 * v20, v21 | 7);
  v66 = v23;
  *(_OWORD *)(v23 + 16) = xmmword_100712B60;
  v73 = v23 + v22;
  v63 = v23 + v22 + *(int *)(v19 + 48);
  *(_BYTE *)(v23 + v22) = 0;
  v24 = String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
  v25 = v9;
  static Locale.current.getter(v24);
  v55 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v67 = *(void (**)(char *))(v4 + 104);
  v26 = v62;
  v67(v6);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v6, "AppIntent: Sleep timer: Off", 27, 2);
  v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v71(v75, 1, 1, v13);
  v27 = type metadata accessor for DisplayRepresentation.Image(0);
  v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v70 = v27;
  v28 = v68;
  v69(v68, 1, 1, v27);
  v29 = sub_10004CFD4(&qword_1009D2640);
  v30 = *(unsigned __int8 *)(v14 + 80);
  v60 = ((v30 + 32) & ~v30) + *(_QWORD *)(v14 + 72);
  v61 = v29;
  v58 = (v30 + 32) & ~v30;
  v59 = v30 | 7;
  v31 = swift_allocObject(v29, v60, v30 | 7);
  v57 = xmmword_10070CCA0;
  *(_OWORD *)(v31 + 16) = xmmword_10070CCA0;
  v32 = v12;
  v54 = v12;
  v33 = String.LocalizationValue.init(stringLiteral:)(0x64656C6261736944, 0xE800000000000000);
  v34 = v25;
  static Locale.current.getter(v33);
  v35 = v55;
  v36 = v26;
  v37 = (void (*)(char *, uint64_t, uint64_t))v67;
  ((void (*)(char *, _QWORD, uint64_t))v67)(v6, v55, v26);
  v38 = v32;
  v39 = v6;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v38, 0, 0, v34, v6, "AppIntent: Sleep timer: Synonym for 'Off'", 41, 2);
  v40 = v56;
  v41 = v75;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v56, v75, v28, v31);
  v42 = (_BYTE *)(v73 + v64);
  v64 += v73 + *(int *)(v74 + 48);
  *v42 = 1;
  v43 = v54;
  v44 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000019, 0x80000001007C3860);
  static Locale.current.getter(v44);
  v37(v39, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v43, 0, 0, v34, v39, "AppIntent: Sleep timer: When Current Chapter Ends", 49, 2);
  v71(v41, 1, 1, v72);
  v69(v28, 1, 1, v70);
  v45 = swift_allocObject(v61, v60, v59);
  *(_OWORD *)(v45 + 16) = v57;
  v46 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001DLL, 0x80000001007C38C0);
  static Locale.current.getter(v46);
  v47 = (void (*)(char *, uint64_t, uint64_t))v67;
  ((void (*)(char *, uint64_t, uint64_t))v67)(v39, v35, v36);
  v48 = v43;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v43, 0, 0, v34, v39, "AppIntent: Sleep timer: Synonym for 'When Current Chapter Ends'", 63, 2);
  v49 = v75;
  v50 = v68;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v40, v75, v68, v45);
  *(_BYTE *)(v73 + v65) = 2;
  v51 = String.LocalizationValue.init(stringLiteral:)(0x6D6F74737543, 0xE600000000000000);
  static Locale.current.getter(v51);
  v47(v39, v35, v36);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v48, 0, 0, v34, v39, "Custom sleep timer", 18, 2);
  v71(v49, 1, 1, v72);
  v69(v50, 1, 1, v70);
  DisplayRepresentation.init(title:subtitle:image:)(v40, v49, v50);
  result = sub_1001DAB68(v66);
  qword_100A1E740 = result;
  return result;
}

uint64_t sub_100372528(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_100372568();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_100372568()
{
  unint64_t result;

  result = qword_1009DDC98;
  if (!qword_1009DDC98)
  {
    result = swift_getWitnessTable(&unk_10071DCCC, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDC98);
  }
  return result;
}

uint64_t sub_1003725AC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100372568();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1003725E8()
{
  unint64_t result;

  result = qword_1009DDCA0;
  if (!qword_1009DDCA0)
  {
    result = swift_getWitnessTable(&unk_10071DE5C, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDCA0);
  }
  return result;
}

unint64_t sub_100372630()
{
  unint64_t result;

  result = qword_1009DDCA8;
  if (!qword_1009DDCA8)
  {
    result = swift_getWitnessTable(&unk_10071DE84, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDCA8);
  }
  return result;
}

unint64_t sub_100372678()
{
  unint64_t result;

  result = qword_1009DDCB0;
  if (!qword_1009DDCB0)
  {
    result = swift_getWitnessTable(&unk_10071DC04, &type metadata for SleepTimerOption);
    atomic_store(result, (unint64_t *)&qword_1009DDCB0);
  }
  return result;
}

double sub_1003726BC()
{
  double result;

  if (qword_1009CE1E0 != -1)
    swift_once(&qword_1009CE1E0, sub_100371F1C);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100A1E740).n128_u64[0];
  return result;
}

uint64_t sub_1003726FC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100371B9C();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100372738()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DDCB8;
  if (!qword_1009DDCB8)
  {
    v1 = sub_100030B74(&qword_1009DDCC0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009DDCB8);
  }
  return result;
}

void sub_100372784(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFD08;
}

uint64_t storeEnumTagSinglePayload for SleepTimerOption(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003727E0 + 4 * byte_10071DBD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100372814 + 4 * byte_10071DBD0[v4]))();
}

uint64_t sub_100372814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10037281C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100372824);
  return result;
}

uint64_t sub_100372830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100372838);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10037283C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100372844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SleepTimerOption()
{
  return &type metadata for SleepTimerOption;
}

unint64_t sub_100372860(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F0970, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 3)
    return 3;
  else
    return v3;
}

double destroy for PageFlippingView(uint64_t a1)
{
  double result;

  swift_release(*(_QWORD *)a1);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 8));

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 64)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for PageFlippingView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t *, uint64_t);
  void *v9;
  uint64_t v10;
  id v11;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = a2 + 1;
  v6 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 32) = v6;
  v7 = v6;
  v8 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v6 - 8);
  swift_retain(v4);
  v8(a1 + 8, v5, v7);
  v9 = (void *)a2[6];
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  v10 = a2[8];
  *(_QWORD *)(a1 + 64) = v10;
  v11 = v9;
  swift_retain(v10);
  return a1;
}

uint64_t *assignWithCopy for PageFlippingView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  sub_1001EAB00(a1 + 1, a2 + 1);
  v6 = (void *)a2[6];
  v7 = (void *)a1[6];
  a1[6] = (uint64_t)v6;
  v8 = v6;

  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  v9 = a1[8];
  v10 = a2[8];
  a1[8] = v10;
  swift_retain(v10);
  swift_release(v9);
  return a1;
}

__n128 initializeWithTake for PageFlippingView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t *assignWithTake for PageFlippingView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  _s5Books15CurrentPageViewVwxx_0(a1 + 1);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
  v5 = a2[6];
  v6 = (void *)a1[6];
  a1[5] = a2[5];
  a1[6] = v5;

  *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
  v7 = a1[8];
  a1[8] = a2[8];
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PageFlippingView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PageFlippingView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PageFlippingView()
{
  return &type metadata for PageFlippingView;
}

uint64_t sub_100372B34(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086E174, 1);
}

__n128 sub_100372B44@<Q0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  __n128 v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __n128 result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD aBlock[5];
  uint64_t v47;
  __int128 v48;
  __n128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v2 = (uint64_t *)v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v45 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)v1;
  KeyPath = swift_getKeyPath(&unk_10071DF48);
  *(_QWORD *)&v48 = v11;
  v13 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v48, KeyPath, v13);
  swift_release(KeyPath);
  if (*(unsigned __int8 *)(v11 + 248) <= 0xBFu)
  {
    v14 = *(_QWORD *)(v11 + 240);
    if (v14 < *(_QWORD *)(v11 + 232))
    {
      v15 = 1;
      v16 = 0xC051000000000000;
      goto LABEL_6;
    }
  }
  else
  {
    v14 = 1;
  }
  v15 = 0;
  v16 = 0x4051000000000000;
LABEL_6:
  v17 = v16;
  v18 = *(_QWORD *)(v1 + 64);
  LOBYTE(v48) = *(_BYTE *)(v1 + 56);
  *((_QWORD *)&v48 + 1) = v18;
  sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(aBlock);
  if ((aBlock[0] & 1) == 0)
  {
    v19 = sub_100059BB4();
    v42 = static OS_dispatch_queue.main.getter(v19);
    sub_100373298((uint64_t *)v1, (uint64_t)&v48);
    v20 = swift_allocObject(&unk_1008FFD48, 88, 7);
    v21 = v51;
    *(_OWORD *)(v20 + 48) = v50;
    *(_OWORD *)(v20 + 64) = v21;
    *(_QWORD *)(v20 + 80) = v52;
    v22 = v49;
    *(_OWORD *)(v20 + 16) = v48;
    *(__n128 *)(v20 + 32) = v22;
    aBlock[4] = sub_1003732D4;
    v47 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1008FFD60;
    v23 = _Block_copy(aBlock);
    v41 = v5;
    v44 = a1;
    v24 = v23;
    swift_release(v47);
    static DispatchQoS.unspecified.getter(v25);
    *(_QWORD *)&v48 = _swiftEmptyArrayStorage;
    v26 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v43 = v14;
    v27 = v8;
    v28 = v26;
    v29 = v15;
    v30 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v31 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    v32 = v30;
    v15 = v29;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v48, v32, v31, v4, v28);
    v33 = (void *)v42;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v24);
    v34 = v24;
    a1 = v44;
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v4);
    v35 = v27;
    v14 = v43;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v35);
  }
  sub_100373298(v2, (uint64_t)&v48);
  v36 = swift_allocObject(&unk_1008FFD98, 113, 7);
  v37 = v51;
  *(_OWORD *)(v36 + 48) = v50;
  *(_OWORD *)(v36 + 64) = v37;
  v38 = v52;
  result = v49;
  *(_OWORD *)(v36 + 16) = v48;
  *(__n128 *)(v36 + 32) = result;
  *(_QWORD *)(v36 + 80) = v38;
  *(_QWORD *)(v36 + 88) = v14;
  *(_QWORD *)(v36 + 96) = 0x4008000000000000;
  *(_QWORD *)(v36 + 104) = v17;
  *(_BYTE *)(v36 + 112) = v15;
  *a1 = sub_1003732E4;
  a1[1] = v36;
  return result;
}

double sub_100372EA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  _QWORD v6[4];
  _BYTE v7[9];
  uint64_t v8;

  v2 = static Animation.spring(response:dampingFraction:blendDuration:)(a1, 0.5, 1.0, 0.0);
  v6[2] = a1;
  if (UIAccessibilityIsReduceMotionEnabled())
  {
    v3 = *(_QWORD *)(a1 + 64);
    v7[1] = *(_BYTE *)(a1 + 56);
    v8 = v3;
    v7[0] = 1;
    v4 = sub_10004CFD4(&qword_1009D8450);
    State.wrappedValue.setter(v7, v4);
  }
  else
  {
    withAnimation<A>(_:_:)(v2, sub_1003733D4, v6, (char *)&type metadata for () + 8);
  }
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

void sub_100372F58(uint64_t a1@<X0>, char a2@<W3>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  _QWORD *v29;
  double v30;
  double v31;
  id v32;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  _OWORD v42[2];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _OWORD v47[3];
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;

  v9 = GeometryProxy.size.getter(a1);
  GeometryProxy.size.getter(v10);
  v12 = v11;
  v14 = static Alignment.center.getter(v13);
  _FrameLayout.init(width:height:alignment:)(&v51, *(_QWORD *)&v9, 0, v12, 0, v14, v15);
  v40 = v51;
  v39 = v52;
  v38 = v53;
  v37 = v54;
  v35 = v56;
  v36 = v55;
  v16 = *(void **)(a1 + 48);
  KeyPath = swift_getKeyPath(&unk_10071DF70);
  v18 = swift_getKeyPath(&unk_10071DF98);
  static Published.subscript.getter(v47, v16, KeyPath, v18);
  swift_release(KeyPath);
  swift_release(v18);
  v19 = *(_QWORD *)&v47[0];
  v20 = swift_getKeyPath(&unk_10071DFB8);
  v21 = *(_QWORD *)(a1 + 64);
  LOBYTE(v47[0]) = *(_BYTE *)(a1 + 56);
  *((_QWORD *)&v47[0] + 1) = v21;
  v34 = v16;
  sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(v42);
  v22 = LOBYTE(v42[0]);
  v23 = sub_10002E418(a1 + 8, (uint64_t)v47);
  v24 = static Color.red.getter(v23);
  v25 = swift_getKeyPath(&unk_10071DFB8);
  sub_100373364((uint64_t)v47, (uint64_t)v42);
  *((_QWORD *)&v43 + 1) = v25;
  *(_QWORD *)&v44 = v24;
  sub_1003733A0(v47);
  v26 = *(void **)(a1 + 48);
  sub_10000B5E4((uint64_t)v42, (uint64_t)v47, &qword_1009DDCD0);
  *((_QWORD *)&v48 + 1) = v26;
  *(double *)&v49 = a4;
  v27 = v26;
  sub_100010960((uint64_t)v42, &qword_1009DDCD0);
  v28 = *(_QWORD *)(a1 + 64);
  LOBYTE(v42[0]) = *(_BYTE *)(a1 + 56);
  *((_QWORD *)&v42[0] + 1) = v28;
  v29 = State.wrappedValue.getter(&v41);
  v30 = 0.0;
  if (v41 == 1)
  {
    v31 = GeometryProxy.size.getter(v29);
    if ((a2 & 1) != 0)
      v30 = 2.0 - v31;
    else
      v30 = v31 + -2.0;
  }
  if (v22)
    a5 = 0.0;
  sub_10000B5E4((uint64_t)v47, (uint64_t)v42, &qword_1009DDCD8);
  *((double *)&v45 + 1) = v30;
  v46 = 0;
  sub_100010960((uint64_t)v47, &qword_1009DDCD8);
  v48 = v44;
  v49 = v45;
  v50 = v46;
  v47[0] = v42[0];
  v47[1] = v42[1];
  v47[2] = v43;
  sub_10000B5E4((uint64_t)v47, (uint64_t)v42, &qword_1009DDCE0);
  *(_QWORD *)a3 = v40;
  *(_BYTE *)(a3 + 8) = v39;
  *(_QWORD *)(a3 + 16) = v38;
  *(_BYTE *)(a3 + 24) = v37;
  *(_QWORD *)(a3 + 32) = v36;
  *(_QWORD *)(a3 + 40) = v35;
  *(_QWORD *)(a3 + 48) = v20;
  *(_QWORD *)(a3 + 56) = v19;
  *(_QWORD *)(a3 + 64) = v34;
  *(double *)(a3 + 72) = a4;
  *(double *)(a3 + 80) = a5;
  *(_QWORD *)(a3 + 88) = 0;
  sub_10000B5E4((uint64_t)v42, a3 + 96, &qword_1009DDCE0);
  swift_retain(v20);
  swift_retain(v19);
  v32 = v34;
  sub_100010960((uint64_t)v47, &qword_1009DDCE0);
  sub_100010960((uint64_t)v42, &qword_1009DDCE0);

  swift_release(v19);
  swift_release(v20);
}

uint64_t sub_100373298(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for PageFlippingView(a2, a1);
  return a2;
}

uint64_t sub_1003732CC()
{
  return sub_10000E62C(88);
}

double sub_1003732D4()
{
  uint64_t v0;

  return sub_100372EA8(v0 + 16);
}

uint64_t sub_1003732DC()
{
  return sub_10000E62C(113);
}

void sub_1003732E4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  double v5;
  double v6;
  char v7;
  uint64_t v8;

  v4 = v2 + 16;
  v5 = *(double *)(v2 + 96);
  v6 = *(double *)(v2 + 104);
  v7 = *(_BYTE *)(v2 + 112);
  *a2 = static Alignment.center.getter(a1);
  a2[1] = v8;
  sub_100372F58(v4, v7, (uint64_t)(a2 + 2), v5, v6);
}

uint64_t sub_100373364(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for CurrentPageView(a2, a1);
  return a2;
}

_QWORD *sub_1003733A0(_QWORD *a1)
{
  destroy for CurrentPageView(a1);
  return a1;
}

double sub_1003733D4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  _BYTE v6[9];
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_10004CFD4(&qword_1009D8450);
  *(_QWORD *)&result = State.wrappedValue.setter(v6, v4).n128_u64[0];
  return result;
}

uint64_t sub_100373434()
{
  return sub_100030B34(&qword_1009DDCE8, (uint64_t *)&unk_1009DDCF0, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
}

void sub_100373460(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  v19 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v6 = 0;
  v7 = _swiftEmptyArrayStorage;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v8 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v8 | (v6 << 6); ; i = __clz(__rbit64(v11)) + (v6 << 6))
  {
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain(v15);
    if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
      v7 = sub_100043ED0(0, v7[2] + 1, 1, v7);
    v17 = v7[2];
    v16 = v7[3];
    if (v17 >= v16 >> 1)
      v7 = sub_100043ED0((_QWORD *)(v16 > 1), v17 + 1, 1, v7);
    v7[2] = v17 + 1;
    v18 = &v7[2 * v17];
    v18[4] = v14;
    v18[5] = v15;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v10 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v10 >= v5)
      goto LABEL_27;
    v11 = *(_QWORD *)(v19 + 8 * v10);
    ++v6;
    if (!v11)
    {
      v6 = v10 + 1;
      if (v10 + 1 >= v5)
        goto LABEL_27;
      v11 = *(_QWORD *)(v19 + 8 * v6);
      if (!v11)
      {
        v6 = v10 + 2;
        if (v10 + 2 >= v5)
          goto LABEL_27;
        v11 = *(_QWORD *)(v19 + 8 * v6);
        if (!v11)
        {
          v6 = v10 + 3;
          if (v10 + 3 >= v5)
            goto LABEL_27;
          v11 = *(_QWORD *)(v19 + 8 * v6);
          if (!v11)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v11 - 1) & v11;
  }
  v12 = v10 + 4;
  if (v12 >= v5)
  {
LABEL_27:
    swift_release(a1);
    return;
  }
  v11 = *(_QWORD *)(v19 + 8 * v12);
  if (v11)
  {
    v6 = v12;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v6 >= v5)
      goto LABEL_27;
    v11 = *(_QWORD *)(v19 + 8 * v6);
    ++v12;
    if (v11)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

void sub_100373658(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t i;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  _QWORD v20[5];
  __int128 v21;
  _OWORD v22[2];
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  uint64_t v26;
  _OWORD *v27;

  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v19 = (unint64_t)(v2 + 63) >> 6;
  v27 = v25;
  swift_bridgeObjectRetain(a1);
  v5 = 0;
  v6 = _swiftEmptyArrayStorage;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (i = v7 | (v5 << 6); ; i = __clz(__rbit64(v10)) + (v5 << 6))
  {
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v13 = *v12;
    v14 = v12[1];
    sub_10002E418(*(_QWORD *)(a1 + 56) + 40 * i, (uint64_t)v27);
    *(_QWORD *)&v24 = v13;
    *((_QWORD *)&v24 + 1) = v14;
    v21 = v24;
    v22[0] = v25[0];
    v22[1] = v25[1];
    v23 = v26;
    v15 = v24;
    sub_10002E418((uint64_t)v22, (uint64_t)v20);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(*((_QWORD *)&v15 + 1));
    _s5Books15CurrentPageViewVwxx_0(v20);
    sub_100010960((uint64_t)&v21, &qword_1009DDF38);
    if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) == 0)
      v6 = sub_100043ED0(0, v6[2] + 1, 1, v6);
    v17 = v6[2];
    v16 = v6[3];
    if (v17 >= v16 >> 1)
      v6 = sub_100043ED0((_QWORD *)(v16 > 1), v17 + 1, 1, v6);
    v6[2] = v17 + 1;
    *(_OWORD *)&v6[2 * v17 + 4] = v15;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v19)
      goto LABEL_27;
    v10 = *(_QWORD *)(v18 + 8 * v9);
    ++v5;
    if (!v10)
    {
      v5 = v9 + 1;
      if (v9 + 1 >= v19)
        goto LABEL_27;
      v10 = *(_QWORD *)(v18 + 8 * v5);
      if (!v10)
      {
        v5 = v9 + 2;
        if (v9 + 2 >= v19)
          goto LABEL_27;
        v10 = *(_QWORD *)(v18 + 8 * v5);
        if (!v10)
        {
          v5 = v9 + 3;
          if (v9 + 3 >= v19)
            goto LABEL_27;
          v10 = *(_QWORD *)(v18 + 8 * v5);
          if (!v10)
            break;
        }
      }
    }
LABEL_20:
    v4 = (v10 - 1) & v10;
  }
  v11 = v9 + 4;
  if (v11 >= v19)
  {
LABEL_27:
    swift_release(a1);
    return;
  }
  v10 = *(_QWORD *)(v18 + 8 * v11);
  if (v10)
  {
    v5 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v5 >= v19)
      goto LABEL_27;
    v10 = *(_QWORD *)(v18 + 8 * v5);
    ++v11;
    if (v10)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
}

_QWORD *sub_1003738F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  __n128 v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, __n128);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;

  v43 = a2;
  v42 = sub_10004CFD4(&qword_1009DDF28);
  v4 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v41 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009DDD40);
  v39 = *(_QWORD *)(v6 - 8);
  v40 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v37 = (char *)&v32 - v10;
  v12 = __chkstk_darwin(v11);
  v38 = (uint64_t)&v32 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return _swiftEmptyArrayStorage;
  v44 = v2;
  v15 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v36 = *(_QWORD *)(v4 + 72);
  v16 = type metadata accessor for ContextActionType.ContextActionGroup(0, v12);
  v35 = *(_QWORD *)(v16 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v35 + 16);
  v33 = v16;
  v34 = v17;
  v32 = a1;
  v18 = swift_bridgeObjectRetain(a1);
  v19 = _swiftEmptyArrayStorage;
  v20 = v41;
  v21 = v33;
  v22 = (uint64_t)v37;
  do
  {
    v23 = *(int *)(v40 + 48);
    v24 = *(int *)(v42 + 48);
    v34(v20, v15, v21, v18);
    v25 = *(_QWORD *)(v15 + v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v22, v20, v21);
    v26 = v44;
    v27 = sub_100373D84(v25, v43);
    v44 = v26;
    *(_QWORD *)(v22 + v23) = v27;
    v28 = v38;
    sub_100025B3C(v22, v38, (uint64_t *)&unk_1009DDD40);
    sub_100025B3C(v28, (uint64_t)v8, (uint64_t *)&unk_1009DDD40);
    if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
      v19 = (_QWORD *)sub_1005B13E0(0, v19[2] + 1, 1, (unint64_t)v19);
    v30 = v19[2];
    v29 = v19[3];
    if (v30 >= v29 >> 1)
      v19 = (_QWORD *)sub_1005B13E0(v29 > 1, v30 + 1, 1, (unint64_t)v19);
    v19[2] = v30 + 1;
    sub_100025B3C((uint64_t)v8, (uint64_t)v19+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(_QWORD *)(v39 + 72) * v30, (uint64_t *)&unk_1009DDD40);
    v15 += v36;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease(v32);
  return v19;
}

_QWORD *sub_100373B9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[3];
  _OWORD v24[2];
  __int128 v25;
  uint64_t v26;

  v2 = type metadata accessor for ContextActionType(0);
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  v20 = v5;
  v18 = a1;
  if (v5)
  {
    v6 = 0;
    v7 = a1 + 32;
    v19 = (uint64_t)v24 + 8;
    v8 = _swiftEmptyArrayStorage;
    do
    {
      sub_10002E418(v7, (uint64_t)v23 + 8);
      *(_QWORD *)&v24[0] = v6;
      sub_100022840((_OWORD *)((char *)v23 + 8), v19);
      v23[1] = v24[1];
      v23[2] = v25;
      v23[0] = v24[0];
      v26 = *(_QWORD *)&v24[0];
      v9 = v25;
      sub_10003F198((_QWORD *)v23 + 1, v25);
      v10.n128_f64[0] = dispatch thunk of ContextActionItem.type.getter(v9, *((_QWORD *)&v9 + 1));
      v11 = ContextActionType.identifier.getter(v10);
      v13 = v12;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v22);
      sub_100010960((uint64_t)v23, &qword_1009DDF18);
      if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        v8 = sub_1005B1198(0, v8[2] + 1, 1, v8);
      v15 = v8[2];
      v14 = v8[3];
      if (v15 >= v14 >> 1)
        v8 = sub_1005B1198((_QWORD *)(v14 > 1), v15 + 1, 1, v8);
      ++v6;
      v8[2] = v15 + 1;
      v16 = &v8[3 * v15];
      v16[4] = v11;
      v16[5] = v13;
      v16[6] = v26;
      v7 += 40;
    }
    while (v20 != v6);
  }
  else
  {
    v8 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(v18);
  return v8;
}

_QWORD *sub_100373D84(uint64_t a1, uint64_t *a2)
{
  _QWORD *result;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30[2];
  _QWORD *v31;

  result = _swiftEmptyArrayStorage;
  v31 = _swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v6 = *(_QWORD *)(type metadata accessor for ContextActionType(0) - 8);
    v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v8 = *(_QWORD *)(v6 + 72);
    v26 = a1;
    v9 = swift_bridgeObjectRetain(a1);
    do
    {
      v10 = ContextActionType.identifier.getter(v9);
      v12 = v11;
      v13 = *a2;
      if (*(_QWORD *)(*a2 + 16) && (v14 = sub_10004CE80(v10, v11), (v15 & 1) != 0))
      {
        sub_10002E418(*(_QWORD *)(v13 + 56) + 40 * v14, (uint64_t)&v27);
      }
      else
      {
        v29 = 0;
        v27 = 0u;
        v28 = 0u;
      }
      swift_bridgeObjectRelease(v12);
      if (*((_QWORD *)&v28 + 1))
      {
        sub_100022840(&v27, (uint64_t)v30);
        sub_100022840(v30, (uint64_t)&v27);
        v16 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native(v31) & 1) == 0)
        {
          v16 = sub_1005B1048(0, v16[2] + 1, 1, v16);
          v31 = v16;
        }
        v18 = v16[2];
        v17 = v16[3];
        if (v18 >= v17 >> 1)
          v31 = sub_1005B1048((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
        v19 = *((_QWORD *)&v28 + 1);
        v20 = v29;
        v21 = sub_100063750((uint64_t)&v27, *((uint64_t *)&v28 + 1));
        v22 = __chkstk_darwin(v21);
        v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v25 + 16))(v24, v22);
        sub_100383378(v18, (uint64_t)v24, (uint64_t *)&v31, v19, v20);
        _s5Books15CurrentPageViewVwxx_0(&v27);
      }
      else
      {
        sub_100010960((uint64_t)&v27, &qword_1009DDF30);
      }
      v7 += v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(v26);
    return v31;
  }
  return result;
}

void sub_100373F8C(uint64_t (*a1)(_QWORD *, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *, __n128);
  unint64_t v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  char v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v20;
  _QWORD v21[2];
  _QWORD *v22;

  v4 = a3;
  v20 = *(_QWORD *)(a3 + 16);
  if (v20)
  {
    v5 = a1;
    v6 = 0;
    v7 = (uint64_t *)(a3 + 40);
    v8 = _swiftEmptyArrayStorage;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *(v7 - 1);
      v9 = *v7;
      v21[0] = v10;
      v21[1] = v9;
      v11 = swift_bridgeObjectRetain(v9);
      v12 = v5(v21, v11);
      if (v3)
      {
        swift_release(v8);
        swift_bridgeObjectRelease(v4);
        v17 = v9;
        goto LABEL_15;
      }
      if ((v12 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v8);
        v22 = v8;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100045E44(0, v8[2] + 1, 1);
          v8 = v22;
        }
        v15 = v8[2];
        v14 = v8[3];
        if (v15 >= v14 >> 1)
        {
          sub_100045E44(v14 > 1, v15 + 1, 1);
          v8 = v22;
        }
        v8[2] = v15 + 1;
        v16 = &v8[2 * v15];
        v16[4] = v10;
        v16[5] = v9;
        v4 = a3;
        v5 = a1;
      }
      else
      {
        swift_bridgeObjectRelease(v9);
      }
      ++v6;
      v7 += 2;
      if (v20 == v6)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    v17 = v4;
LABEL_15:
    swift_bridgeObjectRelease(v17);
  }
}

uint64_t sub_1003740FC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v7)(__int128 *);
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(__int128 *);
  __int128 v15[2];
  __int128 v16[2];
  _QWORD *v17;

  v5 = _swiftEmptyArrayStorage;
  v17 = _swiftEmptyArrayStorage;
  v6 = *(_QWORD **)(a3 + 16);
  if (v6)
  {
    v7 = (uint64_t (*)(__int128 *))result;
    v5 = 0;
    v8 = a3 + 32;
    v9 = _swiftEmptyArrayStorage;
    v13 = *(_QWORD **)(a3 + 16);
    v14 = (uint64_t (*)(__int128 *))result;
    while ((unint64_t)v5 < *(_QWORD *)(a3 + 16))
    {
      sub_10002E418(v8, (uint64_t)v16);
      v10 = v7(v16);
      if (v3)
      {
        _s5Books15CurrentPageViewVwxx_0(v16);
        swift_release(v9);
        swift_bridgeObjectRelease(a3);
        return (uint64_t)v5;
      }
      if ((v10 & 1) != 0)
      {
        sub_100022840(v16, (uint64_t)v15);
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
          sub_100366C60(0, v9[2] + 1, 1);
        v9 = v17;
        v12 = v17[2];
        v11 = v17[3];
        if (v12 >= v11 >> 1)
        {
          sub_100366C60(v11 > 1, v12 + 1, 1);
          v9 = v17;
        }
        v9[2] = v12 + 1;
        result = sub_100022840(v15, (uint64_t)&v9[5 * v12 + 4]);
        v6 = v13;
        v7 = v14;
      }
      else
      {
        result = _s5Books15CurrentPageViewVwxx_0(v16);
      }
      v5 = (_QWORD *)((char *)v5 + 1);
      v8 += 40;
      if (v6 == v5)
      {
        v5 = v17;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease(a3);
    return (uint64_t)v5;
  }
  return result;
}

void *sub_100374280(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  void *v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(id *);
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  _QWORD *v26;

  v4 = a3;
  v26 = &_swiftEmptyArrayStorage;
  if (a3 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v23 = v4 & 0xFFFFFFFFFFFFFF8;
      v24 = v4 & 0xC000000000000001;
      v22 = v4;
      while (v24)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v25 = v9;
        v12 = a2;
        v13 = a1(&v25);
        if (v3)
        {
          swift_bridgeObjectRelease(v4);

          swift_release(v26);
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          v14 = v7;
          v15 = a1;
          v16 = a2;
          v17 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = v17;
          a2 = v16;
          a1 = v15;
          v7 = v14;
          v4 = v22;
          v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v10);
          specialized ContiguousArray._endMutation()(v19);
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v26;
          goto LABEL_23;
        }
      }
      if (v8 < *(_QWORD *)(v23 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      if (v4 < 0)
        v20 = v4;
      else
        v20 = v4 & 0xFFFFFFFFFFFFFF8;
      v7 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v7)
        goto LABEL_22;
    }
    v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_22:
  v12 = &_swiftEmptyArrayStorage;
LABEL_23:
  swift_bridgeObjectRelease(v4);
  return v12;
}

uint64_t sub_100374424(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;

  v27 = type metadata accessor for ContinuousClock.Instant(0);
  v7 = *(_QWORD *)(v27 - 8);
  v8 = __chkstk_darwin(v27);
  v26 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v8);
  v12 = (char *)&v20 - v11;
  v13 = _swiftEmptyArrayStorage;
  v28 = _swiftEmptyArrayStorage;
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v14 = 0;
    v22 = a2;
    v23 = a3;
    v21 = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v13 = *(_QWORD **)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + (_QWORD)v13 * v14, v27);
      v16 = a1(v12);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v27);
        swift_bridgeObjectRelease(a3);
        swift_release(v28);
        return (uint64_t)v13;
      }
      if ((v16 & 1) != 0)
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v24(v26, v12, v27);
        v17 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
        {
          sub_100366D00(0, v17[2] + 1, 1);
          v17 = v28;
        }
        v19 = v17[2];
        v18 = v17[3];
        if (v19 >= v18 >> 1)
        {
          sub_100366D00(v18 > 1, v19 + 1, 1);
          v17 = v28;
        }
        v17[2] = v19 + 1;
        result = ((uint64_t (*)(char *, char *, uint64_t))v24)((char *)v17 + v15 + v19 * (_QWORD)v13, v26, v27);
        v28 = v17;
        a3 = v23;
        a1 = v21;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v27);
      }
      if (v25 == ++v14)
      {
        v13 = v28;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease(a3);
    return (uint64_t)v13;
  }
  return result;
}

uint64_t sub_100374634(uint64_t a1)
{
  return sub_100376024(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100380B44);
}

uint64_t sub_100374640(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1005B058C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[9 * v8 + 4];
  if (a1 + 32 < v9 + 72 * v2 && v9 < a1 + 32 + 72 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100374798(uint64_t a1)
{
  return sub_100376024(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100380D58);
}

uint64_t sub_1003747A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_100380F6C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_10037495C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_100381174(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_100374B14(uint64_t a1)
{
  return sub_100376024(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10038137C);
}

void sub_100374B20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1005B1048(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  sub_10004CFD4(&qword_1009DDF20);
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_100374C88(uint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t *v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  int64_t v42;
  unint64_t v43;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = (_QWORD *)*v1;
  v5 = *(_QWORD *)(*v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_100043ED0(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  v13 = sub_1003828E0((uint64_t)v40, &v4[2 * v11 + 4], v9 - v11, a1);
  if (v13 < v3)
    goto LABEL_16;
  if (v13)
  {
    v15 = v4[2];
    v16 = __OFADD__(v15, v13);
    v17 = v15 + v13;
    if (v16)
    {
      __break(1u);
      goto LABEL_50;
    }
    v4[2] = v17;
  }
  if (v13 != v12)
  {
    v18 = v40[0];
LABEL_14:
    sub_100299C3C(v18);
    *v1 = v4;
    return;
  }
LABEL_17:
  v2 = v4[2];
  v3 = v40[0];
  v39 = v40[1];
  v14 = v41;
  v6 = v42;
  if (v43)
  {
    v19 = (v43 - 1) & v43;
    v20 = __clz(__rbit64(v43)) | (v42 << 6);
    v38 = (unint64_t)(v41 + 64) >> 6;
    goto LABEL_19;
  }
LABEL_50:
  v34 = v6 + 1;
  if (__OFADD__(v6, 1))
    goto LABEL_68;
  v38 = (unint64_t)(v14 + 64) >> 6;
  if (v34 >= v38)
  {
    v18 = v3;
    goto LABEL_14;
  }
  v35 = *(_QWORD *)(v39 + 8 * v34);
  v36 = v6 + 1;
  if (v35)
    goto LABEL_53;
  v36 = v6 + 2;
  if (v6 + 2 >= v38)
    goto LABEL_47;
  v35 = *(_QWORD *)(v39 + 8 * v36);
  if (!v35)
  {
    v36 = v6 + 3;
    if (v6 + 3 >= v38)
      goto LABEL_47;
    v35 = *(_QWORD *)(v39 + 8 * v36);
    if (!v35)
    {
      v36 = v6 + 4;
      if (v6 + 4 >= v38)
        goto LABEL_47;
      v35 = *(_QWORD *)(v39 + 8 * v36);
      if (!v35)
      {
        v36 = v6 + 5;
        if (v6 + 5 < v38)
        {
          v35 = *(_QWORD *)(v39 + 8 * v36);
          if (!v35)
          {
            v37 = v6 + 6;
            do
            {
              if (v38 == v37)
                goto LABEL_47;
              v35 = *(_QWORD *)(v39 + 8 * v37++);
            }
            while (!v35);
            v36 = v37 - 1;
          }
          goto LABEL_53;
        }
LABEL_47:
        v18 = v3;
        goto LABEL_14;
      }
    }
  }
LABEL_53:
  v19 = (v35 - 1) & v35;
  v20 = __clz(__rbit64(v35)) + (v36 << 6);
  v6 = v36;
LABEL_19:
  v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v20);
  v23 = *v21;
  v22 = v21[1];
  swift_bridgeObjectRetain(v22);
  while (1)
  {
    v24 = v4[3];
    v25 = v24 >> 1;
    if ((uint64_t)(v24 >> 1) < v2 + 1)
      break;
    if (v2 < v25)
      goto LABEL_24;
LABEL_21:
    v4[2] = v2;
  }
  v4 = sub_100043ED0((_QWORD *)(v24 > 1), v2 + 1, 1, v4);
  v25 = v4[3] >> 1;
  if (v2 >= v25)
    goto LABEL_21;
  while (1)
  {
LABEL_24:
    v26 = &v4[2 * v2 + 4];
    *v26 = v23;
    v26[1] = v22;
    ++v2;
    if (v19)
    {
      v27 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v28 = v27 | (v6 << 6);
      goto LABEL_42;
    }
    v29 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v29 >= v38)
      goto LABEL_46;
    v30 = *(_QWORD *)(v39 + 8 * v29);
    v31 = v6 + 1;
    if (!v30)
    {
      v31 = v6 + 2;
      if (v6 + 2 >= v38)
        goto LABEL_46;
      v30 = *(_QWORD *)(v39 + 8 * v31);
      if (!v30)
      {
        v31 = v6 + 3;
        if (v6 + 3 >= v38)
          goto LABEL_46;
        v30 = *(_QWORD *)(v39 + 8 * v31);
        if (!v30)
        {
          v31 = v6 + 4;
          if (v6 + 4 >= v38)
            goto LABEL_46;
          v30 = *(_QWORD *)(v39 + 8 * v31);
          if (!v30)
          {
            v31 = v6 + 5;
            if (v6 + 5 >= v38)
              goto LABEL_46;
            v30 = *(_QWORD *)(v39 + 8 * v31);
            if (!v30)
            {
              v32 = v6 + 6;
              while (v38 != v32)
              {
                v30 = *(_QWORD *)(v39 + 8 * v32++);
                if (v30)
                {
                  v31 = v32 - 1;
                  goto LABEL_41;
                }
              }
LABEL_46:
              v4[2] = v2;
              goto LABEL_47;
            }
          }
        }
      }
    }
LABEL_41:
    v19 = (v30 - 1) & v30;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
    v6 = v31;
LABEL_42:
    v33 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v28);
    v23 = *v33;
    v22 = v33[1];
    if (v2 >= v25)
    {
      swift_bridgeObjectRetain(v22);
      goto LABEL_21;
    }
    swift_bridgeObjectRetain(v22);
  }
  __break(1u);
LABEL_68:
  __break(1u);
}

void sub_100375050(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_3;
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 < 0)
    v24 = *v1;
  else
    v24 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v6);
  v8 = v25 + v5;
  if (__OFADD__(v25, v5))
    goto LABEL_25;
LABEL_3:
  v9 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v9;
  v11 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v12 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_13;
    v11 = 1;
  }
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v41 = v9;
    else
      v41 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v2 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v2 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2 <= v8)
    v2 = v8;
  swift_bridgeObjectRetain(v9);
  v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v11, v2, 1, v9);
  swift_bridgeObjectRelease(*v1);
  *v1 = v13;
  v12 = v13 & 0xFFFFFFFFFFFFFF8;
LABEL_13:
  v14 = *(_QWORD *)(v12 + 16);
  v15 = (*(_QWORD *)(v12 + 24) >> 1) - v14;
  v16 = (uint64_t)sub_100382C74(&v47, (_QWORD *)(v12 + 8 * v14 + 32), v15, a1);
  if (v16 < v5)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v16 >= 1)
  {
    v19 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v20 = __OFADD__(v19, v16);
    v21 = v19 + v16;
    if (v20)
    {
      __break(1u);
      goto LABEL_61;
    }
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v21;
  }
  if (v16 != v15)
  {
    v22 = v47;
LABEL_19:
    v23 = sub_100299C3C(v22);
    specialized Array._endMutation()(v23);
    return;
  }
LABEL_27:
  v3 = *v1;
  v8 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v47;
  v17 = v48;
  v18 = v49;
  v2 = v50;
  v46 = v48;
  if (v51)
  {
    v26 = (v51 - 1) & v51;
    v27 = __clz(__rbit64(v51)) | (v50 << 6);
    v28 = (unint64_t)(v49 + 64) >> 6;
    goto LABEL_29;
  }
LABEL_61:
  v42 = v2 + 1;
  if (__OFADD__(v2, 1))
    goto LABEL_80;
  v28 = (unint64_t)(v18 + 64) >> 6;
  if (v42 >= v28)
  {
    v22 = v11;
    goto LABEL_19;
  }
  v43 = *(_QWORD *)(v17 + 8 * v42);
  v44 = v2 + 1;
  if (v43)
    goto LABEL_64;
  v44 = v2 + 2;
  if (v2 + 2 >= v28)
    goto LABEL_78;
  v43 = *(_QWORD *)(v46 + 8 * v44);
  if (!v43)
  {
    v44 = v2 + 3;
    if (v2 + 3 >= v28)
      goto LABEL_78;
    v43 = *(_QWORD *)(v46 + 8 * v44);
    if (!v43)
    {
      v44 = v2 + 4;
      if (v2 + 4 >= v28)
        goto LABEL_78;
      v43 = *(_QWORD *)(v46 + 8 * v44);
      if (!v43)
      {
        v44 = v2 + 5;
        if (v2 + 5 < v28)
        {
          v43 = *(_QWORD *)(v46 + 8 * v44);
          if (!v43)
          {
            v45 = v2 + 6;
            do
            {
              if (v28 == v45)
                goto LABEL_78;
              v43 = *(_QWORD *)(v46 + 8 * v45++);
            }
            while (!v43);
            v44 = v45 - 1;
          }
          goto LABEL_64;
        }
LABEL_78:
        v22 = v11;
        goto LABEL_19;
      }
    }
  }
LABEL_64:
  v26 = (v43 - 1) & v43;
  v27 = __clz(__rbit64(v43)) + (v44 << 6);
  v2 = v44;
LABEL_29:
  v29 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v27);
  v30 = v29;
  while (1)
  {
    v33 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x18);
    if (v8 + 1 > (uint64_t)(v33 >> 1))
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v8 + 1, 1);
    v3 = *v1;
    v31 = *v1 & 0xFFFFFFFFFFFFFF8;
    v34 = *(_QWORD *)(v31 + 0x18) >> 1;
    if (v8 < v34)
      break;
LABEL_31:
    *(_QWORD *)(v31 + 16) = v8;
  }
  while (1)
  {
    *(_QWORD *)(v31 + 32 + 8 * v8++) = v29;
    if (v26)
    {
      v35 = __clz(__rbit64(v26));
      v26 &= v26 - 1;
      v36 = v35 | (v2 << 6);
      goto LABEL_53;
    }
    v37 = v2 + 1;
    if (__OFADD__(v2, 1))
      break;
    if (v37 >= v28)
      goto LABEL_55;
    v38 = *(_QWORD *)(v46 + 8 * v37);
    v39 = v2 + 1;
    if (!v38)
    {
      v39 = v2 + 2;
      if (v2 + 2 >= v28)
        goto LABEL_55;
      v38 = *(_QWORD *)(v46 + 8 * v39);
      if (!v38)
      {
        v39 = v2 + 3;
        if (v2 + 3 >= v28)
          goto LABEL_55;
        v38 = *(_QWORD *)(v46 + 8 * v39);
        if (!v38)
        {
          v39 = v2 + 4;
          if (v2 + 4 >= v28)
            goto LABEL_55;
          v38 = *(_QWORD *)(v46 + 8 * v39);
          if (!v38)
          {
            v39 = v2 + 5;
            if (v2 + 5 >= v28)
              goto LABEL_55;
            v38 = *(_QWORD *)(v46 + 8 * v39);
            if (!v38)
            {
              v40 = v2 + 6;
              while (v28 != v40)
              {
                v38 = *(_QWORD *)(v46 + 8 * v40++);
                if (v38)
                {
                  v39 = v40 - 1;
                  goto LABEL_52;
                }
              }
LABEL_55:
              *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10) = v8;
              v22 = v11;
              goto LABEL_19;
            }
          }
        }
      }
    }
LABEL_52:
    v26 = (v38 - 1) & v38;
    v36 = __clz(__rbit64(v38)) + (v39 << 6);
    v2 = v39;
LABEL_53:
    v29 = *(id *)(*(_QWORD *)(v11 + 56) + 8 * v36);
    if (v8 >= v34)
    {
      v3 = *v1;
      v31 = *v1 & 0xFFFFFFFFFFFFFF8;
      v32 = v29;
      goto LABEL_31;
    }
    v29 = v29;
  }
  __break(1u);
LABEL_80:
  __break(1u);
}

uint64_t sub_100375484(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;
  char v16;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1005B0474(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v16 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v16, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003755D8(uint64_t a1)
{
  return sub_100375620(a1, &type metadata accessor for HighlightPaginationEntity, (unint64_t *)&unk_1009DDDC8, &qword_1009DDDC0, (uint64_t *)sub_10028C4C0);
}

uint64_t sub_1003755FC(uint64_t a1)
{
  return sub_100375620(a1, &type metadata accessor for BookmarkPaginationEntity, &qword_1009DDDB8, &qword_1009DDDB0, (uint64_t *)sub_10028C4C0);
}

uint64_t sub_100375620(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v24 = a1;
    else
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = _CocoaArrayWrapper.endIndex.getter(v24);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v12 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    v14 = v13 + v11;
    if (!__OFADD__(v13, v11))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v12 < 0)
    v25 = *v5;
  else
    v25 = v12 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v5);
  v13 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v12);
  v14 = v13 + v11;
  if (__OFADD__(v13, v11))
    goto LABEL_29;
LABEL_5:
  v12 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v12;
  v13 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v12 & 0x8000000000000000) == 0
    && (v12 & 0x4000000000000000) == 0)
  {
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    if (v14 <= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v13 = 1;
  }
  v27 = v11;
  v11 = (uint64_t)a2;
  a2 = a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if ((unint64_t)v12 >> 62)
    goto LABEL_31;
  v17 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v17 <= v14)
      v17 = v14;
    swift_bridgeObjectRetain(v12);
    v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v13, v17, 1, v12);
    swift_bridgeObjectRelease(*v5);
    *v5 = v12;
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = a2;
    a2 = (unint64_t *)v11;
    v11 = v27;
LABEL_15:
    result = sub_100381590(v16 + 8 * *(_QWORD *)(v16 + 16) + 32, (*(_QWORD *)(v16 + 24) >> 1) - *(_QWORD *)(v16 + 16), a1, (void (*)(_QWORD))a2, a3, a4, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v12 < 0)
      v26 = v12;
    else
      v26 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v17 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v12);
  }
  if (v19 < 1)
    goto LABEL_19;
  v20 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = __OFADD__(v20, v19);
  v22 = v20 + v19;
  if (!v21)
  {
    *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_100375830(uint64_t a1)
{
  return sub_100376024(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100381798);
}

void sub_10037583C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100043ED0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

void sub_10037598C(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  char v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_1005B1D78(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = type metadata accessor for UICellAccessory(0);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy(v15);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v25 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v25, 1092, 0);
  __break(1u);
}

void sub_100375B00(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  char v24;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1005B1600(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = type metadata accessor for IndexPath(0);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy(v14);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v24 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v24, 1092, 0);
  __break(1u);
}

uint64_t sub_100375C68(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1003819AC(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for SinglePageViewController, &qword_1009DDE10, (uint64_t *)&unk_1009E8EB0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10028C418);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_100375E40(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1003819AC(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))&type metadata accessor for MResource, &qword_1009DDDA8, &qword_1009DDDA0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10028C568);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_100376018(uint64_t a1)
{
  return sub_100376024(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100381BB4);
}

uint64_t sub_100376024(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003761E0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009DDD00);
  sub_100048F64(v0, (uint64_t)qword_1009DDD00);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001FLL, 0x80000001007C3B00);
}

uint64_t *ContextMenuProvider.shared.unsafeMutableAddressor()
{
  if (qword_1009CE1F0 != -1)
    swift_once(&qword_1009CE1F0, sub_100007B98);
  return &static ContextMenuProvider.shared;
}

id _s5Books19ContextMenuProviderC6sharedACvgZ_0()
{
  if (qword_1009CE1F0 != -1)
    swift_once(&qword_1009CE1F0, sub_100007B98);
  return (id)static ContextMenuProvider.shared;
}

_QWORD *ContextMenuProvider.menuElements(for:with:)(void *a1, void *a2)
{
  return sub_1003762F8(a2, a1);
}

_QWORD *sub_1003762F8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  _BYTE *v16;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  _QWORD *v34;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t *v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  id v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  void *v104;
  Swift::String v105;
  UIMenu v106;
  _QWORD *result;
  uint64_t v108;
  _QWORD *v109;
  void *v110;
  uint64_t v111;
  id v112;
  Class v113;
  _QWORD *v114;
  _QWORD v115[3];
  uint64_t v116;
  uint64_t v117;
  char v118;
  _QWORD *v119;
  _QWORD *v120;
  UIImage_optional v121;

  v3 = v2;
  v6 = type metadata accessor for MenuCoverImageProvider(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v108 - v11;
  v13 = (void *)objc_opt_self(BKLibraryManager);
  v14 = a1;
  v15 = objc_msgSend(v13, "defaultManager");
  MenuCoverImageProvider.init()();
  v113 = (Class)type metadata accessor for ContextActionData();
  v16 = objc_allocWithZone(v113);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  v17 = v15;
  v18 = sub_1003830F4(v14, (uint64_t)v17, (uint64_t)v9, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);

  if (!v18)
  {
    if (qword_1009CE1E8 != -1)
LABEL_62:
      swift_once(&qword_1009CE1E8, sub_1003761E0);
    v67 = type metadata accessor for Logger(0);
    v68 = sub_100048F64(v67, (uint64_t)qword_1009DDD00);
    v69 = Logger.logObject.getter(v68);
    v70 = static os_log_type_t.error.getter(v69);
    if (os_log_type_enabled(v69, v70))
    {
      v71 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "Unable to instantiate ContextActionData", v71, 2u);
      swift_slowDealloc(v71, -1, -1);
    }

    return _swiftEmptyArrayStorage;
  }
  v112 = v18;
  v19 = sub_100377AAC(v14, a2);
  v120 = _swiftEmptyDictionarySingleton;
  v20 = v19[2];
  if (!v20)
  {
    swift_bridgeObjectRelease(v19);
    v66 = _swiftEmptyDictionarySingleton;
LABEL_38:
    v72 = v112;
    v73 = sub_100384168((uint64_t)v112, (uint64_t)a2);
    swift_bridgeObjectRetain(v66);
    sub_100373460(v74);
    v76 = v75;
    v77 = swift_bridgeObjectRelease(v66);
    v78 = static ContextActionType.orderActionItems(_:)(v76, v77);
    swift_bridgeObjectRelease(v76);
    v79 = v72;
    v80 = sub_100383738(v78, (uint64_t)v79, (uint64_t *)&v120);
    swift_bridgeObjectRelease(v78);

    v119 = 0;
    v82 = _swiftEmptyArrayStorage;
    v115[0] = _swiftEmptyArrayStorage;
    v83 = v80[2];
    if (v83)
    {
      swift_bridgeObjectRetain(v80);
      v84 = 6;
      v85 = v83;
      do
      {
        swift_bridgeObjectRetain(v80[v84]);
        sub_100376024(v86, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100380B44);
        v84 += 3;
        --v85;
      }
      while (v85);
      swift_bridgeObjectRelease(v80);
      v82 = (_QWORD *)v115[0];
    }
    __chkstk_darwin(v81);
    v87 = sub_100383C7C((unint64_t)v82, (uint64_t (*)(uint64_t, id))sub_100384D68);
    swift_bridgeObjectRelease(v82);
    v88 = v87[2];
    if (v88)
    {
      sub_10004CFD4((uint64_t *)&unk_1009D0A50);
      v89 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v88);
    }
    else
    {
      v89 = _swiftEmptyDictionarySingleton;
    }
    v115[0] = v89;
    swift_bridgeObjectRetain(v87);
    sub_100380488(v90, 1, v115);
    swift_bridgeObjectRelease(v87);
    v91 = v115[0];
    v92 = v3 + OBJC_IVAR___BKContextMenuProvider_figaroProvider;
    swift_beginAccess(v3 + OBJC_IVAR___BKContextMenuProvider_figaroProvider, v115, 33, 0);
    v93 = *(_QWORD *)(v92 + 24);
    v94 = *(_QWORD *)(v92 + 32);
    sub_100063750(v92, v93);
    dispatch thunk of FigaroProviding.contextMenuActionTypeToIndexDict.setter(v91, v93, v94);
    swift_endAccess(v115);
    v115[0] = v80;
    v95 = sub_10004CFD4(&qword_1009DDF80);
    v96 = sub_10029F8CC(&qword_1009DDF88, &qword_1009DDF80);
    if ((Collection.isNotEmpty.getter(v95, v96) & 1) != 0)
    {
      v114 = v79;
      v97 = sub_100008DB0(&qword_1009DDF40, (uint64_t (*)(uint64_t))type metadata accessor for ContextActionData, (uint64_t)&unk_100717224);
      v98 = ContextActionDataProtocol.selectionMode.getter(v115, v113, v97);
      if ((v118 & 1) != 0)
      {
        swift_bridgeObjectRelease(v73);
        swift_bridgeObjectRelease(v115[0]);
        v99 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
        v100 = swift_allocObject(v99, 40, 7);
        *(_OWORD *)(v100 + 16) = xmmword_1007118F0;
        v114 = _swiftEmptyArrayStorage;
        if (v83)
        {
          swift_bridgeObjectRetain(v80);
          v101 = 6;
          do
          {
            swift_bridgeObjectRetain(v80[v101]);
            sub_100376024(v102, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_100380B44);
            v101 += 3;
            --v83;
          }
          while (v83);
          swift_bridgeObjectRelease_n(v80, 2);
          v103 = v114;
        }
        else
        {
          swift_bridgeObjectRelease(v80);
          v103 = _swiftEmptyArrayStorage;
        }
        sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
        v105._countAndFlagsBits = 0;
        v105._object = (void *)0xE000000000000000;
        v121.value.super.isa = 0;
        v121.is_nil = 0;
        v106.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v105, (Swift::String_optional)0, v121, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v103, (Swift::OpaquePointer)&v119).super.super.isa;
        *(UIMenu *)(v100 + 32) = v106;
        v114 = (_QWORD *)v100;
        specialized Array._endMutation()(v106.super.super.isa);
        v104 = v114;

      }
      else
      {
        __chkstk_darwin(v98);
        v104 = sub_100383E18((uint64_t)v80, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100384D70);
        swift_bridgeObjectRelease(v80);

        swift_bridgeObjectRelease(v73);
        sub_1001EB7C0((uint64_t)v115);
      }
      swift_bridgeObjectRelease(v120);
      return v104;
    }

    swift_bridgeObjectRelease(v80);
    swift_bridgeObjectRelease(v73);
    swift_bridgeObjectRelease(v120);
    return _swiftEmptyArrayStorage;
  }
  v110 = a2;
  v111 = v3;
  v109 = v19;
  v21 = (uint64_t)(v19 + 4);
  while (1)
  {
    sub_10002E418(v21, (uint64_t)v115);
    v25 = v116;
    v26 = v117;
    sub_10003F198(v115, v116);
    v27 = (void *)ContextActionItem.subMenu.getter(v25, v26);
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v27, "identifier");
      v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
      v32 = v31;

      v33 = v28;
      v34 = v120;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v120);
      v119 = v34;
      v120 = (_QWORD *)0x8000000000000000;
      v37 = sub_10004CE80(v30, v32);
      v38 = v34[2];
      v39 = (v36 & 1) == 0;
      v40 = v38 + v39;
      if (__OFADD__(v38, v39))
      {
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      v41 = v36;
      if (v34[3] >= v40)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v44 = v119;
          if ((v36 & 1) == 0)
            goto LABEL_21;
        }
        else
        {
          sub_1002C0804();
          v44 = v119;
          if ((v41 & 1) == 0)
            goto LABEL_21;
        }
      }
      else
      {
        sub_100045B30(v40, isUniquelyReferenced_nonNull_native, &qword_1009DDF90);
        v42 = sub_10004CE80(v30, v32);
        if ((v41 & 1) != (v43 & 1))
          goto LABEL_63;
        v37 = v42;
        v44 = v119;
        if ((v41 & 1) == 0)
        {
LABEL_21:
          v44[(v37 >> 6) + 8] |= 1 << v37;
          v60 = (uint64_t *)(v44[6] + 16 * v37);
          *v60 = v30;
          v60[1] = v32;
          *(_QWORD *)(v44[7] + 8 * v37) = v33;
          v61 = v44[2];
          v62 = __OFADD__(v61, 1);
          v63 = v61 + 1;
          if (v62)
            goto LABEL_59;
LABEL_27:
          v44[2] = v63;
          swift_bridgeObjectRetain(v32);
          goto LABEL_5;
        }
      }
      goto LABEL_4;
    }
    v45 = v116;
    v46 = v117;
    sub_10003F198(v115, v116);
    v47 = (void *)ContextActionItem.uiAction.getter(v45, v46);
    if (!v47)
      goto LABEL_6;
    v48 = v47;
    v49 = objc_msgSend(v47, "identifier");
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v32 = v51;

    v33 = v48;
    v52 = v120;
    v53 = swift_isUniquelyReferenced_nonNull_native(v120);
    v119 = v52;
    v120 = (_QWORD *)0x8000000000000000;
    v37 = sub_10004CE80(v50, v32);
    v55 = v52[2];
    v56 = (v54 & 1) == 0;
    v57 = v55 + v56;
    if (__OFADD__(v55, v56))
      goto LABEL_60;
    v41 = v54;
    if (v52[3] < v57)
      break;
    if ((v53 & 1) != 0)
    {
      v44 = v119;
      if ((v54 & 1) == 0)
        goto LABEL_26;
    }
    else
    {
      sub_1002C0804();
      v44 = v119;
      if ((v41 & 1) == 0)
      {
LABEL_26:
        v44[(v37 >> 6) + 8] |= 1 << v37;
        v64 = (uint64_t *)(v44[6] + 16 * v37);
        *v64 = v50;
        v64[1] = v32;
        *(_QWORD *)(v44[7] + 8 * v37) = v33;
        v65 = v44[2];
        v62 = __OFADD__(v65, 1);
        v63 = v65 + 1;
        if (v62)
          goto LABEL_61;
        goto LABEL_27;
      }
    }
LABEL_4:
    v22 = v44[7];
    v23 = 8 * v37;

    *(_QWORD *)(v22 + v23) = v33;
LABEL_5:
    v24 = v120;
    v120 = v44;

    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v24);
LABEL_6:
    _s5Books15CurrentPageViewVwxx_0(v115);
    v21 += 40;
    if (!--v20)
    {
      swift_bridgeObjectRelease(v109);
      v66 = v120;
      a2 = v110;
      v3 = v111;
      goto LABEL_38;
    }
  }
  sub_100045B30(v57, v53, &qword_1009DDF90);
  v58 = sub_10004CE80(v50, v32);
  if ((v41 & 1) == (v59 & 1))
  {
    v37 = v58;
    v44 = v119;
    if ((v41 & 1) == 0)
      goto LABEL_26;
    goto LABEL_4;
  }
LABEL_63:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  result = (_QWORD *)swift_unexpectedError(v41, "Swift/Dictionary.swift", 22, 1, 489);
  __break(1u);
  return result;
}

uint64_t ContextMenuProvider.showShareSheet(with:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[49] = a2;
  v3[50] = v2;
  v3[48] = a1;
  v4 = type metadata accessor for MenuCoverImageProvider(0);
  v3[51] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[52] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[53] = swift_task_alloc(v6);
  v3[54] = swift_task_alloc(v6);
  v7 = type metadata accessor for MainActor(0);
  v3[55] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v3[56] = v8;
  v3[57] = v9;
  return swift_task_switch(sub_100376DB8, v8, v9);
}

id sub_100376DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  _BYTE *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  id result;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t (*v42)(void);

  v2 = *(_QWORD *)(v0 + 424);
  v1 = *(_QWORD *)(v0 + 432);
  v3 = *(_QWORD *)(v0 + 408);
  v4 = *(_QWORD *)(v0 + 416);
  v5 = *(void **)(v0 + 384);
  v6 = (void *)objc_opt_self(BKLibraryManager);
  v7 = v5;
  v8 = objc_msgSend(v6, "defaultManager");
  MenuCoverImageProvider.init()();
  v9 = objc_allocWithZone((Class)type metadata accessor for ContextActionData());
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  v10 = v8;
  v11 = sub_1003830F4(v7, (uint64_t)v10, v2, v9);
  *(_QWORD *)(v0 + 464) = v11;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);

  if (v11)
  {
    v12 = *(void **)(v0 + 384);
    v13 = (void *)objc_opt_self(BKAppDelegate);
    v14 = v12;
    v41 = v11;
    v15 = objc_msgSend(v13, "delegate");
    v16 = (char *)objc_msgSend(v15, "objectGraphHost");
    v40 = *(_QWORD *)&v16[OBJC_IVAR___BKObjectGraphHost_objectGraph];
    swift_retain(v40);

    v39 = objc_msgSend(v13, "sceneManager");
    v17 = objc_msgSend(v13, "delegate");
    v38 = objc_msgSend(v17, "engagementManager");

    v18 = objc_msgSend(v6, "defaultManager");
    result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
    if (result)
    {
      v20 = result;
      v21 = *(void **)(v0 + 392);
      v37 = *(_QWORD *)(v0 + 400);
      v22 = *(_QWORD *)(v0 + 384);
      v23 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
      *(_QWORD *)(v0 + 304) = &type metadata for MenuAssetDownloadManager;
      *(_QWORD *)(v0 + 312) = &off_1008F8478;
      *(_QWORD *)(v0 + 280) = v18;
      *(_QWORD *)(v0 + 288) = v20;
      *(_QWORD *)(v0 + 296) = v23;
      v24 = objc_msgSend((id)objc_opt_self(BCCacheManager), "defaultCacheManager");
      v25 = swift_unknownObjectWeakInit(v0 + 104);
      swift_unknownObjectWeakAssign(v25, v21);
      *(_QWORD *)(v0 + 112) = v22;
      *(_QWORD *)(v0 + 120) = v40;
      *(_QWORD *)(v0 + 128) = v39;
      *(_QWORD *)(v0 + 136) = v38;
      sub_100022840((__int128 *)(v0 + 280), v0 + 144);
      *(_QWORD *)(v0 + 184) = v24;
      sub_10038447C(v0 + 104, v0 + 16);
      v26 = objc_msgSend(v21, "ba_effectiveAnalyticsTracker");
      v27 = v37 + OBJC_IVAR___BKContextMenuProvider_figaroProvider;
      swift_beginAccess(v37 + OBJC_IVAR___BKContextMenuProvider_figaroProvider, v0 + 360, 0, 0);
      sub_10002E418(v27, v0 + 320);
      v28 = type metadata accessor for AppShareActionItem(0);
      swift_allocObject(v28, *(unsigned int *)(v28 + 48), *(unsigned __int16 *)(v28 + 52));
      sub_1003844B8(v0 + 16, v0 + 192);
      v29 = v41;
      *(_QWORD *)(v0 + 472) = sub_1003844F4((uint64_t)v29, v0 + 192, v26, (_QWORD *)(v0 + 320));

      sub_1003846AC(v0 + 16);
      v42 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of ShareActionItem.handle()
                              + async function pointer to dispatch thunk of ShareActionItem.handle());
      v30 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of ShareActionItem.handle()
                                       + 1));
      *(_QWORD *)(v0 + 480) = v30;
      *v30 = v0;
      v30[1] = sub_100377234;
      return (id)v42();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 440));
    if (qword_1009CE1E8 != -1)
      swift_once(&qword_1009CE1E8, sub_1003761E0);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_100048F64(v31, (uint64_t)qword_1009DDD00);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.error.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Unable to instantiate ContextActionData", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }

    v36 = *(_QWORD *)(v0 + 424);
    swift_task_dealloc(*(_QWORD *)(v0 + 432));
    swift_task_dealloc(v36);
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  return result;
}

uint64_t sub_100377234()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 472);
  swift_task_dealloc(*(_QWORD *)(*v0 + 480));
  swift_release(v2);
  return swift_task_switch(sub_100377288, *(_QWORD *)(v1 + 448), *(_QWORD *)(v1 + 456));
}

uint64_t sub_100377288()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 464);
  swift_release(*(_QWORD *)(v0 + 440));

  v2 = *(_QWORD *)(v0 + 424);
  swift_task_dealloc(*(_QWORD *)(v0 + 432));
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100377408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100377478, v6, v7);
}

uint64_t sub_100377478()
{
  uint64_t *v0;
  void *v1;
  const void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t **v9;

  v1 = (void *)v0[5];
  v3 = (void *)v0[3];
  v2 = (const void *)v0[4];
  v4 = (void *)v0[2];
  swift_release(v0[6]);
  v0[7] = (uint64_t)_Block_copy(v2);
  v5 = dword_1009DDD1C;
  v6 = v4;
  v7 = v3;
  v8 = v1;
  v9 = (uint64_t **)swift_task_alloc(v5);
  v0[8] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = (uint64_t *)sub_1003774FC;
  return ContextMenuProvider.showShareSheet(with:for:)(v0[2], v0[3]);
}

uint64_t sub_1003774FC()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  void *v3;
  void *v4;
  uint64_t v6;

  v1 = *(void (***)(_QWORD))(*v0 + 56);
  v2 = *(void **)(*v0 + 40);
  v4 = *(void **)(*v0 + 16);
  v3 = *(void **)(*v0 + 24);
  v6 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

void ContextMenuProvider.performRemove(with:for:on:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  _BYTE *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  char *v36;
  id v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[24];
  char v49[8];
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  _QWORD v54[6];
  __int128 v55;
  id v56;
  ValueMetadata *v57;
  _UNKNOWN **v58;
  _BYTE v59[72];

  v47 = a4;
  v46 = a3;
  v44 = a2;
  v5 = type metadata accessor for MenuCoverImageProvider(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - v10;
  v12 = (void *)objc_opt_self(BKLibraryManager);
  v13 = a1;
  v14 = objc_msgSend(v12, "defaultManager");
  MenuCoverImageProvider.init()();
  v15 = objc_allocWithZone((Class)type metadata accessor for ContextActionData());
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v16 = v14;
  v17 = sub_1003830F4(v13, (uint64_t)v16, (uint64_t)v8, v15);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);

  if (!v17)
  {
    if (qword_1009CE1E8 != -1)
      swift_once(&qword_1009CE1E8, sub_1003761E0);
    v39 = type metadata accessor for Logger(0);
    v40 = sub_100048F64(v39, (uint64_t)qword_1009DDD00);
    v38 = Logger.logObject.getter(v40);
    v41 = static os_log_type_t.error.getter(v38);
    if (os_log_type_enabled(v38, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v41, "Unable to instantiate ContextActionData", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }
    goto LABEL_8;
  }
  v18 = (void *)objc_opt_self(BKAppDelegate);
  v19 = v13;
  v20 = v17;
  v21 = objc_msgSend(v18, "delegate");
  v22 = (char *)objc_msgSend(v21, "objectGraphHost");
  v23 = *(_QWORD *)&v22[OBJC_IVAR___BKObjectGraphHost_objectGraph];
  swift_retain(v23);

  v24 = objc_msgSend(v18, "sceneManager");
  v25 = objc_msgSend(v18, "delegate");
  v26 = objc_msgSend(v25, "engagementManager");

  v27 = objc_msgSend(v12, "defaultManager");
  v28 = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (v28)
  {
    v29 = v28;
    v30 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    v57 = &type metadata for MenuAssetDownloadManager;
    v58 = &off_1008F8478;
    *(_QWORD *)&v55 = v27;
    *((_QWORD *)&v55 + 1) = v29;
    v56 = v30;
    v31 = objc_msgSend((id)objc_opt_self(BCCacheManager), "defaultCacheManager");
    v32 = swift_unknownObjectWeakInit(v49);
    v33 = v44;
    swift_unknownObjectWeakAssign(v32, v44);
    v50 = v19;
    v51 = v23;
    v52 = v24;
    v53 = v26;
    sub_100022840(&v55, (uint64_t)v54);
    v54[5] = v31;
    sub_10038447C((uint64_t)v49, (uint64_t)v59);
    v34 = objc_msgSend(v33, "ba_effectiveAnalyticsTracker");
    v35 = v45 + OBJC_IVAR___BKContextMenuProvider_figaroProvider;
    swift_beginAccess(v45 + OBJC_IVAR___BKContextMenuProvider_figaroProvider, v48, 0, 0);
    sub_10002E418(v35, (uint64_t)&v55);
    v36 = (char *)objc_allocWithZone((Class)type metadata accessor for RemoveActionItem(0));
    sub_1003844B8((uint64_t)v59, (uint64_t)v49);
    v37 = v20;
    v38 = sub_1003846E0((uint64_t)v37, (uint64_t)v49, v34, &v55, v36);

    sub_1003846AC((uint64_t)v59);
    sub_100607B80(v46, v47);

LABEL_8:
    return;
  }
  __break(1u);
}

_QWORD *sub_100377AAC(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  objc_class *v16;
  _BYTE *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  unsigned __int8 v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[3];
  __int128 v40[2];
  char v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v6 = type metadata accessor for MenuCoverImageProvider(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)v39 - v11;
  v13 = (void *)objc_opt_self(BKLibraryManager);
  v14 = a1;
  v15 = objc_msgSend(v13, "defaultManager");
  MenuCoverImageProvider.init()();
  v16 = (objc_class *)type metadata accessor for ContextActionData();
  v17 = objc_allocWithZone(v16);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  v18 = v15;
  v19 = sub_1003830F4(v14, (uint64_t)v18, (uint64_t)v9, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);

  if (v19)
  {
    v39[2] = v19;
    v20 = sub_100008DB0(&qword_1009DDF40, (uint64_t (*)(uint64_t))type metadata accessor for ContextActionData, (uint64_t)&unk_100717224);
    ContextActionDataProtocol.selectionMode.getter(v40, v16, v20);
    if (v41 == 1)
    {
      sub_1001EB7C0((uint64_t)v40);
LABEL_13:
      v31 = *(_QWORD *)&v3[OBJC_IVAR___BKContextMenuProvider_actionItems];
      v32 = v14;
      v33 = v19;
      v34 = a2;
      v35 = v3;
      swift_bridgeObjectRetain(v31);
      sub_10038355C(v36, v33, v34, v32, (uint64_t)v35);
      v26 = v37;
      swift_bridgeObjectRelease(v31);

      return (_QWORD *)v26;
    }
    sub_100022840(v40, (uint64_t)v42);
    v27 = v43;
    v28 = v44;
    sub_10003F198(v42, v43);
    if ((dispatch thunk of ContextAssetInfoProtocol.isExplicit.getter(v27, v28) & 1) == 0
      || (v29 = objc_msgSend((id)objc_opt_self(BURestrictionsProvider), "sharedInstance"),
          v30 = objc_msgSend(v29, "isExplicitContentAllowed"),
          swift_unknownObjectRelease(v29),
          (v30 & 1) != 0))
    {
      _s5Books15CurrentPageViewVwxx_0(v42);
      goto LABEL_13;
    }

    _s5Books15CurrentPageViewVwxx_0(v42);
  }
  else
  {
    if (qword_1009CE1E8 != -1)
      swift_once(&qword_1009CE1E8, sub_1003761E0);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100048F64(v21, (uint64_t)qword_1009DDD00);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unable to instantiate ContextActionData", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

  }
  return _swiftEmptyArrayStorage;
}

void sub_100377DE0(uint64_t a1, id a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v8 = type metadata accessor for ContextActionType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_opt_self(UIAction);
  v13 = swift_dynamicCastObjCClass(a2, v12);
  if (!v13)
    goto LABEL_11;
  v14 = (id)v13;
  v36 = a1;
  a2 = a2;
  v15 = objc_msgSend(v14, "identifier");
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
  a1 = v17;

  v18 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for ContextActionType.sharedWithYou(_:), v8);
  v19 = (void *)ContextActionType.actionIdentifier.getter(v18);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v22 = v21;

  if (v16 == v20 && a1 == v22)
    goto LABEL_15;
  v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, a1, v20, v22, 0);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(a1);
  if ((v24 & 1) != 0 && a3)
  {
LABEL_16:
    if ((unint64_t)a3 >> 62)
    {
      if (a3 >= 0)
        v33 = a3 & 0xFFFFFFFFFFFFFF8;
      else
        v33 = a3;
      swift_bridgeObjectRetain(a3);
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);

      swift_bridgeObjectRelease(a3);
      v30 = v34 - 1;
      if (!__OFSUB__(v34, 1))
      {
LABEL_18:
        v31 = __OFADD__(*a4, v30);
        v32 = *a4 + v30;
        if (!v31)
        {
          *a4 = v32;
          return;
        }
        goto LABEL_27;
      }
    }
    else
    {
      v29 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);

      v30 = v29 - 1;
      if (!__OFSUB__(v29, 1))
        goto LABEL_18;
    }
    __break(1u);
LABEL_27:
    __break(1u);
    return;
  }
  while (1)
  {
    v25 = objc_msgSend(v14, "identifier");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v25);

    if (!__OFADD__(v36, *a4))
      break;
    __break(1u);
LABEL_11:
    v26 = objc_opt_self(UIMenu);
    v27 = (void *)swift_dynamicCastObjCClass(a2, v26);
    if (!v27)
      break;
    a2 = a2;
    v14 = objc_msgSend(v27, "identifier");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    a3 = v28;

    if (!__OFADD__(a1, *a4))
      break;
    __break(1u);
LABEL_15:
    swift_bridgeObjectRelease_n(a1, 2);
    if (a3)
      goto LABEL_16;
  }
}

void sub_10037808C(uint64_t a1, void *a2, UIMenuElementSize a3, UIMenuElementSize a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  UIMenuElementSize v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  Swift::String v34;
  uint64_t v35;
  Swift::String v36;
  Swift::OpaquePointer v37;
  uint64_t v38;
  UIMenuElementSize v39;
  UIImage_optional v40;
  UIImage_optional v41;

  v8 = type metadata accessor for ContextActionType(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!((unint64_t)a3 >> 62))
  {
    v12 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a3);
    if (v12)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease(a3);
    goto LABEL_24;
  }
  if (a3 < UIMenuElementSizeSmall)
    v35 = a3;
  else
    v35 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  if (!_CocoaArrayWrapper.endIndex.getter(v35))
    goto LABEL_23;
LABEL_3:
  if ((a3 & 0xC000000000000001) != 0)
  {
    v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a3);
  }
  else
  {
    if (!*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v13 = *(id *)(a3 + 32);
  }
  v14 = v13;
  swift_bridgeObjectRelease(a3);
  v15 = objc_opt_self(UIAction);
  v16 = (void *)swift_dynamicCastObjCClass(v14, v15);
  if (!v16)
  {

    goto LABEL_24;
  }
  v17 = v16;
  v38 = a1;
  v39 = a4;
  v18 = objc_msgSend(v16, "identifier");
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v21 = v20;

  v22 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for ContextActionType.sharedWithYou(_:), v8);
  v23 = (void *)ContextActionType.actionIdentifier.getter(v22);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
  v26 = v25;

  if (v19 == v24 && v21 == v26)
  {
    swift_bridgeObjectRelease_n(v21, 2);
  }
  else
  {
    v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v24, v26, 0);
    swift_bridgeObjectRelease(v26);
    swift_bridgeObjectRelease(v21);
    if ((v28 & 1) == 0)
    {

      a1 = v38;
LABEL_24:
      sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
      swift_bridgeObjectRetain(a3);
      swift_bridgeObjectRetain(a2);
      v36._countAndFlagsBits = a1;
      v36._object = a2;
      v41.value.super.isa = 0;
      v41.is_nil = 0;
      UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v36, (Swift::String_optional)0, v41, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, a3, v37);
      return;
    }
  }
  v29 = v39;
  if (v39)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
    v30 = objc_msgSend(v17, "title", swift_bridgeObjectRetain(v29).n128_f64[0]);
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    v40.value.super.isa = (Class)objc_msgSend(v17, "image");
    v34._countAndFlagsBits = v31;
    v34._object = v33;
    v40.is_nil = 0;
    UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v40, 0, 0xFFFFFFFFFFFFFFFFLL, v29, v37);
  }

}

void ContextMenuProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.ContextMenuProvider", 25, "init()", 6, 0);
  __break(1u);
}

id ContextMenuProvider.copy(with:)@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;

  a2[3] = swift_getObjectType(v2, a1);
  *a2 = v5;
  return v5;
}

_QWORD *ContextMenuProvider.computeSwipeActionItems(with:for:swipeActionType:assetID:)(void *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  _BYTE *v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  __int128 *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  __int128 *v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, _QWORD);
  void (*v53)(_QWORD *);
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  __n128 v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  _BOOL8 v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  char v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t inited;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, _QWORD, __n128);
  _QWORD *v87;
  _QWORD *v88;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  unint64_t v94;
  uint64_t v95;
  _BOOL8 v96;
  uint64_t v97;
  char v98;
  unint64_t v99;
  char v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  _QWORD *result;
  uint64_t v118;
  id v119;
  char *v120;
  void (*v121)(_QWORD *, _QWORD, __n128);
  void (*v122)(char *, _QWORD);
  uint64_t v123;
  __int128 *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  __int128 v128;
  char *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __int128 *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD v138[4];
  _QWORD v139[3];
  uint64_t v140;
  char v141[8];
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  _QWORD v147[8];

  v6 = v5;
  v134 = a5;
  v135 = a4;
  v136 = a3;
  v133 = a2;
  v8 = type metadata accessor for ContextActionType(0);
  v131 = *(_QWORD *)(v8 - 8);
  v132 = v8;
  __chkstk_darwin(v8);
  v120 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v129 = (char *)&v118 - v11;
  v12 = type metadata accessor for MenuCoverImageProvider(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v118 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v118 - v17;
  v19 = (void *)objc_opt_self(BKLibraryManager);
  v20 = a1;
  v21 = objc_msgSend(v19, "defaultManager");
  MenuCoverImageProvider.init()();
  v22 = objc_allocWithZone((Class)type metadata accessor for ContextActionData());
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  v23 = v21;
  v24 = sub_1003830F4(v20, (uint64_t)v23, (uint64_t)v15, v22);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);

  if (v24)
  {
    v25 = *(_QWORD *)&v6[OBJC_IVAR___BKContextMenuProvider_swipeActionItems];
    v26 = v20;
    v27 = v24;
    v28 = v133;
    v29 = v6;
    swift_bridgeObjectRetain(v25);
    sub_10038355C(v30, v27, v28, v26, (uint64_t)v29);
    v32 = v31;
    swift_bridgeObjectRelease(v25);
    v119 = v27;

    __chkstk_darwin(v33);
    *(&v118 - 2) = v136;
    v34 = sub_1003740FC((uint64_t)sub_1003849D0, (uint64_t)(&v118 - 4), v32);
    v35 = *(_QWORD *)(v34 + 16);
    v36 = &v29[OBJC_IVAR___BKContextMenuProvider_figaroProvider];
    v124 = (__int128 *)&v142;
    v125 = v34 + 32;
    v123 = (uint64_t)&v143 + 8;
    v133 = (__int128 *)v147;
    v126 = v34;
    swift_bridgeObjectRetain(v34);
    v37 = 0;
    v128 = xmmword_10070CCA0;
    v39 = v134;
    v38 = v135;
    v130 = v35;
    v127 = v36;
    while (1)
    {
      if (v37 == v35)
      {
        v144 = 0u;
        v145 = 0u;
        v37 = v35;
        v143 = 0u;
      }
      else
      {
        if (v37 >= *(_QWORD *)(v126 + 16))
          goto LABEL_45;
        v44 = v124;
        sub_10002E418(v125 + 40 * v37, (uint64_t)v124);
        *(_QWORD *)&v143 = v37;
        sub_100022840(v44, v123);
        ++v37;
      }
      sub_100025B3C((uint64_t)&v143, (uint64_t)&v146, &qword_1009DDD30);
      if (!v147[3])
      {

        v111 = v126;
        swift_bridgeObjectRelease(v126);
        return (_QWORD *)v111;
      }
      v136 = v146;
      sub_100022840(v133, (uint64_t)&v143);
      swift_beginAccess(v36, v141, 32, 0);
      v45 = *((_QWORD *)v36 + 3);
      v46 = *((_QWORD *)v36 + 4);
      sub_10003F198(v36, v45);
      v47 = swift_bridgeObjectRetain(v39);
      v48 = dispatch thunk of FigaroProviding.swipeActionTypeToIndexDict.getter(v45, v46, v47);
      if (!*(_QWORD *)(v48 + 16) || (sub_10004CE80(v38, v39), (v49 & 1) == 0))
      {
        swift_bridgeObjectRelease(v39);
        swift_endAccess(v141);
        swift_bridgeObjectRelease(v48);
        v74 = sub_10004CFD4(&qword_1009DDD38);
        inited = swift_initStackObject(v74, &v140);
        *(_OWORD *)(inited + 16) = v128;
        v76 = *((_QWORD *)&v144 + 1);
        v77 = v145;
        sub_10003F198(&v143, *((uint64_t *)&v144 + 1));
        swift_bridgeObjectRetain(v39);
        v78 = v129;
        v79.n128_f64[0] = dispatch thunk of ContextActionItem.type.getter(v76, v77);
        v80 = ContextActionType.identifier.getter(v79);
        v82 = v81;
        (*(void (**)(char *, uint64_t))(v131 + 8))(v78, v132);
        *(_QWORD *)(inited + 32) = v80;
        *(_QWORD *)(inited + 40) = v82;
        *(_QWORD *)(inited + 48) = v136;
        v83 = sub_10000C748(inited);
        swift_beginAccess(v36, v138, 33, 0);
        v84 = *((_QWORD *)v36 + 3);
        v85 = *((_QWORD *)v36 + 4);
        sub_100063750((uint64_t)v36, v84);
        v86 = (void (*)(char *, _QWORD, __n128))dispatch thunk of FigaroProviding.swipeActionTypeToIndexDict.modify(v141, v84, v85);
        v88 = v87;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v87);
        v90 = v39;
        v91 = isUniquelyReferenced_nonNull_native;
        v139[0] = *v88;
        v92 = v139[0];
        *v88 = 0x8000000000000000;
        v94 = sub_10004CE80(v38, v90);
        v95 = *(_QWORD *)(v92 + 16);
        v96 = (v93 & 1) == 0;
        v97 = v95 + v96;
        if (__OFADD__(v95, v96))
        {
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
        v98 = v93;
        if (*(_QWORD *)(v92 + 24) >= v97)
        {
          if ((v91 & 1) != 0)
          {
            v101 = (_QWORD *)v139[0];
            if ((v93 & 1) == 0)
              goto LABEL_26;
          }
          else
          {
            sub_1002C0810();
            v101 = (_QWORD *)v139[0];
            if ((v98 & 1) == 0)
              goto LABEL_26;
          }
        }
        else
        {
          sub_10037F35C(v97, v91, (uint64_t *)&unk_1009DDF50);
          v99 = sub_10004CE80(v135, v134);
          if ((v98 & 1) != (v100 & 1))
          {
LABEL_50:
            result = (_QWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
            __break(1u);
            return result;
          }
          v94 = v99;
          v101 = (_QWORD *)v139[0];
          if ((v98 & 1) == 0)
          {
LABEL_26:
            v101[(v94 >> 6) + 8] |= 1 << v94;
            v102 = (_QWORD *)(v101[6] + 16 * v94);
            v39 = v134;
            v38 = v135;
            *v102 = v135;
            v102[1] = v39;
            *(_QWORD *)(v101[7] + 8 * v94) = v83;
            v103 = v101[2];
            v104 = __OFADD__(v103, 1);
            v105 = v103 + 1;
            if (v104)
              goto LABEL_46;
            v101[2] = v105;
            swift_bridgeObjectRetain(v39);
            goto LABEL_4;
          }
        }
        v40 = v101[7];
        v41 = 8 * v94;
        swift_bridgeObjectRelease(*(_QWORD *)(v40 + v41));
        *(_QWORD *)(v40 + v41) = v83;
        v39 = v134;
        v38 = v135;
LABEL_4:
        v42 = *v88;
        *v88 = v101;
        swift_bridgeObjectRelease(v39);
        v43 = swift_bridgeObjectRelease(v42);
        v86(v141, 0, v43);
        swift_endAccess(v138);
        v35 = v130;
        v36 = v127;
        goto LABEL_5;
      }
      swift_endAccess(v141);
      swift_bridgeObjectRelease(v48);
      swift_bridgeObjectRelease(v39);
      swift_beginAccess(v36, v139, 33, 0);
      v50 = *((_QWORD *)v36 + 3);
      v51 = *((_QWORD *)v36 + 4);
      sub_100063750((uint64_t)v36, v50);
      swift_bridgeObjectRetain(v39);
      v52 = (void (*)(char *, _QWORD))dispatch thunk of FigaroProviding.swipeActionTypeToIndexDict.modify(v141, v50, v51);
      v53 = sub_1003791DC(v138, v38, v39);
      if (!*v54)
      {
        ((void (*)(_QWORD *, _QWORD))v53)(v138, 0);
        v52(v141, 0);
        swift_endAccess(v139);
        swift_bridgeObjectRelease(v39);
        goto LABEL_5;
      }
      v55 = v54;
      v121 = (void (*)(_QWORD *, _QWORD, __n128))v53;
      v122 = v52;
      v56 = *((_QWORD *)&v144 + 1);
      v57 = v145;
      sub_10003F198(&v143, *((uint64_t *)&v144 + 1));
      v58 = v120;
      v59.n128_f64[0] = dispatch thunk of ContextActionItem.type.getter(v56, v57);
      v60 = ContextActionType.identifier.getter(v59);
      v62 = v61;
      (*(void (**)(char *, uint64_t))(v131 + 8))(v58, v132);
      v63 = swift_isUniquelyReferenced_nonNull_native(*v55);
      v137 = (_QWORD *)*v55;
      v64 = v137;
      *v55 = 0x8000000000000000;
      v66 = sub_10004CE80(v60, v62);
      v67 = v64[2];
      v68 = (v65 & 1) == 0;
      v69 = v67 + v68;
      if (__OFADD__(v67, v68))
        goto LABEL_47;
      v70 = v65;
      if (v64[3] >= v69)
      {
        if ((v63 & 1) != 0)
        {
          v73 = v137;
          if ((v65 & 1) == 0)
            goto LABEL_35;
        }
        else
        {
          sub_1002C0448();
          v73 = v137;
          if ((v70 & 1) == 0)
            goto LABEL_35;
        }
      }
      else
      {
        sub_100025834(v69, v63);
        v71 = sub_10004CE80(v60, v62);
        if ((v70 & 1) != (v72 & 1))
          goto LABEL_50;
        v66 = v71;
        v73 = v137;
        if ((v70 & 1) == 0)
        {
LABEL_35:
          v73[(v66 >> 6) + 8] |= 1 << v66;
          v106 = (uint64_t *)(v73[6] + 16 * v66);
          *v106 = v60;
          v106[1] = v62;
          *(_QWORD *)(v73[7] + 8 * v66) = v136;
          v107 = v73[2];
          v104 = __OFADD__(v107, 1);
          v108 = v107 + 1;
          if (v104)
            goto LABEL_48;
          v73[2] = v108;
          swift_bridgeObjectRetain(v62);
          goto LABEL_37;
        }
      }
      *(_QWORD *)(v73[7] + 8 * v66) = v136;
LABEL_37:
      v109 = *v55;
      *v55 = v73;
      swift_bridgeObjectRelease(v62);
      v110 = swift_bridgeObjectRelease(v109);
      v121(v138, 0, v110);
      v122(v141, 0);
      swift_endAccess(v139);
      v39 = v134;
      swift_bridgeObjectRelease(v134);
      v38 = v135;
      v35 = v130;
LABEL_5:
      _s5Books15CurrentPageViewVwxx_0(&v143);
    }
  }
  if (qword_1009CE1E8 != -1)
LABEL_49:
    swift_once(&qword_1009CE1E8, sub_1003761E0);
  v112 = type metadata accessor for Logger(0);
  v113 = sub_100048F64(v112, (uint64_t)qword_1009DDD00);
  v114 = Logger.logObject.getter(v113);
  v115 = static os_log_type_t.error.getter(v114);
  if (os_log_type_enabled(v114, v115))
  {
    v116 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v116 = 0;
    _os_log_impl((void *)&_mh_execute_header, v114, v115, "Unable to instantiate ContextActionData", v116, 2u);
    swift_slowDealloc(v116, -1, -1);
  }

  return _swiftEmptyArrayStorage;
}

id sub_100378D88@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id result;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  _BYTE v29[8];
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  _QWORD v34[6];
  __int128 v35;
  id v36;
  ValueMetadata *v37;
  _UNKNOWN **v38;
  _QWORD v39[5];
  _QWORD v40[6];

  v10 = *a1;
  v28 = a1[1];
  v40[3] = type metadata accessor for ContextActionData();
  v40[4] = sub_100008DB0(&qword_1009DDF40, (uint64_t (*)(uint64_t))type metadata accessor for ContextActionData, (uint64_t)&unk_100717224);
  v40[0] = a2;
  v11 = (void *)objc_opt_self(BKAppDelegate);
  v12 = a2;
  v26 = a4;
  v13 = objc_msgSend(v11, "delegate");
  v14 = (char *)objc_msgSend(v13, "objectGraphHost");
  v15 = *(_QWORD *)&v14[OBJC_IVAR___BKObjectGraphHost_objectGraph];
  swift_retain(v15);

  v16 = objc_msgSend(v11, "sceneManager");
  v17 = objc_msgSend(v11, "delegate");
  v18 = objc_msgSend(v17, "engagementManager");

  v19 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (result)
  {
    v37 = &type metadata for MenuAssetDownloadManager;
    v38 = &off_1008F8478;
    *(_QWORD *)&v35 = v19;
    *((_QWORD *)&v35 + 1) = result;
    v36 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    v21 = objc_msgSend((id)objc_opt_self(BCCacheManager), "defaultCacheManager");
    v39[3] = &type metadata for ContextMenuPresentationContext;
    v39[4] = sub_100384BDC();
    v22 = swift_allocObject(&unk_1008FFF20, 104, 7);
    v23 = v22 + 16;
    v39[0] = v22;
    swift_unknownObjectWeakInit(v29);
    swift_unknownObjectWeakAssign(v29, a3);
    v30 = v26;
    v31 = v15;
    v32 = v16;
    v33 = v18;
    sub_100022840(&v35, (uint64_t)v34);
    v34[5] = v21;
    sub_10038447C((uint64_t)v29, v23);
    v24 = objc_msgSend(a3, "ba_effectiveAnalyticsTracker");
    v25 = a5 + OBJC_IVAR___BKContextMenuProvider_figaroProvider;
    swift_beginAccess(a5 + OBJC_IVAR___BKContextMenuProvider_figaroProvider, &v35, 0, 0);
    sub_10002E418(v25, (uint64_t)v29);
    a6[3] = v10;
    a6[4] = v28;
    sub_1000257F8(a6);
    return (id)dispatch thunk of ContextActionItem.init(data:context:tracker:figaroProvider:)(v40, v39, v24, v29, v10, v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100379074(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;

  v19 = a2;
  v18 = type metadata accessor for ContextActionType.SwipeActionType(0);
  v3 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ContextActionType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v10 = a1[4];
  sub_10003F198(a1, v11);
  v12 = dispatch thunk of ContextActionItem.type.getter(v11, v10);
  ContextActionType.swipeActionType.getter(v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  LOBYTE(v10) = static ContextActionType.SwipeActionType.== infix(_:_:)(v5, v19);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  sub_10002E418((uint64_t)a1, (uint64_t)v20);
  if ((v10 & 1) != 0)
  {
    v13 = v21;
    v14 = v22;
    sub_10003F198(v20, v21);
    v15 = dispatch thunk of ContextActionItem.isSupported.getter(v13, v14);
  }
  else
  {
    v15 = 0;
  }
  _s5Books15CurrentPageViewVwxx_0(v20);
  return v15 & 1;
}

void (*sub_1003791DC(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain(a3);
  v6[5] = sub_100380804(v6, a2, a3);
  return sub_100379248;
}

void sub_100379248(_QWORD *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease(v2);
  free(v1);
}

uint64_t ContextMenuProvider.contextMenuActionItems(with:for:)(uint64_t isUniquelyReferenced_nonNull_native, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, __n128);
  __n128 v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t result;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  __int128 v86[2];
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;

  v5 = sub_10004CFD4((uint64_t *)&unk_1009DDD40);
  v79 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v84 = (uint64_t)&v77 - v9;
  v82 = type metadata accessor for ContextActionType(0);
  v10 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v12 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v2;
  v13 = sub_100377AAC((void *)isUniquelyReferenced_nonNull_native, a2);
  v14 = v13;
  v15 = _swiftEmptyArrayStorage;
  v90 = _swiftEmptyArrayStorage;
  v16 = v13[2];
  v83 = v5;
  v81 = v7;
  if (!v16)
  {
    v23 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease(v14);
    v90 = _swiftEmptyDictionarySingleton;
    v24 = v23[2];
    if (!v24)
    {
      swift_release(v23);
      v48 = _swiftEmptyDictionarySingleton;
LABEL_31:
      swift_bridgeObjectRetain(v48);
      sub_100373658(v49);
      v51 = v50;
      v52 = swift_bridgeObjectRelease(v48);
      v53 = static ContextActionType.orderActionItems(_:)(v51, v52);
      swift_bridgeObjectRelease(v51);
      v54 = sub_1003738F0(v53, (uint64_t *)&v90);
      swift_bridgeObjectRelease(v53);
      *(_QWORD *)&v87 = _swiftEmptyArrayStorage;
      v55 = v54[2];
      v56 = v84;
      if (v55)
      {
        v57 = (uint64_t)v54
            + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
        v58 = v7;
        v59 = *(_QWORD *)(v79 + 72);
        v82 = (uint64_t)v54;
        swift_bridgeObjectRetain(v54);
        do
        {
          sub_10000B5E4(v57, v56, (uint64_t *)&unk_1009DDD40);
          v60 = *(int *)(v5 + 48);
          v62 = type metadata accessor for ContextActionType.ContextActionGroup(0, v61);
          v63 = *(_QWORD *)(v62 - 8);
          (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v58, v84, v62);
          v64 = *(_QWORD *)(v84 + v60);
          *(_QWORD *)&v58[v60] = v64;
          v65 = *(void (**)(char *, uint64_t, __n128))(v63 + 8);
          v66 = swift_bridgeObjectRetain(v64);
          v65(v58, v62, v66);
          v56 = v84;
          sub_100010960(v84, (uint64_t *)&unk_1009DDD40);
          v67 = v64;
          v5 = v83;
          sub_100374B20(v67);
          v57 += v59;
          --v55;
        }
        while (v55);
        v54 = (_QWORD *)v82;
        swift_bridgeObjectRelease(v82);
        v15 = (_QWORD *)v87;
      }
      v68 = sub_100373B9C((uint64_t)v15);
      swift_bridgeObjectRelease(v15);
      v69 = v68[2];
      if (v69)
      {
        sub_10004CFD4((uint64_t *)&unk_1009D0A50);
        v70 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v69);
      }
      else
      {
        v70 = _swiftEmptyDictionarySingleton;
      }
      *(_QWORD *)&v87 = v70;
      swift_bridgeObjectRetain(v68);
      sub_100380488(v71, 1, &v87);
      swift_bridgeObjectRelease(v68);
      v72 = v87;
      v73 = v80 + OBJC_IVAR___BKContextMenuProvider_figaroProvider;
      swift_beginAccess(v80 + OBJC_IVAR___BKContextMenuProvider_figaroProvider, &v87, 33, 0);
      v74 = *(_QWORD *)(v73 + 24);
      v75 = *(_QWORD *)(v73 + 32);
      sub_100063750(v73, v74);
      dispatch thunk of FigaroProviding.contextMenuActionTypeToIndexDict.setter(v72, v74, v75);
      swift_endAccess(&v87);
      swift_bridgeObjectRelease(v90);
      return (uint64_t)v54;
    }
    v78 = v23;
    v25 = (uint64_t)(v23 + 4);
    while (1)
    {
      sub_10002E418(v25, (uint64_t)&v87);
      v28 = v88;
      v29 = v89;
      sub_10003F198(&v87, v88);
      v30.n128_f64[0] = dispatch thunk of ContextActionItem.type.getter(v28, v29);
      v31 = ContextActionType.identifier.getter(v30);
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v82);
      sub_10002E418((uint64_t)&v87, (uint64_t)v86);
      v34 = v90;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v90);
      v85 = v34;
      v90 = (_QWORD *)0x8000000000000000;
      v36 = sub_10004CE80(v31, v33);
      v37 = v34[2];
      v38 = (v35 & 1) == 0;
      v39 = v37 + v38;
      if (__OFADD__(v37, v38))
        goto LABEL_40;
      v40 = v35;
      if (v34[3] >= v39)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v43 = v85;
          if ((v35 & 1) == 0)
            goto LABEL_25;
        }
        else
        {
          sub_1002C081C();
          v43 = v85;
          if ((v40 & 1) == 0)
            goto LABEL_25;
        }
      }
      else
      {
        sub_10037B80C(v39, isUniquelyReferenced_nonNull_native, &qword_1009D7BC8, (void (*)(uint64_t, _BYTE *, __n128))sub_100022840);
        v41 = sub_10004CE80(v31, v33);
        if ((v40 & 1) != (v42 & 1))
          goto LABEL_42;
        v36 = v41;
        v43 = v85;
        if ((v40 & 1) == 0)
        {
LABEL_25:
          v43[(v36 >> 6) + 8] |= 1 << v36;
          v44 = (uint64_t *)(v43[6] + 16 * v36);
          *v44 = v31;
          v44[1] = v33;
          sub_100022840(v86, v43[7] + 40 * v36);
          v45 = v43[2];
          v46 = __OFADD__(v45, 1);
          v47 = v45 + 1;
          if (v46)
            goto LABEL_41;
          v43[2] = v47;
          swift_bridgeObjectRetain(v33);
          goto LABEL_17;
        }
      }
      v26 = (_QWORD *)(v43[7] + 40 * v36);
      _s5Books15CurrentPageViewVwxx_0(v26);
      sub_100022840(v86, (uint64_t)v26);
LABEL_17:
      v27 = v90;
      v90 = v43;
      swift_bridgeObjectRelease(v33);
      swift_bridgeObjectRelease(v27);
      _s5Books15CurrentPageViewVwxx_0(&v87);
      v25 += 40;
      if (!--v24)
      {
        swift_release(v78);
        v48 = v90;
        v5 = v83;
        v7 = v81;
        v15 = _swiftEmptyArrayStorage;
        goto LABEL_31;
      }
    }
  }
  v17 = 0;
  v18 = (uint64_t)(v13 + 4);
  v19 = _swiftEmptyArrayStorage;
  while (v17 < v14[2])
  {
    sub_10002E418(v18, (uint64_t)&v87);
    isUniquelyReferenced_nonNull_native = v88;
    v20 = v89;
    sub_10003F198(&v87, v88);
    if ((dispatch thunk of ContextActionItem.isSupported.getter(isUniquelyReferenced_nonNull_native, v20) & 1) != 0)
    {
      sub_100022840(&v87, (uint64_t)v86);
      if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
        sub_100366C60(0, v19[2] + 1, 1);
      v19 = v90;
      v22 = v90[2];
      v21 = v90[3];
      isUniquelyReferenced_nonNull_native = v22 + 1;
      if (v22 >= v21 >> 1)
      {
        sub_100366C60(v21 > 1, v22 + 1, 1);
        v19 = v90;
      }
      v19[2] = isUniquelyReferenced_nonNull_native;
      sub_100022840(v86, (uint64_t)&v19[5 * v22 + 4]);
    }
    else
    {
      _s5Books15CurrentPageViewVwxx_0(&v87);
    }
    ++v17;
    v18 += 40;
    if (v16 == v17)
    {
      v23 = v90;
      v5 = v83;
      v7 = v81;
      v15 = _swiftEmptyArrayStorage;
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  result = swift_unexpectedError(isUniquelyReferenced_nonNull_native, "Swift/Dictionary.swift", 22, 1, 489);
  __break(1u);
  return result;
}

uint64_t sub_1003798D0(uint64_t a1, void *a2)
{
  return ContextMenuProvider.contextMenuActionItems(with:for:)(a1, a2);
}

_QWORD *sub_1003798F0(void *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return ContextMenuProvider.computeSwipeActionItems(with:for:swipeActionType:assetID:)(a1, a2, a3, a4, a5);
}

uint64_t ContextMenuProvider.menuElements(with:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[13] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[14] = v5;
  v3[15] = v6;
  return swift_task_switch(sub_100379980, v5, v6);
}

uint64_t sub_100379980()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;

  v1 = sub_100377AAC(*(void **)(v0 + 80), *(void **)(v0 + 88));
  *(_QWORD *)(v0 + 56) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)(v0 + 128) = v1;
  v2 = v1[2];
  *(_QWORD *)(v0 + 136) = v2;
  if (v2)
  {
    *(_QWORD *)(v0 + 144) = 0;
    sub_10002E418((uint64_t)(v1 + 4), v0 + 16);
    v3 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    sub_10003F198((_QWORD *)(v0 + 16), v3);
    v5 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of ContextActionItem.asyncSubMenu.getter[1]);
    *(_QWORD *)(v0 + 152) = v5;
    *v5 = v0;
    v5[1] = sub_100379ADC;
    return dispatch thunk of ContextActionItem.asyncSubMenu.getter(v3, v4);
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 104);
    swift_bridgeObjectRelease(v1);
    swift_release(v7);
    v8 = *(void **)(v0 + 88);
    v9 = *(void **)(v0 + 80);
    swift_bridgeObjectRetain(_swiftEmptyDictionarySingleton);
    v10 = sub_1003762F8(v9, v8);
    swift_bridgeObjectRetain(_swiftEmptyDictionarySingleton);
    sub_1003833F0((uint64_t)v10, (uint64_t)_swiftEmptyDictionarySingleton, (uint64_t *)(v0 + 56));
    v12 = v11;
    swift_bridgeObjectRelease_n(_swiftEmptyDictionarySingleton, 2);
    swift_bridgeObjectRelease(v10);
    v13 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(v12, v13);
  }
}

uint64_t sub_100379ADC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100379B34, *(_QWORD *)(v2 + 112), *(_QWORD *)(v2 + 120));
}

uint64_t sub_100379B34()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t result;
  char v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;

  v1 = (_QWORD *)(v0 + 56);
  v2 = *(void **)(v0 + 160);
  if (!v2)
    goto LABEL_14;
  v3 = objc_msgSend(*(id *)(v0 + 160), "title");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v6 = v5;

  v7 = v2;
  v8 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v1);
  *(_QWORD *)(v0 + 72) = v8;
  *v1 = 0x8000000000000000;
  v11 = sub_10004CE80(v4, v6);
  v12 = *(_QWORD *)(v8 + 16);
  v13 = (v10 & 1) == 0;
  result = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_18;
  }
  v15 = v10;
  if (*(_QWORD *)(v8 + 24) >= result)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      result = (uint64_t)sub_1002C0830();
  }
  else
  {
    sub_100045B30(result, isUniquelyReferenced_nonNull_native, &qword_1009D7BC0);
    result = sub_10004CE80(v4, v6);
    if ((v15 & 1) != (v16 & 1))
      return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
    v11 = result;
  }
  v17 = *(_QWORD **)(v0 + 72);
  if ((v15 & 1) == 0)
  {
    v17[(v11 >> 6) + 8] |= 1 << v11;
    v19 = (uint64_t *)(v17[6] + 16 * v11);
    *v19 = v4;
    v19[1] = v6;
    *(_QWORD *)(v17[7] + 8 * v11) = v7;
    v20 = v17[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v17[2] = v22;
      swift_bridgeObjectRetain(v6);
      goto LABEL_13;
    }
LABEL_18:
    __break(1u);
    return result;
  }
  v18 = v17[7];

  *(_QWORD *)(v18 + 8 * v11) = v7;
LABEL_13:
  v23 = *v1;
  *v1 = v17;
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v6);

LABEL_14:
  v24 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 144) + 1;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  if (v25 == v24)
  {
    v26 = *(_QWORD *)(v0 + 104);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));
    swift_release(v26);
    v27 = *(_QWORD *)(v0 + 56);
    v28 = *(void **)(v0 + 88);
    v29 = *(void **)(v0 + 80);
    swift_bridgeObjectRetain(v27);
    v30 = sub_1003762F8(v29, v28);
    swift_bridgeObjectRetain(v27);
    sub_1003833F0((uint64_t)v30, v27, (uint64_t *)(v0 + 56));
    v32 = v31;
    swift_bridgeObjectRelease_n(v27, 2);
    swift_bridgeObjectRelease(v30);
    v33 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
    return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(v32, v33);
  }
  else
  {
    v34 = *(_QWORD *)(v0 + 144) + 1;
    *(_QWORD *)(v0 + 144) = v34;
    sub_10002E418(*(_QWORD *)(v0 + 128) + 40 * v34 + 32, v0 + 16);
    v35 = *(_QWORD *)(v0 + 40);
    v36 = *(_QWORD *)(v0 + 48);
    sub_10003F198((_QWORD *)(v0 + 16), v35);
    v37 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of ContextActionItem.asyncSubMenu.getter[1]);
    *(_QWORD *)(v0 + 152) = v37;
    *v37 = v0;
    v37[1] = sub_100379ADC;
    return dispatch thunk of ContextActionItem.asyncSubMenu.getter(v35, v36);
  }
}

void sub_100379E28(id *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  id v6;
  uint64_t v7;
  UIMenuElementSize preferredElementSize;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  double v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  objc_class *v35;
  id v36;
  char v37;
  id v38;
  Swift::String v39;
  Swift::OpaquePointer v40;
  id v41;
  UIMenu *v42;
  uint64_t v44;
  UIImage_optional v45;

  v41 = *a1;
  v6 = objc_msgSend(*a1, "children");
  v7 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
  preferredElementSize = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  v44 = preferredElementSize;
  if ((unint64_t)preferredElementSize >> 62)
    goto LABEL_23;
  v9 = *(_QWORD *)((preferredElementSize & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(preferredElementSize);
  v42 = (UIMenu *)a4;
  while (v9)
  {
    if (v9 < 1)
    {
      __break(1u);
      return;
    }
    v10 = 0;
    while (1)
    {
      v11 = (preferredElementSize & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, preferredElementSize)
          : *(id *)(preferredElementSize + 8 * v10 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, "title");
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
      v16 = v15;

      if (*(_QWORD *)(a2 + 16))
      {
        sub_10004CE80(v14, v16);
        v18 = v17;
        *(_QWORD *)&v19 = swift_bridgeObjectRelease(v16).n128_u64[0];
        if ((v18 & 1) == 0)
          goto LABEL_20;
        v20 = objc_msgSend(v12, "title", v19);
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v16 = v22;

        v23 = *a3;
        if (*(_QWORD *)(*a3 + 16))
        {
          v24 = sub_10004CE80(v21, v16);
          if ((v25 & 1) != 0)
            break;
        }
      }

      swift_bridgeObjectRelease(v16);
LABEL_6:
      if (v9 == ++v10)
      {
        swift_bridgeObjectRelease(preferredElementSize);
        preferredElementSize = v44;
        goto LABEL_28;
      }
    }
    v26 = *(id *)(*(_QWORD *)(v23 + 56) + 8 * v24);
    swift_bridgeObjectRelease(v16);
    a4 = v44;
    v27 = v26;
    if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v44)
      || v44 < 0
      || (v44 & 0x4000000000000000) != 0)
    {
      a4 = sub_100064598(v44);
      v44 = a4;
    }
    if (v10 < *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      v28 = *(void **)((a4 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
      *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20) = v27;

      specialized Array._endMutation()(v29);
LABEL_20:

      goto LABEL_6;
    }
    __break(1u);
LABEL_23:
    if (preferredElementSize < UIMenuElementSizeSmall)
      v30 = preferredElementSize;
    else
      v30 = preferredElementSize & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(preferredElementSize);
    v9 = _CocoaArrayWrapper.endIndex.getter(v30);
    v42 = (UIMenu *)a4;
  }
  swift_bridgeObjectRelease(preferredElementSize);
LABEL_28:
  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v31 = objc_msgSend(v41, "title");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v34 = v33;

  v35 = (objc_class *)objc_msgSend(v41, "image");
  v36 = objc_msgSend(v41, "identifier");
  v37 = (char)v36;
  v38 = objc_msgSend(v41, "options");
  v39._countAndFlagsBits = v32;
  v39._object = v34;
  v45.value.super.isa = v35;
  v45.is_nil = v37;
  v42->super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v39, (Swift::String_optional)0, v45, (UIMenuIdentifier_optional)v38, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v40).super.super.isa;
}

uint64_t sub_10037A29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10037A30C, v6, v7);
}

uint64_t sub_10037A30C()
{
  uint64_t *v0;
  void *v1;
  const void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t **v9;

  v1 = (void *)v0[5];
  v3 = (void *)v0[3];
  v2 = (const void *)v0[4];
  v4 = (void *)v0[2];
  swift_release(v0[6]);
  v0[7] = (uint64_t)_Block_copy(v2);
  v5 = dword_1009DDD54;
  v6 = v4;
  v7 = v3;
  v8 = v1;
  v9 = (uint64_t **)swift_task_alloc(v5);
  v0[8] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = (uint64_t *)sub_10037A390;
  return ContextMenuProvider.menuElements(with:for:)(v0[2], v0[3]);
}

uint64_t sub_10037A390(uint64_t a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD, __n128);
  void *v4;
  void *v5;
  void *v6;
  Class isa;
  __n128 v8;
  uint64_t v10;

  v3 = *(void (***)(_QWORD, _QWORD, __n128))(*v1 + 56);
  v4 = *(void **)(*v1 + 40);
  v6 = *(void **)(*v1 + 16);
  v5 = *(void **)(*v1 + 24);
  v10 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 64));

  sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = swift_bridgeObjectRelease(a1);
  ((void (**)(_QWORD, Class, __n128))v3)[2](v3, isa, v8);

  _Block_release(v3);
  return (*(uint64_t (**)(void))(v10 + 8))();
}

Swift::Int sub_10037A44C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  Swift::Int result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  _QWORD *v25;
  unint64_t v26;
  int64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4((uint64_t *)&unk_1009D7A30);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v23 = v22 | (v14 << 6);
      goto LABEL_34;
    }
    v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v24 >= v41)
      break;
    v25 = (_QWORD *)(v5 + 64);
    v26 = *(_QWORD *)(v42 + 8 * v24);
    ++v14;
    if (!v26)
    {
      v14 = v24 + 1;
      if (v24 + 1 >= v41)
        goto LABEL_36;
      v26 = *(_QWORD *)(v42 + 8 * v14);
      if (!v26)
      {
        v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            v14 = v27 + 1;
            if (__OFADD__(v27, 1))
              goto LABEL_45;
            if (v14 >= v41)
              goto LABEL_36;
            v26 = *(_QWORD *)(v42 + 8 * v14);
            ++v27;
            if (v26)
              goto LABEL_33;
          }
        }
        v14 = v27;
      }
    }
LABEL_33:
    v11 = (v26 - 1) & v26;
    v23 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_34:
    v32 = 16 * v23;
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v32);
    v35 = *v33;
    v34 = v33[1];
    v36 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v32);
    v37 = *v36;
    v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain(v33[1]);
      swift_bridgeObjectRetain(v38);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v44, v35, v34);
    result = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v30 = v17 == v29;
        if (v17 == v29)
          v17 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v20 = v35;
    v20[1] = v34;
    v21 = (_QWORD *)(*(_QWORD *)(v8 + 56) + v19);
    *v21 = v37;
    v21[1] = v38;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v25 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v25 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  result = swift_release(v5);
  *v3 = v8;
  return result;
}

Swift::Int sub_10037A770(uint64_t a1, uint64_t a2)
{
  return sub_100045B30(a1, a2, &qword_1009D0828);
}

Swift::Int sub_10037A77C(uint64_t a1, uint64_t a2)
{
  return sub_10037C474(a1, a2, &qword_1009D0A40, (void (*)(uint64_t, _BYTE *))sub_10004CFC4, (void (*)(uint64_t, _BYTE *))sub_10004CD0C);
}

void sub_10037A798(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(&qword_1009D05F0);
  v38 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = v3;
  v36 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v13 << 6);
      goto LABEL_34;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v36)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v13;
    if (!v24)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v36)
        goto LABEL_36;
      v24 = *(_QWORD *)(v37 + 8 * v13);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_36:
          swift_release(v5);
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v13 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v13 >= v36)
              goto LABEL_36;
            v24 = *(_QWORD *)(v37 + 8 * v13);
            ++v25;
            if (v24)
              goto LABEL_33;
          }
        }
        v13 = v25;
      }
    }
LABEL_33:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_34:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v21);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain(v30[1]);
    Hasher.init(_seed:)(v39, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v39, v32, v31);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_BYTE *)(*(_QWORD *)(v8 + 56) + v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_10037AAA0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  _QWORD v37[9];
  _BYTE v38[48];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4((uint64_t *)&unk_1009D7A40);
  v35 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_47;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v32 = v3;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_25;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      return;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_40;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_40:
          swift_release(v5);
          v3 = v32;
          if ((v35 & 1) == 0)
            goto LABEL_47;
          goto LABEL_43;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_49;
            if (v13 >= v33)
              goto LABEL_40;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_24;
          }
        }
        v13 = v20;
      }
    }
LABEL_24:
    v11 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_25:
    v21 = *(_QWORD *)(v5 + 56) + 40 * v16;
    v36 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v16 + 8);
    if ((v35 & 1) != 0)
    {
      sub_100025B3C(v21, (uint64_t)v38, &qword_1009E8A20);
    }
    else
    {
      sub_10000B5E4(v21, (uint64_t)v38, &qword_1009E8A20);
      swift_bridgeObjectRetain(v22);
    }
    Hasher.init(_seed:)(v37, *(_QWORD *)(v8 + 40));
    if (v22)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v22);
      String.hash(into:)(v37, v36, v22);
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v8 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_48;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_OWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14) = v36;
    sub_100025B3C((uint64_t)v38, *(_QWORD *)(v8 + 56) + 40 * v14, &qword_1009E8A20);
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v32;
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_47;
LABEL_43:
  v31 = 1 << *(_BYTE *)(v5 + 32);
  if (v31 >= 64)
    bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v31;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_47:
  swift_release(v5);
  *v3 = v8;
}

void sub_10037AE0C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::Int v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[9];
  _BYTE v39[32];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4((uint64_t *)&unk_1009DDD90);
  v37 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_25;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_37;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_37:
          swift_release(v5);
          if ((v37 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_46;
            if (v13 >= v35)
              goto LABEL_37;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_24;
          }
        }
        v13 = v21;
      }
    }
LABEL_24:
    v11 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_25:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v5 + 56) + 32 * v17;
    if ((v37 & 1) != 0)
    {
      sub_100025B3C(v25, (uint64_t)v39, (uint64_t *)&unk_1009D04E0);
    }
    else
    {
      sub_10000B5E4(v25, (uint64_t)v39, (uint64_t *)&unk_1009D04E0);
      swift_bridgeObjectRetain(v23);
    }
    Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v38, v24, v23);
    v26 = Hasher._finalize()();
    v27 = -1 << *(_BYTE *)(v8 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    if (((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v32 = v29 == v31;
        if (v29 == v31)
          v29 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v12 + 8 * v29);
      }
      while (v33 == -1);
      v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    sub_100025B3C((uint64_t)v39, *(_QWORD *)(v8 + 56) + 32 * v14, (uint64_t *)&unk_1009D04E0);
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_10037B144(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  _QWORD *v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  _BYTE v39[32];
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(&qword_1009D04D0);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_25;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v20 >= v37)
      break;
    v21 = (_QWORD *)(v5 + 64);
    v22 = *(_QWORD *)(v38 + 8 * v20);
    ++v13;
    if (!v22)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v37)
        goto LABEL_37;
      v22 = *(_QWORD *)(v38 + 8 * v13);
      if (!v22)
      {
        v23 = v20 + 2;
        if (v23 >= v37)
        {
LABEL_37:
          swift_release(v5);
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v22 = *(_QWORD *)(v38 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            v13 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_46;
            if (v13 >= v37)
              goto LABEL_37;
            v22 = *(_QWORD *)(v38 + 8 * v13);
            ++v23;
            if (v22)
              goto LABEL_24;
          }
        }
        v13 = v23;
      }
    }
LABEL_24:
    v11 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_25:
    v24 = *(_QWORD *)(v5 + 48) + 40 * v19;
    if ((a2 & 1) != 0)
    {
      v25 = *(_OWORD *)v24;
      v26 = *(_OWORD *)(v24 + 16);
      v42 = *(_QWORD *)(v24 + 32);
      v40 = v25;
      v41 = v26;
      sub_100025B3C(*(_QWORD *)(v5 + 56) + 32 * v19, (uint64_t)v39, (uint64_t *)&unk_1009D04E0);
    }
    else
    {
      sub_1000569E0(v24, (uint64_t)&v40);
      sub_10000B5E4(*(_QWORD *)(v5 + 56) + 32 * v19, (uint64_t)v39, (uint64_t *)&unk_1009D04E0);
    }
    v27 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v28 = -1 << *(_BYTE *)(v8 + 32);
    v29 = v27 & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v14 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v8 + 48) + 40 * v14;
    v16 = v40;
    v17 = v41;
    *(_QWORD *)(v15 + 32) = v42;
    *(_OWORD *)v15 = v16;
    *(_OWORD *)(v15 + 16) = v17;
    sub_100025B3C((uint64_t)v39, *(_QWORD *)(v8 + 56) + 32 * v14, (uint64_t *)&unk_1009D04E0);
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v36;
  v21 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v21, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v21 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

Swift::Int sub_10037B478(uint64_t a1, uint64_t a2)
{
  return sub_100045B30(a1, a2, (uint64_t *)&unk_1009DDEE0);
}

Swift::Int sub_10037B484(uint64_t a1, uint64_t a2)
{
  return sub_10037F35C(a1, a2, &qword_1009D7BE0);
}

void sub_10037B490(uint64_t a1, uint64_t a2)
{
  sub_10037EC30(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for PBPropertyValue, &qword_1009D7BE8);
}

void sub_10037B4A4(uint64_t a1, uint64_t a2)
{
  sub_10037EC30(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for PBPropertyConfiguration, &qword_1009D7BF0);
}

void sub_10037B4B8(uint64_t a1, uint64_t a2)
{
  sub_10037EC30(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for JSON, &qword_1009D7A50);
}

Swift::Int sub_10037B4CC(uint64_t a1, uint64_t a2)
{
  return sub_100045B30(a1, a2, (uint64_t *)&unk_1009D7BD0);
}

void sub_10037B4D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[2];
  __int128 v39;
  __int128 v40;
  uint64_t v41;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(&qword_1009D0A60);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  swift_retain(v5);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_25;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v21 >= v12)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v12)
        goto LABEL_37;
      v23 = *(_QWORD *)(v37 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v12)
        {
LABEL_37:
          swift_release(v5);
          if ((a2 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_46;
            if (v14 >= v12)
              goto LABEL_37;
            v23 = *(_QWORD *)(v37 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_24;
          }
        }
        v14 = v24;
      }
    }
LABEL_24:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_25:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v41 = *(_QWORD *)(v25 + 32);
      v39 = v26;
      v40 = v27;
      sub_10004CFC4((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v38);
    }
    else
    {
      sub_1000569E0(v25, (uint64_t)&v39);
      sub_10004CD0C(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v38);
    }
    v28 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v8 + 40));
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v13 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v13 + 8 * v31);
      }
      while (v35 == -1);
      v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v8 + 48) + 40 * v15;
    v17 = v39;
    v18 = v40;
    *(_QWORD *)(v16 + 32) = v41;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    sub_10004CFC4(v38, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

Swift::Int sub_10037B7EC(uint64_t a1, uint64_t a2)
{
  return sub_100045B30(a1, a2, (uint64_t *)&unk_1009D7C50);
}

void sub_10037B7F8(uint64_t a1, uint64_t a2)
{
  sub_10037B80C(a1, a2, (uint64_t *)&unk_1009D7A60, (void (*)(uint64_t, _BYTE *, __n128))sub_100022840);
}

void sub_10037B80C(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t, _BYTE *, __n128))
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __n128 v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::Int v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  char v41;
  _QWORD v42[9];
  _BYTE v43[40];

  v6 = v4;
  v8 = *v4;
  if (*(_QWORD *)(*v4 + 24) <= a1)
    v9 = a1;
  else
    v9 = *(_QWORD *)(*v4 + 24);
  sub_10004CFD4(a3);
  v41 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v8, v9, a2);
  v11 = v10;
  if (*(_QWORD *)(v8 + 16))
  {
    v38 = v6;
    v12 = 1 << *(_BYTE *)(v8 + 32);
    v40 = (_QWORD *)(v8 + 64);
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v14 = v13 & *(_QWORD *)(v8 + 64);
    v39 = (unint64_t)(v12 + 63) >> 6;
    v15 = v10 + 64;
    v16 = swift_retain(v8);
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v21 = v20 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v22 >= v39)
          goto LABEL_37;
        v23 = v40[v22];
        ++v17;
        if (!v23)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v39)
            goto LABEL_37;
          v23 = v40[v17];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_37:
              swift_release(v8);
              v6 = v38;
              if ((v41 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v8 + 32);
                if (v37 >= 64)
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v40 = -1 << v37;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                v17 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_44;
                if (v17 >= v39)
                  goto LABEL_37;
                v23 = v40[v17];
                ++v24;
                if (v23)
                  goto LABEL_24;
              }
            }
            v17 = v24;
          }
        }
LABEL_24:
        v14 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      v25 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
      v27 = *v25;
      v26 = v25[1];
      v28 = *(_QWORD *)(v8 + 56) + 40 * v21;
      if ((v41 & 1) != 0)
      {
        a4(v28, v43, v16);
      }
      else
      {
        sub_10002E418(v28, (uint64_t)v43);
        swift_bridgeObjectRetain(v26);
      }
      Hasher.init(_seed:)(v42, *(_QWORD *)(v11 + 40));
      String.hash(into:)(v42, v27, v26);
      v29 = Hasher._finalize()();
      v30 = -1 << *(_BYTE *)(v11 + 32);
      v31 = v29 & ~v30;
      v32 = v31 >> 6;
      if (((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v35 = v32 == v34;
          if (v32 == v34)
            v32 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v15 + 8 * v32);
        }
        while (v36 == -1);
        v18 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v18);
      *v19 = v27;
      v19[1] = v26;
      ((void (*)(_BYTE *, unint64_t))a4)(v43, *(_QWORD *)(v11 + 56) + 40 * v18);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  swift_release(v8);
  *v6 = v11;
}

void sub_10037BB20(uint64_t a1, uint64_t a2)
{
  sub_10037BB38(a1, a2, &qword_1009D7060);
}

void sub_10037BB2C(uint64_t a1, uint64_t a2)
{
  sub_10037BB38(a1, a2, (uint64_t *)&unk_1009D7BB0);
}

void sub_10037BB38(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  __int128 v40;
  _QWORD v41[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10004CFD4(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v37 = v4;
    v10 = 1 << *(_BYTE *)(v6 + 32);
    v39 = (_QWORD *)(v6 + 64);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v38 = (unint64_t)(v10 + 63) >> 6;
    v13 = v8 + 64;
    swift_retain(v6);
    v14 = 0;
    while (1)
    {
      if (v12)
      {
        v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v23 = v22 | (v14 << 6);
      }
      else
      {
        v24 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v24 >= v38)
          goto LABEL_36;
        v25 = v39[v24];
        ++v14;
        if (!v25)
        {
          v14 = v24 + 1;
          if (v24 + 1 >= v38)
            goto LABEL_36;
          v25 = v39[v14];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v38)
            {
LABEL_36:
              swift_release(v6);
              v4 = v37;
              if ((a2 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v6 + 32);
                if (v36 >= 64)
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v36;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v25 = v39[v26];
            if (!v25)
            {
              while (1)
              {
                v14 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_43;
                if (v14 >= v38)
                  goto LABEL_36;
                v25 = v39[v14];
                ++v26;
                if (v25)
                  goto LABEL_33;
              }
            }
            v14 = v26;
          }
        }
LABEL_33:
        v12 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v14 << 6);
      }
      v31 = 16 * v23;
      v32 = (uint64_t *)(*(_QWORD *)(v6 + 48) + v31);
      v34 = *v32;
      v33 = v32[1];
      v40 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + v31);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain(v33);
        v35 = (id)v40;
        swift_retain(*((_QWORD *)&v40 + 1));
      }
      Hasher.init(_seed:)(v41, *(_QWORD *)(v9 + 40));
      String.hash(into:)(v41, v34, v33);
      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v9 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v29 = v18 == v28;
          if (v18 == v28)
            v18 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v13 + 8 * v18);
        }
        while (v30 == -1);
        v19 = __clz(__rbit64(~v30)) + (v18 << 6);
      }
      *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 16 * v19;
      v21 = (_QWORD *)(*(_QWORD *)(v9 + 48) + v20);
      *v21 = v34;
      v21[1] = v33;
      *(_OWORD *)(*(_QWORD *)(v9 + 56) + v20) = v40;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  swift_release(v6);
  *v4 = v9;
}

void sub_10037BE44(uint64_t a1, uint64_t a2)
{
  sub_10037EC30(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListSortOrder, &qword_1009D7BA0);
}

void sub_10037BE58(uint64_t a1, uint64_t a2)
{
  sub_10037EC30(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListFilterOption, &qword_1009D7BA8);
}

void sub_10037BE6C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  double *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  double *v23;
  double v24;
  double v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t *v37;
  _QWORD v38[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4((uint64_t *)&unk_1009D7C60);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = a2;
    v37 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v9 + 63) >> 6;
    v14 = v7 + 64;
    swift_retain(v5);
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v15 << 6);
      }
      else
      {
        v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v20 >= v13)
          goto LABEL_34;
        v21 = v10[v20];
        ++v15;
        if (!v21)
        {
          v15 = v20 + 1;
          if (v20 + 1 >= v13)
            goto LABEL_34;
          v21 = v10[v15];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v13)
            {
LABEL_34:
              swift_release(v5);
              if ((v36 & 1) == 0)
              {
                swift_release(v5);
                v3 = v37;
                goto LABEL_41;
              }
              v35 = 1 << *(_BYTE *)(v5 + 32);
              if (v35 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v10 = -1 << v35;
              v3 = v37;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v15 >= v13)
                  goto LABEL_34;
                v21 = v10[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
LABEL_24:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v15 << 6);
      }
      v23 = (double *)(*(_QWORD *)(v5 + 48) + 16 * v19);
      v25 = *v23;
      v24 = v23[1];
      v26 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v19);
      Hasher.init(_seed:)(v38, *(_QWORD *)(v8 + 40));
      UnitPoint.hash(into:)(v38, v25, v24);
      v27 = Hasher._finalize()();
      v28 = -1 << *(_BYTE *)(v8 + 32);
      v29 = v27 & ~v28;
      v30 = v29 >> 6;
      if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v31 = 0;
        v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v33 = v30 == v32;
          if (v30 == v32)
            v30 = 0;
          v31 |= v33;
          v34 = *(_QWORD *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        v16 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(_QWORD *)(v14 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = (double *)(*(_QWORD *)(v8 + 48) + 16 * v16);
      *v17 = v25;
      v17[1] = v24;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v16) = v26;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

Swift::Int sub_10037C154(uint64_t a1, uint64_t a2)
{
  return sub_10037F35C(a1, a2, (uint64_t *)&unk_1009DDE40);
}

void sub_10037C160(uint64_t a1, uint64_t a2)
{
  sub_10037C1A8(a1, a2, &qword_1009D0750);
}

Swift::Int sub_10037C16C(uint64_t a1, uint64_t a2)
{
  return sub_100045B30(a1, a2, &qword_1009D7A58);
}

Swift::Int sub_10037C178(uint64_t a1, uint64_t a2)
{
  return sub_10037F35C(a1, a2, (uint64_t *)&unk_1009D7B88);
}

Swift::Int sub_10037C184(uint64_t a1, uint64_t a2)
{
  return sub_10037F35C(a1, a2, (uint64_t *)&unk_1009D0A30);
}

Swift::Int sub_10037C190(uint64_t a1, uint64_t a2)
{
  return sub_10037F35C(a1, a2, &qword_1009D7B98);
}

void sub_10037C19C(uint64_t a1, uint64_t a2)
{
  sub_10037C1A8(a1, a2, &qword_1009D7B78);
}

void sub_10037C1A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10004CFD4(a3);
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = 0;
    v11 = (uint64_t *)(v6 + 64);
    v12 = 1 << *(_BYTE *)(v6 + 32);
    v35 = -1 << v12;
    v36 = v12;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v14 = v13 & *(_QWORD *)(v6 + 64);
    v37 = (unint64_t)(v12 + 63) >> 6;
    v15 = v8 + 64;
    while (1)
    {
      if (v14)
      {
        v22 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v23 = v22 | (v10 << 6);
      }
      else
      {
        v24 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v24 >= v37)
          goto LABEL_36;
        v25 = v11[v24];
        ++v10;
        if (!v25)
        {
          v10 = v24 + 1;
          if (v24 + 1 >= v37)
            goto LABEL_36;
          v25 = v11[v10];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v37)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v36 >= 64)
                  bzero((void *)(v6 + 64), 8 * v37);
                else
                  *v11 = v35;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v25 = v11[v26];
            if (!v25)
            {
              while (1)
              {
                v10 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_44;
                if (v10 >= v37)
                  goto LABEL_36;
                v25 = v11[v10];
                ++v26;
                if (v25)
                  goto LABEL_33;
              }
            }
            v10 = v26;
          }
        }
LABEL_33:
        v14 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v10 << 6);
      }
      v31 = 8 * v23;
      v32 = *(_QWORD *)(v6 + 56);
      v33 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v31);
      v34 = *(_QWORD *)(v32 + v31);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain(*(_QWORD *)(v32 + v31));
      v16 = static Hasher._hash(seed:_:)(*(_QWORD *)(v9 + 40), v33);
      v17 = -1 << *(_BYTE *)(v9 + 32);
      v18 = v16 & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v15 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v29 = v19 == v28;
          if (v19 == v28)
            v19 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v19);
        }
        while (v30 == -1);
        v20 = __clz(__rbit64(~v30)) + (v19 << 6);
      }
      *(_QWORD *)(v15 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = 8 * v20;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + v21) = v33;
      *(_QWORD *)(*(_QWORD *)(v9 + 56) + v21) = v34;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  swift_release(v6);
  *v4 = v9;
}

Swift::Int sub_10037C458(uint64_t a1, uint64_t a2)
{
  return sub_10037C474(a1, a2, &qword_1009D04F8, (void (*)(uint64_t, _BYTE *))sub_10004CFC4, (void (*)(uint64_t, _BYTE *))sub_10004CD0C);
}

Swift::Int sub_10037C474(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(uint64_t, _BYTE *), void (*a5)(uint64_t, _BYTE *))
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int result;
  int64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v43;
  _QWORD v44[9];
  _BYTE v45[32];

  v7 = v5;
  v9 = *v5;
  if (*(_QWORD *)(*v5 + 24) <= a1)
    v10 = a1;
  else
    v10 = *(_QWORD *)(*v5 + 24);
  sub_10004CFD4(a3);
  v43 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v9, v10, a2);
  v12 = v11;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_44;
  v13 = 1 << *(_BYTE *)(v9 + 32);
  v41 = v9 + 64;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  else
    v14 = -1;
  v15 = v14 & *(_QWORD *)(v9 + 64);
  v39 = v7;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v16 = v11 + 64;
  result = swift_retain(v9);
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_25;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v9 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_37;
      v25 = *(_QWORD *)(v41 + 8 * v18);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_37:
          swift_release(v9);
          v7 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_46;
            if (v18 >= v40)
              goto LABEL_37;
            v25 = *(_QWORD *)(v41 + 8 * v18);
            ++v26;
            if (v25)
              goto LABEL_24;
          }
        }
        v18 = v26;
      }
    }
LABEL_24:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_25:
    v27 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v22);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v9 + 56) + 32 * v22;
    if ((v43 & 1) != 0)
    {
      a4(v30, v45);
    }
    else
    {
      a5(v30, v45);
      swift_bridgeObjectRetain(v28);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v12 + 40));
    String.hash(into:)(v44, v29, v28);
    result = Hasher._finalize()();
    v31 = -1 << *(_BYTE *)(v12 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v16 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v16 + 8 * v33);
      }
      while (v37 == -1);
      v19 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v19);
    *v20 = v29;
    v20[1] = v28;
    result = ((uint64_t (*)(_BYTE *, unint64_t))a4)(v45, *(_QWORD *)(v12 + 56) + 32 * v19);
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release(v9);
  v7 = v39;
  v24 = (_QWORD *)(v9 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v38 = 1 << *(_BYTE *)(v9 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_44:
  result = swift_release(v9);
  *v7 = v12;
  return result;
}

void sub_10037C79C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[9];
  _OWORD v41[2];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(&qword_1009D05E0);
  v39 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v38 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_25;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v17 >= v37)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v38 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v37)
        goto LABEL_37;
      v19 = *(_QWORD *)(v38 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v37)
        {
LABEL_37:
          swift_release(v5);
          if ((v39 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v19 = *(_QWORD *)(v38 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_46;
            if (v13 >= v37)
              goto LABEL_37;
            v19 = *(_QWORD *)(v38 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_24;
          }
        }
        v13 = v20;
      }
    }
LABEL_24:
    v11 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_25:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v39 & 1) != 0)
    {
      sub_10004CFC4(v22, v41);
    }
    else
    {
      sub_10004CD0C((uint64_t)v22, (uint64_t)v41);
      v23 = v21;
    }
    v24 = *(_QWORD *)(v8 + 40);
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v27 = v26;
    Hasher.init(_seed:)(v40, v24);
    String.hash(into:)(v40, v25, v27);
    v28 = Hasher._finalize()();
    swift_bridgeObjectRelease(v27);
    v29 = -1 << *(_BYTE *)(v8 + 32);
    v30 = v28 & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v12 + 8 * v31);
      }
      while (v35 == -1);
      v14 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v21;
    sub_10004CFC4(v41, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v14));
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v18 = (_QWORD *)(v5 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v36 = 1 << *(_BYTE *)(v5 + 32);
  if (v36 >= 64)
    bzero(v18, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v36;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

uint64_t sub_10037CAD4(uint64_t a1, uint64_t a2)
{
  return sub_10037F678(a1, a2, &qword_1009D7B70);
}

Swift::Int sub_10037CAE0(uint64_t a1, uint64_t a2)
{
  return sub_10037F35C(a1, a2, (uint64_t *)&unk_1009D7B10);
}

void sub_10037CAEC(uint64_t a1, uint64_t a2)
{
  sub_10037E5CC(a1, a2, &qword_1009D7B68);
}

void sub_10037CAF8(uint64_t a1, uint64_t a2)
{
  sub_10037E5CC(a1, a2, &qword_1009D7B60);
}

void sub_10037CB04(uint64_t a1, uint64_t a2)
{
  sub_10037F93C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBookTasteInfo, &qword_1009D0510);
}

void sub_10037CB18(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v2;
  v9 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(&qword_1009D0560);
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
    v39 = v43;
LABEL_44:
    *v39 = v11;
    return;
  }
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v45 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v44 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  v17 = swift_retain(v9);
  v18 = 0;
  v42 = a2;
  v19 = 16;
  if ((a2 & 1) != 0)
    v19 = 32;
  v46 = v19;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_26;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v23 >= v44)
    {
      swift_release(v9);
      v39 = v43;
      v24 = v45;
      if ((v42 & 1) != 0)
      {
LABEL_39:
        v40 = 1 << *(_BYTE *)(v9 + 32);
        if (v40 >= 64)
          bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v24 = -1 << v40;
        *(_QWORD *)(v9 + 16) = 0;
      }
LABEL_43:
      swift_release(v9);
      goto LABEL_44;
    }
    v24 = v45;
    v25 = v45[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v44)
        goto LABEL_36;
      v25 = v45[v18];
      if (!v25)
        break;
    }
LABEL_25:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_26:
    v27 = *(_QWORD *)(v6 + 72);
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + v46))(v8, *(_QWORD *)(v9 + 48) + v27 * v22, v5, v17);
    v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v22);
    v29 = *(_QWORD *)(v11 + 40);
    v30 = sub_100008DB0(&qword_1009D7AE8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v5, v30);
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v20 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v27 * v20, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v20) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  v26 = v23 + 2;
  if (v26 >= v44)
  {
LABEL_36:
    swift_release(v9);
    v39 = v43;
    if ((v42 & 1) != 0)
      goto LABEL_39;
    goto LABEL_43;
  }
  v25 = v45[v26];
  if (v25)
  {
    v18 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v18 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v18 >= v44)
      goto LABEL_36;
    v25 = v45[v18];
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_46:
  __break(1u);
}

void sub_10037CEA8(uint64_t a1, uint64_t a2)
{
  sub_10037F93C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for Book.Metadata, &qword_1009D7A70);
}

Swift::Int sub_10037CEBC(uint64_t a1, uint64_t a2)
{
  return sub_100045B30(a1, a2, &qword_1009D7A80);
}

Swift::Int sub_10037CEC8(uint64_t a1, uint64_t a2)
{
  return sub_100045B30(a1, a2, &qword_1009D7A88);
}

Swift::Int sub_10037CED4(uint64_t a1, uint64_t a2)
{
  return sub_100045B30(a1, a2, &qword_1009D7A98);
}

void sub_10037CEE0(uint64_t a1, uint64_t a2)
{
  sub_10037F93C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for Book.MediaType, &qword_1009D7A90);
}

void sub_10037CEF4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(&qword_1009D7A78);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v37 = a2;
    v36 = v3;
    v9 = 0;
    v10 = (uint64_t *)(v5 + 64);
    v11 = 1 << *(_BYTE *)(v5 + 32);
    v34 = -1 << v11;
    v35 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v5 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = v7 + 64;
    while (1)
    {
      if (v13)
      {
        v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v20 >= v14)
          goto LABEL_34;
        v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v14)
            goto LABEL_34;
          v21 = v10[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_34:
              if ((v37 & 1) == 0)
              {
                swift_release(v5);
                v3 = v36;
                goto LABEL_41;
              }
              if (v35 >= 64)
                bzero((void *)(v5 + 64), 8 * v14);
              else
                *v10 = v34;
              v3 = v36;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v9 >= v14)
                  goto LABEL_34;
                v21 = v10[v9];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v9 = v22;
          }
        }
LABEL_24:
        v13 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v23 = 8 * v19;
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v23);
      v25 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v23);
      v26 = static Hasher._hash(seed:_:)(*(_QWORD *)(v8 + 40), v24);
      v27 = -1 << *(_BYTE *)(v8 + 32);
      v28 = v26 & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v15 + 8 * v29);
        }
        while (v33 == -1);
        v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v17) = v24;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v17) = v25;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_41:
  *v3 = v8;
}

void sub_10037D198(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __n128 v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[4];
  int v49;
  uint64_t *v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;

  v3 = v2;
  v6 = type metadata accessor for CollectionRecommendationOptions(0);
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  __chkstk_darwin(v6);
  v56 = &v48[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for CollectionRecommendationType(0);
  v55 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = &v48[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v12 = a1;
  else
    v12 = *(_QWORD *)(*v3 + 24);
  sub_10004CFD4(&qword_1009D05C0);
  v13 = static _DictionaryStorage.resize(original:capacity:move:)(v11, v12, a2);
  v14 = v13;
  if (!*(_QWORD *)(v11 + 16))
  {
    v45 = v11;
LABEL_45:
    swift_release(v45);
    *v3 = v14;
    return;
  }
  v15 = 1 << *(_BYTE *)(v11 + 32);
  v16 = *(_QWORD *)(v11 + 64);
  v52 = (_QWORD *)(v11 + 64);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v50 = v3;
  v51 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 64;
  v54 = v11;
  v20 = swift_retain(v11);
  v21 = 0;
  v49 = a2;
  v22 = 16;
  if ((a2 & 1) != 0)
    v22 = 32;
  v53 = v22;
  v23 = v22;
  while (1)
  {
    if (v18)
    {
      v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v26 = v25 | (v21 << 6);
      goto LABEL_27;
    }
    v27 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v27 >= v51)
    {
      v46 = v54;
      swift_release(v54);
      v3 = v50;
      v28 = v52;
      if ((v49 & 1) != 0)
      {
LABEL_40:
        v47 = 1 << *(_BYTE *)(v46 + 32);
        if (v47 >= 64)
          bzero(v28, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v28 = -1 << v47;
        *(_QWORD *)(v46 + 16) = 0;
      }
LABEL_44:
      v45 = v46;
      goto LABEL_45;
    }
    v28 = v52;
    v29 = v52[v27];
    ++v21;
    if (!v29)
    {
      v21 = v27 + 1;
      if (v27 + 1 >= v51)
        goto LABEL_37;
      v29 = v52[v21];
      if (!v29)
        break;
    }
LABEL_26:
    v18 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v21 << 6);
LABEL_27:
    v31 = v54;
    v32 = *(_QWORD *)(v55 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t, __n128))(v55 + v23))(v10, *(_QWORD *)(v54 + 48) + v32 * v26, v8, v20);
    v33 = *(_QWORD *)(v31 + 56);
    v34 = *(_QWORD *)(v57 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v57 + v23))(v56, v33 + v34 * v26, v58);
    v35 = *(_QWORD *)(v14 + 40);
    v36 = sub_100008DB0(&qword_1009D7B00, (uint64_t (*)(uint64_t))&type metadata accessor for CollectionRecommendationType, (uint64_t)&protocol conformance descriptor for CollectionRecommendationType);
    v37 = dispatch thunk of Hashable._rawHashValue(seed:)(v35, v8, v36);
    v38 = -1 << *(_BYTE *)(v14 + 32);
    v39 = v37 & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v19 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v19 + 8 * v40);
      }
      while (v44 == -1);
      v24 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v19 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v55 + 32))(*(_QWORD *)(v14 + 48) + v32 * v24, v10, v8);
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v57 + 32))(*(_QWORD *)(v14 + 56) + v34 * v24, v56, v58);
    ++*(_QWORD *)(v14 + 16);
  }
  v30 = v27 + 2;
  if (v30 >= v51)
  {
LABEL_37:
    v46 = v54;
    swift_release(v54);
    v3 = v50;
    if ((v49 & 1) != 0)
      goto LABEL_40;
    goto LABEL_44;
  }
  v29 = v52[v30];
  if (v29)
  {
    v21 = v30;
    goto LABEL_26;
  }
  while (1)
  {
    v21 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v21 >= v51)
      goto LABEL_37;
    v29 = v52[v21];
    ++v30;
    if (v29)
      goto LABEL_26;
  }
LABEL_47:
  __break(1u);
}

void sub_10037D590(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009D7AA0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10004CFD4(&qword_1009D7AA8);
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v38 = v3;
    v13 = 0;
    v14 = *(_QWORD *)(v10 + 64);
    v41 = (_QWORD *)(v10 + 64);
    v15 = 1 << *(_BYTE *)(v10 + 32);
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v17 = v16 & v14;
    v40 = (unint64_t)(v15 + 63) >> 6;
    v18 = v11 + 64;
    v39 = a2;
    v19 = 16;
    if ((a2 & 1) != 0)
      v19 = 32;
    v42 = v19;
    while (1)
    {
      if (v17)
      {
        v21 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v23 >= v40)
          goto LABEL_35;
        v24 = v41[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v40)
            goto LABEL_35;
          v24 = v41[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v40)
            {
LABEL_35:
              if ((v39 & 1) == 0)
              {
                swift_release(v10);
                v3 = v38;
                goto LABEL_42;
              }
              v36 = 1 << *(_BYTE *)(v10 + 32);
              if (v36 >= 64)
                bzero(v41, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v41 = -1 << v36;
              v3 = v38;
              *(_QWORD *)(v10 + 16) = 0;
              break;
            }
            v24 = v41[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_44;
                if (v13 >= v40)
                  goto LABEL_35;
                v24 = v41[v13];
                ++v25;
                if (v24)
                  goto LABEL_25;
              }
            }
            v13 = v25;
          }
        }
LABEL_25:
        v17 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v26 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v22);
      v27 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + v42))(v9, *(_QWORD *)(v10 + 56) + v27 * v22, v6);
      v28 = static Hasher._hash(seed:_:)(*(_QWORD *)(v12 + 40), v26);
      v29 = -1 << *(_BYTE *)(v12 + 32);
      v30 = v28 & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v18 + 8 * (v30 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v18 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v32 = 0;
        v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v34 = v31 == v33;
          if (v31 == v33)
            v31 = 0;
          v32 |= v34;
          v35 = *(_QWORD *)(v18 + 8 * v31);
        }
        while (v35 == -1);
        v20 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(_QWORD *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v20) = v26;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 56) + v27 * v20, v9, v6);
      ++*(_QWORD *)(v12 + 16);
    }
  }
  swift_release(v10);
LABEL_42:
  *v3 = v12;
}

void sub_10037D8C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  _QWORD v44[9];
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(&qword_1009DDEF0);
  v43 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_44;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_25;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      return;
    }
    if (v21 >= v41)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v42 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v41)
        goto LABEL_37;
      v23 = *(_QWORD *)(v42 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v41)
        {
LABEL_37:
          swift_release(v5);
          v3 = v40;
          if ((v43 & 1) == 0)
            goto LABEL_44;
          goto LABEL_40;
        }
        v23 = *(_QWORD *)(v42 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_46;
            if (v13 >= v41)
              goto LABEL_37;
            v23 = *(_QWORD *)(v42 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_24;
          }
        }
        v13 = v24;
      }
    }
LABEL_24:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_25:
    v25 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v27 = *v25;
    v26 = v25[1];
    v28 = *(_QWORD *)(v5 + 56) + 40 * v20;
    if ((v43 & 1) != 0)
    {
      v29 = *(_OWORD *)v28;
      v30 = *(_OWORD *)(v28 + 16);
      v47 = *(_QWORD *)(v28 + 32);
      v45 = v29;
      v46 = v30;
    }
    else
    {
      sub_1000569E0(v28, (uint64_t)&v45);
      swift_bridgeObjectRetain(v26);
    }
    Hasher.init(_seed:)(v44, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v44, v27, v26);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v8 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v12 + 8 * v34);
      }
      while (v38 == -1);
      v14 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v14);
    *v15 = v27;
    v15[1] = v26;
    v16 = *(_QWORD *)(v8 + 56) + 40 * v14;
    v17 = v45;
    v18 = v46;
    *(_QWORD *)(v16 + 32) = v47;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v22 = (_QWORD *)(v5 + 64);
  if ((v43 & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v22, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_44:
  swift_release(v5);
  *v3 = v8;
}

void sub_10037DBF8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  void *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  char v44;
  _QWORD v45[9];
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4((uint64_t *)&unk_1009DDEF8);
  v44 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v41 = v3;
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v43 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v42 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v13 << 6);
      }
      else
      {
        v20 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v20 >= v42)
          goto LABEL_37;
        v21 = v43[v20];
        ++v13;
        if (!v21)
        {
          v13 = v20 + 1;
          if (v20 + 1 >= v42)
            goto LABEL_37;
          v21 = v43[v13];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v42)
            {
LABEL_37:
              swift_release(v5);
              v3 = v41;
              if ((v44 & 1) != 0)
              {
                v40 = 1 << *(_BYTE *)(v5 + 32);
                if (v40 >= 64)
                  bzero(v43, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v43 = -1 << v40;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v43[v22];
            if (!v21)
            {
              while (1)
              {
                v13 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_44;
                if (v13 >= v42)
                  goto LABEL_37;
                v21 = v43[v13];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v13 = v22;
          }
        }
LABEL_24:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v13 << 6);
      }
      v23 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v5 + 56) + 40 * v19;
      if ((v44 & 1) != 0)
      {
        v25 = *(_OWORD *)v24;
        v26 = *(_OWORD *)(v24 + 16);
        v48 = *(_QWORD *)(v24 + 32);
        v46 = v25;
        v47 = v26;
      }
      else
      {
        sub_1000569E0(v24, (uint64_t)&v46);
        v27 = v23;
      }
      v28 = *(_QWORD *)(v8 + 40);
      v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v31 = v30;
      Hasher.init(_seed:)(v45, v28);
      String.hash(into:)(v45, v29, v31);
      v32 = Hasher._finalize()();
      swift_bridgeObjectRelease(v31);
      v33 = -1 << *(_BYTE *)(v8 + 32);
      v34 = v32 & ~v33;
      v35 = v34 >> 6;
      if (((-1 << v34) & ~*(_QWORD *)(v12 + 8 * (v34 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v12 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v36 = 0;
        v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v38 = v35 == v37;
          if (v35 == v37)
            v35 = 0;
          v36 |= v38;
          v39 = *(_QWORD *)(v12 + 8 * v35);
        }
        while (v39 == -1);
        v14 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v23;
      v15 = *(_QWORD *)(v8 + 56) + 40 * v14;
      v16 = v46;
      v17 = v47;
      *(_QWORD *)(v15 + 32) = v48;
      *(_OWORD *)v15 = v16;
      *(_OWORD *)(v15 + 16) = v17;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_10037DF30(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t i;
  char v41;
  _QWORD v42[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4((uint64_t *)&unk_1009D09E0);
  v41 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v39 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v38 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    swift_retain(v5);
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v13 << 6);
      }
      else
      {
        v23 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return;
        }
        if (v23 >= v38)
          goto LABEL_36;
        v24 = v39[v23];
        ++v13;
        if (!v24)
        {
          v13 = v23 + 1;
          if (v23 + 1 >= v38)
            goto LABEL_36;
          v24 = v39[v13];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_36:
              swift_release(v5);
              v3 = v2;
              if ((v41 & 1) != 0)
              {
                v37 = 1 << *(_BYTE *)(v5 + 32);
                if (v37 >= 64)
                  bzero(v39, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v39 = -1 << v37;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                v13 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_43;
                if (v13 >= v38)
                  goto LABEL_36;
                v24 = v39[v13];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v13 = v25;
          }
        }
LABEL_33:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v13 << 6);
      }
      v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
      v31 = *v30;
      v32 = v30[1];
      v33 = *(_QWORD *)(v5 + 56) + 24 * v22;
      v35 = *(_QWORD *)v33;
      v34 = *(_QWORD *)(v33 + 8);
      v36 = *(_BYTE *)(v33 + 16);
      if ((v41 & 1) == 0)
      {
        swift_bridgeObjectRetain(v30[1]);
        sub_1001E160C(v35, v34, v36);
      }
      Hasher.init(_seed:)(v42, *(_QWORD *)(v8 + 40));
      String.hash(into:)(v42, v31, v32);
      v14 = Hasher._finalize()();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
      *v19 = v31;
      v19[1] = v32;
      v20 = *(_QWORD *)(v8 + 56) + 24 * v18;
      *(_QWORD *)v20 = v35;
      *(_QWORD *)(v20 + 8) = v34;
      *(_BYTE *)(v20 + 16) = v36;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
  *v3 = v8;
}

void sub_10037E258(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int v44;
  _QWORD v45[9];

  v3 = v2;
  v6 = type metadata accessor for NoteHighlight(0);
  v43 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  if (*(_QWORD *)(*v3 + 24) > a1)
    a1 = *(_QWORD *)(*v3 + 24);
  sub_10004CFD4(&qword_1009D0530);
  v44 = a2;
  v10 = static _DictionaryStorage.resize(original:capacity:move:)(v9, a1, a2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_43;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v42 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v3;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  swift_retain(v9);
  v17 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_24;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_36;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_36:
          swift_release(v9);
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_45;
            if (v17 >= v41)
              goto LABEL_36;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_23;
          }
        }
        v17 = v25;
      }
    }
LABEL_23:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_24:
    v26 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v43 + 72);
    v30 = *(_QWORD *)(v9 + 56) + v29 * v21;
    if ((v44 & 1) != 0)
    {
      sub_1001E08CC(v30, (uint64_t)v8);
    }
    else
    {
      sub_1002C6D20(v30, (uint64_t)v8);
      swift_bridgeObjectRetain(v27);
    }
    Hasher.init(_seed:)(v45, *(_QWORD *)(v11 + 40));
    String.hash(into:)(v45, v28, v27);
    v31 = Hasher._finalize()();
    v32 = -1 << *(_BYTE *)(v11 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v16 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v16 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v16 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    sub_1001E08CC((uint64_t)v8, *(_QWORD *)(v11 + 56) + v29 * v18);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release(v9);
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v9 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_43:
  swift_release(v9);
  *v3 = v11;
}

void sub_10037E5C0(uint64_t a1, uint64_t a2)
{
  sub_10037E5CC(a1, a2, (uint64_t *)&unk_1009D7AB0);
}

void sub_10037E5CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10004CFD4(a3);
  v38 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v36 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  swift_retain(v6);
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_34;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v36)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v36)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v36)
        {
LABEL_36:
          swift_release(v6);
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v14 >= v36)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v14 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain(v31[1]);
      swift_retain(v34);
    }
    Hasher.init(_seed:)(v39, *(_QWORD *)(v9 + 40));
    String.hash(into:)(v39, v33, v32);
    v15 = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = v15 & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v24 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  swift_release(v6);
  *v4 = v9;
}

void sub_10037E8DC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  Swift::Int v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  char v44;
  char v45;
  _QWORD v46[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4((uint64_t *)&unk_1009D7B40);
  v44 = a2;
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v42 = (_QWORD *)(v5 + 64);
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v40 = v3;
  v41 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  swift_retain(v5);
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_34;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v41)
      break;
    v24 = v42;
    v25 = v42[v23];
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v41)
        goto LABEL_36;
      v25 = v42[v13];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v41)
        {
LABEL_36:
          swift_release(v5);
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v42[v26];
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v13 >= v41)
              goto LABEL_36;
            v25 = v42[v13];
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v13 = v26;
      }
    }
LABEL_33:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(v5 + 56) + 32 * v22;
    v35 = *(_QWORD *)v34;
    v36 = *(_QWORD *)(v34 + 8);
    v37 = *(void **)(v34 + 16);
    v45 = *(_BYTE *)(v34 + 24);
    if ((v44 & 1) == 0)
    {
      v38 = v37;
      swift_bridgeObjectRetain(v32);
      swift_bridgeObjectRetain(v36);
    }
    Hasher.init(_seed:)(v46, *(_QWORD *)(v8 + 40));
    String.hash(into:)(v46, v33, v32);
    v14 = Hasher._finalize()();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v33;
    v19[1] = v32;
    v20 = *(_QWORD *)(v8 + 56) + 32 * v18;
    *(_QWORD *)v20 = v35;
    *(_QWORD *)(v20 + 8) = v36;
    *(_QWORD *)(v20 + 16) = v37;
    *(_BYTE *)(v20 + 24) = v45;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release(v5);
  v3 = v40;
  v24 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v24, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_43:
  swift_release(v5);
  *v3 = v8;
}

void sub_10037EC1C(uint64_t a1, uint64_t a2)
{
  sub_10037EC30(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for Date, (uint64_t *)&unk_1009D7B30);
}

void sub_10037EC30(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::Int v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  int v47;
  char *v48;
  uint64_t v49;
  _QWORD v50[9];

  v6 = v4;
  v49 = a3(0);
  v9 = *(_QWORD *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v43 - v10;
  v11 = *v6;
  if (*(_QWORD *)(*v6 + 24) > a1)
    a1 = *(_QWORD *)(*v6 + 24);
  sub_10004CFD4(a4);
  v47 = a2;
  v12 = static _DictionaryStorage.resize(original:capacity:move:)(v11, a1, a2);
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v44 = v6;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v46 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v45 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  swift_retain(v11);
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v19 << 6);
      goto LABEL_24;
    }
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return;
    }
    if (v24 >= v45)
      goto LABEL_36;
    v25 = v46[v24];
    ++v19;
    if (!v25)
    {
      v19 = v24 + 1;
      if (v24 + 1 >= v45)
        goto LABEL_36;
      v25 = v46[v19];
      if (!v25)
        break;
    }
LABEL_23:
    v17 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v11 + 56);
    v28 = v11;
    v29 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v23);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v9 + 72);
    v33 = v27 + v32 * v23;
    if ((v47 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v48, v33, v49);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v48, v33, v49);
      swift_bridgeObjectRetain(v30);
    }
    Hasher.init(_seed:)(v50, *(_QWORD *)(v13 + 40));
    String.hash(into:)(v50, v31, v30);
    v34 = Hasher._finalize()();
    v35 = -1 << *(_BYTE *)(v13 + 32);
    v36 = v34 & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v40 = v37 == v39;
        if (v37 == v39)
          v37 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      v20 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(_QWORD *)(v18 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    v21 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v20);
    *v21 = v31;
    v21[1] = v30;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v13 + 56) + v32 * v20, v48, v49);
    ++*(_QWORD *)(v13 + 16);
    v11 = v28;
  }
  v26 = v24 + 2;
  if (v26 < v45)
  {
    v25 = v46[v26];
    if (!v25)
    {
      while (1)
      {
        v19 = v26 + 1;
        if (__OFADD__(v26, 1))
          goto LABEL_43;
        if (v19 >= v45)
          goto LABEL_36;
        v25 = v46[v19];
        ++v26;
        if (v25)
          goto LABEL_23;
      }
    }
    v19 = v26;
    goto LABEL_23;
  }
LABEL_36:
  swift_release(v11);
  v6 = v44;
  if ((v47 & 1) != 0)
  {
    v42 = 1 << *(_BYTE *)(v11 + 32);
    if (v42 >= 64)
      bzero(v46, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    else
      *v46 = -1 << v42;
    *(_QWORD *)(v11 + 16) = 0;
  }
LABEL_41:
  swift_release(v11);
  *v6 = v13;
}

void sub_10037EF94(uint64_t a1, uint64_t a2)
{
  sub_10037F93C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for CFIRange, (uint64_t *)&unk_1009D7AC0);
}

void sub_10037EFA8(uint64_t a1, uint64_t a2)
{
  sub_10037F93C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for ContentMessage.CFIUpdate, &qword_1009D0A28);
}

void sub_10037EFBC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t i;
  int v46;

  v3 = v2;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(*v2 + 24) > a1)
    a1 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(&qword_1009D7AD0);
  v46 = a2;
  v11 = static _DictionaryStorage.resize(original:capacity:move:)(v10, a1, a2);
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_43;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v44 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v42 = v2;
  v43 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v18 = swift_retain(v10);
  v19 = 0;
  for (i = v10; ; v10 = i)
  {
    if (v16)
    {
      v21 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v22 = v21 | (v19 << 6);
      goto LABEL_24;
    }
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return;
    }
    if (v23 >= v43)
      break;
    v24 = v44;
    v25 = v44[v23];
    ++v19;
    if (!v25)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v43)
        goto LABEL_36;
      v25 = v44[v19];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v43)
        {
LABEL_36:
          swift_release(v10);
          v3 = v42;
          if ((v46 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = v44[v26];
        if (!v25)
        {
          while (1)
          {
            v19 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v19 >= v43)
              goto LABEL_36;
            v25 = v44[v19];
            ++v26;
            if (v25)
              goto LABEL_23;
          }
        }
        v19 = v26;
      }
    }
LABEL_23:
    v16 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v7 + 72);
    v28 = *(_QWORD *)(v10 + 48) + v27 * v22;
    if ((v46 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 32))(v9, v28, v6, v18);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16))(v9, v28, v6, v18);
      v29 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v22);
      swift_bridgeObjectRetain(v29);
    }
    v30 = *(_QWORD *)(v12 + 40);
    v31 = sub_100008DB0(&qword_1009D7AD8, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v32 = dispatch thunk of Hashable._rawHashValue(seed:)(v30, v6, v31);
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = v32 & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v20 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(*(_QWORD *)(v12 + 48) + v27 * v20, v9, v6);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v12 + 16);
  }
  swift_release(v10);
  v3 = v42;
  v24 = v44;
  if ((v46 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v40 = 1 << *(_BYTE *)(v10 + 32);
  if (v40 >= 64)
    bzero(v24, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v40;
  *(_QWORD *)(v10 + 16) = 0;
LABEL_43:
  swift_release(v10);
  *v3 = v12;
}

Swift::Int sub_10037F350(uint64_t a1, uint64_t a2)
{
  return sub_10037F35C(a1, a2, (uint64_t *)&unk_1009DDDF0);
}

Swift::Int sub_10037F35C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::Int result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[9];

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10004CFD4(a3);
  v38 = a2;
  v8 = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = v8;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_43;
  v10 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v6 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v6 + 64);
  v36 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  result = swift_retain(v6);
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_34;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v23 >= v36)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v36)
        goto LABEL_36;
      v25 = *(_QWORD *)(v37 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v36)
        {
LABEL_36:
          swift_release(v6);
          if ((v38 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_45;
            if (v15 >= v36)
              goto LABEL_36;
            v25 = *(_QWORD *)(v37 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_33;
          }
        }
        v15 = v26;
      }
    }
LABEL_33:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_34:
    v31 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v22);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain(v31[1]);
      swift_bridgeObjectRetain(v34);
    }
    Hasher.init(_seed:)(v39, *(_QWORD *)(v9 + 40));
    String.hash(into:)(v39, v33, v32);
    result = Hasher._finalize()();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release(v6);
  v24 = (_QWORD *)(v6 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  result = swift_release(v6);
  *v4 = v9;
  return result;
}

uint64_t sub_10037F66C(uint64_t a1, uint64_t a2)
{
  return sub_10037F678(a1, a2, &qword_1009D09D0);
}

uint64_t sub_10037F678(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;

  v4 = v3;
  v6 = *v3;
  if (*(_QWORD *)(*v3 + 24) <= a1)
    v7 = a1;
  else
    v7 = *(_QWORD *)(*v3 + 24);
  sub_10004CFD4(a3);
  result = static _DictionaryStorage.resize(original:capacity:move:)(v6, v7, a2);
  v9 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v10 = 0;
    v11 = (uint64_t *)(v6 + 64);
    v12 = 1 << *(_BYTE *)(v6 + 32);
    v34 = -1 << v12;
    v35 = v12;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v14 = v13 & *(_QWORD *)(v6 + 64);
    v36 = (unint64_t)(v12 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v14)
      {
        v21 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v22 = v21 | (v10 << 6);
      }
      else
      {
        v23 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v23 >= v36)
          goto LABEL_36;
        v24 = v11[v23];
        ++v10;
        if (!v24)
        {
          v10 = v23 + 1;
          if (v23 + 1 >= v36)
            goto LABEL_36;
          v24 = v11[v10];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_36:
              if ((a2 & 1) != 0)
              {
                if (v35 >= 64)
                  bzero((void *)(v6 + 64), 8 * v36);
                else
                  *v11 = v34;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v24 = v11[v25];
            if (!v24)
            {
              while (1)
              {
                v10 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_44;
                if (v10 >= v36)
                  goto LABEL_36;
                v24 = v11[v10];
                ++v25;
                if (v24)
                  goto LABEL_33;
              }
            }
            v10 = v25;
          }
        }
LABEL_33:
        v14 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v10 << 6);
      }
      v30 = 8 * v22;
      v31 = *(_QWORD *)(v6 + 56);
      v32 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v30);
      v33 = *(_QWORD *)(v31 + v30);
      if ((a2 & 1) == 0)
        swift_retain(*(_QWORD *)(v31 + v30));
      result = static Hasher._hash(seed:_:)(*(_QWORD *)(v9 + 40), v32);
      v16 = -1 << *(_BYTE *)(v9 + 32);
      v17 = result & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v15 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v15 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v28 = v18 == v27;
          if (v18 == v27)
            v18 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v15 + 8 * v18);
        }
        while (v29 == -1);
        v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v20 = 8 * v19;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + v20) = v32;
      *(_QWORD *)(*(_QWORD *)(v9 + 56) + v20) = v33;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release(v6);
  *v4 = v9;
  return result;
}

void sub_10037F928(uint64_t a1, uint64_t a2)
{
  sub_10037F93C(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBookRating, &qword_1009D0550);
}

void sub_10037F93C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int v42;
  int64_t v43;
  _QWORD *v44;
  uint64_t v45;

  v6 = v4;
  v9 = a3(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - v11;
  v13 = *v6;
  if (*(_QWORD *)(*v6 + 24) > a1)
    a1 = *(_QWORD *)(*v6 + 24);
  sub_10004CFD4(a4);
  v14 = static _DictionaryStorage.resize(original:capacity:move:)(v13, a1, a2);
  v15 = v14;
  if (*(_QWORD *)(v13 + 16))
  {
    v41 = v6;
    v16 = 0;
    v17 = *(_QWORD *)(v13 + 64);
    v44 = (_QWORD *)(v13 + 64);
    v18 = 1 << *(_BYTE *)(v13 + 32);
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v20 = v19 & v17;
    v43 = (unint64_t)(v18 + 63) >> 6;
    v21 = v14 + 64;
    v42 = a2;
    v22 = 16;
    if ((a2 & 1) != 0)
      v22 = 32;
    v45 = v22;
    while (1)
    {
      if (v20)
      {
        v24 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        v25 = v24 | (v16 << 6);
      }
      else
      {
        v26 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return;
        }
        if (v26 >= v43)
          goto LABEL_35;
        v27 = v44[v26];
        ++v16;
        if (!v27)
        {
          v16 = v26 + 1;
          if (v26 + 1 >= v43)
            goto LABEL_35;
          v27 = v44[v16];
          if (!v27)
          {
            v28 = v26 + 2;
            if (v28 >= v43)
            {
LABEL_35:
              if ((v42 & 1) == 0)
              {
                swift_release(v13);
                v6 = v41;
                goto LABEL_42;
              }
              v39 = 1 << *(_BYTE *)(v13 + 32);
              if (v39 >= 64)
                bzero(v44, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v44 = -1 << v39;
              v6 = v41;
              *(_QWORD *)(v13 + 16) = 0;
              break;
            }
            v27 = v44[v28];
            if (!v27)
            {
              while (1)
              {
                v16 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_44;
                if (v16 >= v43)
                  goto LABEL_35;
                v27 = v44[v16];
                ++v28;
                if (v27)
                  goto LABEL_25;
              }
            }
            v16 = v28;
          }
        }
LABEL_25:
        v20 = (v27 - 1) & v27;
        v25 = __clz(__rbit64(v27)) + (v16 << 6);
      }
      v29 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v25);
      v30 = *(_QWORD *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + v45))(v12, *(_QWORD *)(v13 + 56) + v30 * v25, v9);
      v31 = static Hasher._hash(seed:_:)(*(_QWORD *)(v15 + 40), v29);
      v32 = -1 << *(_BYTE *)(v15 + 32);
      v33 = v31 & ~v32;
      v34 = v33 >> 6;
      if (((-1 << v33) & ~*(_QWORD *)(v21 + 8 * (v33 >> 6))) != 0)
      {
        v23 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v21 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v35 = 0;
        v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v37 = v34 == v36;
          if (v34 == v36)
            v34 = 0;
          v35 |= v37;
          v38 = *(_QWORD *)(v21 + 8 * v34);
        }
        while (v38 == -1);
        v23 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(_QWORD *)(v21 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(_QWORD *)(*(_QWORD *)(v15 + 48) + 8 * v23) = v29;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 56) + v30 * v23, v12, v9);
      ++*(_QWORD *)(v15 + 16);
    }
  }
  swift_release(v13);
LABEL_42:
  *v6 = v15;
}

unint64_t sub_10037FC68(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

_OWORD *sub_10037FCBC(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_10004CFC4(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_10037FD24(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_BYTE *)(a5[7] + result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_10037FD6C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_100025B3C(a4, a5[7] + 32 * a1, (uint64_t *)&unk_1009D04E0);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_10037FDDC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_100025B3C(a3, a4[7] + 32 * a1, (uint64_t *)&unk_1009D04E0);
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_10037FE60(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_10037FF54(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))&type metadata accessor for PBPropertyValue);
}

uint64_t sub_10037FE6C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_10037FF54(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))&type metadata accessor for PBPropertyConfiguration);
}

unint64_t sub_10037FE78(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

_OWORD *sub_10037FEC0(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_10004CFC4(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_10037FF3C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_10037FF54(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListSortOrder);
}

uint64_t sub_10037FF48(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_10037FF54(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListFilterOption);
}

uint64_t sub_10037FF54(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v9 = (_QWORD *)(a5[6] + 16 * a1);
  *v9 = a2;
  v9[1] = a3;
  v10 = a5[7];
  v11 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a4, v11);
  v13 = a5[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a5[2] = v15;
  return result;
}

unint64_t sub_10037FFE4(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

_OWORD *sub_10038002C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_10004CFC4(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_100380090(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1003803FC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBookTasteInfo);
}

uint64_t sub_10038009C(unint64_t a1, uint64_t a2, _QWORD *a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a3[6];
  v9 = type metadata accessor for UUID(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(double *)(a3[7] + 8 * a1) = a4;
  v11 = a3[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a3[2] = v13;
  return result;
}

uint64_t sub_100380134(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1003803FC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for Book.Metadata);
}

uint64_t sub_100380140(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1003803FC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for Book.MediaType);
}

uint64_t sub_10038014C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for CollectionRecommendationType(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for CollectionRecommendationOptions(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_100380204(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_10004CFD4(&qword_1009D7AA0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_100380294(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = a7[7] + 24 * result;
  *(_QWORD *)v8 = a4;
  *(_QWORD *)(v8 + 8) = a5;
  *(_BYTE *)(v8 + 16) = a6 & 1;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

unint64_t sub_1003802EC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, _QWORD *a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a8[(result >> 6) + 8] |= 1 << result;
  v8 = (_QWORD *)(a8[6] + 16 * result);
  *v8 = a2;
  v8[1] = a3;
  v9 = a8[7] + 32 * result;
  *(_QWORD *)v9 = a4;
  *(_QWORD *)(v9 + 8) = a5;
  *(_QWORD *)(v9 + 16) = a6;
  *(_BYTE *)(v9 + 24) = a7;
  v10 = a8[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a8[2] = v12;
  return result;
}

uint64_t sub_100380340(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1003803FC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for CFIRange);
}

uint64_t sub_10038034C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1003803FC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ContentMessage.CFIUpdate);
}

uint64_t sub_100380358(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for Date(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1003803F0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1003803FC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for StoreBookRating);
}

uint64_t sub_1003803FC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v8 = a4[7];
  v9 = a5(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a3, v9);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void sub_100380488(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = a1[2];
  if (!v4)
  {
    swift_bridgeObjectRelease(a1);
    return;
  }
  v8 = a1[4];
  v7 = a1[5];
  v43 = a1[6];
  swift_bridgeObjectRetain(a1);
  v46 = v8;
  v47 = v7;
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain(v7);
  v11 = sub_10004CE80(v8, v7);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1002C0448();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = (uint64_t *)(v20[6] + 16 * v11);
    *v21 = v8;
    v21[1] = v7;
    *(_QWORD *)(v20[7] + 8 * v11) = v43;
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    v25 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n(a1, 2);
      return;
    }
    v26 = a1 + 9;
    while (1)
    {
      v7 = *(v26 - 1);
      v28 = *v26;
      v46 = *(v26 - 2);
      v27 = v46;
      v47 = v7;
      v29 = (_QWORD *)*a3;
      swift_bridgeObjectRetain(v7);
      v30 = sub_10004CE80(v46, v7);
      v32 = v29[2];
      v33 = (v31 & 1) == 0;
      v23 = __OFADD__(v32, v33);
      v34 = v32 + v33;
      if (v23)
        break;
      v35 = v31;
      if (v29[3] < v34)
      {
        sub_100025834(v34, 1);
        v30 = sub_10004CE80(v46, v7);
        if ((v35 & 1) != (v36 & 1))
          goto LABEL_25;
      }
      if ((v35 & 1) != 0)
        goto LABEL_10;
      v37 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      v38 = (uint64_t *)(v37[6] + 16 * v30);
      *v38 = v27;
      v38[1] = v7;
      *(_QWORD *)(v37[7] + 8 * v30) = v28;
      v39 = v37[2];
      v23 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v23)
        goto LABEL_24;
      v26 += 3;
      v37[2] = v40;
      if (!--v25)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_100025834(v14, a2 & 1);
  v16 = sub_10004CE80(v8, v7);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v18);
    v48 = v18;
    swift_errorRetain(v18);
    v19 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    if ((swift_dynamicCast(v19, &v48, v19, &type metadata for _MergeError, 0) & 1) == 0)
    {
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_errorRelease(v48);
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_26:
  v44 = 0;
  v45 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v41._object = (void *)0x80000001007C3AE0;
  v41._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v41);
  _print_unlocked<A, B>(_:_:)(&v46, &v44, &type metadata for String, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v42._countAndFlagsBits = 39;
  v42._object = (void *)0xE100000000000000;
  String.append(_:)(v42);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v44, v45, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

void (*sub_100380804(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v3;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;

  v7 = malloc(0x58uLL);
  *a1 = v7;
  v7[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  swift_bridgeObjectRetain(a3);
  v7[9] = sub_100380A54(v7);
  v7[10] = sub_1003808E4(v7 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_100380894;
}

void sub_100380894(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  uint64_t v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease(v3);
  v2(v1, 0);
  free(v1);
}

void (*sub_1003808E4(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_10004CE80(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_100380A18;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1002C0810();
      goto LABEL_7;
    }
    sub_10037F35C(v16, a4 & 1, (uint64_t *)&unk_1009DDF50);
    v20 = sub_10004CE80(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_100380A18(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_100380A80(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease(*v1);
  free(v1);
}

uint64_t (*sub_100380A54(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_100380A74;
}

uint64_t sub_100380A74(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t *sub_100380A80(uint64_t *result, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  v8 = *result;
  if (!*result)
  {
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + 16 * a4, 1, &type metadata for String);
      sub_1002BE924(a4, *a3);
    }
    return (uint64_t *)swift_bridgeObjectRetain(v8);
  }
  v9 = (_QWORD *)*a3;
  if ((a2 & 1) != 0)
  {
    *(_QWORD *)(v9[7] + 8 * a4) = v8;
    return (uint64_t *)swift_bridgeObjectRetain(v8);
  }
  v9[(a4 >> 6) + 8] |= 1 << a4;
  v10 = (_QWORD *)(v9[6] + 16 * a4);
  *v10 = a5;
  v10[1] = a6;
  *(_QWORD *)(v9[7] + 8 * a4) = v8;
  v11 = v9[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (!v12)
  {
    v9[2] = v13;
    swift_bridgeObjectRetain(a6);
    return (uint64_t *)swift_bridgeObjectRetain(v8);
  }
  __break(1u);
  return result;
}

uint64_t sub_100380B44(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10029F8CC(&qword_1009DDE08, &qword_1009DDE00);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10004CFD4(&qword_1009DDE00);
          v13 = sub_10028C418(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100380D58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10029F8CC((unint64_t *)&unk_1009E8EC0, (uint64_t *)&unk_1009DDE90);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10004CFD4((uint64_t *)&unk_1009DDE90);
          v13 = sub_10028C418(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100380F6C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10029F8CC((unint64_t *)&unk_1009DE080, (uint64_t *)&unk_1009DE070);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10004CFD4((uint64_t *)&unk_1009DE070);
          v13 = sub_10028C418(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004CFD4(&qword_1009D3398);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100381174(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10029F8CC(&qword_1009DDEB8, &qword_1009DDEB0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10004CFD4(&qword_1009DDEB0);
          v13 = sub_10028C46C(v18, i, a3);
          v15 = *v14;
          swift_unknownObjectRetain(*v14);
          ((void (*)(uint64_t **, _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10004CFD4(&qword_1009DA850);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10038137C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10029F8CC((unint64_t *)&unk_1009DDEA0, &qword_1009DD640);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10004CFD4(&qword_1009DD640);
          v13 = sub_10028C418(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100381590(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD, __n128);
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t result;
  _BYTE v29[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v27 = a3;
    else
      v27 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_10029F8CC(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_10004CFD4(a6);
          v23 = (void (*)(_BYTE *, _QWORD, __n128))a7(v29, i, a3, v22, v20);
          v25 = *v24;
          v26 = swift_retain(*v24);
          v23(v29, 0, v26);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100381798(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10029F8CC((unint64_t *)&unk_1009DDE20, &qword_1009DDE18);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10004CFD4(&qword_1009DDE18);
          v13 = sub_10028C418(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100009E04(0, &qword_1009D76A0, UIKeyCommand_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003819AC(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  id *v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_10029F8CC(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_10004CFD4(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100381BB4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  uint64_t (*v18[4])();

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10029F8CC((unint64_t *)&unk_1009DDED0, &qword_1009DDEC8);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_10004CFD4(&qword_1009DDEC8);
          v13 = sub_10028C418(v18, i, a3);
          v15 = *v14;
          ((void (*)(uint64_t (**)(), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100009E04(0, &qword_1009DDEC0, AEHighlightLine_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100381DC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100381590(a1, a2, a3, (void (*)(_QWORD))&type metadata accessor for PagePaginationEntity, (unint64_t *)&unk_1009DDDE0, &qword_1009DDDD8, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_10028C514);
}

uint64_t sub_100381DEC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = type metadata accessor for ContentMessage.CFIUpdate(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v15 = (char *)&v32 - v14;
  v39 = a4;
  v18 = *(_QWORD *)(a4 + 56);
  v17 = a4 + 56;
  v16 = v18;
  v37 = v17;
  v19 = -1 << *(_BYTE *)(v17 - 24);
  if (-v19 < 64)
    v20 = ~(-1 << -(char)v19);
  else
    v20 = -1;
  v21 = v20 & v16;
  if (!a2)
  {
    v22 = 0;
    a3 = 0;
LABEL_38:
    v31 = v37;
    *a1 = v39;
    a1[1] = v31;
    a1[2] = ~v19;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    v22 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v17 - 24);
  v35 = a1;
  v22 = 0;
  v23 = 0;
  v36 = (unint64_t)(63 - v19) >> 6;
  v33 = v36 - 1;
  v38 = a3;
  if (!v21)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    v29 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(_QWORD *)(v39 + 48) + v29 * v25, v8);
    v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v15, v12, v8);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v15, v8);
    a3 = v38;
    if (v23 == v38)
      goto LABEL_37;
    a2 += v29;
    if (v21)
      goto LABEL_8;
LABEL_9:
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v26 >= v36)
      goto LABEL_32;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
      break;
LABEL_18:
    v21 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v36)
  {
    v21 = 0;
    v22 = v26;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
    goto LABEL_14;
  v28 = v26 + 2;
  if (v26 + 2 >= v36)
    goto LABEL_32;
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
    goto LABEL_17;
  v22 = v26 + 3;
  if (v26 + 3 >= v36)
  {
    v21 = 0;
    v22 = v26 + 2;
    goto LABEL_36;
  }
  v27 = *(_QWORD *)(v37 + 8 * v22);
  if (v27)
  {
LABEL_14:
    v26 = v22;
    goto LABEL_18;
  }
  v28 = v26 + 4;
  if (v26 + 4 >= v36)
  {
LABEL_32:
    v21 = 0;
LABEL_36:
    a3 = v23;
LABEL_37:
    v19 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v27 = *(_QWORD *)(v37 + 8 * v28);
  if (v27)
  {
LABEL_17:
    v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v36)
    {
      v21 = 0;
      v22 = v33;
      goto LABEL_36;
    }
    v27 = *(_QWORD *)(v37 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1003820B8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1003822B4(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  sub_1003825E8(a1, a2, a3, a4, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr, (unint64_t *)&qword_1009D6DB0, a5);
}

void sub_1003822D0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_10004CFD4(&qword_1009DD750);
  v38 = *(_QWORD *)(v8 - 8);
  v39 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32 - v12;
  v14 = *(_QWORD *)(a4 + 64);
  v37 = a4 + 64;
  v15 = -1 << *(_BYTE *)(a4 + 32);
  if (-v15 < 64)
    v16 = ~(-1 << -(char)v15);
  else
    v16 = -1;
  v17 = v16 & v14;
  if (!a2)
  {
    v18 = 0;
LABEL_38:
    v31 = v37;
    *a1 = a4;
    a1[1] = v31;
    a1[2] = ~v15;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    v18 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v18 = 0;
  v19 = 0;
  v36 = (unint64_t)(63 - v15) >> 6;
  v33 = v36 - 1;
  v20 = a3;
  if (!v17)
    goto LABEL_9;
LABEL_8:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v22 = v21 | (v18 << 6);
  while (1)
  {
    ++v19;
    v26 = *(_QWORD *)(a4 + 56);
    v27 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v22);
    v28 = *v27;
    v29 = v27[1];
    v30 = type metadata accessor for LayoutSubview(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(&v10[*(int *)(v39 + 48)], v26 + *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72) * v22, v30);
    *(_QWORD *)v10 = v28;
    *((_QWORD *)v10 + 1) = v29;
    sub_100025B3C((uint64_t)v10, (uint64_t)v13, &qword_1009DD750);
    sub_100025B3C((uint64_t)v13, a2, &qword_1009DD750);
    if (v19 == v20)
      goto LABEL_37;
    a2 += *(_QWORD *)(v38 + 72);
    if (v17)
      goto LABEL_8;
LABEL_9:
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v23 >= v36)
      goto LABEL_33;
    v24 = *(_QWORD *)(v37 + 8 * v23);
    if (!v24)
      break;
LABEL_18:
    v17 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v18 = v23;
  }
  v18 += 2;
  if (v23 + 1 >= v36)
  {
    v17 = 0;
    v18 = v23;
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v37 + 8 * v18);
  if (v24)
    goto LABEL_14;
  v25 = v23 + 2;
  if (v23 + 2 >= v36)
    goto LABEL_33;
  v24 = *(_QWORD *)(v37 + 8 * v25);
  if (v24)
    goto LABEL_17;
  v18 = v23 + 3;
  if (v23 + 3 >= v36)
  {
    v17 = 0;
    v18 = v23 + 2;
    goto LABEL_37;
  }
  v24 = *(_QWORD *)(v37 + 8 * v18);
  if (v24)
  {
LABEL_14:
    v23 = v18;
    goto LABEL_18;
  }
  v25 = v23 + 4;
  if (v23 + 4 >= v36)
  {
LABEL_33:
    v17 = 0;
LABEL_37:
    v15 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v24 = *(_QWORD *)(v37 + 8 * v25);
  if (v24)
  {
LABEL_17:
    v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v36)
    {
      v17 = 0;
      v18 = v33;
      goto LABEL_37;
    }
    v24 = *(_QWORD *)(v37 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
}

void sub_1003825CC(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4, __n128 a5)
{
  sub_1003825E8(a1, a2, a3, a4, &qword_1009DDF08, BKNavigationInfo_ptr, &qword_1009DDF10, a5);
}

void sub_1003825E8(uint64_t *a1, uint64_t **a2, uint64_t a3, uint64_t a4, unint64_t *a5, _QWORD *a6, unint64_t *a7, __n128 a8)
{
  uint64_t v8;
  uint64_t **v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v42;
  uint64_t *v43;
  _QWORD v44[5];

  v8 = a4;
  v10 = a2;
  v38 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a4 < 0)
      v14 = a4;
    else
      v14 = a4 & 0xFFFFFFFFFFFFFF8;
    v15 = __CocoaSet.makeIterator()(v14, a8);
    v16 = sub_100009E04(0, a5, a6);
    v17 = sub_100384B9C(a7, a5, a6);
    a1 = Set.Iterator.init(_cocoa:)(v44, v15, v16, v17);
    v8 = v44[0];
    v18 = v44[1];
    v19 = v44[2];
    v20 = v44[3];
    v21 = v44[4];
    if (v10)
      goto LABEL_6;
LABEL_39:
    v36 = v38;
LABEL_41:
    *v36 = v8;
    v36[1] = v18;
    v36[2] = v19;
    v36[3] = v20;
    v36[4] = v21;
    return;
  }
  v20 = 0;
  v33 = -1 << *(_BYTE *)(a4 + 32);
  v18 = a4 + 56;
  v19 = ~v33;
  v34 = -v33;
  if (v34 < 64)
    v35 = ~(-1 << v34);
  else
    v35 = -1;
  v21 = v35 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_39;
LABEL_6:
  if (!a3)
    goto LABEL_39;
  if (a3 < 0)
    goto LABEL_48;
  v22 = 0;
  v39 = (unint64_t)(v19 + 64) >> 6;
  v37 = v19;
  while (v8 < 0)
  {
    v29 = __CocoaSet.Iterator.next()(a1);
    if (!v29)
      goto LABEL_40;
    v30 = v29;
    v42 = v29;
    v31 = sub_100009E04(0, a5, a6);
    swift_unknownObjectRetain(v30);
    swift_dynamicCast(&v43, &v42, (char *)&type metadata for Swift.AnyObject + 8, v31, 7);
    v25 = v43;
    swift_unknownObjectRelease(v30);
    if (!v25)
      goto LABEL_40;
LABEL_11:
    ++v22;
    *v10++ = v25;
    if (v22 == a3)
      goto LABEL_40;
  }
  if (v21)
  {
    v23 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    v24 = v23 | (v20 << 6);
    goto LABEL_10;
  }
  v26 = v20 + 1;
  if (!__OFADD__(v20, 1))
  {
    if (v26 >= v39)
    {
      v21 = 0;
LABEL_40:
      v19 = v37;
      v36 = v38;
      goto LABEL_41;
    }
    v27 = *(_QWORD *)(v18 + 8 * v26);
    if (v27)
      goto LABEL_26;
    v28 = v20 + 2;
    if (v20 + 2 >= v39)
    {
      v21 = 0;
      ++v20;
      goto LABEL_40;
    }
    v27 = *(_QWORD *)(v18 + 8 * v28);
    if (!v27)
    {
      if (v20 + 3 >= v39)
        goto LABEL_44;
      v27 = *(_QWORD *)(v18 + 8 * (v20 + 3));
      if (v27)
      {
        v26 = v20 + 3;
        goto LABEL_26;
      }
      v28 = v20 + 4;
      if (v20 + 4 >= v39)
      {
        v21 = 0;
        v20 += 3;
        goto LABEL_40;
      }
      v27 = *(_QWORD *)(v18 + 8 * v28);
      if (!v27)
      {
        v26 = v20 + 5;
        if (v20 + 5 >= v39)
        {
LABEL_44:
          v21 = 0;
          v20 = v28;
          goto LABEL_40;
        }
        v27 = *(_QWORD *)(v18 + 8 * v26);
        if (!v27)
        {
          v32 = v20 + 6;
          while (v39 != v32)
          {
            v27 = *(_QWORD *)(v18 + 8 * v32++);
            if (v27)
            {
              v26 = v32 - 1;
              goto LABEL_26;
            }
          }
          v21 = 0;
          v20 = v39 - 1;
          goto LABEL_40;
        }
        goto LABEL_26;
      }
    }
    v26 = v28;
LABEL_26:
    v21 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
LABEL_10:
    a1 = (uint64_t *)*(id *)(*(_QWORD *)(v8 + 48) + 8 * v24);
    v25 = a1;
    if (!a1)
      goto LABEL_40;
    goto LABEL_11;
  }
  __break(1u);
LABEL_48:
  __break(1u);
}

uint64_t sub_1003828E0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_100382ADC(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *sub_100382C74(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_100382E6C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;

  v8 = type metadata accessor for NoteHighlight(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - v13;
  v34 = a4;
  v17 = *(_QWORD *)(a4 + 64);
  v16 = a4 + 64;
  v15 = v17;
  v18 = -1 << *(_BYTE *)(v16 - 32);
  if (-v18 < 64)
    v19 = ~(-1 << -(char)v18);
  else
    v19 = -1;
  v20 = v19 & v15;
  if (!a2)
  {
    v21 = 0;
LABEL_37:
    *a1 = v34;
    a1[1] = v16;
    a1[2] = ~v18;
    a1[3] = v21;
    a1[4] = v20;
    return;
  }
  if (!a3)
  {
    v21 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v31 = -1 << *(_BYTE *)(v16 - 32);
  v32 = a1;
  v21 = 0;
  v22 = 0;
  v33 = (unint64_t)(63 - v18) >> 6;
  v30 = v33 - 1;
  if (!v20)
    goto LABEL_9;
LABEL_8:
  v23 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v24 = v23 | (v21 << 6);
  while (1)
  {
    ++v22;
    v28 = *(_QWORD *)(v9 + 72);
    sub_1002C6D20(*(_QWORD *)(v34 + 56) + v28 * v24, (uint64_t)v11);
    sub_1001E08CC((uint64_t)v11, (uint64_t)v14);
    sub_1001E08CC((uint64_t)v14, a2);
    if (v22 == a3)
      goto LABEL_36;
    a2 += v28;
    if (v20)
      goto LABEL_8;
LABEL_9:
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v16 + 8 * v25);
    if (!v26)
      break;
LABEL_18:
    v20 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v25 << 6);
    v21 = v25;
  }
  v21 += 2;
  if (v25 + 1 >= v33)
  {
    v20 = 0;
    v21 = v25;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v16 + 8 * v21);
  if (v26)
    goto LABEL_14;
  v27 = v25 + 2;
  if (v25 + 2 >= v33)
    goto LABEL_32;
  v26 = *(_QWORD *)(v16 + 8 * v27);
  if (v26)
    goto LABEL_17;
  v21 = v25 + 3;
  if (v25 + 3 >= v33)
  {
    v20 = 0;
    v21 = v25 + 2;
    goto LABEL_36;
  }
  v26 = *(_QWORD *)(v16 + 8 * v21);
  if (v26)
  {
LABEL_14:
    v25 = v21;
    goto LABEL_18;
  }
  v27 = v25 + 4;
  if (v25 + 4 >= v33)
  {
LABEL_32:
    v20 = 0;
LABEL_36:
    v18 = v31;
    a1 = v32;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v16 + 8 * v27);
  if (v26)
  {
LABEL_17:
    v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v33)
    {
      v20 = 0;
      v21 = v30;
      goto LABEL_36;
    }
    v26 = *(_QWORD *)(v16 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_18;
  }
LABEL_40:
  __break(1u);
}

id sub_1003830F4(void *a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_class *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[4];
  uint64_t v32;
  objc_super v33;
  _QWORD v34[5];
  _QWORD v35[5];

  v35[3] = sub_100009E04(0, (unint64_t *)&qword_1009DDF70, BKLibraryManager_ptr);
  v35[4] = &off_10091B9B0;
  v35[0] = a2;
  v8 = type metadata accessor for MenuCoverImageProvider(0);
  v34[3] = v8;
  v34[4] = &protocol witness table for MenuCoverImageProvider;
  v9 = sub_1000257F8(v34);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v9, a3, v8);
  a4[OBJC_IVAR____TtC5Books17ContextActionData_supportsReportConcernInJS] = 0;
  v10 = OBJC_IVAR____TtC5Books17ContextActionData_dataModel;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Books17ContextActionData_dataModel] = a1;
  v11 = a4;
  v12 = a1;
  v13 = ContextActionDataModel.initType.getter();
  v15 = (void *)v13;
  v16 = v14;
  if ((v17 & 1) != 0)
  {
    __chkstk_darwin(v13);
    v31[2] = v35;
    v31[3] = v34;
    v22 = (uint64_t)sub_1003A2BFC((void (*)(uint64_t *__return_ptr, id *))sub_100384D50, (uint64_t)v31, (uint64_t)v15);
    sub_1002AC840(v15, v16, 1);
  }
  else
  {

    sub_100553670();
    if (v18)
    {
      v19 = v18;
      v20 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
      v21 = swift_allocObject(v20, 40, 7);
      *(_OWORD *)(v21 + 16) = xmmword_1007118F0;
      *(_QWORD *)(v21 + 32) = v19;
      v32 = v21;
      specialized Array._endMutation()(v21);
      v22 = v32;

    }
    else
    {

      v22 = (uint64_t)_swiftEmptyArrayStorage;
    }
  }
  v23 = OBJC_IVAR____TtC5Books17ContextActionData__assetInfos;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books17ContextActionData__assetInfos] = v22;
  if ((unint64_t)v22 >> 62)
  {
    if (v22 < 0)
      v26 = v22;
    else
      v26 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v22);
    if (v27)
      goto LABEL_8;
LABEL_13:

    _s5Books15CurrentPageViewVwxx_0(v34);
    _s5Books15CurrentPageViewVwxx_0(v35);

    v28 = *(_QWORD *)&v11[v23];
    swift_bridgeObjectRelease(v28);
    v29 = type metadata accessor for ContextActionData();
    swift_deallocPartialClassInstance(v11, v29, 25, 7);
    return 0;
  }
  if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_13;
LABEL_8:

  v24 = (objc_class *)type metadata accessor for ContextActionData();
  v33.receiver = v11;
  v33.super_class = v24;
  v25 = objc_msgSendSuper2(&v33, "init");

  _s5Books15CurrentPageViewVwxx_0(v34);
  _s5Books15CurrentPageViewVwxx_0(v35);
  return v25;
}

uint64_t sub_100383378(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  v9 = sub_1000257F8(&v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v9, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_100022840(&v12, v10 + 40 * a1 + 32);
}

void sub_1003833F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v17;
  uint64_t v18;
  _QWORD *v19;

  v4 = v3;
  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v7)
  {
    v19 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v7);
    if (v7 < 0)
    {
      __break(1u);
      return;
    }
    v8 = 0;
    while (v7 != v8)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, a1);
      else
        v9 = *(id *)(a1 + 8 * v8 + 32);
      v10 = v9;
      v17 = v9;
      sub_100379E28(&v17, a2, a3, (uint64_t)&v18);

      if (v4)
      {
        swift_release(v19);
        return;
      }
      ++v8;
      v12 = v18;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
      v13 = v19[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v12);
      specialized ContiguousArray._endMutation()(v14);
      if (v7 == v8)
        return;
    }
    __break(1u);
LABEL_16:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a1);
  }
}

void sub_10038355C(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t i;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26[2];
  __int128 v27;
  _QWORD *v28;

  v21 = a4;
  v22 = a5;
  v19 = a2;
  v20 = a3;
  v28 = _swiftEmptyArrayStorage;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain(a1);
    for (i = 0; i != v7; ++i)
    {
      v27 = *(_OWORD *)(a1 + 16 * i + 32);
      sub_100378D88((uint64_t *)&v27, v19, v20, v21, v22, &v23);
      if (v5)
      {
        swift_bridgeObjectRelease(a1);
        swift_bridgeObjectRelease(v28);
        return;
      }
      if (v24)
      {
        sub_100022840(&v23, (uint64_t)v26);
        sub_100022840(v26, (uint64_t)&v23);
        v9 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
        {
          v9 = sub_1005B1048(0, v9[2] + 1, 1, v9);
          v28 = v9;
        }
        v11 = v9[2];
        v10 = v9[3];
        if (v11 >= v10 >> 1)
          v28 = sub_1005B1048((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
        v13 = v24;
        v12 = v25;
        v14 = sub_100063750((uint64_t)&v23, v24);
        v15 = __chkstk_darwin(v14);
        v17 = (char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v18 + 16))(v17, v15);
        sub_100383378(v11, (uint64_t)v17, (uint64_t *)&v28, v13, v12);
        _s5Books15CurrentPageViewVwxx_0(&v23);
      }
      else
      {
        sub_100010960((uint64_t)&v23, &qword_1009DDF30);
      }
    }
    swift_bridgeObjectRelease(a1);
  }
}

_QWORD *sub_100383738(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  unint64_t v66;
  _QWORD *v67;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unsigned int v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;

  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v78 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  v76 = *(_QWORD *)(v9 - 8);
  v77 = v9;
  __chkstk_darwin(v9);
  v75 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v74 = (char *)&v70 - v13;
  v14 = type metadata accessor for ContextActionType.ContextActionGroup(0, v12);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v80 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_10004CFD4(&qword_1009DDF28);
  __chkstk_darwin(v87);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = _swiftEmptyArrayStorage;
  v86 = *(_QWORD *)(a1 + 16);
  if (v86)
  {
    v84 = v15;
    v72 = v3;
    v83 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v82 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Books17ContextActionData_dataModel);
    v79 = enum case for ContextActionType.ContextActionGroup.improveSuggestions(_:);
    v81 = *(_QWORD *)(v17 + 72);
    v71 = a1;
    v21 = swift_bridgeObjectRetain(a1);
    v22 = 0;
    v73 = 0x80000001007C3B40;
    v85 = v14;
    v88 = v19;
    v23 = v14;
    while (1)
    {
      v91 = v20;
      v92 = v22;
      v24 = v83 + v81 * v22;
      v25 = dispatch thunk of ContextActionDataModel.supportsSuggestionContextMenu.getter(v21);
      v26 = *(int *)(v87 + 48);
      v27 = v84;
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v19, v24, v23);
      v28 = *(_QWORD *)(v24 + v26);
      *(_QWORD *)&v19[v26] = v28;
      if ((v25 & 1) == 0)
        break;
      v29 = v80;
      (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v80, v79, v23);
      v30 = sub_100008DB0(&qword_1009DDF98, (uint64_t (*)(uint64_t))&type metadata accessor for ContextActionType.ContextActionGroup, (uint64_t)&protocol conformance descriptor for ContextActionType.ContextActionGroup);
      swift_bridgeObjectRetain(v28);
      dispatch thunk of RawRepresentable.rawValue.getter(&v94, v23, v30);
      dispatch thunk of RawRepresentable.rawValue.getter(&v93, v23, v30);
      v31 = v94;
      v32 = v93;
      v33 = v29;
      v19 = v88;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v33, v23);
      sub_100010960((uint64_t)v19, &qword_1009DDF28);
      if (v31 != v32)
        goto LABEL_7;
      v34 = v74;
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, v73);
      v36 = v75;
      v35 = v76;
      v37 = v77;
      v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v76 + 16))(v75, v34, v77);
      v39 = v78;
      static Locale.current.getter(v38);
      LOWORD(v69) = 2;
      v40 = v36;
      v19 = v88;
      v41 = String.init(localized:defaultValue:table:bundle:locale:comment:)("TopPicksMenuFeedbackTitle", 25, 2, v40, 0, 0, 0, v39, "Title of the feedback sub-menu item in context menu", 51, v69);
      v89 = v42;
      v90 = v41;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v37);
LABEL_8:
      v43 = _swiftEmptyArrayStorage;
      v44 = *(_QWORD *)(v24 + v26);
      v94 = (unint64_t)_swiftEmptyArrayStorage;
      v45 = *(_QWORD *)(v44 + 16);
      if (v45)
      {
        v46 = *(_QWORD *)(type metadata accessor for ContextActionType(0) - 8);
        v47 = v44 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
        v48 = *(_QWORD *)(v46 + 72);
        v49 = swift_bridgeObjectRetain(v44);
        do
        {
          v50 = ContextActionType.identifier.getter(v49);
          v52 = v51;
          v53 = *a3;
          if (*(_QWORD *)(*a3 + 16) && (v54 = sub_10004CE80(v50, v51), (v55 & 1) != 0))
          {
            v56 = *(id *)(*(_QWORD *)(v53 + 56) + 8 * v54);
            swift_bridgeObjectRelease(v52);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v57);
            v59 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v58 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v59 >= v58 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v58 > 1, v59 + 1, 1);
            v60 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v59, v56);
            specialized Array._endMutation()(v60);
          }
          else
          {
            v49 = swift_bridgeObjectRelease(v52);
          }
          v47 += v48;
          --v45;
        }
        while (v45);
        swift_bridgeObjectRelease(v44);
        v43 = (_QWORD *)v94;
        v19 = v88;
      }
      v20 = v91;
      if ((swift_isUniquelyReferenced_nonNull_native(v91) & 1) == 0)
        v20 = sub_1005B12BC(0, v20[2] + 1, 1, v20);
      v61 = v85;
      v63 = v20[2];
      v62 = v20[3];
      v64 = v92;
      if (v63 >= v62 >> 1)
      {
        v67 = sub_1005B12BC((_QWORD *)(v62 > 1), v63 + 1, 1, v20);
        v64 = v92;
        v20 = v67;
      }
      v22 = v64 + 1;
      v20[2] = v63 + 1;
      v65 = &v20[3 * v63];
      v66 = v89;
      v65[4] = v90;
      v65[5] = v66;
      v65[6] = v43;
      v23 = v61;
      if (v22 == v86)
      {
        swift_bridgeObjectRelease(v71);
        return v20;
      }
    }
    swift_bridgeObjectRetain(v28);
    sub_100010960((uint64_t)v19, &qword_1009DDF28);
LABEL_7:
    v89 = 0xE000000000000000;
    v90 = 0;
    goto LABEL_8;
  }
  return v20;
}

_QWORD *sub_100383C7C(unint64_t a1, uint64_t (*a2)(uint64_t, id))
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    v20 = v2 & 0xC000000000000001;
    v4 = _swiftEmptyArrayStorage;
    v5 = 4;
    v19 = v2;
    while (1)
    {
      v7 = v20 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5 - 4, v2) : *(id *)(v2 + 8 * v5);
      v8 = v7;
      v9 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v10 = a2(v5 - 4, v7);
      v12 = v11;
      v14 = v13;

      if (v12)
      {
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_1005B1198(0, v4[2] + 1, 1, v4);
        v16 = v4[2];
        v15 = v4[3];
        if (v16 >= v15 >> 1)
          v4 = sub_1005B1198((_QWORD *)(v15 > 1), v16 + 1, 1, v4);
        v4[2] = v16 + 1;
        v6 = &v4[3 * v16];
        v6[4] = v10;
        v6[5] = v12;
        v6[6] = v14;
        v2 = v19;
      }
      ++v5;
      if (v9 == v3)
        goto LABEL_21;
    }
    __break(1u);
LABEL_16:
    if (v2 < 0)
      v17 = v2;
    else
      v17 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
  }
  v4 = _swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease(v2);
  return v4;
}

void *sub_100383E18(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  void *result;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  result = &_swiftEmptyArrayStorage;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain(a1);
    v6 = (uint64_t *)(a1 + 48);
    do
    {
      v9 = *(v6 - 1);
      v8 = *v6;
      v10 = *(v6 - 2);
      swift_bridgeObjectRetain(v9);
      swift_bridgeObjectRetain(v8);
      v11 = a2(v10, v9, v8);
      swift_bridgeObjectRelease(v8);
      v12 = swift_bridgeObjectRelease(v9);
      if (v11)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v14 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v7 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
        specialized Array._endMutation()(v7);
      }
      v6 += 3;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease(a1);
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100383F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;

  if (!a2)
    return 0;
  type metadata accessor for BSUISharedWithYouController(0);
  v6 = (void *)static BSUISharedWithYouController.shared.getter();
  v7 = (void *)dispatch thunk of BSUISharedWithYouController.highlightAttributionView(for:viewController:)(a1, a2, a3);

  if (!v7)
    return 0;
  v8 = objc_msgSend(v7, "highlightMenu");
  v9 = objc_msgSend(v8, "children");

  v10 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  v12 = sub_10004CFD4(&qword_1009DDE00);
  v13 = sub_10029F8CC(&qword_1009DDE08, &qword_1009DDE00);
  LOBYTE(v8) = Collection.isNotEmpty.getter(v12, v13);
  *(_QWORD *)&v14 = swift_bridgeObjectRelease(v11).n128_u64[0];
  if ((v8 & 1) == 0)
  {
    if (qword_1009CE1E8 != -1)
      swift_once(&qword_1009CE1E8, sub_1003761E0);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100048F64(v18, (uint64_t)qword_1009DDD00);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "highlightMenu empty for highlight", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    return 0;
  }
  v15 = objc_msgSend(v7, "highlightMenu", v14);
  v16 = objc_msgSend(v15, "children");

  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v10);
  return v17;
}

uint64_t sub_100384168(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v23[0] = a1;
  v3 = type metadata accessor for ContextActionData();
  v4 = sub_100008DB0(&qword_1009DDF40, (uint64_t (*)(uint64_t))type metadata accessor for ContextActionData, (uint64_t)&unk_100717224);
  ContextActionDataProtocol.selectionMode.getter(&v19, v3, v4);
  if (v22 == 1)
  {
    sub_1001EB7C0((uint64_t)&v19);
    return 0;
  }
  else
  {
    sub_100022840(&v19, (uint64_t)v23);
    v6 = v24;
    v7 = v25;
    sub_10003F198(v23, v24);
    v8 = dispatch thunk of ContextAssetInfoProtocol.socialHighlightID.getter(v6, v7);
    v10 = v9;
    sub_10002E418((uint64_t)v23, (uint64_t)&v19);
    if (!v10)
    {
      type metadata accessor for BSUISharedWithYouController(0);
      v11 = (void *)static BSUISharedWithYouController.shared.getter();
      v12 = v20;
      v13 = v21;
      sub_10003F198(&v19, v20);
      v14 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v12, v13);
      v16 = v15;
      v8 = dispatch thunk of BSUISharedWithYouController.highlightIdentifier(for:)(v14, v15);
      v10 = v17;

      swift_bridgeObjectRelease(v16);
    }
    _s5Books15CurrentPageViewVwxx_0(&v19);
    v5 = sub_100383F3C(v8, v10, a2);
    swift_bridgeObjectRelease(v10);
    _s5Books15CurrentPageViewVwxx_0(v23);
  }
  return v5;
}

uint64_t _s5Books19ContextMenuProviderC022analyticsAssetPropertyD03forSo07BAAssetgD0_pSg11BookStoreUI0B15ActionDataModelC_tF_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  id v10;
  id v11;
  objc_class *v12;
  _BYTE *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _BYTE v20[40];
  _QWORD v21[5];
  __int128 v22[2];
  char v23;

  v2 = type metadata accessor for MenuCoverImageProvider(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v8 = &v20[-v7];
  v9 = (void *)objc_opt_self(BKLibraryManager);
  v10 = a1;
  v11 = objc_msgSend(v9, "defaultManager");
  MenuCoverImageProvider.init()();
  v12 = (objc_class *)type metadata accessor for ContextActionData();
  v13 = objc_allocWithZone(v12);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v8, v2);
  v14 = v11;
  v15 = sub_1003830F4(v10, (uint64_t)v14, (uint64_t)v5, v13);
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);

  if (v15)
  {
    v21[0] = v15;
    v16 = sub_100008DB0(&qword_1009DDF40, (uint64_t (*)(uint64_t))type metadata accessor for ContextActionData, (uint64_t)&unk_100717224);
    ContextActionDataProtocol.selectionMode.getter(v22, v12, v16);
    if ((v23 & 1) == 0)
    {
      sub_100022840(v22, (uint64_t)v21);
      sub_10002E418((uint64_t)v21, (uint64_t)v20);
      v18 = objc_allocWithZone((Class)type metadata accessor for ContextMenuAssetPropertyProvider(0));
      v17 = ContextMenuAssetPropertyProvider.init(assetInfo:)(v20);

      _s5Books15CurrentPageViewVwxx_0(v21);
      return v17;
    }

    swift_bridgeObjectRelease(*(_QWORD *)&v22[0]);
  }
  return 0;
}

uint64_t sub_10038447C(uint64_t a1, uint64_t a2)
{
  initializeWithTake for ContextMenuPresentationContext(a2, a1);
  return a2;
}

uint64_t sub_1003844B8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ContextMenuPresentationContext(a2, a1);
  return a2;
}

uint64_t sub_1003844F4(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[40];
  _BYTE v19[40];
  __int128 v20[2];
  _QWORD v21[5];
  _QWORD v22[5];

  v8 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v8);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v22[3] = type metadata accessor for ContextActionData();
  v22[4] = sub_100008DB0(&qword_1009DDF40, (uint64_t (*)(uint64_t))type metadata accessor for ContextActionData, (uint64_t)&unk_100717224);
  v22[0] = a1;
  v21[3] = &type metadata for ContextMenuPresentationContext;
  v21[4] = sub_100384BDC();
  v21[0] = swift_allocObject(&unk_1008FFF20, 104, 7);
  sub_10038447C(a2, v21[0] + 16);
  sub_10002E418((uint64_t)v22, (uint64_t)v20);
  sub_10002E418((uint64_t)v21, (uint64_t)v19);
  sub_10002E418((uint64_t)a4, (uint64_t)v18);
  v11 = a3;
  v12 = ShareActionItem.init(data:context:tracker:figaroProvider:)(v20, v19, a3, v18);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 1, 1, v13);
  sub_10002E418((uint64_t)v22, (uint64_t)v20);
  v14 = swift_allocObject(&unk_1008FFF70, 72, 7);
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  sub_100022840(v20, v14 + 32);
  v15 = sub_10030C02C((uint64_t)v10, (uint64_t)&unk_1009DDF60, v14);
  swift_release(v15);
  _s5Books15CurrentPageViewVwxx_0(a4);
  _s5Books15CurrentPageViewVwxx_0(v21);
  _s5Books15CurrentPageViewVwxx_0(v22);
  return v12;
}

uint64_t sub_1003846AC(uint64_t a1)
{
  destroy for ContextMenuPresentationContext(a1);
  return a1;
}

id sub_1003846E0(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4, char *a5)
{
  objc_class *ObjectType;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id result;
  id v23;
  id v24;
  char *v25;
  _QWORD *v26;
  id v27;
  objc_super v28;
  _QWORD v29[5];
  _QWORD v30[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v30[3] = type metadata accessor for ContextActionData();
  v30[4] = sub_100008DB0(&qword_1009DDF40, (uint64_t (*)(uint64_t))type metadata accessor for ContextActionData, (uint64_t)&unk_100717224);
  v30[0] = a1;
  v29[3] = &type metadata for ContextMenuPresentationContext;
  v29[4] = sub_100384BDC();
  v29[0] = swift_allocObject(&unk_1008FFF20, 104, 7);
  sub_10038447C(a2, v29[0] + 16);
  *(_QWORD *)&a5[OBJC_IVAR____TtC5Books16RemoveActionItem_attributes] = 2;
  v11 = &a5[OBJC_IVAR____TtC5Books16RemoveActionItem_type];
  v12 = enum case for ContextActionType.remove(_:);
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  sub_10002E418((uint64_t)v30, (uint64_t)&a5[OBJC_IVAR____TtC5Books16RemoveActionItem_data]);
  sub_10002E418((uint64_t)v29, (uint64_t)&a5[OBJC_IVAR____TtC5Books16RemoveActionItem_context]);
  *(_QWORD *)&a5[OBJC_IVAR____TtC5Books16RemoveActionItem_tracker] = a3;
  sub_10002E418((uint64_t)a4, (uint64_t)&a5[OBJC_IVAR____TtC5Books16RemoveActionItem_figaroProvider]);
  v14 = (void *)objc_opt_self(BKAppDelegate);
  v15 = a3;
  v16 = a5;
  v17 = objc_msgSend(v14, "delegate");
  v18 = objc_msgSend(v17, "serviceCenter");

  v19 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v20 = objc_msgSend(v14, "delegate");
  v21 = objc_msgSend(v20, "engagementManager");

  result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (result)
  {
    v23 = result;
    v24 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    v25 = &v16[OBJC_IVAR____TtC5Books16RemoveActionItem_libraryOperationProvider];
    *((_QWORD *)v25 + 3) = &type metadata for MenuLibraryOperationProvider;
    *((_QWORD *)v25 + 4) = &off_10090F400;
    v26 = (_QWORD *)swift_allocObject(&unk_1008FFF48, 56, 7);
    *(_QWORD *)v25 = v26;
    v26[2] = v18;
    v26[3] = v19;
    v26[4] = v21;
    v26[5] = v23;
    v26[6] = v24;

    v28.receiver = v16;
    v28.super_class = ObjectType;
    v27 = objc_msgSendSuper2(&v28, "init");
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(v29);
    _s5Books15CurrentPageViewVwxx_0(v30);
    return v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003849D0(_QWORD *a1)
{
  uint64_t v1;

  return sub_100379074(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1003849F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_1009DDE54);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1009DDE50 + dword_1009DDE50))(v2, v3, v5, v4);
}

uint64_t sub_100384A70()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100384A98()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_1009DDE6C);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1009DDE68 + dword_1009DDE68))(v2, v3, v5, v4);
}

uint64_t sub_100384B18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EFA1C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1009EFA18 + dword_1009EFA18))(a1, v4, v5, v6);
}

uint64_t sub_100384B9C(unint64_t *a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_100009E04(255, a2, a3);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100384BDC()
{
  unint64_t result;

  result = qword_1009DDF48;
  if (!qword_1009DDF48)
  {
    result = swift_getWitnessTable(&unk_100725358, &type metadata for ContextMenuPresentationContext);
    atomic_store(result, (unint64_t *)&qword_1009DDF48);
  }
  return result;
}

uint64_t sub_100384C20()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);

  swift_release(*(_QWORD *)(v0 + 32));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 56));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100384C74()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100384CB8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100384CE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc(dword_1009D4374);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000AE34;
  return sub_10023B8B8(a1, v4, v5, v1 + 32);
}

void sub_100384D50(_QWORD *a1@<X8>)
{
  sub_100553640(a1);
}

void sub_100384D68(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_100377DE0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24));
}

void sub_100384D70(uint64_t a1, void *a2, UIMenuElementSize a3)
{
  uint64_t v3;

  sub_10037808C(a1, a2, a3, *(UIMenuElementSize *)(v3 + 16));
}

void sub_100384D78(uint64_t a1)
{
  sub_100386564(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_100384D94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  char v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t (**v50)(_QWORD, _QWORD);
  Class isa;
  id v52;
  id v53;
  NSString v54;
  id v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t *v73;
  void *v74;
  id v75;
  id v76;
  uint64_t v77;
  id v78;
  _QWORD v79[2];
  _QWORD v80[2];
  __int16 v81;
  unsigned __int8 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  _BYTE v96[16];

  v4 = &v95;
  swift_unknownObjectWeakInit(&v95);
  swift_unknownObjectWeakInit(v96);
  v5 = objc_msgSend(a1, "title");
  if (v5)
  {
    v6 = v5;
    v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

  }
  else
  {
    v77 = 0;
    v8 = 0;
  }
  v9 = objc_msgSend(a1, "image");
  v10 = (unint64_t)v9;
  v78 = objc_msgSend(a1, "customView");
  v11 = objc_opt_self(TUIBarButtonItem);
  v12 = swift_dynamicCastObjCClass(a1, v11);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = a1;
    v15 = (char *)objc_msgSend(v13, "buttonType");
    v16 = (_BYTE)v15 - 1;
    if ((unint64_t)(v15 - 1) < 3)
    {
      v75 = v9;
      v17 = (unint64_t)objc_msgSend(v13, "attributedTitle");
      if (v8)
      {

LABEL_34:
        LOBYTE(v81) = 0x201u >> (8 * v16);
        v55 = objc_msgSend(v13, "buttonRole");
        if ((unint64_t)v55 >= 4)
          v56 = 0;
        else
          v56 = (char)v55;
        HIBYTE(v81) = v56;
        objc_msgSend(v13, "buttonWidth");
        v83 = v57;
        objc_msgSend(v13, "minButtonWidth");
        v84 = v58;
        objc_msgSend(v13, "maxButtonWidth");
        v85 = v59;
        v90 = v17;
        v60 = (id)v17;
        v92 = objc_msgSend(v13, "menuModel");
        v93 = 0;
        v61 = objc_msgSend(v13, "axAttributes");
        goto LABEL_49;
      }

      if (v17 | v10)
        goto LABEL_34;

LABEL_17:
      swift_unknownObjectWeakDestroy(v4);
      result = swift_unknownObjectWeakDestroy(v96);
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      *(_QWORD *)(a2 + 32) = 1;
      *(_OWORD *)(a2 + 40) = 0u;
      *(_OWORD *)(a2 + 56) = 0u;
      *(_OWORD *)(a2 + 72) = 0u;
      *(_OWORD *)(a2 + 88) = 0u;
      *(_OWORD *)(a2 + 104) = 0u;
      return result;
    }

LABEL_16:
    swift_bridgeObjectRelease(v8);
    goto LABEL_17;
  }
  v18 = objc_msgSend(a1, "menu");

  if (!v8 || !v10)
  {
    v74 = v18;
    v80[0] = swift_getObjectType();
    v19 = sub_10004CFD4((uint64_t *)&unk_1009DE1A0);
    v20 = String.init<A>(reflecting:)(v80, v19);
    v22 = v21;
    v80[0] = v20;
    v80[1] = v21;
    v79[0] = 0x49557466697753;
    v79[1] = 0xE700000000000000;
    v23 = sub_1001F2108();
    v24 = StringProtocol.contains<A>(_:)(v79, &type metadata for String, &type metadata for String, v23, v23);
    swift_bridgeObjectRelease(v22);
    if ((v24 & 1) != 0)
    {
      if (!v78)
      {

        goto LABEL_16;
      }
      v69 = (void *)v10;
      v70 = a2;
      v25 = v78;
      v26 = objc_msgSend(v25, "interactions");
      v27 = sub_10004CFD4((uint64_t *)&unk_1009D7C10);
      v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v26, v27);

      v71 = v8;
      v76 = v9;
      if ((unint64_t)v28 >> 62)
        goto LABEL_40;
      v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v29)
      {
LABEL_14:
        v30 = 4;
        v72 = v25;
        v73 = v4;
        do
        {
          v32 = v30 - 4;
          if ((v28 & 0xC000000000000001) != 0)
          {
            v33 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30 - 4, v28);
            v34 = v30 - 3;
            if (__OFADD__(v32, 1))
              goto LABEL_39;
          }
          else
          {
            v33 = *(_QWORD *)(v28 + 8 * v30);
            swift_unknownObjectRetain(v33);
            v34 = v30 - 3;
            if (__OFADD__(v32, 1))
            {
LABEL_39:
              __break(1u);
LABEL_40:
              if (v28 < 0)
                v62 = v28;
              else
                v62 = v28 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v28);
              v29 = _CocoaArrayWrapper.endIndex.getter(v62);
              swift_bridgeObjectRelease(v28);
              if (!v29)
                break;
              goto LABEL_14;
            }
          }
          v35 = objc_opt_self(UIContextMenuInteraction);
          v36 = swift_dynamicCastObjCClass(v33, v35);
          if (v36)
          {
            v37 = (void *)v36;
            swift_unknownObjectRetain(v33);
            objc_msgSend(v25, "frame");
            v39 = v38;
            v41 = v40;
            objc_msgSend(v25, "frame");
            v43 = v42;
            v45 = v44;
            v46 = objc_msgSend(v37, "delegate");
            if (v46)
            {
              v47 = v46;
              v48 = objc_msgSend(v46, "contextMenuInteraction:configurationForMenuAtLocation:", v37, (v39 + v43) * 0.5, (v41 + v45) * 0.5);
              swift_unknownObjectRelease(v47);
              if (v48)
              {
                v49 = objc_msgSend(v48, "actionProvider");
                if (v49)
                {
                  v50 = (uint64_t (**)(_QWORD, _QWORD))v49;
                  _Block_copy(v49);
                  sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
                  isa = Array._bridgeToObjectiveC()().super.isa;
                  v52 = (id)((uint64_t (**)(_QWORD, Class))v50)[2](v50, isa);

                  v25 = v72;
                  _Block_release(v50);
                  _Block_release(v50);
                  if (v52)
                  {
                    swift_bridgeObjectRelease(v28);

                    swift_bridgeObjectRelease(v71);
                    v53 = v52;
                    v54 = String._bridgeToObjectiveC()();
                    v9 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v54);

                    swift_unknownObjectRelease_n(v33, 2);
                    v77 = 0;
                    v18 = v52;
                    v4 = (uint64_t *)swift_unknownObjectWeakAssign(v73, a1);
                    a2 = v70;
                    goto LABEL_46;
                  }
                }

                v4 = v73;
              }
            }
            swift_unknownObjectRelease(v33);
          }
          swift_unknownObjectRelease(v33);
          ++v30;
        }
        while (v34 != v29);
      }

      swift_bridgeObjectRelease(v28);
      a2 = v70;
      v8 = v71;
      v9 = v76;
    }
    v18 = v74;
    if (!v8)
    {
LABEL_46:
      if (!v9)
      {

        swift_bridgeObjectRelease(0);
        goto LABEL_17;
      }
      v8 = 0;
    }
  }
  v75 = v9;
  v81 = 0;
  objc_msgSend(a1, "width");
  v83 = v63;
  objc_msgSend(a1, "_minimumWidth");
  v84 = v64;
  objc_msgSend(a1, "_maximumWidth");
  v85 = v65;
  v90 = 0;
  v92 = 0;
  v93 = v18;
  v66 = objc_allocWithZone((Class)type metadata accessor for EllipsisButtonAXAttributesProvider());
  v60 = v18;
  v14 = objc_msgSend(v66, "init");
  v61 = objc_msgSend(objc_allocWithZone((Class)TUIAXAttributes), "initWithAXAttributes:", v14);
LABEL_49:
  v67 = v61;

  v94 = v67;
  v82 = objc_msgSend(a1, "isEnabled");
  v86 = objc_msgSend(a1, "target");
  v68 = objc_msgSend(a1, "action");

  v87 = v68;
  v88 = v77;
  v89 = v8;
  v91 = v75;
  sub_100386504((uint64_t)&v81, a2);
  return sub_100386538((uint64_t)&v81);
}

id sub_1003856DC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjCClassFromMetadata;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  objc_class *v27;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  objc_super v32;

  v31 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v29 - v12;
  v0[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axHasNonDefaultAttributess] = 0;
  v0[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axDisabled] = 0;
  v0[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_isAXElement] = 1;
  v0[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axTouchContainer] = 0;
  v30 = (uint64_t *)&v0[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axLabel];
  v14 = v0;
  v15 = String.LocalizationValue.init(stringLiteral:)(1701998413, 0xE400000000000000);
  static Locale.current.getter(v15);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v16 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v16);
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v19 = v31;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v31);
  v20 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v18, v3, "Accessibility string for a 'more' button", 40, 2);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  v23 = v30;
  *v30 = v20;
  v23[1] = v22;
  v24 = &v14[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axValue];
  *v24 = 0;
  v24[1] = 0;
  v25 = &v14[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axHint];
  *v25 = 0;
  v25[1] = 0;
  v14[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axButton] = 1;
  v26 = &v14[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axIdentifier];
  *v26 = 0;
  v26[1] = 0;
  v14[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axImage] = 0;
  v14[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axHeading] = 0;
  v14[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axAdjustable] = 0;
  v14[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axToggle] = 0;
  v14[OBJC_IVAR____TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider_axStaticText] = 0;

  v27 = (objc_class *)type metadata accessor for EllipsisButtonAXAttributesProvider();
  v32.receiver = v14;
  v32.super_class = v27;
  return objc_msgSendSuper2(&v32, "init");
}

id sub_1003859A4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EllipsisButtonAXAttributesProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for EllipsisButtonAXAttributesProvider()
{
  return objc_opt_self(_TtC5BooksP33_634BBAB6B47BDD6BD9B349320160AC7834EllipsisButtonAXAttributesProvider);
}

ValueMetadata *type metadata accessor for MainToolbar()
{
  return &type metadata for MainToolbar;
}

id sub_100385A74(id result, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      result = (id)swift_bridgeObjectRetain(a2);
      break;
    case 1:
    case 2:
      result = result;
      break;
    case 3:
    case 4:
      result = (id)swift_bridgeObjectRetain(result);
      break;
    default:
      return result;
  }
  return result;
}

void destroy for MainToolbar.Item(uint64_t a1)
{
  sub_100385AC0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_100385AC0(void *a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
      swift_bridgeObjectRelease(a2);
      break;
    case 1:
    case 2:

      break;
    case 3:
    case 4:
      swift_bridgeObjectRelease(a1);
      break;
    default:
      return;
  }
}

uint64_t _s5Books11MainToolbarO4ItemOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100385A74(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MainToolbar.Item(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_100385A74(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_100385AC0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for MainToolbar.Item(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_100385AC0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MainToolbar.Item(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MainToolbar.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_100385C68(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_100385C80(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MainToolbar.Item()
{
  return &type metadata for MainToolbar.Item;
}

uint64_t sub_100385CAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  id v26;
  id v27;
  id v28;
  id v29;
  char v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  char v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  char v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  _BYTE v49[96];
  id v50;
  _BYTE v51[96];
  id v52;
  _BYTE v53[88];
  id v54;
  _BYTE v55[88];
  id v56;
  _BYTE v57[72];
  id v58;
  _BYTE v59[72];
  id v60;
  _BYTE v61[64];
  id v62;
  _BYTE v63[64];
  id v64;
  _BYTE v65[48];
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[48];
  uint64_t v69;
  uint64_t v70;
  _BYTE v71[40];
  uint64_t v72;
  _BYTE v73[40];
  uint64_t v74;
  _BYTE v75[32];
  uint64_t v76;
  _BYTE v77[32];
  uint64_t v78;
  _BYTE v79[24];
  double v80;
  _BYTE v81[24];
  double v82;
  _BYTE v83[16];
  double v84;
  _BYTE v85[16];
  double v86;
  _BYTE v87[8];
  double v88;
  _BYTE v89[8];
  double v90;
  _BYTE v91[120];
  _BYTE v92[120];
  _BYTE v93[120];
  _BYTE v94[120];

  v4 = *a1;
  v5 = *a2;
  sub_100386504((uint64_t)a1, (uint64_t)v94);
  sub_100386504((uint64_t)a2, (uint64_t)v93);
  if (v4 != v5)
  {
    sub_100386538((uint64_t)v93);
    sub_100386538((uint64_t)v94);
    sub_100386504((uint64_t)a1, (uint64_t)v92);
    sub_100386504((uint64_t)a2, (uint64_t)v91);
    goto LABEL_12;
  }
  v6 = v94[1];
  sub_100386538((uint64_t)v94);
  v7 = v93[1];
  sub_100386538((uint64_t)v93);
  sub_100386504((uint64_t)a1, (uint64_t)v92);
  sub_100386504((uint64_t)a2, (uint64_t)v91);
  if (v6 != v7)
  {
LABEL_12:
    sub_100386538((uint64_t)v91);
    sub_100386538((uint64_t)v92);
    sub_100386504((uint64_t)a1, (uint64_t)v89);
    sub_100386504((uint64_t)a2, (uint64_t)v87);
    goto LABEL_13;
  }
  v8 = v92[2];
  sub_100386538((uint64_t)v92);
  v9 = v91[2];
  sub_100386538((uint64_t)v91);
  sub_100386504((uint64_t)a1, (uint64_t)v89);
  sub_100386504((uint64_t)a2, (uint64_t)v87);
  if (v8 != v9)
  {
LABEL_13:
    sub_100386538((uint64_t)v87);
    sub_100386538((uint64_t)v89);
    sub_100386504((uint64_t)a1, (uint64_t)v85);
    sub_100386504((uint64_t)a2, (uint64_t)v83);
    goto LABEL_14;
  }
  v10 = v90;
  sub_100386538((uint64_t)v89);
  v11 = v88;
  sub_100386538((uint64_t)v87);
  sub_100386504((uint64_t)a1, (uint64_t)v85);
  sub_100386504((uint64_t)a2, (uint64_t)v83);
  if (v10 != v11)
  {
LABEL_14:
    sub_100386538((uint64_t)v83);
    sub_100386538((uint64_t)v85);
    sub_100386504((uint64_t)a1, (uint64_t)v81);
    sub_100386504((uint64_t)a2, (uint64_t)v79);
    goto LABEL_15;
  }
  v12 = v86;
  sub_100386538((uint64_t)v85);
  v13 = v84;
  sub_100386538((uint64_t)v83);
  sub_100386504((uint64_t)a1, (uint64_t)v81);
  sub_100386504((uint64_t)a2, (uint64_t)v79);
  if (v12 != v13)
  {
LABEL_15:
    sub_100386538((uint64_t)v79);
    sub_100386538((uint64_t)v81);
    sub_100386504((uint64_t)a1, (uint64_t)v77);
    sub_100386504((uint64_t)a2, (uint64_t)v75);
    goto LABEL_16;
  }
  v14 = v82;
  sub_100386538((uint64_t)v81);
  v15 = v80;
  sub_100386538((uint64_t)v79);
  sub_100386504((uint64_t)a1, (uint64_t)v77);
  sub_100386504((uint64_t)a2, (uint64_t)v75);
  if (v14 != v15)
    goto LABEL_16;
  v16 = v78;
  v17 = v76;
  if (!v78)
  {
    if (!v76)
    {
      sub_100386538((uint64_t)v77);
      sub_100386538((uint64_t)v75);
      sub_100386504((uint64_t)a1, (uint64_t)v73);
      sub_100386504((uint64_t)a2, (uint64_t)v71);
      goto LABEL_32;
    }
LABEL_16:
    sub_100386538((uint64_t)v77);
    sub_100386538((uint64_t)v75);
    sub_100386504((uint64_t)a1, (uint64_t)v73);
    sub_100386504((uint64_t)a2, (uint64_t)v71);
    goto LABEL_17;
  }
  if (!v76)
    goto LABEL_16;
  sub_100386538((uint64_t)v77);
  sub_100386538((uint64_t)v75);
  sub_100386504((uint64_t)a1, (uint64_t)v73);
  sub_100386504((uint64_t)a2, (uint64_t)v71);
  if (v16 != v17)
    goto LABEL_17;
LABEL_32:
  v20 = v72;
  if (!v74)
  {
    sub_100386538((uint64_t)v71);
    sub_100386538((uint64_t)v73);
    if (!v20)
    {
      sub_100386504((uint64_t)a1, (uint64_t)v68);
      sub_100386504((uint64_t)a2, (uint64_t)v65);
      goto LABEL_38;
    }
    goto LABEL_18;
  }
  if (!v72)
  {
LABEL_17:
    sub_100386538((uint64_t)v71);
    sub_100386538((uint64_t)v73);
LABEL_18:
    sub_100386504((uint64_t)a1, (uint64_t)v68);
    sub_100386504((uint64_t)a2, (uint64_t)v65);
LABEL_19:
    sub_100386538((uint64_t)v65);
    sub_100386538((uint64_t)v68);
LABEL_20:
    sub_100386504((uint64_t)a1, (uint64_t)v63);
    sub_100386504((uint64_t)a2, (uint64_t)v61);
    goto LABEL_21;
  }
  v21 = static Selector.== infix(_:_:)(v74, v72);
  sub_100386538((uint64_t)v71);
  sub_100386538((uint64_t)v73);
  sub_100386504((uint64_t)a1, (uint64_t)v68);
  sub_100386504((uint64_t)a2, (uint64_t)v65);
  if ((v21 & 1) == 0)
    goto LABEL_19;
LABEL_38:
  v22 = v70;
  v23 = v67;
  if (!v70)
  {
    swift_bridgeObjectRetain(v67);
    sub_100386538((uint64_t)v65);
    sub_100386538((uint64_t)v68);
    if (!v23)
      goto LABEL_45;
    v24 = v23;
    goto LABEL_47;
  }
  if (!v67)
  {
    swift_bridgeObjectRetain(v70);
    sub_100386538((uint64_t)v65);
    sub_100386538((uint64_t)v68);
    v24 = v22;
LABEL_47:
    swift_bridgeObjectRelease(v24);
    goto LABEL_20;
  }
  if (v69 == v66 && v70 == v67)
  {
    swift_bridgeObjectRetain(v70);
    sub_100386538((uint64_t)v65);
    sub_100386538((uint64_t)v68);
    swift_bridgeObjectRelease(v22);
LABEL_45:
    sub_100386504((uint64_t)a1, (uint64_t)v63);
    sub_100386504((uint64_t)a2, (uint64_t)v61);
    goto LABEL_49;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v69, v70, v66, v67, 0);
  swift_bridgeObjectRetain(v22);
  sub_100386538((uint64_t)v65);
  sub_100386538((uint64_t)v68);
  swift_bridgeObjectRelease(v22);
  sub_100386504((uint64_t)a1, (uint64_t)v63);
  sub_100386504((uint64_t)a2, (uint64_t)v61);
  if ((v25 & 1) == 0)
  {
LABEL_21:
    sub_100386538((uint64_t)v61);
    sub_100386538((uint64_t)v63);
LABEL_22:
    sub_100386504((uint64_t)a1, (uint64_t)v59);
    sub_100386504((uint64_t)a2, (uint64_t)v57);
LABEL_23:
    sub_100386538((uint64_t)v57);
    sub_100386538((uint64_t)v59);
LABEL_24:
    sub_100386504((uint64_t)a1, (uint64_t)v55);
    sub_100386504((uint64_t)a2, (uint64_t)v53);
LABEL_25:
    sub_100386538((uint64_t)v53);
    sub_100386538((uint64_t)v55);
LABEL_26:
    sub_100386504((uint64_t)a1, (uint64_t)v51);
    sub_100386504((uint64_t)a2, (uint64_t)v49);
    goto LABEL_27;
  }
LABEL_49:
  v26 = v64;
  v27 = v62;
  if (!v64)
  {
    v31 = v62;
    sub_100386538((uint64_t)v61);
    sub_100386538((uint64_t)v63);
    if (!v27)
    {
      sub_100386504((uint64_t)a1, (uint64_t)v59);
      sub_100386504((uint64_t)a2, (uint64_t)v57);
      goto LABEL_55;
    }
    goto LABEL_60;
  }
  if (!v62)
  {
    v31 = v64;
    sub_100386538((uint64_t)v61);
    sub_100386538((uint64_t)v63);
LABEL_60:

    goto LABEL_22;
  }
  sub_100009E04(0, (unint64_t *)&unk_1009DE190, NSAttributedString_ptr);
  v28 = v27;
  v29 = v26;
  v30 = static NSObject.== infix(_:_:)(v29, v28);
  sub_100386538((uint64_t)v61);
  sub_100386538((uint64_t)v63);

  sub_100386504((uint64_t)a1, (uint64_t)v59);
  sub_100386504((uint64_t)a2, (uint64_t)v57);
  if ((v30 & 1) == 0)
    goto LABEL_23;
LABEL_55:
  v32 = v60;
  v33 = v58;
  if (!v60)
  {
    v37 = v58;
    sub_100386538((uint64_t)v57);
    sub_100386538((uint64_t)v59);
    if (!v33)
    {
      sub_100386504((uint64_t)a1, (uint64_t)v55);
      sub_100386504((uint64_t)a2, (uint64_t)v53);
      goto LABEL_63;
    }
    goto LABEL_68;
  }
  if (!v58)
  {
    v37 = v60;
    sub_100386538((uint64_t)v57);
    sub_100386538((uint64_t)v59);
LABEL_68:

    goto LABEL_24;
  }
  sub_100009E04(0, (unint64_t *)&qword_1009DA818, UIImage_ptr);
  v34 = v33;
  v35 = v32;
  v36 = static NSObject.== infix(_:_:)(v35, v34);
  sub_100386538((uint64_t)v57);
  sub_100386538((uint64_t)v59);

  sub_100386504((uint64_t)a1, (uint64_t)v55);
  sub_100386504((uint64_t)a2, (uint64_t)v53);
  if ((v36 & 1) == 0)
    goto LABEL_25;
LABEL_63:
  v38 = v56;
  v39 = v54;
  if (v56)
  {
    if (v54)
    {
      sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
      v40 = v39;
      v41 = v38;
      v42 = static NSObject.== infix(_:_:)(v41, v40);
      sub_100386538((uint64_t)v53);
      sub_100386538((uint64_t)v55);

      sub_100386504((uint64_t)a1, (uint64_t)v51);
      sub_100386504((uint64_t)a2, (uint64_t)v49);
      if ((v42 & 1) != 0)
        goto LABEL_71;
LABEL_27:
      sub_100386538((uint64_t)v49);
      sub_100386538((uint64_t)v51);
      goto LABEL_28;
    }
    v43 = v56;
    sub_100386538((uint64_t)v53);
    sub_100386538((uint64_t)v55);
    goto LABEL_75;
  }
  v43 = v54;
  sub_100386538((uint64_t)v53);
  sub_100386538((uint64_t)v55);
  if (v39)
  {
LABEL_75:

    goto LABEL_26;
  }
  sub_100386504((uint64_t)a1, (uint64_t)v51);
  sub_100386504((uint64_t)a2, (uint64_t)v49);
LABEL_71:
  v44 = v52;
  v45 = v50;
  if (v52)
  {
    if (v50)
    {
      sub_100009E04(0, &qword_1009DE188, TUIAXAttributes_ptr);
      v46 = v45;
      v47 = v44;
      v18 = static NSObject.== infix(_:_:)(v47, v46);
      sub_100386538((uint64_t)v49);
      sub_100386538((uint64_t)v51);

      return v18 & 1;
    }
    v48 = v52;
    sub_100386538((uint64_t)v49);
    sub_100386538((uint64_t)v51);
  }
  else
  {
    v48 = v50;
    sub_100386538((uint64_t)v49);
    sub_100386538((uint64_t)v51);
    if (!v45)
    {
      v18 = 1;
      return v18 & 1;
    }
  }

LABEL_28:
  v18 = 0;
  return v18 & 1;
}

uint64_t sub_100386504(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MainToolbar.Button(a2, a1);
  return a2;
}

uint64_t sub_100386538(uint64_t a1)
{
  destroy for MainToolbar.Button(a1);
  return a1;
}

void sub_100386564(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1003865A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a6)
    return 0;
  if (v8 == v6 && v9 == v7)
    return 1;
  return _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v6, v7, 0);
}

uint64_t destroy for MainToolbar.Button(uint64_t a1)
{
  swift_unknownObjectRelease(*(_QWORD *)(a1 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));

  swift_unknownObjectWeakDestroy(a1 + 104);
  return swift_unknownObjectWeakDestroy(a1 + 112);
}

uint64_t initializeWithCopy for MainToolbar.Button(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  v6 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(void **)(a2 + 72);
  v8 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(void **)(a2 + 88);
  v10 = *(void **)(a2 + 96);
  v11 = a2 + 104;
  *(_QWORD *)(a1 + 88) = v9;
  *(_QWORD *)(a1 + 96) = v10;
  swift_unknownObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  v16 = v10;
  swift_unknownObjectWeakCopyInit(a1 + 104, v11);
  swift_unknownObjectWeakCopyInit(a1 + 112, a2 + 112);
  return a1;
}

uint64_t assignWithCopy for MainToolbar.Button(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v5;
  swift_unknownObjectRetain(v5);
  swift_unknownObjectRelease(v4);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(void **)(a1 + 64);
  v9 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v9;
  v10 = v9;

  v11 = *(void **)(a1 + 72);
  v12 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v12;
  v13 = v12;

  v14 = *(void **)(a1 + 80);
  v15 = *(void **)(a2 + 80);
  *(_QWORD *)(a1 + 80) = v15;
  v16 = v15;

  v17 = *(void **)(a1 + 88);
  v18 = *(void **)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v18;
  v19 = v18;

  v20 = *(void **)(a1 + 96);
  v21 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v21;
  v22 = v21;

  swift_unknownObjectWeakCopyAssign(a1 + 104, a2 + 104);
  swift_unknownObjectWeakCopyAssign(a1 + 112, a2 + 112);
  return a1;
}

uint64_t initializeWithTake for MainToolbar.Button(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  v5 = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = v5;
  swift_unknownObjectWeakTakeInit(a1 + 104, a2 + 104);
  swift_unknownObjectWeakTakeInit(a1 + 112, a2 + 112);
  return a1;
}

uint64_t assignWithTake for MainToolbar.Button(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectRelease(v4);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease(v5);
  v6 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  v7 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  v8 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  v9 = *(void **)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);

  v10 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  swift_unknownObjectWeakTakeAssign(a1 + 104, a2 + 104);
  swift_unknownObjectWeakTakeAssign(a1 + 112, a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for MainToolbar.Button(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 120))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MainToolbar.Button(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MainToolbar.Button()
{
  return &type metadata for MainToolbar.Button;
}

uint64_t storeEnumTagSinglePayload for MainToolbar.Button.Role(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100386C44 + 4 * byte_10071E075[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100386C78 + 4 * byte_10071E070[v4]))();
}

uint64_t sub_100386C78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100386C80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100386C88);
  return result;
}

uint64_t sub_100386C94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100386C9CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100386CA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100386CA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MainToolbar.Button.Role()
{
  return &type metadata for MainToolbar.Button.Role;
}

uint64_t storeEnumTagSinglePayload for MainToolbar.Button.ButtonType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_100386D10 + 4 * byte_10071E07F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_100386D44 + 4 * byte_10071E07A[v4]))();
}

uint64_t sub_100386D44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100386D4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100386D54);
  return result;
}

uint64_t sub_100386D60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100386D68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_100386D6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100386D74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MainToolbar.Button.ButtonType()
{
  return &type metadata for MainToolbar.Button.ButtonType;
}

unint64_t sub_100386D94()
{
  unint64_t result;

  result = qword_1009DE1B0;
  if (!qword_1009DE1B0)
  {
    result = swift_getWitnessTable(&unk_10071E178, &type metadata for MainToolbar.Button.ButtonType);
    atomic_store(result, (unint64_t *)&qword_1009DE1B0);
  }
  return result;
}

unint64_t sub_100386DDC()
{
  unint64_t result;

  result = qword_1009DE1B8;
  if (!qword_1009DE1B8)
  {
    result = swift_getWitnessTable(&unk_10071E1E0, &type metadata for MainToolbar.Button.Role);
    atomic_store(result, (unint64_t *)&qword_1009DE1B8);
  }
  return result;
}

void sub_100386E20()
{
  qword_1009DE1C0 = 0x404C800000000000;
}

void sub_100386E34()
{
  qword_1009DE1C8 = 0x4038000000000000;
}

void sub_100386E44()
{
  qword_1009DE1D0 = 0x402E000000000000;
}

id sub_100386E54(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  objc_super v18;

  v3 = &v1[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3);
  v4 = OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerView;
  v5 = type metadata accessor for AudiobookTOCHeaderView();
  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5));
  v7 = v1;
  v8 = objc_msgSend(v6, "init");
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v1[v4] = v8;
  v9 = OBJC_IVAR____TtC5Books26AudiobookTOCViewController_tableView;
  v10 = objc_msgSend(objc_allocWithZone((Class)UITableView), "init");
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v7[v9] = v10;
  v11 = &v7[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_lastPlayedChapterIndex];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerHeightConstraint] = 0;
  v7[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_scrollAtTop] = 2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v7[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_viewModel] = a1;
  v12 = a1;

  v18.receiver = v7;
  v18.super_class = (Class)type metadata accessor for AudiobookTOCViewController();
  v13 = objc_msgSendSuper2(&v18, "initWithNibName:bundle:", 0, 0);
  sub_100009E04(0, &qword_1009E7710, UITraitCollection_ptr);
  v14 = v13;
  v15 = static UITraitCollection.bc_allAPITraits.getter();
  v16 = UIViewController.registerForTraitChanges(_:action:)(v15, "_traitCollectionDidChangeWithSender:previousTraitCollection:");
  swift_unknownObjectRelease(v16);

  swift_bridgeObjectRelease(v15);
  return v14;
}

id sub_100387024()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "removeObserver:", v0);

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AudiobookTOCViewController();
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_100387190()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t v20;
  NSString v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t ObjCClassFromMetadata;
  NSString v40;
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  double v54;
  double v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  void *v64;
  id v65;
  id v66;
  id v67;
  id v68;
  void *v69;
  id v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  void *v96;
  id v97;
  id v98;
  uint64_t v99;
  _QWORD *v100;
  Class isa;
  id v102;
  id v103;
  _QWORD *v104;
  uint64_t v105;
  objc_super v106;

  v1 = v0;
  v106.receiver = v0;
  v106.super_class = (Class)type metadata accessor for AudiobookTOCViewController();
  objc_msgSendSuper2(&v106, "viewDidLoad");
  v2 = *(char **)&v0[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerView];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_viewModel];
  KeyPath = swift_getKeyPath(&unk_10071E440);
  v5 = swift_getKeyPath(&unk_10071E468);
  static Published.subscript.getter(&v104, v3, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v105;
  v7 = &v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_title];
  v8 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_title + 8];
  *(_QWORD *)v7 = v104;
  *((_QWORD *)v7 + 1) = v6;
  v9 = swift_bridgeObjectRelease(v8).n128_u64[0];
  v10 = *(void **)&v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_titleLabel];
  v11 = *((_QWORD *)v7 + 1);
  if (v11)
  {
    swift_bridgeObjectRetain(v11);
    v12 = String._bridgeToObjectiveC()();
    v9 = swift_bridgeObjectRelease(v11).n128_u64[0];
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v10, "setText:", v12, *(double *)&v9);

  sub_1003C8B54();
  v13 = swift_getKeyPath(&unk_10071E488);
  v14 = swift_getKeyPath(&unk_10071E4B0);
  static Published.subscript.getter(&v104, v3, v13, v14);
  swift_release(v13);
  swift_release(v14);
  v15 = v105;
  v16 = &v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_author];
  v17 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_author + 8];
  *(_QWORD *)v16 = v104;
  *((_QWORD *)v16 + 1) = v15;
  v18 = swift_bridgeObjectRelease(v17).n128_u64[0];
  v19 = *(void **)&v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_authorLabel];
  v20 = *((_QWORD *)v16 + 1);
  if (v20)
  {
    swift_bridgeObjectRetain(v20);
    v21 = String._bridgeToObjectiveC()();
    v18 = swift_bridgeObjectRelease(v20).n128_u64[0];
  }
  else
  {
    v21 = 0;
  }
  objc_msgSend(v19, "setText:", v21, *(double *)&v18);

  sub_1003C8B54();
  v22 = sub_10044B6D4(0);
  v23 = (uint64_t *)&v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining];
  v24 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining + 8];
  *v23 = v22;
  v23[1] = v25;
  v26 = swift_bridgeObjectRelease(v24).n128_u64[0];
  v27 = *(void **)&v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemainingLabel];
  v28 = v23[1];
  if (v28)
  {
    swift_bridgeObjectRetain(v28);
    v29 = String._bridgeToObjectiveC()();
    v26 = swift_bridgeObjectRelease(v28).n128_u64[0];
  }
  else
  {
    v29 = 0;
  }
  objc_msgSend(v27, "setText:", v29, *(double *)&v26);

  sub_1003C8B54();
  v30 = swift_getKeyPath(&unk_10071E4D0);
  v31 = swift_getKeyPath(&unk_10071E4F8);
  static Published.subscript.getter(&v104, v3, v30, v31);
  swift_release(v30);
  swift_release(v31);
  v32 = v104[2];
  swift_bridgeObjectRelease(v104);
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentCount] = v32;
  sub_1003C8478();
  v33 = &v2[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_delegate];
  *((_QWORD *)v33 + 1) = &off_100900260;
  swift_unknownObjectWeakAssign(v33, v1);
  v34 = swift_getKeyPath(&unk_10071E3B0);
  v35 = swift_getKeyPath(&unk_10071E3D8);
  static Published.subscript.getter(&v104, v3, v34, v35);
  swift_release(v34);
  swift_release(v35);
  v36 = v104;
  sub_100389BB0(v104);

  v37 = *(void **)&v1[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_tableView];
  objc_msgSend(v37, "setRowHeight:", UITableViewAutomaticDimension);
  if (qword_1009CE1F8 != -1)
    swift_once(&qword_1009CE1F8, sub_100386E20);
  objc_msgSend(v37, "setEstimatedRowHeight:", *(double *)&qword_1009DE1C0);
  objc_msgSend(v37, "setDataSource:", v1);
  objc_msgSend(v37, "setDelegate:", v1);
  v38 = type metadata accessor for AudiobookTOCCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v38);
  v40 = String._bridgeToObjectiveC()();
  objc_msgSend(v37, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v40);

  v41 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v37, "setTableHeaderView:", v41);

  v42 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(v37, "setTableFooterView:", v42);

  objc_msgSend(v37, "directionalLayoutMargins");
  v44 = v43;
  v46 = v45;
  if (qword_1009CE200 != -1)
    swift_once(&qword_1009CE200, sub_100386E34);
  objc_msgSend(v37, "setDirectionalLayoutMargins:", v44, *(double *)&qword_1009DE1C8, v46, *(double *)&qword_1009DE1C8);
  v47 = objc_msgSend(v1, "view");
  if (!v47)
  {
    __break(1u);
    goto LABEL_26;
  }
  v48 = v47;
  v49 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksBackground");
  objc_msgSend(v48, "setBackgroundColor:", v49);

  v50 = objc_msgSend(v1, "view");
  if (!v50)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v51 = v50;
  objc_msgSend(v50, "addSubview:", v37);

  v52 = objc_msgSend(v1, "view");
  if (!v52)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v53 = v52;
  objc_msgSend(v52, "addSubview:", v2);

  objc_msgSend(v2, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
  v55 = v54;
  v56 = objc_msgSend(v2, "heightAnchor");
  v57 = objc_msgSend(v56, "constraintEqualToConstant:", v55);

  v58 = *(void **)&v1[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerHeightConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerHeightConstraint] = v57;
  v59 = v57;

  v60 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v61 = swift_allocObject(v60, 96, 7);
  *(_OWORD *)(v61 + 16) = xmmword_10071E210;
  v62 = objc_msgSend(v2, "topAnchor");
  v63 = objc_msgSend(v1, "view");
  if (!v63)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v64 = v63;
  v65 = objc_msgSend(v63, "topAnchor");

  v66 = objc_msgSend(v62, "constraintEqualToAnchor:", v65);
  *(_QWORD *)(v61 + 32) = v66;
  v67 = objc_msgSend(v2, "leadingAnchor");
  v68 = objc_msgSend(v1, "view");
  if (!v68)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v69 = v68;
  v70 = objc_msgSend(v68, "leadingAnchor");

  v71 = objc_msgSend(v67, "constraintEqualToAnchor:", v70);
  *(_QWORD *)(v61 + 40) = v71;
  v72 = objc_msgSend(v2, "trailingAnchor");
  v73 = objc_msgSend(v1, "view");
  if (!v73)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v74 = v73;
  v75 = objc_msgSend(v73, "trailingAnchor");

  v76 = objc_msgSend(v72, "constraintEqualToAnchor:", v75);
  *(_QWORD *)(v61 + 48) = v76;
  *(_QWORD *)(v61 + 56) = v59;
  v77 = v59;
  v78 = objc_msgSend(v37, "topAnchor");
  v79 = objc_msgSend(v1, "view");
  if (!v79)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v80 = v79;
  v81 = objc_msgSend(v79, "topAnchor");

  v82 = objc_msgSend(v78, "constraintEqualToAnchor:", v81);
  *(_QWORD *)(v61 + 64) = v82;
  v83 = objc_msgSend(v37, "leadingAnchor");
  v84 = objc_msgSend(v1, "view");
  if (!v84)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v85 = v84;
  v86 = objc_msgSend(v84, "leadingAnchor");

  v87 = objc_msgSend(v83, "constraintEqualToAnchor:", v86);
  *(_QWORD *)(v61 + 72) = v87;
  v88 = objc_msgSend(v37, "trailingAnchor");
  v89 = objc_msgSend(v1, "view");
  if (!v89)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v90 = v89;
  v91 = objc_msgSend(v89, "trailingAnchor");

  v92 = objc_msgSend(v88, "constraintEqualToAnchor:", v91);
  *(_QWORD *)(v61 + 80) = v92;
  v93 = objc_msgSend(v37, "bottomAnchor");
  v94 = objc_msgSend(v1, "view");
  if (v94)
  {
    v95 = v94;
    v96 = (void *)objc_opt_self(NSLayoutConstraint);
    v97 = objc_msgSend(v95, "bottomAnchor");

    v98 = objc_msgSend(v93, "constraintEqualToAnchor:", v97);
    *(_QWORD *)(v61 + 88) = v98;
    v104 = (_QWORD *)v61;
    specialized Array._endMutation()(v99);
    v100 = v104;
    sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v96, "activateConstraints:", isa, swift_bridgeObjectRelease(v100).n128_f64[0]);

    objc_msgSend(v37, "setContentInset:", v55, 0.0, 0.0, 0.0);
    v102 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v103 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    objc_msgSend(v102, "addObserver:selector:name:object:", v1, "onAppWillEnterForegroundWithNotification:", UIApplicationWillEnterForegroundNotification, v103);

    return;
  }
LABEL_34:
  __break(1u);
}

double sub_100387CDC(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  unint64_t v27;
  Class isa;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __n128 v34;
  void *v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  unint64_t v41;
  unint64_t v42;
  Class v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  objc_super v51;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v47 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v47 - v12;
  v14 = (objc_class *)type metadata accessor for AudiobookTOCViewController();
  v51.receiver = v2;
  v51.super_class = v14;
  objc_msgSendSuper2(&v51, "viewWillAppear:", a1 & 1);
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_viewModel];
  KeyPath = swift_getKeyPath(&unk_10071E3F8);
  v17 = swift_getKeyPath(&unk_10071E420);
  static Published.subscript.getter(&v50, v15, KeyPath, v17);
  swift_release(KeyPath);
  swift_release(v17);
  v18 = &v2[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_lastPlayedChapterIndex];
  *(_QWORD *)v18 = v50;
  v18[8] = 0;
  v19 = swift_getKeyPath(&unk_10071E320);
  v20 = swift_getKeyPath(&unk_10071E348);
  static Published.subscript.getter(&v50, v15, v19, v20);
  swift_release(v19);
  swift_release(v20);
  v21 = v50;
  v22 = swift_getKeyPath(&unk_10071E290);
  v23 = swift_getKeyPath(&unk_10071E2B8);
  static Published.subscript.getter(&v50, v15, v22, v23);
  swift_release(v22);
  swift_release(v23);
  v24 = v50;
  if ((unint64_t)v50 >> 62)
  {
    if (v50 < 0)
      v45 = v50;
    else
      v45 = v50 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v50);
    v25 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease(v24);
  }
  else
  {
    v25 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v26 = swift_bridgeObjectRelease(v24);
  if (v21 < v25)
  {
    v47 = v7;
    v27 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_tableView];
    IndexPath.init(row:section:)(v21, 0, v26);
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v29 = *(void (**)(char *, uint64_t))(v5 + 8);
    v49 = v4;
    v29(v13, v4);
    objc_msgSend((id)v27, "scrollToRowAtIndexPath:atScrollPosition:animated:", isa, 1, 0);

    v30 = sub_10004CFD4(&qword_1009DE368);
    v31 = *(unsigned __int8 *)(v5 + 80);
    v32 = (v31 + 32) & ~v31;
    v48 = *(_QWORD *)(v5 + 72);
    v33 = swift_allocObject(v30, v32 + v48, v31 | 7);
    *(_OWORD *)(v33 + 16) = xmmword_10070CCA0;
    IndexPath.init(row:section:)(v21, 0, (__n128)xmmword_10070CCA0);
    if (v21 < 1)
      goto LABEL_7;
    v35 = (void *)v27;
    IndexPath.init(row:section:)(v21 - 1, 0, v34);
    v27 = *(_QWORD *)(v33 + 16);
    v36 = *(_QWORD *)(v33 + 24);
    v37 = v27 + 1;
    if (v27 >= v36 >> 1)
      goto LABEL_25;
    while (1)
    {
      *(_QWORD *)(v33 + 16) = v37;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v33 + v32 + v27 * v48, v10, v49);
      v27 = (unint64_t)v35;
LABEL_7:
      v38 = swift_getKeyPath(&unk_10071E290);
      v39 = swift_getKeyPath(&unk_10071E2B8);
      static Published.subscript.getter(&v50, v15, v38, v39);
      swift_release(v38);
      swift_release(v39);
      v10 = (char *)v50;
      if ((unint64_t)v50 >> 62)
      {
        v46 = v50 < 0 ? v50 : v50 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v50);
        v37 = _CocoaArrayWrapper.endIndex.getter(v46);
        swift_bridgeObjectRelease(v10);
      }
      else
      {
        v37 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v35 = (void *)v49;
      v40 = swift_bridgeObjectRelease(v10);
      v36 = v37 - 1;
      if (!__OFSUB__(v37, 1))
        break;
      __break(1u);
LABEL_25:
      v33 = sub_1005B1600(v36 > 1, v37, 1, v33);
    }
    if (v21 < (uint64_t)v36)
    {
      IndexPath.init(row:section:)(v21 + 1, 0, v40);
      v42 = *(_QWORD *)(v33 + 16);
      v41 = *(_QWORD *)(v33 + 24);
      if (v42 >= v41 >> 1)
        v33 = sub_1005B1600(v41 > 1, v42 + 1, 1, v33);
      *(_QWORD *)(v33 + 16) = v42 + 1;
      (*(void (**)(unint64_t, char *, void *))(v5 + 32))(v33 + v32 + v42 * v48, v47, v35);
    }
    v43 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend((id)v27, "reloadRowsAtIndexPaths:withRowAnimation:", v43, 5, swift_bridgeObjectRelease(v33).n128_f64[0]);

  }
  sub_100388148();
  return sub_100388510(v15);
}

double sub_100388148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  double result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  Class isa;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, unint64_t, uint64_t);
  id v44;
  char v45;
  uint64_t v46;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009DE3E0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v0;
  v44 = *(id *)(v0 + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_tableView);
  v9 = objc_msgSend(v44, "indexPathsForVisibleRows", v6);
  if (v9)
  {
    v11 = v9;
    v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v1);

    v13 = *(_QWORD *)(v12 + 16);
    v36 = v12;
    if (v13)
    {
      v39 = v2;
      v40 = OBJC_IVAR____TtC5Books26AudiobookTOCViewController_viewModel;
      v14 = v12 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      v15 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
      v42 = *(_QWORD *)(v2 + 72);
      v43 = v15;
      v37 = v8;
      v38 = v4;
      v15(v8, v14, v1);
      while (1)
      {
        v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
        v16(v8, 0, 1, v1);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
          goto LABEL_27;
        (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v18 = objc_msgSend(v44, "cellForRowAtIndexPath:", isa);

        if (!v18)
          goto LABEL_6;
        v19 = type metadata accessor for AudiobookTOCCell();
        v20 = swift_dynamicCastClass(v18, v19);
        if (!v20)
          goto LABEL_5;
        v21 = v20;
        v22 = *(_QWORD *)(v41 + v40);
        KeyPath = swift_getKeyPath(&unk_10071E320);
        v24 = swift_getKeyPath(&unk_10071E348);
        static Published.subscript.getter(&v46, v22, KeyPath, v24);
        swift_release(KeyPath);
        v25 = swift_release(v24);
        v26 = v46;
        if (v26 == IndexPath.row.getter(v25))
        {
          v28 = swift_getKeyPath(&unk_10071E368);
          v29 = swift_getKeyPath(&unk_10071E390);
          static Published.subscript.getter(&v45, v22, v28, v29);
          swift_release(v28);
          v27 = swift_release(v29);
          v30 = (v45 & 1) == 0;
        }
        else
        {
          v30 = 2;
        }
        v4 = v38;
        v2 = v39;
        v8 = v37;
        if (v30 != *(unsigned __int8 *)(v21 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_nowPlayingState))
          break;
        (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v38, v1, v27);

LABEL_7:
        v14 += v42;
        if (!--v13)
          goto LABEL_26;
        v43(v8, v14, v1);
      }
      *(_BYTE *)(v21 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_nowPlayingState) = v30;
      if (v30)
      {
        v31 = *(_QWORD *)(v21 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_nowPlayingIndicator);
        if (v30 == 1)
          objc_msgSend(*(id *)(v21 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_nowPlayingIndicator), "setHidden:", 0, v27.n128_f64[0]);
        else
          objc_msgSend(*(id *)(v21 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_nowPlayingIndicator), "setHidden:", 1, v27.n128_f64[0]);
        v34 = *(_QWORD *)(v31 + OBJC_IVAR___BKNowPlayingIndicatorView_playbackState);
        *(_QWORD *)(v31 + OBJC_IVAR___BKNowPlayingIndicatorView_playbackState) = 2;
        if (v34 == 2)
          goto LABEL_5;
      }
      else
      {
        v32 = *(char **)(v21 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_nowPlayingIndicator);
        objc_msgSend(v32, "setHidden:", 0, v27.n128_f64[0]);
        v33 = *(_QWORD *)&v32[OBJC_IVAR___BKNowPlayingIndicatorView_playbackState];
        *(_QWORD *)&v32[OBJC_IVAR___BKNowPlayingIndicatorView_playbackState] = 1;
        if (v33 == 1)
          goto LABEL_5;
      }
      sub_100346860();
LABEL_5:

LABEL_6:
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      goto LABEL_7;
    }
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56);
LABEL_26:
    v16(v8, 1, 1, v1);
LABEL_27:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v36).n128_u64[0];
  }
  return result;
}

double sub_100388510(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  double result;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  id v153;

  v152 = a1;
  v2 = sub_10004CFD4(&qword_1009D4D60);
  v3 = *(_QWORD *)(v2 - 8);
  v138 = v2;
  v139 = v3;
  __chkstk_darwin(v2);
  v136 = (char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D4D68);
  v6 = *(_QWORD *)(v5 - 8);
  v140 = v5;
  v141 = v6;
  __chkstk_darwin(v5);
  v137 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = sub_10004CFD4(&qword_1009D4DB0);
  v133 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v130 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_10004CFD4(&qword_1009D4DB8);
  v135 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v131 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_10004CFD4(&qword_1009D4D90);
  v127 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v124 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_10004CFD4(&qword_1009D4D98);
  v129 = *(_QWORD *)(v128 - 8);
  __chkstk_darwin(v128);
  v125 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = sub_10004CFD4(&qword_1009DE370);
  v121 = *(_QWORD *)(v147 - 8);
  __chkstk_darwin(v147);
  v145 = (char *)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_10004CFD4(&qword_1009DE378);
  v119 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v144 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_10004CFD4(&qword_1009DE380);
  v120 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_10004CFD4(&qword_1009DE388);
  v123 = *(_QWORD *)(v122 - 8);
  __chkstk_darwin(v122);
  v117 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v16);
  v18 = (char *)&v115 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_10004CFD4(&qword_1009D4DE8);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v115 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D4DF0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__artwork, &v153, 33, 0);
  v27 = sub_10004CFD4(&qword_1009D19F0);
  Published.projectedValue.getter(v27);
  swift_endAccess(&v153);
  v28 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v142 = v28;
  v153 = (id)static OS_dispatch_queue.main.getter(v28);
  v143 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56);
  v151(v18, 1, 1, v143);
  v29 = sub_100030B34((unint64_t *)&unk_1009DE390, &qword_1009D4DE8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v149 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v153, v18, v19, v28, v29, v149);
  sub_1001EDE18((uint64_t)v18);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v30 = swift_allocObject(&unk_100900328, 24, 7);
  v31 = v150;
  swift_unknownObjectWeakInit(v30 + 16);
  v32 = sub_100030B34(&qword_1009DE3A0, (uint64_t *)&unk_1009D4DF0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v33 = Publisher<>.sink(receiveValue:)(sub_10038B108, v30, v23, v32);
  v34 = swift_release(v30);
  (*(void (**)(char *, uint64_t, __n128))(v24 + 8))(v26, v23, v34);
  v35 = v31 + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_cancellables;
  swift_beginAccess(v31 + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_cancellables, &v153, 33, 0);
  AnyCancellable.store(in:)(v35);
  swift_endAccess(&v153);
  swift_release(v33);
  v36 = v152;
  swift_beginAccess(v152 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__chapterTitle, &v153, 33, 0);
  v37 = sub_10004CFD4(&qword_1009D19E0);
  v38 = v116;
  Published.projectedValue.getter(v37);
  v39 = swift_endAccess(&v153);
  v40 = v142;
  v153 = (id)static OS_dispatch_queue.main.getter(v39);
  v41 = (uint64_t)v18;
  v42 = v143;
  v43 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v151;
  v151(v18, 1, 1, v143);
  v44 = sub_100030B34((unint64_t *)&unk_1009DBFF0, &qword_1009DE380, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v45 = v117;
  v115 = v41;
  v46 = v118;
  v47 = v149;
  Publisher.receive<A>(on:options:)(&v153, v41, v118, v40, v44, v149);
  sub_1001EDE18(v41);

  (*(void (**)(char *, uint64_t))(v120 + 8))(v38, v46);
  v48 = swift_allocObject(&unk_100900328, 24, 7);
  swift_unknownObjectWeakInit(v48 + 16);
  v49 = sub_100030B34((unint64_t *)&unk_1009DE3A8, &qword_1009DE388, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v50 = v122;
  v51 = Publisher<>.sink(receiveValue:)(sub_10038B110, v48, v122, v49);
  v52 = swift_release(v48);
  (*(void (**)(char *, uint64_t, __n128))(v123 + 8))(v45, v50, v52);
  v148 = v35;
  swift_beginAccess(v35, &v153, 33, 0);
  AnyCancellable.store(in:)(v35);
  swift_endAccess(&v153);
  swift_release(v51);
  swift_beginAccess(v36 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__currentChapterIndex, &v153, 33, 0);
  v123 = sub_10004CFD4((uint64_t *)&unk_1009D19D0);
  v53 = v145;
  Published.projectedValue.getter(v123);
  v54 = swift_endAccess(&v153);
  v55 = v142;
  v153 = (id)static OS_dispatch_queue.main.getter(v54);
  v56 = v115;
  v43(v115, 1, 1, v42);
  v122 = sub_100030B34((unint64_t *)&qword_1009DE3B8, &qword_1009DE370, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v57 = v144;
  v58 = v147;
  v59 = v55;
  Publisher.receive<A>(on:options:)(&v153, v56, v147, v55, v122, v47);
  sub_1001EDE18(v56);

  v121 = *(_QWORD *)(v121 + 8);
  ((void (*)(char *, uint64_t))v121)(v53, v58);
  v60 = swift_allocObject(&unk_100900328, 24, 7);
  swift_unknownObjectWeakInit(v60 + 16);
  v120 = sub_100030B34((unint64_t *)&unk_1009DE3C0, &qword_1009DE378, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v61 = v146;
  v62 = Publisher<>.sink(receiveValue:)(sub_10038B118, v60, v146, v120);
  v63 = swift_release(v60);
  v119 = *(_QWORD *)(v119 + 8);
  ((void (*)(char *, uint64_t, __n128))v119)(v57, v61, v63);
  v64 = v148;
  swift_beginAccess(v148, &v153, 33, 0);
  AnyCancellable.store(in:)(v64);
  swift_endAccess(&v153);
  swift_release(v62);
  swift_beginAccess(v36 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isPlaying, &v153, 33, 0);
  v65 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  v66 = v124;
  Published.projectedValue.getter(v65);
  v67 = swift_endAccess(&v153);
  v153 = (id)static OS_dispatch_queue.main.getter(v67);
  v68 = v42;
  v69 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v151;
  v151((char *)v56, 1, 1, v42);
  v70 = sub_100030B34((unint64_t *)&unk_1009DE3D0, &qword_1009D4D90, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v71 = v125;
  v72 = v126;
  v73 = v149;
  Publisher.receive<A>(on:options:)(&v153, v56, v126, v59, v70, v149);
  sub_1001EDE18(v56);

  (*(void (**)(char *, uint64_t))(v127 + 8))(v66, v72);
  v74 = swift_allocObject(&unk_100900328, 24, 7);
  swift_unknownObjectWeakInit(v74 + 16);
  v75 = sub_100030B34((unint64_t *)&unk_1009D4E80, &qword_1009D4D98, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v76 = v128;
  v77 = Publisher<>.sink(receiveValue:)(sub_10038B120, v74, v128, v75);
  v78 = swift_release(v74);
  (*(void (**)(char *, uint64_t, __n128))(v129 + 8))(v71, v76, v78);
  v79 = v148;
  swift_beginAccess(v148, &v153, 33, 0);
  AnyCancellable.store(in:)(v79);
  swift_endAccess(&v153);
  swift_release(v77);
  swift_beginAccess(v152 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playedInterval, &v153, 33, 0);
  v80 = sub_10004CFD4((uint64_t *)&unk_1009D4E40);
  v81 = v130;
  Published.projectedValue.getter(v80);
  v82 = swift_endAccess(&v153);
  v153 = (id)static OS_dispatch_queue.main.getter(v82);
  v69(v56, 1, 1, v68);
  v83 = sub_100030B34((unint64_t *)&unk_1009DBFE0, &qword_1009D4DB0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v84 = v131;
  v85 = v132;
  v86 = v73;
  Publisher.receive<A>(on:options:)(&v153, v56, v132, v59, v83, v73);
  sub_1001EDE18(v56);

  (*(void (**)(char *, uint64_t))(v133 + 8))(v81, v85);
  v87 = swift_allocObject(&unk_100900328, 24, 7);
  swift_unknownObjectWeakInit(v87 + 16);
  v88 = sub_100030B34((unint64_t *)&unk_1009D4E50, &qword_1009D4DB8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v89 = v134;
  v90 = Publisher<>.sink(receiveValue:)(sub_10038B128, v87, v134, v88);
  v91 = swift_release(v87);
  (*(void (**)(char *, uint64_t, __n128))(v135 + 8))(v84, v89, v91);
  v92 = v148;
  swift_beginAccess(v148, &v153, 33, 0);
  AnyCancellable.store(in:)(v92);
  swift_endAccess(&v153);
  swift_release(v90);
  swift_beginAccess(v152 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playbackRate, &v153, 33, 0);
  v93 = sub_10004CFD4(&qword_1009D19A8);
  v94 = v136;
  Published.projectedValue.getter(v93);
  v95 = swift_endAccess(&v153);
  v96 = v59;
  v153 = (id)static OS_dispatch_queue.main.getter(v95);
  v97 = v143;
  v151((char *)v56, 1, 1, v143);
  v98 = sub_100030B34(&qword_1009D4EA0, &qword_1009D4D60, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v100 = v137;
  v99 = v138;
  Publisher.receive<A>(on:options:)(&v153, v56, v138, v96, v98, v86);
  sub_1001EDE18(v56);

  (*(void (**)(char *, uint64_t))(v139 + 8))(v94, v99);
  v101 = swift_allocObject(&unk_100900328, 24, 7);
  swift_unknownObjectWeakInit(v101 + 16);
  v102 = sub_100030B34(&qword_1009D4EA8, &qword_1009D4D68, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v103 = v140;
  v104 = Publisher<>.sink(receiveValue:)(sub_10038B128, v101, v140, v102);
  v105 = swift_release(v101);
  (*(void (**)(char *, uint64_t, __n128))(v141 + 8))(v100, v103, v105);
  swift_beginAccess(v92, &v153, 33, 0);
  AnyCancellable.store(in:)(v92);
  swift_endAccess(&v153);
  swift_release(v104);
  swift_beginAccess(v152 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__listeningSessionStartChapterIndex, &v153, 33, 0);
  v106 = v145;
  Published.projectedValue.getter(v123);
  v107 = swift_endAccess(&v153);
  v153 = (id)static OS_dispatch_queue.main.getter(v107);
  v151((char *)v56, 1, 1, v97);
  v108 = v144;
  v109 = v147;
  Publisher.receive<A>(on:options:)(&v153, v56, v147, v96, v122, v149);
  sub_1001EDE18(v56);

  ((void (*)(char *, uint64_t))v121)(v106, v109);
  v110 = swift_allocObject(&unk_100900328, 24, 7);
  swift_unknownObjectWeakInit(v110 + 16);
  v111 = v146;
  v112 = Publisher<>.sink(receiveValue:)(sub_10038B130, v110, v146, v120);
  v113 = swift_release(v110);
  ((void (*)(char *, uint64_t, __n128))v119)(v108, v111, v113);
  swift_beginAccess(v92, &v153, 33, 0);
  AnyCancellable.store(in:)(v92);
  swift_endAccess(&v153);
  *(_QWORD *)&result = swift_release(v112).n128_u64[0];
  return result;
}

void sub_100389600(char *a1)
{
  void *v2;
  id v3;
  double v4;
  id v5;
  BOOL v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  void *v12;
  void *v13;

  v2 = *(void **)&a1[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerHeightConstraint];
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, "setActive:", 0);
    objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerView], "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, UILayoutFittingCompressedSize.height);
    objc_msgSend(v3, "setConstant:", v4);
    objc_msgSend(v3, "setActive:", 1);
    objc_msgSend(a1, "updateViewConstraints");

  }
  v5 = objc_msgSend(a1, "traitCollection");
  v6 = objc_msgSend(v5, "horizontalSizeClass") == (id)1 || objc_msgSend(v5, "verticalSizeClass") == (id)1;
  v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerView];
  *(_BYTE *)(v7 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_compactMode) = v6;
  v8 = *(_BYTE **)(v7 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_supplementalContentButton);
  v8[OBJC_IVAR____TtC5Books25SupplementalContentButton_compactMode] = v6;
  objc_msgSend(v8, "setNeedsLayout");
  sub_1003C8B54();
  v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_viewModel];
  KeyPath = swift_getKeyPath(&unk_10071E3B0);
  v11 = swift_getKeyPath(&unk_10071E3D8);
  static Published.subscript.getter(&v13, v9, KeyPath, v11);
  swift_release(KeyPath);
  swift_release(v11);
  v12 = v13;
  sub_100389BB0(v13);

}

void sub_1003897B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  NSString v9;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerView);
  v2 = sub_10044B6D4(0);
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining + 8);
  *v3 = v2;
  v3[1] = v5;
  v6 = swift_bridgeObjectRelease(v4).n128_u64[0];
  v7 = *(void **)(v1 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemainingLabel);
  v8 = v3[1];
  if (v8)
  {
    swift_bridgeObjectRetain(v8);
    v9 = String._bridgeToObjectiveC()();
    v6 = swift_bridgeObjectRelease(v8).n128_u64[0];
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v7, "setText:", v9, *(double *)&v6);

  sub_1003C8B54();
}

id sub_100389944()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v0, "isViewLoaded", v8);
  if ((_DWORD)result)
  {
    if (objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
    {
      return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_tableView], "reloadData");
    }
    else
    {
      v12 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      v23 = static OS_dispatch_queue.main.getter(v12);
      v13 = swift_allocObject(&unk_100900288, 24, 7);
      *(_QWORD *)(v13 + 16) = v0;
      aBlock[4] = sub_10038B0B8;
      v25 = v13;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000147F0;
      aBlock[3] = &unk_1009002A0;
      v14 = _Block_copy(aBlock);
      v15 = v25;
      v16 = v1;
      swift_release(v15);
      static DispatchQoS.unspecified.getter(v17);
      aBlock[0] = _swiftEmptyArrayStorage;
      v18 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v19 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
      v20 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v2, v18);
      v21 = (void *)v23;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v14);
      _Block_release(v14);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
  return result;
}

void sub_100389BB0(void *a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;

  v3 = a1;
  if (!a1)
  {
    v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_viewModel];
    KeyPath = swift_getKeyPath(&unk_10071E3B0);
    v6 = swift_getKeyPath(&unk_10071E3D8);
    static Published.subscript.getter(&v15, v4, KeyPath, v6);
    swift_release(KeyPath);
    swift_release(v6);
    v3 = v15;
  }
  v7 = a1;
  v8 = objc_msgSend(v1, "traitCollection");
  v9 = objc_msgSend(v8, "userInterfaceStyle");

  if (v9 == (id)2)
  {
    v10 = objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", 0.0, 0.2);
    if (!v3)
      goto LABEL_8;
    v11 = v3;
    v3 = objc_msgSend(v11, "imageWithTint:", v10);

  }
  if (!v3)
    return;
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerView];
  v13 = OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImage;
  v14 = *(void **)(v12 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImage);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImage) = v3;
  v10 = v3;

  objc_msgSend(*(id *)(v12 + OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_coverImageView), "setImage:", *(_QWORD *)(v12 + v13));
LABEL_8:

}

uint64_t type metadata accessor for AudiobookTOCViewController()
{
  return objc_opt_self(_TtC5Books26AudiobookTOCViewController);
}

id sub_100389E78(void *a1, __n128 a2)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  void *v28;
  uint64_t v29;
  NSString v30;
  id result;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  NSString v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  BOOL v55;
  uint64_t v56;
  uint64_t v57;

  v4 = v2;
  v6 = IndexPath.row.getter(a2);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_viewModel);
  KeyPath = swift_getKeyPath(&unk_10071E290);
  v9 = swift_getKeyPath(&unk_10071E2B8);
  static Published.subscript.getter(&v57, v7, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = v57;
  if ((unint64_t)v57 >> 62)
  {
    if (v57 < 0)
      v56 = v57;
    else
      v56 = v57 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v57);
    v11 = _CocoaArrayWrapper.endIndex.getter(v56);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease(v10);
  if (v6 >= v11)
    return objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v12);

  if (!v13)
    return objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
  v14 = type metadata accessor for AudiobookTOCCell();
  v15 = swift_dynamicCastClass(v13, v14);
  if (!v15)
  {

    return objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
  }
  v16 = v15;
  v17 = swift_getKeyPath(&unk_10071E290);
  v18 = swift_getKeyPath(&unk_10071E2B8);
  static Published.subscript.getter(&v57, v7, v17, v18);
  swift_release(v17);
  swift_release(v18);
  v19 = v57;
  if ((v57 & 0xC000000000000001) == 0)
  {
    if (v6 < 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v6 < *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v17 = *(_QWORD *)(v57 + 8 * v6 + 32);
      swift_retain(v17);
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_46;
  }
  v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v57);
LABEL_10:
  swift_bridgeObjectRelease(v19);
  v20 = *(double *)(v17 + 32);
  v21 = swift_getKeyPath(&unk_10071E2D8);
  v22 = swift_getKeyPath(&unk_10071E300);
  static Published.subscript.getter(&v57, v7, v21, v22);
  swift_release(v21);
  swift_release(v22);
  v23 = v20 / *(float *)&v57;
  if (*(float *)&v57 <= 0.0)
    v23 = v20;
  v24 = *(_QWORD *)(v17 + 24);
  v25 = (_QWORD *)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_chapterTitle);
  v26 = *(_QWORD *)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_chapterTitle + 8);
  if (v23 < 0.0)
    v3 = 0.0;
  else
    v3 = v23;
  *v25 = *(_QWORD *)(v17 + 16);
  v25[1] = v24;
  swift_bridgeObjectRetain(v24);
  v27 = swift_bridgeObjectRelease(v26).n128_u64[0];
  v28 = *(void **)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_chapterTitleLabel);
  v29 = v25[1];
  if (v29)
  {
    swift_bridgeObjectRetain(v29);
    v30 = String._bridgeToObjectiveC()();
    v27 = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  else
  {
    v30 = 0;
  }
  objc_msgSend(v28, "setText:", v30, *(double *)&v27);

  result = objc_msgSend((id)objc_opt_self(NSString), "stringWithDuration:", v3);
  if (result)
  {
    v32 = result;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v35 = v34;

    v36 = (uint64_t *)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_chapterTime);
    v37 = *(_QWORD *)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_chapterTime + 8);
    *v36 = v33;
    v36[1] = v35;
    v38 = swift_bridgeObjectRelease(v37).n128_u64[0];
    v39 = *(void **)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_chapterTimeLabel);
    v40 = v36[1];
    if (v40)
    {
      swift_bridgeObjectRetain(v36[1]);
      v41 = String._bridgeToObjectiveC()();
      v38 = swift_bridgeObjectRelease(v40).n128_u64[0];
    }
    else
    {
      v41 = 0;
    }
    objc_msgSend(v39, "setText:", v41, *(double *)&v38);

    if (qword_1009CDDE8 == -1)
    {
LABEL_26:
      v42 = objc_msgSend((id)qword_100A1E450, "stringFromTimeInterval:", v3);
      if (v42)
      {
        v43 = v42;
        v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
        v46 = v45;

      }
      else
      {
        v44 = 0;
        v46 = 0;
      }
      v47 = (uint64_t *)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_accessibleChapterTime);
      v48 = *(_QWORD *)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_accessibleChapterTime + 8);
      *v47 = v44;
      v47[1] = v46;
      swift_bridgeObjectRelease(v48);
      v49 = swift_getKeyPath(&unk_10071E320);
      v50 = swift_getKeyPath(&unk_10071E348);
      static Published.subscript.getter(&v57, v7, v49, v50);
      swift_release(v49);
      swift_release(v50);
      if (v57 == v6)
      {
        v51 = swift_getKeyPath(&unk_10071E368);
        v52 = swift_getKeyPath(&unk_10071E390);
        static Published.subscript.getter(&v57, v7, v51, v52);
        swift_release(v51);
        swift_release(v52);
        v53 = OBJC_IVAR____TtC5Books16AudiobookTOCCell_nowPlayingState;
        if (v57 == 1)
        {
          *(_BYTE *)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_nowPlayingState) = 0;
LABEL_35:
          sub_10047A158();
          v55 = (*(_BYTE *)(v4 + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_lastPlayedChapterIndex + 8) & 1) != 0
             || v6 != *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_lastPlayedChapterIndex);
          *(_BYTE *)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_isBookmarkHidden) = v55;
          objc_msgSend(*(id *)(v16 + OBJC_IVAR____TtC5Books16AudiobookTOCCell_bookmarkImageView), "setHidden:");
          swift_release(v17);
          return (id)v16;
        }
        v54 = 1;
      }
      else
      {
        v53 = OBJC_IVAR____TtC5Books16AudiobookTOCCell_nowPlayingState;
        v54 = 2;
      }
      *(_BYTE *)(v16 + v53) = v54;
      goto LABEL_35;
    }
LABEL_46:
    swift_once(&qword_1009CDDE8, sub_1002CA940);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

void sub_10038A54C(void *a1)
{
  void *v1;
  id v2;
  id v3;
  double v4;
  double v5;
  double v6;

  v2 = objc_msgSend(a1, "panGestureRecognizer");
  v3 = objc_msgSend(v1, "view");
  objc_msgSend(v2, "velocityInView:", v3);
  v5 = v4;

  v6 = fabs(v5);
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v6 >= 1.84467441e19)
LABEL_7:
    __break(1u);
}

void sub_10038A660(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  int v10;
  char v11;
  double v12;

  v2 = v1;
  objc_msgSend(a1, "contentOffset");
  v5 = v4;
  if (qword_1009CE208 != -1)
    swift_once(&qword_1009CE208, sub_100386E44);
  v6 = *(double *)&qword_1009DE1D0;
  objc_msgSend(a1, "contentInset");
  v8 = v6 - v7;
  v9 = OBJC_IVAR____TtC5Books26AudiobookTOCViewController_scrollAtTop;
  v10 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_scrollAtTop);
  if (v10 == 2 || (((v5 < v8) ^ v10) & 1) != 0)
  {
    v11 = v5 < v8;
    sub_10038A54C(a1);
    sub_1003C5828(v11, v12);
    *(_BYTE *)(v2 + v9) = v11;
  }
}

void sub_10038A794(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100389BB0(v2);

  }
}

void sub_10038A7EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  NSString v16;
  char v17[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_viewModel);
    v6 = (char *)*(id *)(Strong + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerView);
    v7 = v5;
    v8 = sub_10044B6D4(0);
    v10 = v9;

    v11 = (uint64_t *)&v6[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining];
    v12 = *(_QWORD *)&v6[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining + 8];
    *v11 = v8;
    v11[1] = v10;
    v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
    v14 = *(void **)&v6[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemainingLabel];
    v15 = v11[1];
    if (v15)
    {
      swift_bridgeObjectRetain(v11[1]);
      v16 = String._bridgeToObjectiveC()();
      v13 = swift_bridgeObjectRelease(v15).n128_u64[0];
    }
    else
    {
      v16 = 0;
    }
    objc_msgSend(v14, "setText:", v16, *(double *)&v13);

    sub_1003C8B54();
    sub_100389944();

  }
}

void sub_10038A90C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_100388148();

  }
}

void sub_10038A95C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  __n128 v13;
  Class isa;
  uint64_t v15;
  _BYTE v16[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = *(id *)(Strong + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_tableView);
    v6 = objc_msgSend(v5, "window");

    if (v6)
    {
      v7 = sub_10004CFD4(&qword_1009DE368);
      v8 = *(_QWORD *)(type metadata accessor for IndexPath(0) - 8);
      v9 = swift_allocObject(v7, ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72), *(unsigned __int8 *)(v8 + 80) | 7);
      *(_OWORD *)(v9 + 16) = xmmword_10070CCA0;
      v10 = *(_QWORD *)&v4[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_viewModel];
      KeyPath = swift_getKeyPath(&unk_10071E320);
      v12 = swift_getKeyPath(&unk_10071E348);
      static Published.subscript.getter(&v15, v10, KeyPath, v12);
      swift_release(KeyPath);
      v13 = swift_release(v12);
      IndexPath.init(row:section:)(v15, 0, v13);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v5, "reloadRowsAtIndexPaths:withRowAnimation:", isa, 5, swift_bridgeObjectRelease(v9).n128_f64[0]);

    }
  }
}

void sub_10038AAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  NSString v16;
  char v17[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(void **)(Strong + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_viewModel);
    v6 = (char *)*(id *)(Strong + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerView);
    v7 = v5;
    v8 = sub_10044B6D4(0);
    v10 = v9;

    v11 = (uint64_t *)&v6[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining];
    v12 = *(_QWORD *)&v6[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemaining + 8];
    *v11 = v8;
    v11[1] = v10;
    v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
    v14 = *(void **)&v6[OBJC_IVAR____TtC5Books22AudiobookTOCHeaderView_timeRemainingLabel];
    v15 = v11[1];
    if (v15)
    {
      swift_bridgeObjectRetain(v11[1]);
      v16 = String._bridgeToObjectiveC()();
      v13 = swift_bridgeObjectRelease(v15).n128_u64[0];
    }
    else
    {
      v16 = 0;
    }
    objc_msgSend(v14, "setText:", v16, *(double *)&v13);

    sub_1003C8B54();
  }
}

void sub_10038ABF8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (_BYTE *)Strong;
    v6 = Strong + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_lastPlayedChapterIndex;
    if ((*(_BYTE *)(Strong + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_lastPlayedChapterIndex + 8) & 1) != 0
      || v2 != *(_QWORD *)v6)
    {
      *(_QWORD *)v6 = v2;
      *(_BYTE *)(v6 + 8) = 0;
      sub_100389944();
      v5[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_scrollAtTop] = 2;
    }

  }
}

void sub_10038AC8C()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  char *v7;

  v1 = &v0[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  v2 = OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerView;
  v3 = type metadata accessor for AudiobookTOCHeaderView();
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v3)), "init");
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v2] = v4;
  v5 = OBJC_IVAR____TtC5Books26AudiobookTOCViewController_tableView;
  v6 = objc_msgSend(objc_allocWithZone((Class)UITableView), "init");
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v0[v5] = v6;
  v7 = &v0[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_lastPlayedChapterIndex];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_headerHeightConstraint] = 0;
  v0[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_scrollAtTop] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books26AudiobookTOCViewController_cancellables] = &_swiftEmptySetSingleton;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/AudiobookTOCViewController.swift", 38, 2, 64, 0);
  __break(1u);
}

uint64_t sub_10038ADC0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_1009002D8, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_10038B0D4;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_1009002F0;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v18 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10038AFD4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_delegate);
  if (result)
  {
    v2 = result;
    objc_msgSend(*(id *)(result + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler), "goToChapterIndex:", IndexPath.row.getter());
    objc_msgSend(*(id *)(v2 + OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_tocVC), "dismissViewControllerAnimated:completion:", 1, 0);
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

uint64_t sub_10038B094()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10038B0B8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_tableView), "reloadData");
}

void sub_10038B0D4()
{
  uint64_t v0;

  sub_100389600(*(char **)(v0 + 16));
}

uint64_t sub_10038B0E4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10038B108(void **a1)
{
  uint64_t v1;

  sub_10038A794(a1, v1);
}

void sub_10038B110(uint64_t a1)
{
  uint64_t v1;

  sub_10038A7EC(a1, v1);
}

void sub_10038B118(uint64_t a1)
{
  uint64_t v1;

  sub_10038A90C(a1, v1);
}

void sub_10038B120(uint64_t a1)
{
  uint64_t v1;

  sub_10038A95C(a1, v1);
}

void sub_10038B128(uint64_t a1)
{
  uint64_t v1;

  sub_10038AAE0(a1, v1);
}

void sub_10038B130(uint64_t *a1)
{
  uint64_t v1;

  sub_10038ABF8(a1, v1);
}

uint64_t type metadata accessor for MainToolbarModuleFactory()
{
  return objc_opt_self(_TtC5Books24MainToolbarModuleFactory);
}

id static OS_os_log.carPlay.getter()
{
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  return (id)qword_1009DE420;
}

uint64_t sub_10038B1F8()
{
  uint64_t result;

  sub_100009B88();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x616C507261434B42, 0xE900000000000079);
  qword_1009DE420 = result;
  return result;
}

uint64_t sub_10038B258(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  int v32;
  id v33;
  uint64_t v34;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  id v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;

  v42 = a1;
  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  __chkstk_darwin(v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v36 - v14;
  v16 = String.LocalizationValue.init(stringLiteral:)(0x6F6974617272614ELL, 0xEF6465657053206ELL);
  static Locale.current.getter(v16);
  v41 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v41(v12, v15, v9);
  v17 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v40 = ObjCClassFromMetadata;
  v39 = (id)objc_opt_self(NSBundle);
  v19 = objc_msgSend(v39, "bundleForClass:", ObjCClassFromMetadata);
  v38 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v38(v5, v8, v2);
  v20 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v19, v5, "Title that appears in narration speed picker wheel", 50, 2);
  v22 = v21;
  v36 = *(void (**)(char *, uint64_t))(v3 + 8);
  v36(v8, v2);
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24 = v37;
  v23(v15, v37);
  *(_QWORD *)(v1 + 40) = v20;
  *(_QWORD *)(v1 + 48) = v22;
  v25 = String.LocalizationValue.init(stringLiteral:)(0x6465657053, 0xE500000000000000);
  static Locale.current.getter(v25);
  v41(v12, v15, v24);
  v26 = objc_msgSend(v39, "bundleForClass:", v40);
  v38(v5, v8, v2);
  v27 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v26, v5, "Short title that appears in narration speed picker wheel", 56, 2);
  v29 = v28;
  v36(v8, v2);
  v23(v15, v24);
  *(_QWORD *)(v1 + 56) = v27;
  *(_QWORD *)(v1 + 64) = v29;
  _s5Books17REActionMenuStateC22__observationRegistrar33_32ABA65274D463EF405FFF160E47F6ACLL11Observation0nF0Vvpfi_0();
  v30 = v42;
  *(_QWORD *)(v1 + 16) = v42;
  v31 = (void *)swift_unknownObjectRetain(v30);
  objc_msgSend(v31, "playbackRate");
  *(_DWORD *)(v1 + 32) = v32;
  v33 = objc_msgSend(v31, "playbackRates");
  v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v33, &type metadata for Float);

  swift_unknownObjectRelease(v31);
  *(_QWORD *)(v1 + 24) = v34;
  return v1;
}

float sub_10038B568()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071E6C0);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009DE710, type metadata accessor for NarrationSpeedViewModel, (uint64_t)&unk_10071E674);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(float *)(v0 + 32);
}

float sub_10038B5EC@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  float result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071E6C0);
  v7 = v3;
  v5 = sub_100008DB0(&qword_1009DE710, type metadata accessor for NarrationSpeedViewModel, (uint64_t)&unk_10071E674);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  result = *(float *)(v3 + 32);
  *a2 = result;
  return result;
}

void sub_10038B678(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[3];
  int v7;
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071E6C0);
  v6[2] = v3;
  v7 = v2;
  v8 = v3;
  v5 = sub_100008DB0(&qword_1009DE710, type metadata accessor for NarrationSpeedViewModel, (uint64_t)&unk_10071E674);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_10038CD28, v6, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
}

id sub_10038B728(uint64_t a1, float a2)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  __n128 v6;
  uint64_t v8;

  *(float *)(a1 + 32) = a2;
  v3 = *(void **)(a1 + 16);
  KeyPath = swift_getKeyPath(&unk_10071E6C0);
  v8 = a1;
  v5 = sub_100008DB0(&qword_1009DE710, type metadata accessor for NarrationSpeedViewModel, (uint64_t)&unk_10071E674);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  v6 = swift_release(KeyPath);
  v6.n128_u32[0] = *(_DWORD *)(a1 + 32);
  return objc_msgSend(v3, "setPlaybackRateTo:", v6.n128_f64[0]);
}

uint64_t sub_10038B7CC()
{
  _QWORD *v0;
  char *v1;
  uint64_t v2;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[8]);
  v1 = (char *)v0 + OBJC_IVAR____TtC5Books23NarrationSpeedViewModel___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*v0 + 48), *(unsigned __int16 *)(*v0 + 52));
}

uint64_t sub_10038B83C()
{
  return type metadata accessor for NarrationSpeedViewModel(0);
}

uint64_t type metadata accessor for NarrationSpeedViewModel(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009DE470, (uint64_t)&nominal type descriptor for NarrationSpeedViewModel);
}

uint64_t sub_10038B858(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.Int32 + 64;
  v4[3] = &unk_10071E5B0;
  v4[4] = &unk_10071E5B0;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for NarrationSpeedPopoverController(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009DE560, (uint64_t)&nominal type descriptor for NarrationSpeedPopoverController);
}

uint64_t sub_10038B90C(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_100A1E750);
}

uint64_t sub_10038B948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  char *v21;
  uint64_t v23;

  v6 = sub_10004CFD4(&qword_1009DE610);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009DE618);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v12);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 1;
  v13 = sub_10004CFD4(&qword_1009DE620);
  v14 = sub_10038BAEC(a1, a2, &v8[*(int *)(v13 + 44)]);
  v15 = static Edge.Set.top.getter(v14);
  v16 = v15;
  v17 = static Edge.Set.horizontal.getter(v15);
  v18 = Edge.Set.init(rawValue:)(0);
  v19 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v19 & v16) != v16)
    v18 = Edge.Set.init(rawValue:)(v18 | v16);
  v20 = Edge.Set.init(rawValue:)(v18);
  if (Edge.Set.init(rawValue:)(v20 & v17) != v17)
    LOBYTE(v18) = Edge.Set.init(rawValue:)(v18 | v17);
  sub_10000B5E4((uint64_t)v8, (uint64_t)v11, &qword_1009DE610);
  v21 = &v11[*(int *)(v9 + 36)];
  *v21 = v18;
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  v21[40] = 1;
  sub_100010960((uint64_t)v8, &qword_1009DE610);
  return sub_100025B3C((uint64_t)v11, a3, &qword_1009DE618);
}

uint64_t sub_10038BAEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  int v23;
  int v24;
  __int128 v25;
  char v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t KeyPath;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  __int128 v112;
  int v113;
  _QWORD v114[2];
  _BYTE v115[32];
  __int128 v116;
  __int128 v117;
  __int128 v118;
  _OWORD v119[2];
  _OWORD v120[2];
  char v121;
  char v122;
  char v123;
  char v124;
  __int128 v125;
  _OWORD v126[2];
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  _OWORD v131[3];

  v100 = a3;
  v94 = type metadata accessor for WheelPickerStyle(0);
  v91 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v90 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009DE628);
  v88 = *(_QWORD *)(v6 - 8);
  v89 = v6;
  __chkstk_darwin(v6);
  v87 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009DE630);
  v95 = *(_QWORD *)(v8 - 8);
  v96 = v8;
  __chkstk_darwin(v8);
  v92 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_10004CFD4(&qword_1009DE638);
  __chkstk_darwin(v86);
  v99 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v98 = (uint64_t)&v82 - v12;
  v84 = sub_10004CFD4(&qword_1009DE640);
  __chkstk_darwin(v84);
  v109 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_10004CFD4((uint64_t *)&unk_1009DE648);
  v111 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v93 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v83 = (char *)&v82 - v16;
  v18 = __chkstk_darwin(v17);
  v110 = (char *)&v82 - v19;
  v20 = static Axis.Set.horizontal.getter(v18);
  v21 = static Axis.Set.vertical.getter();
  v22 = Axis.Set.init(rawValue:)(0);
  v23 = Axis.Set.init(rawValue:)(v22);
  if (Axis.Set.init(rawValue:)(v23 & v20) != v20)
    v22 = Axis.Set.init(rawValue:)(v22 | v20);
  v24 = Axis.Set.init(rawValue:)(v22);
  if (Axis.Set.init(rawValue:)(v24 & v21) != v21)
    LOBYTE(v22) = Axis.Set.init(rawValue:)(v22 | v21);
  sub_10038C29C(a1, a2, (uint64_t)&v125);
  *(_QWORD *)&v85 = a1;
  *((_QWORD *)&v85 + 1) = a2;
  v25 = v125;
  v26 = v126[0];
  v27 = v127;
  v105 = BYTE2(v127);
  v106 = BYTE1(v127);
  v103 = v128;
  v104 = *((_QWORD *)&v127 + 1);
  v28 = BYTE8(v128);
  v107 = *((_QWORD *)&v126[1] + 1);
  v108 = v130;
  v29 = BYTE8(v130);
  v101 = *(_OWORD *)((char *)v126 + 8);
  v102 = v129;
  v30 = static Font.subheadline.getter();
  KeyPath = swift_getKeyPath(&unk_10071E690);
  v124 = v26;
  v123 = v27;
  v122 = v28;
  v121 = v29;
  v32 = static HierarchicalShapeStyle.secondary.getter(KeyPath);
  v115[0] = v22;
  *(_OWORD *)&v115[8] = v25;
  v115[24] = v124;
  v116 = v101;
  *(_QWORD *)&v117 = v107;
  BYTE8(v117) = v123;
  BYTE9(v117) = v106;
  BYTE10(v117) = v105;
  *(_QWORD *)&v118 = v104;
  *((_QWORD *)&v118 + 1) = v103;
  LOBYTE(v119[0]) = v122;
  *(_OWORD *)((char *)v119 + 8) = v102;
  *((_QWORD *)&v119[1] + 1) = v108;
  LOBYTE(v120[0]) = v121;
  *((_QWORD *)&v120[0] + 1) = KeyPath;
  *(_QWORD *)&v120[1] = v30;
  DWORD2(v120[1]) = v32;
  v33 = enum case for DynamicTypeSize.accessibility1(_:);
  v34 = type metadata accessor for DynamicTypeSize(0);
  v35 = (uint64_t)v109;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v109, v33, v34);
  v36 = sub_100008DB0(&qword_1009D88B0, (uint64_t (*)(uint64_t))&type metadata accessor for DynamicTypeSize, (uint64_t)&protocol conformance descriptor for DynamicTypeSize);
  result = dispatch thunk of static Equatable.== infix(_:_:)(v35, v35, v34, v36);
  if ((result & 1) != 0)
  {
    v38 = sub_10004CFD4(&qword_1009DE658);
    v39 = sub_10038CAB4();
    v40 = sub_100030B34(&qword_1009D8898, &qword_1009DE640, (uint64_t)&protocol conformance descriptor for PartialRangeThrough<A>);
    v41 = v83;
    View.dynamicTypeSize<A>(_:)(v35, v38, v84, v39, v40);
    sub_100010960(v35, &qword_1009DE640);
    v129 = v119[0];
    v130 = v119[1];
    v131[0] = v120[0];
    *(_OWORD *)((char *)v131 + 12) = *(_OWORD *)((char *)v120 + 12);
    v126[1] = v116;
    v127 = v117;
    v128 = v118;
    v125 = *(_OWORD *)v115;
    v126[0] = *(_OWORD *)&v115[16];
    sub_10038CBD4((uint64_t)&v125);
    v42 = v97;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v110, v41, v97);
    v43 = v85;
    *(_OWORD *)v115 = v85;
    sub_10004CFD4(&qword_1009DE6B0);
    State.wrappedValue.getter(&v112);
    v44 = v112;
    v45 = *(_QWORD *)(v112 + 40);
    v46 = *(_QWORD *)(v112 + 48);
    swift_bridgeObjectRetain(v46);
    swift_release(v44);
    v114[0] = v45;
    v114[1] = v46;
    v112 = v43;
    State.projectedValue.getter(v115);
    v47 = *(_OWORD *)v115;
    v48 = *(_QWORD *)&v115[16];
    v49 = swift_getKeyPath(&unk_10071E6C0);
    *(_OWORD *)v115 = v47;
    *(_QWORD *)&v115[16] = v48;
    v50 = sub_10004CFD4(&qword_1009DE6B8);
    Binding.subscript.getter(&v112, v49, v50);
    swift_release(v48);
    swift_release(*((_QWORD *)&v47 + 1));
    swift_release(v49);
    swift_release(v47);
    *(_OWORD *)v115 = v112;
    *(_DWORD *)&v115[16] = v113;
    __chkstk_darwin(v51);
    v52 = sub_10004CFD4(&qword_1009DE6C0);
    v53 = sub_10038CC88();
    v54 = sub_1001F2108();
    v55 = v87;
    v56 = Picker<>.init<A>(_:selection:content:)(v114, v115, sub_10038CC80, &v82 - 4, &type metadata for Float, v52, &type metadata for String, &protocol witness table for Float, v53, v54);
    v57 = v90;
    WheelPickerStyle.init()(v56);
    v58 = sub_100030B34(&qword_1009DE6D8, &qword_1009DE628, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
    v59 = v92;
    v60 = v89;
    v61 = v94;
    View.pickerStyle<A>(_:)(v57, v89, v94, v58, &protocol witness table for WheelPickerStyle);
    (*(void (**)(char *, uint64_t))(v91 + 8))(v57, v61);
    v62 = (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v55, v60);
    LOBYTE(v44) = static Edge.Set.top.getter(v62);
    v63 = EdgeInsets.init(_all:)(-8.0);
    v65 = v64;
    v67 = v66;
    v69 = v68;
    v71 = v95;
    v70 = v96;
    v72 = (uint64_t)v99;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v99, v59, v96);
    v73 = v72 + *(int *)(v86 + 36);
    *(_BYTE *)v73 = v44;
    *(double *)(v73 + 8) = v63;
    *(_QWORD *)(v73 + 16) = v65;
    *(_QWORD *)(v73 + 24) = v67;
    *(_QWORD *)(v73 + 32) = v69;
    *(_BYTE *)(v73 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v59, v70);
    v74 = v98;
    sub_100025B3C(v72, v98, &qword_1009DE638);
    v75 = v110;
    v76 = v111;
    v77 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
    v78 = v93;
    v77(v93, v110, v42);
    sub_10000B5E4(v74, v72, &qword_1009DE638);
    v79 = v100;
    v77(v100, v78, v42);
    v80 = sub_10004CFD4(&qword_1009DE6E0);
    sub_10000B5E4(v72, (uint64_t)&v79[*(int *)(v80 + 48)], &qword_1009DE638);
    sub_100010960(v74, &qword_1009DE638);
    v81 = *(void (**)(char *, uint64_t))(v76 + 8);
    v81(v75, v42);
    sub_100010960(v72, &qword_1009DE638);
    return ((uint64_t (*)(char *, uint64_t))v81)(v78, v42);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_10038C29C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t KeyPath;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v32 = a1;
  v33 = a2;
  sub_10004CFD4(&qword_1009DE6B0);
  State.wrappedValue.getter(&v34);
  v6 = v34;
  v8 = v34[5];
  v7 = v34[6];
  swift_bridgeObjectRetain(v7);
  swift_release(v6);
  v32 = v8;
  v33 = v7;
  v9 = sub_1001F2108();
  v31 = Text.init<A>(_:)(&v32, &type metadata for String, v9, v10);
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  KeyPath = swift_getKeyPath(&unk_10071E708);
  v32 = a1;
  v33 = a2;
  State.wrappedValue.getter(&v34);
  v18 = v34;
  v20 = v34[7];
  v19 = v34[8];
  swift_bridgeObjectRetain(v19);
  v21 = swift_release(v18);
  v32 = v20;
  v33 = v19;
  v22 = Text.init<A>(_:)(&v32, &type metadata for String, v9, v21);
  v24 = v23;
  v26 = v25;
  v28 = v27 & 1;
  v29 = swift_getKeyPath(&unk_10071E708);
  LOBYTE(v32) = v16;
  *(_QWORD *)a3 = v31;
  *(_QWORD *)(a3 + 8) = v12;
  *(_BYTE *)(a3 + 16) = v16;
  *(_QWORD *)(a3 + 24) = v14;
  *(_QWORD *)(a3 + 32) = KeyPath;
  *(_QWORD *)(a3 + 40) = 1;
  *(_BYTE *)(a3 + 48) = 0;
  *(_WORD *)(a3 + 49) = 257;
  *(_QWORD *)(a3 + 56) = v22;
  *(_QWORD *)(a3 + 64) = v24;
  *(_BYTE *)(a3 + 72) = v28;
  *(_QWORD *)(a3 + 80) = v26;
  *(_QWORD *)(a3 + 88) = v29;
  *(_QWORD *)(a3 + 96) = 2;
  *(_BYTE *)(a3 + 104) = 0;
  sub_1001F596C(v31, v12, v16);
  swift_bridgeObjectRetain(v14);
  swift_retain(KeyPath);
  sub_1001F596C(v22, v24, v28);
  swift_bridgeObjectRetain(v26);
  swift_retain(v29);
  sub_1001F5B28(v22, v24, v28);
  swift_release(v29);
  swift_bridgeObjectRelease(v26);
  sub_1001F5B28(v31, v12, v32);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  return result;
}

uint64_t sub_10038C484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  uint64_t v9;

  v8[0] = a1;
  v8[1] = a2;
  sub_10004CFD4(&qword_1009DE6B0);
  State.wrappedValue.getter(&v9);
  v2 = v9;
  v3 = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain(v3);
  swift_release(v2);
  v8[0] = v3;
  KeyPath = swift_getKeyPath(&unk_10071E6F0);
  v5 = sub_10004CFD4(&qword_1009DE6E8);
  v6 = sub_100030B34(&qword_1009DE6F0, &qword_1009DE6E8, (uint64_t)&protocol conformance descriptor for [A]);
  return ForEach<>.init(_:id:content:)(v8, KeyPath, sub_10038C564, 0, v5, &type metadata for Text, v6, &protocol witness table for Float, &protocol witness table for Text);
}

uint64_t sub_10038C564@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _BYTE *v15;
  int v16;
  Swift::String v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjCClassFromMetadata;
  id v30;
  uint64_t result;
  uint64_t v32;
  char v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10004CFD4(&qword_1009DE6F8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for LocalizedStringKey.StringInterpolation(0, v9);
  v13 = __chkstk_darwin(v12);
  v15 = &v35[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = *a1;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)(2, 1, v13);
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v17);
  v36 = v16;
  static Locale.autoupdatingCurrent.getter(v18);
  v19 = sub_10038CCE4();
  FloatingPointFormatStyle.init(locale:)(v6, &type metadata for Float, v19);
  v20 = sub_100030B34(&qword_1009DE708, &qword_1009DE6F8, (uint64_t)&protocol conformance descriptor for FloatingPointFormatStyle<A>);
  LocalizedStringKey.StringInterpolation.appendInterpolation<A>(_:format:)(&v36, v11, v7, v20, &protocol witness table for Float);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  v21._countAndFlagsBits = 38851;
  v21._object = (void *)0xA200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v21);
  v22 = LocalizedStringKey.init(stringInterpolation:)(v15);
  v24 = v23;
  LOBYTE(v11) = v25;
  v27 = v26;
  v28 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v28);
  v30 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  result = Text.init(_:tableName:bundle:comment:)(v22, v24, v11 & 1, v27, 0, 0, v30, "Narration speed popover wheel picker item in audiobook player. E.g. 0.5x, 1x, 2x, etc.", 86, 2);
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v32;
  *(_BYTE *)(a2 + 16) = v33 & 1;
  *(_QWORD *)(a2 + 24) = v34;
  return result;
}

uint64_t sub_10038C788@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_10038B948(*v1, v1[1], a1);
}

double sub_10038C790()
{
  double result;

  result = 250.0;
  xmmword_1009DE430 = xmmword_10071E540;
  return result;
}

id sub_10038C7A8(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  id result;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for NarrationSpeedViewModel(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = swift_unknownObjectRetain(a1);
  sub_10038B258(v6);
  v15 = v5;
  State.init(wrappedValue:)(&v16, &v15, v4);
  v7 = (id)UIHostingController.init(rootView:)(&v16);
  objc_msgSend(v7, "setModalPresentationStyle:", 7);
  objc_msgSend(v7, "setOverrideUserInterfaceStyle:", 2);
  v8 = qword_1009CE218;
  v9 = v7;
  if (v8 != -1)
    swift_once(&qword_1009CE218, sub_10038C790);
  objc_msgSend(v9, "setPreferredContentSize:", xmmword_1009DE430);

  result = objc_msgSend(v9, "view");
  if (result)
  {
    v11 = result;
    v12 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v11, "setBackgroundColor:", v12);

    v13 = objc_msgSend(v9, "popoverPresentationController");
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v13, "setSourceView:", a2);
      objc_msgSend(v14, "setDelegate:", v9);

    }
    swift_unknownObjectRelease(a1);

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10038C970()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/NarrationSpeedView.swift", 30, 2, 95, 0);
  __break(1u);
}

void sub_10038C9C8()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.NarrationSpeedPopoverController", 37, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_10038C9F4()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.NarrationSpeedPopoverController", 37, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_10038CA20()
{
  return type metadata accessor for NarrationSpeedPopoverController(0);
}

uint64_t sub_10038CA28()
{
  return -1;
}

uint64_t *assignWithCopy for NarrationSpeedView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a1[1];
  v7 = a2[1];
  a1[1] = v7;
  swift_retain(v7);
  swift_release(v6);
  return a1;
}

ValueMetadata *type metadata accessor for NarrationSpeedView()
{
  return &type metadata for NarrationSpeedView;
}

uint64_t sub_10038CA9C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086E65C, 1);
}

unint64_t sub_10038CAB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DE660;
  if (!qword_1009DE660)
  {
    v1 = sub_100030B74(&qword_1009DE658);
    sub_10038CB38();
    sub_100030B34(&qword_1009DE698, (uint64_t *)&unk_1009DE6A0, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DE660);
  }
  return result;
}

unint64_t sub_10038CB38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DE668;
  if (!qword_1009DE668)
  {
    v1 = sub_100030B74(&qword_1009DE670);
    sub_100030B34(&qword_1009DE678, (uint64_t *)&unk_1009DE680, (uint64_t)&protocol conformance descriptor for ViewThatFits<A>);
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DE668);
  }
  return result;
}

uint64_t sub_10038CBD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_BYTE *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 120);
  v10 = *(_QWORD *)(a1 + 128);
  sub_1001F5B28(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_release(v3);
  swift_bridgeObjectRelease(v2);
  sub_1001F5B28(v4, v5, v6);
  swift_release(v9);
  swift_release(v8);
  swift_bridgeObjectRelease(v7);
  swift_release(v10);
  return a1;
}

uint64_t sub_10038CC80()
{
  uint64_t v0;

  return sub_10038C484(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_10038CC88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DE6C8;
  if (!qword_1009DE6C8)
  {
    v1 = sub_100030B74(&qword_1009DE6C0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DE6C8);
  }
  return result;
}

unint64_t sub_10038CCE4()
{
  unint64_t result;

  result = qword_1009DE700;
  if (!qword_1009DE700)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Float, &type metadata for Float);
    atomic_store(result, (unint64_t *)&qword_1009DE700);
  }
  return result;
}

id sub_10038CD28()
{
  uint64_t v0;

  return sub_10038B728(*(_QWORD *)(v0 + 16), *(float *)(v0 + 24));
}

unint64_t sub_10038CD50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DE718;
  if (!qword_1009DE718)
  {
    v1 = sub_100030B74(&qword_1009DE618);
    sub_100030B34((unint64_t *)&unk_1009DE720, &qword_1009DE610, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DE718);
  }
  return result;
}

uint64_t WidgetService.setupState.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR___BKWidgetService__setupState));
}

id WidgetService.__allocating_init(serviceCenter:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_100013AF4(a1);

  return v4;
}

id WidgetService.init(serviceCenter:)(void *a1)
{
  id v2;

  v2 = sub_100013AF4(a1);

  return v2;
}

void sub_10038CE4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10038CEA4(v2);

  }
}

uint64_t sub_10038CEA4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int v23;
  uint64_t v24;
  NSObject *v25;
  _BOOL4 v26;
  uint8_t *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  os_log_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  uint64_t i;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  Swift::Int v73;
  Swift::Int v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  Swift::Int v83;
  Swift::Int v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  os_log_type_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  void *v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  int v136;
  int v137;
  uint64_t v138;
  int v139;
  char *v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint8_t *v144;
  os_log_t v145;
  uint64_t v146;
  int64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  int v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164[2];

  v3 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v3);
  v5 = (char *)&v142 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Calendar(0);
  v160 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v154 = (char *)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v8);
  v10 = (uint64_t)&v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Date(0);
  v153 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v152 = (char *)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v155 = (char *)&v142 - v14;
  v15 = sub_10004CFD4(&qword_1009DA330);
  __chkstk_darwin(v15);
  v159 = (char *)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009DE880);
  __chkstk_darwin(v17);
  v158 = (char *)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DateComponents(0);
  v156 = *(_QWORD *)(v19 - 8);
  v157 = v19;
  v20 = __chkstk_darwin(v19);
  v22 = (int64_t)&v142 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = static os_log_type_t.default.getter(v20);
  v24 = sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  v25 = static OS_os_log.widget.getter();
  v151 = v23;
  v26 = os_log_type_enabled(v25, (os_log_type_t)v23);
  v148 = v5;
  v149 = v24;
  if (!v26)
  {

    goto LABEL_19;
  }
  v145 = v25;
  v146 = v10;
  swift_bridgeObjectRetain_n(a1, 2);
  v27 = (uint8_t *)swift_slowAlloc(12, -1);
  v143 = swift_slowAlloc(32, -1);
  v164[0] = v143;
  v144 = v27;
  *(_DWORD *)v27 = 136315138;
  if ((unint64_t)a1 >> 62)
    goto LABEL_84;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v28 = _swiftEmptyArrayStorage;
    if (v10)
    {
      v162 = _swiftEmptyArrayStorage;
      v29 = &v162;
      sub_100366BDC(0, v10 & ~(v10 >> 63), 0);
      if (v10 < 0)
      {
        __break(1u);
        goto LABEL_89;
      }
      v147 = v22;
      v142 = v11;
      v30 = 0;
      v28 = v162;
      v31 = a1 & 0xC000000000000001;
      v32 = a1;
      do
      {
        if (v31)
          v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, a1);
        else
          v33 = *(id *)(a1 + 8 * v30 + 32);
        v34 = v33;
        v35 = v6;
        v36 = objc_msgSend(v33, "title", v142);
        if (v36)
        {
          v37 = v36;
          v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
          v40 = v39;

        }
        else
        {

          v38 = 0;
          v40 = 0;
        }
        v162 = v28;
        v42 = v28[2];
        v41 = v28[3];
        if (v42 >= v41 >> 1)
        {
          sub_100366BDC(v41 > 1, v42 + 1, 1);
          v28 = v162;
        }
        ++v30;
        v28[2] = v42 + 1;
        v43 = &v28[2 * v42];
        v43[4] = v38;
        v43[5] = v40;
        v6 = v35;
        a1 = v32;
      }
      while (v10 != v30);
      v11 = v142;
      v22 = v147;
    }
    v44 = v144;
    v45 = sub_10004CFD4(&qword_1009D2A80);
    v46 = Array.description.getter(v28, v45);
    v48 = v47;
    swift_bridgeObjectRelease(v28);
    v162 = (_QWORD *)sub_100040F58(v46, v48, v164);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, &v163, v44 + 4, v44 + 12);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v48);
    v49 = v145;
    _os_log_impl((void *)&_mh_execute_header, v145, (os_log_type_t)v151, "WidgetService: handleRecentBooksChange %s", v44, 0xCu);
    v50 = v143;
    swift_arrayDestroy(v143, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v50, -1, -1);
    swift_slowDealloc(v44, -1, -1);

    v10 = v146;
LABEL_19:
    v51 = v160;
    v52 = v158;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v158, 1, 1, v6);
    v53 = type metadata accessor for TimeZone(0);
    v54 = v159;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v159, 1, 1, v53);
    LOBYTE(v141) = 1;
    LOBYTE(v139) = 1;
    LOBYTE(v137) = 1;
    LOBYTE(v136) = 1;
    LOBYTE(v135) = 1;
    LOBYTE(v134) = 1;
    LOBYTE(v133) = 1;
    LOBYTE(v132) = 1;
    LOBYTE(v131) = 1;
    LOBYTE(v130) = 1;
    LOBYTE(v129) = 0;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v52, v54, 0, 1, 0, 1, 0, 1, -14, v129, 0, v130, 0, v131, 0, v132, 0, v133, 0,
      v134,
      0,
      v135,
      0,
      v136,
      0,
      v137,
      0,
      v139,
      0,
      v141);
    v164[0] = a1;
    v24 = v22;
    v55 = sub_10004CFD4((uint64_t *)&unk_1009E9FC0);
    v56 = sub_100030B34((unint64_t *)&unk_1009DE888, (uint64_t *)&unk_1009E9FC0, (uint64_t)&protocol conformance descriptor for [A]);
    if ((Collection.isNotEmpty.getter(v55, v56) & 1) == 0)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v156 + 8))(v24, v157);
    v57 = v154;
    v58 = static Calendar.current.getter();
    v22 = (int64_t)v152;
    Date.init()(v58);
    Calendar.date(byAdding:to:wrappingComponents:)(v24, v22, 0);
    v59 = v153;
    v1 = *(char **)(v153 + 8);
    ((void (*)(int64_t, uint64_t))v1)(v22, v11);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v57, v6);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v10, 1, v11) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v24, v157);
      return sub_100010960(v10, &qword_1009D7440);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v155, v10, v11);
    v29 = _swiftEmptyArrayStorage;
    v164[0] = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)a1 >> 62))
    {
      v61 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      goto LABEL_25;
    }
LABEL_89:
    v119 = a1 < 0 ? a1 : a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v61 = _CocoaArrayWrapper.endIndex.getter(v119);
LABEL_25:
    v147 = v24;
    v160 = (uint64_t)v29;
    if (v61)
    {
      if (v61 < 1)
        goto LABEL_105;
      for (i = 0; i != v61; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
          v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        else
          v65 = *(id *)(a1 + 8 * i + 32);
        v66 = v65;
        v67 = objc_msgSend(v65, "isSupplementalContent");
        if ((v67 & 1) != 0)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v67);
          v63 = *(_QWORD *)(v164[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v63);
          v64 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v66);
          specialized ContiguousArray._endMutation()(v64);
        }
      }
      v68 = swift_bridgeObjectRelease(a1);
      v22 = v164[0];
    }
    else
    {
      v68 = swift_bridgeObjectRelease(a1);
      v22 = (int64_t)_swiftEmptyArrayStorage;
    }
    __chkstk_darwin(v68);
    v140 = v155;
    swift_retain(v22);
    a1 = 0;
    v69 = (uint64_t)sub_100374280(sub_1003904EC, &v138, v22);
    v70 = v69;
    v71 = (unint64_t)v69 >> 62;
    if (!((unint64_t)v69 >> 62))
    {
      if (*(uint64_t *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10) >= 3)
        v72 = 3;
      else
        v72 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_41;
    }
    if (v69 < 0)
      v120 = v69;
    else
      v120 = v69 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v69);
    v24 = _CocoaArrayWrapper.endIndex.getter(v120);
    swift_bridgeObjectRelease(v70);
    swift_bridgeObjectRetain(v70);
    v10 = _CocoaArrayWrapper.endIndex.getter(v120);
    swift_bridgeObjectRelease(v70);
    if (v10 < 0)
      goto LABEL_115;
    v121 = v24 >= 3 ? 3 : v24;
    v72 = v24 >= 0 ? v121 : 3;
    swift_bridgeObjectRetain(v70);
    v122 = _CocoaArrayWrapper.endIndex.getter(v120);
    swift_bridgeObjectRelease(v70);
    if (v122 < v72)
      break;
LABEL_41:
    if ((v70 & 0xC000000000000001) != 0 && v72)
    {
      sub_100009E04(0, (unint64_t *)&unk_1009DB330, BSUIAsset_ptr);
      v73 = 0;
      do
      {
        v74 = v73 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v73);
        v73 = v74;
      }
      while (v72 != v74);
    }
    if (v71)
    {
      if (v70 < 0)
        v78 = v70;
      else
        v78 = v70 & 0xFFFFFFFFFFFFFF8;
      v79 = swift_bridgeObjectRetain(v70);
      v10 = _CocoaArrayWrapper.subscript.getter(0, v72, v78, v79);
      v24 = v80;
      v75 = v81;
      v76 = v82;
      swift_bridgeObjectRelease_n(v70, 2);
      if (v75 != v76 >> 1)
      {
LABEL_47:
        v77 = swift_release(v22);
        v22 = v10;
        goto LABEL_66;
      }
    }
    else
    {
      v75 = 0;
      v10 = v70 & 0xFFFFFFFFFFFFFF8;
      v24 = (v70 & 0xFFFFFFFFFFFFFF8) + 32;
      v76 = (2 * v72) | 1;
      if (v76 >> 1)
        goto LABEL_47;
    }
    LODWORD(v24) = v22 < 0 || (v22 & 0x4000000000000000) != 0;
    if ((_DWORD)v24 == 1)
      goto LABEL_106;
    if (*(uint64_t *)(v22 + 16) >= 1)
      v70 = 1;
    else
      v70 = *(_QWORD *)(v22 + 16);
LABEL_59:
    if ((v22 & 0xC000000000000001) != 0 && v70)
    {
      sub_100009E04(0, (unint64_t *)&unk_1009DB330, BSUIAsset_ptr);
      v83 = 0;
      do
      {
        v84 = v83 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v83);
        v83 = v84;
      }
      while (v70 != v84);
    }
    if ((_DWORD)v24)
    {
      v85 = swift_bridgeObjectRetain(v22);
      v86 = _CocoaArrayWrapper.subscript.getter(0, v70, v22, v85);
      v24 = v87;
      v75 = v88;
      v76 = v89;
      swift_unknownObjectRelease(v10);
      v77 = swift_release_n(v22, 2);
      v22 = v86;
    }
    else
    {
      v77 = swift_unknownObjectRelease(v10);
      v75 = 0;
      v24 = v22 + 32;
      v76 = (2 * v70) | 1;
    }
LABEL_66:
    if (!*(_QWORD *)&v150[OBJC_IVAR___BKWidgetService_widgetInfoManager])
    {
      v95 = static os_log_type_t.error.getter(v77);
      v96 = (void *)static OS_os_log.widget.getter();
      os_log(_:dso:log:_:_:)(v95, &_mh_execute_header, v96, "self.widgetInfoManager is uninitialized - cannot handle recent books change.", 76, 2, _swiftEmptyArrayStorage);
      swift_unknownObjectRelease(v22);

      (*(void (**)(int64_t, uint64_t))(v156 + 8))(v147, v157);
      return ((uint64_t (*)(char *, uint64_t))v1)(v155, v11);
    }
    v164[0] = (uint64_t)_swiftEmptyArrayStorage;
    v6 = v76 >> 1;
    swift_unknownObjectRetain(v22);
    if (v75 == v76 >> 1)
    {
LABEL_78:
      v97 = swift_unknownObjectRelease(v22);
      v98 = static os_log_type_t.default.getter(v97);
      v99 = static OS_os_log.widget.getter();
      v100 = v98;
      if (os_log_type_enabled(v99, v98))
      {
        v101 = v160;
        swift_bridgeObjectRetain_n(v160, 2);
        v102 = (uint8_t *)swift_slowAlloc(12, -1);
        v103 = swift_slowAlloc(32, -1);
        v164[0] = v103;
        *(_DWORD *)v102 = 136315138;
        v158 = (char *)(v102 + 4);
        v104 = sub_100009E04(0, (unint64_t *)&unk_1009DE870, BDSBookWidgetInfo_ptr);
        swift_bridgeObjectRetain(v101);
        v106 = Array.description.getter(v105, v104);
        v159 = v1;
        v107 = v11;
        v109 = v108;
        swift_bridgeObjectRelease(v101);
        v162 = (_QWORD *)sub_100040F58(v106, v109, v164);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, &v163, v158, v102 + 12);
        swift_bridgeObjectRelease_n(v101, 2);
        v110 = v109;
        v11 = v107;
        v1 = v159;
        swift_bridgeObjectRelease(v110);
        _os_log_impl((void *)&_mh_execute_header, v99, v100, "WidgetService: Saving %s", v102, 0xCu);
        swift_arrayDestroy(v103, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v103, -1, -1);
        swift_slowDealloc(v102, -1, -1);

        v111 = v157;
      }
      else
      {

        v111 = v157;
        v101 = v160;
      }
      v112 = type metadata accessor for TaskPriority(0);
      v113 = (uint64_t)v148;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v148, 1, 1, v112);
      v114 = (_QWORD *)swift_allocObject(&unk_100900540, 48, 7);
      v114[2] = 0;
      v114[3] = 0;
      v115 = v150;
      v114[4] = v150;
      v114[5] = v101;
      v116 = v115;
      v117 = sub_10030C02C(v113, (uint64_t)&unk_1009DE8A0, (uint64_t)v114);
      swift_unknownObjectRelease(v22);
      swift_release(v117);
      (*(void (**)(int64_t, uint64_t))(v156 + 8))(v147, v111);
      return ((uint64_t (*)(char *, uint64_t))v1)(v155, v11);
    }
    swift_unknownObjectRetain(v22);
    while (v75 < v6)
    {
      v162 = *(_QWORD **)(v24 + 8 * v75);
      v70 = v162;
      sub_10038DE38((id *)&v162, &v161);
      if (a1)
        goto LABEL_117;

      v92 = v161;
      if (v161)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v91);
        v94 = *(_QWORD *)((v164[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        v93 = *(_QWORD *)((v164[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v94 >= v93 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v93 > 1, v94 + 1, 1);
        v90 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v94, v92);
        specialized Array._endMutation()(v90);
      }
      if (v6 == ++v75)
      {
        swift_unknownObjectRelease(v22);
        v160 = v164[0];
        goto LABEL_78;
      }
    }
    __break(1u);
LABEL_84:
    if (a1 < 0)
      v118 = a1;
    else
      v118 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v10 = _CocoaArrayWrapper.endIndex.getter(v118);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  swift_bridgeObjectRetain(v22);
  v124 = _CocoaArrayWrapper.endIndex.getter(v123);
  swift_release(v22);
  swift_bridgeObjectRetain(v22);
  v70 = _CocoaArrayWrapper.endIndex.getter(v125);
  swift_release(v22);
  if (v70 < 0)
    goto LABEL_116;
  if (v124 >= 1)
    v126 = 1;
  else
    v126 = v124;
  if (v124 < 0)
    v70 = 1;
  else
    v70 = v126;
  swift_bridgeObjectRetain(v22);
  v128 = _CocoaArrayWrapper.endIndex.getter(v127);
  swift_release(v22);
  if (v128 >= v70)
    goto LABEL_59;
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
LABEL_117:
  swift_unknownObjectRelease(v22);

  result = swift_bridgeObjectRelease(v164[0]);
  __break(1u);
  return result;
}

uint64_t sub_10038DC90(id *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  char v17;
  uint64_t v19;

  v4 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v19 - v12;
  v14 = objc_msgSend(*a1, "lastEngagedDate");
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_5;
  }
  v15 = v14;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v6, v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_5:
    sub_100010960((uint64_t)v6, &qword_1009D7440);
    v17 = 0;
    return v17 & 1;
  }
  v16(v13, v6, v7);
  v17 = static Date.> infix(_:_:)(v13, a2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return v17 & 1;
}

id sub_10038DE38@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  id result;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  id *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;

  v3 = *a1;
  result = objc_msgSend(*a1, "assetID");
  if (!result)
    goto LABEL_31;
  v5 = result;
  v54 = a2;
  v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v53 = v6;

  v7 = objc_msgSend(v3, "cloudAssetType");
  if (v7)
  {
    v8 = v7;
    v9 = (void *)BDSCloudAssetTypeSideloadedUbiquity;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    if (v10 == v13 && v12 == v14)
      goto LABEL_15;
    v16 = v14;
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
    v18 = v9;

    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) != 0)
      goto LABEL_16;
  }
  v19 = objc_msgSend(v3, "cloudAssetType");
  if (v19)
  {
    v8 = v19;
    v9 = (void *)BDSCloudAssetTypeSideloadedLocal;
    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v12 = v21;
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    if (v20 != v22 || v12 != v23)
    {
      v25 = v23;
      v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v12, v22, v23, 0);
      v27 = v9;

      swift_bridgeObjectRelease(v12);
      swift_bridgeObjectRelease(v25);
      if ((v26 & 1) == 0)
        goto LABEL_14;
LABEL_16:
      v28 = objc_msgSend(v3, "fileURL");
      goto LABEL_17;
    }
LABEL_15:
    v29 = v9;

    swift_bridgeObjectRelease_n(v12, 2);
    goto LABEL_16;
  }
LABEL_14:
  v28 = objc_msgSend(v3, "coverURL");
LABEL_17:
  v30 = v28;
  v31 = v30;
  if (v30)
  {
    v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v34 = v33;

  }
  else
  {
    v32 = 0;
    v34 = 0;
  }
  v35 = objc_msgSend(v3, "title");
  if (v35)
  {
    v36 = v35;
    v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
    v39 = v38;

  }
  else
  {
    v37 = 0;
    v39 = 0;
  }
  v40 = objc_msgSend(v3, "pageProgressionDirection");
  if (v40)
  {
    v41 = v40;
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v44 = v43;

  }
  else
  {
    v42 = 0;
    v44 = 0;
  }
  v45 = objc_msgSend(v3, "cloudAssetType");
  v46 = objc_msgSend(v3, "contentType");
  if (v46 && (v47 = v46, v48 = Int.init(truncating:)(), v47, (unint64_t)(v48 - 1) <= 5))
    v49 = (id *)*(&off_100900570 + v48 - 1);
  else
    v49 = (id *)&BDSLibraryContentAssetTypeUnknown;
  v50 = *v49;
  v51 = objc_allocWithZone((Class)BDSBookWidgetInfo);
  result = sub_10038EE48(v52, v53, v37, v39, v32, v34, v42, v44, v45, v50);
  a2 = v54;
LABEL_31:
  *a2 = result;
  return result;
}

uint64_t sub_10038E184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;

  v5[2] = a4;
  v5[3] = a5;
  v7 = (_QWORD *)swift_task_alloc(dword_1009DE8B4);
  v5[4] = v7;
  *v7 = v5;
  v7[1] = sub_10038E1E8;
  v7[29] = a5;
  return swift_task_switch(sub_10038F000, 0, 0);
}

uint64_t sub_10038E1E8()
{
  int8x16_t **v0;
  int8x16_t *v1;
  int8x16_t *v2;
  int8x16_t *v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc((*v0)[2].i64[0]);
  v2 = (int8x16_t *)swift_task_alloc(dword_1009DE864);
  v1[2].i64[1] = (uint64_t)v2;
  v2->i64[0] = (uint64_t)v4;
  v2->i64[1] = (uint64_t)sub_10038E268;
  v2[4] = vextq_s8(v1[1], v1[1], 8uLL);
  return swift_task_switch(sub_10038E518, 0, 0);
}

uint64_t sub_10038E268()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10038E2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 32);
  v5 = a2;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 64) + 40);
  swift_unknownObjectRetain(a2);
  sub_100390628((uint64_t)&v5, v3);
  return swift_continuation_resume(v2);
}

id sub_10038E2FC@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id result;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  v4 = objc_msgSend(v1, "title");
  if (v4)
  {
    v5 = v4;
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = objc_msgSend(v2, "assetID");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13 = objc_msgSend(v2, "cloudAssetType");
  v14 = objc_msgSend(v2, "libraryContentAssetType");
  if (!v14)
    v14 = BDSLibraryContentAssetTypeUnknown;
  v15 = objc_msgSend(v2, "coverURL");
  if (v15)
  {
    v16 = v15;
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
    v25 = v18;
    v26 = v17;

  }
  else
  {
    v25 = 0;
    v26 = 0;
  }
  result = objc_msgSend(v2, "pageProgressionDirection");
  if (result)
  {
    v20 = result;
    v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v23 = v22;

    if (v21 == 7107698 && v23 == 0xE300000000000000)
    {
      result = (id)swift_bridgeObjectRelease(0xE300000000000000);
      v24 = 1;
    }
    else
    {
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, 7107698, 0xE300000000000000, 0);
      result = (id)swift_bridgeObjectRelease(v23);
    }
  }
  else
  {
    v24 = 0;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_QWORD *)(a1 + 32) = v10;
  *(_QWORD *)(a1 + 40) = v12;
  *(_QWORD *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = v26;
  *(_QWORD *)(a1 + 72) = v25;
  *(_BYTE *)(a1 + 80) = v24 & 1;
  return result;
}

uint64_t sub_10038E500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch(sub_10038E518, 0, 0);
}

uint64_t sub_10038E518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  const void *v21;
  os_log_type_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  Class isa;
  void *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;

  v2 = v1;
  v3 = *(void **)(*(_QWORD *)(v1 + 72) + OBJC_IVAR___BKWidgetService_widgetInfoManager);
  if (!v3)
  {
    v32 = static os_log_type_t.error.getter(a1);
    sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
    v33 = (void *)static OS_os_log.widget.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "self.widgetInfoManager is uninitialized. Unable to save bookInfos", 65, 2, _swiftEmptyArrayStorage);
LABEL_19:

    return (*(uint64_t (**)(void))(v2 + 8))();
  }
  v4 = *(_QWORD *)(v2 + 64);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v36 = *(_QWORD *)(v2 + 64);
    else
      v36 = v4 & 0xFFFFFFFFFFFFFF8;
    v37 = v3;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v36);
    swift_bridgeObjectRelease(v4);
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v3;
  }
  v7 = _swiftEmptyArrayStorage;
  v38 = v3;
  if (!v5)
  {
LABEL_14:
    v21 = (const void *)(v2 + 16);
    v22 = static os_log_type_t.default.getter(v6);
    sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
    v23 = static OS_os_log.widget.getter();
    v24 = v22;
    if (os_log_type_enabled(v23, v22))
    {
      swift_bridgeObjectRetain(v7);
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = (_QWORD *)swift_slowAlloc(32, -1);
      *(_DWORD *)v25 = 136315138;
      v40 = v26;
      swift_bridgeObjectRetain(v7);
      v28 = Array.description.getter(v27, &type metadata for String);
      v30 = v29;
      swift_bridgeObjectRelease(v7);
      v31 = v28;
      v21 = (const void *)(v2 + 16);
      *(_QWORD *)(v2 + 16) = sub_100040F58(v31, v30, (uint64_t *)&v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v2 + 16, v2 + 24, v25 + 4, v25 + 12);
      swift_bridgeObjectRelease(v30);
      swift_bridgeObjectRelease_n(v7, 2);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "WidgetService: trying to setBookWidgetInfo %s", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease(v7);
    }
    v33 = v38;
    sub_100009E04(0, (unint64_t *)&unk_1009DE870, BDSBookWidgetInfo_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)(v2 + 48) = sub_10038E908;
    *(_QWORD *)(v2 + 56) = 0;
    *(_QWORD *)(v2 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v2 + 24) = 1107296256;
    *(_QWORD *)(v2 + 32) = sub_10000B65C;
    *(_QWORD *)(v2 + 40) = &unk_100900508;
    v35 = _Block_copy(v21);
    objc_msgSend(v38, "setBookWidgetInfo:completion:", isa, v35);
    _Block_release(v35);

    goto LABEL_19;
  }
  v40 = _swiftEmptyArrayStorage;
  result = sub_100045E44(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v10 = v2;
    v7 = v40;
    v11 = v4 & 0xC000000000000001;
    v39 = *(_QWORD *)(v2 + 64) + 32;
    do
    {
      if (v11)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, *(_QWORD *)(v10 + 64));
      else
        v12 = *(id *)(v39 + 8 * v9);
      v13 = v12;
      v14 = objc_msgSend(v12, "assetID", v38);
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v17 = v16;

      v40 = v7;
      v19 = v7[2];
      v18 = v7[3];
      if (v19 >= v18 >> 1)
      {
        v6 = (id)sub_100045E44(v18 > 1, v19 + 1, 1);
        v7 = v40;
      }
      ++v9;
      v7[2] = v19 + 1;
      v20 = &v7[2 * v19];
      v20[4] = v15;
      v20[5] = v17;
    }
    while (v5 != v9);
    v2 = v10;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_10038E908(uint64_t a1)
{
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *log;
  uint64_t v10;
  _QWORD v11[3];
  _BYTE v12[8];
  uint64_t v13;

  if (a1)
  {
    v2 = static os_log_type_t.error.getter(a1);
    sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
    log = static OS_os_log.widget.getter();
    if (os_log_type_enabled(log, v2))
    {
      swift_errorRetain(a1);
      swift_errorRetain(a1);
      v3 = (uint8_t *)swift_slowAlloc(12, -1);
      v4 = swift_slowAlloc(32, -1);
      v13 = v4;
      *(_DWORD *)v3 = 136315138;
      swift_getErrorValue(a1, v12, v11);
      v5 = Error.localizedDescription.getter(v11[1], v11[2]);
      v7 = v6;
      v10 = sub_100040F58(v5, v6, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, v11, v3 + 4, v3 + 12);
      swift_bridgeObjectRelease(v7);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, log, v2, "WidgetService: setBookWidgetInfo %s", v3, 0xCu);
      swift_arrayDestroy(v4, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v4, -1, -1);
      swift_slowDealloc(v3, -1, -1);

      return;
    }
  }
  else
  {
    v8 = static os_log_type_t.default.getter(0);
    sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
    log = static OS_os_log.widget.getter();
    os_log(_:dso:log:_:_:)(v8, &_mh_execute_header, log, "WidgetService: setBookWidgetInfo succeeded", 42, 2, _swiftEmptyArrayStorage);
  }

}

void WidgetService.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.WidgetService", 19, "init()", 6, 0);
  __break(1u);
}

id WidgetService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetService();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10038EC18(uint64_t a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v9;
  os_log_type_t v10;
  NSObject *v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  _BYTE v19[8];
  uint64_t v20;

  if ((a2 & 1) != 0)
  {
    v9 = swift_errorRetain(a1);
    v10 = static os_log_type_t.error.getter(v9);
    sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
    v11 = static OS_os_log.widget.getter();
    if (os_log_type_enabled(v11, v10))
    {
      sub_10039067C(a1, 1);
      sub_10039067C(a1, 1);
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v20 = v13;
      *(_DWORD *)v12 = 136315138;
      swift_getErrorValue(a1, v19, v18);
      v14 = Error.localizedDescription.getter(v18[1], v18[2]);
      v16 = v15;
      v17 = sub_100040F58(v14, v15, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18, v12 + 4, v12 + 12);
      swift_bridgeObjectRelease(v16);
      sub_100390670(a1, 1);
      sub_100390670(a1, 1);
      _os_log_impl((void *)&_mh_execute_header, v11, v10, "WidgetService: error in getCurrentConfigurations %s", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    swift_errorRetain(a1);
    a3(a1, 1);
    sub_100390670(a1, 1);
    return sub_100390670(a1, 1);
  }
  else
  {
    v20 = a1;
    v5 = sub_10004CFD4(&qword_1009DE928);
    v6 = sub_100030B34((unint64_t *)&unk_1009DE930, &qword_1009DE928, (uint64_t)&protocol conformance descriptor for [A]);
    v7 = Collection.isNotEmpty.getter(v5, v6);
    return ((uint64_t (*)(_QWORD, _QWORD))a3)(v7 & 1, 0);
  }
}

id sub_10038EE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  void *v10;
  NSString v15;
  NSString v16;
  void *v17;
  void *v18;
  NSString v19;
  NSString v20;
  id v21;

  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (a4)
  {
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
    v18 = a9;
    v17 = a10;
    if (a6)
      goto LABEL_3;
LABEL_6:
    v19 = 0;
    if (a8)
      goto LABEL_4;
LABEL_7:
    v20 = 0;
    goto LABEL_8;
  }
  v16 = 0;
  v18 = a9;
  v17 = a10;
  if (!a6)
    goto LABEL_6;
LABEL_3:
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
  if (!a8)
    goto LABEL_7;
LABEL_4:
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a8);
LABEL_8:
  v21 = objc_msgSend(v10, "initWithAssetID:title:coverURL:pageProgressionDirection:cloudAssetType:libraryContentAssetType:", v15, v16, v19, v20, v18, v17);

  return v21;
}

uint64_t sub_10038EF68()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10038EF8C(uint64_t *a1)
{
  uint64_t v1;

  sub_10038CE4C(a1, v1);
}

uint64_t sub_10038EF94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10038EFB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10038EFDC(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_10038EC18(a1, a2 & 1, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_10038EFE8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 232) = a1;
  return swift_task_switch(sub_10038F000, 0, 0);
}

void sub_10038F000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char **v4;
  uint64_t *v5;
  __objc2_meth_list **p_opt_class_meths;
  unint64_t *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  os_log_type_t v16;
  NSObject *v17;
  uint64_t v18;
  unint64_t *v19;
  uint64_t *v20;
  __objc2_meth_list **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSString v27;
  id v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 232);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    *(_QWORD *)(v0 + 240) = v2;
    if (v2)
      goto LABEL_3;
LABEL_20:
    v34 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 232));
    (*(void (**)(__n128))(v0 + 8))(v34);
    return;
  }
  if (v1 < 0)
    v33 = *(_QWORD *)(v0 + 232);
  else
    v33 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v33);
  *(_QWORD *)(v0 + 240) = v2;
  if (!v2)
    goto LABEL_20;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v3 = 0;
    v4 = &selRef__teardownLocalViews;
    v5 = qword_100A1E5B0;
    p_opt_class_meths = &OBJC_PROTOCOL___ATConnectionDelegate.opt_class_meths;
    v7 = (unint64_t *)&qword_1009CEEB0;
    v35 = v0;
    while (1)
    {
      *(_QWORD *)(v0 + 248) = v3;
      v8 = *(_QWORD *)(v0 + 232);
      if ((v8 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v8);
      else
        v9 = *(id *)(v8 + 8 * v3 + 32);
      v10 = v9;
      *(_QWORD *)(v0 + 256) = v9;
      v11 = objc_msgSend(v9, v4[397]);
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v14 = v13;

      if (p_opt_class_meths[473] != (__objc2_meth_list *)-1)
        swift_once(&qword_1009CDEC8, sub_100334C38);
      sub_10003F198(v5, v5[3]);
      v15 = sub_1004BCB34(v12, v14, 1);
      if ((v15 & 1) == 0)
        break;
      v16 = static os_log_type_t.default.getter(v15);
      sub_100009E04(0, v7, OS_os_log_ptr);
      v17 = static OS_os_log.widget.getter();
      if (os_log_type_enabled(v17, v16))
      {
        swift_bridgeObjectRetain(v14);
        v18 = swift_slowAlloc(12, -1);
        v19 = v7;
        v20 = v5;
        v21 = p_opt_class_meths;
        v22 = swift_slowAlloc(32, -1);
        v36 = v22;
        *(_DWORD *)v18 = 136315138;
        swift_bridgeObjectRetain(v14);
        *(_QWORD *)(v18 + 4) = sub_100040F58(v12, v14, &v36);
        swift_bridgeObjectRelease_n(v14, 3);
        _os_log_impl((void *)&_mh_execute_header, v17, v16, "No need to pre-cache backdrop for assetID: %s because they already exist in cache.", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
        v23 = v22;
        p_opt_class_meths = v21;
        v5 = v20;
        v7 = v19;
        v0 = v35;
        swift_slowDealloc(v23, -1, -1);
        v24 = v18;
        v4 = &selRef__teardownLocalViews;
        swift_slowDealloc(v24, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease(v14);
      }
      v3 = *(_QWORD *)(v0 + 248) + 1;
      if (v3 == *(_QWORD *)(v0 + 240))
        goto LABEL_20;
    }
    v25 = v0 + 16;
    v26 = objc_allocWithZone((Class)BICDescribedImage);
    v27 = String._bridgeToObjectiveC()();
    v28 = objc_msgSend(v26, "initWithIdentifier:", v27, swift_bridgeObjectRelease(v14).n128_f64[0]);
    *(_QWORD *)(v0 + 264) = v28;

    objc_msgSend(v28, "setProcessingOptions:", 0);
    objc_msgSend(v28, "setImageSize:", CGSizeScaleToScreen(160.0, 160.0));
    objc_msgSend(v28, "setPriority:", 4);
    v29 = objc_msgSend((id)objc_opt_self(BCCacheManager), "defaultCacheManager");
    *(_QWORD *)(v0 + 272) = v29;
    *(_QWORD *)(v0 + 56) = v0 + 208;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_10038F400;
    v30 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 168) = _NSConcreteStackBlock;
    v31 = (_QWORD *)(v0 + 168);
    v31[1] = 0x40000000;
    v31[2] = sub_10038E2B0;
    v31[3] = &unk_100900558;
    v31[4] = v30;
    v32 = v28;
    objc_msgSend(v29, "fetchCGImageFor:forRequest:completion:", v32, v32, v31);
    swift_continuation_await(v25);
  }
}

uint64_t sub_10038F400()
{
  return swift_task_switch(sub_10038F44C, 0, 0);
}

uint64_t sub_10038F44C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD *v8;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  __n128 v16;
  char **v17;
  __objc2_meth_list **p_opt_class_meths;
  uint64_t *v19;
  uint64_t v20;
  char **v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  os_log_type_t v35;
  NSObject *v36;
  uint64_t v37;
  id v38;
  NSString v39;
  id v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;

  v1 = *(void **)(v0 + 208);
  v3 = *(void **)(v0 + 264);
  v2 = *(void **)(v0 + 272);
  v45 = v0 + 208;
  *(_QWORD *)(v0 + 280) = v1;

  if (v1
    && (v4 = objc_msgSend(v1, "image")) != 0
    && (v5 = v4,
        v6 = objc_msgSend(v4, "CGImage"),
        *(_QWORD *)(v0 + 288) = v6,
        v5,
        v6))
  {
    v7 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", v6);
    *(_QWORD *)(v0 + 296) = v7;
    sub_10038E2FC(v0 + 80);
    v46 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1009DB9E8 + dword_1009DB9E8);
    v8 = (_QWORD *)swift_task_alloc(unk_1009DB9EC);
    *(_QWORD *)(v0 + 304) = v8;
    *v8 = v0;
    v8[1] = sub_10038F95C;
    return v46((uint64_t)v7, v0 + 80);
  }
  else
  {
    v11 = *(void **)(v0 + 256);
    v10 = *(void **)(v0 + 264);
    v12 = static os_log_type_t.error.getter(v4);
    v13 = sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
    v14 = (void *)static OS_os_log.widget.getter();
    os_log(_:dso:log:_:_:)(v12, &_mh_execute_header, v14, "No treated cover generated. Either rawCover or bookInfo is nil.", 63, 2, _swiftEmptyArrayStorage);

    swift_unknownObjectRelease(v1);
    v15 = *(_QWORD *)(v0 + 248) + 1;
    if (v15 == *(_QWORD *)(v0 + 240))
    {
LABEL_6:
      v16 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 232));
      return (*(uint64_t (**)(__n128))(v0 + 8))(v16);
    }
    else
    {
      v17 = &selRef__teardownLocalViews;
      p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___ATConnectionDelegate + 48);
      v19 = qword_100A1E5B0;
      v47 = v0;
      while (1)
      {
        *(_QWORD *)(v0 + 248) = v15;
        v27 = *(_QWORD *)(v0 + 232);
        if ((v27 & 0xC000000000000001) != 0)
          v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v27);
        else
          v28 = *(id *)(v27 + 8 * v15 + 32);
        v29 = v28;
        *(_QWORD *)(v0 + 256) = v28;
        v30 = objc_msgSend(v28, v17[397], v45);
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30);
        v33 = v32;

        if (p_opt_class_meths[473] != (__objc2_meth_list *)-1)
          swift_once(&qword_1009CDEC8, sub_100334C38);
        sub_10003F198(v19, v19[3]);
        v34 = sub_1004BCB34(v31, v33, 1);
        if ((v34 & 1) == 0)
          break;
        v35 = static os_log_type_t.default.getter(v34);
        v36 = static OS_os_log.widget.getter();
        if (os_log_type_enabled(v36, v35))
        {
          swift_bridgeObjectRetain(v33);
          v20 = v13;
          v21 = v17;
          v22 = swift_slowAlloc(12, -1);
          v23 = v19;
          v24 = swift_slowAlloc(32, -1);
          v48 = v24;
          *(_DWORD *)v22 = 136315138;
          swift_bridgeObjectRetain(v33);
          *(_QWORD *)(v22 + 4) = sub_100040F58(v31, v33, &v48);
          swift_bridgeObjectRelease_n(v33, 3);
          _os_log_impl((void *)&_mh_execute_header, v36, v35, "No need to pre-cache backdrop for assetID: %s because they already exist in cache.", (uint8_t *)v22, 0xCu);
          swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
          v25 = v24;
          v19 = v23;
          swift_slowDealloc(v25, -1, -1);
          v26 = v22;
          v17 = v21;
          v13 = v20;
          p_opt_class_meths = &OBJC_PROTOCOL___ATConnectionDelegate.opt_class_meths;
          v0 = v47;
          swift_slowDealloc(v26, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease(v33);
        }
        v15 = *(_QWORD *)(v0 + 248) + 1;
        if (v15 == *(_QWORD *)(v0 + 240))
          goto LABEL_6;
      }
      v37 = v0 + 16;
      v38 = objc_allocWithZone((Class)BICDescribedImage);
      v39 = String._bridgeToObjectiveC()();
      v40 = objc_msgSend(v38, "initWithIdentifier:", v39, swift_bridgeObjectRelease(v33).n128_f64[0]);
      *(_QWORD *)(v0 + 264) = v40;

      objc_msgSend(v40, "setProcessingOptions:", 0);
      objc_msgSend(v40, "setImageSize:", CGSizeScaleToScreen(160.0, 160.0));
      objc_msgSend(v40, "setPriority:", 4);
      v41 = objc_msgSend((id)objc_opt_self(BCCacheManager), "defaultCacheManager");
      *(_QWORD *)(v0 + 272) = v41;
      *(_QWORD *)(v0 + 56) = v45;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_10038F400;
      v42 = swift_continuation_init(v0 + 16, 0);
      *(_QWORD *)(v0 + 168) = _NSConcreteStackBlock;
      v43 = (_QWORD *)(v0 + 168);
      v43[1] = 0x40000000;
      v43[2] = sub_10038E2B0;
      v43[3] = &unk_100900558;
      v43[4] = v42;
      v44 = v40;
      objc_msgSend(v41, "fetchCGImageFor:forRequest:completion:", v44, v44, v43);
      return swift_continuation_await(v37);
    }
  }
}

uint64_t sub_10038F95C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 304);
  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10038FDA4;
  else
    v3 = sub_10038F9C0;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10038F9C0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __n128 v6;
  char **v8;
  uint64_t *v9;
  __objc2_meth_list **p_opt_class_meths;
  uint64_t v11;
  uint64_t *v12;
  __objc2_meth_list **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  os_log_type_t v25;
  NSObject *v26;
  uint64_t v27;
  id v28;
  NSString v29;
  id v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;

  v2 = *(void **)(v0 + 288);
  v1 = *(void **)(v0 + 296);
  v3 = *(_QWORD *)(v0 + 280);
  v4 = *(void **)(v0 + 256);

  swift_unknownObjectRelease(v3);
  sub_1003905C8(v0 + 80);

  v5 = *(_QWORD *)(v0 + 248) + 1;
  if (v5 == *(_QWORD *)(v0 + 240))
  {
LABEL_2:
    v6 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 232));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
  }
  else
  {
    v8 = &selRef__teardownLocalViews;
    v9 = qword_100A1E5B0;
    p_opt_class_meths = &OBJC_PROTOCOL___ATConnectionDelegate.opt_class_meths;
    while (1)
    {
      *(_QWORD *)(v0 + 248) = v5;
      v17 = *(_QWORD *)(v0 + 232);
      if ((v17 & 0xC000000000000001) != 0)
        v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v17);
      else
        v18 = *(id *)(v17 + 8 * v5 + 32);
      v19 = v18;
      *(_QWORD *)(v0 + 256) = v18;
      v20 = objc_msgSend(v18, v8[397]);
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
      v23 = v22;

      if (p_opt_class_meths[473] != (__objc2_meth_list *)-1)
        swift_once(&qword_1009CDEC8, sub_100334C38);
      sub_10003F198(v9, v9[3]);
      v24 = sub_1004BCB34(v21, v23, 1);
      if ((v24 & 1) == 0)
        break;
      v25 = static os_log_type_t.default.getter(v24);
      sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
      v26 = static OS_os_log.widget.getter();
      if (os_log_type_enabled(v26, v25))
      {
        swift_bridgeObjectRetain(v23);
        v11 = swift_slowAlloc(12, -1);
        v12 = v9;
        v13 = p_opt_class_meths;
        v14 = swift_slowAlloc(32, -1);
        v35 = v14;
        *(_DWORD *)v11 = 136315138;
        swift_bridgeObjectRetain(v23);
        *(_QWORD *)(v11 + 4) = sub_100040F58(v21, v23, &v35);
        swift_bridgeObjectRelease_n(v23, 3);
        _os_log_impl((void *)&_mh_execute_header, v26, v25, "No need to pre-cache backdrop for assetID: %s because they already exist in cache.", (uint8_t *)v11, 0xCu);
        swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
        v15 = v14;
        p_opt_class_meths = v13;
        v9 = v12;
        swift_slowDealloc(v15, -1, -1);
        v16 = v11;
        v8 = &selRef__teardownLocalViews;
        swift_slowDealloc(v16, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease(v23);
      }
      v5 = *(_QWORD *)(v0 + 248) + 1;
      if (v5 == *(_QWORD *)(v0 + 240))
        goto LABEL_2;
    }
    v27 = v0 + 16;
    v28 = objc_allocWithZone((Class)BICDescribedImage);
    v29 = String._bridgeToObjectiveC()();
    v30 = objc_msgSend(v28, "initWithIdentifier:", v29, swift_bridgeObjectRelease(v23).n128_f64[0]);
    *(_QWORD *)(v0 + 264) = v30;

    objc_msgSend(v30, "setProcessingOptions:", 0);
    objc_msgSend(v30, "setImageSize:", CGSizeScaleToScreen(160.0, 160.0));
    objc_msgSend(v30, "setPriority:", 4);
    v31 = objc_msgSend((id)objc_opt_self(BCCacheManager), "defaultCacheManager");
    *(_QWORD *)(v0 + 272) = v31;
    *(_QWORD *)(v0 + 56) = v0 + 208;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_10038F400;
    v32 = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 168) = _NSConcreteStackBlock;
    v33 = (_QWORD *)(v0 + 168);
    v33[1] = 0x40000000;
    v33[2] = sub_10038E2B0;
    v33[3] = &unk_100900558;
    v33[4] = v32;
    v34 = v30;
    objc_msgSend(v31, "fetchCGImageFor:forRequest:completion:", v34, v34, v33);
    return swift_continuation_await(v27);
  }
}

uint64_t sub_10038FDA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  __n128 v20;
  char **v22;
  __objc2_meth_list **p_opt_class_meths;
  uint64_t *v24;
  uint64_t v25;
  char **v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  os_log_type_t v40;
  NSObject *v41;
  uint64_t v42;
  id v43;
  NSString v44;
  id v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  id v49;
  void *v50;
  uint64_t v51;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;

  v2 = *(_QWORD *)(v1 + 312);
  v3 = static os_log_type_t.error.getter(a1);
  v4 = sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  v5 = static OS_os_log.widget.getter();
  v6 = v3;
  v7 = os_log_type_enabled(v5, v3);
  swift_errorRetain(v2);
  swift_errorRetain(v2);
  v8 = *(_QWORD *)(v1 + 312);
  if (v7)
  {
    v51 = *(_QWORD *)(v1 + 280);
    v52 = *(void **)(v1 + 288);
    v50 = *(void **)(v1 + 264);
    v53 = *(void **)(v1 + 256);
    v54 = *(void **)(v1 + 296);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v56 = v10;
    *(_DWORD *)v9 = 136315138;
    *(_QWORD *)(v1 + 216) = v8;
    swift_errorRetain(v8);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    v12 = String.init<A>(describing:)(v1 + 216, v11);
    v14 = v13;
    *(_QWORD *)(v1 + 224) = sub_100040F58(v12, v13, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 224, v1 + 232, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v14);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to generate backdrop and cache the image. error: %s.", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_unknownObjectRelease(v51);
    sub_1003905C8(v1 + 80);

    swift_errorRelease(v8);
  }
  else
  {
    v16 = *(void **)(v1 + 288);
    v15 = *(void **)(v1 + 296);
    v17 = *(_QWORD *)(v1 + 280);
    v18 = *(void **)(v1 + 256);

    swift_unknownObjectRelease(v17);
    sub_1003905C8(v1 + 80);

    swift_errorRelease(v8);
    swift_errorRelease(v8);
    swift_errorRelease(v8);
  }
  v19 = *(_QWORD *)(v1 + 248) + 1;
  if (v19 == *(_QWORD *)(v1 + 240))
  {
LABEL_5:
    v20 = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 232));
    return (*(uint64_t (**)(__n128))(v1 + 8))(v20);
  }
  else
  {
    v22 = &selRef__teardownLocalViews;
    p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___ATConnectionDelegate + 48);
    v24 = qword_100A1E5B0;
    v55 = v1;
    while (1)
    {
      *(_QWORD *)(v1 + 248) = v19;
      v32 = *(_QWORD *)(v1 + 232);
      if ((v32 & 0xC000000000000001) != 0)
        v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v32);
      else
        v33 = *(id *)(v32 + 8 * v19 + 32);
      v34 = v33;
      *(_QWORD *)(v1 + 256) = v33;
      v35 = objc_msgSend(v33, v22[397], v50);
      v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
      v38 = v37;

      if (p_opt_class_meths[473] != (__objc2_meth_list *)-1)
        swift_once(&qword_1009CDEC8, sub_100334C38);
      sub_10003F198(v24, v24[3]);
      v39 = sub_1004BCB34(v36, v38, 1);
      if ((v39 & 1) == 0)
        break;
      v40 = static os_log_type_t.default.getter(v39);
      v41 = static OS_os_log.widget.getter();
      if (os_log_type_enabled(v41, v40))
      {
        swift_bridgeObjectRetain(v38);
        v25 = v4;
        v26 = v22;
        v27 = swift_slowAlloc(12, -1);
        v28 = v24;
        v29 = swift_slowAlloc(32, -1);
        v56 = v29;
        *(_DWORD *)v27 = 136315138;
        swift_bridgeObjectRetain(v38);
        *(_QWORD *)(v27 + 4) = sub_100040F58(v36, v38, &v56);
        swift_bridgeObjectRelease_n(v38, 3);
        _os_log_impl((void *)&_mh_execute_header, v41, v40, "No need to pre-cache backdrop for assetID: %s because they already exist in cache.", (uint8_t *)v27, 0xCu);
        swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
        v30 = v29;
        v24 = v28;
        swift_slowDealloc(v30, -1, -1);
        v31 = v27;
        v22 = v26;
        v4 = v25;
        p_opt_class_meths = &OBJC_PROTOCOL___ATConnectionDelegate.opt_class_meths;
        v1 = v55;
        swift_slowDealloc(v31, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease(v38);
      }
      v19 = *(_QWORD *)(v1 + 248) + 1;
      if (v19 == *(_QWORD *)(v1 + 240))
        goto LABEL_5;
    }
    v42 = v1 + 16;
    v43 = objc_allocWithZone((Class)BICDescribedImage);
    v44 = String._bridgeToObjectiveC()();
    v45 = objc_msgSend(v43, "initWithIdentifier:", v44, swift_bridgeObjectRelease(v38).n128_f64[0]);
    *(_QWORD *)(v1 + 264) = v45;

    objc_msgSend(v45, "setProcessingOptions:", 0);
    objc_msgSend(v45, "setImageSize:", CGSizeScaleToScreen(160.0, 160.0));
    objc_msgSend(v45, "setPriority:", 4);
    v46 = objc_msgSend((id)objc_opt_self(BCCacheManager), "defaultCacheManager");
    *(_QWORD *)(v1 + 272) = v46;
    *(_QWORD *)(v1 + 56) = v1 + 208;
    *(_QWORD *)(v1 + 16) = v1;
    *(_QWORD *)(v1 + 24) = sub_10038F400;
    v47 = swift_continuation_init(v1 + 16, 0);
    *(_QWORD *)(v1 + 168) = _NSConcreteStackBlock;
    v48 = (_QWORD *)(v1 + 168);
    v48[1] = 0x40000000;
    v48[2] = sub_10038E2B0;
    v48[3] = &unk_100900558;
    v48[4] = v47;
    v49 = v45;
    objc_msgSend(v46, "fetchCGImageFor:forRequest:completion:", v49, v49, v48);
    return swift_continuation_await(v42);
  }
}

uint64_t _s5Books13WidgetServiceC6player_18stateDidChangeFrom2toySo19BKAudiobookControls_p_So0J11PlayerStateVAItF_0()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  id v8;
  NSString v9;
  NSString v10;
  uint64_t v11;

  v0 = (void *)objc_opt_self(BKAudiobookPlayer);
  v1 = objc_msgSend(v0, "shared");
  v2 = objc_msgSend(v1, "currentAudiobook");

  if (!v2)
    goto LABEL_4;
  v3 = objc_msgSend(v2, "assetID");
  swift_unknownObjectRelease(v2);
  static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
  v5 = v4;

  v6 = objc_msgSend(v0, "shared");
  LOBYTE(v3) = objc_msgSend(v6, "isPlaying");

  if ((v3 & 1) == 0)
  {
    swift_bridgeObjectRelease(v5);
LABEL_4:
    v5 = 0xE000000000000000;
  }
  v7 = objc_msgSend((id)objc_opt_self(BUAppGroup), "books");
  v8 = objc_msgSend(v7, "userDefaults");

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "setValue:forKey:", v9, v10);

  type metadata accessor for WidgetCenter(0);
  v11 = static WidgetCenter.shared.getter();
  dispatch thunk of WidgetCenter.reloadAllTimelines()();
  return swift_release(v11);
}

uint64_t sub_1003904EC(id *a1)
{
  uint64_t v1;

  return sub_10038DC90(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_100390508()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10039053C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc(dword_1009DE89C);
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_10000AE34;
  v4[2] = v2;
  v4[3] = v3;
  v5 = (_QWORD *)swift_task_alloc(dword_1009DE8B4);
  v4[4] = v5;
  *v5 = v4;
  v5[1] = sub_10038E1E8;
  v5[29] = v3;
  return swift_task_switch(sub_10038F000, 0, 0);
}

uint64_t sub_1003905C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(void **)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 72);

  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);

  swift_bridgeObjectRelease(v5);
  return a1;
}

uint64_t sub_100390628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DE920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100390670(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRelease(a1);
  else
    return swift_bridgeObjectRelease(a1);
}

uint64_t sub_10039067C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
    return swift_errorRetain();
  else
    return swift_bridgeObjectRetain(a1);
}

uint64_t sub_100390688()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009DE940);
  sub_100048F64(v0, (uint64_t)qword_1009DE940);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000026, 0x800000010071E790);
}

uint64_t sub_100390704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t (*v33)(char *, unint64_t, uint64_t, __n128);
  __n128 v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  NSObject *v46;
  uint64_t v47;
  os_log_type_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, unint64_t, uint64_t, __n128);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v70 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v71 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URLQueryItem(0);
  v69 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v68 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009DE9E8);
  __chkstk_darwin(v10);
  v67 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009DE9F0);
  __chkstk_darwin(v12);
  v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for URLComponents(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init(url:resolvingAgainstBaseURL:)(v1, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100010960((uint64_t)v14, &qword_1009DE9F0);
    goto LABEL_22;
  }
  v65 = v3;
  v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  v20 = URLComponents.scheme.getter(v19);
  if (!v21)
    goto LABEL_21;
  v22 = v21;
  if (v20 == 0x6F6F626F69647561 && v21 == 0xE90000000000006BLL)
  {
    v23 = swift_bridgeObjectRelease(0xE90000000000006BLL);
  }
  else
  {
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, 0x6F6F626F69647561, 0xE90000000000006BLL, 0);
    v23 = swift_bridgeObjectRelease(v22);
    if ((v24 & 1) == 0)
      goto LABEL_21;
  }
  v25 = URLComponents.host.getter(v23);
  if (!v26)
    goto LABEL_21;
  v27 = v26;
  if (v25 == 0x62696C616964656DLL && v26 == 0xEC00000079726172)
  {
    v28 = swift_bridgeObjectRelease(0xEC00000079726172);
    goto LABEL_13;
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, 0x62696C616964656DLL, 0xEC00000079726172, 0);
  v28 = swift_bridgeObjectRelease(v27);
  if ((v29 & 1) == 0)
  {
LABEL_21:
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v3 = v65;
    goto LABEL_22;
  }
LABEL_13:
  v30 = URLComponents.queryItems.getter(v28);
  if (!v30)
    goto LABEL_21;
  v61 = v1;
  v62 = v30;
  v66 = v5;
  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v32 = v30 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
    v33 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v69 + 16);
    v63 = *(_QWORD *)(v69 + 72);
    v64 = v33;
    v34 = swift_bridgeObjectRetain(v30);
    v35 = v68;
    while (1)
    {
      v36 = v64(v35, v32, v8, v34);
      v37 = URLQueryItem.name.getter(v36);
      v39 = v38;
      if (v37 == 0x7469546D75626C61 && v38 == 0xEA0000000000656CLL)
      {
        swift_bridgeObjectRelease(v62);
        v5 = v66;
        v1 = v61;
        v41 = v69;
        v57 = 0xEA0000000000656CLL;
        goto LABEL_32;
      }
      v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v37, v38, 0x7469546D75626C61, 0xEA0000000000656CLL, 0);
      swift_bridgeObjectRelease(v39);
      if ((v40 & 1) != 0)
        break;
      v35 = v68;
      v41 = v69;
      (*(void (**)(char *, uint64_t))(v69 + 8))(v68, v8);
      v32 += v63;
      if (!--v31)
      {
        swift_bridgeObjectRelease(v62);
        v42 = 1;
        v3 = v65;
        v5 = v66;
        v1 = v61;
        goto LABEL_33;
      }
    }
    v1 = v61;
    v57 = v62;
    v5 = v66;
    v41 = v69;
LABEL_32:
    swift_bridgeObjectRelease(v57);
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v67, v68, v8);
    v42 = 0;
    v3 = v65;
  }
  else
  {
    v42 = 1;
    v3 = v65;
    v5 = v66;
    v1 = v61;
    v41 = v69;
  }
LABEL_33:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v67, v42, 1, v8);
  swift_bridgeObjectRelease(v62);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v67, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    sub_100010960(v67, &qword_1009DE9E8);
  }
  else
  {
    v55 = URLQueryItem.value.getter();
    v68 = (char *)v8;
    v59 = v58;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    (*(void (**)(uint64_t, char *))(v69 + 8))(v67, v68);
    if (v59)
      return v55;
  }
LABEL_22:
  if (qword_1009CE228 != -1)
    swift_once(&qword_1009CE228, sub_100390688);
  v43 = sub_100048F64(v5, (uint64_t)qword_1009DE940);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v71, v43, v5);
  v44 = v70;
  v45 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v70, v1, v2);
  v46 = Logger.logObject.getter(v45);
  v47 = v3;
  v48 = static os_log_type_t.error.getter(v46);
  if (os_log_type_enabled(v46, v48))
  {
    v66 = v5;
    v49 = v2;
    v50 = (uint8_t *)swift_slowAlloc(12, -1);
    v51 = swift_slowAlloc(32, -1);
    v73 = v51;
    v69 = v6;
    *(_DWORD *)v50 = 136315138;
    v52 = URL.description.getter();
    v54 = v53;
    v72 = sub_100040F58(v52, v53, &v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73, v50 + 4, v50 + 12);
    swift_bridgeObjectRelease(v54);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v49);
    _os_log_impl((void *)&_mh_execute_header, v46, v48, "Invalid media library URL %s", v50, 0xCu);
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v51, -1, -1);
    swift_slowDealloc(v50, -1, -1);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v66);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v2);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v71, v5);
  }
  return 0;
}

uint64_t sub_100390DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t (*v36)(char *, unint64_t, uint64_t, __n128);
  __n128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  char *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  id v57;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  NSString v65;
  id v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t (*v70)(char *, unint64_t, uint64_t, __n128);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v1 = v0;
  v2 = type metadata accessor for URL(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v78 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for URLQueryItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v75 = v9;
  v76 = v10;
  __chkstk_darwin(v9);
  v74 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009DE9E8);
  __chkstk_darwin(v12);
  v73 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009DE9F0);
  __chkstk_darwin(v14);
  v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for URLComponents(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v1;
  URLComponents.init(url:resolvingAgainstBaseURL:)(v1, 0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100010960((uint64_t)v16, &qword_1009DE9F0);
    goto LABEL_22;
  }
  v71 = v3;
  v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  v22 = URLComponents.scheme.getter(v21);
  if (!v23)
    goto LABEL_21;
  v24 = v23;
  if (v22 == 0x6F6F626F69647561 && v23 == 0xE90000000000006BLL)
  {
    v25 = swift_bridgeObjectRelease(0xE90000000000006BLL);
  }
  else
  {
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, 0x6F6F626F69647561, 0xE90000000000006BLL, 0);
    v25 = swift_bridgeObjectRelease(v24);
    if ((v26 & 1) == 0)
      goto LABEL_21;
  }
  v27 = URLComponents.host.getter(v25);
  if (!v28)
    goto LABEL_21;
  v29 = v28;
  if (v27 != 0x62696C616964656DLL || v28 != 0xEC00000079726172)
  {
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, 0x62696C616964656DLL, 0xEC00000079726172, 0);
    v30 = swift_bridgeObjectRelease(v29);
    if ((v31 & 1) != 0)
      goto LABEL_13;
LABEL_21:
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    v3 = v71;
    goto LABEL_22;
  }
  v30 = swift_bridgeObjectRelease(0xEC00000079726172);
LABEL_13:
  v68 = v20;
  v32 = URLComponents.queryItems.getter(v30);
  v3 = v71;
  if (v32)
  {
    v33 = v32;
    v72 = v6;
    v34 = *(_QWORD *)(v32 + 16);
    if (v34)
    {
      v35 = v32 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
      v36 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v76 + 16);
      v69 = *(_QWORD *)(v76 + 72);
      v70 = v36;
      v67 = v32;
      v37 = swift_bridgeObjectRetain(v32);
      v38 = v74;
      v39 = v75;
      while (1)
      {
        v40 = v70(v38, v35, v39, v37);
        v41 = URLQueryItem.name.getter(v40);
        v43 = v42;
        if (v41 == 0x4964756F6C437369 && v42 == 0xEB000000006D6574)
        {
          v33 = v67;
          swift_bridgeObjectRelease(v67);
          v6 = v72;
          v39 = v75;
          v60 = 0xEB000000006D6574;
          goto LABEL_33;
        }
        v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, 0x4964756F6C437369, 0xEB000000006D6574, 0);
        swift_bridgeObjectRelease(v43);
        if ((v44 & 1) != 0)
          break;
        v39 = v75;
        v38 = v74;
        (*(void (**)(char *, uint64_t))(v76 + 8))(v74, v75);
        v35 += v69;
        if (!--v34)
        {
          v33 = v67;
          swift_bridgeObjectRelease(v67);
          v45 = 1;
          v3 = v71;
          v6 = v72;
          goto LABEL_30;
        }
      }
      v33 = v67;
      v60 = v67;
      v6 = v72;
      v39 = v75;
LABEL_33:
      swift_bridgeObjectRelease(v60);
      v59 = v76;
      (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v73, v74, v39);
      v45 = 0;
      v3 = v71;
    }
    else
    {
      v45 = 1;
      v6 = v72;
      v39 = v75;
LABEL_30:
      v59 = v76;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v73, v45, 1, v39);
    swift_bridgeObjectRelease(v33);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v73, 1, v39) == 1)
    {
      sub_100010960(v73, &qword_1009DE9E8);
    }
    else
    {
      v61 = v73;
      URLQueryItem.value.getter();
      v63 = v62;
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v61, v75);
      if (v63)
      {
        v64 = objc_allocWithZone((Class)NSString);
        v65 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v63);
        v66 = objc_msgSend(v64, "initWithString:", v65);

        v57 = objc_msgSend(v66, "BOOLValue");
        (*(void (**)(char *, uint64_t))(v18 + 8))(v68, v17);
        return (uint64_t)v57;
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v68, v17);
LABEL_22:
  if (qword_1009CE228 != -1)
    swift_once(&qword_1009CE228, sub_100390688);
  v46 = sub_100048F64(v6, (uint64_t)qword_1009DE940);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v78, v46, v6);
  v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v77, v2);
  v48 = Logger.logObject.getter(v47);
  v49 = v5;
  v50 = static os_log_type_t.error.getter(v48);
  if (os_log_type_enabled(v48, v50))
  {
    v72 = v6;
    v51 = (uint8_t *)swift_slowAlloc(12, -1);
    v52 = v2;
    v53 = swift_slowAlloc(32, -1);
    v80 = v53;
    v77 = v7;
    *(_DWORD *)v51 = 136315138;
    v54 = URL.description.getter();
    v56 = v55;
    v79 = sub_100040F58(v54, v55, &v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v51 + 4, v51 + 12);
    swift_bridgeObjectRelease(v56);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v49, v52);
    _os_log_impl((void *)&_mh_execute_header, v48, v50, "Invalid media library URL  %s", v51, 0xCu);
    swift_arrayDestroy(v53, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1, -1);
    swift_slowDealloc(v51, -1, -1);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v72);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v49, v2);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v78, v6);
  }
  return 2;
}

uint64_t type metadata accessor for AudiobookNowPlayingMediaLibraryService()
{
  return objc_opt_self(_TtC5Books38AudiobookNowPlayingMediaLibraryService);
}

id sub_1003915DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  NSString v17;
  id v18;
  __int128 v20;
  __int128 v21;
  _BYTE v22[40];

  v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_optionsStoreIDKey + 8);
  *(_QWORD *)&v20 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_optionsStoreIDKey);
  *((_QWORD *)&v20 + 1) = v7;
  swift_bridgeObjectRetain(v7);
  AnyHashable.init<A>(_:)(&v20, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a4 + 16) && (v8 = sub_1000561E8((uint64_t)v22), (v9 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(a4 + 56) + 32 * v8, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_1000569AC((uint64_t)v22);
  v10 = *((_QWORD *)&v21 + 1);
  if (*((_QWORD *)&v21 + 1))
  {
    v11 = sub_10003F198(&v20, *((uint64_t *)&v21 + 1));
    v12 = *(_QWORD *)(v10 - 8);
    __chkstk_darwin(v11);
    v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
    _s5Books15CurrentPageViewVwxx_0(&v20);
  }
  else
  {
    v15 = 0;
  }
  v16 = (void *)objc_opt_self(MPMediaQuery);
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v16, "bk_queryWithStoreID:albumTitle:isCloudItem:", v15, v17, a3 & 1, v20);
  swift_unknownObjectRelease(v15);

  return v18;
}

id sub_100391778(uint64_t a1, char *a2, char *a3, int a4, uint64_t a5, void (*a6)(char *, uint64_t, uint64_t), int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint8_t *v32;
  uint8_t *v33;
  void (*v34)(char *, uint64_t);
  id result;
  void *v36;
  uint64_t v37;
  char *v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  void *v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint8_t *v48;
  uint8_t *v49;
  id v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint8_t *v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint8_t *v63;
  uint8_t *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  id v76;
  uint8_t *v77;
  uint8_t *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t, uint64_t);
  id v83;
  int v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t aBlock[3];
  void *v92;
  double (*v93)(uint64_t, uint64_t, double, double);
  uint64_t v94;
  _OWORD v95[3];

  v87 = a8;
  v86 = a7;
  v85 = a5;
  v84 = a4;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v89 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v88 = (char *)&v77 - v18;
  __chkstk_darwin(v17);
  v20 = (char *)&v77 - v19;
  v83 = *(id *)&a2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_persistenceController];
  objc_msgSend(v83, "registerAEPersistencePlugins");
  v21 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_audiobook];
  *(_QWORD *)&a2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_audiobook] = a1;
  swift_unknownObjectRelease(v21);
  v22 = qword_1009CE228;
  swift_unknownObjectRetain(a1);
  if (v22 != -1)
    swift_once(&qword_1009CE228, sub_100390688);
  v23 = sub_100048F64(v13, (uint64_t)qword_1009DE940);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v81 = v23;
  v82 = v24;
  v25 = ((uint64_t (*)(char *))v24)(v20);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.info.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = a2;
    v29 = a3;
    v30 = a1;
    v31 = a6;
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "helper set: fetching bookmark time", v32, 2u);
    v33 = v32;
    a6 = v31;
    a1 = v30;
    a3 = v29;
    a2 = v28;
    swift_slowDealloc(v33, -1, -1);
  }

  v34 = *(void (**)(char *, uint64_t))(v14 + 8);
  v34(v20, v13);
  *(_QWORD *)&v95[0] = 0xD000000000000020;
  *((_QWORD *)&v95[0] + 1) = 0x80000001007C44B0;
  AnyHashable.init<A>(_:)(v95, &type metadata for String, &protocol witness table for String);
  result = objc_msgSend(a3, "options");
  if (result)
  {
    v36 = result;
    v37 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(result, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v38 = v88;
    if (*(_QWORD *)(v37 + 16) && (v39 = sub_1000561E8((uint64_t)aBlock), (v40 & 1) != 0))
      sub_10004CD0C(*(_QWORD *)(v37 + 56) + 32 * v39, (uint64_t)v95);
    else
      memset(v95, 0, 32);
    swift_bridgeObjectRelease(v37);
    sub_1000569AC((uint64_t)aBlock);
    sub_10004AA7C((uint64_t)v95, (uint64_t)aBlock);
    if (v92)
    {
      v41 = sub_100009E04(0, (unint64_t *)&unk_1009DE9D8, BKAudioLocation_ptr);
      if ((swift_dynamicCast(&v90, aBlock, (char *)&type metadata for Any + 8, v41, 6) & 1) != 0)
      {
        v89 = a3;
        v42 = (void *)v90;
        v82(v38, v81, v13);
        v43 = v42;
        v44 = Logger.logObject.getter(v43);
        v45 = static os_log_type_t.info.getter(v44);
        v46 = v45;
        if (os_log_type_enabled(v44, v45))
        {
          v47 = swift_slowAlloc(12, -1);
          LODWORD(v81) = v46;
          v48 = (uint8_t *)v47;
          v80 = swift_slowAlloc(32, -1);
          aBlock[0] = v80;
          v82 = a6;
          v78 = v48;
          *(_DWORD *)v48 = 136315138;
          v49 = v48 + 12;
          v77 = v48 + 4;
          v50 = objc_msgSend(v43, "description");
          v51 = a2;
          v52 = static String._unconditionallyBridgeFromObjectiveC(_:)(v50);
          v79 = v34;
          v54 = v53;

          v55 = v52;
          a2 = v51;
          v90 = sub_100040F58(v55, v54, aBlock);
          v56 = v49;
          a6 = v82;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, aBlock, v77, v56);

          swift_bridgeObjectRelease(v54);
          v57 = v78;
          _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v81, "opening to BKAudioLocation %s", v78, 0xCu);
          v58 = v80;
          swift_arrayDestroy(v80, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v58, -1, -1);
          swift_slowDealloc(v57, -1, -1);

          v79(v88, v13);
        }
        else
        {

          v34(v38, v13);
        }
        objc_msgSend(v83, "audiobookTimeForLocation:audiobook:", v43, a1);
        v72 = v71;
        sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
        v73 = swift_allocObject(&unk_100900710, 96, 7);
        *(_BYTE *)(v73 + 16) = v84;
        v74 = v89;
        *(_QWORD *)(v73 + 24) = a2;
        *(_QWORD *)(v73 + 32) = v74;
        *(_QWORD *)(v73 + 40) = v85;
        *(_QWORD *)(v73 + 48) = a6;
        *(_BYTE *)(v73 + 56) = v86;
        *(_QWORD *)(v73 + 64) = v87;
        *(_QWORD *)(v73 + 72) = a9;
        *(_QWORD *)(v73 + 80) = a1;
        *(_QWORD *)(v73 + 88) = v72;
        swift_bridgeObjectRetain(a9);
        swift_unknownObjectRetain(a1);
        v75 = a2;
        v76 = v74;
        swift_bridgeObjectRetain(a6);
        static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1003957CC, v73);

        swift_release(v73);
        return (id)sub_100010960((uint64_t)v95, (uint64_t *)&unk_1009D04E0);
      }
    }
    else
    {
      sub_100010960((uint64_t)aBlock, (uint64_t *)&unk_1009D04E0);
    }
    v59 = ((uint64_t (*)(char *, uint64_t, uint64_t))v82)(v89, v81, v13);
    v60 = Logger.logObject.getter(v59);
    v61 = static os_log_type_t.info.getter(v60);
    if (os_log_type_enabled(v60, v61))
    {
      v62 = a6;
      v63 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v63 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v61, "checking persistence controller for bookmark time", v63, 2u);
      v64 = v63;
      a6 = v62;
      swift_slowDealloc(v64, -1, -1);
    }

    v34(v89, v13);
    v65 = swift_allocObject(&unk_1009006C0, 88, 7);
    *(_BYTE *)(v65 + 16) = v84;
    *(_QWORD *)(v65 + 24) = a2;
    *(_QWORD *)(v65 + 32) = a3;
    *(_QWORD *)(v65 + 40) = v85;
    *(_QWORD *)(v65 + 48) = a6;
    *(_BYTE *)(v65 + 56) = v86;
    *(_QWORD *)(v65 + 64) = v87;
    *(_QWORD *)(v65 + 72) = a9;
    *(_QWORD *)(v65 + 80) = a1;
    v93 = sub_100395738;
    v94 = v65;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1002A7DA4;
    v92 = &unk_1009006D8;
    v66 = _Block_copy(aBlock);
    v67 = v94;
    swift_bridgeObjectRetain(a9);
    swift_unknownObjectRetain(a1);
    v68 = a2;
    v69 = a3;
    swift_bridgeObjectRetain(a6);
    *(_QWORD *)&v70 = swift_release(v67).n128_u64[0];
    objc_msgSend(v83, "bookmarkTimeForAudiobook:completion:", a1, v66, v70);
    _Block_release(v66);
    return (id)sub_100010960((uint64_t)v95, (uint64_t *)&unk_1009D04E0);
  }
  __break(1u);
  return result;
}

double sub_100391EC4(double a1, double a2, uint64_t a3, uint64_t a4, char a5, void *a6, void *a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  double v19;
  double v20;
  uint64_t v21;
  id v22;
  id v23;
  double result;

  v19 = a1 - a2;
  if (v19 < 0.0)
    v20 = 0.0;
  else
    v20 = v19;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v21 = swift_allocObject(&unk_100900738, 104, 7);
  *(_BYTE *)(v21 + 16) = a5;
  *(_QWORD *)(v21 + 24) = a6;
  *(_QWORD *)(v21 + 32) = a7;
  *(_QWORD *)(v21 + 40) = a8;
  *(_QWORD *)(v21 + 48) = a9;
  *(_BYTE *)(v21 + 56) = a10;
  *(_QWORD *)(v21 + 64) = a11;
  *(_QWORD *)(v21 + 72) = a12;
  *(_QWORD *)(v21 + 80) = a13;
  *(double *)(v21 + 88) = v20;
  *(_QWORD *)(v21 + 96) = a4;
  v22 = a6;
  v23 = a7;
  swift_bridgeObjectRetain(a9);
  swift_bridgeObjectRetain(a12);
  swift_unknownObjectRetain(a13);
  swift_errorRetain(a4);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1003957CC, v21);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_100391FD8(void *a1, void *a2, void *a3, int a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  void *v34;
  id v35;
  Class isa;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD aBlock[5];
  uint64_t v54;
  _QWORD v55[2];
  __int128 v56;
  __int128 v57;

  v51 = a5;
  v52 = a6;
  v50 = a4;
  v49 = a1;
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE228 != -1)
    swift_once(&qword_1009CE228, sub_100390688);
  v17 = a8;
  v18 = sub_100048F64(v13, (uint64_t)qword_1009DE940);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v18, v13);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.info.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "setHelper produceAudiobook", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEHelperNumberSupplementalContentAssetIDs);
  v25 = v24;
  v55[0] = v23;
  v55[1] = v24;
  swift_bridgeObjectRetain(v24);
  AnyHashable.init<A>(_:)(v55, &type metadata for String, &protocol witness table for String);
  v26 = objc_msgSend(a2, "options");
  if (v26)
  {
    v27 = v26;
    v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v26, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    swift_bridgeObjectRelease(v25);

    if (*(_QWORD *)(v28 + 16) && (v29 = sub_1000561E8((uint64_t)aBlock), (v30 & 1) != 0))
    {
      sub_10004CD0C(*(_QWORD *)(v28 + 56) + 32 * v29, (uint64_t)&v56);
    }
    else
    {
      v56 = 0u;
      v57 = 0u;
    }
    swift_bridgeObjectRelease(v28);
    sub_1000569AC((uint64_t)aBlock);
    if (*((_QWORD *)&v57 + 1))
    {
      v31 = sub_10004CFD4((uint64_t *)&unk_1009DE9C8);
      if (swift_dynamicCast(v55, &v56, (char *)&type metadata for Any + 8, v31, 6))
      {
        v32 = (_QWORD *)v55[0];
        v33 = a7;
        v34 = v49;
LABEL_15:
        v35 = v34;
        sub_10004CFD4(&qword_1009DE9C0);
        isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v32);
        v37 = objc_msgSend((id)objc_opt_self(BKMLAudiobookIdentifier), "identifierFromMediaQuery:supplementalAssetIdentifiers:", v35, isa);

        v38 = objc_msgSend(objc_allocWithZone((Class)BKMLAudiobookProducer), "initWithStoreDemoMode:", 0);
        v39 = swift_allocObject(&unk_1009005F8, 24, 7);
        swift_unknownObjectWeakInit(v39 + 16, a3);
        v40 = swift_allocObject(&unk_100900620, 104, 7);
        *(_QWORD *)(v40 + 16) = v39;
        *(_QWORD *)(v40 + 24) = v35;
        *(_QWORD *)(v40 + 32) = a3;
        *(_QWORD *)(v40 + 40) = a2;
        *(_BYTE *)(v40 + 48) = v50;
        v41 = v52;
        *(_QWORD *)(v40 + 56) = v51;
        *(_QWORD *)(v40 + 64) = v41;
        *(_BYTE *)(v40 + 72) = v33;
        *(_QWORD *)(v40 + 80) = v17;
        *(_QWORD *)(v40 + 88) = a9;
        *(_QWORD *)(v40 + 96) = v37;
        aBlock[4] = sub_100395654;
        v54 = v40;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10034502C;
        aBlock[3] = &unk_100900638;
        v42 = _Block_copy(aBlock);
        v43 = v54;
        swift_bridgeObjectRetain(a9);
        v44 = v37;
        v45 = v35;
        v46 = v44;
        v47 = a3;
        v48 = a2;
        swift_bridgeObjectRetain(v41);
        objc_msgSend(v38, "audiobookForIdentifier:completion:", v46, v42, swift_release(v43).n128_f64[0]);
        _Block_release(v42);

        return;
      }
    }
    else
    {
      sub_100010960((uint64_t)&v56, (uint64_t *)&unk_1009D04E0);
    }
    v33 = a7;
    v34 = v49;
    v32 = _swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_1003923F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, int a7, void *a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, void *a13)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *Strong;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  const void *v44;
  void *v45;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t (*v59)(char *, uint64_t);
  id v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t aBlock[5];
  uint64_t v78;
  _QWORD v79[3];
  char v80[8];
  uint64_t v81;
  _BYTE v82[32];

  v70 = a8;
  v69 = a7;
  v72 = a5;
  v73 = a6;
  v71 = a4;
  v16 = type metadata accessor for Logger(0);
  v76 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchWorkItemFlags(0);
  v75 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = (_QWORD *)type metadata accessor for DispatchQoS(0);
  v22 = *(v74 - 1);
  __chkstk_darwin(v74);
  v24 = (char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v82, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v26 = Strong;
    if (!a2 && a1)
    {
      v67 = v19;
      v66 = a11;
      v65 = a10;
      v64 = a9;
      v27 = *(_QWORD *)&Strong[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_audiobook];
      *(_QWORD *)&Strong[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_audiobook] = a1;
      swift_unknownObjectRetain_n(a1, 2);
      swift_unknownObjectRelease(v27);
      v28 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      v76 = static OS_dispatch_queue.main.getter(v28);
      v29 = swift_allocObject(&unk_1009005F8, 24, 7);
      swift_unknownObjectWeakInit(v29 + 16, v26);
      v30 = swift_allocObject(&unk_100900670, 104, 7);
      v68 = v22;
      v32 = v71;
      v31 = v72;
      *(_QWORD *)(v30 + 16) = v29;
      *(_QWORD *)(v30 + 24) = v32;
      v33 = v73;
      *(_QWORD *)(v30 + 32) = v31;
      *(_QWORD *)(v30 + 40) = v33;
      *(_BYTE *)(v30 + 48) = v69;
      v34 = v64;
      *(_QWORD *)(v30 + 56) = v70;
      *(_QWORD *)(v30 + 64) = v34;
      *(_BYTE *)(v30 + 72) = v65;
      *(_QWORD *)(v30 + 80) = v66;
      *(_QWORD *)(v30 + 88) = a12;
      *(_QWORD *)(v30 + 96) = a1;
      aBlock[4] = (uint64_t)sub_1003956F0;
      v78 = v30;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000147F0;
      aBlock[3] = (uint64_t)&unk_100900688;
      v70 = _Block_copy(aBlock);
      v35 = v78;
      swift_bridgeObjectRetain(a12);
      swift_unknownObjectRetain(a1);
      v36 = v32;
      v37 = v31;
      v38 = v33;
      swift_bridgeObjectRetain(v34);
      swift_release(v35);
      static DispatchQoS.unspecified.getter(v39);
      aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
      v40 = sub_100008E8C();
      v41 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
      v42 = sub_100065324();
      v43 = v67;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v41, v42, v67, v40);
      v44 = v70;
      v45 = (void *)v76;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v24, v21, v70);
      _Block_release(v44);
      swift_unknownObjectRelease(a1);

      (*(void (**)(char *, uint64_t))(v75 + 8))(v21, v43);
      return (*(uint64_t (**)(char *, _QWORD *))(v68 + 8))(v24, v74);
    }

  }
  if (qword_1009CE228 != -1)
    swift_once(&qword_1009CE228, sub_100390688);
  v47 = sub_100048F64(v16, (uint64_t)qword_1009DE940);
  v48 = v76;
  (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v18, v47, v16);
  swift_errorRetain(a2);
  v49 = a13;
  swift_errorRetain(a2);
  v50 = v49;
  v51 = Logger.logObject.getter(v50);
  v52 = static os_log_type_t.error.getter(v51);
  if (os_log_type_enabled(v51, v52))
  {
    v53 = swift_slowAlloc(22, -1);
    v54 = swift_slowAlloc(8, -1);
    v55 = swift_slowAlloc(32, -1);
    aBlock[0] = v55;
    *(_DWORD *)v53 = 136315394;
    v74 = (_QWORD *)v54;
    v75 = v55;
    if (a2)
    {
      swift_getErrorValue(a2, v80, v79);
      v56 = Error.localizedDescription.getter(v79[1], v79[2]);
      v58 = v57;
    }
    else
    {
      v56 = 0;
      v58 = 0xE000000000000000;
    }
    v81 = sub_100040F58(v56, v58, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v53 + 4, v53 + 12);
    swift_bridgeObjectRelease(v58);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    *(_WORD *)(v53 + 12) = 2112;
    v81 = (uint64_t)v50;
    v60 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v53 + 14, v53 + 22);
    v61 = v74;
    *v74 = v50;

    _os_log_impl((void *)&_mh_execute_header, v51, v52, "Error %s producing audiobook from identifer %@", (uint8_t *)v53, 0x16u);
    v62 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v61, 1, v62);
    swift_slowDealloc(v61, -1, -1);
    v63 = v75;
    swift_arrayDestroy(v75, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v63, -1, -1);
    swift_slowDealloc(v53, -1, -1);

    v59 = *(uint64_t (**)(char *, uint64_t))(v76 + 8);
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);

    v59 = *(uint64_t (**)(char *, uint64_t))(v48 + 8);
  }
  return v59(v18, v16);
}

void sub_1003929B8(uint64_t a1, void *a2, char *a3, char *a4, int a5, uint64_t a6, void (*a7)(char *, uint64_t, uint64_t), int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18;
  uint64_t Strong;
  void *v20;
  _BYTE v21[24];

  v18 = a1 + 16;
  swift_beginAccess(a1 + 16, v21, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v18);
  if (Strong)
  {
    v20 = (void *)Strong;
    sub_100392A7C(a2);
    sub_100391778(a11, a3, a4, a5, a6, a7, a8, a9, a10);

  }
}

void sub_100392A7C(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v2 = objc_msgSend(a1, "items");
  if (!v2)
    goto LABEL_13;
  v3 = v2;
  v4 = sub_100009E04(0, &qword_1009DA810, MPMediaItem_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if (!((unint64_t)v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_12;
  }
  if (v5 < 0)
    v9 = v5;
  else
    v9 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v10 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v5);
  if (!v10)
  {
LABEL_12:
    swift_bridgeObjectRelease(v5);
LABEL_13:
    v8 = 0;
    goto LABEL_14;
  }
LABEL_4:
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(v5 + 32);
LABEL_7:
    v7 = v6;
    swift_bridgeObjectRelease(v5);
    v8 = objc_msgSend((id)objc_opt_self(MPMediaItem), "bk_audibleDRMGroupIDForItem:", v7);

LABEL_14:
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_audiobookControls), "setAudibleDRMGroupID:", v8);
    return;
  }
  __break(1u);
}

uint64_t sub_100392BAC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  double v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  __n128 v42;
  void **v44;
  void **v45;
  uint64_t v46;
  void **aBlock;
  uint64_t v48;
  void (*v49)(uint64_t, void *);
  void *v50;
  void (*v51)(void *);
  uint64_t v52;
  _BYTE v53[8];

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject(&unk_1009005F8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16, v2);
  swift_unknownObjectWeakInit(v53, v2);
  v13 = swift_allocObject(&unk_1009005F8, 24, 7);
  swift_unknownObjectWeakInit(v13 + 16, v2);
  v51 = sub_100395BD0;
  v52 = v13;
  aBlock = _NSConcreteStackBlock;
  v48 = 1107296256;
  v49 = sub_1001EDBF0;
  v50 = &unk_100900750;
  v14 = _Block_copy(&aBlock);
  objc_msgSend(a1, "helperCoverImageWithCompletion:", v14, swift_release(v52).n128_f64[0]);
  _Block_release(v14);
  objc_msgSend(a1, "previewDuration");
  v16 = v15;
  v17 = objc_msgSend(a1, "previewURL");
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v17);

  v18 = objc_msgSend(a1, "helperMetadataForKey:needsCoordination:", AEHelperStringMetadataStoreIDKey, 1);
  if (v18)
  {
    v19 = v18;
    v20 = objc_opt_self(NSString);
    v21 = swift_dynamicCastObjCClass(v19, v20);
    if (v21)
    {
      aBlock = 0;
      v48 = 0;
      static String._conditionallyBridgeFromObjectiveC(_:result:)(v21, &aBlock);

      v22 = v48;
      if (v48)
      {
        v45 = aBlock;
        v46 = v9;
        v23 = objc_msgSend(a1, "helperMetadataForKey:needsCoordination:", AEHelperStringMetadataTitleKey, 1);
        if (v23)
        {
          v24 = v23;
          v25 = objc_opt_self(NSString);
          v26 = swift_dynamicCastObjCClass(v24, v25);
          if (v26)
          {
            aBlock = 0;
            v48 = 0;
            static String._conditionallyBridgeFromObjectiveC(_:result:)(v26, &aBlock);

            v27 = v48;
            if (v48)
            {
              v44 = aBlock;
              v28 = objc_msgSend(a1, "helperMetadataForKey:needsCoordination:", AEHelperStringMetadataAuthorKey, 1);
              if (v28)
              {
                v29 = v28;
                v30 = objc_opt_self(NSString);
                v31 = swift_dynamicCastObjCClass(v29, v30);
                if (v31)
                {
                  aBlock = 0;
                  v48 = 0;
                  static String._conditionallyBridgeFromObjectiveC(_:result:)(v31, &aBlock);

                  v32 = v48;
                  if (v48)
                  {
                    v33 = (uint64_t)aBlock;
                    v34 = objc_msgSend(a1, "lockupProfileDictionary");
                    v35 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v34, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

                    v36 = objc_msgSend(a1, "mAsset");
                    sub_100393460(v16, (uint64_t)v11, (uint64_t)v45, v22, (uint64_t)v44, v27, v33, v32, v35, (uint64_t)v36, (uint64_t)v53, (uint64_t)sub_100395BC8, v12);
                    swift_bridgeObjectRelease(v32);
                    swift_bridgeObjectRelease(v35);
                    swift_unknownObjectRelease(v36);
                    swift_release(v12);
                    swift_bridgeObjectRelease(v27);
                    swift_bridgeObjectRelease(v22);
                    v9 = v46;
                    goto LABEL_21;
                  }
                }
                else
                {

                }
              }
              swift_bridgeObjectRelease(v27);
            }
          }
          else
          {

          }
        }
        swift_bridgeObjectRelease(v22);
        v9 = v46;
      }
    }
    else
    {

    }
  }
  if (qword_1009CE228 != -1)
    swift_once(&qword_1009CE228, sub_100390688);
  v37 = sub_100048F64(v4, (uint64_t)qword_1009DE940);
  v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v37, v4);
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.error.getter(v39);
  if (os_log_type_enabled(v39, v40))
  {
    v41 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Can't produce preview audiobook due to missing metadata", v41, 2u);
    swift_slowDealloc(v41, -1, -1);
  }

  v42 = swift_release(v12);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v42);
LABEL_21:
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_unknownObjectWeakDestroy(v53);
}

void sub_100393084(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t Strong;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  id *v28;
  os_unfair_lock_s *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  Class isa;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  char v46[24];

  v44 = a2;
  v7 = type metadata accessor for Logger(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v14 = static OS_dispatch_queue.main.getter(v15);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v16 = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v16 & 1) != 0)
  {
    a4 += 16;
    if (qword_1009CE228 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1009CE228, sub_100390688);
LABEL_3:
  v17 = sub_100048F64(v7, (uint64_t)qword_1009DE940);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v17, v7);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "helper set: notifying delegate", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess(a4, v46, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a4);
  if (Strong)
  {
    v23 = (void *)Strong;
    v24 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_delegate);

    if (v24)
    {
      v43 = a3;
      v25 = objc_msgSend(a1, "assetID");
      v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v40 = v26;

      v41 = v24;
      v27 = *(os_unfair_lock_s **)(*sub_10003F198((_QWORD *)(v24+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider), *(_QWORD *)(v24+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider+ 24))+ 16);
      v28 = (id *)&v27[4];
      v29 = v27 + 6;
      os_unfair_lock_lock(v27 + 6);
      sub_10042FD4C(v28, (uint64_t *)&v45);
      os_unfair_lock_unlock(v29);
      v30 = v45;
      v42 = (uint64_t)a1;
      if (v45 >> 62)
      {
        if ((v45 & 0x8000000000000000) != 0)
          v35 = v45;
        else
          v35 = v45 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v45);
        v31 = _CocoaArrayWrapper.endIndex.getter(v35);
        swift_bridgeObjectRelease(v30);
        if (v31)
          goto LABEL_9;
      }
      else
      {
        v31 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v31)
        {
LABEL_9:
          if (v31 < 1)
          {
            __break(1u);
            return;
          }
          v32 = 0;
          do
          {
            if ((v30 & 0xC000000000000001) != 0)
            {
              v33 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v30);
            }
            else
            {
              v33 = *(void **)(v30 + 8 * v32 + 32);
              swift_unknownObjectRetain(v33);
            }
            ++v32;
            isa = Dictionary._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v33, "audiobookProductProfileDidChangeTo:", isa);
            swift_unknownObjectRelease(v33);

          }
          while (v31 != v32);
        }
      }
      swift_bridgeObjectRelease(v30);
      v36 = v40;
      v37 = v41;
      sub_1003F6CD0(v42, v43, 1, v39, v40, 1, 2, 0, 0.0, 0);
      swift_bridgeObjectRelease(v36);
      swift_unknownObjectRelease(v37);
    }
  }
}

void sub_100393460(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  void *v25;
  NSURL *v26;
  void *v27;
  void *v28;
  NSString v29;
  NSString v30;
  NSString v31;
  id v32;
  uint64_t v33;
  void *Strong;
  id v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[5];
  _QWORD *v50;
  char v51[32];

  v48 = a9;
  v44 = a7;
  v45 = a8;
  v42 = a5;
  v43 = a6;
  v41 = a4;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE228 != -1)
    swift_once(&qword_1009CE228, sub_100390688);
  v46 = a12;
  v47 = a13;
  v18 = sub_100048F64(v14, (uint64_t)qword_1009DE940);
  v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v14);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "helper set: producing audiobook", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v23 = objc_allocWithZone((Class)BKPreviewAudiobookProducer);
  v24 = objc_msgSend(v23, "init", v41, v42, v43, v44, v45);
  v25 = (void *)objc_opt_self(BKAVAudiobookPreviewURLIdentifier);
  URL._bridgeToObjectiveC()(v26);
  v28 = v27;
  v29 = String._bridgeToObjectiveC()();
  v30 = String._bridgeToObjectiveC()();
  v31 = String._bridgeToObjectiveC()();
  v32 = objc_msgSend(v25, "audiobookIdentifierWithPreviewURL:storeID:title:author:duration:", v28, v29, v30, v31, a1);

  v33 = swift_allocObject(&unk_1009005F8, 24, 7);
  swift_beginAccess(a11, v51, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a11);
  swift_unknownObjectWeakInit(v33 + 16, Strong);
  v35 = v32;

  v36 = (_QWORD *)swift_allocObject(&unk_100900788, 56, 7);
  v36[2] = v33;
  v36[3] = a10;
  v37 = v47;
  v36[4] = v46;
  v36[5] = v37;
  v38 = v48;
  v36[6] = v48;
  aBlock[4] = sub_100395C14;
  v50 = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10034502C;
  aBlock[3] = &unk_1009007A0;
  v39 = _Block_copy(aBlock);
  v40 = v50;
  swift_unknownObjectRetain(a10);
  swift_retain(v37);
  swift_bridgeObjectRetain(v38);
  objc_msgSend(v24, "audiobookForIdentifier:completion:", v35, v39, swift_release(v40).n128_f64[0]);
  _Block_release(v39);

}

void sub_100393788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[5];
  _QWORD *v49;
  char v50[24];

  v44 = a6;
  v45 = a7;
  v43 = a5;
  v10 = type metadata accessor for Logger(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchWorkItemFlags(0);
  v47 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for DispatchQoS(0);
  v17 = *(_QWORD *)(v46 - 8);
  __chkstk_darwin(v46);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v50, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a3);

  if (Strong)
  {
    if (a1 && (v21 = type metadata accessor for MAsset(0), (v22 = swift_dynamicCastClass(a4, v21)) != 0))
    {
      v23 = v22;
      sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      swift_unknownObjectRetain(a1);
      v24 = a4;
      v25 = swift_unknownObjectRetain(a4);
      v42 = static OS_dispatch_queue.main.getter(v25);
      v26 = (_QWORD *)swift_allocObject(&unk_1009007D8, 56, 7);
      v27 = v44;
      v26[2] = v43;
      v26[3] = v27;
      v28 = v45;
      v26[4] = a1;
      v26[5] = v28;
      v26[6] = v23;
      aBlock[4] = sub_100395C60;
      v49 = v26;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000147F0;
      aBlock[3] = &unk_1009007F0;
      v43 = _Block_copy(aBlock);
      v29 = v49;
      swift_unknownObjectRetain(a1);
      swift_unknownObjectRetain(v24);
      swift_retain(v27);
      swift_bridgeObjectRetain(v28);
      swift_release(v29);
      static DispatchQoS.unspecified.getter(v30);
      aBlock[0] = _swiftEmptyArrayStorage;
      v31 = sub_100008E8C();
      v32 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
      v33 = sub_100065324();
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v14, v31);
      v34 = (void *)v42;
      v35 = v43;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v19, v16, v43);
      _Block_release(v35);
      swift_unknownObjectRelease(a1);
      swift_unknownObjectRelease(v24);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v16, v14);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v46);
    }
    else
    {
      if (qword_1009CE228 != -1)
        swift_once(&qword_1009CE228, sub_100390688);
      v36 = sub_100048F64(v10, (uint64_t)qword_1009DE940);
      v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v36, v10);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.error.getter(v38);
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Can't produce preview audiobook", v40, 2u);
        swift_slowDealloc(v40, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
}

void sub_100393B14(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  _BYTE v9[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_delegate);

    if (v6)
    {
      v7 = objc_msgSend(a1, "CGImage");
      sub_10003F198((_QWORD *)(v6 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider), *(_QWORD *)(v6 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider + 24));
      sub_10042FF08((uint64_t)v7);
      v8 = objc_msgSend((id)objc_opt_self(BKAudiobookNowPlayingAdaptor), "sharedInstance");
      objc_msgSend(v8, "coverWillChangeTo:", v7);
      swift_unknownObjectRelease(v6);

    }
  }
}

void sub_100393C04(void *a1, uint64_t a2, void (**a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t Strong;
  void *v23;
  uint64_t v24;
  id v25;
  os_unfair_lock_s *v26;
  id *v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  void *v32;
  uint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  void (**v37)(_QWORD);
  unint64_t v38;
  uint64_t v39[3];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE228 != -1)
    swift_once(&qword_1009CE228, sub_100390688);
  v10 = sub_100048F64(v6, (uint64_t)qword_1009DE940);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  v11 = a1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.info.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v35 = v11;
    v14 = swift_slowAlloc(12, -1);
    v36 = a2;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc(32, -1);
    v37 = a3;
    v17 = v16;
    *(_DWORD *)v15 = 136315138;
    v39[0] = v16;
    if (a1)
      v18 = 0x6C696E2D6E6F6ELL;
    else
      v18 = 7104878;
    if (a1)
      v19 = 0xE700000000000000;
    else
      v19 = 0xE300000000000000;
    v38 = sub_100040F58(v18, v19, v39);
    v11 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, v39, v15 + 4, v15 + 12);

    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "helper set: finished attempting to fetch cover from library image is %s", v15, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    v20 = v17;
    a3 = v37;
    swift_slowDealloc(v20, -1, -1);
    v21 = v15;
    a2 = v36;
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_beginAccess(a2, v39, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    goto LABEL_27;
  v23 = (void *)Strong;
  v24 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_delegate);

  if (!v24)
    goto LABEL_27;
  v25 = objc_msgSend(v11, "CGImage");
  v26 = *(os_unfair_lock_s **)(*sub_10003F198((_QWORD *)(v24+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider), *(_QWORD *)(v24+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider+ 24))+ 16);
  v27 = (id *)&v26[4];
  v28 = v26 + 6;
  os_unfair_lock_lock(v26 + 6);
  sub_10042FD4C(v27, (uint64_t *)&v38);
  os_unfair_lock_unlock(v28);
  v29 = v38;
  if (!(v38 >> 62))
  {
    v30 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v30)
      goto LABEL_16;
LABEL_26:
    swift_bridgeObjectRelease(v29);
    v34 = objc_msgSend((id)objc_opt_self(BKAudiobookNowPlayingAdaptor), "sharedInstance");
    objc_msgSend(v34, "coverWillChangeTo:", v25);
    swift_unknownObjectRelease(v24);

LABEL_27:
    a3[2](a3);
    return;
  }
  if ((v38 & 0x8000000000000000) != 0)
    v33 = v38;
  else
    v33 = v38 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v38);
  v30 = _CocoaArrayWrapper.endIndex.getter(v33);
  swift_bridgeObjectRelease(v29);
  if (!v30)
    goto LABEL_26;
LABEL_16:
  if (v30 >= 1)
  {
    for (i = 0; i != v30; ++i)
    {
      if ((v29 & 0xC000000000000001) != 0)
      {
        v32 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v29);
      }
      else
      {
        v32 = *(void **)(v29 + 8 * i + 32);
        swift_unknownObjectRetain(v32);
      }
      objc_msgSend(v32, "audiobookCoverWillChangeTo:", v25);
      swift_unknownObjectRelease(v32);
    }
    goto LABEL_26;
  }
  __break(1u);
  _Block_release(a3);
  os_unfair_lock_unlock(v28);
  __break(1u);
}

void sub_100393FF8(void *a1, char *a2, void (**a3)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  void (*v29)(char *, uint64_t);
  id v30;
  void *v31;
  void (*v32)(char *, char *, uint64_t);
  os_unfair_lock_s *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t Strong;
  uint64_t v43;
  os_unfair_lock_s *v44;
  id *v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  uint64_t i;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  unint64_t v76;
  char v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  uint64_t v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  void *v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  NSObject *v105;
  os_log_type_t v106;
  uint8_t *v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  uint64_t v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  void *v129;
  char *v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  uint64_t v135;
  uint64_t v136;
  void (**v137)(_QWORD);
  uint64_t v138;
  void *v139;
  id v140;
  os_unfair_lock_s *v141;
  id *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t j;
  void *v146;
  uint64_t v147;
  void (**v148)(_QWORD);
  void (**v149)(_QWORD);
  void (**v150)(_QWORD);
  void (**v151)(_QWORD);
  void (**v152)(_QWORD);
  void (**v153)(_QWORD);
  void (**v154)(_QWORD);
  uint64_t v155;
  unsigned int v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char *KeyPath;
  uint64_t v169;
  uint64_t (*v170)(char *, uint64_t, uint64_t);
  os_unfair_lock_s *v171;
  void (**v172)(_QWORD);
  char *v173;
  void *v174;
  id v175;
  uint64_t v176;
  uint64_t v177[5];
  __int128 v178;
  __int128 v179;

  v173 = a2;
  v174 = a1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v4);
  v6 = (char *)&v155 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v171 = (os_unfair_lock_s *)((char *)&v155 - v12);
  v13 = type metadata accessor for Logger(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v166 = (char *)&v155 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v167 = (char *)&v155 - v18;
  v19 = __chkstk_darwin(v17);
  KeyPath = (char *)&v155 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v155 - v21;
  v172 = a3;
  _Block_copy(a3);
  if (qword_1009CE228 != -1)
    swift_once(&qword_1009CE228, sub_100390688);
  v23 = sub_100048F64(v13, (uint64_t)qword_1009DE940);
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v169 = v23;
  v170 = v24;
  v25 = ((uint64_t (*)(char *))v24)(v22);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "_didSetAudiobookHelper", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  v29 = *(void (**)(char *, uint64_t))(v14 + 8);
  v29(v22, v13);
  v30 = objc_msgSend(v174, "assetUrl");
  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_12;
  }
  v31 = v30;
  static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);

  v32 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v32(v6, v11, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_12:
    sub_100010960((uint64_t)v6, (uint64_t *)&unk_1009D23D0);
    goto LABEL_13;
  }
  v33 = v171;
  v32((char *)v171, v6, v7);
  v34 = objc_msgSend(v174, "options");
  if (!v34)
    goto LABEL_37;
  v35 = v34;
  v36 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v34, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

  v37 = sub_100390704();
  if (!v38)
  {
    (*(void (**)(os_unfair_lock_s *, uint64_t))(v8 + 8))(v33, v7);
    swift_bridgeObjectRelease(v36);
    goto LABEL_13;
  }
  v39 = v37;
  v40 = v38;
  v41 = sub_100390DC4();
  if (v41 == 2)
  {
    (*(void (**)(os_unfair_lock_s *, uint64_t))(v8 + 8))(v33, v7);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v40);
    goto LABEL_13;
  }
  v50 = sub_1003915DC(v39, v40, v41 & 1, v36);
  swift_bridgeObjectRelease(v40);
  swift_bridgeObjectRelease(v36);
  if (!v50)
  {
LABEL_37:
    (*(void (**)(os_unfair_lock_s *, uint64_t))(v8 + 8))(v33, v7);
LABEL_13:
    Strong = swift_unknownObjectWeakLoadStrong(&v173[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_delegate]);
    if (!Strong)
    {
LABEL_121:
      v137 = v172;
      v172[2](v172);
      goto LABEL_122;
    }
    v43 = Strong;
    v33 = (os_unfair_lock_s *)(Strong + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider);
    v44 = *(os_unfair_lock_s **)(*sub_10003F198((_QWORD *)(Strong+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider), *(_QWORD *)(Strong+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider+ 24))+ 16);
    v45 = (id *)&v44[4];
    v46 = v44 + 6;
    os_unfair_lock_lock(v44 + 6);
    sub_10042FD4C(v45, v177);
    os_unfair_lock_unlock(v46);
    v47 = v177[0];
    if ((unint64_t)v177[0] >> 62)
    {
      if (v177[0] < 0)
        v138 = v177[0];
      else
        v138 = v177[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v177[0]);
      v13 = _CocoaArrayWrapper.endIndex.getter(v138);
      swift_bridgeObjectRelease(v47);
      if (!v13)
        goto LABEL_108;
    }
    else
    {
      v13 = *(_QWORD *)((v177[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v13)
        goto LABEL_108;
    }
    if (v13 < 1)
    {
      __break(1u);
LABEL_124:
      __break(1u);
      goto LABEL_125;
    }
    for (i = 0; i != v13; ++i)
    {
      if ((v47 & 0xC000000000000001) != 0)
      {
        v49 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v47);
      }
      else
      {
        v49 = *(void **)(v47 + 8 * i + 32);
        swift_unknownObjectRetain(v49);
      }
      objc_msgSend(v49, "audiobookProductProfileDidChangeTo:", 0);
      swift_unknownObjectRelease(v49);
    }
LABEL_108:
    swift_bridgeObjectRelease(v47);
    v139 = *(void **)(v43 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset);
    *(_QWORD *)(v43 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset) = 0;

    v140 = objc_msgSend((id)objc_opt_self(BKAudiobookNowPlayingAdaptor), "sharedInstance");
    objc_msgSend(v140, "setSessionID:", 0);

    objc_msgSend(*(id *)(v43 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "setCurrentAudiobook:", 0);
    sub_10003F198(v33, *(_QWORD *)&v33[6]._os_unfair_lock_opaque);
    sub_100430024(0);
    v141 = *(os_unfair_lock_s **)(*sub_10003F198(v33, *(_QWORD *)&v33[6]._os_unfair_lock_opaque) + 16);
    v142 = (id *)&v141[4];
    v33 = v141 + 6;
    os_unfair_lock_lock(v141 + 6);
    sub_10042FD4C(v142, v177);
    os_unfair_lock_unlock(v33);
    v143 = v177[0];
    if ((unint64_t)v177[0] >> 62)
    {
      if (v177[0] < 0)
        v147 = v177[0];
      else
        v147 = v177[0] & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v177[0]);
      v144 = _CocoaArrayWrapper.endIndex.getter(v147);
      swift_bridgeObjectRelease(v143);
      if (v144)
      {
LABEL_110:
        if (v144 >= 1)
        {
          for (j = 0; j != v144; ++j)
          {
            if ((v143 & 0xC000000000000001) != 0)
            {
              v146 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v143);
            }
            else
            {
              v146 = *(void **)(v143 + 8 * j + 32);
              swift_unknownObjectRetain(v146);
            }
            objc_msgSend(v146, "audiobookStoreIDDidChangeTo:", 0);
            swift_unknownObjectRelease(v146);
          }
          goto LABEL_120;
        }
        goto LABEL_124;
      }
    }
    else
    {
      v144 = *(_QWORD *)((v177[0] & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v144)
        goto LABEL_110;
    }
LABEL_120:
    swift_unknownObjectRelease(v43);
    swift_bridgeObjectRelease(v143);
    goto LABEL_121;
  }
  v51 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(AEHelperStringOptionsAssetIDKey);
  v53 = v52;
  v175 = v51;
  v176 = v52;
  swift_bridgeObjectRetain(v52);
  AnyHashable.init<A>(_:)(&v175, &type metadata for String, &protocol witness table for String);
  v54 = objc_msgSend(v174, "options");
  if (!v54)
  {
LABEL_125:
    v148 = v172;
    _Block_release(v172);
    _Block_release(v148);
    __break(1u);
    goto LABEL_126;
  }
  v55 = v54;
  v56 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v54, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  swift_bridgeObjectRelease(v53);

  if (*(_QWORD *)(v56 + 16) && (v57 = sub_1000561E8((uint64_t)v177), (v58 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v56 + 56) + 32 * v57, (uint64_t)&v178);
  }
  else
  {
    v178 = 0u;
    v179 = 0u;
  }
  swift_bridgeObjectRelease(v56);
  sub_1000569AC((uint64_t)v177);
  if (!*((_QWORD *)&v179 + 1))
  {

    sub_100010960((uint64_t)&v178, (uint64_t *)&unk_1009D04E0);
    goto LABEL_37;
  }
  if ((swift_dynamicCast(&v175, &v178, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {

    goto LABEL_37;
  }
  v164 = (uint64_t)v175;
  v165 = v176;
  v59 = static String._unconditionallyBridgeFromObjectiveC(_:)(AEHelperStringOptionsStoreIDKey);
  v61 = v60;
  *(_QWORD *)&v178 = v59;
  *((_QWORD *)&v178 + 1) = v60;
  swift_bridgeObjectRetain(v60);
  AnyHashable.init<A>(_:)(&v178, &type metadata for String, &protocol witness table for String);
  v62 = objc_msgSend(v174, "options");
  if (!v62)
  {
LABEL_126:
    v149 = v172;
    _Block_release(v172);
    _Block_release(v149);
    __break(1u);
LABEL_127:
    v150 = v172;
    _Block_release(v172);
    _Block_release(v150);
    __break(1u);
LABEL_128:
    v151 = v172;
    _Block_release(v172);
    _Block_release(v151);
    __break(1u);
    goto LABEL_129;
  }
  v63 = v62;
  v64 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v62, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  swift_bridgeObjectRelease(v61);

  if (*(_QWORD *)(v64 + 16) && (v65 = sub_1000561E8((uint64_t)v177), (v66 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v64 + 56) + 32 * v65, (uint64_t)&v178);
  }
  else
  {
    v178 = 0u;
    v179 = 0u;
  }
  swift_bridgeObjectRelease(v64);
  sub_1000569AC((uint64_t)v177);
  if (*((_QWORD *)&v179 + 1))
  {
    v67 = swift_dynamicCast(&v175, &v178, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    v68 = (uint64_t)v175;
    if (!v67)
      v68 = 0;
    v159 = v68;
    if (v67)
      v69 = v176;
    else
      v69 = 0;
    v162 = v69;
  }
  else
  {
    sub_100010960((uint64_t)&v178, (uint64_t *)&unk_1009D04E0);
    v159 = 0;
    v162 = 0;
  }
  v70 = static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("AEAudiobookOptionsSessionID"));
  v72 = v71;
  *(_QWORD *)&v178 = v70;
  *((_QWORD *)&v178 + 1) = v71;
  swift_bridgeObjectRetain(v71);
  AnyHashable.init<A>(_:)(&v178, &type metadata for String, &protocol witness table for String);
  v73 = objc_msgSend(v174, "options");
  if (!v73)
    goto LABEL_127;
  v74 = v73;
  v75 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v73, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  swift_bridgeObjectRelease(v72);

  if (*(_QWORD *)(v75 + 16) && (v76 = sub_1000561E8((uint64_t)v177), (v77 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v75 + 56) + 32 * v76, (uint64_t)&v178);
  }
  else
  {
    v178 = 0u;
    v179 = 0u;
  }
  swift_bridgeObjectRelease(v75);
  sub_1000569AC((uint64_t)v177);
  if (*((_QWORD *)&v179 + 1))
  {
    v78 = swift_dynamicCast(&v175, &v178, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    v79 = (uint64_t)v175;
    if (!v78)
      v79 = 0;
    v158 = v79;
    if (v78)
      v80 = v176;
    else
      v80 = 0;
    v161 = v80;
  }
  else
  {
    sub_100010960((uint64_t)&v178, (uint64_t *)&unk_1009D04E0);
    v158 = 0;
    v161 = 0;
  }
  v81 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("AEAudiobookOptionsShouldNotAutoplayKey"));
  v83 = v82;
  v175 = v81;
  v176 = v82;
  swift_bridgeObjectRetain(v82);
  AnyHashable.init<A>(_:)(&v175, &type metadata for String, &protocol witness table for String);
  v84 = objc_msgSend(v174, "options");
  if (!v84)
    goto LABEL_128;
  v85 = v84;
  v86 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v84, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
  swift_bridgeObjectRelease(v83);

  if (*(_QWORD *)(v86 + 16) && (v87 = sub_1000561E8((uint64_t)v177), (v88 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(v86 + 56) + 32 * v87, (uint64_t)&v178);
  }
  else
  {
    v178 = 0u;
    v179 = 0u;
  }
  swift_bridgeObjectRelease(v86);
  sub_1000569AC((uint64_t)v177);
  if (*((_QWORD *)&v179 + 1))
  {
    v89 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
    if ((swift_dynamicCast(&v175, &v178, (char *)&type metadata for Any + 8, v89, 6) & 1) != 0)
    {
      v90 = v175;
      v157 = objc_msgSend(v175, "BOOLValue");

      goto LABEL_70;
    }
  }
  else
  {
    sub_100010960((uint64_t)&v178, (uint64_t *)&unk_1009D04E0);
  }
  v157 = 2;
LABEL_70:
  v91 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(CFSTR("AEAudiobookOptionsShouldBeginPlaybackInBackground"));
  v93 = v92;
  v175 = v91;
  v176 = v92;
  swift_bridgeObjectRetain(v92);
  AnyHashable.init<A>(_:)(&v175, &type metadata for String, &protocol witness table for String);
  v94 = objc_msgSend(v174, "options");
  if (v94)
  {
    v95 = v94;
    v96 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v94, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);
    swift_bridgeObjectRelease(v93);

    v97 = KeyPath;
    if (*(_QWORD *)(v96 + 16) && (v98 = sub_1000561E8((uint64_t)v177), (v99 & 1) != 0))
    {
      sub_10004CD0C(*(_QWORD *)(v96 + 56) + 32 * v98, (uint64_t)&v178);
    }
    else
    {
      v178 = 0u;
      v179 = 0u;
    }
    swift_bridgeObjectRelease(v96);
    sub_1000569AC((uint64_t)v177);
    v160 = v50;
    if (*((_QWORD *)&v179 + 1))
    {
      v100 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
      if ((swift_dynamicCast(&v175, &v178, (char *)&type metadata for Any + 8, v100, 6) & 1) != 0)
      {
        v101 = v175;
        v156 = objc_msgSend(v175, "BOOLValue");

        goto LABEL_80;
      }
    }
    else
    {
      sub_100010960((uint64_t)&v178, (uint64_t *)&unk_1009D04E0);
    }
    v156 = 2;
LABEL_80:
    v163 = &v173[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_delegate];
    v102 = swift_unknownObjectWeakLoadStrong(&v173[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_delegate]);
    if (v102)
    {
      v103 = v102;
      v104 = v170(v97, v169, v13);
      v105 = Logger.logObject.getter(v104);
      v106 = static os_log_type_t.info.getter(v105);
      if (os_log_type_enabled(v105, v106))
      {
        v107 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v107 = 0;
        _os_log_impl((void *)&_mh_execute_header, v105, v106, "helper set: fetching cover from library", v107, 2u);
        swift_slowDealloc(v107, -1, -1);
      }

      v29(v97, v13);
      v108 = swift_unknownObjectWeakLoadStrong(v103 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
      if (v108)
        swift_unknownObjectRelease(v108);
      swift_unknownObjectWeakInit(v177, v173);
      v109 = v172;
      _Block_copy(v172);
      sub_1003FB0A4(v164, v165, v103, (uint64_t)v177, v109, 1536.0, 1536.0);
      _Block_release(v109);
      swift_unknownObjectWeakDestroy(v177);
      swift_unknownObjectRelease(v103);
      v33 = v171;
    }
    else
    {
      v110 = v170(v167, v169, v13);
      v111 = Logger.logObject.getter(v110);
      v112 = static os_log_type_t.error.getter(v111);
      if (os_log_type_enabled(v111, v112))
      {
        v113 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v113 = 0;
        _os_log_impl((void *)&_mh_execute_header, v111, v112, "helper set: No delegate, won't be able to fetch cover image for animation in time", v113, 2u);
        swift_slowDealloc(v113, -1, -1);
      }

      v29(v167, v13);
      ((void (*)(void))v172[2])();
    }
    v114 = v163;
    v115 = swift_unknownObjectWeakLoadStrong(v163);
    if (v115)
    {
      v116 = v115;
      v117 = swift_unknownObjectWeakLoadStrong(v115 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate);
      if (v117)
      {
        v118 = v117;
        v119 = swift_unknownObjectWeakLoadStrong(v117 + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate);
        if (v119)
        {
          v120 = v119;
          v121 = *(void **)(v119 + 16);
          KeyPath = (char *)swift_getKeyPath(&unk_10071E810);
          v122 = swift_getKeyPath(&unk_10071E838);
          v177[0] = v164;
          v177[1] = v165;
          swift_bridgeObjectRetain(v165);
          v123 = v121;
          v114 = v163;
          v33 = v171;
          static Published.subscript.setter(v177, v123, KeyPath, v122);
          swift_unknownObjectRelease(v116);
          swift_unknownObjectRelease(v118);
          v124 = v120;
        }
        else
        {
          swift_unknownObjectRelease(v116);
          v124 = v118;
        }
      }
      else
      {
        v124 = v116;
      }
      swift_unknownObjectRelease(v124);
    }
    v125 = swift_unknownObjectWeakLoadStrong(v114);
    if (v125)
    {
      v126 = v125;
      v127 = v165;
      v128 = sub_1003FAC4C(v164, v165);
      swift_unknownObjectRelease(v126);
      swift_bridgeObjectRelease(v127);
      v129 = v160;
      if ((v128 & 1) != 0)
      {
        swift_bridgeObjectRelease(v162);
        swift_bridgeObjectRelease(v161);
        v130 = v166;
        v131 = v170(v166, v169, v13);
        v132 = Logger.logObject.getter(v131);
        v133 = static os_log_type_t.default.getter(v132);
        if (os_log_type_enabled(v132, v133))
        {
          v134 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v134 = 0;
          _os_log_impl((void *)&_mh_execute_header, v132, v133, "Attaching to existing, playing audiobook", v134, 2u);
          swift_slowDealloc(v134, -1, -1);
        }

        v29(v130, v13);
        goto LABEL_103;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v165);
      v129 = v160;
    }
    v135 = v161;
    v136 = v162;
    sub_100391FD8(v129, v174, v173, v157, v159, v162, v156, v158, v161);

    swift_bridgeObjectRelease(v136);
    swift_bridgeObjectRelease(v135);
LABEL_103:
    (*(void (**)(os_unfair_lock_s *, uint64_t))(v8 + 8))(v33, v7);
    v137 = v172;
LABEL_122:
    _Block_release(v137);
    return;
  }
LABEL_129:
  v152 = v172;
  _Block_release(v172);
  _Block_release(v152);
  __break(1u);
  v153 = v172;
  _Block_release(v172);
  _Block_release(v153);
  os_unfair_lock_unlock((os_unfair_lock_t)v13);
  __break(1u);
  v154 = v172;
  _Block_release(v172);
  _Block_release(v154);
  os_unfair_lock_unlock(v33);
  __break(1u);
}

void sub_1003951C8(uint64_t a1, char *a2, void *aBlock)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t Strong;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  id *v19;
  os_unfair_lock_s *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t i;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  os_unfair_lock_s *v28;
  id *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t j;
  void *v33;
  uint64_t v34;
  unint64_t v35;

  v6 = OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_helper;
  v7 = *(_QWORD *)&a2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_helper];
  *(_QWORD *)&a2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_helper] = a1;
  _Block_copy(aBlock);
  swift_unknownObjectRelease(v7);
  v8 = objc_opt_self(BKMLAudiobookHelper);
  v9 = swift_dynamicCastObjCClass(a1, v8);
  if (v9)
  {
    v10 = (void *)v9;
    _Block_copy(aBlock);
    swift_unknownObjectRetain(a1);
    sub_100393FF8(v10, a2, (void (**)(_QWORD))aBlock);
    _Block_release(aBlock);
LABEL_34:
    _Block_release(aBlock);
    return;
  }
  v11 = *(_QWORD *)&a2[v6];
  if (v11)
  {
    v12 = objc_opt_self(BKAudiobookPreviewHelper);
    v13 = swift_dynamicCastObjCClass(v11, v12);
    if (v13)
    {
      v14 = (void *)v13;
      swift_unknownObjectRetain(a1);
      swift_unknownObjectRetain(v11);
      sub_100392BAC(v14);
      (*((void (**)(void *))aBlock + 2))(aBlock);
      swift_unknownObjectRelease(v11);
      goto LABEL_34;
    }
  }
  Strong = swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_delegate]);
  if (!Strong)
  {
    swift_unknownObjectRetain(a1);
LABEL_33:
    (*((void (**)(void *))aBlock + 2))(aBlock);
    goto LABEL_34;
  }
  v16 = Strong;
  v17 = (os_unfair_lock_s *)(Strong + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider);
  v18 = *(_QWORD *)(*sub_10003F198((_QWORD *)(Strong + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider), *(_QWORD *)(Strong+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider+ 24))+ 16);
  v19 = (id *)(v18 + 16);
  v20 = (os_unfair_lock_s *)(v18 + 24);
  swift_unknownObjectRetain(a1);
  os_unfair_lock_lock(v20);
  sub_10042FD4C(v19, (uint64_t *)&v35);
  os_unfair_lock_unlock(v20);
  v21 = v35;
  if (v35 >> 62)
  {
    if ((v35 & 0x8000000000000000) != 0)
      v25 = v35;
    else
      v25 = v35 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v35);
    v22 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v21);
    if (!v22)
      goto LABEL_20;
  }
  else
  {
    v22 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v22)
      goto LABEL_20;
  }
  if (v22 < 1)
  {
    __break(1u);
    goto LABEL_36;
  }
  for (i = 0; i != v22; ++i)
  {
    if ((v21 & 0xC000000000000001) != 0)
    {
      v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v21);
    }
    else
    {
      v24 = *(void **)(v21 + 8 * i + 32);
      swift_unknownObjectRetain(v24);
    }
    objc_msgSend(v24, "audiobookProductProfileDidChangeTo:", 0);
    swift_unknownObjectRelease(v24);
  }
LABEL_20:
  swift_bridgeObjectRelease(v21);
  v26 = *(void **)(v16 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset);
  *(_QWORD *)(v16 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset) = 0;

  v27 = objc_msgSend((id)objc_opt_self(BKAudiobookNowPlayingAdaptor), "sharedInstance");
  objc_msgSend(v27, "setSessionID:", 0);

  objc_msgSend(*(id *)(v16 + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "setCurrentAudiobook:", 0);
  sub_10003F198(v17, *(_QWORD *)&v17[6]._os_unfair_lock_opaque);
  sub_100430024(0);
  v28 = *(os_unfair_lock_s **)(*sub_10003F198(v17, *(_QWORD *)&v17[6]._os_unfair_lock_opaque) + 16);
  v29 = (id *)&v28[4];
  v17 = v28 + 6;
  os_unfair_lock_lock(v28 + 6);
  sub_10042FD4C(v29, (uint64_t *)&v35);
  os_unfair_lock_unlock(v17);
  v30 = v35;
  if (!(v35 >> 62))
  {
    v31 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v31)
      goto LABEL_22;
LABEL_32:
    swift_unknownObjectRelease(v16);
    swift_bridgeObjectRelease(v30);
    goto LABEL_33;
  }
  if ((v35 & 0x8000000000000000) != 0)
    v34 = v35;
  else
    v34 = v35 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v35);
  v31 = _CocoaArrayWrapper.endIndex.getter(v34);
  swift_bridgeObjectRelease(v30);
  if (!v31)
    goto LABEL_32;
LABEL_22:
  if (v31 >= 1)
  {
    for (j = 0; j != v31; ++j)
    {
      if ((v30 & 0xC000000000000001) != 0)
      {
        v33 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v30);
      }
      else
      {
        v33 = *(void **)(v30 + 8 * j + 32);
        swift_unknownObjectRetain(v33);
      }
      objc_msgSend(v33, "audiobookStoreIDDidChangeTo:", 0);
      swift_unknownObjectRelease(v33);
    }
    goto LABEL_32;
  }
LABEL_36:
  __break(1u);
  _Block_release(aBlock);
  _Block_release(aBlock);
  os_unfair_lock_unlock((os_unfair_lock_t)v22);
  __break(1u);
  _Block_release(aBlock);
  _Block_release(aBlock);
  os_unfair_lock_unlock(v17);
  __break(1u);
}

uint64_t sub_1003955DC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100395600()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));

  return swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100395654(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003923F4(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void **)(v2 + 56), *(_QWORD *)(v2 + 64), *(_BYTE *)(v2 + 72), *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88), *(void **)(v2 + 96));
}

uint64_t sub_10039569C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

void sub_1003956F0()
{
  uint64_t v0;

  sub_1003929B8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(char **)(v0 + 32), *(char **)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void (**)(char *, uint64_t, uint64_t))(v0 + 64), *(unsigned __int8 *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
}

uint64_t sub_100395730()
{
  return sub_10039577C(88);
}

double sub_100395738(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;

  return sub_100391EC4(a3, a4, a1, a2, *(_BYTE *)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_BYTE *)(v4 + 56), *(_QWORD *)(v4 + 64), *(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 80));
}

uint64_t sub_100395774()
{
  return sub_10039577C(96);
}

uint64_t sub_10039577C(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 72));
  swift_unknownObjectRelease(*(_QWORD *)(v1 + 80));
  return swift_deallocObject(v1, a1, 7);
}

void sub_1003957CC()
{
  uint64_t v0;

  sub_100395808(*(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(_QWORD *)(v0 + 64), *(double *)(v0 + 88), *(_QWORD *)(v0 + 72));
}

void sub_100395808(uint64_t a1, char a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, double a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t Strong;
  uint64_t v30;
  char v31;
  os_unfair_lock_s *v32;
  id *v33;
  os_unfair_lock_s *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t i;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  unint64_t v46;

  v45 = a8;
  v44 = a7;
  v42 = a5;
  v43 = a6;
  v41 = a1;
  v14 = type metadata accessor for Logger(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchPredicate(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (uint64_t *)((char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v21 = static OS_dispatch_queue.main.getter(v22);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  v23 = _dispatchPreconditionTest(_:)(v21);
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
  if ((v23 & 1) != 0)
  {
    if (qword_1009CE228 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1009CE228, sub_100390688);
LABEL_3:
  v24 = sub_100048F64(v14, (uint64_t)qword_1009DE940);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v24, v14);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.info.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "helper set: notifying delegate", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_delegate);
  if (Strong)
  {
    v30 = Strong;
    v31 = objc_msgSend(a4, "isStreaming");
    v32 = *(os_unfair_lock_s **)(*sub_10003F198((_QWORD *)(v30+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider), *(_QWORD *)(v30+ OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider+ 24))+ 16);
    v33 = (id *)&v32[4];
    v34 = v32 + 6;
    os_unfair_lock_lock(v32 + 6);
    sub_10042FD4C(v33, (uint64_t *)&v46);
    os_unfair_lock_unlock(v34);
    v35 = v46;
    if (v46 >> 62)
    {
      if ((v46 & 0x8000000000000000) != 0)
        v39 = v46;
      else
        v39 = v46 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v46);
      v36 = _CocoaArrayWrapper.endIndex.getter(v39);
      swift_bridgeObjectRelease(v35);
      if (v36)
        goto LABEL_8;
    }
    else
    {
      v36 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v36)
      {
LABEL_8:
        if (v36 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v36; ++i)
        {
          if ((v35 & 0xC000000000000001) != 0)
          {
            v38 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v35);
          }
          else
          {
            v38 = *(void **)(v35 + 8 * i + 32);
            swift_unknownObjectRetain(v38);
          }
          objc_msgSend(v38, "audiobookProductProfileDidChangeTo:", 0);
          swift_unknownObjectRelease(v38);
        }
      }
    }
    swift_bridgeObjectRelease(v35);
    sub_1003F6CD0(v41, 0, v31, v42, v43, (a2 & 1) == 0, v44, v45, a9, a10);
    swift_unknownObjectRelease(v30);
  }
}

uint64_t sub_100395B7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 80));
  swift_errorRelease(*(_QWORD *)(v0 + 96));
  return swift_deallocObject(v0, 104, 7);
}

void sub_100395BC8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_100393084(a1, a2, a3, v3);
}

void sub_100395BD0(void *a1)
{
  uint64_t v1;

  sub_100393B14(a1, v1);
}

uint64_t sub_100395BD8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_unknownObjectRelease(v0[3]);
  swift_release(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_100395C14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100393788(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

uint64_t sub_100395C24()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100395C60()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

double destroy for TableOfContentsView(uint64_t a1)
{
  double result;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);

  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 64)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for TableOfContentsView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  v5 = *(void **)(a2 + 48);
  v6 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = v5;
  v9 = v6;
  swift_retain(v7);
  return a1;
}

uint64_t assignWithCopy for TableOfContentsView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  sub_1001EAB00((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  v4 = *(void **)(a2 + 48);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 56);
  v8 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  v9 = v7;

  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v10;
  swift_retain(v10);
  swift_release(v11);
  return a1;
}

uint64_t assignWithTake for TableOfContentsView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  uint64_t v7;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v6 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TableOfContentsView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TableOfContentsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TableOfContentsView()
{
  return &type metadata for TableOfContentsView;
}

uint64_t sub_100395F0C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086E868, 1);
}

void sub_100395F1C()
{
  qword_1009DE9F8 = 0x4020000000000000;
}

void sub_100395F2C()
{
  qword_1009DEA00 = 0x4010000000000000;
}

void sub_100395F3C()
{
  qword_1009DEA08 = 0x4028000000000000;
}

uint64_t sub_100395F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  __n128 v18;
  Swift::Int v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjCClassFromMetadata;
  id v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  __n128 v44;
  void *v46;
  uint64_t countAndFlagsBits;
  uint64_t v48;
  void *object;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v1 = type metadata accessor for Locale(0);
  v55 = *(_QWORD *)(v1 - 8);
  v56 = v1;
  __chkstk_darwin(v1);
  v52 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v54 = (char *)&v46 - v4;
  v53 = type metadata accessor for String.LocalizationValue(0);
  v51 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v50 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v46 - v7;
  v9 = type metadata accessor for Location(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (void **)((char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 64) + 112) + 152);
  v14 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor);
  v15 = *(_QWORD *)(v14 + 120);
  ObjectType = swift_getObjectType();
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 168) + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
  swift_retain(v13);
  swift_retain(v17);
  CurrentValueSubject.value.getter(v12);
  v18 = swift_release(v17);
  v19 = dispatch thunk of PageNumberProviding.pageNumber(for:)(v12, ObjectType, *(_QWORD *)(v15 + 8), v18);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  v20 = PageNumberProvider.pageName(for:)(v19);
  v21 = PageNumberProvider.lastPageNumber()();
  if (v19 == _s5Books17REActionMenuStateC9pageCountSivpfi_0())
  {
    swift_bridgeObjectRelease(v21._object);
    swift_bridgeObjectRelease(v20._object);
    swift_release(v13);
    return 0;
  }
  else
  {
    v23 = String.LocalizationValue.init(stringLiteral:)(0x402520666F204025, 0xE800000000000000);
    v24 = v54;
    static Locale.current.getter(v23);
    v25 = v51;
    v26 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
    object = v21._object;
    v27 = v50;
    v28 = v53;
    v26(v50, v8, v53);
    v29 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v29);
    v31 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    countAndFlagsBits = v20._countAndFlagsBits;
    v48 = v21._countAndFlagsBits;
    v32 = v55;
    v33 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
    v34 = v52;
    v46 = v20._object;
    v35 = v56;
    v33(v52, v24, v56);
    v36 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v31, v34, "X of Y in TOC header", 20, 2);
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v35);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v28);
    v39 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v40 = swift_allocObject(v39, 112, 7);
    *(_OWORD *)(v40 + 16) = xmmword_10070FC00;
    *(_QWORD *)(v40 + 56) = &type metadata for String;
    v41 = sub_10002BE50();
    v42 = v46;
    *(_QWORD *)(v40 + 32) = countAndFlagsBits;
    *(_QWORD *)(v40 + 40) = v42;
    *(_QWORD *)(v40 + 96) = &type metadata for String;
    *(_QWORD *)(v40 + 104) = v41;
    v43 = v48;
    *(_QWORD *)(v40 + 64) = v41;
    *(_QWORD *)(v40 + 72) = v43;
    *(_QWORD *)(v40 + 80) = object;
    v22 = static String.localizedStringWithFormat(_:_:)(v36, v38, v40, v44);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v40);
    swift_release(v13);
  }
  return v22;
}

uint64_t sub_1003962E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  _BYTE v29[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v29[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v29[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0x40252065676150, 0xE700000000000000);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Page X of Y in TOC header for accessibility", 43, 2);
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  v21 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v22 = swift_allocObject(v21, 72, 7);
  *(_OWORD *)(v22 + 16) = xmmword_10070CCA0;
  v23 = sub_100395F4C();
  v25 = v24;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  *(_QWORD *)(v22 + 64) = sub_10002BE50();
  *(_QWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 40) = v25;
  v27 = static String.localizedStringWithFormat(_:_:)(v18, v20, v22, v26);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v22);
  return v27;
}

uint64_t sub_10039651C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t ObjCClassFromMetadata;
  id v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;
  void *v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  char v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  double v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  void *v88;
  void *v89;
  void *v90;
  _QWORD *v91;
  uint64_t v92;
  id v93;
  uint64_t KeyPath;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  void *v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  double v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  void (*v131)(char *, char *, uint64_t);
  char *v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *, uint64_t);
  uint64_t v150;
  int v151;
  int v152;
  uint64_t v153;
  uint64_t v154;
  void *v155;
  void *v156;
  id v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int16 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int16 v209;
  char v210;
  _BYTE v211[7];
  char v212;
  _BYTE v213[7];
  _BYTE v214[7];
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  char v226;
  _BYTE v227[7];
  char v228;
  _BYTE v229[7];
  char v230;
  _BYTE v231[7];
  char v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  char v244;
  __int128 v245;
  _OWORD v246[3];
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int16 v258;
  uint64_t v259;
  unsigned __int8 v260;
  uint64_t v261;
  unsigned __int8 v262;
  uint64_t v263;
  uint64_t v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int16 v280;

  v175 = a2;
  v3 = sub_10004CFD4(&qword_1009D8240);
  __chkstk_darwin(v3);
  v165 = (uint64_t *)((char *)&v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v164 = type metadata accessor for TOCLegacyView(0);
  __chkstk_darwin(v164);
  v177 = (uint64_t)&v150 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_10004CFD4(&qword_1009DEA28);
  __chkstk_darwin(v166);
  v168 = (uint64_t)&v150 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_10004CFD4(&qword_1009DEA30);
  __chkstk_darwin(v170);
  v169 = (uint64_t)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009DEA38);
  v173 = *(_QWORD *)(v8 - 8);
  v174 = v8;
  __chkstk_darwin(v8);
  v172 = (char *)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v167 = (char *)&v150 - v11;
  __chkstk_darwin(v12);
  v171 = (char *)&v150 - v13;
  v163 = type metadata accessor for Locale(0);
  v14 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v16 = (char *)&v150 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v150 - v18;
  v20 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v150 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v27 = (char *)&v150 - v26;
  v176 = (_QWORD *)a1;
  if (*(_BYTE *)(a1 + 41) == 1)
  {
    v28 = v25;
    v162 = v25;
    v29 = String.LocalizationValue.init(stringLiteral:)(0x73746E65746E6F43, 0xE800000000000000);
    static Locale.current.getter(v29);
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v22, v27, v20);
    v30 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v30);
    v32 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v161 = v20;
    v33 = v14;
    v34 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v35 = v163;
    v34(v16, v19, v163);
    v36 = String.init(localized:table:bundle:locale:comment:)(v22, 0, 0, v32, v16, "The header for the table of contents popover", 44, 2);
    v38 = v37;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v35);
    v39 = (*(uint64_t (**)(char *, uint64_t))(v162 + 8))(v27, v161);
    v40 = static Edge.Set.horizontal.getter(v39);
    *(_QWORD *)&v245 = v36;
    *((_QWORD *)&v245 + 1) = v38;
    LOBYTE(v246[0]) = v40;
    *(_OWORD *)((char *)v246 + 8) = 0u;
    *(_OWORD *)((char *)&v246[1] + 8) = 0u;
    BYTE8(v246[2]) = 1;
    sub_100397CC8((uint64_t)&v245);
    sub_100025B3C((uint64_t)&v245, (uint64_t)&v194, &qword_1009DEA40);
    v41 = sub_10004CFD4(&qword_1009DEA48);
    v42 = sub_10004CFD4(&qword_1009DEA50);
    v43 = sub_100397860();
    v44 = sub_100030B34(&qword_1009DEA68, &qword_1009DEA50, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(&v194, v41, v42, v43, v44);
  }
  else
  {
    if (qword_1009CE230 != -1)
      v24 = swift_once(&qword_1009CE230, sub_100395F1C);
    v45 = qword_1009DE9F8;
    v46 = static Alignment.center.getter(v24);
    _FrameLayout.init(width:height:alignment:)(&v259, 0, 1, v45, 0, v46, v47);
    LODWORD(v158) = v260;
    v159 = v259;
    v160 = v261;
    LODWORD(v157) = v262;
    v161 = v264;
    v162 = v263;
    v48 = v176;
    v49 = (void *)v176[8];
    sub_1002D0F58((uint64_t)v176, (uint64_t)&v265);
    v50 = swift_allocObject(&unk_1009008D8, 88, 7);
    v51 = v268;
    *(_OWORD *)(v50 + 48) = v267;
    *(_OWORD *)(v50 + 64) = v51;
    *(_QWORD *)(v50 + 80) = v269;
    v52 = v266;
    *(_OWORD *)(v50 + 16) = v265;
    *(_OWORD *)(v50 + 32) = v52;
    sub_1002D0F58((uint64_t)v48, (uint64_t)&v265);
    v53 = swift_allocObject(&unk_100900900, 88, 7);
    v54 = v268;
    *(_OWORD *)(v53 + 48) = v267;
    *(_OWORD *)(v53 + 64) = v54;
    *(_QWORD *)(v53 + 80) = v269;
    v55 = v266;
    *(_OWORD *)(v53 + 16) = v265;
    *(_OWORD *)(v53 + 32) = v55;
    v56 = sub_10003F198(v48, v48[3]);
    *((_QWORD *)&v266 + 1) = &type metadata for TOCPresenter;
    *(_QWORD *)&v267 = &off_100902840;
    *(_QWORD *)&v265 = swift_allocObject(&unk_100900928, 32, 7);
    sub_1002D0F1C((uint64_t)v56, v265 + 16);
    sub_10002E418((uint64_t)&v265, (uint64_t)&v245);
    v163 = swift_allocObject(&unk_100900950, 56, 7);
    sub_100022840(&v245, v163 + 16);
    v57 = v49;
    swift_retain(v49);
    _s5Books15CurrentPageViewVwxx_0(&v265);
    sub_1002D0F58((uint64_t)v48, (uint64_t)&v265);
    v58 = swift_allocObject(&unk_100900978, 88, 7);
    v59 = v268;
    *(_OWORD *)(v58 + 48) = v267;
    *(_OWORD *)(v58 + 64) = v59;
    *(_QWORD *)(v58 + 80) = v269;
    v60 = v266;
    *(_OWORD *)(v58 + 16) = v265;
    *(_OWORD *)(v58 + 32) = v60;
    v61 = type metadata accessor for ChromeStyle(0);
    v62 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    EnvironmentObject.init()(v61, v62);
    v156 = v63;
    v153 = v64;
    v65 = static Edge.Set.top.getter(v63);
    v66 = EdgeInsets.init(_all:)(*(double *)&qword_1009DE9F8);
    v68 = v67;
    v70 = v69;
    v72 = v71;
    v210 = 0;
    v74 = static Edge.Set.bottom.getter(v73);
    if (qword_1009CE240 != -1)
      swift_once(&qword_1009CE240, sub_100395F3C);
    v75 = EdgeInsets.init(_all:)(*(double *)&qword_1009DEA08);
    *(_DWORD *)((char *)&v183 + 9) = *(_DWORD *)v211;
    HIDWORD(v183) = *(_DWORD *)&v211[3];
    v212 = 0;
    *(_DWORD *)((char *)&v186 + 1) = *(_DWORD *)v214;
    DWORD1(v186) = *(_DWORD *)&v214[3];
    *(_DWORD *)((char *)&v186 + 9) = *(_DWORD *)v213;
    HIDWORD(v186) = *(_DWORD *)&v213[3];
    *(_QWORD *)&v215 = v57;
    *((_QWORD *)&v215 + 1) = sub_1003976D0;
    *(_QWORD *)&v216 = v50;
    *((_QWORD *)&v216 + 1) = sub_1003976F4;
    *(_QWORD *)&v217 = v53;
    *((_QWORD *)&v217 + 1) = sub_100397738;
    *(_QWORD *)&v218 = v163;
    *((_QWORD *)&v218 + 1) = sub_100397744;
    *(_QWORD *)&v219 = v58;
    *((_QWORD *)&v219 + 1) = v156;
    *(_QWORD *)&v220 = v153;
    BYTE8(v220) = v65;
    HIDWORD(v220) = *(_DWORD *)&v211[3];
    *(_DWORD *)((char *)&v220 + 9) = *(_DWORD *)v211;
    *(double *)&v221 = v66;
    *((_QWORD *)&v221 + 1) = v68;
    *(_QWORD *)&v222 = v70;
    *((_QWORD *)&v222 + 1) = v72;
    LOBYTE(v223) = v210;
    DWORD1(v223) = *(_DWORD *)&v214[3];
    *(_DWORD *)((char *)&v223 + 1) = *(_DWORD *)v214;
    v76 = v74;
    BYTE8(v223) = v74;
    HIDWORD(v223) = *(_DWORD *)&v213[3];
    *(_DWORD *)((char *)&v223 + 9) = *(_DWORD *)v213;
    *(double *)&v224 = v75;
    *((_QWORD *)&v224 + 1) = v77;
    *(_QWORD *)&v225 = v78;
    *((_QWORD *)&v225 + 1) = v79;
    v226 = 0;
    v232 = 1;
    v230 = (char)v158;
    v228 = (char)v157;
    v244 = 0;
    v242 = v224;
    v243 = v225;
    v241 = v223;
    v235 = v217;
    v236 = v218;
    v233 = v215;
    v234 = v216;
    v239 = v221;
    v240 = v222;
    v237 = v219;
    v238 = v220;
    v151 = 1;
    v152 = v158;
    v80 = v156;
    LODWORD(v157) = v157;
    v81 = v57;
    v154 = v50;
    v155 = v57;
    *(_QWORD *)&v178 = v57;
    *((_QWORD *)&v178 + 1) = sub_1003976D0;
    *(_QWORD *)&v179 = v50;
    *((_QWORD *)&v179 + 1) = sub_1003976F4;
    *(_QWORD *)&v180 = v53;
    *((_QWORD *)&v180 + 1) = sub_100397738;
    *(_QWORD *)&v181 = v163;
    *((_QWORD *)&v181 + 1) = sub_100397744;
    v82 = v163;
    *(_QWORD *)&v182 = v58;
    *((_QWORD *)&v182 + 1) = v156;
    *(_QWORD *)&v183 = v153;
    BYTE8(v183) = v65;
    *(double *)&v184 = v66;
    *((_QWORD *)&v184 + 1) = v68;
    *(_QWORD *)&v185 = v70;
    *((_QWORD *)&v185 + 1) = v72;
    LOBYTE(v186) = v210;
    BYTE8(v186) = v76;
    *(double *)&v187 = v75;
    *((_QWORD *)&v187 + 1) = v77;
    *(_QWORD *)&v188 = v78;
    *((_QWORD *)&v188 + 1) = v79;
    LOBYTE(v189) = 0;
    swift_retain(v81);
    swift_retain(v50);
    swift_retain(v53);
    sub_10002ACF0((uint64_t)sub_100397738, v82);
    v158 = v80;
    swift_retain(v58);
    sub_100397764(&v215);
    sub_1003977DC((uint64_t *)&v178);
    *(_QWORD *)&v245 = 0;
    BYTE8(v245) = v151;
    *(_DWORD *)((char *)&v245 + 9) = *(_DWORD *)v231;
    HIDWORD(v245) = *(_DWORD *)&v231[3];
    *(_QWORD *)&v246[0] = v159;
    BYTE8(v246[0]) = v152;
    *(_DWORD *)((char *)v246 + 9) = *(_DWORD *)v229;
    HIDWORD(v246[0]) = *(_DWORD *)&v229[3];
    *(_QWORD *)&v246[1] = v160;
    BYTE8(v246[1]) = (_BYTE)v157;
    *(_DWORD *)((char *)&v246[1] + 9) = *(_DWORD *)v227;
    HIDWORD(v246[1]) = *(_DWORD *)&v227[3];
    *(_QWORD *)&v246[2] = v162;
    *((_QWORD *)&v246[2] + 1) = v161;
    v255 = v241;
    v256 = v242;
    v257 = v243;
    LOBYTE(v258) = v244;
    v251 = v237;
    v252 = v238;
    v253 = v239;
    v254 = v240;
    v247 = v233;
    v248 = v234;
    v249 = v235;
    v250 = v236;
    sub_100397854((uint64_t)&v245);
    sub_100025B3C((uint64_t)&v245, (uint64_t)&v265, &qword_1009DEA40);
    v83 = sub_10004CFD4(&qword_1009DEA48);
    v84 = sub_10004CFD4(&qword_1009DEA50);
    v85 = sub_100397860();
    v86 = sub_100030B34(&qword_1009DEA68, &qword_1009DEA50, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    _ConditionalContent<>.init(storage:)(&v265, v83, v84, v85, v86);
    swift_release(v53);
    swift_release(v154);
    swift_release(v155);
    sub_10002AD00((uint64_t)sub_100397738, v163);

    swift_release(v58);
    v277 = v206;
    v278 = v207;
    v279 = v208;
    v280 = v209;
    v273 = v202;
    v274 = v203;
    v275 = v204;
    v276 = v205;
    v269 = v198;
    v270 = v199;
    v271 = v200;
    v272 = v201;
    v265 = v194;
    v266 = v195;
    v267 = v196;
    v268 = v197;
  }
  v87 = v176;
  v88 = (void *)v176[7];
  v89 = (void *)v176[8];
  v163 = *((unsigned __int8 *)v176 + 40);
  v155 = (void *)v176[6];
  v90 = v155;
  v156 = v89;
  LODWORD(v162) = *((unsigned __int8 *)v176 + 42);
  LODWORD(v161) = *((unsigned __int8 *)v176 + 41);
  v91 = sub_10003F198(v176, v176[3]);
  *((_QWORD *)&v246[0] + 1) = &type metadata for TOCPresenter;
  *(_QWORD *)&v246[1] = &off_100902840;
  *(_QWORD *)&v245 = swift_allocObject(&unk_100900928, 32, 7);
  sub_1002D0F1C((uint64_t)v91, v245 + 16);
  sub_10002E418((uint64_t)&v245, (uint64_t)&v194);
  v92 = swift_allocObject(&unk_1009009A0, 56, 7);
  sub_100022840(&v194, v92 + 16);
  v157 = v88;
  swift_retain(v89);
  v93 = v90;
  _s5Books15CurrentPageViewVwxx_0(&v245);
  LOBYTE(v194) = 0;
  static Binding.constant(_:)(&v245, &v194, &type metadata for Bool);
  v159 = *((_QWORD *)&v245 + 1);
  v160 = v245;
  LODWORD(v158) = LOBYTE(v246[0]);
  KeyPath = swift_getKeyPath(&unk_10071E8D8);
  v95 = swift_getKeyPath(&unk_10071E900);
  v96 = (uint64_t)v165;
  *v165 = v95;
  v97 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  swift_storeEnumTagMultiPayload(v96, v97, 0);
  v98 = swift_getKeyPath(&unk_10071E930);
  v99 = v164;
  v100 = v177;
  v101 = (uint64_t *)(v177 + *(int *)(v164 + 56));
  *v101 = v98;
  v102 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v101, v102, 0);
  v103 = v156;
  *(_QWORD *)v100 = v157;
  *(_QWORD *)(v100 + 8) = v103;
  v104 = v155;
  *(_QWORD *)(v100 + 16) = v163;
  *(_QWORD *)(v100 + 24) = v104;
  *(_BYTE *)(v100 + 32) = v162;
  *(_BYTE *)(v100 + 33) = v161;
  *(_QWORD *)(v100 + 40) = sub_100397934;
  *(_QWORD *)(v100 + 48) = v92;
  *(_QWORD *)(v100 + 56) = BKAppDelegate.enableMetricsInspectorOnDebugMode();
  *(_QWORD *)(v100 + 64) = 0;
  *(_QWORD *)(v100 + 72) = BKAppDelegate.enableMetricsInspectorOnDebugMode();
  *(_QWORD *)(v100 + 80) = 0;
  *(_QWORD *)(v100 + 88) = KeyPath;
  *(_WORD *)(v100 + 96) = 0;
  v105 = sub_100025B3C(v96, v100 + *(int *)(v99 + 52), &qword_1009D8240);
  v106 = v100 + *(int *)(v99 + 60);
  v107 = v159;
  *(_QWORD *)v106 = v160;
  *(_QWORD *)(v106 + 8) = v107;
  *(_BYTE *)(v106 + 16) = (_BYTE)v158;
  v108 = static Edge.Set.bottom.getter(v105);
  v109 = 0.0;
  if ((*((_BYTE *)v87 + 41) & 1) == 0)
  {
    if (qword_1009CE238 != -1)
      swift_once(&qword_1009CE238, sub_100395F2C);
    v109 = *(double *)&qword_1009DEA00;
  }
  v110 = EdgeInsets.init(_all:)(v109);
  v112 = v111;
  v114 = v113;
  v116 = v115;
  v117 = v177;
  v118 = v168;
  sub_100397954(v177, v168);
  v119 = v118 + *(int *)(v166 + 36);
  *(_BYTE *)v119 = v108;
  *(double *)(v119 + 8) = v110;
  *(_QWORD *)(v119 + 16) = v112;
  *(_QWORD *)(v119 + 24) = v114;
  *(_QWORD *)(v119 + 32) = v116;
  *(_BYTE *)(v119 + 40) = 0;
  v120 = sub_100397998(v117);
  v121 = static Edge.Set.bottom.getter(v120);
  LOBYTE(v117) = v121;
  v122 = static SafeAreaRegions.all.getter(v121);
  v123 = v169;
  sub_1003979D4(v118, v169);
  v124 = v170;
  v125 = v123 + *(int *)(v170 + 36);
  *(_QWORD *)v125 = v122;
  *(_BYTE *)(v125 + 8) = v117;
  sub_100010960(v118, &qword_1009DEA28);
  v126 = sub_100397A1C();
  v127 = v167;
  View.persistentSystemOverlays(_:)(2, v124, v126);
  sub_100010960(v123, &qword_1009DEA30);
  v129 = v173;
  v128 = v174;
  v130 = v171;
  (*(void (**)(char *, char *, uint64_t))(v173 + 32))(v171, v127, v174);
  v190 = v277;
  v191 = v278;
  v192 = v279;
  v193 = v280;
  v186 = v273;
  v187 = v274;
  v188 = v275;
  v189 = v276;
  v182 = v269;
  v183 = v270;
  v184 = v271;
  v185 = v272;
  v178 = v265;
  v179 = v266;
  v180 = v267;
  v181 = v268;
  v131 = *(void (**)(char *, char *, uint64_t))(v129 + 16);
  v132 = v172;
  v131(v172, v130, v128);
  v133 = v189;
  v206 = v190;
  v207 = v191;
  v134 = v191;
  v208 = v192;
  v202 = v186;
  v203 = v187;
  v136 = v186;
  v135 = v187;
  v137 = v188;
  v204 = v188;
  v205 = v189;
  v138 = v182;
  v139 = v183;
  v198 = v182;
  v199 = v183;
  v140 = v184;
  v141 = v185;
  v200 = v184;
  v201 = v185;
  v142 = v178;
  v143 = v179;
  v194 = v178;
  v195 = v179;
  v144 = v180;
  v145 = v181;
  v196 = v180;
  v197 = v181;
  v146 = v175;
  *(_OWORD *)(v175 + 192) = v190;
  *(_OWORD *)(v146 + 208) = v134;
  *(_OWORD *)(v146 + 224) = v192;
  *(_OWORD *)(v146 + 128) = v136;
  *(_OWORD *)(v146 + 144) = v135;
  *(_OWORD *)(v146 + 160) = v137;
  *(_OWORD *)(v146 + 176) = v133;
  *(_OWORD *)(v146 + 64) = v138;
  *(_OWORD *)(v146 + 80) = v139;
  *(_OWORD *)(v146 + 96) = v140;
  *(_OWORD *)(v146 + 112) = v141;
  *(_OWORD *)v146 = v142;
  *(_OWORD *)(v146 + 16) = v143;
  v209 = v193;
  *(_WORD *)(v146 + 240) = v193;
  *(_OWORD *)(v146 + 32) = v144;
  *(_OWORD *)(v146 + 48) = v145;
  v147 = sub_10004CFD4(&qword_1009DEA88);
  v131((char *)(v146 + *(int *)(v147 + 48)), v132, v128);
  sub_100397BA8((uint64_t)&v194, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_100397B24);
  v148 = *(void (**)(char *, uint64_t))(v129 + 8);
  v148(v130, v128);
  v148(v132, v128);
  v255 = v190;
  v256 = v191;
  v257 = v192;
  v258 = v193;
  v251 = v186;
  v252 = v187;
  v253 = v188;
  v254 = v189;
  v247 = v182;
  v248 = v183;
  v249 = v184;
  v250 = v185;
  v245 = v178;
  v246[0] = v179;
  v246[1] = v180;
  v246[2] = v181;
  return sub_100397BA8((uint64_t)&v245, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_100397C2C);
}

uint64_t sub_1003973F4(char a1, _QWORD *a2)
{
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;

  v3 = sub_10003F198(a2, a2[3]);
  result = swift_unknownObjectWeakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = *(_QWORD *)(*(_QWORD *)(result + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor) + 120);
    ObjectType = swift_getObjectType();
    dispatch thunk of PageNumberManaging.usePhysicalPagesValue.setter(a1 & 1, ObjectType, v6);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

double sub_100397470(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10003F198(a3, a3[3]);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v12 = Strong;
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
    type metadata accessor for MainActor(0);
    swift_unknownObjectRetain(v12);
    swift_bridgeObjectRetain(a2);
    v15 = static MainActor.shared.getter(v14);
    v16 = (_QWORD *)swift_allocObject(&unk_1009009C8, 56, 7);
    v16[2] = v15;
    v16[3] = &protocol witness table for MainActor;
    v16[4] = v12;
    v16[5] = a1;
    v16[6] = a2;
    v17 = sub_10030C02C((uint64_t)v8, (uint64_t)&unk_1009DEA90, (uint64_t)v16);
    swift_unknownObjectRelease(v12);
    *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  }
  return result;
}

uint64_t sub_100397590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = type metadata accessor for Material(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009DEA10);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = static HorizontalAlignment.leading.getter(v8);
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  v9 = sub_10004CFD4(&qword_1009DEA18);
  v10 = sub_10039651C(v0, (uint64_t)&v7[*(int *)(v9 + 44)]);
  static Material.thick.getter(v10);
  v11 = sub_100030B34(&qword_1009DEA20, &qword_1009DEA10, (uint64_t)&protocol conformance descriptor for VStack<A>);
  View.presentationBackground<A>(_:)(v4, v5, v1, v11, &protocol witness table for Material);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100010960((uint64_t)v7, &qword_1009DEA10);
}

uint64_t sub_1003976D0()
{
  return sub_100395F4C();
}

uint64_t sub_1003976F4()
{
  return sub_1003962E4();
}

uint64_t sub_100397714()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100397738(char a1)
{
  uint64_t v1;

  return sub_1003973F4(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_100397744()
{
  return sub_1005D81F4();
}

_QWORD *sub_100397764(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v2 = a1[2];
  v3 = a1[4];
  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[8];
  v7 = (void *)a1[9];
  swift_retain(*a1);
  swift_retain(v2);
  swift_retain(v3);
  sub_10002ACF0(v4, v5);
  v8 = v7;
  swift_retain(v6);
  return a1;
}

uint64_t *sub_1003977DC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = *a1;
  v3 = a1[2];
  v4 = a1[5];
  v5 = a1[6];
  v6 = a1[8];
  v7 = (void *)a1[9];
  swift_release(a1[4]);
  swift_release(v3);
  swift_release(v2);
  sub_10002AD00(v4, v5);
  swift_release(v6);

  return a1;
}

uint64_t sub_100397854(uint64_t result)
{
  *(_BYTE *)(result + 241) = 1;
  return result;
}

unint64_t sub_100397860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DEA58;
  if (!qword_1009DEA58)
  {
    v1 = sub_100030B74(&qword_1009DEA48);
    sub_1003978CC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DEA58);
  }
  return result;
}

unint64_t sub_1003978CC()
{
  unint64_t result;

  result = qword_1009DEA60;
  if (!qword_1009DEA60)
  {
    result = swift_getWitnessTable(&unk_1007174A8, &type metadata for PopoverHeader);
    atomic_store(result, (unint64_t *)&qword_1009DEA60);
  }
  return result;
}

uint64_t sub_100397910()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

double sub_100397934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100397470(a1, a2, (_QWORD *)(v2 + 16));
}

uint64_t sub_100397954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TOCLegacyView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100397998(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TOCLegacyView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003979D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DEA28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100397A1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DEA70;
  if (!qword_1009DEA70)
  {
    v1 = sub_100030B74(&qword_1009DEA30);
    sub_100397AA0();
    sub_100030B34((unint64_t *)&unk_1009F1E40, &qword_1009DEA80, (uint64_t)&protocol conformance descriptor for _MaskEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DEA70);
  }
  return result;
}

unint64_t sub_100397AA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DEA78;
  if (!qword_1009DEA78)
  {
    v1 = sub_100030B74(&qword_1009DEA28);
    sub_100008DB0(&qword_1009EE720, type metadata accessor for TOCLegacyView, (uint64_t)&unk_100730F88);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DEA78);
  }
  return result;
}

double sub_100397B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,char a32)
{
  id v32;
  double result;

  if ((a32 & 1) != 0)
  {
    swift_retain(a9);
    swift_retain(a11);
    swift_retain(a13);
    sub_10002ACF0(a14, a15);
    v32 = a18;
    *(_QWORD *)&result = swift_retain(a17).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRetain(a2).n128_u64[0];
  }
  return result;
}

uint64_t sub_100397BA8(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    *(_WORD *)(a1 + 240));
  return a1;
}

double sub_100397C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,char a32)
{
  double result;

  if ((a32 & 1) != 0)
  {
    swift_release(a9);
    swift_release(a11);
    swift_release(a13);
    sub_10002AD00(a14, a15);
    swift_release(a17);

  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  return result;
}

uint64_t sub_100397CC8(uint64_t result)
{
  *(_BYTE *)(result + 241) = 0;
  return result;
}

uint64_t sub_100397CD0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100397D04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009F023C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000AE34;
  return sub_1005EC8A0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100397D84()
{
  _QWORD v1[4];

  v1[0] = sub_100030B74(&qword_1009DEA10);
  v1[1] = type metadata accessor for Material(255);
  v1[2] = sub_100030B34(&qword_1009DEA20, &qword_1009DEA10, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v1[3] = &protocol witness table for Material;
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.presentationBackground<A>(_:)>>, 1);
}

id sub_100397E0C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for PPTRunner()), "init");
  qword_100A1E760 = (uint64_t)result;
  return result;
}

uint64_t sub_100397ECC(uint64_t a1, void *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  id v8;
  NSString v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  char *v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t result;
  Swift::String v43;
  Swift::String v44;
  void *v45;
  __int128 aBlock;
  __int128 v47;
  void (*v48)(void *);
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[2];

  v4 = v3;
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9 = String._bridgeToObjectiveC()();
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v8, "pathForResource:ofType:", v9, v10);

  if (!v11)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001ELL, 0x80000001007C4670, "Books/PPTRunner.swift", 21, 2, 39, 0);
LABEL_30:
    __break(1u);
    return result;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
  v13 = v12;

  v14 = objc_allocWithZone((Class)NSDictionary);
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v14, "initWithContentsOfFile:", v15, swift_bridgeObjectRelease(v13).n128_f64[0]);

  if (!v16)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007C4690, "Books/PPTRunner.swift", 21, 2, 40, 0);
    goto LABEL_30;
  }
  *(_QWORD *)&v51[0] = a1;
  *((_QWORD *)&v51[0] + 1) = a2;
  swift_bridgeObjectRetain_n(a2, 2);
  v17 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v51, &type metadata for String);
  v18 = objc_msgSend(v16, "__swift_objectForKeyedSubscript:", v17);
  swift_unknownObjectRelease(v17);
  if (v18)
  {
    _bridgeAnyObjectToAny(_:)(v18);
    swift_unknownObjectRelease(v18);
  }
  else
  {
    memset(v51, 0, sizeof(v51));
  }
  sub_10004C7B4((uint64_t)v51, (uint64_t)&aBlock);
  if (!*((_QWORD *)&v47 + 1))
  {
    swift_bridgeObjectRelease(a2);
    sub_10004A7B8((uint64_t)&aBlock);
LABEL_29:
    *(_QWORD *)&aBlock = 0;
    *((_QWORD *)&aBlock + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease(*((_QWORD *)&aBlock + 1));
    *(_QWORD *)&aBlock = 0x7473655420545050;
    *((_QWORD *)&aBlock + 1) = 0xE900000000000020;
    v43._countAndFlagsBits = a1;
    v43._object = a2;
    String.append(_:)(v43);
    v44._countAndFlagsBits = 0x756F6620746F6E20;
    v44._object = (void *)0xEA0000000000646ELL;
    String.append(_:)(v44);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, aBlock, *((_QWORD *)&aBlock + 1), "Books/PPTRunner.swift", 21, 2, 41, 0);
    goto LABEL_30;
  }
  v19 = sub_10004CFD4(&qword_1009D3090);
  if ((swift_dynamicCast(&v50, &aBlock, (char *)&type metadata for Any + 8, v19, 6) & 1) == 0)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_29;
  }
  v20 = v50;
  swift_bridgeObjectRelease(a2);
  v45 = v16;
  if (*(_QWORD *)(v20 + 16))
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a3);
    swift_bridgeObjectRetain(v20);
    v21 = sub_10004CE80(0x7079742D6B6F6F62, 0xE900000000000065);
    v22 = a1;
    if ((v23 & 1) != 0)
    {
      sub_10004CD0C(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&aBlock);
    }
    else
    {
      aBlock = 0u;
      v47 = 0u;
    }
    swift_bridgeObjectRelease(v20);
  }
  else
  {
    v22 = a1;
    aBlock = 0u;
    v47 = 0u;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a3);
  }
  v24 = *((_QWORD *)&v47 + 1);
  sub_10004A7B8((uint64_t)&aBlock);
  if (v24)
  {
    v25 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
    objc_msgSend(v25, "_createCoverCacheForcingEmptyPPTCache:", 1);

  }
  v26 = &v4[OBJC_IVAR____TtC5Books9PPTRunner_testCaseQueue];
  swift_beginAccess(&v4[OBJC_IVAR____TtC5Books9PPTRunner_testCaseQueue], &aBlock, 33, 0);
  v27 = *(_QWORD **)v26;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v26);
  *(_QWORD *)v26 = v27;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v27 = sub_1005B1614(0, v27[2] + 1, 1, v27);
    *(_QWORD *)v26 = v27;
  }
  v30 = v27[2];
  v29 = v27[3];
  if (v30 >= v29 >> 1)
  {
    v27 = sub_1005B1614((_QWORD *)(v29 > 1), v30 + 1, 1, v27);
    *(_QWORD *)v26 = v27;
  }
  v27[2] = v30 + 1;
  v31 = &v27[4 * v30];
  v31[4] = v22;
  v31[5] = a2;
  v31[6] = a3;
  v31[7] = v20;
  swift_endAccess(&aBlock);
  if (qword_1009CE248 != -1)
    swift_once(&qword_1009CE248, sub_10000B8CC);
  v32 = type metadata accessor for Logger(0);
  v33 = sub_100048F64(v32, (uint64_t)qword_1009DEA98);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.info.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "checking to see if tab bar is loaded", v36, 2u);
    swift_slowDealloc(v36, -1, -1);
  }

  v37 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "sceneManager");
  v38 = swift_allocObject(&unk_100900CF0, 24, 7);
  *(_QWORD *)(v38 + 16) = v4;
  v48 = sub_10039AA54;
  v49 = v38;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v47 = sub_1001EDBF0;
  *((_QWORD *)&v47 + 1) = &unk_100900D08;
  v39 = _Block_copy(&aBlock);
  v40 = v49;
  v41 = v4;
  objc_msgSend(v37, "requestTabBarSceneController:", v39, swift_release(v40).n128_f64[0]);

  _Block_release(v39);
  return 1;
}

void sub_1003984E4(void *a1, void *a2)
{
  id v3;
  NSString v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;

  v3 = objc_msgSend(a1, "launchCoordinator");
  v4 = String._bridgeToObjectiveC()();
  v5 = swift_allocObject(&unk_100900D40, 24, 7);
  *(_QWORD *)(v5 + 16) = a2;
  v9[4] = sub_10039AA5C;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10004DCB4;
  v9[3] = &unk_100900D58;
  v6 = _Block_copy(v9);
  v7 = v10;
  v8 = a2;
  objc_msgSend(v3, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 4096, v4, v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);

}

uint64_t sub_100398678()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[5];
  uint64_t v39;

  v34 = type metadata accessor for DispatchWorkItemFlags(0);
  v37 = *(_QWORD *)(v34 - 8);
  __chkstk_darwin(v34);
  v1 = (char *)&v32 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchTime(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - v10;
  if (qword_1009CE248 != -1)
    swift_once(&qword_1009CE248, sub_10000B8CC);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100048F64(v12, (uint64_t)qword_1009DEA98);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.info.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "waiting one second to ensure tabs are settled", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  v17 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v18 = (void *)static OS_dispatch_queue.main.getter(v17);
  static DispatchTime.now()(v18);
  + infix(_:_:)(v8, 1.0);
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v8, v5);
  v20 = swift_allocObject(&unk_100900CA0, 24, 7);
  v21 = v33;
  *(_QWORD *)(v20 + 16) = v33;
  aBlock[4] = sub_10039AA34;
  v39 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_100900CB8;
  v22 = _Block_copy(aBlock);
  v23 = v39;
  v24 = v21;
  swift_release(v23);
  static DispatchQoS.unspecified.getter(v25);
  aBlock[0] = _swiftEmptyArrayStorage;
  v26 = sub_100008E8C();
  v27 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v28 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  v29 = v27;
  v30 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v28, v34, v26);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v11, v4, v1, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v1, v30);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v4, v36);
  return ((uint64_t (*)(char *, uint64_t))v19)(v11, v5);
}

void sub_1003989AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  unint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  id v42;
  id v43;
  double v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  NSURL *v50;
  void *v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[4];
  char v66[24];

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Books9PPTRunner_testCaseQueue);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books9PPTRunner_testCaseQueue, v66, 0, 0);
  v65[0] = *v5;
  v6 = sub_10004CFD4(&qword_1009DEB50);
  v7 = sub_100030B34(&qword_1009DEB58, &qword_1009DEB50, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v6, v7) & 1) == 0)
    return;
  v8 = objc_msgSend((id)objc_opt_self(BCLightLevelController), "shared");
  if (!v8)
  {
    __break(1u);
    return;
  }
  v9 = v8;
  objc_msgSend(v8, "emulateCurrentLightLevelChange:", 0);

  swift_beginAccess(v5, v65, 33, 0);
  v10 = sub_10041DA10(0);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_endAccess(v65);
  if (*(_QWORD *)(v16 + 16)
    && (v17 = sub_10004CE80(0x6F74732D6B6F6F62, 0xEA00000000006572), (v18 & 1) != 0)
    && (sub_10004CD0C(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)v65),
        (swift_dynamicCast(&v63, v65, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0))
  {
    v19 = v63;
    if (!*(_QWORD *)(v16 + 16))
      goto LABEL_16;
  }
  else
  {
    v19 = 0;
    if (!*(_QWORD *)(v16 + 16))
      goto LABEL_16;
  }
  v20 = sub_10004CE80(7107189, 0xE300000000000000);
  if ((v21 & 1) != 0)
  {
    sub_10004CD0C(*(_QWORD *)(v16 + 56) + 32 * v20, (uint64_t)v65);
    v22 = swift_dynamicCast(&v63, v65, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    v23 = v63;
    if (!v22)
      v23 = 0;
    v58 = v23;
    if (v22)
      v24 = v64;
    else
      v24 = 0;
    v62 = v24;
    goto LABEL_17;
  }
LABEL_16:
  v58 = 0;
  v62 = 0;
LABEL_17:
  v25 = (void *)objc_opt_self(BKAppDelegate);
  v26 = objc_msgSend(v25, "sceneManager");
  v27 = objc_msgSend(v26, "currentSceneController");

  if (v27)
  {
    v60 = v25;
    v61 = v27;
    if (qword_1009CE248 != -1)
      swift_once(&qword_1009CE248, sub_10000B8CC);
    v59 = v19;
    v28 = type metadata accessor for Logger(0);
    sub_100048F64(v28, (uint64_t)qword_1009DEA98);
    swift_bridgeObjectRetain_n(v12, 2);
    swift_bridgeObjectRetain_n(v14, 2);
    v29 = swift_bridgeObjectRetain_n(v16, 2);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.info.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v57 = v14;
      v32 = swift_slowAlloc(12, -1);
      v56 = v1;
      v33 = (uint8_t *)v32;
      v34 = swift_slowAlloc(32, -1);
      v65[0] = v34;
      *(_DWORD *)v33 = 136446210;
      swift_bridgeObjectRetain(v12);
      v63 = sub_100040F58(v10, (unint64_t)v12, v65);
      v14 = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64, v33 + 4, v33 + 12);
      swift_bridgeObjectRelease_n(v16, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      swift_bridgeObjectRelease_n(v12, 3);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "about to start next test named: %{public}s", v33, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v16, 2);
      swift_bridgeObjectRelease_n(v14, 2);
      *(_QWORD *)&v35 = swift_bridgeObjectRelease_n(v12, 2).n128_u64[0];
    }
    v42 = v61;
    v41 = v62;
    v43 = objc_msgSend(v61, "newShowURLTransaction", v35);
    if (v59)
    {
      *(_QWORD *)&v44 = swift_bridgeObjectRelease(v41).n128_u64[0];
      v45 = objc_msgSend(v60, "sceneManager", v44);
      v46 = objc_msgSend(v45, "storePresenter");

      objc_msgSend(v46, "showStoreWithTransaction:", v43);
    }
    else if (v41)
    {
      v57 = v14;
      v47 = v12;
      URL.init(string:)(v58, v41);
      swift_bridgeObjectRelease(v41);
      v48 = type metadata accessor for URL(0);
      v49 = *(_QWORD *)(v48 - 8);
      v51 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v4, 1, v48) != 1)
      {
        URL._bridgeToObjectiveC()(v50);
        v51 = v52;
        (*(void (**)(char *, uint64_t))(v49 + 8))(v4, v48);
      }
      v53 = objc_msgSend((id)objc_opt_self(BSUIURL), "URLWithURL:", v51);

      v54 = objc_msgSend(v60, "sceneManager");
      v46 = objc_msgSend(v54, "storePresenter");

      objc_msgSend(v46, "showStoreWithURL:transaction:", v53, v43);
      v12 = v47;
      v14 = v57;
      v42 = v61;
    }
    else
    {
      v55 = objc_msgSend(v60, "sceneManager");
      v46 = objc_msgSend(v55, "libraryCollectionPresenter");

      objc_msgSend(v46, "showLibraryWithTransaction:animated:completion:", v43, 0, 0);
    }
    swift_unknownObjectRelease(v46);
    sub_1003990E0(v10, v12, v14, v16);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v12);
    swift_unknownObjectRelease(v42);
    swift_unknownObjectRelease(v43);
  }
  else
  {
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v62);
    if (qword_1009CE248 != -1)
      swift_once(&qword_1009CE248, sub_10000B8CC);
    v36 = type metadata accessor for Logger(0);
    v37 = sub_100048F64(v36, (uint64_t)qword_1009DEA98);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.error.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "failed to obtain currentSceneController", v40, 2u);
      swift_slowDealloc(v40, -1, -1);
    }

  }
}

void sub_1003990E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  void *v13;
  _QWORD *v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  void **v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  void *v28;
  _QWORD *v29;

  v9 = sub_10039A334(a1, a2, a3, a4);
  v10 = swift_allocObject(&unk_100900AE8, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v28 = sub_10039A914;
  v29 = (_QWORD *)v10;
  v24 = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_1000147F0;
  v27 = &unk_100900B00;
  v11 = _Block_copy(&v24);
  objc_msgSend(v9, "setOnIdle:", v11, swift_release(v29).n128_f64[0]);
  _Block_release(v11);
  v12 = (_QWORD *)swift_allocObject(&unk_100900B38, 48, 7);
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v28 = sub_10039A920;
  v29 = v12;
  v24 = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_1000147F0;
  v27 = &unk_100900B50;
  v13 = _Block_copy(&v24);
  v14 = v29;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  objc_msgSend(v9, "setOnStart:", v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);
  v15 = (_QWORD *)swift_allocObject(&unk_100900B88, 48, 7);
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  v28 = sub_10039A97C;
  v29 = v15;
  v24 = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_1000147F0;
  v27 = &unk_100900BA0;
  v16 = _Block_copy(&v24);
  v17 = v29;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  objc_msgSend(v9, "setOnSuccess:", v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
  v18 = swift_allocObject(&unk_100900BD8, 24, 7);
  swift_unknownObjectWeakInit(v18 + 16);
  v19 = (_QWORD *)swift_allocObject(&unk_100900C00, 56, 7);
  v19[2] = a1;
  v19[3] = a2;
  v19[4] = a3;
  v19[5] = a4;
  v19[6] = v18;
  v28 = sub_10039A9A4;
  v29 = v19;
  v24 = _NSConcreteStackBlock;
  v25 = 1107296256;
  v26 = sub_1000147F0;
  v27 = &unk_100900C18;
  v20 = _Block_copy(&v24);
  v21 = v29;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  objc_msgSend(v9, "setOnFatalError:", v20, swift_release(v21).n128_f64[0]);
  _Block_release(v20);
  v22 = *(void **)(v4 + OBJC_IVAR____TtC5Books9PPTRunner_currentTestRunner);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books9PPTRunner_currentTestRunner) = v9;
  v23 = v9;

  objc_msgSend(v23, "start");
}

void sub_1003993BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  char *Strong;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = a1 + 16;
  if (qword_1009CE248 != -1)
    swift_once(&qword_1009CE248, sub_10000B8CC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_1009DEA98);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "runner is idle", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  swift_beginAccess(v1, v12, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v8 = *(void **)&Strong[OBJC_IVAR____TtC5Books9PPTRunner_currentTestRunner];
    *(_QWORD *)&Strong[OBJC_IVAR____TtC5Books9PPTRunner_currentTestRunner] = 0;

  }
  swift_beginAccess(v1, &v11, 0, 0);
  v9 = swift_unknownObjectWeakLoadStrong(v1);
  if (v9)
  {
    v10 = (void *)v9;
    sub_1003989AC();

  }
}

double sub_1003994F8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  double result;
  uint64_t v17;
  uint64_t v18;

  if (qword_1009CE248 != -1)
    swift_once(&qword_1009CE248, sub_10000B8CC);
  v10 = type metadata accessor for Logger(0);
  sub_100048F64(v10, (uint64_t)qword_1009DEA98);
  swift_bridgeObjectRetain_n(a2, 2);
  swift_bridgeObjectRetain_n(a3, 2);
  v11 = swift_bridgeObjectRetain_n(a4, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.info.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v18 = v15;
    *(_DWORD *)v14 = 136446210;
    swift_bridgeObjectRetain(a2);
    v17 = sub_100040F58(a1, a2, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18, v14 + 4, v14 + 12);
    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, a5, v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a3, 2);
    *(_QWORD *)&result = swift_bridgeObjectRelease_n(a2, 2).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003996F0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t aBlock[5];
  _QWORD *v45;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  __chkstk_darwin(v10);
  v40 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE248 != -1)
    swift_once(&qword_1009CE248, sub_10000B8CC);
  v15 = type metadata accessor for Logger(0);
  sub_100048F64(v15, (uint64_t)qword_1009DEA98);
  swift_bridgeObjectRetain_n(a2, 2);
  swift_bridgeObjectRetain_n(a3, 2);
  v16 = swift_bridgeObjectRetain_n(a4, 2);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.info.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v36 = v14;
    v19 = swift_slowAlloc(12, -1);
    v37 = a1;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc(32, -1);
    aBlock[0] = v21;
    *(_DWORD *)v20 = 136446210;
    swift_bridgeObjectRetain(a2);
    v43 = sub_100040F58(v37, a2, aBlock);
    v14 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, aBlock, v20 + 4, v20 + 12);
    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "failed test named: %{public}s", v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    v22 = v20;
    a1 = v37;
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a4, 2);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  v23 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v24 = (void *)static OS_dispatch_queue.main.getter(v23);
  v25 = (_QWORD *)swift_allocObject(&unk_100900C50, 56, 7);
  v25[2] = a1;
  v25[3] = a2;
  v25[4] = a3;
  v25[5] = a4;
  v25[6] = a5;
  aBlock[4] = (uint64_t)sub_10039A9F0;
  v45 = v25;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000147F0;
  aBlock[3] = (uint64_t)&unk_100900C68;
  v26 = _Block_copy(aBlock);
  v27 = v45;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  swift_retain(a5);
  swift_release(v27);
  static DispatchQoS.unspecified.getter(v28);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v29 = sub_100008E8C();
  v30 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v31 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  v32 = v40;
  v33 = v30;
  v34 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v33, v31, v42, v29);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v32, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v14, v39);
}

void sub_100399AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v6;
  NSString v7;
  unsigned __int8 v8;
  NSString v9;
  NSString v10;
  void *Strong;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  NSString v16;
  _BYTE v17[24];

  v5 = a5 + 16;
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(v6, "isRunningTest:", v7);

  if ((v8 & 1) == 0)
  {
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "startedTest:", v9);

  }
  v10 = String._bridgeToObjectiveC()();
  swift_beginAccess(v5, v17, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v12 = Strong;
    v13 = objc_msgSend(Strong, "errorMessage");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v15 = v14;

  }
  else
  {
    v15 = 0xED0000726F727265;
  }
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  objc_msgSend(v6, "failedTest:withFailure:", v10, v16);

}

id sub_100399CB8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PPTRunner();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PPTRunner()
{
  return objc_opt_self(_TtC5Books9PPTRunner);
}

uint64_t destroy for PPTRunner.TestCase(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[2]);
  return swift_bridgeObjectRelease(a1[3]);
}

_QWORD *initializeWithCopy for PPTRunner.TestCase(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  a1[2] = v4;
  a1[3] = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

_QWORD *assignWithCopy for PPTRunner.TestCase(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

_QWORD *assignWithTake for PPTRunner.TestCase(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v4);
  v5 = a1[3];
  a1[3] = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v5);
  return a1;
}

ValueMetadata *type metadata accessor for PPTRunner.TestCase()
{
  return &type metadata for PPTRunner.TestCase;
}

void sub_100399EB4(uint64_t a1, void *a2, char a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  NSString *v16;
  Class v17;
  uint64_t ObjCClassMetadata;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSString v31;
  Class isa;
  Class v33;
  id v34;
  id v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  void *object;
  char v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v16 = (NSString *)String._bridgeToObjectiveC()();
  v17 = NSClassFromString(v16);

  if (v17
    && (ObjCClassMetadata = swift_getObjCClassMetadata(v17),
        v19 = sub_100009E04(0, &qword_1009DEB48, &off_1008E5BD0),
        (v20 = swift_dynamicCastMetatype(ObjCClassMetadata, v19)) != 0))
  {
    v21 = v20;
    if (qword_1009CE248 != -1)
      swift_once(&qword_1009CE248, sub_10000B8CC);
    v44 = a3;
    v22 = type metadata accessor for Logger(0);
    sub_100048F64(v22, (uint64_t)qword_1009DEA98);
    v23 = swift_bridgeObjectRetain_n(a5, 2);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.info.getter(v24);
    v45 = a8;
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v27 = swift_slowAlloc(32, -1);
      v47 = v27;
      *(_DWORD *)v26 = 136446210;
      swift_bridgeObjectRetain(a5);
      v46 = sub_100040F58(a4, (unint64_t)a5, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47, v26 + 4, v26 + 12);
      swift_bridgeObjectRelease_n(a5, 3);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "adding test named: %{public}s", v26, 0xCu);
      swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a5, 2);
    }
    v28 = sub_1004EC9E0(a6);
    v29 = sub_1004EC9E0(a7);
    v30 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v21));
    swift_bridgeObjectRetain(a5);
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v28);
    v33 = Dictionary._bridgeToObjectiveC()().super.isa;
    v34 = objc_msgSend(v30, "initWithName:options:testDefinition:isMainTest:", v31, isa, v33, v44 & 1, swift_bridgeObjectRelease(v29).n128_f64[0]);

    if (v34)
    {
      v35 = v34;
      v36 = objc_msgSend(v45, "testQueue");
      objc_msgSend(v36, "addObject:", v35);

      return;
    }
    v47 = 0;
    v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(51);
    v41._object = (void *)0x80000001007C4630;
    v41._countAndFlagsBits = 0xD000000000000031;
    String.append(_:)(v41);
    v42._countAndFlagsBits = _typeName(_:qualified:)(v21, 0);
    object = v42._object;
    String.append(_:)(v42);
    swift_bridgeObjectRelease(object);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v47, v48, "Books/PPTRunner.swift", 21, 2, 136, 0);
  }
  else
  {
    _StringGuts.grow(_:)(29);
    swift_bridgeObjectRelease(0xE000000000000000);
    v47 = 0x616C632074736574;
    v48 = 0xEB00000000207373;
    v37._countAndFlagsBits = a1;
    v37._object = a2;
    String.append(_:)(v37);
    v38._countAndFlagsBits = 543584032;
    v38._object = (void *)0xE400000000000000;
    String.append(_:)(v38);
    v39._countAndFlagsBits = a4;
    v39._object = a5;
    String.append(_:)(v39);
    v40._countAndFlagsBits = 0x756F6620746F6E20;
    v40._object = (void *)0xEA0000000000646ELL;
    String.append(_:)(v40);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0x616C632074736574, 0xEB00000000207373, "Books/PPTRunner.swift", 21, 2, 131, 0);
  }
  __break(1u);
}

id sub_10039A334(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void *v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  _QWORD *v47;
  void *v48;
  uint64_t v49[4];

  v46 = objc_msgSend(objc_allocWithZone((Class)PPTTestRunner), "init");
  if (*(_QWORD *)(a4 + 16)
    && (v8 = sub_10004CE80(0xD000000000000011, 0x80000001007C45F0), (v9 & 1) != 0)
    && (sub_10004CD0C(*(_QWORD *)(a4 + 56) + 32 * v8, (uint64_t)v49),
        v10 = sub_10004CFD4((uint64_t *)&unk_1009DBB30),
        swift_dynamicCast(&v47, v49, (char *)&type metadata for Any + 8, v10, 6)))
  {
    v11 = v47;
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v12 = v11[2];
  v44 = a3;
  v45 = a4;
  if (v12)
  {
    v42 = v11;
    v13 = (uint64_t)(v11 + 4);
    do
    {
      sub_10004CD0C(v13, (uint64_t)v49);
      if (swift_dynamicCast(&v47, v49, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      {
        v14 = v48;
        sub_100399EB4((uint64_t)v47, v48, 0, a1, a2, a3, a4, v46);
        swift_bridgeObjectRelease(v14);
      }
      else
      {
        if (qword_1009CE248 != -1)
          swift_once(&qword_1009CE248, sub_10000B8CC);
        v15 = type metadata accessor for Logger(0);
        sub_100048F64(v15, (uint64_t)qword_1009DEA98);
        v16 = swift_bridgeObjectRetain_n(a2, 2);
        v17 = Logger.logObject.getter(v16);
        v18 = static os_log_type_t.error.getter(v17);
        if (os_log_type_enabled(v17, v18))
        {
          v19 = swift_slowAlloc(12, -1);
          v20 = swift_slowAlloc(32, -1);
          v49[0] = v20;
          *(_DWORD *)v19 = 136446210;
          swift_bridgeObjectRetain(a2);
          *(_QWORD *)(v19 + 4) = sub_100040F58(a1, (unint64_t)a2, v49);
          swift_bridgeObjectRelease_n(a2, 3);
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "malformed job in preliminary-tests: %{public}s", (uint8_t *)v19, 0xCu);
          swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
          v21 = v20;
          a3 = v44;
          swift_slowDealloc(v21, -1, -1);
          v22 = v19;
          a4 = v45;
          swift_slowDealloc(v22, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(a2, 2);
        }
      }
      v13 += 32;
      --v12;
    }
    while (v12);
    v11 = v42;
  }
  swift_bridgeObjectRelease(v11);
  if (*(_QWORD *)(a4 + 16))
  {
    v23 = sub_10004CE80(0x7365742D6E69616DLL, 0xE900000000000074);
    if ((v24 & 1) != 0)
    {
      sub_10004CD0C(*(_QWORD *)(a4 + 56) + 32 * v23, (uint64_t)v49);
      if ((swift_dynamicCast(&v47, v49, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v25 = v48;
        sub_100399EB4((uint64_t)v47, v48, 1, a1, a2, a3, a4, v46);
        swift_bridgeObjectRelease(v25);
      }
    }
  }
  if (*(_QWORD *)(a4 + 16)
    && (v26 = sub_10004CE80(0x2D70756E61656C63, 0xED00007374736574), (v27 & 1) != 0)
    && (sub_10004CD0C(*(_QWORD *)(a4 + 56) + 32 * v26, (uint64_t)v49),
        v28 = sub_10004CFD4((uint64_t *)&unk_1009DBB30),
        swift_dynamicCast(&v47, v49, (char *)&type metadata for Any + 8, v28, 6)))
  {
    v29 = v47;
  }
  else
  {
    v29 = _swiftEmptyArrayStorage;
  }
  v30 = v29[2];
  if (v30)
  {
    v43 = v29;
    v31 = (uint64_t)(v29 + 4);
    do
    {
      sub_10004CD0C(v31, (uint64_t)v49);
      if (swift_dynamicCast(&v47, v49, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      {
        v32 = v48;
        sub_100399EB4((uint64_t)v47, v48, 0, a1, a2, a3, a4, v46);
        swift_bridgeObjectRelease(v32);
      }
      else
      {
        if (qword_1009CE248 != -1)
          swift_once(&qword_1009CE248, sub_10000B8CC);
        v33 = type metadata accessor for Logger(0);
        sub_100048F64(v33, (uint64_t)qword_1009DEA98);
        v34 = swift_bridgeObjectRetain_n(a2, 2);
        v35 = Logger.logObject.getter(v34);
        v36 = static os_log_type_t.error.getter(v35);
        if (os_log_type_enabled(v35, v36))
        {
          v37 = swift_slowAlloc(12, -1);
          v38 = swift_slowAlloc(32, -1);
          v49[0] = v38;
          *(_DWORD *)v37 = 136446210;
          swift_bridgeObjectRetain(a2);
          *(_QWORD *)(v37 + 4) = sub_100040F58(a1, (unint64_t)a2, v49);
          swift_bridgeObjectRelease_n(a2, 3);
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "malformed job in cleanup-tests: %{public}s", (uint8_t *)v37, 0xCu);
          swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
          v39 = v38;
          a3 = v44;
          swift_slowDealloc(v39, -1, -1);
          v40 = v37;
          a4 = v45;
          swift_slowDealloc(v40, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(a2, 2);
        }
      }
      v31 += 32;
      --v30;
    }
    while (v30);
    v29 = v43;
  }
  swift_bridgeObjectRelease(v29);
  return v46;
}

uint64_t sub_10039A8F0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10039A914()
{
  uint64_t v0;

  sub_1003993BC(v0);
}

double sub_10039A920()
{
  uint64_t v0;

  return sub_1003994F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), "started test named: %{public}s");
}

uint64_t sub_10039A948()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

double sub_10039A97C()
{
  uint64_t v0;

  return sub_1003994F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), "finished test named: %{public}s");
}

uint64_t sub_10039A9A4()
{
  return sub_10039A9FC(sub_1003996F0);
}

uint64_t sub_10039A9B4()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10039A9F0()
{
  return sub_10039A9FC((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100399AE0);
}

uint64_t sub_10039A9FC(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10039AA10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10039AA34()
{
  sub_1003989AC();
}

void sub_10039AA54(void *a1)
{
  uint64_t v1;

  sub_1003984E4(a1, *(void **)(v1 + 16));
}

uint64_t sub_10039AA5C()
{
  return sub_100398678();
}

id sub_10039AB90()
{
  return sub_10023803C(type metadata accessor for BookMessagesCell);
}

Swift::Void __swiftcall BookMessagesDebugViewController.viewDidLoad()()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t ObjCClassFromMetadata;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;
  objc_super v32;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for BookMessagesDebugViewController();
  v32.receiver = v0;
  v32.super_class = v8;
  objc_msgSendSuper2(&v32, "viewDidLoad");
  v9 = *(void **)&v0[OBJC_IVAR___BKBookMessagesDebugViewController_propertyConfiguration];
  if (v9)
  {
    swift_unknownObjectRetain(*(_QWORD *)&v0[OBJC_IVAR___BKBookMessagesDebugViewController_propertyConfiguration]);
    v10 = objc_msgSend(v0, "navigationItem");
    v11 = objc_msgSend(v9, "eventName");
    static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
    v13 = v12;

    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "setTitle:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);
    swift_unknownObjectRelease(v9);
  }
  else
  {
    v10 = objc_msgSend(v0, "navigationItem");
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v10, "setTitle:", v14);
  }

  v15 = sub_100059BB4();
  v16 = (void *)static OS_dispatch_queue.main.getter(v15);
  v17 = swift_allocObject(&unk_100900D90, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  aBlock[4] = sub_10039B178;
  v31 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_100900DA8;
  v18 = _Block_copy(aBlock);
  swift_release(v31);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  v20 = sub_100008E8C();
  v21 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v22 = sub_100065324();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v2, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v28);
  v23 = objc_msgSend(v1, "tableView");
  if (v23)
  {
    v24 = v23;
    v25 = type metadata accessor for BookMessagesCell();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v25);
    v27 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v27);

  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for BookMessagesDebugViewController()
{
  return objc_opt_self(BKBookMessagesDebugViewController);
}

uint64_t sub_10039B00C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10039B030(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _BYTE v16[24];

  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "delegate");

  if (v3)
  {
    v4 = objc_opt_self(BKAppDelegate);
    v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
    if (v5 && (v6 = objc_msgSend(v5, "engagementManager")) != 0)
    {
      v7 = v6;
      v8 = a1 + 16;
      swift_beginAccess(v8, v16, 0, 0);
      Strong = swift_unknownObjectWeakLoadStrong(v8);
      if (Strong)
      {
        v10 = (void *)Strong;
        v11 = *(void **)(Strong + OBJC_IVAR___BKBookMessagesDebugViewController_manager);
        *(_QWORD *)(Strong + OBJC_IVAR___BKBookMessagesDebugViewController_manager) = v7;
        v12 = v7;

      }
      swift_beginAccess(v8, &v15, 0, 0);
      v13 = swift_unknownObjectWeakLoadStrong(v8);
      if (v13)
      {
        v14 = (void *)v13;
        sub_10039B1D4();

      }
      swift_unknownObjectRelease(v3);
    }
    else
    {
      swift_unknownObjectRelease(v3);
    }
  }
}

void sub_10039B178()
{
  uint64_t v0;

  sub_10039B030(v0);
}

uint64_t type metadata accessor for BookMessagesCell()
{
  return objc_opt_self(_TtC5Books16BookMessagesCell);
}

void sub_10039B1D4()
{
  char *v0;
  char *v1;
  void *v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  NSString v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;

  v1 = *(char **)&v0[OBJC_IVAR___BKBookMessagesDebugViewController_manager];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR___BKBookMessagesDebugViewController_propertyConfiguration];
    v14 = *(id *)&v0[OBJC_IVAR___BKBookMessagesDebugViewController_manager];
    if (v2)
    {
      v3 = v1;
      swift_unknownObjectRetain(v2);
      v4 = objc_msgSend(v0, "navigationItem");
      v5 = objc_msgSend(v2, "eventName");
      static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
      v7 = v6;

      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(v4, "setTitle:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);

      v9 = *(void **)&v3[OBJC_IVAR___BKEngagementManager_manager];
      v10 = swift_allocObject(&unk_100900D90, 24, 7);
      swift_unknownObjectWeakInit(v10 + 16);
      v11 = v9;
      swift_retain(v10);
      Manager.getProperties(config:assetIDs:completion:)(v2, 0, sub_10039BFFC, v10);
      swift_unknownObjectRelease(v2);
    }
    else
    {
      v12 = *(void **)&v1[OBJC_IVAR___BKEngagementManager_manager];
      v10 = swift_allocObject(&unk_100900D90, 24, 7);
      swift_unknownObjectWeakInit(v10 + 16);
      v13 = v14;
      v11 = v12;
      swift_retain(v10);
      Manager.getAllConfigurations(completion:)(sub_10039BFCC, v10);
    }

    swift_release_n(v10, 2);
  }
}

uint64_t sub_10039B3B0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;
  _BYTE v34[24];

  v30 = a5;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(a2 + 16, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 16);
  if (Strong)
  {
    v17 = (void *)Strong;
    v18 = *a3;
    v19 = *(_QWORD *)(Strong + *a3);
    *(_QWORD *)(Strong + v18) = a1;
    swift_bridgeObjectRetain(a1);

    swift_bridgeObjectRelease(v19);
  }
  v20 = sub_100059BB4();
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  aBlock[4] = a4;
  v33 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = v30;
  v22 = _Block_copy(aBlock);
  v23 = v33;
  swift_retain(a2);
  swift_release(v23);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_100008E8C();
  v26 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v27 = sub_100065324();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v9, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v11, v22);
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_10039B5B8(uint64_t a1)
{
  uint64_t v1;
  void *Strong;
  void *v3;
  id v4;
  _BYTE v5[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v5, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = objc_msgSend(Strong, "tableView");

    if (v4)
    {
      objc_msgSend(v4, "reloadData");

    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t BookMessagesDebugViewController.tableView(_:cellForRowAt:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  NSString v4;
  Class isa;
  id v6;
  id v7;
  void *v8;
  id v9;
  __n128 v10;
  void *v11;
  uint64_t v12;
  unint64_t result;
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  NSString v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v4, isa);

  v7 = objc_msgSend(v6, "textLabel");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "setNumberOfLines:", 0);

  }
  v9 = objc_msgSend(v6, "textLabel");
  if (v9)
  {
    v11 = v9;
    objc_msgSend(v9, "setLineBreakMode:", 0);

  }
  v12 = *(_QWORD *)(v1 + OBJC_IVAR___BKBookMessagesDebugViewController_propertyConfiguration);
  result = IndexPath.row.getter(v10);
  v14 = result;
  if (v12)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v15 = *(_QWORD *)(v2 + OBJC_IVAR___BKBookMessagesDebugViewController_properties);
      if (result < *(_QWORD *)(v15 + 16))
      {
        sub_100316B8C(v15 + 48 * result + 32, (uint64_t)&v31);
        sub_100316BC8((uint64_t)&v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004AD60);
        v16 = objc_msgSend(v6, "textLabel");
        if (v16)
        {
          v17 = v16;
          PropertyValue.description.getter(v16);
          v19 = v18;
          sub_100316BC8((uint64_t)&v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
          v20 = String._bridgeToObjectiveC()();
          objc_msgSend(v17, "setText:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

        }
        else
        {
          sub_100316BC8((uint64_t)&v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
        }
        objc_msgSend(v6, "setAccessoryType:", 0);
        return (unint64_t)v6;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  v2 = *(_QWORD *)(v2 + OBJC_IVAR___BKBookMessagesDebugViewController_configurations);
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_24:
    swift_bridgeObjectRetain(v2);
    v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v2);
    swift_bridgeObjectRelease(v2);
    goto LABEL_14;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v21 = *(void **)(v2 + 8 * result + 32);
    swift_unknownObjectRetain(v21);
LABEL_14:
    v22 = objc_msgSend(v6, "textLabel");
    if (v22)
    {
      v23 = v22;
      v24 = objc_msgSend(v21, "eventName");
      objc_msgSend(v23, "setText:", v24);

    }
    v25 = objc_msgSend(v6, "detailTextLabel");
    if (v25)
    {
      v26 = v25;
      v31 = 0;
      v32 = 0xE000000000000000;
      v30 = v21;
      v27 = sub_10004CFD4(&qword_1009DEB78);
      _print_unlocked<A, B>(_:_:)(&v30, &v31, v27, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v28 = v32;
      v29 = String._bridgeToObjectiveC()();
      objc_msgSend(v26, "setText:", v29, swift_bridgeObjectRelease(v28).n128_f64[0]);

    }
    objc_msgSend(v6, "setAccessoryType:", 1);
    swift_unknownObjectRelease(v21);
    return (unint64_t)v6;
  }
  __break(1u);
  return result;
}

void BookMessagesDebugViewController.tableView(_:didSelectRowAt:)(void *a1)
{
  char *v1;
  char *v2;
  Class isa;
  __n128 v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  objc_super v17;

  v2 = v1;
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(a1, "deselectRowAtIndexPath:animated:", isa, 1);

  if (*(_QWORD *)&v1[OBJC_IVAR___BKBookMessagesDebugViewController_propertyConfiguration])
    return;
  v6 = IndexPath.row.getter(v5);
  v7 = v6;
  v8 = *(_QWORD *)&v2[OBJC_IVAR___BKBookMessagesDebugViewController_configurations];
  if ((v8 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR___BKBookMessagesDebugViewController_configurations]);
    v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v8);
    swift_bridgeObjectRelease(v8);
    goto LABEL_6;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v6 >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    __break(1u);
    return;
  }
  v9 = *(_QWORD *)(v8 + 8 * v6 + 32);
  swift_unknownObjectRetain(v9);
LABEL_6:
  v10 = (objc_class *)type metadata accessor for BookMessagesDebugViewController();
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR___BKBookMessagesDebugViewController_manager] = 0;
  v12 = OBJC_IVAR___BKBookMessagesDebugViewController_propertyConfiguration;
  *(_QWORD *)&v11[OBJC_IVAR___BKBookMessagesDebugViewController_propertyConfiguration] = 0;
  *(_QWORD *)&v11[OBJC_IVAR___BKBookMessagesDebugViewController_configurations] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v11[OBJC_IVAR___BKBookMessagesDebugViewController_properties] = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)&v11[v12];
  *(_QWORD *)&v11[v12] = v9;
  swift_unknownObjectRetain_n(v9, 2);
  swift_unknownObjectRelease(v13);
  v17.receiver = v11;
  v17.super_class = v10;
  v14 = objc_msgSendSuper2(&v17, "initWithStyle:", 2);
  swift_unknownObjectRelease(v9);
  v15 = objc_msgSend(v2, "navigationController");
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, "pushViewController:animated:", v14, 1);

  }
  swift_unknownObjectRelease(v9);
}

id BookMessagesDebugViewController.__allocating_init(style:)(uint64_t a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), "initWithStyle:", a1);
}

void BookMessagesDebugViewController.init(style:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.BookMessagesDebugViewController", 37, "init(style:)", 12, 0);
  __break(1u);
}

void BookMessagesDebugViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.BookMessagesDebugViewController", 37, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

id BookMessagesDebugViewController.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for BookMessagesDebugViewController);
}

uint64_t _s5Books31BookMessagesDebugViewControllerC05tableE0_21numberOfRowsInSectionSiSo07UITableE0C_SitF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(v0 + OBJC_IVAR___BKBookMessagesDebugViewController_propertyConfiguration))
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKBookMessagesDebugViewController_properties);
    return *(_QWORD *)(v1 + 16);
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___BKBookMessagesDebugViewController_configurations);
  if (!((unint64_t)v2 >> 62))
  {
    v1 = v2 & 0xFFFFFFFFFFFFF8;
    return *(_QWORD *)(v1 + 16);
  }
  if (v2 < 0)
    v4 = v2;
  else
    v4 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v4);
  swift_bridgeObjectRelease(v2);
  return v5;
}

unint64_t _s5Books31BookMessagesDebugViewControllerC05tableE0_23titleForHeaderInSectionSSSgSo07UITableE0C_SitF_0()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::String v6;

  v1 = *(void **)(v0 + OBJC_IVAR___BKBookMessagesDebugViewController_propertyConfiguration);
  if (!v1)
    return 0xD000000000000017;
  v2 = objc_msgSend(v1, "eventName");
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  v5 = v4;

  v6._countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v5);
  return 0;
}

uint64_t sub_10039BFCC(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B3B0(a1, v1, &OBJC_IVAR___BKBookMessagesDebugViewController_configurations, (uint64_t)sub_10039C02C, (uint64_t)&unk_100900DF8);
}

uint64_t sub_10039BFFC(uint64_t a1)
{
  uint64_t v1;

  return sub_10039B3B0(a1, v1, &OBJC_IVAR___BKBookMessagesDebugViewController_properties, (uint64_t)sub_10039C02C, (uint64_t)&unk_100900DD0);
}

void sub_10039C02C()
{
  uint64_t v0;

  sub_10039B5B8(v0);
}

uint64_t sub_10039C054(uint64_t a1)
{
  char *v2;

  v2 = (char *)&value witness table for Builtin.UnknownObject + 64;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 88);
}

uint64_t type metadata accessor for BridgedAMSPromise(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BridgedAMSPromise);
}

id sub_10039C0A4(id a1, SEL a2)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;

  swift_retain(a1);
  _s8BookEPUB25HighlightAnnotationEntityC5BooksE14annotationUuidSSvg_0();
  v4 = v3;
  swift_release(a1);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  return v5;
}

int sub_10039C100(id a1, SEL a2)
{
  uint64_t v3;
  char v4;

  v3 = swift_retain(a1);
  v4 = dispatch thunk of HighlightAnnotationEntity.style.getter(v3);
  swift_release(a1);
  return dword_10071EA14[v4];
}

uint64_t HighlightAnnotationEntity.annotationStyle.getter(uint64_t a1)
{
  return dword_10071EA14[(char)dispatch thunk of HighlightAnnotationEntity.style.getter(a1)];
}

id sub_10039C164(id a1, SEL a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  Class isa;
  uint64_t v9;

  v3 = type metadata accessor for Date(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain(a1);
  _s8BookEPUB25HighlightAnnotationEntityC5BooksE26annotationModificationDate10Foundation0I0Vvg_0();
  swift_release(a1);
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return isa;
}

BOOL sub_10039C200(id a1, SEL a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = swift_retain(a1);
  v4 = dispatch thunk of HighlightAnnotationEntity.style.getter(v3);
  v5 = AnnotationStyle.rawValue.getter(v4);
  v7 = v6;
  v9 = AnnotationStyle.rawValue.getter(5);
  v10 = v8;
  if (v5 == v9 && v7 == v8)
  {
    v11 = 1;
    v10 = v7;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v9, v8, 0);
  }
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v10);
  swift_release(a1);
  return v11 & 1;
}

uint64_t HighlightAnnotationEntity.annotationIsUnderline.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v1 = dispatch thunk of HighlightAnnotationEntity.style.getter(a1);
  v2 = AnnotationStyle.rawValue.getter(v1);
  v4 = v3;
  v6 = AnnotationStyle.rawValue.getter(5);
  v7 = v5;
  if (v2 == v6 && v4 == v5)
  {
    v8 = 1;
    v7 = v4;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v6, v5, 0);
  }
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v7);
  return v8 & 1;
}

uint64_t sub_10039C320@<X0>(uint64_t a1@<X8>)
{
  return sub_100010B60(&OBJC_IVAR___BKGenreRecommendationProvider____lazy_storage___recommendationManager, &qword_1009DECA0, sub_100022840, (uint64_t)sub_10039E490, a1);
}

uint64_t sub_10039C344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v5[13] = a4;
  v5[14] = a5;
  v6 = type metadata accessor for RecommendationSource(0);
  v5[15] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[16] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[17] = swift_task_alloc(v8);
  v5[18] = swift_task_alloc(v8);
  v9 = type metadata accessor for Genre(0);
  v5[19] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[20] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[21] = swift_task_alloc(v11);
  v5[22] = swift_task_alloc(v11);
  v12 = type metadata accessor for ScoredGenre(0);
  v5[23] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v5[24] = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[25] = swift_task_alloc(v14);
  v5[26] = swift_task_alloc(v14);
  return swift_task_switch(sub_10039C424, 0, 0);
}

uint64_t sub_10039C424()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[10] = _swiftEmptyArrayStorage;
  sub_10039C320((uint64_t)(v0 + 2));
  sub_10003F198(v0 + 2, v0[5]);
  v1 = (_QWORD *)swift_task_alloc(dword_1009E698C);
  v0[27] = v1;
  *v1 = v0;
  v1[1] = sub_10039C494;
  return sub_1004BAF2C();
}

uint64_t sub_10039C494(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 216);
  *(_QWORD *)(v3 + 224) = a1;
  *(_QWORD *)(v3 + 232) = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_10039CBE4;
  else
    v5 = sub_10039C500;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10039C500()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD, uint64_t, _QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(uint64_t, unint64_t, uint64_t);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  JSValue v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  Swift::String v74;
  Swift::Int v75;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(_QWORD, uint64_t, _QWORD, __n128);
  uint64_t v83;
  unsigned int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  Swift::OpaquePointer_optional v93;

  v78 = (_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 224);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v2 = *(_QWORD *)(v1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v89 = v1;
    v4 = *(_QWORD *)(v0 + 224);
    v5 = *(_QWORD *)(v0 + 192);
    v90 = *(_QWORD *)(v0 + 160);
    sub_100366AFC(0, v2, 0);
    v6 = v4 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    v8 = *(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v5 + 16);
    do
    {
      v9 = *(_QWORD *)(v0 + 176);
      v10 = *(_QWORD *)(v0 + 152);
      v11 = v8(*(_QWORD *)(v0 + 208), v6, *(_QWORD *)(v0 + 184));
      v12 = ScoredGenre.genre.getter(v11);
      v13 = Genre.storeID.getter(v12);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v9, v10);
      if (v13 < 0)
      {
        __break(1u);
        goto LABEL_39;
      }
      (*(void (**)(_QWORD, _QWORD))(v5 + 8))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 184));
      if ((swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage) & 1) == 0)
        sub_100366AFC(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v15 = _swiftEmptyArrayStorage[2];
      v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1)
        sub_100366AFC(v14 > 1, v15 + 1, 1);
      _swiftEmptyArrayStorage[2] = v15 + 1;
      _swiftEmptyArrayStorage[v15 + 4] = v13;
      v6 += v7;
      --v2;
    }
    while (v2);
    v3 = (_QWORD *)*v78;
    v1 = v89;
  }
  swift_bridgeObjectRelease(v3);
  *(_QWORD *)(v0 + 80) = _swiftEmptyArrayStorage;
  v16 = *(_QWORD *)(v1 + 16);
  v17 = *(_QWORD *)(v0 + 224);
  if (!v16)
  {
    swift_bridgeObjectRelease(v17);
LABEL_31:
    LOBYTE(v89) = 0;
LABEL_32:
    if (qword_1009CE258 != -1)
      goto LABEL_40;
    goto LABEL_33;
  }
  v18 = *(_QWORD *)(v0 + 192);
  v19 = *(_QWORD *)(v0 + 128);
  v85 = v17 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v86 = *(_QWORD *)(v0 + 160);
  v84 = enum case for RecommendationSource.siri(_:);
  v82 = *(uint64_t (**)(_QWORD, uint64_t, _QWORD, __n128))(v18 + 16);
  v83 = *(_QWORD *)(v18 + 72);
  v20 = swift_bridgeObjectRetain(v17);
  v21 = 0;
  v80 = v18;
  v81 = v19;
  v77 = v16;
  while (1)
  {
    v27 = *(_QWORD *)(v0 + 168);
    v29 = *(_QWORD *)(v0 + 144);
    v28 = *(_QWORD *)(v0 + 152);
    v88 = v21;
    v30 = *(_QWORD *)(v0 + 120);
    v31 = v82(*(_QWORD *)(v0 + 200), v85 + v21 * v83, *(_QWORD *)(v0 + 184), v20);
    v32 = ScoredGenre.genre.getter(v31);
    v33 = Genre.sources.getter(v32);
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v27, v28);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v19 + 104))(v29, v84, v30);
    v91 = *(_QWORD *)(v33 + 16);
    if (v91)
      break;
    v22 = v33;
    v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
LABEL_13:
    v24 = *(_QWORD *)(v0 + 200);
    v25 = *(_QWORD *)(v0 + 184);
    v23(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
    v21 = v88 + 1;
    v26 = swift_bridgeObjectRelease(v22);
    (*(void (**)(uint64_t, uint64_t, __n128))(v18 + 8))(v24, v25, v26);
    if (v88 + 1 == v16)
    {
      swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 224), 2);
      goto LABEL_31;
    }
  }
  v34 = v16;
  v36 = *(_QWORD *)(v0 + 136);
  v35 = *(_QWORD *)(v0 + 144);
  v37 = *(_QWORD *)(v0 + 120);
  v79 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v38 = v33 + v79;
  v39 = v33;
  v40 = v19;
  v41 = *(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 16);
  v41(v36, v38, v37);
  v42 = sub_10039E580();
  v87 = v39;
  swift_bridgeObjectRetain(v39);
  LOBYTE(v35) = dispatch thunk of static Equatable.== infix(_:_:)(v36, v35, v37, v42);
  v23 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
  v23(v36, v37);
  if ((v35 & 1) != 0)
  {
LABEL_27:
    v52 = v87;
    v53 = swift_bridgeObjectRelease(v87);
    v18 = v80;
LABEL_28:
    v54 = *(_QWORD *)(v0 + 224);
    v55 = *(_QWORD *)(v0 + 200);
    v56 = *(_QWORD *)(v0 + 184);
    ((void (*)(_QWORD, _QWORD, __n128))v23)(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120), v53);
    v57 = swift_bridgeObjectRelease(v52);
    (*(void (**)(uint64_t, uint64_t, __n128))(v18 + 8))(v55, v56, v57);
    swift_bridgeObjectRelease_n(v54, 2);
    LOBYTE(v89) = 1;
    goto LABEL_32;
  }
  v16 = v34;
  if (v91 == 1)
  {
    v22 = v87;
    swift_bridgeObjectRelease(v87);
    v18 = v80;
    v19 = v81;
    goto LABEL_13;
  }
  v44 = *(_QWORD *)(v0 + 136);
  v43 = *(_QWORD *)(v0 + 144);
  v45 = *(_QWORD *)(v0 + 120);
  v89 = *(_QWORD *)(v81 + 72);
  v41(v44, v38 + v89, v45);
  LOBYTE(v43) = dispatch thunk of static Equatable.== infix(_:_:)(v44, v43, v45, v42);
  v23(v44, v45);
  v18 = v80;
  if ((v43 & 1) != 0)
  {
    v52 = v87;
    v53 = swift_bridgeObjectRelease(v87);
    goto LABEL_28;
  }
  if (v91 == 2)
  {
    v22 = v87;
    swift_bridgeObjectRelease(v87);
LABEL_26:
    v19 = v81;
    goto LABEL_13;
  }
  v46 = v87 + v79 + 2 * v89;
  v47 = 2;
  while (1)
  {
    v41(*(_QWORD *)(v0 + 136), v46, *(_QWORD *)(v0 + 120));
    v48 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    v49 = *(_QWORD *)(v0 + 136);
    v50 = *(_QWORD *)(v0 + 120);
    v51 = dispatch thunk of static Equatable.== infix(_:_:)(v49, *(_QWORD *)(v0 + 144), v50, v42);
    v23(v49, v50);
    if ((v51 & 1) != 0)
      goto LABEL_27;
    ++v47;
    v46 += v89;
    if (v48 == v91)
    {
      v22 = v87;
      swift_bridgeObjectRelease(v87);
      v18 = v80;
      v16 = v77;
      goto LABEL_26;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  swift_once(&qword_1009CE258, sub_10000B108);
LABEL_33:
  v58 = type metadata accessor for Logger(0);
  sub_100048F64(v58, (uint64_t)qword_100A1E770);
  v59 = (_QWORD *)*v78;
  swift_bridgeObjectRetain(*v78);
  v61 = Logger.logObject.getter(v60);
  v62 = static os_log_type_t.default.getter(v61);
  if (os_log_type_enabled(v61, v62))
  {
    v63 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v63 = 134217984;
    *(_QWORD *)(v0 + 88) = v59[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v0 + 96, v63 + 4, v63 + 12);
    swift_bridgeObjectRelease(v59);
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "recommendedGenres: genreIDs: %ld", v63, 0xCu);
    swift_slowDealloc(v63, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease(v59);
  }

  v64 = *(_QWORD *)(v0 + 200);
  v65 = *(_QWORD *)(v0 + 208);
  v66 = *(_QWORD *)(v0 + 168);
  v67 = *(_QWORD *)(v0 + 176);
  v68 = *(_QWORD *)(v0 + 144);
  v92 = *(_QWORD *)(v0 + 136);
  v69.super.isa = *(Class *)(v0 + 112);
  v70 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v71 = sub_10004CFD4(&qword_1009D4B80);
  v72 = swift_allocObject(v71, 96, 7);
  *(_OWORD *)(v72 + 16) = xmmword_10070FC00;
  swift_beginAccess(v78, v0 + 56, 0, 0);
  v73 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v72 + 56) = sub_10004CFD4(&qword_1009D30B0);
  *(_QWORD *)(v72 + 32) = v73;
  *(_QWORD *)(v72 + 88) = &type metadata for Bool;
  *(_BYTE *)(v72 + 64) = v89;
  v74._countAndFlagsBits = 0x80000001007C4910;
  v93.value._rawValue = (void *)v72;
  v93.is_nil = 109;
  v74._object = (void *)62;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v69, v93, v74, v75);
  swift_bridgeObjectRelease(v72);

  swift_task_dealloc(v65);
  swift_task_dealloc(v64);
  swift_task_dealloc(v67);
  swift_task_dealloc(v66);
  swift_task_dealloc(v68);
  swift_task_dealloc(v92);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039CBE4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  JSValue v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::Int v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  Swift::OpaquePointer_optional v34;

  v32 = v0 + 96;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v1 = &qword_1009CE000;
  if (qword_1009CE258 != -1)
    swift_once(&qword_1009CE258, sub_10000B108);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = type metadata accessor for Logger(0);
  sub_100048F64(v3, (uint64_t)qword_100A1E770);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(_QWORD *)(v0 + 232);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    swift_errorRetain(v8);
    v11 = _swift_stdlib_bridgeErrorToNSError(v8);
    *(_QWORD *)(v0 + 96) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v32, v0 + 104, v9 + 4, v9 + 12);
    *v10 = v11;
    v1 = &qword_1009CE000;
    swift_errorRelease(v8);
    swift_errorRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "recommendedGenres: fetchRecommendedGenres failed. error: %@", v9, 0xCu);
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v8);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 232));
    swift_errorRelease(v8);
    swift_errorRelease(v8);

  }
  v13 = (_QWORD *)(v0 + 80);
  if (v1[75] != -1)
    swift_once(&qword_1009CE258, sub_10000B108);
  sub_100048F64(v3, (uint64_t)qword_100A1E770);
  v14 = *v13;
  swift_bridgeObjectRetain(*v13);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v18 = 134217984;
    *(_QWORD *)(v0 + 88) = *(_QWORD *)(v14 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 88, v32, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "recommendedGenres: genreIDs: %ld", v18, 0xCu);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease(v14);
  }

  v19 = *(_QWORD *)(v0 + 200);
  v20 = *(_QWORD *)(v0 + 208);
  v21 = *(_QWORD *)(v0 + 168);
  v22 = *(_QWORD *)(v0 + 176);
  v31 = *(_QWORD *)(v0 + 144);
  v33 = *(_QWORD *)(v0 + 136);
  v23.super.isa = *(Class *)(v0 + 112);
  v24 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v25 = sub_10004CFD4(&qword_1009D4B80);
  v26 = swift_allocObject(v25, 96, 7);
  *(_OWORD *)(v26 + 16) = xmmword_10070FC00;
  swift_beginAccess(v0 + 80, v0 + 56, 0, 0);
  v27 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v26 + 56) = sub_10004CFD4(&qword_1009D30B0);
  *(_QWORD *)(v26 + 32) = v27;
  *(_QWORD *)(v26 + 88) = &type metadata for Bool;
  *(_BYTE *)(v26 + 64) = 0;
  v28._countAndFlagsBits = 0x80000001007C4910;
  v34.value._rawValue = (void *)v26;
  v34.is_nil = 109;
  v28._object = (void *)62;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v23, v34, v28, v29);
  swift_bridgeObjectRelease(v26);

  swift_task_dealloc(v20);
  swift_task_dealloc(v19);
  swift_task_dealloc(v22);
  swift_task_dealloc(v21);
  swift_task_dealloc(v31);
  swift_task_dealloc(v33);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039D0C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v6[42] = a5;
  v6[43] = a6;
  v6[41] = a4;
  v7 = type metadata accessor for Book.MediaType(0);
  v6[44] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[45] = v8;
  v6[46] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RecommendationSource(0);
  v6[47] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[48] = v10;
  v11 = (*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[49] = swift_task_alloc(v11);
  v6[50] = swift_task_alloc(v11);
  v12 = type metadata accessor for Genre(0);
  v6[51] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v6[52] = v13;
  v6[53] = swift_task_alloc((*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for GenreCollection(0);
  v6[54] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v6[55] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[56] = swift_task_alloc(v16);
  v6[57] = swift_task_alloc(v16);
  v17 = sub_10004CFD4(&qword_1009DECC0);
  v6[58] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v17 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for GenreCollectionRecommendationRequest(0);
  v6[59] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v6[60] = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[61] = swift_task_alloc(v20);
  v6[62] = swift_task_alloc(v20);
  v21 = sub_10004CFD4(&qword_1009DECC8);
  v6[63] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v21 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Book.SaleType(0);
  v6[64] = v22;
  v23 = *(_QWORD *)(v22 - 8);
  v6[65] = v23;
  v24 = (*(_QWORD *)(v23 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v6[66] = swift_task_alloc(v24);
  v6[67] = swift_task_alloc(v24);
  v6[68] = swift_task_alloc(v24);
  v6[69] = swift_task_alloc(v24);
  v6[70] = swift_task_alloc(v24);
  return swift_task_switch(sub_10039D29C, 0, 0);
}

uint64_t sub_10039D29C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  JSValue v28;
  id v29;
  Swift::String v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  __n128 v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  void (*v65)(uint64_t, char *, uint64_t, __n128);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  Swift::OpaquePointer_optional v72;

  if (objc_msgSend(*(id *)(v0 + 328), "isArray")
    && (v1 = objc_msgSend(*(id *)(v0 + 328), "toArray")) != 0
    && (v2 = v1,
        v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, (char *)&type metadata for Any + 8),
        v2,
        v4 = sub_100015520(v3),
        swift_bridgeObjectRelease(v3),
        v4))
  {
    v5 = v4[2];
    if (v5)
    {
      v6 = *(_QWORD *)(v0 + 520);
      swift_bridgeObjectRetain(v4);
      v7 = v4 + 5;
      v8 = _swiftEmptyArrayStorage;
      do
      {
        v9 = (unint64_t)v8;
        v11 = *(_QWORD *)(v0 + 504);
        v10 = *(_QWORD *)(v0 + 512);
        v12 = *(v7 - 1);
        v13 = *v7;
        v14 = swift_bridgeObjectRetain(*v7);
        Book.SaleType.init(rawValue:)(v12, v13, v14);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v11, 1, v10) == 1)
        {
          sub_100010960(*(_QWORD *)(v0 + 504), &qword_1009DECC8);
          v8 = (_QWORD *)v9;
        }
        else
        {
          v15 = *(_QWORD *)(v0 + 560);
          v16 = *(_QWORD *)(v0 + 552);
          v17 = *(_QWORD *)(v0 + 512);
          v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
          v18(v15, *(_QWORD *)(v0 + 504), v17);
          v18(v16, v15, v17);
          v8 = (_QWORD *)v9;
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v8 = (_QWORD *)sub_1000646A8(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
          v20 = v8[2];
          v19 = v8[3];
          if (v20 >= v19 >> 1)
            v8 = (_QWORD *)sub_1000646A8(v19 > 1, v20 + 1, 1, (unint64_t)v8);
          v21 = *(_QWORD *)(v0 + 552);
          v22 = *(_QWORD *)(v0 + 512);
          v8[2] = v20 + 1;
          v18((uint64_t)v8+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v20, v21, v22);
        }
        v7 += 2;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease(v4);
    }
    else
    {
      v8 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(v4);
    v42 = v8[2];
    if (v42)
    {
      v69 = *(_QWORD *)(v0 + 520);
      v71 = *(_QWORD *)(v0 + 480);
      v43 = (char *)v8 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
      v65 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v69 + 16);
      v67 = *(_QWORD *)(v69 + 72);
      v63 = v8;
      v44 = swift_bridgeObjectRetain(v8);
      v45 = _swiftEmptyArrayStorage;
      do
      {
        v46 = *(_QWORD *)(v0 + 544);
        v47 = *(_QWORD *)(v0 + 536);
        v48 = *(_QWORD *)(v0 + 512);
        v50 = *(_QWORD *)(v0 + 464);
        v49 = *(_QWORD *)(v0 + 472);
        v65(v46, v43, v48, v44);
        ((void (*)(uint64_t, uint64_t, uint64_t))v65)(v47, v46, v48);
        GenreCollectionRecommendationRequest.init(preferredSaleType:)(v47);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v50, 0, 1, v49);
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v46, v48);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v50, 1, v49) == 1)
        {
          sub_100010960(*(_QWORD *)(v0 + 464), &qword_1009DECC0);
        }
        else
        {
          v52 = *(_QWORD *)(v0 + 488);
          v51 = *(_QWORD *)(v0 + 496);
          v53 = *(_QWORD *)(v0 + 472);
          v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32);
          v54(v51, *(_QWORD *)(v0 + 464), v53);
          v54(v52, v51, v53);
          if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) == 0)
            v45 = (_QWORD *)sub_1000646BC(0, v45[2] + 1, 1, (unint64_t)v45);
          v56 = v45[2];
          v55 = v45[3];
          if (v56 >= v55 >> 1)
            v45 = (_QWORD *)sub_1000646BC(v55 > 1, v56 + 1, 1, (unint64_t)v45);
          v57 = *(_QWORD *)(v0 + 488);
          v58 = *(_QWORD *)(v0 + 472);
          v45[2] = v56 + 1;
          v54((uint64_t)v45+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(_QWORD *)(v71 + 72) * v56, v57, v58);
        }
        v43 += v67;
        --v42;
      }
      while (v42);
      swift_bridgeObjectRelease_n(v63, 2);
    }
    else
    {
      swift_bridgeObjectRelease(v8);
      v45 = _swiftEmptyArrayStorage;
    }
    *(_QWORD *)(v0 + 568) = v45;
    sub_100068AE0(v0 + 240);
    v59 = *(_QWORD *)(v0 + 264);
    v60 = *(_QWORD *)(v0 + 272);
    sub_10003F198((_QWORD *)(v0 + 240), v59);
    v61 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of GenreCollectionRecommendationServiceType.fetchRecommendedGenreCollections(for:)[1]);
    *(_QWORD *)(v0 + 576) = v61;
    *v61 = v0;
    v61[1] = sub_10039D8A4;
    return dispatch thunk of GenreCollectionRecommendationServiceType.fetchRecommendedGenreCollections(for:)(v45, v59, v60);
  }
  else
  {
    if (qword_1009CE258 != -1)
      swift_once(&qword_1009CE258, sub_10000B108);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100048F64(v23, (uint64_t)qword_100A1E770);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "recommendedCollectionGenres: sale types provided doesn't match existing types.", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }
    v28.super.isa = *(Class *)(v0 + 336);

    v29 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
    v30._countAndFlagsBits = 0x80000001007C4910;
    v72.value._rawValue = _swiftEmptyArrayStorage;
    v72.is_nil = 109;
    v30._object = (void *)74;
    JSABridge.enqueueValueCall(_:arguments:f:l:)(v28, v72, v30, v31);

    v32 = *(_QWORD *)(v0 + 552);
    v33 = *(_QWORD *)(v0 + 544);
    v34 = *(_QWORD *)(v0 + 536);
    v35 = *(_QWORD *)(v0 + 528);
    v37 = *(_QWORD *)(v0 + 496);
    v36 = *(_QWORD *)(v0 + 504);
    v38 = *(_QWORD *)(v0 + 488);
    v40 = *(_QWORD *)(v0 + 456);
    v39 = *(_QWORD *)(v0 + 464);
    v62 = *(_QWORD *)(v0 + 448);
    v64 = *(_QWORD *)(v0 + 424);
    v66 = *(_QWORD *)(v0 + 400);
    v68 = *(_QWORD *)(v0 + 392);
    v70 = *(_QWORD *)(v0 + 368);
    swift_task_dealloc(*(_QWORD *)(v0 + 560));
    swift_task_dealloc(v32);
    swift_task_dealloc(v33);
    swift_task_dealloc(v34);
    swift_task_dealloc(v35);
    swift_task_dealloc(v36);
    swift_task_dealloc(v37);
    swift_task_dealloc(v38);
    swift_task_dealloc(v39);
    swift_task_dealloc(v40);
    swift_task_dealloc(v62);
    swift_task_dealloc(v64);
    swift_task_dealloc(v66);
    swift_task_dealloc(v68);
    swift_task_dealloc(v70);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10039D8A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 576);
  v5 = *(_QWORD *)(*v2 + 568);
  *(_QWORD *)(v3 + 584) = a1;
  *(_QWORD *)(v3 + 592) = v1;
  swift_task_dealloc(v4);
  swift_bridgeObjectRelease(v5);
  if (v1)
    v6 = sub_10039E13C;
  else
    v6 = sub_10039D920;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10039D920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  JSValue v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  Swift::Int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  unint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, unint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  Swift::OpaquePointer_optional v101;

  v1 = *(_QWORD *)(v0 + 584);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 440);
    v91 = *(_QWORD *)(v0 + 416);
    v93 = *(_QWORD *)(v0 + 520);
    v82 = *(_QWORD *)(v0 + 384);
    v79 = *(_QWORD *)(v0 + 360);
    v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v5 = enum case for GenreCollection.topCharts(_:);
    v81 = enum case for RecommendationSource.siri(_:);
    v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v97 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain(v1);
    v6 = 0;
    v7 = _swiftEmptyArrayStorage;
    v78 = v2;
    v80 = v3;
    v77 = v4;
    v76 = v5;
    while (1)
    {
      v11 = *(_QWORD *)(v0 + 448);
      v12 = *(_QWORD *)(v0 + 456);
      v99 = v6;
      v13 = *(_QWORD *)(v0 + 432);
      v95(v12, v4 + v6 * v97, v13);
      v95(v11, v12, v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v3 + 88))(v11, v13) == v5)
        break;
      v8 = *(_QWORD *)(v0 + 456);
      v9 = *(_QWORD *)(v0 + 432);
      v10 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v10(*(_QWORD *)(v0 + 448), v9);
      v10(v8, v9);
LABEL_4:
      if (++v6 == v2)
      {
        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 584), 2);
        goto LABEL_26;
      }
    }
    v86 = v7;
    v14 = *(_QWORD *)(v0 + 528);
    v15 = *(_QWORD *)(v0 + 512);
    v16 = *(_QWORD *)(v0 + 448);
    v17 = *(_QWORD *)(v0 + 424);
    v19 = *(_QWORD *)(v0 + 400);
    v18 = *(_QWORD *)(v0 + 408);
    v20 = *(_QWORD *)(v0 + 376);
    (*(void (**)(uint64_t, _QWORD))(v3 + 96))(v16, *(_QWORD *)(v0 + 432));
    v21 = v16 + *(int *)(sub_10004CFD4(&qword_1009DECD0) + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 32))(v17, v16, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 32))(v14, v21, v15);
    v22 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    inited = swift_initStackObject(v22, v0 + 16);
    *(_OWORD *)(inited + 16) = xmmword_1007147F0;
    *(_QWORD *)(inited + 32) = 0x4664656372756F73;
    *(_QWORD *)(inited + 40) = 0xEF697269536D6F72;
    v24 = Genre.sources.getter();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v82 + 104))(v19, v81, v20);
    v25 = *(_QWORD *)(v24 + 16);
    v85 = v24;
    if (!v25)
    {
      v32 = 0;
      v7 = *(_QWORD **)(v82 + 8);
      goto LABEL_14;
    }
    v27 = *(_QWORD *)(v0 + 392);
    v26 = *(_QWORD *)(v0 + 400);
    v28 = *(_QWORD *)(v0 + 376);
    v75 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
    v89 = *(void (**)(uint64_t, unint64_t, uint64_t))(v82 + 16);
    v89(v27, v24 + v75, v28);
    v87 = sub_10039E580();
    LOBYTE(v26) = dispatch thunk of static Equatable.== infix(_:_:)(v27, v26, v28, v87);
    v7 = *(_QWORD **)(v82 + 8);
    ((void (*)(uint64_t, uint64_t))v7)(v27, v28);
    if ((v26 & 1) == 0)
    {
      if (v25 != 1)
      {
        v30 = *(_QWORD *)(v0 + 392);
        v29 = *(_QWORD *)(v0 + 400);
        v31 = *(_QWORD *)(v0 + 376);
        v83 = *(_QWORD *)(v82 + 72);
        v89(v30, v24 + v75 + v83, v31);
        LOBYTE(v29) = dispatch thunk of static Equatable.== infix(_:_:)(v30, v29, v31, v87);
        ((void (*)(uint64_t, uint64_t))v7)(v30, v31);
        if ((v29 & 1) != 0)
          goto LABEL_10;
        if (v25 != 2)
        {
          v47 = v24 + v75 + 2 * v83;
          v48 = 2;
          while (1)
          {
            v89(*(_QWORD *)(v0 + 392), v47, *(_QWORD *)(v0 + 376));
            v49 = v48 + 1;
            if (__OFADD__(v48, 1))
              break;
            v30 = *(_QWORD *)(v0 + 392);
            v50 = *(_QWORD *)(v0 + 376);
            v32 = dispatch thunk of static Equatable.== infix(_:_:)(v30, *(_QWORD *)(v0 + 400), v50, v87);
            ((void (*)(uint64_t, uint64_t))v7)(v30, v50);
            if ((v32 & 1) == 0)
            {
              ++v48;
              v47 += v83;
              if (v49 != v25)
                continue;
            }
            goto LABEL_14;
          }
          __break(1u);
          goto LABEL_32;
        }
      }
      v32 = 0;
      goto LABEL_14;
    }
LABEL_10:
    v32 = 1;
LABEL_14:
    v33 = *(_QWORD *)(v0 + 528);
    v34 = *(_QWORD *)(v0 + 512);
    v90 = *(_QWORD *)(v0 + 456);
    v35 = *(_QWORD *)(v0 + 424);
    v88 = *(_QWORD *)(v0 + 432);
    v84 = *(_QWORD *)(v0 + 408);
    v36 = *(_QWORD *)(v0 + 368);
    v37 = *(_QWORD *)(v0 + 352);
    ((void (*)(_QWORD, _QWORD))v7)(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 376));
    v38 = swift_bridgeObjectRelease(v85);
    *(_BYTE *)(inited + 48) = v32 & 1;
    *(_QWORD *)(inited + 72) = &type metadata for Bool;
    *(_QWORD *)(inited + 80) = 0xD000000000000010;
    *(_QWORD *)(inited + 88) = 0x80000001007C4980;
    *(_QWORD *)(inited + 96) = Book.SaleType.rawValue.getter(v38);
    *(_QWORD *)(inited + 104) = v39;
    *(_QWORD *)(inited + 120) = &type metadata for String;
    *(_QWORD *)(inited + 128) = 0x444965726E6567;
    *(_QWORD *)(inited + 136) = 0xE700000000000000;
    *(_QWORD *)(inited + 144) = Genre.storeID.getter();
    *(_QWORD *)(inited + 168) = &type metadata for UInt64;
    strcpy((char *)(inited + 176), "genreMediaType");
    *(_BYTE *)(inited + 191) = -18;
    v40 = Genre.mediaType.getter();
    v41 = Book.MediaType.rawValue.getter(v40);
    v43 = v42;
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v36, v37);
    *(_QWORD *)(inited + 216) = &type metadata for String;
    *(_QWORD *)(inited + 192) = v41;
    *(_QWORD *)(inited + 200) = v43;
    v44 = sub_10003FB0C(inited);
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v35, v84);
    v3 = v80;
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v90, v88);
    v7 = v86;
    if ((swift_isUniquelyReferenced_nonNull_native(v86) & 1) == 0)
      v7 = sub_10003FB28(0, v86[2] + 1, 1, v86);
    v4 = v77;
    v2 = v78;
    v5 = v76;
    v6 = v99;
    v46 = v7[2];
    v45 = v7[3];
    if (v46 >= v45 >> 1)
      v7 = sub_10003FB28((_QWORD *)(v45 > 1), v46 + 1, 1, v7);
    v7[2] = v46 + 1;
    v7[v46 + 4] = v44;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease(v1);
  v7 = _swiftEmptyArrayStorage;
LABEL_26:
  v30 = v0 + 304;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 240));
  *(_QWORD *)(v0 + 304) = v7;
  v51 = qword_1009CE258;
  swift_bridgeObjectRetain(v7);
  if (v51 != -1)
LABEL_32:
    swift_once(&qword_1009CE258, sub_10000B108);
  v52 = type metadata accessor for Logger(0);
  sub_100048F64(v52, (uint64_t)qword_100A1E770);
  swift_bridgeObjectRetain(v7);
  v54 = Logger.logObject.getter(v53);
  v55 = static os_log_type_t.default.getter(v54);
  if (os_log_type_enabled(v54, v55))
  {
    v56 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v56 = 134217984;
    v57 = v7[2];
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)(v0 + 320) = v57;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 320, v0 + 328, v56 + 4, v56 + 12);
    swift_bridgeObjectRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "recommendedCollectionGenres: genres: %ld", v56, 0xCu);
    swift_slowDealloc(v56, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v7, 2);
  }

  v58.super.isa = *(Class *)(v0 + 336);
  v59 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v60 = sub_10004CFD4(&qword_1009D4B80);
  v61 = swift_allocObject(v60, 64, 7);
  *(_OWORD *)(v61 + 16) = xmmword_10070CCA0;
  swift_beginAccess(v30, v0 + 280, 0, 0);
  v62 = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v61 + 56) = sub_10004CFD4((uint64_t *)&unk_1009DB450);
  *(_QWORD *)(v61 + 32) = v62;
  v101.is_nil = 109;
  v63._countAndFlagsBits = 0x80000001007C4910;
  v101.value._rawValue = (void *)v61;
  v63._object = (void *)90;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v58, v101, v63, v64);
  swift_bridgeObjectRelease(v61);

  v65 = *(_QWORD *)(v0 + 552);
  v66 = *(_QWORD *)(v0 + 544);
  v67 = *(_QWORD *)(v0 + 536);
  v68 = *(_QWORD *)(v0 + 528);
  v70 = *(_QWORD *)(v0 + 496);
  v69 = *(_QWORD *)(v0 + 504);
  v71 = *(_QWORD *)(v0 + 488);
  v73 = *(_QWORD *)(v0 + 456);
  v72 = *(_QWORD *)(v0 + 464);
  v92 = *(_QWORD *)(v0 + 448);
  v94 = *(_QWORD *)(v0 + 424);
  v96 = *(_QWORD *)(v0 + 400);
  v98 = *(_QWORD *)(v0 + 392);
  v100 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 560));
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  swift_task_dealloc(v69);
  swift_task_dealloc(v70);
  swift_task_dealloc(v71);
  swift_task_dealloc(v72);
  swift_task_dealloc(v73);
  swift_task_dealloc(v92);
  swift_task_dealloc(v94);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v100);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10039E13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  JSValue v13;
  id v14;
  Swift::String v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::OpaquePointer_optional v32;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 240));
  if (qword_1009CE258 != -1)
    swift_once(&qword_1009CE258, sub_10000B108);
  v1 = *(_QWORD *)(v0 + 592);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_100A1E770);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 592);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 312) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 312, v0 + 320, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "recommendedCollectionGenres: fetchRecommendedGenres failed. error: %@", v8, 0xCu);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 592));
    swift_errorRelease(v7);
  }
  v12 = *(_QWORD *)(v0 + 592);
  v13.super.isa = *(Class *)(v0 + 336);

  v14 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v15._countAndFlagsBits = 0x80000001007C4910;
  v32.value._rawValue = _swiftEmptyArrayStorage;
  v32.is_nil = 109;
  v15._object = (void *)93;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v13, v32, v15, v16);

  swift_errorRelease(v12);
  v17 = *(_QWORD *)(v0 + 552);
  v18 = *(_QWORD *)(v0 + 544);
  v19 = *(_QWORD *)(v0 + 536);
  v20 = *(_QWORD *)(v0 + 528);
  v22 = *(_QWORD *)(v0 + 496);
  v21 = *(_QWORD *)(v0 + 504);
  v23 = *(_QWORD *)(v0 + 488);
  v25 = *(_QWORD *)(v0 + 456);
  v24 = *(_QWORD *)(v0 + 464);
  v27 = *(_QWORD *)(v0 + 448);
  v28 = *(_QWORD *)(v0 + 424);
  v29 = *(_QWORD *)(v0 + 400);
  v30 = *(_QWORD *)(v0 + 392);
  v31 = *(_QWORD *)(v0 + 368);
  swift_task_dealloc(*(_QWORD *)(v0 + 560));
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_10039E414()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GenreRecommendationProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10039E490()
{
  uint64_t v0;

  return sub_100015F5C(*(_QWORD *)(v0 + 16), &qword_1009DECA8, &qword_1009DECA0);
}

uint64_t sub_10039E4B8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10039E4F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009DECB4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000AE34;
  return sub_10039D0C4(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_10039E580()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DECD8;
  if (!qword_1009DECD8)
  {
    v1 = type metadata accessor for RecommendationSource(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for RecommendationSource, v1);
    atomic_store(result, &qword_1009DECD8);
  }
  return result;
}

uint64_t sub_10039E5C8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10039E5FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009DECE4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1001FC2C4;
  return sub_10039C344(a1, v4, v5, v6, v7);
}

char *sub_10039E67C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  id v9;
  char *v10;
  id v11;
  char *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  objc_super v17;

  v4[OBJC_IVAR____TtC5Books22ToolbarStyleButtonBase_isHovering] = 0;
  v9 = objc_allocWithZone((Class)UIHoverGestureRecognizer);
  v10 = v4;
  v11 = objc_msgSend(v9, "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC5Books22ToolbarStyleButtonBase_hoverRecognizer] = v11;

  v17.receiver = v10;
  v17.super_class = (Class)type metadata accessor for ToolbarStyleButtonBase();
  v12 = (char *)objc_msgSendSuper2(&v17, "initWithFrame:", a1, a2, a3, a4);
  v13 = OBJC_IVAR____TtC5Books22ToolbarStyleButtonBase_hoverRecognizer;
  v14 = *(void **)&v12[OBJC_IVAR____TtC5Books22ToolbarStyleButtonBase_hoverRecognizer];
  v15 = v12;
  objc_msgSend(v14, "addTarget:action:", v15, "didHover:");
  objc_msgSend(v15, "addGestureRecognizer:", *(_QWORD *)&v12[v13]);

  return v15;
}

uint64_t sub_10039E81C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Books22ToolbarStyleButtonBase_isHovering) = result;
  return result;
}

id sub_10039E8DC()
{
  return sub_10023803C(type metadata accessor for ToolbarStyleButtonBase);
}

uint64_t type metadata accessor for ToolbarStyleButtonBase()
{
  return objc_opt_self(_TtC5Books22ToolbarStyleButtonBase);
}

char *sub_10039E918(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  objc_super v22;

  v9 = OBJC_IVAR____TtC5Books18ToolbarStyleButton_highlightCornerRadius;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books18ToolbarStyleButton_highlightCornerRadius] = 0x4018000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books18ToolbarStyleButton_lightInitialWhite] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books18ToolbarStyleButton_darkInitialWhite] = 0x3FF0000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books18ToolbarStyleButton_hoveringAlphaDelta] = 0x3FA999999999999ALL;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books18ToolbarStyleButton_highlightedTransparencyReducedDelta] = 0x3FC3333333333333;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books18ToolbarStyleButton_highlightedTransparencyNormalDelta] = 0x3FA999999999999ALL;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books18ToolbarStyleButton_selectedAlphaDelta] = 0x3FA999999999999ALL;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v4;
  v12 = objc_msgSend(v10, "initWithFrame:", a1, a2, a3, a4);
  v13 = OBJC_IVAR____TtC5Books18ToolbarStyleButton_highlightView;
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books18ToolbarStyleButton_highlightView] = v12;
  v14 = (void *)objc_opt_self(UIColor);
  v15 = v12;
  v16 = objc_msgSend(v14, "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v16);

  v17 = objc_msgSend(*(id *)&v11[v13], "layer");
  objc_msgSend(v17, "setCornerRadius:", *(double *)&v4[v9]);

  v18 = objc_msgSend(*(id *)&v11[v13], "layer");
  objc_msgSend(v18, "setCornerCurve:", kCACornerCurveContinuous);

  v19 = *(id *)&v11[v13];
  objc_msgSend(v19, "setUserInteractionEnabled:", 0);

  v22.receiver = v11;
  v22.super_class = (Class)type metadata accessor for ToolbarStyleButton();
  v20 = (char *)objc_msgSendSuper2(&v22, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v20, "addSubview:", *(_QWORD *)&v20[OBJC_IVAR____TtC5Books18ToolbarStyleButton_highlightView]);
  return v20;
}

void sub_10039EB64(char a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Books22ToolbarStyleButtonBase_isHovering) = a1;
  v2 = *(void **)(v1 + OBJC_IVAR____TtC5Books18ToolbarStyleButton_highlightView);
  v3 = sub_10039EBBC();
  objc_msgSend(v2, "setBackgroundColor:", v3);

}

id sub_10039EBBC()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  double v4;
  _BOOL4 IsReduceTransparencyEnabled;
  double v6;

  if ((objc_msgSend(v0, "isHighlighted") & 1) == 0
    && (objc_msgSend(v0, "isSelected") & 1) == 0
    && (*((_BYTE *)v0 + OBJC_IVAR____TtC5Books22ToolbarStyleButtonBase_isHovering) & 1) == 0)
  {
    return objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  }
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  if (v2 == (id)1)
    v3 = 0.0;
  else
    v3 = 1.0;
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC5Books22ToolbarStyleButtonBase_isHovering))
    v4 = 0.05;
  else
    v4 = 0.0;
  if (objc_msgSend(v0, "isHighlighted"))
  {
    IsReduceTransparencyEnabled = UIAccessibilityIsReduceTransparencyEnabled();
    v6 = 0.15;
    if (!IsReduceTransparencyEnabled)
      v6 = 0.05;
    v4 = v4 + v6;
  }
  if (objc_msgSend(v0, "isSelected"))
    v4 = v4 + 0.05;
  return objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithWhite:alpha:", v3, v4);
}

void sub_10039ED94()
{
  uint64_t v0;

}

id sub_10039EDA4()
{
  return sub_10023803C(type metadata accessor for ToolbarStyleButton);
}

uint64_t type metadata accessor for ToolbarStyleButton()
{
  return objc_opt_self(_TtC5Books18ToolbarStyleButton);
}

void sub_10039EDE0(char a1)
{
  _BYTE *v1;
  void *v3;
  char **v4;
  id v5;

  v1[OBJC_IVAR____TtC5Books22ToolbarStyleButtonBase_isHovering] = a1;
  v3 = (void *)objc_opt_self(UIColor);
  v4 = &selRef_secondaryLabelColor;
  if ((a1 & 1) == 0)
    v4 = &selRef_tertiaryLabelColor;
  v5 = objc_msgSend(v3, *v4);
  objc_msgSend(v1, "setTintColor:", v5);

}

uint64_t type metadata accessor for ToolbarStyleVolumeButton()
{
  return objc_opt_self(_TtC5Books24ToolbarStyleVolumeButton);
}

_QWORD *initializeBufferWithCopyOfBuffer for ChromeMaterial(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  v4 = v3;
  return a1;
}

void destroy for ChromeMaterial(uint64_t a1)
{

}

_QWORD *assignWithCopy for ChromeMaterial(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for ChromeMaterial(_QWORD *a1, _QWORD *a2)
{
  void *v4;

  *a1 = *a2;
  v4 = (void *)a1[1];
  a1[1] = a2[1];

  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ChromeMaterial(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ChromeMaterial(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ChromeMaterial()
{
  return &type metadata for ChromeMaterial;
}

uint64_t sub_10039F07C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086EC30, 1);
}

void sub_10039F08C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[3];

  v6 = type metadata accessor for ChromeStyle(0);
  v7 = sub_100288CBC();
  EnvironmentObject.init()(v6, v7);
  v9 = v8;
  *(double *)v11 = a3;
  v11[1] = v8;
  v11[2] = v10;
  View.modifier<A>(_:)(v11, a1, &type metadata for ChromeMaterial, a2);

}

uint64_t sub_10039F11C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;

  v10 = static Alignment.center.getter(a1);
  if (a2)
  {
    v12 = v10;
    v13 = v11;
    KeyPath = swift_getKeyPath(&unk_10071EB10);
    v15 = swift_getKeyPath(&unk_10071EB38);
    v16 = a2;
    static Published.subscript.getter(&v28, v16, KeyPath, v15);

    swift_release(KeyPath);
    swift_release(v15);
    v17 = v28;
    v19 = static Alignment.center.getter(v18);
    v21 = v20;
    v22 = sub_10004CFD4(&qword_1009DEDB8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a4, a1, v22);
    result = sub_10004CFD4(&qword_1009DEDC0);
    v24 = a4 + *(int *)(result + 36);
    *(_QWORD *)v24 = v12;
    *(_QWORD *)(v24 + 8) = v13;
    *(_QWORD *)(v24 + 16) = v17;
    *(double *)(v24 + 24) = a5;
    *(_QWORD *)(v24 + 32) = v19;
    *(_QWORD *)(v24 + 40) = v21;
  }
  else
  {
    v25 = type metadata accessor for ChromeStyle(0);
    v26 = sub_100288CBC();
    result = EnvironmentObject.error()(0, a3, v25, v26, v27);
    __break(1u);
  }
  return result;
}

uint64_t sub_10039F24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_10039F11C(a1, *(void **)(v2 + 8), *(_QWORD *)(v2 + 16), a2, *(double *)v2);
}

unint64_t sub_10039F264()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DEDC8;
  if (!qword_1009DEDC8)
  {
    v1 = sub_100030B74(&qword_1009DEDC0);
    sub_100030B34(&qword_1009DEDD0, &qword_1009DEDB8, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100030B34(&qword_1009DEDD8, &qword_1009DEDE0, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009DEDC8);
  }
  return result;
}

uint64_t sub_10039F304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for DisplayLink();
  v1 = swift_allocObject(v0, 32, 7);
  result = swift_unknownObjectWeakInit(v1 + 16, 0);
  *(_QWORD *)(v1 + 24) = _swiftEmptyArrayStorage;
  qword_100A1E788 = v1;
  return result;
}

uint64_t sub_10039F350()
{
  uint64_t v0;
  void *Strong;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  objc_msgSend(Strong, "invalidate");

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

void sub_10039F3AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void (*v9)(__n128);
  __n128 v10;
  _BYTE v11[24];
  _BYTE v12[24];

  v1 = v0;
  v2 = (_QWORD *)(v0 + 24);
  swift_beginAccess(v2, v12, 0, 0);
  v3 = *(_QWORD *)(v1 + 24);
  swift_beginAccess(v2, v11, 33, 0);
  swift_bridgeObjectRetain(v3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v1 + 24));
  v5 = *(_QWORD *)(v1 + 24);
  if (isUniquelyReferenced_nonNull_native)
  {
    sub_1002C7CF0(0, *(_QWORD *)(v5 + 16));
  }
  else
  {
    *v2 = sub_10039F620(0, *(_QWORD *)(v5 + 24) >> 1);
    swift_bridgeObjectRelease(v5);
  }
  swift_endAccess(v11);
  v6 = *(_QWORD *)(v3 + 16);
  if (v6)
  {
    v7 = (_QWORD *)(v3 + 40);
    do
    {
      v9 = (void (*)(__n128))*(v7 - 1);
      v8 = *v7;
      v10 = swift_retain(*v7);
      v9(v10);
      swift_release(v8);
      v7 += 2;
      --v6;
    }
    while (v6);
  }
  swift_bridgeObjectRelease(v3);
  sub_10039F49C();
}

void sub_10039F49C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  void *Strong;
  id v7;
  id v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = v0;
  swift_beginAccess(v0 + 24, v10, 0, 0);
  v9 = *(_QWORD *)(v0 + 24);
  v2 = sub_10004CFD4(&qword_1009DEE90);
  v3 = sub_10039F694();
  v4 = Collection.isNotEmpty.getter(v2, v3);
  v5 = v0 + 16;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + 16);
  v7 = Strong;
  if ((v4 & 1) != 0)
  {
    if (!Strong)
    {
      v7 = objc_msgSend((id)objc_opt_self(CADisplayLink), "displayLinkWithTarget:selector:", v1, "tick", v9);
      v8 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
      objc_msgSend(v7, "addToRunLoop:forMode:", v8, NSRunLoopCommonModes);

      swift_unknownObjectWeakAssign(v5, v7);
    }

  }
  else if (Strong)
  {
    objc_msgSend(Strong, "invalidate", v9);

    swift_unknownObjectWeakAssign(v1 + 16, 0);
  }
}

uint64_t type metadata accessor for DisplayLink()
{
  return objc_opt_self(_TtC5Books11DisplayLink);
}

_QWORD *sub_10039F620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_10004CFD4(&qword_1009DEEA0);
  v5 = (_QWORD *)swift_allocObject(v4, 16 * v2 + 32, 7);
  v6 = j__malloc_size_0(v5);
  v7 = v6 - 32;
  if (v6 < 32)
    v7 = v6 - 17;
  v5[2] = a1;
  v5[3] = 2 * (v7 >> 4);
  return v5;
}

unint64_t sub_10039F694()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DEE98;
  if (!qword_1009DEE98)
  {
    v1 = sub_100030B74(&qword_1009DEE90);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009DEE98);
  }
  return result;
}

uint64_t sub_10039F6E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v16, qword_100A1E790);
  sub_100048F64(v16, (uint64_t)qword_100A1E790);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x76614E2065676150, 0xEF6E6F6974616769);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "'typeDisplayRepresentation' for AppEnum that represents page navigation modes, i.e. scroll mode vs. paged mode", 110, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

unint64_t sub_10039F8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  __n128 v33;
  __n128 v34;
  __n128 v35;
  __n128 v36;
  char *v37;
  char *v38;
  _BYTE *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  __n128 v44;
  __n128 v45;
  unint64_t result;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, _QWORD, uint64_t, uint64_t);
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  void (*v57)(char *);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  char *v65;
  char *v66;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v60 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v66 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v5 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  __chkstk_darwin(v4);
  v65 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LocalizedStringResource(0);
  v14 = *(_QWORD *)(v13 - 8);
  v54 = v13;
  __chkstk_darwin(v13);
  v48 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009DEF80);
  v17 = sub_10004CFD4(&qword_1009D0950);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 72);
  v61 = v17;
  v62 = v19;
  v20 = *(unsigned __int8 *)(v18 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = swift_allocObject(v16, v21 + 2 * v19, v20 | 7);
  v63 = xmmword_10070FC00;
  v64 = v22;
  *(_OWORD *)(v22 + 16) = xmmword_10070FC00;
  v59 = v22 + v21;
  v55 = v22 + v21 + *(int *)(v17 + 48);
  *(_BYTE *)(v22 + v21) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000014, 0x80000001007C4E70);
  v49 = v9;
  static Locale.current.getter(v23);
  v56 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v57 = *(void (**)(char *))(v5 + 104);
  v24 = v65;
  v57(v65);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v9, v24, "Navigation setting for scroll-mode.", 35, 2);
  v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v53(v66, 1, 1, v13);
  v25 = v60;
  DisplayRepresentation.Image.init(named:isTemplate:)(0xD000000000000014, 0x80000001007C4EC0, 2);
  v26 = type metadata accessor for DisplayRepresentation.Image(0);
  v52 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v52(v25, 0, 1, v26);
  v27 = sub_10004CFD4(&qword_1009D2640);
  v28 = *(_QWORD *)(v14 + 72);
  v29 = *(unsigned __int8 *)(v14 + 80);
  v30 = (v29 + 32) & ~v29;
  v50 = v29 | 7;
  v51 = v27;
  v31 = swift_allocObject(v27, v30 + 6 * v28, v29 | 7);
  *(_OWORD *)(v31 + 16) = xmmword_1007133E0;
  LocalizedStringResource.init(stringLiteral:)(0x7263532065676150, 0xEE00676E696C6C6FLL, (__n128)xmmword_1007133E0);
  LocalizedStringResource.init(stringLiteral:)(0x6E696C6C6F726353, 0xE900000000000067, v32);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000012, 0x80000001007C4EE0, v33);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x80000001007C4F00, v34);
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000011, 0x80000001007C4F20, v35);
  LocalizedStringResource.init(stringLiteral:)(0x4D206C6C6F726353, 0xEB0000000065646FLL, v36);
  v37 = v48;
  v38 = v66;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v48, v66, v25, v31);
  v39 = (_BYTE *)(v59 + v62);
  v62 += v59 + *(int *)(v61 + 48);
  *v39 = 1;
  v40 = String.LocalizationValue.init(stringLiteral:)(0x7275542065676150, 0xEC000000676E696ELL);
  v41 = v49;
  static Locale.current.getter(v40);
  v42 = v65;
  ((void (*)(char *, _QWORD, uint64_t))v57)(v65, v56, v58);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v12, 0, 0, v41, v42, "Navigation setting for paged-mode.", 34, 2);
  v53(v38, 1, 1, v54);
  DisplayRepresentation.Image.init(named:isTemplate:)(0x7069777365676170, 0xE900000000000065, 2);
  v52(v25, 0, 1, v26);
  v43 = swift_allocObject(v51, v30 + 2 * v28, v50);
  v44 = (__n128)v63;
  *(_OWORD *)(v43 + 16) = v63;
  LocalizedStringResource.init(stringLiteral:)(0xD000000000000014, 0x80000001007C4F70, v44);
  LocalizedStringResource.init(stringLiteral:)(0x6574616E69676150, 0xEE0065646F4D2064, v45);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)(v37, v38, v25, v43);
  result = sub_1001DAB84(v64);
  qword_100A1E7A8 = result;
  return result;
}

uint64_t sub_10039FEC0(char *a1, char *a2)
{
  return sub_100670410(*a1, *a2);
}

unint64_t sub_10039FED0()
{
  unint64_t result;

  result = qword_1009DEEA8;
  if (!qword_1009DEEA8)
  {
    result = swift_getWitnessTable(&unk_10071EB94, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEEA8);
  }
  return result;
}

Swift::Int sub_10039FF14()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x6E72755465676170;
  else
    v2 = 0xD000000000000010;
  if (v1)
    v3 = 0xEB00000000676E69;
  else
    v3 = 0x80000001007B23C0;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_10039FFA0(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x6E72755465676170;
  else
    v2 = 0xD000000000000010;
  if (*v1)
    v3 = 0xEB00000000676E69;
  else
    v3 = 0x80000001007B23C0;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1003A0008(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x6E72755465676170;
  else
    v3 = 0xD000000000000010;
  if (v2)
    v4 = 0xEB00000000676E69;
  else
    v4 = 0x80000001007B23C0;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1003A0090@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F09D8, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1003A00EC(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD000000000000010;
  if (*v1)
    v2 = 0x6E72755465676170;
  v3 = 0x80000001007B23C0;
  if (*v1)
    v3 = 0xEB00000000676E69;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1003A013C()
{
  unint64_t result;

  result = qword_1009DEEB0;
  if (!qword_1009DEEB0)
  {
    result = swift_getWitnessTable(&unk_10071EC74, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEEB0);
  }
  return result;
}

unint64_t sub_1003A0184()
{
  unint64_t result;

  result = qword_1009DEEB8;
  if (!qword_1009DEEB8)
  {
    result = swift_getWitnessTable(&unk_10071ECAC, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEEB8);
  }
  return result;
}

unint64_t sub_1003A01CC()
{
  unint64_t result;

  result = qword_1009DEEC0;
  if (!qword_1009DEEC0)
  {
    result = swift_getWitnessTable(&unk_10071EBFC, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEEC0);
  }
  return result;
}

unint64_t sub_1003A0214()
{
  unint64_t result;

  result = qword_1009DEEC8;
  if (!qword_1009DEEC8)
  {
    result = swift_getWitnessTable(&unk_10071ECDC, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEEC8);
  }
  return result;
}

unint64_t sub_1003A025C()
{
  unint64_t result;

  result = qword_1009DEED0;
  if (!qword_1009DEED0)
  {
    result = swift_getWitnessTable(&unk_10071ED04, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEED0);
  }
  return result;
}

unint64_t sub_1003A02A4()
{
  unint64_t result;

  result = qword_1009DEED8;
  if (!qword_1009DEED8)
  {
    result = swift_getWitnessTable(&unk_10071ED2C, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEED8);
  }
  return result;
}

unint64_t sub_1003A02EC()
{
  unint64_t result;

  result = qword_1009DEEE0;
  if (!qword_1009DEEE0)
  {
    result = swift_getWitnessTable(&unk_10071ED84, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEEE0);
  }
  return result;
}

uint64_t sub_1003A0330@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE268, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1E790, (uint64_t)sub_10039F6E0, a1);
}

uint64_t sub_1003A0354(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_1003A0394();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_1003A0394()
{
  unint64_t result;

  result = qword_1009DEEE8;
  if (!qword_1009DEEE8)
  {
    result = swift_getWitnessTable(&unk_10071EC34, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEEE8);
  }
  return result;
}

uint64_t sub_1003A03D8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003A0394();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1003A0414()
{
  unint64_t result;

  result = qword_1009DEEF0;
  if (!qword_1009DEEF0)
  {
    result = swift_getWitnessTable(&unk_10071EDC4, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEEF0);
  }
  return result;
}

unint64_t sub_1003A045C()
{
  unint64_t result;

  result = qword_1009DEEF8;
  if (!qword_1009DEEF8)
  {
    result = swift_getWitnessTable(&unk_10071EDEC, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEEF8);
  }
  return result;
}

unint64_t sub_1003A04A4()
{
  unint64_t result;

  result = qword_1009DEF00;
  if (!qword_1009DEF00)
  {
    result = swift_getWitnessTable(&unk_10071EBBC, &type metadata for BookPageNavigationSetting);
    atomic_store(result, (unint64_t *)&qword_1009DEF00);
  }
  return result;
}

double sub_1003A04E8()
{
  double result;

  if (qword_1009CE270 != -1)
    swift_once(&qword_1009CE270, sub_10039F8FC);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100A1E7A8).n128_u64[0];
  return result;
}

uint64_t sub_1003A0528(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003A02EC();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1003A0560()
{
  return sub_100030B34(&qword_1009DEF08, &qword_1009DEF10, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_1003A058C(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFDD0;
}

unint64_t sub_1003A05A0()
{
  unint64_t result;

  result = qword_1009DEF18;
  if (!qword_1009DEF18)
  {
    result = swift_getWitnessTable(&unk_10071EE8C, &type metadata for BookReaderChangePageNavigationIntent);
    atomic_store(result, (unint64_t *)&qword_1009DEF18);
  }
  return result;
}

uint64_t sub_1003A05E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1E7B0);
  sub_100048F64(v10, (uint64_t)qword_100A1E7B0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007C4DF0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title of AppIntent that changes the reader navigation mode - paged or scrolling.", 80, 2);
}

uint64_t sub_1003A075C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_10004CFD4(&qword_1009DEF60);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009DEF68);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100066120();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 2, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v7._object = (void *)0x80000001007C4DD0;
  v7._countAndFlagsBits = 0xD00000000000001ALL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath("@x.");
  v9 = sub_10004CFD4(&qword_1009DEF70);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 32;
  v10._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_10071F018);
  v12 = sub_10004CFD4(&qword_1009DEF78);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for BookReaderChangePageNavigationIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for BookReaderChangePageNavigationIntent, v6);
}

uint64_t sub_1003A091C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086ECCC, 1);
}

uint64_t sub_1003A092C@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CE278, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1E7B0, (uint64_t)sub_1003A05E8, a1);
}

uint64_t sub_1003A0954()
{
  return swift_task_switch(sub_1003A0968, 0, 0);
}

uint64_t sub_1003A0968()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = sub_1003A13A4();
  v2 = swift_allocError(&type metadata for BookReaderChangePageNavigationError, v1, 0, 0);
  swift_willThrow(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A09C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1003A0DB8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for BookReaderChangePageNavigationIntent()
{
  return &type metadata for BookReaderChangePageNavigationIntent;
}

uint64_t storeEnumTagSinglePayload for BookPageNavigationSetting(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003A0A40 + 4 * byte_10071EB85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003A0A74 + 4 * asc_10071EB80[v4]))();
}

uint64_t sub_1003A0A74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003A0A7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003A0A84);
  return result;
}

uint64_t sub_1003A0A90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003A0A98);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003A0A9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003A0AA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookPageNavigationSetting()
{
  return &type metadata for BookPageNavigationSetting;
}

uint64_t sub_1003A0AC0()
{
  return sub_100030B34(&qword_1009DEF40, &qword_1009DEF48, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

const char *sub_1003A0AEC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  _BYTE *v8;
  int v9;
  _BYTE v11[15];
  uint64_t v12;

  v0 = sub_10004CFD4(&qword_1009DEF88);
  __chkstk_darwin(v0);
  v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for ChangeOperation(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  IntentParameter.wrappedValue.getter(&v12);
  v7 = v12;
  IntentParameter.wrappedValue.getter(v6);
  v8 = &v2[*(int *)(v0 + 48)];
  *v2 = v7;
  (*(void (**)(_BYTE *, _QWORD *, uint64_t))(v4 + 32))(v8, v6, v3);
  v9 = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 88))(v8, v3);
  if ((v7 & 1) == 0)
  {
    if (v9 == enum case for ChangeOperation.disable(_:))
      return "books_disableContinuousScroll:";
    if (v9 != enum case for ChangeOperation.enable(_:))
      goto LABEL_9;
    return "books_enableContinuousScroll:";
  }
  if (v9 == enum case for ChangeOperation.disable(_:))
    return "books_enableContinuousScroll:";
  if (v9 == enum case for ChangeOperation.enable(_:))
    return "books_disableContinuousScroll:";
LABEL_9:
  if (v9 == enum case for ChangeOperation.toggle(_:))
    return "books_toggleContinuousScroll:";
  sub_1003A1438((uint64_t)v2);
  return 0;
}

uint64_t sub_1003A0C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000039, 0x80000001007C5000);
  static Locale.current.getter(v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Error message when attempting to change reader page navigation mode (scroll vs. paged) when there is no book open.", 114, 2);
}

uint64_t sub_1003A0DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  void (*v62)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char v70[3];
  uint64_t v71;

  v69 = type metadata accessor for InputConnectionBehavior(0);
  v64 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v68 = (char *)&v54 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v1);
  v67 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v66 = (char *)&v54 - v4;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D25D0);
  __chkstk_darwin(v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v8);
  v65 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = v10;
  __chkstk_darwin(v10);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Locale(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for LocalizedStringResource(0);
  v22 = *(_QWORD *)(v21 - 8);
  v63 = v21;
  __chkstk_darwin(v21);
  v55 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10004CFD4(&qword_1009D25E0);
  v24 = String.LocalizationValue.init(stringLiteral:)(0x6F6974617265704FLL, 0xE90000000000006ELL);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v59 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v57 = v12;
  v26(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  v58 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Title for parameter that specifies operation to perform when running an AppIntent that changes reader navigation mode - enable, disable, or toggle", 146, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007B6870);
  static Locale.current.getter(v27);
  v26(v14, v25, v12);
  v28 = v65;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Description for intent change operation parameter possible values.", 66, 2);
  v62 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v62(v28, 0, 1, v21);
  v29 = enum case for ChangeOperation.enable(_:);
  v30 = type metadata accessor for ChangeOperation(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 104);
  v54 = (uint64_t)v7;
  v32(v7, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v7, 0, 1, v30);
  v33 = type metadata accessor for IntentDialog(0);
  v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v56 = v34;
  v35 = v66;
  v34(v66, 1, 1, v33);
  v36 = v67;
  v34(v67, 1, 1, v33);
  v60 = enum case for InputConnectionBehavior.default(_:);
  v64 = *(_QWORD *)(v64 + 104);
  v37 = v68;
  ((void (*)(char *))v64)(v68);
  v38 = sub_100205614(&qword_1009D25E8, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  dispatch thunk of static CaseIterable.allCases.getter(&v71, v30, v38);
  v39 = v71;
  v40 = sub_100205614(&qword_1009D25F0, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v41 = v55;
  v42 = v65;
  v61 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v55, v65, v54, v35, v36, v37, v39, v40);
  v54 = sub_10004CFD4(&qword_1009DEF50);
  v43 = String.LocalizationValue.init(stringLiteral:)(0x697461676976614ELL, 0xEA00000000006E6FLL);
  static Locale.current.getter(v43);
  v44 = v59;
  v45 = v57;
  v46 = v58;
  v58(v14, v59, v57);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Title for parameter that specifies target mode when running and AppIntent that changes reader navigation mode - scroll mode vs. paged mode.", 139, 2);
  v47 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000048, 0x80000001007C4D30);
  static Locale.current.getter(v47);
  v46(v14, v44, v45);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v20, 0, 0, v17, v14, "Description of Change Page Navigation Intent parameter possible values", 70, 2);
  v62(v42, 0, 1, v63);
  v70[0] = 1;
  v48 = v66;
  v49 = v56;
  v56(v66, 1, 1, v33);
  v50 = v67;
  v49(v67, 1, 1, v33);
  v51 = v68;
  ((void (*)(char *, _QWORD, uint64_t))v64)(v68, v60, v69);
  v52 = sub_1003A0394();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v41, v42, v70, v48, v50, v51, &off_1008F0A28, v52);
  return v61;
}

unint64_t sub_1003A13A4()
{
  unint64_t result;

  result = qword_1009DEF58;
  if (!qword_1009DEF58)
  {
    result = swift_getWitnessTable(&unk_10071F0F4, &type metadata for BookReaderChangePageNavigationError);
    atomic_store(result, (unint64_t *)&qword_1009DEF58);
  }
  return result;
}

uint64_t sub_1003A13E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003A1410@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003A1438(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009DEF88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t storeEnumTagSinglePayload for BookReaderChangePageNavigationError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1003A14B8 + 4 * byte_10071EB8A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1003A14D8 + 4 * byte_10071EB8F[v4]))();
}

_BYTE *sub_1003A14B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1003A14D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003A14E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003A14E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1003A14F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1003A14F8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BookReaderChangePageNavigationError()
{
  return &type metadata for BookReaderChangePageNavigationError;
}

unint64_t sub_1003A1518()
{
  unint64_t result;

  result = qword_1009DEF90;
  if (!qword_1009DEF90)
  {
    result = swift_getWitnessTable(&unk_10071F0CC, &type metadata for BookReaderChangePageNavigationError);
    atomic_store(result, (unint64_t *)&qword_1009DEF90);
  }
  return result;
}

_QWORD *sub_1003A155C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v21[4];
  _QWORD *v22;

  v2 = static AnnotationStyle.allCases.getter();
  v3 = v2;
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v22 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v4);
    sub_10021AC80();
    type metadata accessor for BECustomViewMenuElement(0);
    v5 = 0;
    do
    {
      v16 = *(char *)(v3 + v5 + 32);
      if ((a1 & 1) != 0)
      {
        sub_10069BB18(*(_BYTE *)(v3 + v5 + 32));
        v7 = v6;
        v9 = v8;
      }
      else
      {
        v7 = 0;
        v9 = 0xE000000000000000;
      }
      ++v5;
      v10 = static BECustomViewMenuElement.highlightStyleButtonImage(style:pageTheme:isSmall:)(dword_10071F148[v16], a2, 1);
      v11 = AnnotationStyle.rawValue.getter(v16);
      v21[3] = &type metadata for String;
      v21[0] = v11;
      v21[1] = v12;
      v13 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v7, v9, 0, 0, v10, 0, "books_setHighlightStyle:", v21, _swiftEmptyArrayStorage, 0, 0, 0, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v13);
      v14 = v22[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v14);
      v15 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v13);
      specialized ContiguousArray._endMutation()(v15);
    }
    while (v4 != v5);
    v17 = v22;
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    swift_bridgeObjectRelease(v2);
    return _swiftEmptyArrayStorage;
  }
  return v17;
}

uint64_t AnnotationStyle.aeAnnotationStyle.getter(char a1)
{
  return dword_10071F148[a1];
}

uint64_t sub_1003A1714(void *a1)
{
  id v2;
  id v3;
  uint64_t v4;
  _QWORD v6[2];
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v2 = objc_msgSend(a1, "propertyList");
  if (v2)
  {
    v3 = v2;
    _bridgeAnyObjectToAny(_:)(v2);
    swift_unknownObjectRelease(v3);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_10004C7B4((uint64_t)v7, (uint64_t)v8);
  if (v9)
  {
    if ((swift_dynamicCast(v6, v8, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
    {
      v4 = AnnotationStyle.init(rawValue:)(v6[0], v6[1]);

      if (v4 != 6)
        return v4;
    }
    else
    {

    }
  }
  else
  {

    sub_10004A7B8((uint64_t)v8);
  }
  return 6;
}

uint64_t AEAnnotationStyle.annotationStyle.getter(unsigned int a1)
{
  if (a1 >= 7)
    return 0;
  else
    return (0x5040300020100uLL >> (8 * a1));
}

uint64_t AEAnnotation.normalizedStyle.getter()
{
  void *v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t result;

  v1 = objc_msgSend(v0, "annotationStyle");
  v2 = objc_msgSend(v0, "annotationIsUnderline");
  result = 1;
  switch(v1)
  {
    case 0u:
      if (v2)
        result = 5;
      else
        result = 0;
      break;
    case 1u:
      return result;
    case 2u:
      result = 2;
      break;
    case 4u:
      result = 3;
      break;
    case 5u:
      result = 4;
      break;
    case 6u:
      result = 5;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t static AEAnnotation.normalizedStyle(with:isUnderline:)(int a1, char a2)
{
  uint64_t result;

  result = 1;
  switch(a1)
  {
    case 0:
      if ((a2 & 1) != 0)
        result = 5;
      else
        result = 0;
      break;
    case 1:
      return result;
    case 2:
      result = 2;
      break;
    case 4:
      result = 3;
      break;
    case 5:
      result = 4;
      break;
    case 6:
      result = 5;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_1003A1914(__int16 a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v18[24];

  v4 = sub_10004CFD4(&qword_1009DEFA0);
  v5 = __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (_QWORD *)static Locale.preferredLanguages.getter(v5);
  v9 = v8;
  if (v8[2])
  {
    v10 = v8[4];
    v11 = v8[5];
    swift_bridgeObjectRetain_n(v11, 2);
    v12 = swift_bridgeObjectRelease(v9);
    Locale.init(identifier:)(v10, v11, v12);
    v13 = type metadata accessor for Locale(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
    swift_bridgeObjectRelease(v11);
  }
  else
  {
    swift_bridgeObjectRelease(v8);
    v14 = type metadata accessor for Locale(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 1, 1, v14);
  }
  if (qword_1009CE280 != -1)
    swift_once(&qword_1009CE280, sub_1003A1F40);
  swift_beginAccess(&qword_1009DEF98, v18, 33, 0);
  v15 = sub_1003A1A9C((uint64_t)v7, &qword_1009DEF98, a1 & 0x101, a2);
  swift_endAccess(v18);
  sub_100010960((uint64_t)v7, &qword_1009DEFA0);
  return v15;
}

uint64_t sub_1003A1A9C(uint64_t a1, _QWORD *a2, __int16 a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  Swift::String v22;
  Swift::String v23;
  void *object;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  Swift::String v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v8 = type metadata accessor for Locale.Language(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009DEFA0);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009DEFA8);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = 0;
  if ((a3 & 0x100) == 0)
  {
    v53 = 28519;
    v54 = 0xE200000000000000;
    v48 = v8;
    v49 = a2;
    if ((a3 & 1) != 0)
    {
      v19 = 0x64726177726F66;
      v20 = 0xE700000000000000;
    }
    else
    {
      v19 = 0x647261776B636162;
      v20 = 0xE800000000000000;
    }
    String.append(_:)(*(Swift::String *)&v19);
    v21 = v54;
    v51 = v53;
    v52 = v54;
    swift_bridgeObjectRetain(v54);
    v22._countAndFlagsBits = 46;
    v22._object = (void *)0xE100000000000000;
    String.append(_:)(v22);
    v50 = a4;
    v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v23._object;
    String.append(_:)(v23);
    swift_bridgeObjectRelease(object);
    v25 = v52;
    v26 = sub_1003A1DF0(v51, v52, v49);
    v28 = v27;
    swift_bridgeObjectRelease(v25);
    if (v28)
    {
      swift_bridgeObjectRelease(v21);
      v53 = v26;
      v54 = v28;
      sub_1003A1F64(a1, (uint64_t)v14);
      v29 = type metadata accessor for Locale(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v14, 1, v29) == 1)
      {
        sub_100010960((uint64_t)v14, &qword_1009DEFA0);
      }
      else
      {
        v33 = v26;
        v34 = swift_bridgeObjectRetain(v28);
        Locale.language.getter(v34);
        v35 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v14, v29);
        Locale.Language.languageCode.getter(v35);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v48);
        v36 = type metadata accessor for Locale.LanguageCode(0);
        v37 = *(_QWORD *)(v36 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v17, 1, v36) == 1)
        {
          swift_bridgeObjectRelease(v28);
          sub_100010960((uint64_t)v17, &qword_1009DEFA8);
        }
        else
        {
          v38 = Locale.LanguageCode.identifier.getter();
          v40 = v39;
          (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v36);
          v51 = v33;
          v52 = v28;
          v41._countAndFlagsBits = 46;
          v41._object = (void *)0xE100000000000000;
          String.append(_:)(v41);
          v42._countAndFlagsBits = v38;
          v42._object = v40;
          String.append(_:)(v42);
          swift_bridgeObjectRelease(v40);
          v43 = v52;
          v44 = sub_1003A1DF0(v51, v52, v49);
          v46 = v45;
          swift_bridgeObjectRelease(v43);
          if (v46)
          {
            swift_bridgeObjectRelease(v54);
            v53 = v44;
            v54 = v46;
          }
        }
      }
    }
    else
    {
      if ((a3 & 1) != 0)
      {
        v31 = 0x73756C702ELL;
        v32 = 0xE500000000000000;
      }
      else
      {
        v31 = 0x73756E696D2ELL;
        v32 = 0xE600000000000000;
      }
      String.append(_:)(*(Swift::String *)&v31);
    }
    return v53;
  }
  return result;
}

uint64_t sub_1003A1DF0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  NSString v10;
  id v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v15;

  v6 = *a3;
  if (!*(_QWORD *)(*a3 + 16))
  {
LABEL_6:
    swift_bridgeObjectRetain(a2);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

    if (v11)
    swift_bridgeObjectRetain(a2);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a3);
    v15 = *a3;
    *a3 = 0x8000000000000000;
    sub_1002C3B74(v11 != 0, a1, a2, isUniquelyReferenced_nonNull_native);
    v13 = *a3;
    *a3 = v15;
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(v13);
    if (!v11)
      return 0;
LABEL_9:
    swift_bridgeObjectRetain(a2);
    return a1;
  }
  swift_bridgeObjectRetain(a2);
  v7 = sub_10004CE80(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_6;
  }
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v6 + 56) + v7);
  swift_bridgeObjectRelease(a2);
  if (v9 == 1)
    goto LABEL_9;
  return 0;
}

unint64_t sub_1003A1F40()
{
  unint64_t result;

  result = sub_1001DA8B8((uint64_t)_swiftEmptyArrayStorage);
  qword_1009DEF98 = result;
  return result;
}

uint64_t sub_1003A1F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DEFA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1003A1FAC(void (*a1)(__int128 *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v32;
  __int128 v34;
  uint64_t v35;
  __int128 v36[2];
  _QWORD v37[6];
  id v38;

  v4 = v3;
  v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    if (a3 < 0)
      v6 = a3;
    else
      v6 = a3 & 0xFFFFFFFFFFFFFF8;
    v7 = swift_bridgeObjectRetain(a3);
    v8 = __CocoaSet.makeIterator()(v6, v7);
    v9 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v10 = sub_100384B9C((unint64_t *)&qword_1009D6DB0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v11 = Set.Iterator.init(_cocoa:)(v37, v8, v9, v10);
    v5 = v37[0];
    v32 = v37[1];
    v12 = v37[2];
    v13 = v37[3];
    v14 = v37[4];
  }
  else
  {
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v32 = a3 + 56;
    v12 = ~v15;
    v16 = -v15;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v14 = v17 & *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain(a3);
    v13 = 0;
  }
  v31 = (unint64_t)(v12 + 64) >> 6;
  v18 = _swiftEmptyArrayStorage;
  while (v5 < 0)
  {
    v22 = __CocoaSet.Iterator.next()(v11);
    if (!v22)
      goto LABEL_45;
    v23 = v22;
    *(_QWORD *)&v34 = v22;
    v24 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    swift_unknownObjectRetain(v23);
    swift_dynamicCast(v36, &v34, (char *)&type metadata for Swift.AnyObject + 8, v24, 7);
    v25 = *(id *)&v36[0];
    swift_unknownObjectRelease(v23);
    v21 = v13;
    v19 = v14;
    if (!v25)
      goto LABEL_45;
LABEL_31:
    v38 = v25;
    a1(&v34, &v38);
    if (v4)
    {

      sub_100299C3C(v5);
      swift_bridgeObjectRelease(v18);
      return;
    }

    if (v35)
    {
      sub_100022840(&v34, (uint64_t)v36);
      sub_100022840(v36, (uint64_t)&v34);
      if ((swift_isUniquelyReferenced_nonNull_native(v18) & 1) == 0)
        v18 = sub_1005B0B38(0, v18[2] + 1, 1, v18);
      v29 = v18[2];
      v28 = v18[3];
      if (v29 >= v28 >> 1)
        v18 = sub_1005B0B38((_QWORD *)(v28 > 1), v29 + 1, 1, v18);
      v18[2] = v29 + 1;
      v11 = (_QWORD *)sub_100022840(&v34, (uint64_t)&v18[5 * v29 + 4]);
    }
    else
    {
      v11 = (_QWORD *)sub_100010960((uint64_t)&v34, &qword_1009E8A20);
    }
    v13 = v21;
    v14 = v19;
  }
  if (v14)
  {
    v19 = (v14 - 1) & v14;
    v20 = __clz(__rbit64(v14)) | (v13 << 6);
    v21 = v13;
LABEL_30:
    v25 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v20);
    if (!v25)
      goto LABEL_45;
    goto LABEL_31;
  }
  v21 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v21 >= v31)
      goto LABEL_45;
    v26 = *(_QWORD *)(v32 + 8 * v21);
    if (!v26)
    {
      v27 = v13 + 2;
      if (v13 + 2 >= v31)
        goto LABEL_45;
      v26 = *(_QWORD *)(v32 + 8 * v27);
      if (v26)
        goto LABEL_28;
      v27 = v13 + 3;
      if (v13 + 3 >= v31)
        goto LABEL_45;
      v26 = *(_QWORD *)(v32 + 8 * v27);
      if (v26)
        goto LABEL_28;
      v27 = v13 + 4;
      if (v13 + 4 >= v31)
        goto LABEL_45;
      v26 = *(_QWORD *)(v32 + 8 * v27);
      if (v26)
      {
LABEL_28:
        v21 = v27;
      }
      else
      {
        v21 = v13 + 5;
        if (v13 + 5 >= v31)
          goto LABEL_45;
        v26 = *(_QWORD *)(v32 + 8 * v21);
        if (!v26)
        {
          v30 = v13 + 6;
          while (v31 != v30)
          {
            v26 = *(_QWORD *)(v32 + 8 * v30++);
            if (v26)
            {
              v21 = v30 - 1;
              goto LABEL_29;
            }
          }
LABEL_45:
          sub_100299C3C(v5);
          return;
        }
      }
    }
LABEL_29:
    v19 = (v26 - 1) & v26;
    v20 = __clz(__rbit64(v26)) + (v21 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void sub_1003A2384(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[5];
  void *v39;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    v3 = swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v2, v3);
    v5 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
    v6 = sub_100384B9C(&qword_1009DF0F0, &qword_1009DF0E8, BKCollectionMember_ptr);
    isUniquelyReferenced_nonNull_native = (uint64_t)Set.Iterator.init(_cocoa:)(v38, v4, v5, v6);
    v1 = v38[0];
    v36 = v38[1];
    v8 = v38[2];
    v9 = v38[3];
    v10 = v38[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v36 = a1 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v9 = 0;
  }
  v33 = v8;
  v35 = (unint64_t)(v8 + 64) >> 6;
  v34 = _swiftEmptyArrayStorage;
  while (1)
  {
    v14 = v9;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    v17 = __CocoaSet.Iterator.next()(isUniquelyReferenced_nonNull_native);
    if (!v17)
      goto LABEL_42;
    v18 = v17;
    v37 = v17;
    v19 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
    swift_unknownObjectRetain(v18);
    swift_dynamicCast(&v39, &v37, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
    v20 = v39;
    swift_unknownObjectRelease(v18);
    if (!v20)
      goto LABEL_42;
LABEL_34:
    v24 = objc_msgSend(v20, "collection", v33);
    if (!v24)
      goto LABEL_44;
    v25 = v24;
    v26 = objc_msgSend(v24, "collectionID");

    if (v26)
    {
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v29 = v28;

      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v34);
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_100043ED0(0, v34[2] + 1, 1, v34);
        v34 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v31 = v34[2];
      v30 = v34[3];
      if (v31 >= v30 >> 1)
      {
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_100043ED0((_QWORD *)(v30 > 1), v31 + 1, 1, v34);
        v34 = (_QWORD *)isUniquelyReferenced_nonNull_native;
      }
      v34[2] = v31 + 1;
      v32 = &v34[2 * v31];
      v32[4] = v27;
      v32[5] = v29;
    }
    else
    {

    }
  }
  if (v10)
  {
    v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v16 = v15 | (v9 << 6);
LABEL_33:
    v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v16);
    if (!v20)
      goto LABEL_42;
    goto LABEL_34;
  }
  v21 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v21 >= v35)
      goto LABEL_42;
    v22 = *(_QWORD *)(v36 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v14 + 2;
      if (v14 + 2 >= v35)
        goto LABEL_42;
      v22 = *(_QWORD *)(v36 + 8 * v9);
      if (!v22)
      {
        v9 = v14 + 3;
        if (v14 + 3 >= v35)
          goto LABEL_42;
        v22 = *(_QWORD *)(v36 + 8 * v9);
        if (!v22)
        {
          v9 = v14 + 4;
          if (v14 + 4 >= v35)
            goto LABEL_42;
          v22 = *(_QWORD *)(v36 + 8 * v9);
          if (!v22)
          {
            v9 = v14 + 5;
            if (v14 + 5 >= v35)
              goto LABEL_42;
            v22 = *(_QWORD *)(v36 + 8 * v9);
            if (!v22)
            {
              v23 = v14 + 6;
              while (v35 != v23)
              {
                v22 = *(_QWORD *)(v36 + 8 * v23++);
                if (v22)
                {
                  v9 = v23 - 1;
                  goto LABEL_32;
                }
              }
LABEL_42:
              sub_100299C3C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_32:
    v10 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v9 << 6);
    goto LABEL_33;
  }
  __break(1u);
LABEL_44:
  __break(1u);
}

void sub_1003A2730(void (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  unint64_t v40;
  unint64_t v41;
  int64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  int64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(id *);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[5];
  id v57;

  v4 = v3;
  v50 = a1;
  v51 = a2;
  v6 = sub_10004CFD4(&qword_1009D7000);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LibraryPDFInfo(0);
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  __chkstk_darwin(v9);
  v49 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v47 = (char *)&v43 - v12;
  if ((a3 & 0xC000000000000001) != 0)
  {
    if (a3 < 0)
      v13 = a3;
    else
      v13 = a3 & 0xFFFFFFFFFFFFFF8;
    v14 = swift_bridgeObjectRetain(a3);
    v15 = __CocoaSet.makeIterator()(v13, v14);
    v16 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v17 = sub_100384B9C((unint64_t *)&qword_1009D6DB0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v18 = Set.Iterator.init(_cocoa:)(v56, v15, v16, v17);
    a3 = v56[0];
    v48 = v56[1];
    v19 = v56[2];
    v20 = v56[3];
    v21 = v56[4];
  }
  else
  {
    v22 = -1 << *(_BYTE *)(a3 + 32);
    v23 = *(_QWORD *)(a3 + 56);
    v48 = a3 + 56;
    v19 = ~v22;
    v24 = -v22;
    if (v24 < 64)
      v25 = ~(-1 << v24);
    else
      v25 = -1;
    v21 = v25 & v23;
    swift_bridgeObjectRetain(a3);
    v20 = 0;
  }
  v45 = a3 & 0x7FFFFFFFFFFFFFFFLL;
  v43 = v19;
  v26 = _swiftEmptyArrayStorage;
  v46 = (unint64_t)(v19 + 64) >> 6;
  v44 = (char *)&type metadata for Swift.AnyObject + 8;
  v52 = a3;
  if ((a3 & 0x8000000000000000) == 0)
    goto LABEL_14;
LABEL_11:
  v27 = __CocoaSet.Iterator.next()(v18);
  if (!v27)
    goto LABEL_46;
  v28 = v27;
  v55 = v27;
  v29 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  swift_unknownObjectRetain(v28);
  swift_dynamicCast(&v57, &v55, v44, v29, 7);
  v30 = v57;
  swift_unknownObjectRelease(v28);
  v31 = v20;
  v32 = v21;
  while (v30)
  {
    v57 = v30;
    v50(&v57);
    if (v4)
    {

      sub_100299C3C(v52);
      swift_bridgeObjectRelease(v26);
      return;
    }

    v37 = v53;
    v36 = v54;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v8, 1, v54) == 1)
    {
      v18 = (_QWORD *)sub_100010960((uint64_t)v8, &qword_1009D7000);
      v20 = v31;
      v21 = v32;
      a3 = v52;
      if (v52 < 0)
        goto LABEL_11;
    }
    else
    {
      v38 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      v39 = v47;
      v38(v47, v8, v36);
      v38(v49, v39, v36);
      if ((swift_isUniquelyReferenced_nonNull_native(v26) & 1) == 0)
        v26 = (_QWORD *)sub_1005B0B4C(0, v26[2] + 1, 1, (unint64_t)v26);
      v41 = v26[2];
      v40 = v26[3];
      a3 = v52;
      if (v41 >= v40 >> 1)
        v26 = (_QWORD *)sub_1005B0B4C(v40 > 1, v41 + 1, 1, (unint64_t)v26);
      v26[2] = v41 + 1;
      v18 = (_QWORD *)((uint64_t (*)(char *, char *, uint64_t))v38)((char *)v26+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80))+ *(_QWORD *)(v53 + 72) * v41, v49, v54);
      v20 = v31;
      v21 = v32;
      if (a3 < 0)
        goto LABEL_11;
    }
LABEL_14:
    if (v21)
    {
      v32 = (v21 - 1) & v21;
      v33 = __clz(__rbit64(v21)) | (v20 << 6);
      v31 = v20;
    }
    else
    {
      v31 = v20 + 1;
      if (__OFADD__(v20, 1))
      {
        __break(1u);
        return;
      }
      if (v31 >= v46)
        goto LABEL_46;
      v34 = *(_QWORD *)(v48 + 8 * v31);
      if (!v34)
      {
        v35 = v20 + 2;
        if (v20 + 2 >= v46)
          goto LABEL_46;
        v34 = *(_QWORD *)(v48 + 8 * v35);
        if (v34)
          goto LABEL_25;
        v35 = v20 + 3;
        if (v20 + 3 >= v46)
          goto LABEL_46;
        v34 = *(_QWORD *)(v48 + 8 * v35);
        if (v34)
          goto LABEL_25;
        v35 = v20 + 4;
        if (v20 + 4 >= v46)
          goto LABEL_46;
        v34 = *(_QWORD *)(v48 + 8 * v35);
        if (v34)
        {
LABEL_25:
          v31 = v35;
        }
        else
        {
          v31 = v20 + 5;
          if (v20 + 5 >= v46)
            goto LABEL_46;
          v34 = *(_QWORD *)(v48 + 8 * v31);
          if (!v34)
          {
            v42 = v20 + 6;
            while (v46 != v42)
            {
              v34 = *(_QWORD *)(v48 + 8 * v42++);
              if (v34)
              {
                v31 = v42 - 1;
                goto LABEL_26;
              }
            }
            goto LABEL_46;
          }
        }
      }
LABEL_26:
      v32 = (v34 - 1) & v34;
      v33 = __clz(__rbit64(v34)) + (v31 << 6);
    }
    v30 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v33);
  }
  a3 = v52;
LABEL_46:
  sub_100299C3C(a3);
}

void *sub_1003A2BFC(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v19;
  id v20;
  unint64_t v21;

  v4 = v3;
  v21 = (unint64_t)&_swiftEmptyArrayStorage;
  if ((unint64_t)a3 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v17))
  {
    for (i = 4; ; ++i)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a3)
         : *(id *)(a3 + 8 * i);
      v10 = v9;
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v20 = v9;
      a1(&v19, &v20);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return (void *)swift_bridgeObjectRelease(v21);
      }

      v13 = v19;
      if (v19)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v15 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v14 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v15 >= v14 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
        v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
        specialized Array._endMutation()(v8);
      }
      if (v11 == v6)
      {
        swift_bridgeObjectRelease(a3);
        return (void *)v21;
      }
    }
    __break(1u);
LABEL_17:
    if (a3 < 0)
      v17 = a3;
    else
      v17 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
  swift_bridgeObjectRelease(a3);
  return &_swiftEmptyArrayStorage;
}

_QWORD *sub_1003A2D94(void (*a1)(__int128 *__return_ptr, id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  __int128 v17;
  uint64_t v18;
  __int128 v19[2];
  id v20;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_20;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v6; v6 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v7 = _swiftEmptyArrayStorage;
    for (i = 4; ; ++i)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, a3)
         : *(id *)(a3 + 8 * i);
      v10 = v9;
      v11 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v20 = v9;
      a1(&v17, &v20);
      if (v4)
      {
        swift_bridgeObjectRelease(v7);
        swift_bridgeObjectRelease(a3);

        return v7;
      }

      if (v18)
      {
        sub_100022840(&v17, (uint64_t)v19);
        sub_100022840(v19, (uint64_t)&v17);
        if ((swift_isUniquelyReferenced_nonNull_native(v7) & 1) == 0)
          v7 = sub_1005B0B38(0, v7[2] + 1, 1, v7);
        v13 = v7[2];
        v12 = v7[3];
        if (v13 >= v12 >> 1)
          v7 = sub_1005B0B38((_QWORD *)(v12 > 1), v13 + 1, 1, v7);
        v7[2] = v13 + 1;
        sub_100022840(&v17, (uint64_t)&v7[5 * v13 + 4]);
      }
      else
      {
        sub_100010960((uint64_t)&v17, &qword_1009E8A20);
      }
      if (v11 == v6)
      {
        swift_bridgeObjectRelease(a3);
        return v7;
      }
    }
    __break(1u);
LABEL_20:
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
  swift_bridgeObjectRelease(a3);
  return _swiftEmptyArrayStorage;
}

void sub_1003A2F84(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  void (*v36)(uint64_t *);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v4 = v3;
  v36 = a1;
  v37 = a2;
  v6 = sub_10004CFD4(&qword_1009DF0D0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StoreBook(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v35 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v32 = (char *)&v30 - v14;
  if ((unint64_t)a3 >> 62)
    goto LABEL_21;
  v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  while (v15)
  {
    v38 = v11;
    v34 = a3 & 0xC000000000000001;
    v39 = (char *)_swiftEmptyArrayStorage;
    v11 = 4;
    v31 = a3;
    v33 = v15;
    while (1)
    {
      v16 = v10;
      v17 = v11 - 4;
      if (!v34)
        break;
      v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, a3);
      v18 = __OFADD__(v17, 1);
      v19 = v11 - 3;
      if (v18)
        goto LABEL_20;
LABEL_11:
      v40 = v10;
      v36(&v40);
      if (v4)
      {
        swift_bridgeObjectRelease(v39);
        swift_bridgeObjectRelease(a3);
        swift_release(v10);
        return;
      }
      v20 = swift_release(v10);
      v21 = v38;
      v10 = v16;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v38 + 48))(v9, 1, v16, v20) == 1)
      {
        sub_100010960((uint64_t)v9, &qword_1009DF0D0);
      }
      else
      {
        v22 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
        v23 = v32;
        v22(v32, v9, v16);
        v22(v35, v23, v16);
        v24 = (unint64_t)v39;
        if ((swift_isUniquelyReferenced_nonNull_native(v39) & 1) == 0)
          v24 = sub_1005B1FB8(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
        v26 = *(_QWORD *)(v24 + 16);
        v25 = *(_QWORD *)(v24 + 24);
        v39 = (char *)v24;
        if (v26 >= v25 >> 1)
          v39 = (char *)sub_1005B1FB8(v25 > 1, v26 + 1, 1, (unint64_t)v39);
        v27 = v38;
        v28 = v39;
        *((_QWORD *)v39 + 2) = v26 + 1;
        v10 = v16;
        v22(&v28[((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v26], v35, v16);
        a3 = v31;
      }
      ++v11;
      if (v19 == v33)
        goto LABEL_25;
    }
    v10 = *(_QWORD *)(a3 + 8 * v11);
    swift_retain(v10);
    v18 = __OFADD__(v17, 1);
    v19 = v11 - 3;
    if (!v18)
      goto LABEL_11;
LABEL_20:
    __break(1u);
LABEL_21:
    if (a3 < 0)
      v29 = a3;
    else
      v29 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v29);
  }
LABEL_25:
  swift_bridgeObjectRelease(a3);
}

_QWORD *sub_1003A3288(void (*a1)(__int128 *__return_ptr, uint64_t, __n128), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v15;
  uint64_t v16;
  _OWORD v17[2];
  uint64_t v18;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return _swiftEmptyArrayStorage;
  v7 = *(_QWORD *)(type metadata accessor for CollectionRecommendation(0) - 8);
  v8 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v9 = *(_QWORD *)(v7 + 72);
  v18 = a3;
  v10 = swift_bridgeObjectRetain(a3);
  v11 = _swiftEmptyArrayStorage;
  do
  {
    a1(&v15, v8, v10);
    if (v3)
    {
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v18);
      return v11;
    }
    if (v16)
    {
      sub_10004CFC4(&v15, v17);
      sub_10004CFC4(v17, &v15);
      if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
        v11 = sub_1005B0474(0, v11[2] + 1, 1, v11);
      v13 = v11[2];
      v12 = v11[3];
      if (v13 >= v12 >> 1)
        v11 = sub_1005B0474((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
      v11[2] = v13 + 1;
      sub_10004CFC4(&v15, &v11[4 * v13 + 4]);
    }
    else
    {
      sub_100010960((uint64_t)&v15, (uint64_t *)&unk_1009D04E0);
    }
    v8 += v9;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease(v18);
  return v11;
}

_QWORD *sub_1003A3410(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)sub_1005CBB84();
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_1003A697C(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t sub_1003A3498(uint64_t a1)
{
  return sub_1003A3568(a1, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
}

uint64_t sub_1003A34AC(uint64_t a1)
{
  return sub_1003A34D4(a1, sub_1005171E0, (uint64_t (*)(void))sub_1003A6A0C);
}

uint64_t sub_1003A34C0(uint64_t a1)
{
  return sub_1003A34D4(a1, (uint64_t (*)(void))sub_1003A68CC, (uint64_t (*)(void))sub_1003A6A64);
}

uint64_t sub_1003A34D4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t result;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  result = a2();
  if ((v7 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v6)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v8 = a3();
  swift_bridgeObjectRetain(v9);
  return v8;
}

uint64_t sub_1003A3554(uint64_t a1)
{
  return sub_1003A3568(a1, (unint64_t *)&qword_1009DF0D8, UITouch_ptr);
}

uint64_t sub_1003A3568(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v7 = a1;
    else
      v7 = a1 & 0xFFFFFFFFFFFFFF8;
    v8 = __CocoaSet.startIndex.getter(v7);
    v10 = v9;
    v11 = __CocoaSet.endIndex.getter(v7);
    v13 = static __CocoaSet.Index.== infix(_:_:)(v8, v10, v11, v12);
    swift_bridgeObjectRelease(v11);
    if ((v13 & 1) != 0)
      goto LABEL_6;
    goto LABEL_10;
  }
  result = sub_1003A6844(a1);
  if ((v17 & 1) == 0)
  {
    v10 = v16;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v16)
    {
      v8 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
      {
LABEL_6:
        sub_10030A650(v8, v10, v6 != 0);
        return 0;
      }
LABEL_10:
      sub_1003A6550(v8, v10, v6 != 0, a1, a2, a3);
      v14 = v18;
      sub_10030A650(v8, v10, v6 != 0);
      return v14;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003A368C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  result = sub_1005171E0(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v7 = type metadata accessor for Book.MediaType(0);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 1;
  }
  else
  {
    sub_1003A67B0(result, v5, a1, a2);
    v7 = type metadata accessor for Book.MediaType(0);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 0;
  }
  return v8(v9, v10, 1, v7);
}

void BKLibraryAsset.contentInfo(options:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  int v25;
  _QWORD *v26;
  double v27;
  unsigned int *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  double v46;
  unsigned __int8 v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  _QWORD *v51;
  _OWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  double v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;

  v73 = a1;
  v4 = sub_10004CFD4(&qword_1009DEFB0);
  v5 = __chkstk_darwin(v4);
  v72 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContentKind(0, v5);
  v70 = *(_QWORD *)(v7 - 8);
  v71 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009DEFB8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CommonLibraryAssetInfo(0, v11);
  __chkstk_darwin(v14);
  v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for LibraryBookInfo.BookType(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (uint64_t *)((char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = __chkstk_darwin(v21);
  v24 = (char *)&v64 - v23;
  v25 = (unsigned __int16)objc_msgSend(v2, "contentType", v22);
  if ((v25 - 6) >= 0xE)
  {
    v67 = v20;
    v68 = v18;
    v65 = v13;
    v66 = v9;
    v69 = a2;
    switch(v25)
    {
      case 0:
        v28 = (unsigned int *)&enum case for LibraryBookInfo.BookType.unknown(_:);
        goto LABEL_10;
      case 1:
        v29 = objc_msgSend(v2, "epubID");
        if (v29)
        {
          v30 = v29;
          v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
          v33 = v32;

        }
        else
        {
          v31 = 0;
          v33 = 0;
        }
        v53 = (uint64_t)v73;
        v54 = v17;
        v55 = v68;
        v56 = v69;
        v57 = (uint64_t)v67;
        *v67 = v31;
        *(_QWORD *)(v57 + 8) = v33;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v55 + 104))(v57, enum case for LibraryBookInfo.BookType.epub(_:), v54);
        v56[3] = type metadata accessor for LibraryBookInfo(0);
        v56[4] = sub_100008DB0(&qword_1009DEFD8, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryBookInfo, (uint64_t)&protocol conformance descriptor for LibraryBookInfo);
        v58 = sub_1000257F8(v56);
        sub_1005360B4(v57, v53, (uint64_t)v58);
        (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v57, v54);
        return;
      case 3:
        v34 = type metadata accessor for LibraryPDFInfo(0);
        v35 = v69;
        v69[3] = v34;
        v35[4] = sub_100008DB0(&qword_1009DEFE0, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryPDFInfo, (uint64_t)&protocol conformance descriptor for LibraryPDFInfo);
        sub_1000257F8(v35);
        sub_1003A4C7C((uint64_t)v16);
        LibraryPDFInfo.init(commonInfo:)(v16);
        return;
      case 4:
        v28 = (unsigned int *)&enum case for LibraryBookInfo.BookType.iba(_:);
LABEL_10:
        v36 = v68;
        (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v24, *v28, v17);
        v37 = type metadata accessor for LibraryBookInfo(0);
        v38 = v69;
        v69[3] = v37;
        v38[4] = sub_100008DB0(&qword_1009DEFD8, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryBookInfo, (uint64_t)&protocol conformance descriptor for LibraryBookInfo);
        v39 = sub_1000257F8(v38);
        sub_1005360B4((uint64_t)v24, (uint64_t)v73, (uint64_t)v39);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v17);
        return;
      case 5:
        v40 = objc_msgSend(v2, "seriesBooks");
        if (!v40)
          goto LABEL_15;
        v41 = v40;
        v42 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
        v43 = sub_100384B9C((unint64_t *)&qword_1009D6DB0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
        v44 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v41, v42, v43);

        v45 = (void *)sub_1003A3568(v44, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
        *(_QWORD *)&v46 = swift_bridgeObjectRelease(v44).n128_u64[0];
        if (!v45)
          goto LABEL_15;
        v47 = objc_msgSend(v45, "isAudiobook", v46);

        if ((v47 & 1) != 0)
        {
          v48 = v72;
          sub_1003A58D8((uint64_t)v73, (void (*)(__int128 *__return_ptr, id *))sub_1003A72E4, (uint64_t (*)(uint64_t, __n128))sub_10050F068, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryAudiobookInfo, &qword_1009DF100, (uint64_t)&protocol conformance descriptor for LibraryAudiobookInfo, v72);
          v50 = type metadata accessor for LibraryAudiobookSeriesInfo(0, v49);
          v51 = v69;
          v69[3] = v50;
          v51[4] = sub_100008DB0(&qword_1009DEFD0, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryAudiobookSeriesInfo, (uint64_t)&protocol conformance descriptor for LibraryAudiobookSeriesInfo);
          sub_1000257F8(v51);
          LibraryAudiobookSeriesInfo.init(commonInfo:)(v48);
        }
        else
        {
          v59 = (uint64_t)v65;
          sub_1003A58D8((uint64_t)v73, (void (*)(__int128 *__return_ptr, id *))sub_1003A7310, (uint64_t (*)(uint64_t, __n128))sub_10050F04C, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryBookInfo, &qword_1009DF108, (uint64_t)&protocol conformance descriptor for LibraryBookInfo, (uint64_t)v65);
          v60 = v66;
          v61 = (*(double (**)(char *, _QWORD, uint64_t))(v70 + 104))(v66, enum case for ContentKind.regularBook(_:), v71);
          v62 = type metadata accessor for LibraryBookSeriesInfo(0, v61);
          v63 = v69;
          v69[3] = v62;
          v63[4] = sub_100008DB0(&qword_1009DEFC8, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryBookSeriesInfo, (uint64_t)&protocol conformance descriptor for LibraryBookSeriesInfo);
          sub_1000257F8(v63);
          LibraryBookSeriesInfo.init(commonInfo:kind:)(v59, v60);
        }
        break;
      default:
LABEL_15:
        v52 = v69;
        v69[4] = 0;
        *v52 = 0u;
        v52[1] = 0u;
        break;
    }
  }
  else
  {
    a2[3] = type metadata accessor for LibraryAudiobookInfo(0);
    a2[4] = sub_100008DB0(&qword_1009DEFC0, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryAudiobookInfo, (uint64_t)&protocol conformance descriptor for LibraryAudiobookInfo);
    v26 = sub_1000257F8(a2);
    sub_100536570(v73, (uint64_t)v26, v27);
  }
}

uint64_t sub_1003A3CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  return swift_task_switch(sub_1003A3D10, 0, 0);
}

uint64_t sub_1003A3D10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 88) = v2;
  v3 = *(_OWORD *)(v0 + 72);
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 96) = v4;
  v5 = sub_10004CFD4(&qword_1009E8A20);
  *v4 = v0;
  v4[1] = sub_1003A3DC8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000021, 0x80000001007C5110, sub_1003A72FC, v2, v5);
}

uint64_t sub_1003A3DC8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1003A3E24, 0, 0);
}

uint64_t sub_1003A3E24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 56);
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = sub_10004CFD4(&qword_1009EF310);
    v3 = sub_10004CFD4(&qword_1009D7020);
    if ((swift_dynamicCast(v1, v0 + 16, v2, v3, 6) & 1) == 0)
    {
      v4 = *(_QWORD *)(v0 + 56);
      *(_QWORD *)(v4 + 32) = 0;
      *(_OWORD *)v4 = 0u;
      *(_OWORD *)(v4 + 16) = 0u;
    }
  }
  else
  {
    sub_100010960(v0 + 16, &qword_1009E8A20);
    *(_OWORD *)v1 = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_QWORD *)(v1 + 32) = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003A3ECC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  char isEscapingClosureAtFileLocation;
  uint64_t v22;
  id v23;
  _QWORD aBlock[5];
  uint64_t v25;
  _OWORD v26[2];
  uint64_t v27;

  v8 = type metadata accessor for ContentInfoBuildOptions(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  if (objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
  {
    v12 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v11, "libraryAssetOnMainQueueWithAssetID:", v12);

    if (v13)
    {
      v23 = v13;
      BKLibraryAsset.contentInfo(options:)(a3, (_QWORD *)a4);

    }
    else
    {

      *(_QWORD *)(a4 + 32) = 0;
      *(_OWORD *)a4 = 0u;
      *(_OWORD *)(a4 + 16) = 0u;
    }
  }
  else
  {
    v27 = 0;
    memset(v26, 0, sizeof(v26));
    (*(void (**)(char *, void *, uint64_t))(v9 + 16))((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
    v14 = *(unsigned __int8 *)(v9 + 80);
    v15 = (v14 + 48) & ~v14;
    v16 = (char *)swift_allocObject(&unk_1009014E0, v15 + v10, v14 | 7);
    *((_QWORD *)v16 + 2) = v11;
    *((_QWORD *)v16 + 3) = a1;
    *((_QWORD *)v16 + 4) = a2;
    *((_QWORD *)v16 + 5) = v26;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v15], (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    v17 = swift_allocObject(&unk_100901508, 32, 7);
    *(_QWORD *)(v17 + 16) = sub_1003A7290;
    *(_QWORD *)(v17 + 24) = v16;
    aBlock[4] = sub_100064AD4;
    v25 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100064AFC;
    aBlock[3] = &unk_100901520;
    v18 = _Block_copy(aBlock);
    v19 = v25;
    v20 = v11;
    swift_bridgeObjectRetain(a2);
    swift_retain(v17);
    objc_msgSend(v20, "performBackgroundReadOnlyBlockAndWait:", v18, swift_release(v19).n128_f64[0]);

    _Block_release(v18);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v17, "", 73, 78, 59, 1);
    swift_release(v17);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      sub_100025B3C((uint64_t)v26, a4, &qword_1009E8A20);
      swift_release(v16);
    }
  }
}

uint64_t sub_1003A418C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  return swift_task_switch(sub_1003A41A8, 0, 0);
}

uint64_t sub_1003A41A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 88) = v2;
  v3 = *(_OWORD *)(v0 + 72);
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 96) = v4;
  v5 = sub_10004CFD4(&qword_1009E8A20);
  *v4 = v0;
  v4[1] = sub_1003A4260;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000021, 0x80000001007C5110, sub_1003A70CC, v2, v5);
}

uint64_t sub_1003A4260()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1003A42BC, 0, 0);
}

uint64_t sub_1003A42BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 56);
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = sub_10004CFD4(&qword_1009EF310);
    v3 = sub_10004CFD4(&qword_1009D6FF0);
    if ((swift_dynamicCast(v1, v0 + 16, v2, v3, 6) & 1) == 0)
    {
      v4 = *(_QWORD *)(v0 + 56);
      *(_QWORD *)(v4 + 32) = 0;
      *(_OWORD *)v4 = 0u;
      *(_OWORD *)(v4 + 16) = 0u;
    }
  }
  else
  {
    sub_100010960(v0 + 16, &qword_1009E8A20);
    *(_OWORD *)v1 = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_QWORD *)(v1 + 32) = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A4364(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  NSString v10;
  id v11;
  id v12;
  _OWORD v14[2];
  uint64_t v15;

  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(a2, "libraryAssetWithAssetID:inManagedObjectContext:", v10, a1);

  if (v11)
  {
    v12 = v11;
    BKLibraryAsset.contentInfo(options:)(a6, v14);

  }
  else
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
  }
  return sub_100299C80((uint64_t)v14, a5);
}

void sub_1003A441C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  char *v31;

  v28 = a2;
  v29 = a3;
  v27 = a1;
  v5 = sub_10004CFD4(&qword_1009DF0B8);
  v6 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContentInfoBuildOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v26 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a4, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = (v14 + 40) & ~v14;
  v16 = *(unsigned __int8 *)(v6 + 80);
  v17 = (v11 + v16 + v15) & ~v16;
  v18 = (char *)swift_allocObject(&unk_100901490, v17 + v7, v14 | v16 | 7);
  v19 = v28;
  v20 = v29;
  *((_QWORD *)v18 + 2) = v13;
  *((_QWORD *)v18 + 3) = v19;
  *((_QWORD *)v18 + 4) = v20;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v18[v15], v12, v9);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v18[v17], v8, v25);
  aBlock[4] = sub_1003A71A0;
  v31 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_1009014A8;
  v21 = _Block_copy(aBlock);
  v22 = v31;
  v23 = v26;
  swift_bridgeObjectRetain(v20);
  objc_msgSend(v23, "performBackgroundReadOnlyBlock:", v21, swift_release(v22).n128_f64[0]);
  _Block_release(v21);

}

uint64_t sub_1003A4620(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[40];
  _BYTE v15[48];
  _BYTE v16[48];
  _QWORD v17[6];

  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(a2, "libraryAssetWithAssetID:inManagedObjectContext:", v8, a1);

  if (v9)
  {
    v10 = v9;
    BKLibraryAsset.contentInfo(options:)(a5, v17);

  }
  else
  {
    memset(v17, 0, 40);
  }
  sub_10000B5E4((uint64_t)v17, (uint64_t)v16, &qword_1009E8A20);
  v16[40] = 0;
  sub_10000B5E4((uint64_t)v16, (uint64_t)v15, &qword_1009DF0C0);
  if ((v15[40] & 1) != 0)
  {
    v11 = sub_10004CFD4(&qword_1009DF0B8);
    CheckedContinuation.resume(throwing:)(v11, v11);
  }
  else
  {
    sub_100025B3C((uint64_t)v15, (uint64_t)v14, &qword_1009E8A20);
    v12 = sub_10004CFD4(&qword_1009DF0B8);
    CheckedContinuation.resume(returning:)(v14, v12);
  }

  sub_100010960((uint64_t)v16, &qword_1009DF0C0);
  return sub_100010960((uint64_t)v17, &qword_1009E8A20);
}

void sub_1003A4770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v24 = a1;
  v25 = a2;
  v4 = sub_10004CFD4(&qword_1009DF0A8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContentInfoBuildOptions(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v23 = v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v24, v4);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v10 + v15 + v14) & ~v15;
  v17 = swift_allocObject(&unk_100901440, v16 + v6, v13 | v15 | 7);
  *(_QWORD *)(v17 + 16) = v12;
  v18 = v25;
  *(_QWORD *)(v17 + 24) = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17 + v14, v11, v8);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17 + v16, v7, v4);
  aBlock[4] = sub_1003A702C;
  v27 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_100901458;
  v19 = _Block_copy(aBlock);
  v20 = v27;
  v21 = v23;
  swift_bridgeObjectRetain(v18);
  objc_msgSend(v21, "performBackgroundReadOnlyBlock:", v19, swift_release(v20).n128_f64[0]);
  _Block_release(v19);

}

uint64_t sub_1003A496C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  Class isa;
  id v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD v15[4];
  _QWORD *v16;

  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(a2, "libraryAssetsWithAssetIDsContainedInList:tempAssetIDs:inManagedObjectContext:", isa, 0, a1);

  if (v8)
  {
    v10 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v11 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v10);

  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  __chkstk_darwin(v9);
  v15[2] = a4;
  v12 = sub_1003A2D94((void (*)(__int128 *__return_ptr, id *))sub_1003A709C, (uint64_t)v15, (uint64_t)v11);
  swift_bridgeObjectRelease(v11);
  v16 = v12;
  v13 = sub_10004CFD4(&qword_1009DF0A8);
  return CheckedContinuation.resume(returning:)(&v16, v13);
}

uint64_t sub_1003A4A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(dword_1009DF0CC);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1001FC2C4;
  v9[9] = a3;
  v9[10] = a4;
  v9[7] = a1;
  v9[8] = a2;
  return swift_task_switch(sub_1003A3D10, 0, 0);
}

double sub_1003A4B04@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v8[24];
  uint64_t v9;

  sub_1003A3ECC(a1, a2, a3, (uint64_t)v8);
  if (!v9)
  {
    sub_100010960((uint64_t)v8, &qword_1009E8A20);
    goto LABEL_5;
  }
  v5 = sub_10004CFD4(&qword_1009EF310);
  v6 = sub_10004CFD4(&qword_1009D7020);
  if ((swift_dynamicCast(a4, v8, v5, v6, 6) & 1) == 0)
  {
LABEL_5:
    *(_QWORD *)(a4 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1003A4B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc(dword_1009DF0B4);
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_10000AE34;
  v9[9] = a3;
  v9[10] = a4;
  v9[7] = a1;
  v9[8] = a2;
  return swift_task_switch(sub_1003A41A8, 0, 0);
}

uint64_t sub_1003A4C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1009DF098 + dword_1009DF098);
  v5 = (_QWORD *)swift_task_alloc(unk_1009DF09C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001EB614;
  return v7(a1, a2);
}

uint64_t sub_1003A4C7C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  void *v37;
  unint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  id v42;
  void *v43;
  unint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  unint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  id v69;
  void *v70;
  unsigned int v71;
  id v72;
  void *v73;
  id v74;
  void *v75;
  uint64_t v76;
  id v77;
  void *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  void *v83;
  double v84;
  double v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  char *v95;
  id v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  void *v107;
  unsigned int v108;
  unsigned int v109;
  uint64_t v110;
  uint64_t v112;
  int v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned int v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  id v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  id v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int v158;

  v2 = v1;
  v139 = a1;
  v3 = sub_10004CFD4(&qword_1009DF0E0);
  __chkstk_darwin(v3);
  v5 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v6);
  v8 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v155 = (char *)&v114 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v114 - v12;
  v14 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v14);
  v16 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ContentInfoBuildOptions(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ContentInfoBuildOptions.collectionMemberships.getter(v19);
  v22 = sub_100008DB0((unint64_t *)&qword_1009EF2F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentInfoBuildOptions, (uint64_t)&protocol conformance descriptor for ContentInfoBuildOptions);
  v23 = dispatch thunk of SetAlgebra.isSuperset(of:)(v21, v17, v22);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  v24 = 0;
  if ((v23 & 1) != 0)
  {
    v25 = objc_msgSend(v2, "collectionMembers");
    if (v25)
    {
      v26 = v25;
      v27 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
      v28 = sub_100384B9C(&qword_1009DF0F0, &qword_1009DF0E8, BKCollectionMember_ptr);
      v29 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v26, v27, v28);

      sub_1003A2384(v29);
      v24 = v30;
      swift_bridgeObjectRelease(v29);
    }
    else
    {
      v24 = 0;
    }
  }
  v31 = objc_msgSend(v2, "assetLogID");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
  v137 = v33;
  v138 = v32;

  v34 = objc_msgSend(v2, "permanentOrTemporaryAssetID");
  v136 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v135 = v35;

  v36 = objc_msgSend(v2, "sortTitle");
  if (v36)
  {
    v37 = v36;
    v122 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v121 = v38;

  }
  else
  {
    v122 = 0;
    v121 = 0xE000000000000000;
  }
  v39 = objc_msgSend(v2, "storeID");
  if (v39)
  {
    v40 = v39;
    v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
    v119 = v41;

  }
  else
  {
    v120 = 0;
    v119 = 0;
  }
  v42 = objc_msgSend(v2, "title");
  if (v42)
  {
    v43 = v42;
    v118 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v117 = v44;

  }
  else
  {
    v118 = 0;
    v117 = 0xE000000000000000;
  }
  v45 = objc_msgSend(v2, "url");
  if (v45)
  {
    v46 = v45;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v45);

    v47 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v16, 0, 1, v47);
  }
  else
  {
    v48 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v16, 1, 1, v48);
  }
  v49 = objc_msgSend(v2, "displayAuthor");
  if (v49)
  {
    v50 = v49;
    v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
    v115 = v51;

  }
  else
  {
    v116 = 0;
    v115 = 0xE000000000000000;
  }
  v52 = objc_msgSend(v2, "coverAspectRatio");
  v151 = v52;
  if (v52)
  {
    v53 = v52;
    objc_msgSend(v52, "doubleValue");
    v55 = v54;

    v134 = v55;
  }
  else
  {
    v134 = 0;
  }
  v56 = objc_msgSend(v2, "coverURL");
  if (v56)
  {
    v57 = v56;
    v133 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    v132 = v58;

  }
  else
  {
    v133 = 0;
    v132 = 0;
  }
  v59 = objc_msgSend(v2, "dateFinished");
  if (v59)
  {
    v60 = v59;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v59);

    v61 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v13, 0, 1, v61);
  }
  else
  {
    v62 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v13, 1, 1, v62);
  }
  v63 = objc_msgSend(v2, "bookDescription");
  if (v63)
  {
    v64 = v63;
    v131 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
    v130 = v65;

  }
  else
  {
    v131 = 0;
    v130 = 0;
  }
  v66 = objc_msgSend(v2, "path");
  if (v66)
  {
    v67 = v66;
    v129 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
    v128 = v68;

  }
  else
  {
    v129 = 0;
    v128 = 0;
  }
  BKLibraryAsset.finishedDateKind.getter();
  v69 = objc_msgSend(v2, "genres");
  if (v69)
  {
    v70 = v69;
    v127 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v69, &type metadata for String);

  }
  else
  {
    v127 = 0;
  }
  v71 = objc_msgSend(v2, "hasSpecifiedFinishedDate");
  v149 = objc_msgSend(v2, "isDownloading");
  v72 = objc_msgSend(v2, "isExplicit");
  if (v72)
  {
    v73 = v72;
    v126 = objc_msgSend(v72, "BOOLValue");

  }
  else
  {
    v126 = 0;
  }
  v148 = objc_msgSend(v2, "isFinished");
  v147 = objc_msgSend(v2, "isInSamples");
  v146 = objc_msgSend(v2, "isLocal");
  v145 = objc_msgSend(v2, "isManagedBook");
  v144 = objc_msgSend(v2, "isPartOfSeries");
  v143 = objc_msgSend(v2, "isPreorderBook");
  if (objc_msgSend(v2, "isOwned"))
    v142 = objc_msgSend(v2, "isStore");
  else
    v142 = 0;
  v125 = objc_msgSend(v2, "isStore");
  v74 = objc_msgSend(v2, "language");
  if (v74)
  {
    v75 = v74;
    v124 = static String._unconditionallyBridgeFromObjectiveC(_:)(v74);
    v123 = v76;

  }
  else
  {
    v124 = 0;
    v123 = 0;
  }
  v77 = objc_msgSend(v2, "lastEngagedDate");
  v150 = v71;
  if (v77)
  {
    v78 = v77;
    v79 = v155;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v77);

    v80 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
  }
  else
  {
    v81 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v155, 1, 1, v81);
  }
  v141 = objc_msgSend(v2, "rating");
  v82 = objc_msgSend(v2, "readingProgress");
  if (v82)
  {
    v83 = v82;
    objc_msgSend(v82, "doubleValue");
    v85 = v84;

  }
  else
  {
    v85 = 0.0;
  }
  v86 = objc_msgSend(v2, "releaseDate");
  v152 = v24;
  if (v86)
  {
    v87 = v86;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v86);

    v88 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v8, 0, 1, v88);
  }
  else
  {
    v89 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v8, 1, 1, v89);
  }
  if (objc_msgSend(v2, "seriesType") == 2
    && (v90 = objc_msgSend(v2, "sequenceDisplayName")) != 0)
  {
    v91 = v90;
    v140 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
    v93 = v92;

  }
  else
  {
    v140 = 0;
    v93 = 0;
  }
  v94 = objc_msgSend(v2, "seriesType");
  v153 = v16;
  v154 = v13;
  v95 = v8;
  if (v94 == 2 && (v96 = objc_msgSend(v2, "sequenceNumber")) != 0)
  {
    v97 = v96;
    v98 = v5;
    objc_msgSend(v96, "decimalValue");
    v99 = v158;
    v100 = v157;
    v101 = v156;

    v102 = 0;
  }
  else
  {
    v98 = v5;
    v101 = 0;
    v100 = 0;
    v99 = 0;
    v102 = 1;
  }
  v103 = objc_msgSend(v2, "seriesSortKey");
  v104 = v103;
  if (v103)
  {
    v105 = objc_msgSend(v103, "integerValue");

  }
  else
  {
    v105 = 0;
  }
  v106 = objc_msgSend(v2, "versionNumber");
  v107 = v106;
  if (v106)
  {
    objc_msgSend(v106, "floatValue");
    v109 = v108;

    v110 = v109;
  }
  else
  {
    v110 = 0;
  }
  LOBYTE(v156) = v107 == 0;
  BYTE2(v113) = v125 ^ 1;
  BYTE1(v113) = v142;
  LOBYTE(v113) = v143;
  HIBYTE(v112) = v144;
  BYTE6(v112) = v145;
  BYTE5(v112) = v146;
  BYTE4(v112) = v147;
  BYTE3(v112) = v148;
  BYTE2(v112) = v126;
  BYTE1(v112) = v149;
  LOBYTE(v112) = v150;
  return CommonLibraryAssetInfo.init(assetLogID:collectionMemberships:id:sortTitle:storeID:title:url:author:coverAspectRatio:coverURLString:dateFinished:description:filePath:finishedDateKind:genreNames:hasSpecifiedFinishedDate:isDownloading:isExplicit:isFinished:isInSamples:isLocal:isManaged:isPartOfSeries:isPreorder:isPurchased:isSideloaded:language:lastEngagedDate:rating:readingProgress:releaseDate:sequenceLabel:sequenceNumber:seriesSortKey:versionNumber:)(v138, v137, v152, v136, v135, v122, v121, v120, v85, v119, v118, v117, v153, v116, v115, v134, v151 == 0, v133, v132,
           v154,
           v131,
           v130,
           v129,
           v128,
           v98,
           v127,
           v112,
           v113,
           v124,
           v123,
           v155,
           v141,
           0,
           v95,
           v140,
           v93,
           v101,
           v100,
           v99 | ((unint64_t)v102 << 32),
           v105,
           v104 == 0,
           v110 | ((unint64_t)(v107 == 0) << 32));
}

uint64_t sub_1003A5880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003A58D8(a1, (void (*)(__int128 *__return_ptr, id *))sub_1003A7310, (uint64_t (*)(uint64_t, __n128))sub_10050F04C, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryBookInfo, &qword_1009DF108, (uint64_t)&protocol conformance descriptor for LibraryBookInfo, a2);
}

uint64_t sub_1003A58AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003A58D8(a1, (void (*)(__int128 *__return_ptr, id *))sub_1003A72E4, (uint64_t (*)(uint64_t, __n128))sub_10050F068, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryAudiobookInfo, &qword_1009DF100, (uint64_t)&protocol conformance descriptor for LibraryAudiobookInfo, a2);
}

uint64_t sub_1003A58D8@<X0>(uint64_t a1@<X0>, void (*a2)(__int128 *__return_ptr, id *)@<X1>, uint64_t (*a3)(uint64_t, __n128)@<X2>, uint64_t (*a4)(uint64_t)@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  void *v7;
  void *v8;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  id v39;
  __n128 v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void (*v60)(__int128 *__return_ptr, id *);
  uint64_t v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  void *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  id v82;
  void *v83;
  id v84;
  void *v85;
  id v86;
  void *v87;
  char v88;
  id v89;
  void *v90;
  uint64_t v91;
  id v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  id v98;
  void *v99;
  uint64_t v100;
  unsigned __int8 v101;
  char v102;
  uint64_t (*v103)(uint64_t);
  uint64_t v104;
  uint64_t v105;
  int v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int v111;
  unsigned int v112;
  uint64_t v113;
  id v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(__int128 *__return_ptr, id *);
  uint64_t v124;
  uint64_t (*v125)(uint64_t, __n128);
  unint64_t *v126;
  uint64_t (*v127)(uint64_t);
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;

  v127 = a4;
  v128 = a6;
  v125 = a3;
  v126 = a5;
  v123 = a2;
  v8 = v7;
  v129 = a7;
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  v11 = __chkstk_darwin(v10);
  v130 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for ContentKind(0, v11);
  v13 = *(_QWORD *)(v124 - 8);
  __chkstk_darwin(v124);
  v15 = (char *)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009DF0F8);
  __chkstk_darwin(v16);
  v131 = (uint64_t)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v110 - v19;
  __chkstk_darwin(v21);
  v132 = (uint64_t)&v110 - v22;
  v23 = type metadata accessor for ContentInfoBuildOptions(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ContentInfoBuildOptions.seriesAssets.getter(v25);
  v28 = sub_100008DB0((unint64_t *)&qword_1009EF2F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentInfoBuildOptions, (uint64_t)&protocol conformance descriptor for ContentInfoBuildOptions);
  v29 = dispatch thunk of SetAlgebra.isSuperset(of:)(v27, v23, v28);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  if ((v29 & 1) != 0)
  {
    v30 = objc_msgSend(v8, "seriesBooks");
    if (v30)
    {
      v31 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
      v32 = sub_100384B9C((unint64_t *)&qword_1009D6DB0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
      v33 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v30, v31, v32);

      __chkstk_darwin(v34);
      v109 = a1;
      sub_1003A1FAC(v123, (uint64_t)&v108, v33);
      v36 = v35;
      v37 = swift_bridgeObjectRelease(v33);
      v30 = (id)v125(v36, v37);
      swift_bridgeObjectRelease(v36);
    }
  }
  else
  {
    v30 = 0;
  }
  v38 = v132;
  v39 = objc_msgSend(v8, "collectionMembers");
  v125 = (uint64_t (*)(uint64_t, __n128))v30;
  if (v39)
  {
    v41 = v39;
    v42 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
    v43 = sub_100384B9C(&qword_1009DF0F0, &qword_1009DF0E8, BKCollectionMember_ptr);
    v44 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v41, v42, v43);

    sub_1003A2384(v44);
    v121 = v45;
    v40 = swift_bridgeObjectRelease(v44);
  }
  else
  {
    v121 = 0;
  }
  v46 = type metadata accessor for MappedSeriesInfo(0, v40);
  v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56);
  v47(v38, 1, 1, v46);
  v48 = objc_msgSend(v8, "mappedAssetID");
  if (v48)
  {
    v49 = v48;
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
    v52 = v51;

    v53 = objc_msgSend(v8, "mappedAssetContentType");
    v54 = (unsigned int *)&enum case for ContentKind.audiobook(_:);
    if (v53 != 6)
      v54 = (unsigned int *)&enum case for ContentKind.regularBook(_:);
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *v54, v124);
    MappedSeriesInfo.init(id:contentKind:)(v50, v52, v15);
    sub_100010960(v38, &qword_1009DF0F8);
    v47((uint64_t)v20, 0, 1, v46);
    sub_100025B3C((uint64_t)v20, v38, &qword_1009DF0F8);
  }
  v55 = objc_msgSend(v8, "assetLogID");
  v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
  v58 = v57;

  v59 = objc_msgSend(v8, "permanentOrTemporaryAssetID");
  v60 = (void (*)(__int128 *__return_ptr, id *))static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
  v62 = v61;

  v63 = objc_msgSend(v8, "sortTitle");
  if (v63)
  {
    v64 = v63;
    v65 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
    v119 = v66;
    v120 = v65;

  }
  else
  {
    v119 = 0xE000000000000000;
    v120 = 0;
  }
  v67 = objc_msgSend(v8, "storeID");
  if (v67)
  {
    v68 = v67;
    v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
    v117 = v70;
    v118 = v69;

  }
  else
  {
    v117 = 0;
    v118 = 0;
  }
  v71 = objc_msgSend(v8, "title");
  if (v71)
  {
    v72 = v71;
    v73 = static String._unconditionallyBridgeFromObjectiveC(_:)(v71);
    v115 = v74;
    v116 = v73;

  }
  else
  {
    v115 = 0xE000000000000000;
    v116 = 0;
  }
  v75 = objc_msgSend(v8, "url");
  v124 = v56;
  v122 = v62;
  if (v75)
  {
    v76 = v75;
    v77 = v130;
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v75);

    v78 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 0, 1, v78);
  }
  else
  {
    v79 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v130, 1, 1, v79);
  }
  v80 = objc_msgSend(v8, "authorCount");
  v81 = v80;
  if (v80)
  {
    v114 = objc_msgSend(v80, "integerValue");

  }
  else
  {
    v114 = 0;
  }
  v82 = objc_msgSend(v8, "authorNames");
  if (v82)
  {
    v83 = v82;
    v113 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v82, &type metadata for String);

  }
  else
  {
    v113 = 0;
  }
  v84 = objc_msgSend(v8, "hasTooManyAuthors");
  if (v84)
  {
    v85 = v84;
    v112 = objc_msgSend(v84, "BOOLValue");

  }
  else
  {
    v112 = 2;
  }
  v86 = objc_msgSend(v8, "isExplicit");
  if (v86)
  {
    v87 = v86;
    v111 = objc_msgSend(v86, "BOOLValue");

  }
  else
  {
    v111 = 0;
  }
  v88 = sub_100536CA0();
  v89 = objc_msgSend(v8, "genres");
  v123 = v60;
  if (v89)
  {
    v90 = v89;
    v91 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v89, &type metadata for String);

  }
  else
  {
    v91 = 0;
  }
  sub_10000B5E4(v132, v131, &qword_1009DF0F8);
  v92 = objc_msgSend(v8, "narratorCount");
  v93 = v92;
  if (v92)
  {
    v94 = objc_msgSend(v92, "integerValue");

  }
  else
  {
    v94 = 0;
  }
  v95 = objc_msgSend(v8, "narratorNames");
  if (v95)
  {
    v96 = v95;
    v97 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v95, &type metadata for String);

  }
  else
  {
    v97 = 0;
  }
  v98 = objc_msgSend(v8, "hasTooManyNarrators");
  if (v98)
  {
    v99 = v98;
    v100 = v58;
    v101 = objc_msgSend(v98, "BOOLValue");

  }
  else
  {
    v100 = v58;
    v101 = 2;
  }
  v102 = v88 & 1;
  v103 = v127;
  v104 = v127(0);
  v105 = sub_100008DB0(v126, v103, v128);
  LOBYTE(v108) = v101;
  BYTE2(v107) = v102;
  BYTE1(v107) = v111;
  LOBYTE(v107) = v112;
  CommonLibrarySeriesInfo.init(assetLogID:collectionMemberships:id:sortTitle:storeID:title:url:assets:authorCount:authorNames:hasTooManyAuthors:isExplicit:isOrdered:genreNames:mappedSeriesInfo:narratorCount:narratorNames:hasTooManyNarrators:)(v124, v100, v121, v123, v122, v120, v119, v118, v117, v116, v115, v130, v125, v114, v81 == 0, v113, v107, v91, v131,
    v94,
    v93 == 0,
    v97,
    v108,
    v104,
    v105);
  return sub_100010960(v132, &qword_1009DF0F8);
}

uint64_t type metadata accessor for LibraryDataProvider()
{
  return objc_opt_self(_TtC5Books19LibraryDataProvider);
}

void sub_1003A6178(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  Swift::String v43;
  uint64_t v44;
  unint64_t v45;
  __int128 v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51[3];
  uint64_t v52;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease(a1);
    return;
  }
  swift_bridgeObjectRetain(a1);
  sub_10000B5E4(a1 + 32, (uint64_t)&v49, &qword_1009DD500);
  v7 = v49;
  v8 = v50;
  v47 = v49;
  v48 = v50;
  sub_100022840(v51, (uint64_t)v46);
  v9 = (_QWORD *)*a3;
  v11 = sub_10004CE80(v7, v8);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1002C083C();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v22 = (uint64_t *)(v21[6] + 16 * v11);
    *v22 = v7;
    v22[1] = v8;
    sub_100022840(v46, v21[7] + 40 * v11);
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v21[2] = v25;
    v26 = v4 - 1;
    if (!v26)
    {
LABEL_22:
      swift_bridgeObjectRelease_n(a1, 2);
      return;
    }
    v27 = a1 + 88;
    while (1)
    {
      sub_10000B5E4(v27, (uint64_t)&v49, &qword_1009DD500);
      v28 = v49;
      v29 = v50;
      v47 = v49;
      v48 = v50;
      sub_100022840(v51, (uint64_t)v46);
      v30 = (_QWORD *)*a3;
      v31 = sub_10004CE80(v28, v29);
      v33 = v30[2];
      v34 = (v32 & 1) == 0;
      v24 = __OFADD__(v33, v34);
      v35 = v33 + v34;
      if (v24)
        break;
      v36 = v32;
      if (v30[3] < v35)
      {
        sub_10037B7F8(v35, 1);
        v31 = sub_10004CE80(v28, v29);
        if ((v36 & 1) != (v37 & 1))
          goto LABEL_25;
      }
      if ((v36 & 1) != 0)
        goto LABEL_10;
      v38 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      v39 = (uint64_t *)(v38[6] + 16 * v31);
      *v39 = v28;
      v39[1] = v29;
      sub_100022840(v46, v38[7] + 40 * v31);
      v40 = v38[2];
      v24 = __OFADD__(v40, 1);
      v41 = v40 + 1;
      if (v24)
        goto LABEL_24;
      v38[2] = v41;
      v27 += 56;
      if (!--v26)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_10037B7F8(v14, a2 & 1);
  v16 = sub_10004CE80(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v18);
    v52 = v18;
    swift_errorRetain(v18);
    v19 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    if ((swift_dynamicCast(v19, &v52, v19, &type metadata for _MergeError, 0) & 1) == 0)
    {
      swift_bridgeObjectRelease(a1);
      _s5Books15CurrentPageViewVwxx_0(v46);
      v20 = v48;
      swift_bridgeObjectRelease(a1);
      swift_bridgeObjectRelease(v20);
      swift_errorRelease(v52);
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_26:
  v44 = 0;
  v45 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v42._object = (void *)0x80000001007C3AE0;
  v42._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v42);
  _print_unlocked<A, B>(_:_:)(&v47, &v44, &type metadata for String, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v43._countAndFlagsBits = 39;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v44, v45, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

void sub_1003A6550(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5, _QWORD *a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  uint64_t v24;
  unint64_t *v25;

  v10 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (__CocoaSet.Index.age.getter(a1, a2) == *(_DWORD *)(a4 + 36))
      {
        v14 = __CocoaSet.Index.element.getter(v10, a2);
        v24 = v14;
        v15 = sub_100009E04(0, a5, a6);
        swift_unknownObjectRetain(v14);
        swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
        a5 = v25;
        swift_unknownObjectRelease(v14);
        v16 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a4 + 40));
        v17 = -1 << *(_BYTE *)(a4 + 32);
        v10 = v16 & ~v17;
        if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
        {
          v18 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          v19 = static NSObject.== infix(_:_:)(v18, a5);

          if ((v19 & 1) == 0)
          {
            v20 = ~v17;
            do
            {
              v10 = (v10 + 1) & v20;
              if (((*(_QWORD *)(a4 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
                goto LABEL_24;
              v21 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
              v22 = static NSObject.== infix(_:_:)(v21, a5);

            }
            while ((v22 & 1) == 0);
          }

LABEL_20:
          v23 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v10);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v11 = a4;
  else
    v11 = a4 & 0xFFFFFFFFFFFFFF8;
  v12 = __CocoaSet.element(at:)(a1, a2, v11);
  v24 = v12;
  v13 = sub_100009E04(0, a5, a6);
  swift_unknownObjectRetain(v12);
  swift_dynamicCast(&v25, &v24, (char *)&type metadata for Swift.AnyObject + 8, v13, 7);
  swift_unknownObjectRelease(v12);
}

uint64_t sub_1003A67B0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (result < 0 || (v4 = result, 1 << *(_BYTE *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v6 = *(_QWORD *)(a3 + 48);
    v7 = type metadata accessor for Book.MediaType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v4, v7);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1003A6844(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1003A68CC(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_QWORD *sub_1003A697C(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = (uint64_t *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v6 = *v5;
    v7 = v5[1];
    v8 = *(void **)(*(_QWORD *)(a5 + 56) + 8 * a2);
    *result = v8;
    swift_bridgeObjectRetain(v7);
    v9 = v8;
    return (_QWORD *)v6;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1003A6A0C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1003A6A64(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1003A6ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 320) = a1;
  *(_QWORD *)(v2 + 328) = a2;
  return swift_task_switch(sub_1003A6AD4, 0, 0);
}

uint64_t sub_1003A6AD4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = swift_task_alloc(32);
  *(_QWORD *)(v0 + 336) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 320);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 344) = v2;
  v3 = sub_10004CFD4(&qword_1009DF0A0);
  *v2 = v0;
  v2[1] = sub_1003A6B84;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 312, 0, 0, 0xD000000000000022, 0x80000001007C50E0, sub_1003A6F5C, v1, v3);
}

uint64_t sub_1003A6B84()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 336);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 344));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1003A6BE0, 0, 0);
}

uint64_t sub_1003A6BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v26;
  __int128 *v27;
  _QWORD *v28;

  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v26 = *(_QWORD *)(v0 + 312);
    v27 = (__int128 *)(v0 + 112);
    v3 = v1 + 32;
    swift_bridgeObjectRetain(v1);
    v4 = _swiftEmptyArrayStorage;
    do
    {
      sub_10002E418(v3, v0 + 72);
      sub_10002E418(v0 + 72, v0 + 232);
      v5 = sub_10004CFD4(&qword_1009EF310);
      v6 = sub_10004CFD4(&qword_1009D6FF0);
      if ((swift_dynamicCast(v0 + 152, v0 + 232, v5, v6, 6) & 1) == 0)
      {
        *(_QWORD *)(v0 + 184) = 0;
        *(_OWORD *)(v0 + 152) = 0u;
        *(_OWORD *)(v0 + 168) = 0u;
      }
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 72));
      if (*(_QWORD *)(v0 + 176))
      {
        sub_100022840((__int128 *)(v0 + 152), (uint64_t)v27);
        sub_100022840(v27, v0 + 192);
        if ((swift_isUniquelyReferenced_nonNull_native(v4) & 1) == 0)
          v4 = sub_1005B1720(0, v4[2] + 1, 1, v4);
        v8 = v4[2];
        v7 = v4[3];
        if (v8 >= v7 >> 1)
          v4 = sub_1005B1720((_QWORD *)(v7 > 1), v8 + 1, 1, v4);
        v4[2] = v8 + 1;
        sub_100022840((__int128 *)(v0 + 192), (uint64_t)&v4[5 * v8 + 4]);
      }
      else
      {
        sub_100010960(v0 + 152, &qword_1009DD660);
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n(v26, 2);
    v9 = v4[2];
    if (v9)
    {
LABEL_14:
      v28 = _swiftEmptyArrayStorage;
      sub_100366CE4(0, v9, 0);
      v10 = _swiftEmptyArrayStorage;
      v11 = (uint64_t)(v4 + 4);
      do
      {
        sub_10002E418(v11, v0 + 272);
        v13 = *(_QWORD *)(v0 + 296);
        v12 = *(_QWORD *)(v0 + 304);
        sub_10003F198((_QWORD *)(v0 + 272), v13);
        *(_QWORD *)(v0 + 16) = dispatch thunk of LibraryContentInfo.id.getter(v13, *(_QWORD *)(v12 + 8));
        *(_QWORD *)(v0 + 24) = v14;
        sub_100022840((__int128 *)(v0 + 272), v0 + 32);
        v28 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
        {
          sub_100366CE4(0, v10[2] + 1, 1);
          v10 = v28;
        }
        v16 = v10[2];
        v15 = v10[3];
        if (v16 >= v15 >> 1)
        {
          sub_100366CE4(v15 > 1, v16 + 1, 1);
          v10 = v28;
        }
        v10[2] = v16 + 1;
        v17 = &v10[7 * v16];
        v18 = *(_OWORD *)(v0 + 16);
        v19 = *(_OWORD *)(v0 + 32);
        v20 = *(_OWORD *)(v0 + 48);
        v17[10] = *(_QWORD *)(v0 + 64);
        *((_OWORD *)v17 + 3) = v19;
        *((_OWORD *)v17 + 4) = v20;
        *((_OWORD *)v17 + 2) = v18;
        v11 += 40;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease(v4);
      v21 = v10[2];
      if (v21)
        goto LABEL_21;
LABEL_24:
      v22 = _swiftEmptyDictionarySingleton;
      goto LABEL_25;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v1);
    v4 = _swiftEmptyArrayStorage;
    v9 = _swiftEmptyArrayStorage[2];
    if (v9)
      goto LABEL_14;
  }
  swift_bridgeObjectRelease(v4);
  v10 = _swiftEmptyArrayStorage;
  v21 = _swiftEmptyArrayStorage[2];
  if (!v21)
    goto LABEL_24;
LABEL_21:
  sub_10004CFD4((uint64_t *)&unk_1009D7A60);
  v22 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v21);
LABEL_25:
  v28 = v22;
  swift_bridgeObjectRetain(v10);
  sub_1003A6178(v23, 1, &v28);
  v24 = swift_bridgeObjectRelease(v10);
  return (*(uint64_t (**)(_QWORD *, __n128))(v0 + 8))(v28, v24);
}

void sub_1003A6F5C(uint64_t a1)
{
  uint64_t v1;

  sub_1003A4770(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1003A6F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v1 = type metadata accessor for ContentInfoBuildOptions(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = sub_10004CFD4(&qword_1009DF0A8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;

  v12 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1003A702C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = type metadata accessor for ContentInfoBuildOptions(0);
  v4 = (*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  sub_10004CFD4(&qword_1009DF0A8);
  return sub_1003A496C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4);
}

void sub_1003A709C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  BKLibraryAsset.contentInfo(options:)(*(void **)(v1 + 16), a1);
}

void sub_1003A70CC(uint64_t a1)
{
  uint64_t *v1;

  sub_1003A441C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003A70D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;

  v1 = type metadata accessor for ContentInfoBuildOptions(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = sub_10004CFD4(&qword_1009DF0B8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;

  v12 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v12);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1003A71A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = type metadata accessor for ContentInfoBuildOptions(0);
  v4 = (*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  sub_10004CFD4(&qword_1009DF0B8);
  return sub_1003A4620(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), (void *)(v1 + v4));
}

uint64_t sub_1003A7214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ContentInfoBuildOptions(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003A7290(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContentInfoBuildOptions(0) - 8) + 80);
  return sub_1003A4364(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), (void *)(v1 + ((v3 + 48) & ~v3)));
}

uint64_t sub_1003A72D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A72E4(uint64_t a1)
{
  uint64_t v1;

  return sub_100536C74(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1003A7310(uint64_t a1)
{
  return sub_1003A72E4(a1);
}

uint64_t destroy for SidebarSearchFieldContentConfiguration(_QWORD *a1)
{
  _QWORD *v1;

  v1 = a1 + 1;
  swift_release(*a1);
  return swift_unknownObjectWeakDestroy(v1);
}

uint64_t initializeWithCopy for SidebarSearchFieldContentConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t *v5;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v5 = a2 + 1;
  swift_retain(v4);
  swift_unknownObjectWeakCopyInit(a1 + 8, v5);
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t *assignWithCopy for SidebarSearchFieldContentConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  swift_unknownObjectWeakCopyAssign(a1 + 1, a2 + 1);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t initializeWithTake for SidebarSearchFieldContentConfiguration(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectWeakTakeInit(a1 + 8, a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t *assignWithTake for SidebarSearchFieldContentConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  swift_unknownObjectWeakTakeAssign(a1 + 1, a2 + 1);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for SidebarSearchFieldContentConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SidebarSearchFieldContentConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SidebarSearchFieldContentConfiguration()
{
  return &type metadata for SidebarSearchFieldContentConfiguration;
}

uint64_t sub_1003A7510@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  int v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char v17;
  _BYTE v20[40];

  v5 = sub_10004CFD4((uint64_t *)&unk_1009EC660);
  v6 = __chkstk_darwin(v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = type metadata accessor for UICellConfigurationState(0, v6);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10002E418(a1, (uint64_t)v20);
  v13 = sub_10004CFD4(&qword_1009DF180);
  v14 = swift_dynamicCast(v8, v20, v13, v9, 6);
  v15 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v14)
  {
    v15(v8, 0, 1, v9);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v12, v8, v9);
      v16 = sub_1003A78DC(v2, (uint64_t)v20);
      v17 = UICellConfigurationState.isSelected.getter(v16);
      (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v12, v9);
      v20[16] = v17 & 1;
      return sub_1003A7930((uint64_t)v20, a2);
    }
  }
  else
  {
    v15(v8, 1, 1, v9);
  }
  sub_1003A789C((uint64_t)v8);
  return sub_1003A78DC(v2, a2);
}

void sub_1003A76A4()
{
  uint64_t v0;
  Swift::UInt Strong;
  Swift::UInt v2;

  Hasher._combine(_:)(*(_QWORD *)v0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 8);
  if (Strong)
  {
    v2 = Strong;
    Hasher._combine(_:)(Strong);
    swift_unknownObjectRelease(v2);
  }
  Hasher._combine(_:)(*(_BYTE *)(v0 + 16));
}

Swift::Int sub_1003A76FC()
{
  uint64_t v0;
  Swift::UInt Strong;
  Swift::UInt v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  Hasher._combine(_:)(*(_QWORD *)v0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 8);
  if (Strong)
  {
    v2 = Strong;
    Hasher._combine(_:)(Strong);
    swift_unknownObjectRelease(v2);
  }
  Hasher._combine(_:)(*(_BYTE *)(v0 + 16));
  return Hasher._finalize()();
}

id sub_1003A7778()
{
  uint64_t *v0;
  id v1;
  id v2;
  uint64_t v4[3];

  sub_1003A78DC(v0, (uint64_t)v4);
  v1 = objc_allocWithZone((Class)type metadata accessor for SidebarSearchFieldContentView());
  v2 = sub_10055D084(v4);
  sub_1003A7970();
  return v2;
}

Swift::Int sub_1003A77D8(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt Strong;
  Swift::UInt v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  Hasher._combine(_:)(*(_QWORD *)v1);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 8);
  if (Strong)
  {
    v3 = Strong;
    Hasher._combine(_:)(Strong);
    swift_unknownObjectRelease(v3);
  }
  Hasher._combine(_:)(*(_BYTE *)(v1 + 16));
  return Hasher._finalize()();
}

unint64_t sub_1003A7858()
{
  unint64_t result;

  result = qword_1009DF170;
  if (!qword_1009DF170)
  {
    result = swift_getWitnessTable(&unk_10071F1F0, &type metadata for SidebarSearchFieldContentConfiguration);
    atomic_store(result, (unint64_t *)&qword_1009DF170);
  }
  return result;
}

uint64_t sub_1003A789C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009EC660);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003A78DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  *(_QWORD *)a2 = v4;
  v5 = a2 + 8;
  swift_retain(v4);
  swift_unknownObjectWeakCopyInit(v5, a1 + 1);
  *(_BYTE *)(a2 + 16) = *((_BYTE *)a1 + 16);
  return a2;
}

uint64_t sub_1003A7930(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a2 = *(_QWORD *)a1;
  swift_unknownObjectWeakTakeInit(a2 + 8, a1 + 8);
  *(_BYTE *)(a2 + 16) = *(_BYTE *)(a1 + 16);
  return a2;
}

unint64_t sub_1003A7970()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DF188;
  if (!qword_1009DF188)
  {
    v1 = type metadata accessor for SidebarSearchFieldContentView();
    result = swift_getWitnessTable(&unk_10072CFA0, v1);
    atomic_store(result, (unint64_t *)&qword_1009DF188);
  }
  return result;
}

uint64_t sub_1003A79B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  _QWORD v13[2];
  char v14;
  _QWORD v15[2];
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *a1;
  v5 = *a2;
  sub_1003A78DC(a1, (uint64_t)&v19);
  sub_1003A78DC(a2, (uint64_t)&v17);
  if (v4 != v5)
    goto LABEL_2;
  v8 = swift_unknownObjectWeakLoadStrong(&v20);
  v9 = swift_unknownObjectWeakLoadStrong(&v18);
  v10 = v9;
  if (v8)
  {
    swift_unknownObjectRelease(v8);
    if (v10)
    {
      swift_unknownObjectRelease(v10);
      sub_1003A7B1C(&v17);
      sub_1003A7B1C(&v19);
      sub_1003A78DC(a1, (uint64_t)v15);
      sub_1003A78DC(a2, (uint64_t)v13);
      if (v8 != v10)
        goto LABEL_3;
LABEL_12:
      v11 = v16;
      sub_1003A7B1C(v15);
      v12 = v14;
      sub_1003A7B1C(v13);
      v6 = v11 ^ v12 ^ 1;
      return v6 & 1;
    }
  }
  else
  {
    if (!v9)
    {
      sub_1003A7B1C(&v17);
      sub_1003A7B1C(&v19);
      sub_1003A78DC(a1, (uint64_t)v15);
      sub_1003A78DC(a2, (uint64_t)v13);
      goto LABEL_12;
    }
    swift_unknownObjectRelease(v9);
  }
LABEL_2:
  sub_1003A7B1C(&v17);
  sub_1003A7B1C(&v19);
  sub_1003A78DC(a1, (uint64_t)v15);
  sub_1003A78DC(a2, (uint64_t)v13);
LABEL_3:
  sub_1003A7B1C(v13);
  sub_1003A7B1C(v15);
  v6 = 0;
  return v6 & 1;
}

_QWORD *sub_1003A7B1C(_QWORD *a1)
{
  _QWORD *v2;

  v2 = a1 + 1;
  swift_release(*a1);
  swift_unknownObjectWeakDestroy(v2);
  return a1;
}

id sub_1003A7B50()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t v8;
  uint64_t v9;
  _BYTE *v10;

  v2 = objc_msgSend(v0, "activeStoreAccount");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "ams_DSID");
    if (v4)
    {
      v1 = v4;
    }
    else
    {
      v8 = sub_1003A7C24();
      v9 = swift_allocError(&type metadata for AccountsProviding.Errors, v8, 0, 0);
      *v10 = 1;
      swift_willThrow(v9);
    }

  }
  else
  {
    v5 = sub_1003A7C24();
    v6 = swift_allocError(&type metadata for AccountsProviding.Errors, v5, 0, 0);
    *v7 = 0;
    swift_willThrow(v6);
  }
  return v1;
}

unint64_t sub_1003A7C24()
{
  unint64_t result;

  result = qword_1009DF190;
  if (!qword_1009DF190)
  {
    result = swift_getWitnessTable(&unk_10071F32C, &type metadata for AccountsProviding.Errors);
    atomic_store(result, (unint64_t *)&qword_1009DF190);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AccountsProviding.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003A7CB4 + 4 * byte_10071F295[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003A7CE8 + 4 * byte_10071F290[v4]))();
}

uint64_t sub_1003A7CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003A7CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003A7CF8);
  return result;
}

uint64_t sub_1003A7D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003A7D0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003A7D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003A7D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccountsProviding.Errors()
{
  return &type metadata for AccountsProviding.Errors;
}

unint64_t sub_1003A7D38()
{
  unint64_t result;

  result = qword_1009DF198;
  if (!qword_1009DF198)
  {
    result = swift_getWitnessTable(&unk_10071F304, &type metadata for AccountsProviding.Errors);
    atomic_store(result, (unint64_t *)&qword_1009DF198);
  }
  return result;
}

unint64_t sub_1003A7D80()
{
  unint64_t result;

  result = qword_1009DF1A0;
  if (!qword_1009DF1A0)
  {
    result = swift_getWitnessTable(&unk_10071F400, &type metadata for ChangeFontSizeIntent);
    atomic_store(result, (unint64_t *)&qword_1009DF1A0);
  }
  return result;
}

unint64_t sub_1003A7DC8()
{
  unint64_t result;

  result = qword_1009DF1A8;
  if (!qword_1009DF1A8)
  {
    result = swift_getWitnessTable(&unk_10071F428, &type metadata for ChangeFontSizeIntent);
    atomic_store(result, (unint64_t *)&qword_1009DF1A8);
  }
  return result;
}

uint64_t sub_1003A7E0C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086EDE4, 1);
}

uint64_t sub_1003A7E1C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10086EDBC, 1);
}

uint64_t sub_1003A7E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1E7C8);
  sub_100048F64(v10, (uint64_t)qword_100A1E7C8);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007C5290);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for AppIntent that changes font size in the currently open book", 69, 2);
}

uint64_t sub_1003A7FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[9] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003A8010, v6, v7);
}

uint64_t sub_1003A8010()
{
  _QWORD *v0;
  id v1;
  id v2;
  void *v3;
  char **v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  unint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  unint64_t v16;
  uint64_t v17;
  _BYTE *v18;

  swift_release(v0[9]);
  v1 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v2 = objc_msgSend(v1, "menuController");

  v3 = (void *)sub_1005273B0();
  if (!v3)
  {
    v13 = sub_1001EA7C0();
    v14 = swift_allocError(&type metadata for BookContextualIntentError, v13, 0, 0);
    *v15 = 1;
    swift_willThrow(v14);
LABEL_8:
    v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  IntentParameter.wrappedValue.getter(v0 + 2);
  v4 = &selRef_books_decreaseSize_;
  if (!*((_BYTE *)v0 + 16))
    v4 = &selRef_books_increaseSize_;
  v5 = *v4;
  if ((objc_msgSend(v3, "canPerformAction:withSender:", *v4, 0) & 1) == 0)
  {
    v16 = sub_1001EA7C0();
    v17 = swift_allocError(&type metadata for BookContextualIntentError, v16, 0, 0);
    *v18 = 1;
    swift_willThrow(v17);

    goto LABEL_8;
  }
  v7 = v0[7];
  v6 = v0[8];
  v8 = v0[6];
  v0[2] = v8;
  v0[3] = v7;
  v0[4] = v6;
  swift_retain(v8);
  swift_retain(v7);
  swift_retain(v6);
  v9 = _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)(v0 + 2, &type metadata for ChangeFontSizeIntent);
  v10 = objc_retainAutorelease(v3);
  objc_msgSend(v10, "performSelector:withObject:", v5, v9);
  v11 = swift_unknownObjectRelease(v9);
  static IntentResult.result<>()(v11);

  v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1003A81D8()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1003A81F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v0 = sub_10004CFD4(&qword_1009DF1F8);
  __chkstk_darwin(v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009DF200);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1003A8BC0();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 2, &type metadata for ChangeFontSizeIntent, v6);
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10071F468);
  v9 = sub_10004CFD4(&qword_1009DF208);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._object = (void *)0x80000001007C5270;
  v10._countAndFlagsBits = 0xD000000000000014;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  v11 = swift_getKeyPath(&unk_10071F490);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009DF210);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v11, v3, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for ChangeFontSizeIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for ChangeFontSizeIntent, v6);
}

uint64_t sub_1003A83B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CE288 != -1)
    swift_once(&qword_1009CE288, sub_1003A7E2C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1E7C8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1003A8428(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1009DF1F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return sub_1003A7FA0(a1, v4, v5, v6);
}

uint64_t sub_1003A8494@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1003A8520();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1003A84BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003A8BC0();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for ChangeFontSizeIntent()
{
  return &type metadata for ChangeFontSizeIntent;
}

uint64_t sub_1003A84F4()
{
  return sub_100030B34(&qword_1009DF1B8, &qword_1009DF1C0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1003A8520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  unint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  char *v53;
  char *v54;
  unint64_t v55;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, _QWORD, uint64_t);
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  char *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v71 = *(_QWORD *)(v0 - 8);
  v72 = v0;
  __chkstk_darwin(v0);
  v70 = (char *)&v57 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v69 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v4);
  v67 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LocalizedStringResource(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v73 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v75 = (char *)&v57 - v10;
  v11 = type metadata accessor for InputConnectionBehavior(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  __chkstk_darwin(v11);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v57 - v20;
  v22 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v22);
  v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_10004CFD4(&qword_1009DF1C8);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v59 = v6;
  v25(v24, 1, 1, v6);
  LOBYTE(v76) = 2;
  v26 = type metadata accessor for IntentDialog(0);
  v58 = v26;
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v74 = v27;
  v27(v21, 1, 1, v26);
  v27(v18, 1, 1, v26);
  v28 = enum case for InputConnectionBehavior.default(_:);
  v29 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
  v64 = enum case for InputConnectionBehavior.default(_:);
  v65 = v13;
  v29(v15, enum case for InputConnectionBehavior.default(_:), v13);
  v63 = v29;
  v30 = sub_1003A8B38();
  v57 = v24;
  v31 = v18;
  v68 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v24, &v76, v21, v18, v15, &off_1008F0A50, v30);
  v66 = sub_10004CFD4(&qword_1009DF1D8);
  v25(v24, 1, 1, v6);
  v82 = 0;
  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  v76 = 0u;
  v77 = 0u;
  v32 = v21;
  v33 = v21;
  v34 = v58;
  v35 = v74;
  v74(v33, 1, 1, v58);
  v36 = v31;
  v60 = v31;
  v37 = v31;
  v38 = v34;
  v35(v37, 1, 1, v34);
  v61 = v15;
  v29(v15, v28, v13);
  v39 = sub_1003A8B7C();
  v40 = v57;
  v41 = v32;
  v66 = IntentParameter<>.init(description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v57, &v76, v32, v36, v15, v39);
  v62 = sub_10004CFD4(&qword_1009D20F8);
  v42 = v67;
  v43 = String.LocalizationValue.init(stringLiteral:)(1802465090, 0xE400000000000000);
  v44 = v69;
  static Locale.current.getter(v43);
  v45 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v46 = v70;
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 104);
  v48 = v72;
  v47(v70, enum case for LocalizedStringResource.BundleDescription.main(_:), v72);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v42, 0, 0, v44, v46, "'Book' parameter that specifies which book to act on. in an intent", 66, 2);
  v49 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000027, 0x80000001007C5190);
  static Locale.current.getter(v49);
  v47(v46, v45, v48);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v42, 0, 0, v44, v46, "Description of the parameter of the specific book title to act on in a book related Intent", 90, 2);
  v25(v40, 0, 1, v59);
  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  v76 = 0u;
  v77 = 0u;
  v50 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEB000000003F6B6FLL);
  static Locale.current.getter(v50);
  v47(v46, v45, v48);
  v51 = v73;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v42, 0, 0, v44, v46, "'Book' prompt when running a Book specific intent with no book selected.", 72, 2);
  IntentDialog.init(_:)(v51);
  v52 = v74;
  v74(v41, 0, 1, v38);
  v53 = v60;
  v52(v60, 1, 1, v38);
  v54 = v61;
  v63(v61, v64, v65);
  v55 = sub_1001F8840();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v75, v40, &v76, v41, v53, v54, v55);
  return v68;
}

unint64_t sub_1003A8B38()
{
  unint64_t result;

  result = qword_1009DF1D0;
  if (!qword_1009DF1D0)
  {
    result = swift_getWitnessTable(&unk_10072084C, &type metadata for BooksValueSizeChange);
    atomic_store(result, (unint64_t *)&qword_1009DF1D0);
  }
  return result;
}

unint64_t sub_1003A8B7C()
{
  unint64_t result;

  result = qword_1009DF1E0;
  if (!qword_1009DF1E0)
  {
    result = swift_getWitnessTable(&unk_100731F54, &type metadata for BookSettingsEntity);
    atomic_store(result, (unint64_t *)&qword_1009DF1E0);
  }
  return result;
}

unint64_t sub_1003A8BC0()
{
  unint64_t result;

  result = qword_1009DF1E8;
  if (!qword_1009DF1E8)
  {
    result = swift_getWitnessTable(&unk_10071F370, &type metadata for ChangeFontSizeIntent);
    atomic_store(result, &qword_1009DF1E8);
  }
  return result;
}

uint64_t sub_1003A8C04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003A8C2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003A8C54(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = Set.init(minimumCapacity:)(*(_QWORD *)(a1 + 16), &type metadata for Int, &protocol witness table for Int);
  v3 = 0;
  v15 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_10060B614(&v14, *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release(a1);
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1003A8DC8(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16[3];

  v2 = 0;
  v16[2] = Set.init(minimumCapacity:)(*(_QWORD *)(a1 + 16), &type metadata for String, &protocol witness table for String);
  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v7)
      goto LABEL_23;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      v2 = v13 + 1;
      if (v13 + 1 >= v7)
        goto LABEL_23;
      v14 = *(_QWORD *)(v3 + 8 * v2);
      if (!v14)
      {
        v2 = v13 + 2;
        if (v13 + 2 >= v7)
          goto LABEL_23;
        v14 = *(_QWORD *)(v3 + 8 * v2);
        if (!v14)
        {
          v2 = v13 + 3;
          if (v13 + 3 >= v7)
            goto LABEL_23;
          v14 = *(_QWORD *)(v3 + 8 * v2);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    v10 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v9);
    v11 = *v10;
    v12 = v10[1];
    swift_bridgeObjectRetain(v12);
    sub_1000345F0(v16, v11, v12);
    swift_bridgeObjectRelease(v16[1]);
  }
  v15 = v13 + 4;
  if (v15 >= v7)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v2 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v2 >= v7)
      goto LABEL_23;
    v14 = *(_QWORD *)(v3 + 8 * v2);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

char *SeriesListModeManager.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  char *v17;
  id v18;
  char *result;
  char *v20;
  id v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char v30[48];
  objc_super v31;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books21SeriesListModeManager_monitor] = 0;
  v1 = OBJC_IVAR____TtC5Books21SeriesListModeManager_filterPublishers;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009CED50);
  v3 = swift_allocObject(v2, 28, 7);
  *(_DWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v0[v1] = v3;
  v4 = OBJC_IVAR____TtC5Books21SeriesListModeManager_sortPublishers;
  v5 = sub_10004CFD4(&qword_1009DF240);
  v6 = swift_allocObject(v5, 28, 7);
  *(_DWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v0[v4] = v6;
  v7 = OBJC_IVAR____TtC5Books21SeriesListModeManager_filterOptions;
  v8 = sub_10004CFD4((uint64_t *)&unk_1009CED60);
  v9 = swift_allocObject(v8, 28, 7);
  *(_DWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 16) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v0[v7] = v9;
  v10 = OBJC_IVAR____TtC5Books21SeriesListModeManager_sortOrders;
  v11 = sub_10004CFD4(&qword_1009DF260);
  v12 = swift_allocObject(v11, 28, 7);
  *(_DWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 16) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v0[v10] = v12;
  v13 = OBJC_IVAR____TtC5Books21SeriesListModeManager_previousSortOrders;
  v14 = swift_allocObject(v11, 28, 7);
  *(_DWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 16) = _swiftEmptyDictionarySingleton;
  *(_QWORD *)&v0[v13] = v14;
  v31.receiver = v0;
  v31.super_class = (Class)type metadata accessor for SeriesListModeManager();
  v15 = objc_msgSendSuper2(&v31, "init");
  v16 = (void *)objc_opt_self(BKLibraryManager);
  v17 = (char *)v15;
  v18 = objc_msgSend(v16, "defaultManager");
  result = (char *)objc_msgSend(v18, "persistentStoreCoordinator");
  if (result)
  {
    v20 = result;
    v21 = objc_msgSend(v16, "predicateForContainerLibraryAssets");
    KeyPath = swift_getKeyPath(&unk_10071F4D8);
    v23 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    inited = swift_initStackObject(v23, v30);
    *(_OWORD *)(inited + 16) = xmmword_1007118C0;
    *(_QWORD *)(inited + 32) = swift_getKeyPath(&unk_10071F518);
    v25 = swift_getKeyPath(&unk_10071F550);
    *(_QWORD *)(inited + 40) = v25;
    specialized Array._endMutation()(v25);
    v26 = sub_100026EA4(inited);
    swift_bridgeObjectRelease(inited);
    sub_1003AD58C(v20, v21, KeyPath, v26, (uint64_t)v17);
    v28 = v27;

    swift_release(KeyPath);
    v29 = *(void **)&v17[OBJC_IVAR____TtC5Books21SeriesListModeManager_monitor];
    *(_QWORD *)&v17[OBJC_IVAR____TtC5Books21SeriesListModeManager_monitor] = v28;

    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for SeriesListModeManager()
{
  return objc_opt_self(_TtC5Books21SeriesListModeManager);
}

void sub_1003A91EC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = objc_msgSend(*a1, "assetID");
  if (v3)
  {
    v4 = v3;
    v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3);
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1003A9254(uint64_t a1, void **a2)
{
  void *v2;
  NSString v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8))
    v3 = String._bridgeToObjectiveC()();
  else
    v3 = 0;
  v4 = v3;
  objc_msgSend(v2, "setAssetID:");

}

const char *sub_1003A92B4()
{
  return "seriesFilterMode";
}

id sub_1003A92C0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "seriesFilterMode");
  *a2 = result;
  return result;
}

id sub_1003A92F8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setSeriesFilterMode:", *a1);
}

const char *sub_1003A930C()
{
  return "seriesSortMode";
}

id sub_1003A9318@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "seriesSortMode");
  *a2 = result;
  return result;
}

id sub_1003A9350(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, "setSeriesSortMode:", *a1);
}

id SeriesListModeManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SeriesListModeManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003A942C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for SeriesListModeManager();
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

void SeriesListModeManager.managedObjectBackgroundMonitor(_:didSaveNotify:)(uint64_t a1, void *a2)
{
  sub_1003ACED0(a2);
}

uint64_t sub_1003A946C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  v7 = sub_10004CFD4(&qword_1009DF290);
  v6[8] = v7;
  v6[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SeriesListSortOrder(0);
  v6[10] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v6[11] = v9;
  v6[12] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009DF280);
  v6[13] = v10;
  v6[14] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SeriesListFilterOption(0);
  v6[15] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[16] = v12;
  v6[17] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MainActor(0);
  v6[18] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v6[19] = v14;
  v6[20] = v15;
  return swift_task_switch(sub_1003A957C, v14, v15);
}

uint64_t sub_1003A957C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 168) = Strong;
  if (Strong)
    return swift_task_switch(sub_1003A9630, 0, 0);
  swift_release(*(_QWORD *)(v0 + 144));
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003A9630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 168);
  v5 = *(_OWORD *)(v0 + 48);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 176) = v2;
  *(_OWORD *)(v2 + 16) = v5;
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 184) = v3;
  *v3 = v0;
  v3[1] = sub_1003A96DC;
  return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 112), 0, 0, 0xD000000000000013, 0x80000001007C5300, sub_1003ADD24, v2, *(_QWORD *)(v0 + 104));
}

uint64_t sub_1003A96DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 176);
  swift_task_dealloc(*(_QWORD *)(*v0 + 184));
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003A9730, *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
}

uint64_t sub_1003A9730()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  __n128 v16;

  v1 = v0[15];
  v2 = v0[16];
  v3 = v0[14];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100010960(v3, &qword_1009DF280);
    return swift_task_switch(sub_1003A9884, 0, 0);
  }
  v4 = v0[21];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(v0[17], v3, v1);
  v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books21SeriesListModeManager_filterPublishers);
  swift_retain(v5);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  v6 = *(_QWORD *)(v5 + 16);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_7;
  v8 = v0[6];
  v7 = v0[7];
  swift_bridgeObjectRetain(v7);
  v9 = sub_10004CE80(v8, v7);
  v10 = v0[7];
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease(v0[7]);
LABEL_7:
    v13 = 0;
    goto LABEL_8;
  }
  v12 = *(_QWORD *)(v6 + 56) + 16 * v9;
  v14 = *(id *)v12;
  v13 = *(_QWORD *)(v12 + 8);
  v15 = *(id *)v12;
  swift_retain_n(v13, 2);
  swift_bridgeObjectRelease(v10);
  sub_1003ADA48(v14, v13);
LABEL_8:
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  v16 = swift_release(v5);
  if (v13)
  {
    PassthroughSubject.send(_:)(v0[17]);
    v16 = swift_release(v13);
  }
  (*(void (**)(_QWORD, _QWORD, __n128))(v0[16] + 8))(v0[17], v0[15], v16);
  return swift_task_switch(sub_1003A9884, 0, 0);
}

uint64_t sub_1003A9884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 168);
  v5 = *(_OWORD *)(v0 + 48);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 192) = v2;
  *(_OWORD *)(v2 + 16) = v5;
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 200) = v3;
  *v3 = v0;
  v3[1] = sub_1003A9930;
  return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 72), 0, 0, 0xD000000000000010, 0x80000001007C5320, sub_1003ADD20, v2, *(_QWORD *)(v0 + 64));
}

uint64_t sub_1003A9930()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 192);
  swift_task_dealloc(*(_QWORD *)(*v0 + 200));
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1003A9984, *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 160));
}

uint64_t sub_1003A9984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  __n128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = swift_release(*(_QWORD *)(v0 + 144));
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4);
  v6 = *(char **)(v0 + 168);
  if (v5 == 1)
  {
    v7 = *(_QWORD *)(v0 + 72);

    sub_100010960(v7, &qword_1009DF290);
    goto LABEL_11;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC5Books21SeriesListModeManager_sortPublishers];
  swift_retain(v8);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  v9 = *(_QWORD *)(v8 + 16);
  if (*(_QWORD *)(v9 + 16))
  {
    v11 = *(_QWORD *)(v0 + 48);
    v10 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain(v10);
    v12 = sub_10004CE80(v11, v10);
    v13 = *(_QWORD *)(v0 + 56);
    if ((v14 & 1) != 0)
    {
      v15 = *(_QWORD *)(v9 + 56) + 16 * v12;
      v17 = *(id *)v15;
      v16 = *(_QWORD *)(v15 + 8);
      v18 = *(id *)v15;
      swift_retain_n(v16, 2);
      swift_bridgeObjectRelease(v13);
      sub_1003ADA48(v17, v16);
      goto LABEL_8;
    }
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  }
  v16 = 0;
LABEL_8:
  os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));
  v19 = swift_release(v8);
  v20 = *(void **)(v0 + 168);
  v22 = *(_QWORD *)(v0 + 88);
  v21 = *(_QWORD *)(v0 + 96);
  v23 = *(_QWORD *)(v0 + 80);
  if (v16)
  {
    PassthroughSubject.send(_:)(*(_QWORD *)(v0 + 96));

    v24 = swift_release(v16);
    (*(void (**)(uint64_t, uint64_t, __n128))(v22 + 8))(v21, v23, v24);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, __n128))(v22 + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80), v19);

  }
LABEL_11:
  v25 = *(_QWORD *)(v0 + 112);
  v26 = *(_QWORD *)(v0 + 96);
  v27 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 136));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SeriesListModeManager.filterOption(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1003A9B48, 0, 0);
}

uint64_t sub_1003A9B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v4;
  v5 = sub_10004CFD4(&qword_1009DF280);
  *v4 = v0;
  v4[1] = sub_1003A9BF4;
  return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD000000000000013, 0x80000001007C5300, sub_1003AD28C, v2, v5);
}

uint64_t sub_1003A9BF4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 48);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t SeriesListModeManager.sortOrder(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1003A9C60, 0, 0);
}

uint64_t sub_1003A9C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v4;
  v5 = sub_10004CFD4(&qword_1009DF290);
  *v4 = v0;
  v4[1] = sub_1003ADD1C;
  return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD000000000000010, 0x80000001007C5320, sub_1003AD2C8, v2, v5);
}

uint64_t SeriesListModeManager.filterPublisher(for:handle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003AA070(a1, a2, a3, &OBJC_IVAR____TtC5Books21SeriesListModeManager_filterPublishers, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003A9D84);
}

uint64_t sub_1003A9D84@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;

  v39 = a5;
  v9 = sub_10004CFD4(&qword_1009DF368);
  v38 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = *(_QWORD *)(*a1 + 16);
  swift_bridgeObjectRetain(a3);
  if (v13 && (v14 = sub_10004CE80(a2, a3), (v15 & 1) != 0))
  {
    v16 = *(_QWORD *)(v12 + 56) + 16 * v14;
    v17 = *(_QWORD *)(v16 + 8);
    v18 = *(id *)v16;
    swift_retain(v17);
  }
  else
  {
    v18 = objc_msgSend((id)objc_opt_self(NSHashTable), "hashTableWithOptions:", 517);
    v19 = sub_10004CFD4(&qword_1009DF370);
    v20 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    v17 = PassthroughSubject.init()(v20);
  }
  objc_msgSend(v18, "addObject:", a4, swift_bridgeObjectRelease(a3).n128_f64[0]);
  if (!*(_QWORD *)(*a1 + 16)
    || (swift_bridgeObjectRetain(a3), sub_10004CE80(a2, a3), v22 = v21, swift_bridgeObjectRelease(a3), (v22 & 1) == 0))
  {
    swift_bridgeObjectRetain(a3);
    v23 = v18;
    swift_retain(v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
    v40 = *a1;
    *a1 = 0x8000000000000000;
    sub_1002C44A4((uint64_t)v23, v17, a2, a3, isUniquelyReferenced_nonNull_native);
    v25 = *a1;
    *a1 = v40;
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v25);
  }
  v26 = *a1;
  swift_bridgeObjectRetain(*a1);
  v28 = sub_1003AC908(v27, (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *, __n128))sub_10029A07C);
  swift_bridgeObjectRelease(v26);
  v29 = *a1;
  *a1 = v28;
  swift_bridgeObjectRelease(v29);
  v40 = v17;
  v30 = sub_10004CFD4(&qword_1009DF370);
  v31 = sub_100030B34(&qword_1009DF378, &qword_1009DF370, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v32 = sub_100008DB0(&qword_1009DF380, (uint64_t (*)(uint64_t))&type metadata accessor for SeriesListFilterOption, (uint64_t)&protocol conformance descriptor for SeriesListFilterOption);
  Publisher<>.removeDuplicates()(v30, v31, v32);
  v33 = sub_100030B34(&qword_1009DF388, &qword_1009DF368, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v34 = Publisher.eraseToAnyPublisher()(v9, v33);

  v35 = swift_release(v17);
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v38 + 8))(v11, v9, v35);
  *v39 = v34;
  return result;
}

uint64_t SeriesListModeManager.sortPublisher(for:handle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003AA070(a1, a2, a3, &OBJC_IVAR____TtC5Books21SeriesListModeManager_sortPublishers, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1003AA110);
}

uint64_t sub_1003AA070(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(uint64_t *__return_ptr, os_unfair_lock_s *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v13;

  v10 = *(os_unfair_lock_s **)(v5 + *a4);
  swift_retain(v10);
  os_unfair_lock_lock(v10 + 6);
  a5(&v13, v10 + 4, a1, a2, v5, a3);
  os_unfair_lock_unlock(v10 + 6);
  v11 = v13;
  swift_release(v10);
  return v11;
}

uint64_t sub_1003AA110@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;

  v39 = a5;
  v9 = sub_10004CFD4(&qword_1009DF330);
  v38 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = *(_QWORD *)(*a1 + 16);
  swift_bridgeObjectRetain(a3);
  if (v13 && (v14 = sub_10004CE80(a2, a3), (v15 & 1) != 0))
  {
    v16 = *(_QWORD *)(v12 + 56) + 16 * v14;
    v17 = *(_QWORD *)(v16 + 8);
    v18 = *(id *)v16;
    swift_retain(v17);
  }
  else
  {
    v18 = objc_msgSend((id)objc_opt_self(NSHashTable), "hashTableWithOptions:", 517);
    v19 = sub_10004CFD4(&qword_1009DF338);
    v20 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
    v17 = PassthroughSubject.init()(v20);
  }
  objc_msgSend(v18, "addObject:", a4, swift_bridgeObjectRelease(a3).n128_f64[0]);
  if (!*(_QWORD *)(*a1 + 16)
    || (swift_bridgeObjectRetain(a3), sub_10004CE80(a2, a3), v22 = v21, swift_bridgeObjectRelease(a3), (v22 & 1) == 0))
  {
    swift_bridgeObjectRetain(a3);
    v23 = v18;
    swift_retain(v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
    v40 = *a1;
    *a1 = 0x8000000000000000;
    sub_1002C44C0((uint64_t)v23, v17, a2, a3, isUniquelyReferenced_nonNull_native);
    v25 = *a1;
    *a1 = v40;
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v25);
  }
  v26 = *a1;
  swift_bridgeObjectRetain(*a1);
  v28 = sub_1003AC908(v27, (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *, __n128))sub_10029A088);
  swift_bridgeObjectRelease(v26);
  v29 = *a1;
  *a1 = v28;
  swift_bridgeObjectRelease(v29);
  v40 = v17;
  v30 = sub_10004CFD4(&qword_1009DF338);
  v31 = sub_100030B34(&qword_1009DF340, &qword_1009DF338, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v32 = sub_100008DB0(&qword_1009DF348, (uint64_t (*)(uint64_t))&type metadata accessor for SeriesListSortOrder, (uint64_t)&protocol conformance descriptor for SeriesListSortOrder);
  Publisher<>.removeDuplicates()(v30, v31, v32);
  v33 = sub_100030B34(&qword_1009DF350, &qword_1009DF330, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v34 = Publisher.eraseToAnyPublisher()(v9, v33);

  v35 = swift_release(v17);
  result = (*(uint64_t (**)(char *, uint64_t, __n128))(v38 + 8))(v11, v9, v35);
  *v39 = v34;
  return result;
}

void SeriesListModeManager.setPreviousSortOrder(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;

  v7 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC5Books21SeriesListModeManager_previousSortOrders);
  v8 = (uint64_t)&v7[4];
  v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  sub_1003AA45C(v8, a2, a3, a1);
  os_unfair_lock_unlock(v9);
}

double sub_1003AA45C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v7 = sub_10004CFD4(&qword_1009DF290);
  __chkstk_darwin(v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a4, (uint64_t)v9, &qword_1009DF290);
  swift_bridgeObjectRetain(a3);
  return sub_1004EF7B8((uint64_t)v9, a2, a3);
}

void SeriesListModeManager.previousSortOrder(for:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  uint64_t *v8;
  os_unfair_lock_s *v9;

  v7 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC5Books21SeriesListModeManager_previousSortOrders);
  v8 = (uint64_t *)&v7[4];
  v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  sub_1003AB678(v8, a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListSortOrder, a3);
  os_unfair_lock_unlock(v9);
}

void SeriesListModeManager.filterOptionSync(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  NSString v7;
  id v8;
  void *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  char isEscapingClosureAtFileLocation;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD aBlock[5];
  uint64_t v22;
  uint64_t v23;
  char v24;

  v6 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  if (objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
  {
    v7 = String._bridgeToObjectiveC()();
    v20 = objc_msgSend(v6, "libraryAssetOnMainQueueWithAssetID:", v7);

    if (v20)
    {
      v8 = objc_msgSend(v20, "seriesFilterMode");
      if (v8)
      {
        v9 = v8;
        v10 = objc_msgSend(v8, "integerValue");

        SeriesListFilterOption.init(rawValue:)(v10);
        return;
      }

      v18 = v20;
    }
    else
    {
      v18 = v6;
    }

    v19 = type metadata accessor for SeriesListFilterOption(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a3, 1, 1, v19);
  }
  else
  {
    v23 = 0;
    v24 = 1;
    v11 = (_QWORD *)swift_allocObject(&unk_100901870, 48, 7);
    v11[2] = v6;
    v11[3] = a1;
    v11[4] = a2;
    v11[5] = &v23;
    v12 = swift_allocObject(&unk_100901898, 32, 7);
    *(_QWORD *)(v12 + 16) = sub_1003ADD28;
    *(_QWORD *)(v12 + 24) = v11;
    aBlock[4] = sub_10004DE04;
    v22 = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100064AFC;
    aBlock[3] = &unk_1009018B0;
    v13 = _Block_copy(aBlock);
    v14 = v22;
    v15 = v6;
    swift_retain(v12);
    swift_bridgeObjectRetain(a2);
    objc_msgSend(v15, "performBackgroundReadOnlyBlockAndWait:", v13, swift_release(v14).n128_f64[0]);
    _Block_release(v13);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v12, "", 82, 117, 59, 1);
    swift_release(v12);
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else if ((v24 & 1) != 0)
    {

      v17 = type metadata accessor for SeriesListFilterOption(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
      swift_release(v11);
    }
    else
    {
      SeriesListFilterOption.init(rawValue:)(v23);
      swift_release(v11);

    }
  }
}

void SeriesListModeManager.sortOrderSync(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  NSString v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  unsigned int *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];
  uint64_t v26;
  uint64_t v27;
  char v28;

  v6 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  if (objc_msgSend((id)objc_opt_self(NSThread), "isMainThread"))
  {
    v7 = String._bridgeToObjectiveC()();
    v8 = objc_msgSend(v6, "libraryAssetOnMainQueueWithAssetID:", v7);

    if (v8)
    {
      v9 = objc_msgSend(v8, "seriesSortMode");
      if (v9)
      {
        v10 = v9;
        v11 = objc_msgSend(v9, "integerValue");

        switch((unint64_t)v11)
        {
          case 0uLL:
            v12 = (unsigned int *)&enum case for SeriesListSortOrder.ascending(_:);
            break;
          case 1uLL:
            v12 = (unsigned int *)&enum case for SeriesListSortOrder.descending(_:);
            break;
          case 2uLL:
            v12 = (unsigned int *)&enum case for SeriesListSortOrder.releaseDate(_:);
            break;
          case 3uLL:
            v12 = (unsigned int *)&enum case for SeriesListSortOrder.popular(_:);
            break;
          case 4uLL:
            v12 = (unsigned int *)&enum case for SeriesListSortOrder.title(_:);
            break;
          default:
            goto LABEL_14;
        }
        v23 = *v12;
        v24 = type metadata accessor for SeriesListSortOrder(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(a3, v23, v24);
        type metadata accessor for SeriesListSortOrder(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a3, 0, 1, v24);
        return;
      }

    }
    else
    {
      v8 = v6;
    }

LABEL_14:
    v20 = type metadata accessor for SeriesListSortOrder(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a3, 1, 1, v20);
    return;
  }
  v27 = 0;
  v28 = 1;
  v13 = (_QWORD *)swift_allocObject(&unk_1009018E8, 48, 7);
  v13[2] = v6;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = &v27;
  v14 = swift_allocObject(&unk_100901910, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_1003AD31C;
  *(_QWORD *)(v14 + 24) = v13;
  v25[4] = sub_100258E34;
  v26 = v14;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  v25[2] = sub_100064AFC;
  v25[3] = &unk_100901928;
  v15 = _Block_copy(v25);
  v16 = v26;
  v17 = v6;
  swift_bridgeObjectRetain(a2);
  swift_retain(v14);
  objc_msgSend(v17, "performBackgroundReadOnlyBlockAndWait:", v15, swift_release(v16).n128_f64[0]);

  _Block_release(v15);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation(v14, "", 82, 136, 59, 1);
  swift_release(v14);
  if ((v17 & 1) != 0)
  {
    __break(1u);
    JUMPOUT(0x1003AAC30);
  }
  if ((v28 & 1) != 0)
  {
LABEL_8:
    v18 = type metadata accessor for SeriesListSortOrder(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
  else
  {
    switch(v27)
    {
      case 0:
        v19 = (unsigned int *)&enum case for SeriesListSortOrder.ascending(_:);
        break;
      case 1:
        v19 = (unsigned int *)&enum case for SeriesListSortOrder.descending(_:);
        break;
      case 2:
        v19 = (unsigned int *)&enum case for SeriesListSortOrder.releaseDate(_:);
        break;
      case 3:
        v19 = (unsigned int *)&enum case for SeriesListSortOrder.popular(_:);
        break;
      case 4:
        v19 = (unsigned int *)&enum case for SeriesListSortOrder.title(_:);
        break;
      default:
        goto LABEL_8;
    }
    v21 = *v19;
    v22 = type metadata accessor for SeriesListSortOrder(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(a3, v21, v22);
    type metadata accessor for SeriesListSortOrder(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, 0, 1, v22);
  }
  swift_release(v13);
}

void sub_1003AAC5C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  NSString v8;
  id v9;
  id v10;
  BOOL v11;
  void *v12;
  id v13;

  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(a2, "libraryAssetWithAssetID:inManagedObjectContext:", v8, a1);

  if (v9)
  {
    v10 = objc_msgSend(v9, "seriesFilterMode");
    v11 = v10 == 0;
    if (v10)
    {
      v12 = v10;
      v13 = objc_msgSend(v10, "integerValue");

    }
    else
    {
      v13 = 0;
    }

  }
  else
  {
    v13 = 0;
    v11 = 1;
  }
  *(_QWORD *)a5 = v13;
  *(_BYTE *)(a5 + 8) = v11;
}

uint64_t sub_1003AAD28(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t *v35;
  os_unfair_lock_s *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a6;
  v49 = a5;
  v10 = sub_10004CFD4(&qword_1009DF280);
  __chkstk_darwin(v10);
  v50 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v47 = (uint64_t)&v46 - v13;
  v14 = sub_10004CFD4(&qword_1009DF3A8);
  __chkstk_darwin(v14);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v46 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v46 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v46 - v24;
  v26 = a3;
  v27 = a4;
  v28 = String._bridgeToObjectiveC()();
  v29 = objc_msgSend(a2, "libraryAssetWithAssetID:inManagedObjectContext:", v28, a1);

  if (v29 && (v30 = objc_msgSend(v29, "seriesFilterMode")) != 0)
  {
    v31 = v30;
    v32 = objc_msgSend(v30, "integerValue");

    SeriesListFilterOption.init(rawValue:)(v32);
    swift_storeEnumTagMultiPayload(v25, v14, 0);
    sub_10000B5E4((uint64_t)v25, (uint64_t)v22, &qword_1009DF3A8);
    if (swift_getEnumCaseMultiPayload(v22, v14) == 1)
    {
      v33 = sub_10004CFD4(&qword_1009DF3A0);
      CheckedContinuation.resume(throwing:)(v33, v33);
    }
    else
    {
      v43 = v47;
      sub_100025B3C((uint64_t)v22, v47, &qword_1009DF280);
      v44 = sub_10004CFD4(&qword_1009DF3A0);
      CheckedContinuation.resume(returning:)(v43, v44);
    }

    v41 = &qword_1009DF3A8;
    v42 = (uint64_t)v25;
  }
  else
  {
    v46 = v29;
    v34 = *(os_unfair_lock_s **)(v48 + OBJC_IVAR____TtC5Books21SeriesListModeManager_filterOptions);
    v35 = (uint64_t *)&v34[4];
    v36 = v34 + 6;
    os_unfair_lock_lock(v34 + 6);
    v37 = v50;
    sub_1003AB678(v35, v26, v27, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListFilterOption, v50);
    os_unfair_lock_unlock(v36);
    sub_10000B5E4(v37, (uint64_t)v19, &qword_1009DF280);
    swift_storeEnumTagMultiPayload(v19, v14, 0);
    sub_10000B5E4((uint64_t)v19, (uint64_t)v16, &qword_1009DF3A8);
    if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
    {
      v38 = sub_10004CFD4(&qword_1009DF3A0);
      CheckedContinuation.resume(throwing:)(v38, v38);
    }
    else
    {
      v39 = v47;
      sub_100025B3C((uint64_t)v16, v47, &qword_1009DF280);
      v40 = sub_10004CFD4(&qword_1009DF3A0);
      CheckedContinuation.resume(returning:)(v39, v40);
    }

    sub_100010960((uint64_t)v19, &qword_1009DF3A8);
    v41 = &qword_1009DF280;
    v42 = v50;
  }
  return sub_100010960(v42, v41);
}

void sub_1003AB0A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  void *v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  char *v29;

  v26 = a7;
  v27 = a8;
  v13 = sub_10004CFD4(a5);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  v18 = *(unsigned __int8 *)(v14 + 80);
  v19 = (v18 + 40) & ~v18;
  v20 = (v15 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (char *)swift_allocObject(a6, v20 + 8, v18 | 7);
  *((_QWORD *)v21 + 2) = v17;
  *((_QWORD *)v21 + 3) = a2;
  *((_QWORD *)v21 + 4) = a3;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v21[v19], v16, v13);
  *(_QWORD *)&v21[v20] = a4;
  aBlock[4] = v26;
  v29 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = v27;
  v22 = _Block_copy(aBlock);
  v23 = v29;
  v24 = v17;
  swift_bridgeObjectRetain(a3);
  v25 = a4;
  objc_msgSend(v24, "performBackgroundReadOnlyBlock:", v22, swift_release(v23).n128_f64[0]);
  _Block_release(v22);

}

uint64_t sub_1003AB234(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  NSString v26;
  char *v27;
  id v28;
  void *v29;
  id v30;
  unsigned int *v31;
  os_unfair_lock_s *v32;
  uint64_t *v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v52 = a6;
  v53 = a5;
  v10 = sub_10004CFD4(&qword_1009DF290);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v51 = (uint64_t)&v49 - v14;
  v15 = sub_10004CFD4(&qword_1009DF398);
  __chkstk_darwin(v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v49 - v19;
  __chkstk_darwin(v21);
  v50 = (char *)&v49 - v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v49 - v24;
  v26 = String._bridgeToObjectiveC()();
  v27 = (char *)objc_msgSend(a2, "libraryAssetWithAssetID:inManagedObjectContext:", v26, a1);

  if (v27 && (v28 = objc_msgSend(v27, "seriesSortMode")) != 0)
  {
    v29 = v28;
    v30 = objc_msgSend(v28, "integerValue");

    switch((unint64_t)v30)
    {
      case 0uLL:
        v31 = (unsigned int *)&enum case for SeriesListSortOrder.ascending(_:);
        goto LABEL_14;
      case 1uLL:
        v31 = (unsigned int *)&enum case for SeriesListSortOrder.descending(_:);
        goto LABEL_14;
      case 2uLL:
        v31 = (unsigned int *)&enum case for SeriesListSortOrder.releaseDate(_:);
        goto LABEL_14;
      case 3uLL:
        v31 = (unsigned int *)&enum case for SeriesListSortOrder.popular(_:);
        goto LABEL_14;
      case 4uLL:
        v31 = (unsigned int *)&enum case for SeriesListSortOrder.title(_:);
LABEL_14:
        v41 = *v31;
        v42 = type metadata accessor for SeriesListSortOrder(0);
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v25, v41, v42);
        type metadata accessor for SeriesListSortOrder(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v25, 0, 1, v42);
        break;
      default:
        v40 = type metadata accessor for SeriesListSortOrder(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v25, 1, 1, v40);
        break;
    }
    swift_storeEnumTagMultiPayload(v25, v15, 0);
    v43 = v50;
    sub_10000B5E4((uint64_t)v25, (uint64_t)v50, &qword_1009DF398);
    if (swift_getEnumCaseMultiPayload(v43, v15) == 1)
    {
      v44 = sub_10004CFD4(&qword_1009DF390);
      CheckedContinuation.resume(throwing:)(v44, v44);
    }
    else
    {
      v45 = (uint64_t)v43;
      v46 = v51;
      sub_100025B3C(v45, v51, &qword_1009DF290);
      v47 = sub_10004CFD4(&qword_1009DF390);
      CheckedContinuation.resume(returning:)(v46, v47);
    }

    v38 = &qword_1009DF398;
    v39 = (uint64_t)v25;
  }
  else
  {
    v50 = v27;
    v32 = *(os_unfair_lock_s **)(v52 + OBJC_IVAR____TtC5Books21SeriesListModeManager_sortOrders);
    v33 = (uint64_t *)&v32[4];
    v34 = v32 + 6;
    os_unfair_lock_lock(v32 + 6);
    sub_1003AB678(v33, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListSortOrder, (uint64_t)v12);
    os_unfair_lock_unlock(v34);
    sub_10000B5E4((uint64_t)v12, (uint64_t)v20, &qword_1009DF290);
    swift_storeEnumTagMultiPayload(v20, v15, 0);
    sub_10000B5E4((uint64_t)v20, (uint64_t)v17, &qword_1009DF398);
    if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
    {
      v35 = sub_10004CFD4(&qword_1009DF390);
      CheckedContinuation.resume(throwing:)(v35, v35);
    }
    else
    {
      v36 = v51;
      sub_100025B3C((uint64_t)v17, v51, &qword_1009DF290);
      v37 = sub_10004CFD4(&qword_1009DF390);
      CheckedContinuation.resume(returning:)(v36, v37);
    }

    sub_100010960((uint64_t)v20, &qword_1009DF398);
    v38 = &qword_1009DF290;
    v39 = (uint64_t)v12;
  }
  return sub_100010960(v39, v38);
}

void sub_1003AB678(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    swift_bridgeObjectRetain(a3);
    v10 = sub_10004CE80(a2, a3);
    if ((v11 & 1) != 0)
    {
      v12 = v10;
      v13 = *(_QWORD *)(v7 + 56);
      v14 = a4(0);
      v15 = *(_QWORD *)(v14 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16))(a5, v13 + *(_QWORD *)(v15 + 72) * v12, v14);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a5, 0, 1, v14);
    }
    else
    {
      v17 = a4(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a5, 1, 1, v17);
    }
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v16 = a4(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a5, 1, 1, v16);
  }
}

uint64_t SeriesListModeManager.setFilterOption(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1003AB79C, 0, 0);
}

uint64_t sub_1003AB79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_1003AB850;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000017, 0x80000001007C5340, sub_1003AD358, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1003AB850()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1003ADD44, 0, 0);
}

uint64_t sub_1003AB8AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  NSString v12;
  id v13;
  Class isa;
  os_unfair_lock_s *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;

  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(a2, "libraryAssetWithAssetID:inManagedObjectContext:", v12, a1);

  if (v13)
  {
    SeriesListFilterOption.rawValue.getter();
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v13, "setSeriesFilterMode:", isa);

    goto LABEL_10;
  }
  v15 = *(os_unfair_lock_s **)(a6 + OBJC_IVAR____TtC5Books21SeriesListModeManager_filterOptions);
  v16 = (uint64_t)&v15[4];
  v17 = v15 + 6;
  os_unfair_lock_lock(v15 + 6);
  sub_1003AC244(v16, a3, a4, a5, &qword_1009DF280, (uint64_t (*)(_QWORD, double))&type metadata accessor for SeriesListFilterOption, (uint64_t (*)(char *, uint64_t, uint64_t, __n128))sub_1004EF95C);
  os_unfair_lock_unlock(v17);
  v18 = *(_QWORD *)(a6 + OBJC_IVAR____TtC5Books21SeriesListModeManager_filterPublishers);
  swift_retain(v18);
  os_unfair_lock_lock((os_unfair_lock_t)(v18 + 24));
  v19 = *(_QWORD *)(v18 + 16);
  if (*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRetain(a4);
    v20 = sub_10004CE80(a3, a4);
    if ((v21 & 1) != 0)
    {
      v22 = *(_QWORD *)(v19 + 56) + 16 * v20;
      v24 = *(id *)v22;
      v23 = *(_QWORD *)(v22 + 8);
      v25 = *(id *)v22;
      swift_retain_n(v23, 2);
      swift_bridgeObjectRelease(a4);
      sub_1003ADA48(v24, v23);
      goto LABEL_8;
    }
    swift_bridgeObjectRelease(a4);
  }
  v23 = 0;
LABEL_8:
  os_unfair_lock_unlock((os_unfair_lock_t)(v18 + 24));
  swift_release(v18);
  if (v23)
  {
    PassthroughSubject.send(_:)(a5);
    swift_release(v23);
  }
LABEL_10:
  v26 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  return CheckedContinuation.resume(returning:)(v26, v26);
}

uint64_t SeriesListModeManager.setSortOrder(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_1003ABAA8, 0, 0);
}

uint64_t sub_1003ABAA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_1003ABB5C;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000014, 0x80000001007C5360, sub_1003AD3A0, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1003ABB5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10028EF70, 0, 0);
}

void sub_1003ABBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(_QWORD, double), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  char *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[5];
  char *v45;

  v41 = a5;
  v42 = a8;
  v38 = a7;
  v39 = a2;
  v40 = a3;
  v37 = a1;
  v43 = a9;
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v12 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v11);
  v36 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a6(0, v14);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v19 = (char *)&v34 - v18;
  v20 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, a4, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v37, v11);
  v21 = *(unsigned __int8 *)(v16 + 80);
  v22 = (v21 + 40) & ~v21;
  v23 = (v17 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(unsigned __int8 *)(v12 + 80);
  v25 = (v24 + v23 + 8) & ~v24;
  v26 = (char *)swift_allocObject(v38, v25 + v13, v21 | v24 | 7);
  v27 = v39;
  v28 = v40;
  *((_QWORD *)v26 + 2) = v20;
  *((_QWORD *)v26 + 3) = v27;
  *((_QWORD *)v26 + 4) = v28;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v26[v22], v19, v15);
  v29 = v41;
  *(_QWORD *)&v26[v23] = v41;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v26[v25], v36, v35);
  aBlock[4] = v42;
  v45 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = v43;
  v30 = _Block_copy(aBlock);
  v31 = v45;
  v32 = v20;
  swift_bridgeObjectRetain(v28);
  v33 = v29;
  objc_msgSend(v32, "performBlockOnWorkerQueue:", v30, swift_release(v31).n128_f64[0]);
  _Block_release(v30);

}

uint64_t sub_1003ABDD4(char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  NSString v22;
  id v23;
  void (*v24)(char *, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  Class isa;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;

  v57 = a5;
  v58 = a7;
  v53 = a6;
  v56 = a1;
  v10 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SeriesListSortOrder(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  __chkstk_darwin(v16);
  v18 = (char *)&v52 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v52 - v20;
  v54 = a4;
  v55 = a3;
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(a2, "libraryAssetWithAssetID:inManagedObjectContext:", v22, v56);

  if (!v23)
  {
    v56 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    v52 = v14;
    v26 = v53;
    v27 = *(os_unfair_lock_s **)(v53 + OBJC_IVAR____TtC5Books21SeriesListModeManager_sortOrders);
    v28 = (uint64_t)&v27[4];
    v29 = v27 + 6;
    os_unfair_lock_lock(v27 + 6);
    v30 = v54;
    v31 = v57;
    sub_1003AC244(v28, v55, v54, v57, &qword_1009DF290, (uint64_t (*)(_QWORD, double))&type metadata accessor for SeriesListSortOrder, (uint64_t (*)(char *, uint64_t, uint64_t, __n128))sub_1004EF7B8);
    os_unfair_lock_unlock(v29);
    v32 = *(_QWORD *)(v26 + OBJC_IVAR____TtC5Books21SeriesListModeManager_sortPublishers);
    swift_retain(v32);
    os_unfair_lock_lock((os_unfair_lock_t)(v32 + 24));
    v33 = *(_QWORD *)(v32 + 16);
    if (*(_QWORD *)(v33 + 16))
    {
      swift_bridgeObjectRetain(v30);
      v34 = sub_10004CE80(v55, v30);
      if ((v35 & 1) != 0)
      {
        v36 = *(_QWORD *)(v33 + 56) + 16 * v34;
        v37 = *(id *)v36;
        v38 = *(_QWORD *)(v36 + 8);
        v39 = *(id *)v36;
        swift_retain_n(v38, 2);
        swift_bridgeObjectRelease(v30);
        sub_1003ADA48(v37, v38);
LABEL_12:
        os_unfair_lock_unlock((os_unfair_lock_t)(v32 + 24));
        swift_release(v32);
        v40 = type metadata accessor for TaskPriority(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v12, 1, 1, v40);
        v41 = v52;
        v42 = v56;
        (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v56, v31, v13);
        type metadata accessor for MainActor(0);
        swift_retain(v38);
        v44 = static MainActor.shared.getter(v43);
        v45 = *(unsigned __int8 *)(v41 + 80);
        v46 = (v45 + 40) & ~v45;
        v47 = (char *)swift_allocObject(&unk_100901A40, v46 + v15, v45 | 7);
        *((_QWORD *)v47 + 2) = v44;
        *((_QWORD *)v47 + 3) = &protocol witness table for MainActor;
        *((_QWORD *)v47 + 4) = v38;
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&v47[v46], v42, v13);
        v48 = sub_10030C178((uint64_t)v12, (uint64_t)&unk_1009DF328, (uint64_t)v47);
        swift_release(v48);
        swift_release(v38);
LABEL_16:
        v50 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
        return CheckedContinuation.resume(returning:)(v50, v50);
      }
      swift_bridgeObjectRelease(v30);
    }
    v38 = 0;
    goto LABEL_12;
  }
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v24(v21, v57, v13);
  v24(v18, (uint64_t)v21, v13);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v18, v13);
  if (v25 == enum case for SeriesListSortOrder.ascending(_:)
    || v25 == enum case for SeriesListSortOrder.descending(_:)
    || v25 == enum case for SeriesListSortOrder.releaseDate(_:)
    || v25 == enum case for SeriesListSortOrder.popular(_:)
    || v25 == enum case for SeriesListSortOrder.title(_:))
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    isa = Int._bridgeToObjectiveC()().super.super.isa;
    objc_msgSend(v23, "setSeriesSortMode:", isa);

    goto LABEL_16;
  }
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000001BLL, 0x80000001007C5440, "Books/SeriesListModeManager.swift", 33, 2, 251, 0);
  __break(1u);
  return result;
}

uint64_t BKLibraryAsset.SeriesSortMode.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t sub_1003AC244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD, double), uint64_t (*a7)(char *, uint64_t, uint64_t, __n128))
{
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;

  v12 = sub_10004CFD4(a5);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a6(0, v13);
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a4, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  v18 = swift_bridgeObjectRetain(a3);
  return a7(v15, a2, a3, v18);
}

uint64_t sub_1003AC32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[3] = a4;
  v5[4] = a5;
  v5[2] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003AC39C, v7, v8);
}

uint64_t sub_1003AC39C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  if (v1)
    PassthroughSubject.send(_:)(*(_QWORD *)(v0 + 32));
  **(_BYTE **)(v0 + 16) = v1 == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1003AC3EC()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC5Books21SeriesListModeManager_previousSortOrders);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1003AD768(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1003AC450(uint64_t a1@<X8>)
{
  _QWORD *v1;
  os_unfair_lock_s *v3;
  uint64_t *v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)(*v1 + OBJC_IVAR____TtC5Books21SeriesListModeManager_previousSortOrders);
  v4 = (uint64_t *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_1003AD748(v4, a1);
  os_unfair_lock_unlock(v5);
}

void sub_1003AC4B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  SeriesListModeManager.filterOptionSync(from:)(a1, a2, a3);
}

void sub_1003AC4CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  SeriesListModeManager.sortOrderSync(from:)(a1, a2, a3);
}

uint64_t sub_1003AC4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1003AC508(a1, a2, a3, a4, a5, &OBJC_IVAR____TtC5Books21SeriesListModeManager_filterPublishers, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_1003AD72C);
}

uint64_t sub_1003AC4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1003AC508(a1, a2, a3, a4, a5, &OBJC_IVAR____TtC5Books21SeriesListModeManager_sortPublishers, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_1003AD710);
}

uint64_t sub_1003AC508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, void (*a7)(uint64_t *__return_ptr, os_unfair_lock_s *))
{
  _QWORD *v7;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v12;

  v9 = *(os_unfair_lock_s **)(*v7 + *a6);
  swift_retain(v9);
  os_unfair_lock_lock(v9 + 6);
  a7(&v12, v9 + 4);
  os_unfair_lock_unlock(v9 + 6);
  v10 = v12;
  swift_release(v9);
  return v10;
}

uint64_t sub_1003AC594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a1;
  v4[3] = a2;
  v5 = *v3;
  v4[4] = a3;
  v4[5] = v5;
  return swift_task_switch(sub_1003AC5B4, 0, 0);
}

uint64_t sub_1003AC5B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v4;
  v5 = sub_10004CFD4(&qword_1009DF280);
  *v4 = v0;
  v4[1] = sub_1003A9BF4;
  return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD000000000000013, 0x80000001007C5300, sub_1003ADD24, v2, v5);
}

uint64_t sub_1003AC660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a1;
  v4[3] = a2;
  v5 = *v3;
  v4[4] = a3;
  v4[5] = v5;
  return swift_task_switch(sub_1003AC680, 0, 0);
}

uint64_t sub_1003AC680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v4;
  v5 = sub_10004CFD4(&qword_1009DF290);
  *v4 = v0;
  v4[1] = sub_1003ADD1C;
  return withCheckedContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD000000000000010, 0x80000001007C5320, sub_1003ADD20, v2, v5);
}

uint64_t sub_1003AC72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a1;
  v4[3] = a2;
  v5 = *v3;
  v4[4] = a3;
  v4[5] = v5;
  return swift_task_switch(sub_1003AC74C, 0, 0);
}

uint64_t sub_1003AC74C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_1003AB850;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000017, 0x80000001007C5340, sub_1003ADD30, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1003AC800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a1;
  v4[3] = a2;
  v5 = *v3;
  v4[4] = a3;
  v4[5] = v5;
  return swift_task_switch(sub_1003AC820, 0, 0);
}

uint64_t sub_1003AC820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v1 = *(_QWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_1003ABB5C;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000014, 0x80000001007C5360, sub_1003ADD2C, v3, (char *)&type metadata for () + 8);
}

unint64_t sub_1003AC8D4@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _sSo14BKLibraryAssetC5BooksE14SeriesSortModeO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1003AC8FC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1003AC908(uint64_t isStackAllocationSafe, void (*a2)(uint64_t, uint64_t, uint64_t, _QWORD *, __n128))
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t v9;
  size_t v10;
  __n128 v11;
  uint64_t v12;
  void *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v17;

  v4 = v2;
  v5 = (_QWORD *)isStackAllocationSafe;
  v6 = *(_BYTE *)(isStackAllocationSafe + 32);
  v7 = v6 & 0x3F;
  v8 = (1 << v6) + 63;
  v9 = v8 >> 6;
  v10 = 8 * (v8 >> 6);
  if (v7 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v8 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v17 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    sub_1003ACA6C((uint64_t)&v17 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, v5, a2, v11);
    if (v2)
      swift_willThrow(v12);
    else
      return v12;
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v10, -1);
    bzero(v13, v10);
    sub_1003ACA6C((uint64_t)v13, v9, v5, a2, v14);
    v4 = v15;
    swift_slowDealloc(v13, -1, -1);
  }
  return v4;
}

void sub_1003ACA6C(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(uint64_t, uint64_t, uint64_t, _QWORD *, __n128), __n128 a5)
{
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v30;
  _QWORD *v31;
  int64_t v32;

  v30 = 0;
  v5 = 0;
  v8 = a3[8];
  v6 = a3 + 8;
  v7 = v8;
  v9 = 1 << *((_BYTE *)v6 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v7;
  v31 = v6;
  v32 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v13 = v12 | (v5 << 6);
      goto LABEL_5;
    }
    v23 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v23 >= v32)
      goto LABEL_24;
    v24 = v31[v23];
    ++v5;
    if (!v24)
    {
      v5 = v23 + 1;
      if (v23 + 1 >= v32)
        goto LABEL_24;
      v24 = v31[v5];
      if (!v24)
      {
        v5 = v23 + 2;
        if (v23 + 2 >= v32)
          goto LABEL_24;
        v24 = v31[v5];
        if (!v24)
          break;
      }
    }
LABEL_20:
    v11 = (v24 - 1) & v24;
    v13 = __clz(__rbit64(v24)) + (v5 << 6);
LABEL_5:
    v14 = *(_QWORD *)(a3[6] + 16 * v13 + 8);
    v15 = a3[7] + 16 * v13;
    v16 = *(void **)v15;
    v17 = *(_QWORD *)(v15 + 8);
    swift_bridgeObjectRetain(v14);
    v18 = v16;
    v19 = objc_msgSend(v18, "allObjects", swift_retain(v17).n128_f64[0]);
    v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v19, (char *)&type metadata for Swift.AnyObject + 8);

    v21 = sub_10004CFD4(&qword_1009DF358);
    v22 = sub_100030B34(&qword_1009DF360, &qword_1009DF358, (uint64_t)&protocol conformance descriptor for [A]);
    LOBYTE(v19) = Collection.isNotEmpty.getter(v21, v22);
    swift_bridgeObjectRelease(v14);
    swift_release(v17);

    a5 = swift_bridgeObjectRelease(v20);
    if ((v19 & 1) != 0)
    {
      *(_QWORD *)(a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v30++, 1))
      {
        __break(1u);
LABEL_24:
        a4(a1, a2, v30, a3, a5);
        return;
      }
    }
  }
  v25 = v23 + 3;
  if (v25 >= v32)
    goto LABEL_24;
  v24 = v31[v25];
  if (v24)
  {
    v5 = v25;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v5 >= v32)
      goto LABEL_24;
    v24 = v31[v5];
    ++v25;
    if (v24)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1003ACCEC(uint64_t a1)
{
  return sub_1003ACDA4(a1, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, &qword_1009D05D0, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType, (void (*)(char *, char *))sub_10060C2F4);
}

uint64_t sub_1003ACD10(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = Set.init(minimumCapacity:)(v2, &type metadata for UInt64, &protocol witness table for UInt64);
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_10060C008(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1003ACD80(uint64_t a1)
{
  return sub_1003ACDA4(a1, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (unint64_t *)&unk_1009DF310, (uint64_t)&protocol conformance descriptor for PageLocation, (void (*)(char *, char *))sub_10060C7AC);
}

uint64_t sub_1003ACDA4(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;

  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v23 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  v18 = sub_100008DB0(a3, a2, a4);
  result = Set.init(minimumCapacity:)(v17, v10, v18);
  v24 = result;
  if (v17)
  {
    v20 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v21 = *(_QWORD *)(v11 + 72);
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v22(v13, v20, v10);
      a5(v16, v13);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      v20 += v21;
      --v17;
    }
    while (v17);
    return v24;
  }
  return result;
}

void sub_1003ACED0(void *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[4];
  _BYTE v45[32];
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[5];

  v2 = sub_10004CFD4(&qword_1009D3150);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, "updatedObjects", v3);
  if (v6)
  {
    v7 = v6;
    v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, (char *)&type metadata for Any + 8);

    v43 = v8;
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v10 = v43 + 32;
      swift_bridgeObjectRetain(v43);
      v11 = _swiftEmptyArrayStorage;
      do
      {
        sub_10004CD0C(v10, (uint64_t)v48);
        sub_10004CD0C((uint64_t)v48, (uint64_t)v45);
        if ((swift_dynamicCast(&v46, v45, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
        {
          v46 = 0;
          v47 = 0;
        }
        _s5Books15CurrentPageViewVwxx_0(v48);
        v13 = v47;
        if (v47)
        {
          v14 = v46;
          if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
            v11 = sub_100043ED0(0, v11[2] + 1, 1, v11);
          v16 = v11[2];
          v15 = v11[3];
          if (v16 >= v15 >> 1)
            v11 = sub_100043ED0((_QWORD *)(v15 > 1), v16 + 1, 1, v11);
          v11[2] = v16 + 1;
          v12 = &v11[2 * v16];
          v12[4] = v14;
          v12[5] = v13;
        }
        v10 += 32;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease_n(v43, 2);
      v17 = v11[2];
      if (!v17)
        goto LABEL_26;
    }
    else
    {
      swift_bridgeObjectRelease(v43);
      v11 = _swiftEmptyArrayStorage;
      v17 = _swiftEmptyArrayStorage[2];
      if (!v17)
      {
LABEL_26:
        swift_bridgeObjectRelease(v11);
        return;
      }
    }
    v43 = type metadata accessor for MainActor(0);
    v18 = type metadata accessor for TaskPriority(0);
    v42 = *(_QWORD *)(v18 - 8);
    v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
    v19 = v11 + 5;
    v40 = (char *)&type metadata for () + 8;
    while (1)
    {
      v23 = *(v19 - 1);
      v22 = *v19;
      v41(v5, 1, 1, v18);
      v24 = swift_allocObject(&unk_100901B58, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16);
      swift_bridgeObjectRetain(v22);
      swift_retain(v24);
      v26 = static MainActor.shared.getter(v25);
      v27 = (_QWORD *)swift_allocObject(&unk_100901B80, 56, 7);
      v27[2] = v26;
      v27[3] = &protocol witness table for MainActor;
      v27[4] = v24;
      v27[5] = v23;
      v27[6] = v22;
      v28 = swift_release(v24);
      v29 = v42;
      v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v42 + 48))(v5, 1, v18, v28);
      if ((_DWORD)v30 == 1)
      {
        sub_100010960((uint64_t)v5, &qword_1009D3150);
        v31 = 0;
        v32 = v27[2];
        if (!v32)
          goto LABEL_23;
      }
      else
      {
        v38 = TaskPriority.rawValue.getter(v30);
        (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v18);
        v31 = v38;
        v32 = v27[2];
        if (!v32)
        {
LABEL_23:
          v35 = 0;
          v37 = 0;
          goto LABEL_24;
        }
      }
      v33 = v27[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v32);
      v35 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v33);
      v37 = v36;
      swift_unknownObjectRelease(v32);
LABEL_24:
      v39 = swift_allocObject(&unk_100901BA8, 32, 7);
      *(_QWORD *)(v39 + 16) = &unk_1009DF3B8;
      *(_QWORD *)(v39 + 24) = v27;
      if (v37 | v35)
      {
        v44[0] = 0;
        v44[1] = 0;
        v20 = v44;
        v44[2] = v35;
        v44[3] = v37;
      }
      else
      {
        v20 = 0;
      }
      v19 += 2;
      v21 = swift_task_create(v31 | 0x1C00, v20, v40, &unk_1009DF3C0, v39);
      swift_release(v21);
      if (!--v17)
        goto LABEL_26;
    }
  }
  __break(1u);
}

void sub_1003AD28C(uint64_t a1)
{
  uint64_t v1;

  sub_1003AB0A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), &qword_1009DF3A0, (uint64_t)&unk_100901B08, (uint64_t)sub_1003ADB34, (uint64_t)&unk_100901B20);
}

void sub_1003AD2C8(uint64_t a1)
{
  uint64_t v1;

  sub_1003AB0A4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), &qword_1009DF390, (uint64_t)&unk_100901AB8, (uint64_t)sub_1003ADA80, (uint64_t)&unk_100901AD0);
}

uint64_t sub_1003AD308()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003AD31C(uint64_t a1)
{
  uint64_t v1;

  sub_1003AAC5C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1003AD338()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

unint64_t _sSo14BKLibraryAssetC5BooksE14SeriesSortModeO8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

void sub_1003AD358(uint64_t a1)
{
  uint64_t v1;

  sub_1003ABBB8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t (*)(_QWORD, double))&type metadata accessor for SeriesListFilterOption, (uint64_t)&unk_100901A68, (uint64_t)sub_1003AD9A0, (uint64_t)&unk_100901A80);
}

void sub_1003AD3A0(uint64_t a1)
{
  uint64_t v1;

  sub_1003ABBB8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40), (uint64_t (*)(_QWORD, double))&type metadata accessor for SeriesListSortOrder, (uint64_t)&unk_1009019F0, (uint64_t)sub_1003AD790, (uint64_t)&unk_100901A08);
}

unint64_t sub_1003AD3EC()
{
  unint64_t result;

  result = qword_1009DF2C8;
  if (!qword_1009DF2C8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for BKLibraryAsset.SeriesSortMode, &type metadata for BKLibraryAsset.SeriesSortMode);
    atomic_store(result, (unint64_t *)&qword_1009DF2C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SearchBarEvent.Reason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14SeriesSortModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1003AD50C + 4 * byte_10071F4C5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1003AD540 + 4 * byte_10071F4C0[v4]))();
}

uint64_t sub_1003AD540(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003AD548(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003AD550);
  return result;
}

uint64_t sub_1003AD55C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003AD564);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1003AD568(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003AD570(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BKLibraryAsset.SeriesSortMode()
{
  return &type metadata for BKLibraryAsset.SeriesSortMode;
}

void sub_1003AD58C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSString v17;
  id v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  Class isa;
  id v25;
  unint64_t v26;

  sub_100033F98(a4);
  v11 = v10;
  swift_bridgeObjectRelease(a4);
  v12 = sub_10003455C(v11);
  swift_bridgeObjectRelease(v11);
  v26 = sub_100033F5C();
  v13 = a1;
  v14 = sub_10004CFD4(&qword_1009DF300);
  String.init<A>(describing:)(&v26, v14);
  v16 = v15;
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v16);
  v18 = a2;
  v19 = swift_retain(a3);
  dispatch thunk of AnyKeyPath._kvcKeyPathString.getter(v19);
  v21 = v20;
  swift_release(a3);
  if (v21)
  {
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
  }
  else
  {
    v22 = 0;
  }
  v23 = objc_allocWithZone((Class)BCManagedObjectIDMonitor);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v25 = objc_msgSend(v23, "initWithContext:coordinator:entityName:predicate:mapProperty:propertiesOfInterest:observer:", 0, v13, v17, v18, v22, isa, swift_bridgeObjectRelease(v12).n128_f64[0], a5);

  if (!v25)
    __break(1u);
}

uint64_t sub_1003AD710@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1003AA110(a1, v2[2], v2[3], v2[5], a2);
}

uint64_t sub_1003AD72C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1003A9D84(a1, v2[2], v2[3], v2[5], a2);
}

void sub_1003AD748(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1003AB678(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListSortOrder, a2);
}

double sub_1003AD768(uint64_t a1)
{
  uint64_t *v1;

  return sub_1003AA45C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003AD784()
{
  return sub_1003AD8C0((uint64_t (*)(_QWORD))&type metadata accessor for SeriesListSortOrder);
}

uint64_t sub_1003AD790(uint64_t a1)
{
  return sub_1003AD9B4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListSortOrder, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD, char *))sub_1003ABDD4);
}

uint64_t sub_1003AD7A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SeriesListSortOrder(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003AD820(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SeriesListSortOrder(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1009DF324);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000AE34;
  return sub_1003AC32C(a1, v5, v6, v7, v8);
}

uint64_t sub_1003AD8B4()
{
  return sub_1003AD8C0((uint64_t (*)(_QWORD))&type metadata accessor for SeriesListFilterOption);
}

uint64_t sub_1003AD8C0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 40) & ~v4;
  v6 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9 + 8) & ~v9;
  v11 = v10 + *(_QWORD *)(v8 + 64);
  v12 = v4 | v9 | 7;

  v13 = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1 + v5, v2, v13);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1 + v10, v7);
  return swift_deallocObject(v1, v11, v12);
}

uint64_t sub_1003AD9A0(uint64_t a1)
{
  return sub_1003AD9B4(a1, (uint64_t (*)(_QWORD))&type metadata accessor for SeriesListFilterOption, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD, char *))sub_1003AB8AC);
}

uint64_t sub_1003AD9B4(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD, char *))
{
  char *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a2(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D6DC0) - 8) + 80);
  return a3(a1, *((_QWORD *)v3 + 2), *((_QWORD *)v3 + 3), *((_QWORD *)v3 + 4), &v3[v6], *(_QWORD *)&v3[v7], &v3[(v7 + v8 + 8) & ~v8]);
}

void *sub_1003ADA48(void *result, uint64_t a2)
{
  if (result)
  {

    return (void *)swift_release(a2);
  }
  return result;
}

uint64_t sub_1003ADA74()
{
  return sub_1003ADAA0(&qword_1009DF390);
}

uint64_t sub_1003ADA80(uint64_t a1)
{
  return sub_1003ADB48(a1, &qword_1009DF390, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD))sub_1003AB234);
}

uint64_t sub_1003ADA94()
{
  return sub_1003ADAA0(&qword_1009DF3A0);
}

uint64_t sub_1003ADAA0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;

  v2 = sub_10004CFD4(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 40) & ~v4;
  v6 = v4 | 7;
  v7 = (*(_QWORD *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;

  v8 = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 32));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1 + v5, v2, v8);

  return swift_deallocObject(v1, v7 + 8, v6);
}

uint64_t sub_1003ADB34(uint64_t a1)
{
  return sub_1003ADB48(a1, &qword_1009DF3A0, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD))sub_1003AAD28);
}

uint64_t sub_1003ADB48(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, _QWORD, char *, _QWORD))
{
  char *v3;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_10004CFD4(a2) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return a3(a1, *((_QWORD *)v3 + 2), *((_QWORD *)v3 + 3), *((_QWORD *)v3 + 4), &v3[v6], *(_QWORD *)&v3[(*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8]);
}

uint64_t sub_1003ADBB0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003ADBD4()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003ADC08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009DF3B4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_1003A946C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1003ADC88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003ADCAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009EA9A4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AE34;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1009EA9A0 + dword_1009EA9A0))(a1, v4);
}

id sub_1003ADDDC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PageFramedContentSnapshotView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PageFramedContentSnapshotView()
{
  return objc_opt_self(_TtC5Books29PageFramedContentSnapshotView);
}

uint64_t type metadata accessor for BundleFinder()
{
  return objc_opt_self(_TtC5BooksP33_CC73664F00B6301D02555470696FBD9812BundleFinder);
}

uint64_t sub_1003ADE5C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t result;

  v0 = type metadata accessor for AudiobookNowPlayingSharedStateProvider();
  v1 = swift_allocObject(v0, 24, 7);
  v2 = objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");
  v3 = sub_10004CFD4(&qword_1009DF4E0);
  result = swift_allocObject(v3, 28, 7);
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v2;
  *(_QWORD *)(v1 + 16) = result;
  qword_1009DF498 = v1;
  return result;
}

uint64_t static AudiobookNowPlayingModuleFactory.instantiate()()
{
  return sub_1003B0D10(0x657263736C6C7566, (void *)0xEA00000000006E65, (uint64_t (*)(_QWORD))type metadata accessor for AudiobookNowPlayingFullscreenTouchViewController, (uint64_t (*)(id, uint64_t, uint64_t, id, uint64_t, id))sub_1003B05BC);
}

id AchievementsNotificationController.init()(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)swift_getObjectType(v2, a2);
  return objc_msgSendSuper2(&v4, "init");
}

uint64_t sub_1003AE01C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071F898);
  v5 = swift_getKeyPath(&unk_10071F8C0);
  static Published.subscript.getter(v8, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

uint64_t sub_1003AE098(uint64_t *a1, void **a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD v8[2];

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071F898);
  v6 = swift_getKeyPath(&unk_10071F8C0);
  v8[0] = v3;
  v8[1] = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(v8, v4, KeyPath, v6);
}

uint64_t sub_1003AE114@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071FAD8);
  v5 = swift_getKeyPath(&unk_10071FB00);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1003AE190(char *a1, void **a2)
{
  char v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071FAD8);
  v5 = swift_getKeyPath(&unk_10071FB00);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1003AE1FC(void *a1, uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  int v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _QWORD *v39;
  id v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD *v48;
  id v49;
  uint64_t v50;
  id v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  _QWORD *v57;
  id v58;
  id v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  _QWORD *v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  _QWORD *v85;
  id v86;
  id v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  id v98;
  _BYTE v100[24];
  _QWORD v101[3];
  _BYTE v102[24];
  _QWORD v103[3];
  _QWORD v104[3];
  _QWORD v105[3];
  _QWORD v106[3];
  _BYTE v107[24];
  _QWORD v108[3];
  uint64_t v109;
  _UNKNOWN **v110;

  v109 = type metadata accessor for AudiobookNowPlayingInteractor(0);
  v110 = &off_1008F8D28;
  v108[0] = a1;
  v4 = *(void **)(a2 + 16);
  v5 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v5, v107, 0, 0);
  v6 = *(void **)(*sub_10003F198(v5, v5[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player);
  v7 = a1;
  v8 = objc_msgSend(v6, "skipController");
  objc_msgSend(v8, "backwardSkipTime");
  v10 = v9;
  swift_unknownObjectRelease(v8);
  KeyPath = swift_getKeyPath("xz.");
  v12 = swift_getKeyPath(&unk_10071F7A0);
  v106[0] = v10;
  v13 = v4;
  static Published.subscript.setter(v106, v13, KeyPath, v12);
  v14 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v14, v106, 0, 0);
  v15 = objc_msgSend(*(id *)(*sub_10003F198(v14, v14[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "skipController");
  objc_msgSend(v15, "forwardSkipTime");
  v17 = v16;
  swift_unknownObjectRelease(v15);
  v18 = swift_getKeyPath(&unk_10071F7C0);
  v19 = swift_getKeyPath(&unk_10071F7E8);
  v105[0] = v17;
  v20 = v13;
  static Published.subscript.setter(v105, v20, v18, v19);
  v21 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v21, v105, 32, 0);
  objc_msgSend(*(id *)(*sub_10003F198(v21, v21[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "volume");
  LODWORD(v17) = v22;
  swift_endAccess(v105);
  v23 = swift_getKeyPath(&unk_10071F808);
  v24 = swift_getKeyPath(&unk_10071F830);
  LODWORD(v105[0]) = v17;
  v25 = v20;
  static Published.subscript.setter(v105, v25, v23, v24);
  v26 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v26, v105, 32, 0);
  objc_msgSend(*(id *)(*sub_10003F198(v26, v26[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "playbackRate");
  LODWORD(v17) = v27;
  sub_10003F198(v26, v26[3]);
  swift_endAccess(v105);
  v28 = sub_1003F6888();
  LODWORD(v17) = sub_1002A25F4((uint64_t)v28, *(float *)&v17);
  swift_bridgeObjectRelease(v28);
  v29 = swift_getKeyPath(&unk_10071F850);
  v30 = swift_getKeyPath(&unk_10071F878);
  LODWORD(v105[0]) = v17;
  v31 = v25;
  static Published.subscript.setter(v105, v31, v29, v30);
  sub_10003F198(v108, v109);
  v32 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v33 = sub_1002A2868(v32);
  v35 = v34;

  v36 = swift_getKeyPath(&unk_10071F898);
  v37 = swift_getKeyPath(&unk_10071F8C0);
  v105[0] = v33;
  v105[1] = v35;
  v38 = v31;
  static Published.subscript.setter(v105, v38, v36, v37);
  v39 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v39, v105, 0, 0);
  v40 = objc_msgSend(*(id *)(*sub_10003F198(v39, v39[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
  v41 = (uint64_t)v40;
  if (v40)
  {
    v42 = objc_msgSend(v40, "title");
    swift_unknownObjectRelease(v41);
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v44 = v43;

  }
  else
  {
    v44 = 0xE000000000000000;
  }
  v45 = swift_getKeyPath(&unk_10071F8E0);
  v46 = swift_getKeyPath(&unk_10071F908);
  v104[0] = v41;
  v104[1] = v44;
  v47 = v38;
  static Published.subscript.setter(v104, v47, v45, v46);
  v48 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v48, v104, 0, 0);
  v49 = objc_msgSend(*(id *)(*sub_10003F198(v48, v48[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
  v50 = (uint64_t)v49;
  if (v49)
  {
    v51 = objc_msgSend(v49, "author");
    swift_unknownObjectRelease(v50);
    v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
    v53 = v52;

  }
  else
  {
    v53 = 0xE000000000000000;
  }
  v54 = swift_getKeyPath(&unk_10071F928);
  v55 = swift_getKeyPath(&unk_10071F950);
  v103[0] = v50;
  v103[1] = v53;
  v56 = v47;
  static Published.subscript.setter(v103, v56, v54, v55);
  v57 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v57, v103, 0, 0);
  v58 = objc_msgSend(*(id *)(*sub_10003F198(v57, v57[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
  if (v58)
  {
    v59 = v58;
    v60 = objc_msgSend(v58, "isAudiobookPreview");
    swift_unknownObjectRelease(v59);
  }
  else
  {
    v60 = 0;
  }
  v61 = swift_getKeyPath(&unk_10071F970);
  v62 = swift_getKeyPath(&unk_10071F998);
  v102[0] = v60;
  v63 = v56;
  static Published.subscript.setter(v102, v63, v61, v62);
  v64 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v64, v102, 0, 0);
  v65 = objc_msgSend(*(id *)(*sub_10003F198(v64, v64[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
  v66 = (uint64_t)v65;
  if (v65)
  {
    v67 = objc_msgSend(v65, "assetID");
    swift_unknownObjectRelease(v66);
    v66 = static String._unconditionallyBridgeFromObjectiveC(_:)(v67);
    v69 = v68;

  }
  else
  {
    v69 = 0;
  }
  v70 = swift_getKeyPath(&unk_10071F9B8);
  v71 = swift_getKeyPath(&unk_10071F9E0);
  v101[0] = v66;
  v101[1] = v69;
  v72 = v63;
  static Published.subscript.setter(v101, v72, v70, v71);
  v73 = *(void **)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork);
  if (v73)
  {
    v74 = swift_getKeyPath(&unk_10071FB20);
    v75 = swift_getKeyPath(&unk_10071FB48);
    v101[0] = v73;
    v76 = v73;
    static Published.subscript.setter(v101, v72, v74, v75);
  }
  sub_10003F198(v108, v109);
  v77 = sub_1002A2A98();
  v78 = swift_getKeyPath(&unk_10071FA00);
  v79 = swift_getKeyPath(&unk_10071FA28);
  v101[0] = v77;
  v80 = v72;
  static Published.subscript.setter(v101, v80, v78, v79);
  sub_10003F198(v108, v109);
  v81 = sub_1002A2CD8();
  v82 = swift_getKeyPath(&unk_10071FA48);
  v83 = swift_getKeyPath(&unk_10071FA70);
  v101[0] = v81;
  v84 = v80;
  static Published.subscript.setter(v101, v84, v82, v83);
  v85 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v85, v101, 0, 0);
  v86 = objc_msgSend(*(id *)(*sub_10003F198(v85, v85[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "currentAudiobook");
  if (v86)
  {
    v87 = v86;
    v88 = objc_msgSend(v86, "isSG");
    swift_unknownObjectRelease(v87);
  }
  else
  {
    v88 = 0;
  }
  v89 = swift_getKeyPath(&unk_10071FA90);
  v90 = swift_getKeyPath(&unk_10071FAB8);
  v100[0] = v88;
  v91 = v84;
  static Published.subscript.setter(v100, v91, v89, v90);
  v92 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v92, v100, 32, 0);
  sub_10003F198(v92, v92[3]);
  LOBYTE(v90) = sub_1003F64BC();
  swift_endAccess(v100);
  swift_beginAccess(v92, v100, 33, 0);
  v93 = v92[3];
  v94 = v92[4];
  sub_100063750((uint64_t)v92, v93);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v94 + 72))(0, v93, v94);
  swift_endAccess(v100);
  v95 = swift_getKeyPath(&unk_10071FAD8);
  v96 = swift_getKeyPath(&unk_10071FB00);
  v100[0] = v90 & 1;
  static Published.subscript.setter(v100, v91, v95, v96);
  v97 = (_QWORD *)(*sub_10003F198(v108, v109) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v97, v100, 0, 0);
  v98 = objc_msgSend(*(id *)(*sub_10003F198(v97, v97[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "state");
  sub_1004CA178((uint64_t)v98);
  return _s5Books15CurrentPageViewVwxx_0(v108);
}

uint64_t sub_1003AEC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  void **v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v26[5];
  _QWORD v27[3];
  uint64_t v28;
  _UNKNOWN **v29;

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for AudiobookNowPlayingInteractor(0);
  v29 = &off_1008F8D28;
  v27[0] = a1;
  v26[3] = type metadata accessor for AudiobookNowPlayingRouter();
  v26[4] = &off_1009134F0;
  v26[0] = a2;
  *(_WORD *)(a3 + 112) = 0;
  sub_10002E418((uint64_t)v27, a3 + 24);
  sub_10002E418((uint64_t)v26, a3 + 64);
  *(_QWORD *)(a3 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AudiobookNowPlayingViewModel(0)), "init");
  *(_QWORD *)(a3 + 104) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AudiobookNowPlayingPresenterAssetStatus()), "init");
  v24 = 0;
  v25 = 0xE000000000000000;
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease(v25);
  v22 = 0xD00000000000001DLL;
  v23 = 0x80000001007C5570;
  v10 = (_QWORD *)(*sub_10003F198(v27, v28) + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
  swift_beginAccess(v10, &v24, 0, 0);
  v11 = (uint64_t *)(*sub_10003F198(v10, v10[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sourceLabel);
  v12 = *v11;
  v13 = (void *)v11[1];
  swift_bridgeObjectRetain(v13);
  v14._countAndFlagsBits = v12;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v13);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v22, v23);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a3 + OBJC_IVAR____TtC5Books28AudiobookNowPlayingPresenter_logger, v9, v6);
  v15 = (void **)sub_10003F198(v27, v28);
  sub_1003AE1FC(*v15, a3);
  swift_beginAccess(a3 + 24, &v22, 33, 0);
  v16 = *(_QWORD *)(a3 + 48);
  v17 = *(_QWORD *)(a3 + 56);
  sub_100063750(a3 + 24, v16);
  v18 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v17 + 16);
  v19 = swift_retain(a3);
  v18(v19, &off_10090B408, v16, v17);
  swift_endAccess(&v22);
  v20 = *(_QWORD *)(a3 + 104) + OBJC_IVAR___BKAudiobookPresenterAssetStatus_delegate;
  *(_QWORD *)(v20 + 8) = &off_10090B3F8;
  swift_unknownObjectWeakAssign(v20, a3);
  _s5Books15CurrentPageViewVwxx_0(v26);
  _s5Books15CurrentPageViewVwxx_0(v27);
  return a3;
}

uint64_t sub_1003AEEC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;
  _UNKNOWN **v19;
  _QWORD v20[3];
  uint64_t v21;
  _UNKNOWN **v22;

  v4 = *a2;
  v21 = type metadata accessor for AudiobookNowPlayingInteractor(0);
  v22 = &off_1008F8D28;
  v20[0] = a1;
  v18 = v4;
  v19 = &off_1009134F0;
  v17[0] = a2;
  v5 = type metadata accessor for AudiobookNowPlayingPresenter(0);
  v6 = swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v7 = sub_100063750((uint64_t)v20, v21);
  __chkstk_darwin(v7);
  v9 = (_QWORD *)((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  v11 = sub_100063750((uint64_t)v17, v18);
  __chkstk_darwin(v11);
  v13 = (_QWORD *)((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  v15 = sub_1003AEC28(*v9, *v13, v6);
  _s5Books15CurrentPageViewVwxx_0(v17);
  _s5Books15CurrentPageViewVwxx_0(v20);
  return v15;
}

char *sub_1003AEFFC(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  _BYTE *v29;
  char *v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  char *v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  void *v47;
  Swift::String v48;
  char *v49;
  void *v50;
  unsigned __int8 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, _UNKNOWN **, uint64_t, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  char *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  objc_class *ObjectType;
  id v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  unint64_t v106;
  uint64_t v107;
  objc_super v108;
  _QWORD v109[3];
  uint64_t v110;
  _UNKNOWN **v111;

  v104 = a3;
  v95 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v6);
  v99 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v96 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v98 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10004CFD4(&qword_1009DF4D0);
  v97 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v100 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = (void (*)(char *, uint64_t, uint64_t, uint64_t))type metadata accessor for Logger(0);
  v92 = *((_QWORD *)v93 - 1);
  __chkstk_darwin(v93);
  v91 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v88 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = type metadata accessor for AudiobookNowPlayingDataManager(0);
  v111 = &off_100903B88;
  v109[0] = a1;
  v21 = &a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_delegate];
  *((_QWORD *)v21 + 1) = 0;
  swift_unknownObjectWeakInit(v21, 0);
  v22 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_externalDelegates;
  v23 = type metadata accessor for AudiobookPlayerExternalDelegates();
  v24 = swift_allocObject(v23, 32, 7);
  swift_unknownObjectWeakInit(v24 + 16, 0);
  swift_unknownObjectWeakInit(v24 + 24, 0);
  *(_QWORD *)&a4[v22] = v24;
  swift_unknownObjectWeakInit(&a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_currentChapter], 0);
  v89 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_storeManager;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_storeManager] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transferLockController] = 0;
  a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_beginPlaybackInBackground] = 1;
  a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor__activeMode] = 1;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_cachedArtwork] = 0;
  a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_finishedOpening] = 0;
  a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_allowAutoplay] = 0;
  a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_wantsPlayAfterOpen] = 0;
  v25 = &a4[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_lastUserProgressChangeTimestamp];
  v26 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  v27 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_routeDetector;
  v28 = objc_allocWithZone((Class)AVRouteDetector);
  v29 = a4;
  *(_QWORD *)&a4[v27] = objc_msgSend(v28, "init");
  v90 = v27;
  v88 = v11;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v30 = v13;
    v31 = (void *)sub_1001DFDDC((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v30 = v13;
    v31 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_subscribers] = v31;
  v32 = &v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_buyButtonPresenter];
  *((_QWORD *)v32 + 4) = 0;
  *(_OWORD *)v32 = 0u;
  *((_OWORD *)v32 + 1) = 0u;
  *(_QWORD *)&v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_downloadState] = 0;
  *(_WORD *)&v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_assetState] = 0;
  v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_hasShownNetworkError] = 0;
  v33 = OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_networkMonitor;
  v103 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v34 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v17);
  static DispatchQoS.unspecified.getter(v34);
  v105 = _swiftEmptyArrayStorage;
  v35 = sub_100008DB0((unint64_t *)&unk_1009E5380, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v36 = sub_10004CFD4((uint64_t *)&unk_1009CEC40);
  v37 = sub_100030B34((unint64_t *)&qword_1009E5390, (uint64_t *)&unk_1009CEC40, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v105, v36, v37, v88, v35);
  v38 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000031, 0x80000001007C5590, v16, v30, v20, 0);
  v39 = objc_msgSend(objc_allocWithZone((Class)BUNetworkMonitor), "initWithQueue:", v38);

  *(_QWORD *)&v29[v33] = v39;
  v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_requestingCloseMinified] = 0;
  swift_unknownObjectWeakInit(&v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_serviceDelegate], 0);
  v40 = &v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_initialPositionOnOpen];
  *(_QWORD *)v40 = 0;
  v40[8] = 1;
  *(_QWORD *)&v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor____lazy_storage___playbackRates] = 0;
  v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_transitionState] = 2;
  sub_10002E418((uint64_t)v109, (uint64_t)&v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager]);
  v41 = &v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler];
  v42 = v95;
  *v41 = v95;
  v41[1] = &off_1008F3C40;
  v43 = *(_QWORD *)&a4[v89];
  v44 = v104;
  *(_QWORD *)&a4[v89] = v104;
  v95 = v42;
  swift_unknownObjectRetain(v44);
  swift_unknownObjectRelease(v43);
  v105 = 0;
  v106 = 0xE000000000000000;
  _StringGuts.grow(_:)(32);
  swift_bridgeObjectRelease(v106);
  v105 = (_QWORD *)0xD00000000000001ELL;
  v106 = 0x80000001007C55D0;
  v45 = (uint64_t *)(*sub_10003F198(v109, v110) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sourceLabel);
  v46 = *v45;
  v47 = (void *)v45[1];
  swift_bridgeObjectRetain(v47);
  v48._countAndFlagsBits = v46;
  v48._object = v47;
  String.append(_:)(v48);
  swift_bridgeObjectRelease(v47);
  v49 = v91;
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v105, v106);
  (*(void (**)(_BYTE *, char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v92 + 32))(&v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_logger], v49, v93);
  v50 = *(void **)&a4[v90];
  objc_msgSend(v50, "setRouteDetectionEnabled:", 1);
  v51 = objc_msgSend(v50, "multipleRoutesDetected");
  v29[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_multipleRoutesDetected] = v51;

  v108.receiver = v29;
  v108.super_class = ObjectType;
  v52 = (char *)objc_msgSendSuper2(&v108, "init");
  v53 = (uint64_t)&v52[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager];
  swift_beginAccess(&v52[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager], &v105, 33, 0);
  v54 = *(_QWORD *)(v53 + 24);
  v55 = *(_QWORD *)(v53 + 32);
  sub_100063750(v53, v54);
  v56 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v55 + 16);
  v57 = v52;
  v56(v52, &off_1008F8C58, v54, v55);
  swift_endAccess(&v105);
  v58 = v57;
  v59 = *(_QWORD *)&v57[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_navigationHandler]
      + OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_delegate;
  *(_QWORD *)(v59 + 8) = &off_1008F8BC8;
  swift_unknownObjectWeakAssign(v59, v57);
  sub_10002E418(v53, (uint64_t)&v105);
  v60 = sub_10003F198(&v105, v107);
  v61 = swift_allocObject(&unk_100901CA0, 24, 7);
  swift_unknownObjectWeakInit(v61 + 16, v57);
  v62 = *v60;
  v63 = swift_allocObject(&unk_100901CC8, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16, v62);
  v64 = swift_allocObject(&unk_100901CF0, 56, 7);
  *(_QWORD *)(v64 + 16) = v63;
  *(_QWORD *)(v64 + 24) = sub_1002A8EF0;
  *(_QWORD *)(v64 + 32) = v61;
  *(int64x2_t *)(v64 + 40) = vdupq_n_s64(0x4098000000000000uLL);
  swift_retain_n(v61, 2);
  swift_retain(v63);
  v65 = v103;
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1002A8F38, v64);
  swift_release_n(v61, 2);
  swift_release(v63);
  swift_release(v64);
  _s5Books15CurrentPageViewVwxx_0(&v105);
  ObjectType = (objc_class *)objc_opt_self(NSNotificationCenter);
  v66 = -[objc_class defaultCenter](ObjectType, "defaultCenter");
  v67 = *(void **)&v57[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_routeDetector];
  v68 = v67;
  v69 = v98;
  NSNotificationCenter.publisher(for:object:)(AVRouteDetectorMultipleRoutesDetectedDidChangeNotification, v67);

  v105 = (_QWORD *)static OS_dispatch_queue.main.getter(v70);
  v71 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v93 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
  v72 = (uint64_t)v99;
  v93(v99, 1, 1, v71);
  v73 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v92 = v73;
  v91 = (char *)sub_1001EDDD0();
  v75 = v100;
  v74 = v101;
  Publisher.receive<A>(on:options:)(&v105, v72, v101, v65, v73, v91);
  sub_1001EDE18(v72);

  v96 = *(_QWORD *)(v96 + 8);
  ((void (*)(char *, uint64_t))v96)(v69, v74);
  v76 = swift_allocObject(&unk_100901D18, 24, 7);
  swift_unknownObjectUnownedInit(v76 + 16);
  v90 = sub_100030B34(&qword_1009DF4D8, &qword_1009DF4D0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v77 = v102;
  v78 = Publisher<>.sink(receiveValue:)(sub_1003B0FDC, v76, v102, v90);
  swift_release(v76);
  v79 = *(void (**)(char *, uint64_t))(v97 + 8);
  v79(v75, v77);
  v80 = &v58[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_subscribers];
  swift_beginAccess(&v58[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_subscribers], &v105, 33, 0);
  AnyCancellable.store(in:)(v80);
  swift_endAccess(&v105);
  swift_release(v78);
  v81 = -[objc_class defaultCenter](ObjectType, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIApplicationDidBecomeActiveNotification, 0);

  v82 = v103;
  v105 = (_QWORD *)static OS_dispatch_queue.main.getter(v83);
  v93((char *)v72, 1, 1, v71);
  Publisher.receive<A>(on:options:)(&v105, v72, v74, v82, v92, v91);
  sub_1001EDE18(v72);

  ((void (*)(char *, uint64_t))v96)(v69, v74);
  v84 = swift_allocObject(&unk_100901CA0, 24, 7);
  swift_unknownObjectWeakInit(v84 + 16, v58);
  v85 = Publisher<>.sink(receiveValue:)(sub_1003B0FE4, v84, v77, v90);
  swift_release(v84);
  v79(v75, v77);
  swift_beginAccess(v80, &v105, 33, 0);
  AnyCancellable.store(in:)(v80);
  swift_endAccess(&v105);
  swift_release(v85);
  v86 = *(id *)&v58[OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_networkMonitor];
  objc_msgSend(v86, "start");

  swift_unknownObjectRelease(v104);
  _s5Books15CurrentPageViewVwxx_0(v109);
  return v58;
}

id sub_1003AFC04(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char *a6)
{
  uint64_t ObjectType;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  ObjectType = swift_getObjectType();
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_cancellables] = &_swiftEmptySetSingleton;
  v13 = &a6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_buyButtonProvider];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_QWORD *)v13 + 4) = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_buyButtonViewController] = 0;
  v14 = &a6[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_contextMenuAppearDate];
  v15 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v28 = ObjectType;
  v16 = a6;
  v17 = sub_10004CFD4(&qword_1009DC018);
  v18 = String.init<A>(describing:)(&v28, v17);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v18, v19);
  *(_QWORD *)&v16[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController____lazy_storage___miniPlayerView] = 0;
  *(_QWORD *)&v16[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchViewController_springLoadedInteraction] = 0;

  type metadata accessor for AudiobookAnalyticsRecorder(0);
  v20 = a1;
  swift_retain(a2);
  swift_retain(a3);
  v21 = a4;
  v22 = (void *)static AudiobookAnalyticsRecorder.shared.getter();
  v23 = sub_1003AFE08(v20, a2, a3, v21, v22, v16);
  sub_100009E04(0, &qword_1009E7710, UITraitCollection_ptr);
  v24 = v23;
  v25 = static UITraitCollection.bc_allAPITraits.getter();
  v26 = UIViewController.registerForTraitChanges(_:action:)(v25, "_traitCollectionDidChangeWithSender:previousTraitCollection:");
  swift_unknownObjectRelease(v26);
  swift_bridgeObjectRelease(v25);

  swift_release(a2);
  swift_release(a3);

  return v24;
}

id sub_1003AFE08(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, char *a6)
{
  char *v12;
  char *v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  objc_super v22;

  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_cancellables] = &_swiftEmptySetSingleton;
  swift_unknownObjectWeakInit(&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_minibarViewControllerDelegate], 0);
  swift_unknownObjectWeakInit(&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_minifiedController], 0);
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_recommendedTracker] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_contentOpenAnimator] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_bookPositionProcessor] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_amsEngagement] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_messageViewControllerProvider] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_cachedPointerInteractionViews] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_viewModel] = a1;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler] = a2;
  v12 = &a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_helperProvider];
  *(_QWORD *)v12 = a3;
  *((_QWORD *)v12 + 1) = &off_100917788;
  v13 = &a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_navigationHandler];
  *(_QWORD *)v13 = a4;
  *((_QWORD *)v13 + 1) = &off_1008F3C40;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_analyticsRecorder] = a5;
  v22.receiver = a6;
  v22.super_class = (Class)type metadata accessor for AudiobookNowPlayingTouchViewController();
  v14 = a1;
  swift_retain(a2);
  swift_retain(a3);
  v15 = a4;
  v16 = a5;
  v17 = objc_msgSendSuper2(&v22, "initWithNibName:bundle:", 0, 0);
  swift_unknownObjectWeakAssign(&v15[OBJC_IVAR____TtC5Books36AudiobookNowPlayingNavigationHandler_viewController], v17);
  v18 = v17;
  dispatch thunk of AudiobookAnalyticsRecorder.trackerHost.setter(v17);
  v19 = sub_100008DB0(&qword_1009DF4C8, (uint64_t (*)(uint64_t))type metadata accessor for AudiobookNowPlayingTouchViewController, (uint64_t)&protocol conformance descriptor for AudiobookNowPlayingTouchViewController);
  v20 = v18;
  dispatch thunk of AudiobookAnalyticsRecorder.dataSource.setter(v17, v19);
  sub_100246E70();

  swift_release(a2);
  swift_release(a3);

  return v20;
}

char *sub_1003B004C(void *a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, void *a8, uint64_t a9, _BYTE *a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  id v25;
  id v26;
  id v27;
  void *object;
  uint64_t countAndFlagsBits;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id *v37;
  os_unfair_lock_s *v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  Swift::String v46;
  uint64_t v47;
  objc_class *ObjectType;
  id v49;
  id v50;
  objc_super v51;
  unint64_t v52;
  unint64_t v53;
  _QWORD v54[3];
  uint64_t v55;
  _UNKNOWN **v56;

  v46._countAndFlagsBits = a7;
  v46._object = a8;
  v47 = a9;
  ObjectType = (objc_class *)swift_getObjectType();
  v16 = type metadata accessor for Logger(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for AudiobookNowPlayingSharedStateProvider();
  v56 = &off_1009059E0;
  v54[0] = a3;
  v20 = &a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate];
  *((_QWORD *)v20 + 1) = 0;
  swift_unknownObjectWeakInit(v20, 0);
  *(_QWORD *)&a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_productProfile] = 0;
  a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_cachedIsPreordered] = 2;
  v21 = &a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_firstLaunchTimestampKey];
  *v21 = 0xD00000000000001ELL;
  v21[1] = 0x80000001007C55F0;
  *(_QWORD *)&a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_scrubberNoGoSeconds] = 0x3FD999999999999ALL;
  *(_QWORD *)&a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_currentMAsset] = 0;
  v22 = &a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_storeID];
  *v22 = 0;
  v22[1] = 0;
  a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_streaming] = 0;
  v23 = &a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_assetService];
  *v23 = a1;
  v23[1] = &off_1009005C0;
  *(_QWORD *)&a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player] = a2;
  sub_10002E418((uint64_t)v54, (uint64_t)&a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sharedStateProvider]);
  *(_QWORD *)&a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_persistenceController] = a4;
  *(_QWORD *)&a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sleepTimer] = a5;
  *(_QWORD *)&a10[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_contextMenuProvider] = a6;
  v52 = 0;
  v53 = 0xE000000000000000;
  v24 = a10;
  v49 = a1;
  v25 = a2;
  v50 = a4;
  v26 = a5;
  v27 = a6;
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease(v53);
  v52 = 0xD00000000000001FLL;
  v53 = 0x80000001007C5610;
  countAndFlagsBits = v46._countAndFlagsBits;
  object = v46._object;
  String.append(_:)(v46);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v52, v53);
  v30 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v31 = v47;
  v30(&v24[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_logger], v19, v16);
  v32 = (uint64_t *)&v24[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_sourceLabel];
  *v32 = countAndFlagsBits;
  v32[1] = (uint64_t)object;
  *(_QWORD *)&v24[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_libraryItemStateProvider] = v31;
  swift_unknownObjectRetain(v31);

  v51.receiver = v24;
  v51.super_class = ObjectType;
  v33 = (char *)objc_msgSendSuper2(&v51, "init");
  v34 = *(_QWORD *)&v33[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_assetService]
      + OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_delegate;
  *(_QWORD *)(v34 + 8) = &off_100903B40;
  swift_unknownObjectWeakAssign(v34, v33);
  v35 = v33;
  objc_msgSend(v25, "addObserver:", v35);
  v36 = *(_QWORD *)(*sub_10003F198(v54, v55) + 16);
  v37 = (id *)(v36 + 16);
  v38 = (os_unfair_lock_s *)(v36 + 24);
  v39 = v35;
  os_unfair_lock_lock(v38);
  sub_10042FDB8(v37, (uint64_t)v39);
  os_unfair_lock_unlock(v38);

  objc_msgSend(v26, "addObserver:", v39);
  v40 = objc_msgSend(v25, "skipController");
  v41 = objc_opt_self(BKAudiobookSkipController);
  v42 = swift_dynamicCastObjCClass(v40, v41);
  if (v42)
  {
    v43 = (void *)v42;
    v44 = v39;
    objc_msgSend(v43, "addObserver:", v44);
    swift_unknownObjectRelease(v40);

  }
  else
  {

    swift_unknownObjectRelease(v40);
  }

  swift_unknownObjectRelease(v31);
  _s5Books15CurrentPageViewVwxx_0(v54);
  return v39;
}

char *sub_1003B0470(uint64_t a1, void *a2, void *a3, char *a4)
{
  objc_class *ObjectType;
  char *v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  char *v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType(a4, a2);
  v9 = &a4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_delegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_audiobook] = 0;
  v10 = &a4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_optionsStoreIDKey];
  *(_QWORD *)v10 = 0x444965726F7473;
  *((_QWORD *)v10 + 1) = 0xE700000000000000;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_helper] = 0;
  v11 = &a4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_helperProvider];
  *(_QWORD *)v11 = a1;
  *((_QWORD *)v11 + 1) = &off_100917788;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_audiobookControls] = a2;
  *(_QWORD *)&a4[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_persistenceController] = a3;
  v18.receiver = a4;
  v18.super_class = ObjectType;
  swift_retain(a1);
  v12 = a2;
  v13 = a3;
  v14 = (char *)objc_msgSendSuper2(&v18, "init");
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC5Books38AudiobookNowPlayingMediaLibraryService_helperProvider];
  *(_QWORD *)(v15 + 24) = &off_1009005B0;
  swift_unknownObjectWeakAssign(v15 + 16, v14);
  v16 = v14;

  swift_release(a1);
  return v16;
}

char *sub_1003B05BC(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, _BYTE *a6)
{
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  objc_class *v18;
  id v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  char *v25;
  uint64_t v26;
  char *v27;

  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___nowPlayingView] = 0;
  v12 = &a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_buyButtonProvider];
  *((_QWORD *)v12 + 4) = 0;
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_buyButtonViewController] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_datePicker] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudAppearanceTime] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudDisappearTimer] = 0;
  v13 = &a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_hudText];
  *v13 = 0;
  v13[1] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_scrubberImpactBehavior] = 0;
  a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_settingPositionViaScrubber] = 0;
  a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_settingPositionViaPlayer] = 0;
  a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_settingVolumeViaSlider] = 0;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_skipCumulativeDelta] = 0;
  a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_wasPlaying] = 0;
  v14 = OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_supportedSkipAmounts;
  *(_QWORD *)&a6[v14] = sub_1001E0070((uint64_t)&off_1008F0A78);
  a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_downloadState] = 3;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_attributionView] = 0;
  v15 = &a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController____lazy_storage___languageSuffix];
  *v15 = 0;
  v15[1] = 0;
  v16 = &a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingPosition];
  *v16 = 0;
  v16[1] = 0;
  v17 = &a6[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_lastAccessibilityAnnouncedScrubbingSpeed];
  v18 = (objc_class *)type metadata accessor for AudiobookTOCViewController();
  *v17 = 0;
  v17[1] = 0;
  v19 = objc_allocWithZone(v18);
  v20 = a6;
  v21 = a1;
  *(_QWORD *)&v20[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_tocVC] = sub_100386E54(v21);

  v22 = v21;
  swift_retain(a2);
  swift_retain(a3);
  v23 = a4;
  v24 = a5;
  v25 = (char *)sub_1003AFE08(v22, a2, a3, v23, v24, v20);
  v26 = *(_QWORD *)&v25[OBJC_IVAR___BKAudiobookNowPlayingFullscreenTouchViewController_tocVC]
      + OBJC_IVAR____TtC5Books26AudiobookTOCViewController_delegate;
  *(_QWORD *)(v26 + 8) = &off_1008F6858;
  swift_unknownObjectWeakAssign(v26, v25);
  v27 = v25;

  swift_release(a2);
  swift_release(a3);

  return v27;
}

uint64_t sub_1003B0800()
{
  id v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "sceneManager");
  v1 = objc_msgSend(v0, "primarySceneController");

  v2 = objc_msgSend(v1, "rootBarCoordinator");
  if (v2)
  {
    v3 = objc_msgSend(v2, "miniPlayerViewController");
    swift_unknownObjectRelease(v2);
    if (v3)
    {
      v4 = type metadata accessor for AudiobookNowPlayingMiniTouchViewController(0);
      result = swift_dynamicCastClass(v3, v4);
      if (result)
        return result;

    }
  }
  return 0;
}

uint64_t sub_1003B08CC(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7)
{
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  __n128 v23;
  id v24;
  objc_class *v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  char *v34;
  id v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t Strong;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t result;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  char *v61;
  _QWORD v62[3];
  uint64_t v63;
  _UNKNOWN **v64;

  v58 = a3;
  v59 = a2;
  v12 = type metadata accessor for AudiobookNowPlayingRouter();
  v60 = swift_allocObject(v12, 16, 7);
  v13 = (char *)objc_allocWithZone((Class)type metadata accessor for AudiobookNowPlayingMediaLibraryService());
  v14 = a6;
  v15 = a5;
  v16 = swift_retain(a1);
  v17 = sub_1003B0470(v16, v14, v15, v13);
  objc_msgSend(v15, "registerAEPersistencePlugins");
  v18 = qword_1009CE290;
  v57 = v14;
  v61 = v17;
  if (v18 != -1)
    swift_once(&qword_1009CE290, sub_1003ADE5C);
  v19 = qword_1009DF498;
  v20 = qword_1009CE1F0;
  v56 = v15;
  swift_retain(v19);
  v21 = a7;
  if (v20 != -1)
    swift_once(&qword_1009CE1F0, sub_100007B98);
  v22 = (id)static ContextMenuProvider.shared;
  v23 = swift_bridgeObjectRetain(a4);
  v24 = (id)BSUIGetLibraryItemStateProvider(v23);
  v63 = type metadata accessor for AudiobookNowPlayingSharedStateProvider();
  v64 = &off_1009059E0;
  v62[0] = v19;
  v25 = (objc_class *)type metadata accessor for AudiobookNowPlayingDataManager(0);
  v26 = objc_allocWithZone(v25);
  v27 = sub_100063750((uint64_t)v62, v63);
  __chkstk_darwin(v27);
  v29 = (uint64_t *)((char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v30 + 16))(v29);
  v31 = *v29;
  swift_retain(v19);
  v32 = sub_1003B004C(v61, v57, v31, v56, v21, v22, v58, a4, (uint64_t)v24, v26);
  _s5Books15CurrentPageViewVwxx_0(v62);
  swift_release(v19);
  v33 = (void *)objc_opt_self(AEAssetEngine);
  v34 = v32;
  v35 = objc_msgSend(v33, "storeMgr");
  v63 = (uint64_t)v25;
  v64 = &off_100903B88;
  v62[0] = v34;
  v36 = objc_allocWithZone((Class)type metadata accessor for AudiobookNowPlayingInteractor(0));
  v37 = sub_100063750((uint64_t)v62, v63);
  __chkstk_darwin(v37);
  v39 = (uint64_t *)((char *)&v55 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v40 + 16))(v39);
  v41 = *v39;
  v42 = v34;
  v43 = sub_1003AEFFC(v41, v59, (uint64_t)v35, v36);
  _s5Books15CurrentPageViewVwxx_0(v62);

  v44 = v43;
  v45 = (uint64_t *)v60;
  swift_retain(v60);
  v46 = sub_1003AEEC0((uint64_t)v44, v45);
  v47 = *(void **)&v42[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player];
  v48 = objc_msgSend(v47, "currentAudiobook");
  if (!v48)
  {

LABEL_12:
    swift_release(v45);

    return v46;
  }
  v49 = v48;
  Strong = swift_unknownObjectWeakLoadStrong(&v42[OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_delegate]);
  if (!Strong)
  {

    goto LABEL_11;
  }
  v51 = Strong;
  v52 = (void *)swift_unknownObjectRetain(v49);
  sub_1002A3124(v52);
  swift_unknownObjectRelease(v49);
  v53 = objc_msgSend(v47, "currentChapter");
  result = (uint64_t)objc_msgSend(v47, "currentChapterIndex");
  if ((result & 0x8000000000000000) == 0)
  {
    sub_1002A4270(v53, result);

    swift_unknownObjectRelease(v51);
    swift_unknownObjectRelease(v53);
LABEL_11:
    swift_unknownObjectRelease(v49);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B0CF0()
{
  return sub_1003B0D10(1768843629, (void *)0xE400000000000000, type metadata accessor for AudiobookNowPlayingMiniTouchViewController, (uint64_t (*)(id, uint64_t, uint64_t, id, uint64_t, id))sub_1003AFC04);
}

uint64_t sub_1003B0D10(uint64_t a1, void *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(id, uint64_t, uint64_t, id, uint64_t, id))
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;

  v8 = type metadata accessor for AudiobookNowPlayingHelperProvider();
  v9 = swift_allocObject(v8, 32, 7);
  *(_QWORD *)(v9 + 24) = 0;
  swift_unknownObjectWeakInit(v9 + 16, 0);
  v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AudiobookNowPlayingNavigationHandler()), "init");
  v11 = objc_msgSend((id)objc_opt_self(BKAudiobookPersistenceController), "sharedInstance");
  v12 = objc_msgSend((id)objc_opt_self(BKUserActivityManager), "sharedInstance");
  v13 = objc_msgSend((id)objc_opt_self(BKAudiobookPlayer), "sharedInstance");
  v14 = objc_msgSend((id)objc_opt_self(BKAudiobookSleepTimer), "defaultTimer");
  v15 = sub_1003B08CC(v9, v10, a1, a2, v11, v13, v14);

  v16 = *(void **)(v15 + 16);
  type metadata accessor for AudiobookAnalyticsRecorder(0);
  v17 = v16;
  swift_retain(v15);
  swift_retain(v9);
  v18 = v10;
  v19 = static AudiobookAnalyticsRecorder.shared.getter();
  v20 = objc_allocWithZone((Class)a3(0));
  v21 = a4(v17, v15, v9, v18, v19, v20);
  swift_release(v9);

  swift_release(v15);
  return v21;
}

uint64_t type metadata accessor for AudiobookNowPlayingModuleFactory()
{
  return objc_opt_self(BKAudiobookNowPlayingModuleFactory);
}

uint64_t sub_1003B0F68()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B0F8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003B0FB8()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003B0FDC(uint64_t a1)
{
  uint64_t v1;

  sub_10029FC48(a1, v1);
}

void sub_1003B0FE4(uint64_t a1)
{
  uint64_t v1;

  sub_10029FD74(a1, v1);
}

uint64_t sub_1003B0FF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t);
  void (*v35)(char *, _QWORD, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  unsigned int *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  void (*v65)(uint64_t, char *, uint64_t);
  uint64_t v66;
  int *v67;
  uint64_t v68;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  _QWORD v88[3];
  uint64_t v89;
  uint64_t v90;
  _QWORD v91[6];

  v78 = a2;
  v3 = sub_10004CFD4(&qword_1009D6FF8);
  __chkstk_darwin(v3);
  v73 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for LibraryAudiobookInfo(0);
  v72 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v71 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ContentAcquisitionType(0);
  v84 = *(_QWORD *)(v7 - 8);
  v85 = v7;
  __chkstk_darwin(v7);
  v83 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ProductionType(0);
  v82 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v81 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v70 = (char *)&v70 - v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v70 - v14;
  v16 = sub_10004CFD4(&qword_1009DF4E8);
  v17 = __chkstk_darwin(v16);
  v80 = (uint64_t)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = (char *)&v70 - v19;
  v21 = type metadata accessor for ContentType(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v79 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v26 = (char *)&v70 - v25;
  sub_10003F198(a1, a1[3]);
  sub_100290490(v91);
  sub_10003F198(a1, a1[3]);
  sub_100290490(&v86);
  v77 = v22;
  v75 = v21;
  v74 = v26;
  if (v87)
  {
    sub_100022840(&v86, (uint64_t)v88);
    type metadata accessor for Utilities(0);
    dispatch thunk of static Utilities.contentType(from:)(v88);
    _s5Books15CurrentPageViewVwxx_0(v88);
  }
  else
  {
    sub_100010960((uint64_t)&v86, &qword_1009E8A20);
    (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v26, enum case for ContentType.unknown(_:), v21);
  }
  type metadata accessor for EventReporter(0, v27);
  v28 = (void *)static EventReporter.shared.getter();
  v29 = a1[3];
  v30 = a1[4];
  v76 = a1;
  sub_10003F198(a1, v29);
  v31 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v29, v30);
  v33 = v32;
  dispatch thunk of EventReporter.seriesType(for:)(v31);

  swift_bridgeObjectRelease(v33);
  v34 = *(void (**)(char *, _QWORD, uint64_t))(v82 + 104);
  v34(v15, enum case for ProductionType.unknown(_:), v9);
  v35 = *(void (**)(char *, _QWORD, uint64_t))(v84 + 104);
  v35(v83, enum case for ContentAcquisitionType.nonStoreBought(_:), v85);
  sub_10000B5E4((uint64_t)v91, (uint64_t)&v86, &qword_1009E8A20);
  if (v87)
  {
    sub_100022840(&v86, (uint64_t)v88);
    sub_10002E418((uint64_t)v88, (uint64_t)&v86);
    v36 = sub_10004CFD4(&qword_1009EF310);
    v37 = (uint64_t)v73;
    v38 = swift_dynamicCast(v73, &v86, v36, v5, 6);
    v39 = v72;
    v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
    if ((v38 & 1) != 0)
    {
      v40(v37, 0, 1, v5);
      v41 = v71;
      v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 32))(v71, v37, v5);
      v43 = LibraryAudiobookInfo.isSG.getter(v42);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v5);
      v44 = v82;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v15, v9);
      v45 = (unsigned int *)&enum case for ProductionType.sgProduction(_:);
      if ((v43 & 1) == 0)
        v45 = (unsigned int *)&enum case for ProductionType.nonSGProduction(_:);
      v46 = v70;
      v34(v70, *v45, v9);
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v15, v46, v9);
    }
    else
    {
      v40(v37, 1, 1, v5);
      sub_100010960(v37, &qword_1009D6FF8);
    }
    v47 = v15;
    v49 = v89;
    v50 = v90;
    sub_10003F198(v88, v89);
    dispatch thunk of LibraryContentInfo.storeID.getter(v49, v50);
    v52 = v51;
    swift_bridgeObjectRelease(v51);
    if (v52)
    {
      v53 = v83;
      v54 = v85;
      (*(void (**)(char *, uint64_t))(v84 + 8))(v83, v85);
      v35(v53, enum case for ContentAcquisitionType.storeBought(_:), v54);
    }
    v48 = v9;
    _s5Books15CurrentPageViewVwxx_0(v88);
  }
  else
  {
    v47 = v15;
    v48 = v9;
    sub_100010960((uint64_t)&v86, &qword_1009E8A20);
  }
  v55 = v77;
  v56 = v74;
  v57 = v75;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v79, v74, v75);
  sub_10000B5E4((uint64_t)v20, v80, &qword_1009DF4E8);
  v58 = v82;
  v59 = v47;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v81, v47, v48);
  v60 = v76[3];
  v61 = v76[4];
  sub_10003F198(v76, v60);
  v62 = dispatch thunk of ContextAssetInfoProtocol.supplementalContentCount.getter(v60, v61);
  v64 = Optional<A>.int32Value.getter(v62, v63 & 1);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v48);
  sub_100010960((uint64_t)v20, &qword_1009DF4E8);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
  sub_100010960((uint64_t)v91, &qword_1009E8A20);
  if ((v64 & (unint64_t)&_mh_execute_header) != 0)
    LODWORD(v64) = 0;
  v65 = *(void (**)(uint64_t, char *, uint64_t))(v55 + 32);
  v66 = v78;
  v65(v78, v79, v57);
  v67 = (int *)type metadata accessor for MenuAppAnalyticsHelpers.TrackerInfo(0);
  sub_1003B25F8(v80, v66 + v67[5]);
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v66 + v67[6], v81, v48);
  v68 = v66 + v67[7];
  *(_DWORD *)v68 = v64;
  *(_BYTE *)(v68 + 4) = 0;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v84 + 32))(v66 + v67[8], v83, v85);
}

_QWORD *sub_1003B168C(char a1, int a2, _QWORD *a3, uint64_t a4)
{
  _DWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  _QWORD *result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  _QWORD v44[5];

  v8 = (_DWORD *)type metadata accessor for MenuAppAnalyticsHelpers.TrackerInfo(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - v12;
  sub_1003B0FF0(a3, (uint64_t)&v41 - v12);
  if ((a1 & 1) != 0)
  {
    v42 = type metadata accessor for EventReporter(0, v14);
    v15 = (void *)static EventReporter.shared.getter(v42);
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDFinished);
    v43 = a2;
    v17 = v16;
    v18 = a3[3];
    v19 = a3[4];
    sub_10003F198(a3, v18);
    v20 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v18, v19);
    v22 = v21;
    v23 = (_DWORD)v13 + v8[5];
    LOBYTE(v44[0]) = v13[v8[7] + 4];
    v40 = v23;
    EventReporter.emitAddToCollectionEvent(using:for:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(a4, v41, v17, v20, v21);

    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v22);
    v24 = sub_1003B0FF0(a3, (uint64_t)v10);
    v25 = (void *)static EventReporter.shared.getter(v24);
    v26 = a3[3];
    v27 = a3[4];
    sub_10003F198(a3, v26);
    v28 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v26, v27);
    v30 = v29;
    v31 = &v10[v8[8]];
    v32 = &v10[v8[7]];
    v33 = *(unsigned int *)v32;
    v34 = &v10[v8[5]];
    v35 = &v10[v8[6]];
    LOBYTE(v44[0]) = v32[4];
    LOBYTE(v40) = v43;
    EventReporter.emitMarkAsFinishedEvent(using:for:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:isFinishedDateSet:)(a4, v28, v29, v31, v10, v33 | ((unint64_t)LOBYTE(v44[0]) << 32), v34, v35, v40);

    swift_bridgeObjectRelease(v30);
    sub_1003B25BC((uint64_t)v10);
    return (_QWORD *)sub_1003B25BC((uint64_t)v13);
  }
  else
  {
    sub_10003F198(a3, a3[3]);
    result = sub_100290490(v44);
    if (v44[3])
    {
      v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDFinished);
      v39 = v38;
      sub_1003B2120(a4, v44, v37, v38);
      swift_bridgeObjectRelease(v39);
      sub_1003B25BC((uint64_t)v13);
      return (_QWORD *)_s5Books15CurrentPageViewVwxx_0(v44);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t type metadata accessor for MenuAppAnalyticsHelpers.TrackerInfo(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DF548;
  if (!qword_1009DF548)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for MenuAppAnalyticsHelpers.TrackerInfo);
  return result;
}

uint64_t sub_1003B1950(_QWORD *a1, uint64_t a2)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;

  v32 = a2;
  v3 = (int *)type metadata accessor for MenuAppAnalyticsHelpers.TrackerInfo(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003B0FF0(a1, (uint64_t)v5);
  v31 = type metadata accessor for EventReporter(0, v6);
  v7 = (void *)((uint64_t (*)(void))static EventReporter.shared.getter)();
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDWantToRead);
  v9 = v8;
  v10 = a1[3];
  v11 = a1[4];
  sub_10003F198(a1, v10);
  v12 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v10, v11);
  v14 = v13;
  v15 = &v5[v3[7]];
  v16 = *(unsigned int *)v15;
  LOBYTE(v10) = v15[4];
  v17 = &v5[v3[5]];
  v18 = &v5[v3[6]];
  v29 = &v5[v3[8]];
  v30 = v18;
  v34 = v10;
  v19 = v32;
  EventReporter.emitAddToCollectionEvent(using:for:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(v32, v28, v9, v12, v13);

  swift_bridgeObjectRelease(v9);
  v20 = swift_bridgeObjectRelease(v14);
  v21 = (void *)static EventReporter.shared.getter(v20);
  v22 = a1[3];
  v23 = a1[4];
  sub_10003F198(a1, v22);
  v24 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v22, v23);
  v26 = v25;
  v33 = v10;
  EventReporter.emitWantListAddEvent(using:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(v19, v24, v25, v29, v5, v16 | ((unint64_t)v10 << 32), v17, v30);

  swift_bridgeObjectRelease(v26);
  return sub_1003B25BC((uint64_t)v5);
}

uint64_t sub_1003B1B14(_QWORD *a1, uint64_t a2)
{
  int *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  unsigned __int8 v32;

  v31 = a2;
  v3 = (int *)type metadata accessor for MenuAppAnalyticsHelpers.TrackerInfo(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003B0FF0(a1, (uint64_t)v5);
  v7 = type metadata accessor for EventReporter(0, v6);
  v8 = (void *)static EventReporter.shared.getter(v7);
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDWantToRead);
  v11 = v10;
  v13 = a1[3];
  v12 = a1[4];
  sub_10003F198(a1, v13);
  v14 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v13, v12);
  v16 = v15;
  v17 = &v5[v3[8]];
  v18 = &v5[v3[7]];
  v19 = *(unsigned int *)v18;
  v20 = &v5[v3[5]];
  v21 = &v5[v3[6]];
  v32 = v18[4];
  v22 = v31;
  EventReporter.emitRemoveFromCollectionEvent(using:for:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(v31, v9, v11, v14, v15, v17, v5, v19 | ((unint64_t)v32 << 32), v20, v21);

  swift_bridgeObjectRelease(v11);
  swift_bridgeObjectRelease(v16);
  v24 = (void *)static EventReporter.shared.getter(v23);
  v25 = a1[3];
  v26 = a1[4];
  sub_10003F198(a1, v25);
  v27 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v25, v26);
  v29 = v28;
  EventReporter.emitRemoveFromWantToReadEvent(using:for:)(v22, v27, v28);

  swift_bridgeObjectRelease(v29);
  return sub_1003B25BC((uint64_t)v5);
}

uint64_t sub_1003B1CBC(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char v13;
  uint64_t v14;

  type metadata accessor for EventReporter(0, a2);
  v4 = (void *)static EventReporter.shared.getter();
  v5 = a2[3];
  v6 = a2[4];
  sub_10003F198(a2, v5);
  v7 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v5, v6);
  v9 = v8;
  v10 = a2[3];
  v11 = a2[4];
  sub_10003F198(a2, v10);
  result = dispatch thunk of ContextAssetInfoProtocol.supplementalContentCount.getter(v10, v11);
  if ((v13 & 1) != 0)
    v14 = 0;
  else
    v14 = result;
  if (v14 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v14 <= 0x7FFFFFFF)
  {
    EventReporter.emitReportAnIssueEvent(using:contentID:supplementalContentCount:)(a1, v7, v9, v14);

    return swift_bridgeObjectRelease(v9);
  }
  __break(1u);
  return result;
}

double sub_1003B1DAC(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  id v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  double result;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;

  v7 = objc_msgSend(a2, "permanentOrTemporaryAssetID");
  v8 = v7;
  if (!v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v10 = v9;
    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
  }
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
  v13 = v12;
  v14 = type metadata accessor for EventReporter(0, v12);
  v48 = (void *)static EventReporter.shared.getter(v14);
  v50 = a3;
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(a2, "storeID");
  v49 = v8;
  if (v16
    && (v17 = v16,
        static String._unconditionallyBridgeFromObjectiveC(_:)(v16),
        v19 = v18,
        v17,
        v20 = sub_1001F15BC(),
        LOBYTE(v17) = Collection.isNotEmpty.getter(&type metadata for String, v20),
        swift_bridgeObjectRelease(v19),
        (v17 & 1) != 0))
  {
    v21 = 1;
  }
  else
  {
    v21 = 2;
  }
  v47 = v21;
  type metadata accessor for Utilities(0);
  v22 = dispatch thunk of static Utilities.contentType(from:)((int)objc_msgSend(a2, "contentType"));
  v23 = objc_msgSend(a2, "supplementalContentAssets");
  if (v23)
  {
    v24 = sub_100033F5C();
    v25 = sub_1002B2BF4();
    v26 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v23, v24, v25);

    v27 = a4;
    if ((v26 & 0xC000000000000001) != 0)
    {
      if (v26 < 0)
        v28 = v26;
      else
        v28 = v26 & 0xFFFFFFFFFFFFFF8;
      v23 = (id)__CocoaSet.count.getter(v28);
    }
    else
    {
      v23 = *(id *)(v26 + 16);
    }
    swift_bridgeObjectRelease(v26);
  }
  else
  {
    v27 = a4;
  }
  v29 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v23);
  v30 = (void *)static EventReporter.shared.getter(v29);
  v31 = dispatch thunk of EventReporter.seriesType(for:)(v11, v13);

  if (objc_msgSend(a2, "isAudiobook", swift_bridgeObjectRelease(v13).n128_f64[0]))
  {
    v32 = objc_msgSend(a2, "hasRACSupport");
    if (v32 && (v33 = v32, v34 = objc_msgSend(v32, "BOOLValue"), v33, (v34 & 1) != 0))
      v35 = 1;
    else
      v35 = 2;
  }
  else
  {
    v35 = 0;
  }
  objc_msgSend(v48, "emitRemoveFromCollectionEventWithTracker:collectionID:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:", a1, v15, v49, v47, v22, v29, v31, v35);

  v37 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDWantToRead);
  v38 = v36;
  if (v37 == v50 && v36 == v27)
  {
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v27, v37, v36, 0);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v38).n128_u64[0];
    if ((v40 & 1) == 0)
      return result;
  }
  v42 = (void *)static EventReporter.shared.getter(v39);
  v43 = objc_msgSend(a2, "permanentOrTemporaryAssetID");
  v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
  v46 = v45;

  EventReporter.emitRemoveFromWantToReadEvent(using:for:)(a1, v44, v46);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v46).n128_u64[0];
  return result;
}

uint64_t sub_1003B2120(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  char v32;
  unsigned int *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  unsigned int *v53;
  char *v54;
  uint64_t v55;
  uint64_t result;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[6];

  v73 = a3;
  v74 = a4;
  v71 = a1;
  v5 = sub_10004CFD4(&qword_1009DF4E8);
  __chkstk_darwin(v5);
  v76 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = type metadata accessor for ContentType(0);
  v72 = *(_QWORD *)(v75 - 8);
  __chkstk_darwin(v75);
  v77 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ContentAcquisitionType(0);
  v79 = *(_QWORD *)(v8 - 8);
  v80 = v8;
  __chkstk_darwin(v8);
  v78 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D6FF8);
  __chkstk_darwin(v10);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for LibraryAudiobookInfo(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v65 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ProductionType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v64 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v63 - v20;
  v23 = a2[3];
  v22 = a2[4];
  sub_10003F198(a2, v23);
  v24 = v23;
  v25 = a2;
  v66 = dispatch thunk of LibraryContentInfo.id.getter(v24, v22);
  v67 = v26;
  sub_10002E418((uint64_t)a2, (uint64_t)v81);
  v27 = sub_10004CFD4(&qword_1009EF310);
  v28 = swift_dynamicCast(v12, v81, v27, v13, 6);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v69 = v17;
  v70 = v16;
  v68 = v21;
  if (v28)
  {
    v29(v12, 0, 1, v13);
    v30 = v65;
    v31 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v65, v12, v13);
    v32 = LibraryAudiobookInfo.isSG.getter(v31);
    v33 = (unsigned int *)&enum case for ProductionType.sgProduction(_:);
    if ((v32 & 1) == 0)
      v33 = (unsigned int *)&enum case for ProductionType.nonSGProduction(_:);
    v34 = v64;
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v64, *v33, v16);
    v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v17 + 32))(v21, v34, v16);
    v36 = LibraryAudiobookInfo.supplementalContents.getter(v35);
    if (v36)
    {
      v38 = *(_QWORD *)(v36 + 16);
      v37 = swift_bridgeObjectRelease(v36);
    }
    else
    {
      v38 = 0;
    }
    (*(void (**)(char *, uint64_t, __n128))(v14 + 8))(v30, v13, v37);
    v40 = v38;
  }
  else
  {
    v29(v12, 1, 1, v13);
    sub_100010960((uint64_t)v12, &qword_1009D6FF8);
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v21, enum case for ProductionType.unknown(_:), v16);
    v40 = 0;
  }
  v41 = type metadata accessor for EventReporter(0, v39);
  v42 = (void *)static EventReporter.shared.getter(v41);
  v43 = a2[3];
  v44 = a2[4];
  sub_10003F198(v25, v25[3]);
  v45 = dispatch thunk of LibraryContentInfo.storeID.getter(v43, v44);
  v49 = v78;
  v48 = v79;
  if (v46
    && (v50 = v46,
        v81[0] = v45,
        v81[1] = v46,
        v51 = sub_1001F15BC(),
        v52 = Collection.isNotEmpty.getter(&type metadata for String, v51),
        v47 = swift_bridgeObjectRelease(v50),
        (v52 & 1) != 0))
  {
    v53 = (unsigned int *)&enum case for ContentAcquisitionType.storeBought(_:);
  }
  else
  {
    v53 = (unsigned int *)&enum case for ContentAcquisitionType.nonStoreBought(_:);
  }
  v54 = v77;
  v55 = v80;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v48 + 104))(v49, *v53, v80, v47);
  type metadata accessor for Utilities(0);
  result = dispatch thunk of static Utilities.contentType(from:)(v25);
  if (v40 >> 31)
  {
    __break(1u);
  }
  else
  {
    v57 = (void *)static EventReporter.shared.getter(result);
    v58 = (uint64_t)v76;
    v59 = v66;
    v60 = v67;
    dispatch thunk of EventReporter.seriesType(for:)(v66);

    LOBYTE(v81[0]) = 0;
    v61 = v40;
    v62 = v68;
    EventReporter.emitRemoveFromCollectionEvent(using:for:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(v71, v73, v74, v59, v60, v49, v54, v61, v58, v68);
    swift_bridgeObjectRelease(v60);

    sub_100010960(v58, &qword_1009DF4E8);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v54, v75);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v55);
    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v62, v70);
  }
  return result;
}

uint64_t sub_1003B25BC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MenuAppAnalyticsHelpers.TrackerInfo(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003B25F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009DF4E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1003B2640(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for ContentType(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for SeriesType(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_10004CFD4(&qword_1009DF4E8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = a3[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = type metadata accessor for ProductionType(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = a3[7];
    v20 = a3[8];
    v21 = (char *)a1 + v19;
    v22 = (char *)a2 + v19;
    *(_DWORD *)v21 = *(_DWORD *)v22;
    v21[4] = v22[4];
    v23 = (char *)a1 + v20;
    v24 = (char *)a2 + v20;
    v25 = type metadata accessor for ContentAcquisitionType(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return a1;
}

uint64_t sub_1003B27C0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for ContentType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for SeriesType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = a1 + a2[6];
  v9 = type metadata accessor for ProductionType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = a1 + a2[8];
  v11 = type metadata accessor for ContentAcquisitionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

uint64_t sub_1003B2890(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for ContentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for SeriesType(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10004CFD4(&qword_1009DF4E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for ProductionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  v21 = a1 + v18;
  v22 = a2 + v18;
  v23 = type metadata accessor for ContentAcquisitionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

uint64_t sub_1003B29E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = type metadata accessor for ContentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for SeriesType(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10004CFD4(&qword_1009DF4E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for ProductionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  v20 = a3[7];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_BYTE *)(v22 + 4);
  *(_DWORD *)v21 = *(_DWORD *)v22;
  *(_BYTE *)(v21 + 4) = v23;
  v24 = a3[8];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for ContentAcquisitionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  return a1;
}

uint64_t sub_1003B2B88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = type metadata accessor for ContentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for SeriesType(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10004CFD4(&qword_1009DF4E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = type metadata accessor for ProductionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  v17 = a3[7];
  v18 = a3[8];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_DWORD *)v19 = *(_DWORD *)v20;
  *(_BYTE *)(v19 + 4) = *(_BYTE *)(v20 + 4);
  v21 = a1 + v18;
  v22 = a2 + v18;
  v23 = type metadata accessor for ContentAcquisitionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  return a1;
}

uint64_t sub_1003B2CDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for ContentType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for SeriesType(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10004CFD4(&qword_1009DF4E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = type metadata accessor for ProductionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[7];
  v21 = a3[8];
  v22 = a1 + v20;
  v23 = a2 + v20;
  *(_DWORD *)v22 = *(_DWORD *)v23;
  *(_BYTE *)(v22 + 4) = *(_BYTE *)(v23 + 4);
  v24 = a1 + v21;
  v25 = a2 + v21;
  v26 = type metadata accessor for ContentAcquisitionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_1003B2E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003B2E88);
}

uint64_t sub_1003B2E88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for ContentType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_10004CFD4(&qword_1009DF4E8);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = type metadata accessor for ProductionType(0);
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        v8 = type metadata accessor for ContentAcquisitionType(0);
        v12 = *(_QWORD *)(v8 - 8);
        v13 = a3[8];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1003B2F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003B2F54);
}

uint64_t sub_1003B2F54(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = type metadata accessor for ContentType(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_10004CFD4(&qword_1009DF4E8);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = type metadata accessor for ProductionType(0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        v10 = type metadata accessor for ContentAcquisitionType(0);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[8];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1003B301C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[5];

  v2 = type metadata accessor for ContentType(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1003B30E0(319);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ProductionType(319);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        v10[3] = &unk_10071FB80;
        v8 = type metadata accessor for ContentAcquisitionType(319);
        if (v9 <= 0x3F)
        {
          v10[4] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 5, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_1003B30E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009DF558)
  {
    v2 = type metadata accessor for SeriesType(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009DF558);
  }
}

double sub_1003B3134@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071FED0);
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + 72);
  *a2 = *(_QWORD *)(v3 + 64);
  a2[1] = v6;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v6).n128_u64[0];
  return result;
}

double sub_1003B31C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[7];
  uint64_t v9;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071FED0);
  v8[2] = v4;
  v8[3] = v3;
  v8[4] = v2;
  v9 = v4;
  v6 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  swift_bridgeObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1003BDDEC, v8, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for CounterActor.ActorType()
{
  return objc_opt_self(_TtCV5BooksP33_4B759A9BCB21229C0C2D9E1814F3826812CounterActor9ActorType);
}

uint64_t sub_1003B32A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for CounterActor.ActorType();
  v1 = swift_allocObject(v0, 112, 15);
  result = swift_defaultActor_initialize(v1);
  qword_1009DF598 = v1;
  return result;
}

uint64_t sub_1003B32DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D55C0);
  __chkstk_darwin(v2);
  v59 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s14descr1008F7311C5StateO4TurnVMa(0);
  v57 = *(_QWORD *)(v4 - 8);
  v58 = v4;
  __chkstk_darwin(v4);
  v56 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v55 = (char *)&v53 - v7;
  v8 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v8);
  v54 = (uint64_t *)((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  v12 = (char *)&v53 - v11;
  v13 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v53 - v17);
  __chkstk_darwin(v19);
  v21 = (uint64_t *)((char *)&v53 - v20);
  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v23 = swift_getKeyPath(&unk_10071FEB0);
  v60 = v21;
  static Published.subscript.getter(v21, v1, KeyPath, v23);
  swift_release(KeyPath);
  swift_release(v23);
  v24 = swift_getKeyPath(&unk_10071FE88);
  v25 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v18, v1, v24, v25);
  swift_release(v24);
  swift_release(v25);
  sub_10002C8F0((uint64_t)v18, _s14descr1008F7311C5StateOMa);
  v26 = swift_getKeyPath(&unk_10071FE88);
  v27 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v15, v1, v26, v27);
  swift_release(v26);
  swift_release(v27);
  sub_1002613A8();
  v29 = v28;
  sub_10002C8F0((uint64_t)v15, _s14descr1008F7311C5StateOMa);
  if (v29)
  {
    v30 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)v12 = v29;
    swift_storeEnumTagMultiPayload(v12, v8, 0);
    v31 = swift_getKeyPath(&unk_10071FF20);
    __chkstk_darwin(v31);
    *(&v53 - 2) = v30;
    *(&v53 - 1) = (uint64_t)v12;
    v61 = v30;
    v32 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
    v33 = v29;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v61, v31, sub_1003616C4, &v53 - 4, (char *)&type metadata for () + 8, v32);
    swift_release(v31);
    sub_10002C8F0((uint64_t)v12, type metadata accessor for PageTurnViewModel.State);

  }
  else
  {
    v35 = (uint64_t)v55;
    v34 = (uint64_t)v56;
    v53 = v8;
    v36 = swift_getKeyPath(&unk_10071FE88);
    v37 = swift_getKeyPath(&unk_10071FEB0);
    static Published.subscript.getter(v18, v1, v36, v37);
    swift_release(v36);
    swift_release(v37);
    v38 = *(_QWORD *)(v1 + 48);
    v39 = (uint64_t)v59;
    sub_100260DE8();
    sub_10002C8F0((uint64_t)v18, _s14descr1008F7311C5StateOMa);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v39, 1, v58) == 1)
    {
      sub_100010960(v39, &qword_1009D55C0);
      swift_storeEnumTagMultiPayload(v12, v53, 2);
      v40 = swift_getKeyPath(&unk_10071FF20);
      __chkstk_darwin(v40);
      *(&v53 - 2) = v38;
      *(&v53 - 1) = (uint64_t)v12;
      v61 = v38;
      v41 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v61, v40, sub_100361244, &v53 - 4, (char *)&type metadata for () + 8, v41);
      swift_release(v40);
      v42 = type metadata accessor for PageTurnViewModel.State;
      v43 = (uint64_t)v12;
    }
    else
    {
      sub_10002C960(v39, v35, _s14descr1008F7311C5StateO4TurnVMa);
      v44 = *(_QWORD *)(v1 + 120);
      v45 = *(_BYTE *)(v1 + 112);
      sub_10002CD84(v35, v34, _s14descr1008F7311C5StateO4TurnVMa);
      v46 = swift_getKeyPath(&unk_10071FF20);
      v61 = v38;
      v47 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v61, v46, v47);
      swift_release(v46);
      v48 = v54;
      CurrentValueSubject.value.getter(v54);
      v49 = sub_10035F558();
      sub_10002C8F0((uint64_t)v48, type metadata accessor for PageTurnViewModel.State);
      *(_QWORD *)v12 = v44;
      v12[8] = v45;
      v50 = type metadata accessor for PageTurnViewModel.State.Active(0);
      sub_10002C960(v34, (uint64_t)&v12[*(int *)(v50 + 24)], _s14descr1008F7311C5StateO4TurnVMa);
      v12[*(int *)(v50 + 28)] = v49;
      swift_storeEnumTagMultiPayload(v12, v53, 1);
      v51 = swift_getKeyPath(&unk_10071FF20);
      __chkstk_darwin(v51);
      *(&v53 - 2) = v38;
      *(&v53 - 1) = (uint64_t)v12;
      v61 = v38;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v61, v51, sub_1003616C4, &v53 - 4, (char *)&type metadata for () + 8, v47);
      swift_release(v51);
      sub_10002C8F0((uint64_t)v12, type metadata accessor for PageTurnViewModel.State);
      v43 = v35;
      v42 = _s14descr1008F7311C5StateO4TurnVMa;
    }
    sub_10002C8F0(v43, v42);
  }
  return sub_10002C8F0((uint64_t)v60, _s14descr1008F7311C5StateOMa);
}

uint64_t sub_1003B3940()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 80);
  if (v1)
  {
    objc_msgSend(v1, "invalidate");
    v2 = *(void **)(v0 + 80);
  }
  else
  {
    v2 = 0;
  }
  *(_QWORD *)(v0 + 80) = 0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));

  sub_10002AD00(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  swift_release(*(_QWORD *)(v0 + 104));
  v3 = v0 + OBJC_IVAR____TtC5Books18PageTurnController__state;
  v4 = sub_10004CFD4(&qword_1009DF7C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t sub_1003B39F8()
{
  uint64_t v0;

  sub_1003B3940();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003B3A1C()
{
  return type metadata accessor for PageTurnController(0);
}

uint64_t type metadata accessor for PageTurnController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009DF678;
  if (!qword_1009DF678)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PageTurnController);
  return result;
}

void sub_1003B3A60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  v3 = sub_10004CFD4(&qword_1009DF780);
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D55E0);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s14descr1008F7311C5StateOMa(0);
  v30 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v29 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v28 - v12);
  __chkstk_darwin(v14);
  v16 = (char *)&v28 - v15;
  v31 = a1;
  sub_10002CD84(a1, (uint64_t)&v28 - v15, _s14descr1008F7311C5StateOMa);
  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v18 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v13, v1, KeyPath, v18);
  swift_release(KeyPath);
  swift_release(v18);
  v19 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10002C960((uint64_t)v16, (uint64_t)v8, _s14descr1008F7311C5StateOMa);
  sub_10002C960((uint64_t)v13, v19, _s14descr1008F7311C5StateOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v8, v9);
  if (EnumCaseMultiPayload == 5)
  {
    if (swift_getEnumCaseMultiPayload(v19, v9) == 5)
    {
LABEL_4:
      sub_10002C8F0(v19, _s14descr1008F7311C5StateOMa);
      sub_10002C8F0((uint64_t)v8, _s14descr1008F7311C5StateOMa);
LABEL_8:
      sub_1003B3DB8();
      v24 = swift_getKeyPath(&unk_10071FE88);
      v25 = swift_getKeyPath(&unk_10071FEB0);
      v26 = v29;
      static Published.subscript.getter(v29, v1, v24, v25);
      swift_release(v24);
      swift_release(v25);
      sub_10002C8F0((uint64_t)v26, _s14descr1008F7311C5StateOMa);
      v27 = v31;
      sub_10002CD84(v31, (uint64_t)v5, _s14descr1008F7311C5StateOMa);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v5, 0, 1, v9);
      sub_1003B32DC();
      sub_100010960((uint64_t)v5, &qword_1009DF780);
      sub_1003B4088(v27);
      return;
    }
  }
  else if (EnumCaseMultiPayload == 4 && swift_getEnumCaseMultiPayload(v19, v9) == 4)
  {
    goto LABEL_4;
  }
  v21 = *(_QWORD *)(v1 + 128);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (!v22)
  {
    *(_QWORD *)(v1 + 128) = v23;
    sub_100010960((uint64_t)v8, &qword_1009D55E0);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_1003B3D54@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v4 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(a1, v1, KeyPath, v4);
  swift_release(KeyPath);
  return swift_release(v4);
}

uint64_t sub_1003B3DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v27 - v9);
  v11 = *(_QWORD *)(v0 + 128);
  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v13 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v10, v0, KeyPath, v13);
  swift_release(KeyPath);
  swift_release(v13);
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  Logger.init(_:)((id)qword_100A1ECD8);
  v14 = sub_10002CD84((uint64_t)v10, (uint64_t)v7, _s14descr1008F7311C5StateOMa);
  v15 = Logger.logObject.getter(v14);
  v19 = static os_log_type_t.debug.getter(v15, v16, v17, v18);
  if (os_log_type_enabled(v15, v19))
  {
    v20 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(32, -1);
    v28 = v1;
    v29 = v11;
    v22 = v21;
    v30 = v21;
    *(_DWORD *)v20 = 134218242;
    v27 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v20 + 4, v20 + 12);
    *(_WORD *)(v20 + 12) = 2082;
    sub_100568D44();
    v24 = v23;
    v29 = sub_100040F58(v25, v23, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, &v30, v20 + 14, v20 + 22);
    swift_bridgeObjectRelease(v24);
    sub_10002C8F0((uint64_t)v7, _s14descr1008F7311C5StateOMa);
    _os_log_impl((void *)&_mh_execute_header, v15, v19, "[%ld]: state => %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
  }
  else
  {

    sub_10002C8F0((uint64_t)v7, _s14descr1008F7311C5StateOMa);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_10002C8F0((uint64_t)v10, _s14descr1008F7311C5StateOMa);
}

void sub_1003B4088(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t KeyPath;
  uint64_t v18;
  char *v19;
  _QWORD v20[8];

  v20[4] = a1;
  v2 = _s14descr1008F7311C5StateO9ResettingVMa(0);
  __chkstk_darwin(v2);
  v20[2] = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  __chkstk_darwin(v4);
  v20[1] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v20[5] = (char *)v20 - v7;
  v8 = _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
  __chkstk_darwin(v8);
  v9 = _s14descr1008F7311C5StateO7TurningVMa(0);
  __chkstk_darwin(v9);
  v20[3] = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v12 = _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
  __chkstk_darwin(v12);
  v13 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  v16 = (_QWORD *)((char *)v20 - v15);
  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v18 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v16, v1, KeyPath, v18);
  swift_release(KeyPath);
  swift_release(v18);
  v19 = (char *)sub_1003B42C0 + 4 * byte_10071FBC0[swift_getEnumCaseMultiPayload(v16, v13)];
  __asm { BR              X10 }
}

void sub_1003B42C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;

  sub_10002C960(v0, v2, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
  v3 = (void *)*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Books18PageTurnController_testDriverState);
  if (v3 <= 1)
    v4 = 1;
  else
    v4 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Books18PageTurnController_testDriverState);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC5Books18PageTurnController_testDriverState) = v4;
  sub_1003B4B08(v3);
  v5 = swift_allocObject(&unk_100901E40, 24, 7);
  swift_weakInit(v5 + 16, v1);
  sub_1003BD374(v2, v5);
  sub_10002C8F0(v2, _s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa);
  swift_release(v5);
}

uint64_t sub_1003B4768@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v5 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_1003B47D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v19 - v8);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - v11;
  sub_10002CD84(a1, (uint64_t)&v19 - v11, _s14descr1008F7311C5StateOMa);
  v13 = *a2;
  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v15 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v9, v13, KeyPath, v15);
  swift_release(KeyPath);
  swift_release(v15);
  v16 = swift_getKeyPath(&unk_10071FE88);
  v17 = swift_getKeyPath(&unk_10071FEB0);
  sub_10002CD84((uint64_t)v12, (uint64_t)v6, _s14descr1008F7311C5StateOMa);
  swift_retain(v13);
  static Published.subscript.setter(v6, v13, v16, v17);
  sub_1003B3A60((uint64_t)v9);
  sub_10002C8F0((uint64_t)v12, _s14descr1008F7311C5StateOMa);
  return sub_10002C8F0((uint64_t)v9, _s14descr1008F7311C5StateOMa);
}

void sub_1003B4950(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v2 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v9 - v6;
  swift_storeEnumTagMultiPayload((char *)&v9 - v6, v2, 7);
  sub_100264170(a1, (uint64_t)v7);
  sub_10002C8F0((uint64_t)v7, _s14descr1008F7311C5StateOMa);
  sub_10002CD84(a1, (uint64_t)v4, _s14descr1008F7311C5StateOMa);
  v8 = (char *)sub_1003B4A38 + 4 * byte_10071FBC8[swift_getEnumCaseMultiPayload(v4, v2)];
  __asm { BR              X10 }
}

uint64_t sub_1003B4A38()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_10002C8F0(v1, _s14descr1008F7311C5StateOMa);
  PageMovementState.init(isIdle:isDragging:)(v2 & 1, 0);
  return sub_10002C8F0(v0, _s14descr1008F7311C5StateOMa);
}

void sub_1003B4A88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  v2 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(a1, (uint64_t)v4, v5);
  sub_1003B4950((uint64_t)v4);
}

id sub_1003B4B08(id result)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = OBJC_IVAR____TtC5Books18PageTurnController_testDriverState;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Books18PageTurnController_testDriverState) != result)
  {
    v3 = *(void **)(v1 + 32);
    objc_msgSend(v3, "postEvent:sender:", *(_QWORD *)*(&off_1009020D8 + (char)result), v1);
    return objc_msgSend(v3, "postEvent:sender:", *(_QWORD *)*(&off_1009020F0 + *(char *)(v1 + v2)), v1);
  }
  return result;
}

uint64_t *sub_1003B4B98@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

BOOL sub_1003B4BB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1003B4BC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1003B4BD8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1003B4BEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t sub_1003B4C00()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6574616D696E61;
  if (*v0 == 1)
    v1 = 0x7075746573;
  if (*v0)
    return v1;
  else
    return 1701602409;
}

void sub_1003B4C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v5 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v3, v0, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = (char *)sub_1003B4D14 + 4 * byte_10071FBD0[swift_getEnumCaseMultiPayload(v3, v1)];
  __asm { BR              X10 }
}

uint64_t sub_1003B4D14()
{
  uint64_t v0;

  sub_10002C8F0(v0, _s14descr1008F7311C5StateOMa);
  return 0;
}

uint64_t sub_1003B4D44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  char *v18;
  uint64_t v20;

  v2 = v1;
  v4 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v20 - v8);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  LocationControlling.destination(for:)(a1, ObjectType, v13);
  v15 = type metadata accessor for SpreadPaginationEntity(0);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 1, v15);
  sub_100010960((uint64_t)v12, (uint64_t *)&unk_1009E8E70);
  if ((_DWORD)a1 != 1)
  {
    KeyPath = swift_getKeyPath(&unk_10071FE88);
    v17 = swift_getKeyPath(&unk_10071FEB0);
    static Published.subscript.getter(v9, v2, KeyPath);
    swift_release(KeyPath);
    swift_release(v17);
    sub_10002CD84((uint64_t)v9, (uint64_t)v6, _s14descr1008F7311C5StateOMa);
    v18 = (char *)&loc_1003B4EE4 + 4 * byte_10071FBD8[swift_getEnumCaseMultiPayload(v6, v4)];
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_1003B4F30(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t result;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint8_t *v39;
  uint64_t ObjectType;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  LODWORD(v43) = a2;
  v5 = type metadata accessor for LocationMovement(0);
  v44 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Logger(0);
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  __chkstk_darwin(v8);
  v45 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SpreadPaginationEntity(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v2 + 16);
  v18 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v41 = v17;
  v42 = v18;
  LocationControlling.destination(for:)(a1, ObjectType, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    v19 = a1;
    sub_100010960((uint64_t)v12, (uint64_t *)&unk_1009E8E70);
    if (qword_1009CE8D0 != -1)
      swift_once(&qword_1009CE8D0, sub_1005A9688);
    v20 = (id)qword_100A1ECD8;
    v21 = v45;
    Logger.init(_:)(v20);
    v22 = v44;
    v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 16))(v7, v19, v5);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.error.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = swift_slowAlloc(32, -1);
      v49 = v43;
      *(_DWORD *)v26 = 136315138;
      v39 = v26 + 4;
      v27 = sub_100008DB0(&qword_1009DF7B8, (uint64_t (*)(uint64_t))&type metadata accessor for LocationMovement, (uint64_t)&protocol conformance descriptor for LocationMovement);
      v28 = dispatch thunk of CustomStringConvertible.description.getter(v5, v27);
      v30 = v29;
      v48 = sub_100040F58(v28, v29, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v48, &v49, v39, v26 + 12);
      v31 = swift_bridgeObjectRelease(v30);
      (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v7, v5, v31);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Unable to get destination for movement %s", v26, 0xCu);
      v32 = v43;
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v26, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
    }

    v36 = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v21, v47);
    v37 = LocationMovement.direction.getter(v36);
    result = static LocationMovement.Direction.== infix(_:_:)(v37 & 1, 0);
    if ((result & 1) != 0)
      return dispatch thunk of LocationControlling.failedAttemptToNavigateToNextPage()(ObjectType, v42);
  }
  else
  {
    v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    v34 = LocationMovement.direction.getter(v33);
    sub_1003B52DC(v34 & 1, v16, v43 & 1);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return result;
}

uint64_t sub_1003B52DC(char a1, char *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t KeyPath;
  uint64_t v26;
  int v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  void *v42;
  double v43;
  id v44;
  uint64_t v45;
  uint64_t ObjectType;
  void (*v47)(_QWORD *, char *, uint64_t);
  _QWORD *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  id v63;
  char *v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  int v72;
  _QWORD *v73;
  _QWORD *v74;
  char *v75;
  char *v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82[3];

  v4 = v3;
  v77 = a3;
  v76 = a2;
  v72 = a1 & 1;
  v5 = type metadata accessor for Logger(0);
  v78 = *(_QWORD *)(v5 - 8);
  v79 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v75 = (char *)&v71 - v9;
  v10 = type metadata accessor for SpreadPaginationEntity(0);
  v80 = *(uint8_t **)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v13);
  v71 = (uint64_t)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v73 = (uint64_t *)((char *)&v71 - v16);
  __chkstk_darwin(v17);
  v74 = (uint64_t *)((char *)&v71 - v18);
  __chkstk_darwin(v19);
  v21 = (char *)&v71 - v20;
  __chkstk_darwin(v22);
  v24 = (uint64_t *)((char *)&v71 - v23);
  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v26 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v24, v4, KeyPath);
  swift_release(KeyPath);
  swift_release(v26);
  sub_10002CD84((uint64_t)v24, (uint64_t)v21, _s14descr1008F7311C5StateOMa);
  v27 = 1 << swift_getEnumCaseMultiPayload(v21, v13);
  if ((v27 & 0x47) != 0)
  {
    sub_10002C8F0((uint64_t)v21, _s14descr1008F7311C5StateOMa);
  }
  else if ((v27 & 0x38) != 0)
  {
    sub_10002C8F0((uint64_t)v21, _s14descr1008F7311C5StateOMa);
    sub_10002C8F0((uint64_t)v24, _s14descr1008F7311C5StateOMa);
    if (qword_1009CE8D0 != -1)
      swift_once(&qword_1009CE8D0, sub_1005A9688);
    Logger.init(_:)((id)qword_100A1ECD8);
    v28 = swift_retain_n(v4, 2);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v82[0] = v32;
      *(_DWORD *)v31 = 136315138;
      v80 = v31 + 4;
      v33 = swift_getKeyPath(&unk_10071FE88);
      v34 = swift_getKeyPath(&unk_10071FEB0);
      v35 = v74;
      static Published.subscript.getter(v74, v4, v33);
      swift_release(v33);
      swift_release(v34);
      sub_100568D44();
      v37 = v36;
      v39 = v38;
      sub_10002C8F0((uint64_t)v35, _s14descr1008F7311C5StateOMa);
      v81 = sub_100040F58(v37, v39, v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, v82, v80, v31 + 12);
      swift_release_n(v4, 2);
      swift_bridgeObjectRelease(v39);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unable to turn during state %s", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);

    }
    else
    {

      swift_release_n(v4, 2);
    }
    v69 = *(uint64_t (**)(char *, uint64_t))(v78 + 8);
    v70 = v7;
    return v69(v70, v79);
  }
  sub_10002C8F0((uint64_t)v24, _s14descr1008F7311C5StateOMa);
  if ((v77 & 1) != 0)
  {
    swift_beginAccess(v4 + 56, v82, 0, 0);
    v40 = *(_QWORD *)(v4 + 56);
    if (v40)
    {
      v41 = swift_retain(*(_QWORD *)(v4 + 56));
      v42 = (void *)dispatch thunk of ViewControllerProvider.viewController.getter(v41);
      *(_QWORD *)&v43 = swift_release(v40).n128_u64[0];
      if (v42)
      {
        v44 = objc_msgSend(v42, "view", v43);

        if (v44)
        {
          v45 = *(_QWORD *)(v4 + 24);
          ObjectType = swift_getObjectType();
          dispatch thunk of LocationControlling.currentSpread.getter(ObjectType, v45);
          v47 = (void (*)(_QWORD *, char *, uint64_t))*((_QWORD *)v80 + 2);
          v48 = v74;
          v47(v74, v12, v10);
          v49 = (int *)_s14descr1008F7311C5StateO21CapturingTurnSnapshotVMa(0);
          v47((_QWORD *)((char *)v48 + v49[7]), v76, v10);
          *(_QWORD *)((char *)v48 + v49[5]) = v44;
          *((_BYTE *)v48 + v49[6]) = v72;
          swift_storeEnumTagMultiPayload(v48, v13, 0);
          v50 = swift_getKeyPath(&unk_10071FE88);
          v51 = swift_getKeyPath(&unk_10071FEB0);
          v52 = v44;
          v53 = v73;
          static Published.subscript.getter(v73, v4, v50);
          swift_release(v50);
          swift_release(v51);
          v54 = swift_getKeyPath(&unk_10071FE88);
          v55 = swift_getKeyPath(&unk_10071FEB0);
          v56 = v71;
          sub_10002CD84((uint64_t)v48, v71, _s14descr1008F7311C5StateOMa);
          swift_retain(v4);
          static Published.subscript.setter(v56, v4, v54, v55);
          sub_1003B3A60((uint64_t)v53);
          sub_10002C8F0((uint64_t)v48, _s14descr1008F7311C5StateOMa);
          sub_10002C8F0((uint64_t)v53, _s14descr1008F7311C5StateOMa);

          return (*((uint64_t (**)(char *, uint64_t))v80 + 1))(v12, v10);
        }
      }
    }
  }
  v58 = *(_QWORD *)(v4 + 24);
  v59 = swift_getObjectType();
  dispatch thunk of LocationControlling.currentSpread.getter(v59, v58);
  v60 = sub_100008DB0((unint64_t *)&qword_1009E8E80, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
  v61 = v76;
  v62 = dispatch thunk of static Equatable.== infix(_:_:)(v76, v12, v10, v60);
  (*((void (**)(char *, uint64_t))v80 + 1))(v12, v10);
  if ((v62 & 1) == 0)
    return dispatch thunk of LocationControlling.moveTo(spread:)(v61, v59, v58);
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v63 = (id)qword_100A1ECD8;
  v64 = v75;
  v65 = Logger.init(_:)(v63);
  v66 = Logger.logObject.getter(v65);
  v67 = static os_log_type_t.info.getter(v66);
  if (os_log_type_enabled(v66, v67))
  {
    v68 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v68 = 0;
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "Skipping turn, we are already at destination", v68, 2u);
    swift_slowDealloc(v68, -1, -1);
  }

  v69 = *(uint64_t (**)(char *, uint64_t))(v78 + 8);
  v70 = v64;
  return v69(v70, v79);
}

uint64_t sub_1003B5A20(char *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t ObjectType;
  char v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __n128 v24;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = type metadata accessor for SpreadPaginationEntity(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v29 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v14 = dispatch thunk of LocationControlling.direction(to:)(a1, ObjectType, v12);
  if (v14 != 2)
    return sub_1003B52DC(v14 & 1, a1, a2 & 1);
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  Logger.init(_:)((id)qword_100A1ECD8);
  v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v8, a1, v5);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.error.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v19 = swift_slowAlloc(32, -1);
    v31 = v19;
    v28 = v9;
    *(_DWORD *)v18 = 136315138;
    v27 = v18 + 4;
    v20 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
    v21 = dispatch thunk of CustomStringConvertible.description.getter(v5, v20);
    v23 = v22;
    v30 = sub_100040F58(v21, v22, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v27, v18 + 12);
    v24 = swift_bridgeObjectRelease(v23);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v24);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Unable to determine movement direction to destination %s", v18, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v28);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v11, v9);
  }
}

uint64_t sub_1003B5CF4(double a1, double a2, double a3, double a4)
{
  return sub_1003B6858((void (*)(_QWORD *, double, double, double, double))sub_1003B5D00, a1, a2, a3, a4);
}

uint64_t sub_1003B5D00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D2>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  void *v47;
  double v48;
  id v49;
  uint64_t KeyPath;
  uint64_t v51;
  uint64_t v52;
  int EnumCaseMultiPayload;
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  os_log_type_t v62;
  _BOOL4 v63;
  uint64_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t ObjectType;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  char *v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  id v94;
  char *v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int *v112;
  void *v113;
  uint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t);
  char *v117;
  id v118;
  uint64_t v119;
  id v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  id v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145[24];

  v127 = a1;
  v143 = a2;
  v7 = sub_10004CFD4(&qword_1009D51F8);
  __chkstk_darwin(v7);
  v124 = (uint64_t)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  __chkstk_darwin(v125);
  v126 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Logger(0);
  v140 = *(_QWORD *)(v10 - 8);
  v141 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v128 = (char *)&v115 - v14;
  __chkstk_darwin(v15);
  v122 = (char *)&v115 - v16;
  v17 = _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
  v133 = *(id *)(v17 - 8);
  __chkstk_darwin(v17);
  v123 = (uint64_t)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v129 = (uint64_t)&v115 - v20;
  v21 = type metadata accessor for LocationMovement(0);
  v132 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v23 = (char *)&v115 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v24);
  v26 = (char *)&v115 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v131 = (char *)&v115 - v28;
  __chkstk_darwin(v29);
  v130 = (char *)&v115 - v30;
  v31 = sub_10004CFD4(&qword_1009DF7B0);
  __chkstk_darwin(v31);
  v33 = (char *)&v115 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v134 = (uint64_t)&v115 - v35;
  v144 = _s14descr1008F7311C5StateOMa(0);
  v142 = *(_QWORD *)(v144 - 8);
  __chkstk_darwin(v144);
  v37 = (uint64_t *)((char *)&v115 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = _s14descr1008F7311C5StateO9ResettingVMa(0);
  __chkstk_darwin(v38);
  v40 = (char *)&v115 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for SpreadPaginationEntity(0);
  v138 = *(_QWORD *)(v41 - 8);
  v139 = v41;
  __chkstk_darwin(v41);
  v135 = (char *)&v115 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v137 = (char *)&v115 - v44;
  swift_beginAccess(v4 + 56, v145, 0, 0);
  v136 = v4;
  v45 = *(_QWORD *)(v4 + 56);
  if (v45)
  {
    v46 = swift_retain(*(_QWORD *)(v4 + 56));
    v47 = (void *)dispatch thunk of ViewControllerProvider.viewController.getter(v46);
    *(_QWORD *)&v48 = swift_release(v45).n128_u64[0];
    if (v47)
    {
      v49 = objc_msgSend(v47, "view", v48);

      if (v49)
      {
        v121 = v17;
        KeyPath = swift_getKeyPath(&unk_10071FE88);
        v51 = swift_getKeyPath(&unk_10071FEB0);
        v52 = v136;
        static Published.subscript.getter(v37, v136, KeyPath);
        swift_release(KeyPath);
        swift_release(v51);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v37, v144);
        v117 = v26;
        v119 = v21;
        if (EnumCaseMultiPayload == 6)
        {
          sub_10002C960((uint64_t)v37, (uint64_t)v40, _s14descr1008F7311C5StateO9ResettingVMa);
          v54 = v137;
          v55 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
          v56 = v139;
          v55(v137, v40, v139);
          v118 = *(id *)&v40[*(int *)(_s14descr1008F7311C5StateO4TurnVMa(0) + 20)];
          sub_10002C8F0((uint64_t)v40, _s14descr1008F7311C5StateO4TurnVMa);
        }
        else
        {
          sub_10002C8F0((uint64_t)v37, _s14descr1008F7311C5StateOMa);
          v69 = *(_QWORD *)(v52 + 24);
          ObjectType = swift_getObjectType();
          v54 = v137;
          dispatch thunk of LocationControlling.currentSpread.getter(ObjectType, v69);
          v118 = objc_msgSend(v49, "snapshotViewAfterScreenUpdates:", 0);
          v56 = v139;
          v55 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
        }
        v71 = (uint64_t)v135;
        v116 = (void (*)(char *, uint64_t, uint64_t))v55;
        v55(v135, v54, v56);
        v120 = v49;
        static LocationMovement.spreadBackward.getter(v120);
        v72 = *(_QWORD *)(v52 + 24);
        v73 = swift_getObjectType();
        v74 = (uint64_t)v130;
        LocationControlling.destination(for:)(v23, v73, v72);
        v75 = *(uint64_t (**)(char *, uint64_t))(v132 + 8);
        v76 = v119;
        v77 = v75(v23, v119);
        static LocationMovement.spreadForward.getter(v77);
        v78 = (uint64_t)v131;
        LocationControlling.destination(for:)(v23, v73, v72);
        v75(v23, v76);
        v79 = v120;
        v80 = v134;
        sub_1002633AC(v71, v120, v74, v78, v134, a3, a4);
        sub_10000B5E4(v80, (uint64_t)v33, &qword_1009DF7B0);
        if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v133 + 6))(v33, 1, v121) == 1)
        {
          sub_100010960((uint64_t)v33, &qword_1009DF7B0);
          v64 = v142;
          if (qword_1009CE8D0 != -1)
            swift_once(&qword_1009CE8D0, sub_1005A9688);
          v81 = (id)qword_100A1ECD8;
          v82 = v128;
          v83 = Logger.init(_:)(v81);
          v84 = Logger.logObject.getter(v83);
          v85 = static os_log_type_t.error.getter(v84);
          if (os_log_type_enabled(v84, v85))
          {
            v86 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v86 = 0;
            _os_log_impl((void *)&_mh_execute_header, v84, v85, "CapturingDragSnapshot values missing, cannot drag", v86, 2u);
            swift_slowDealloc(v86, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v140 + 8))(v82, v141);
          sub_100010960(v80, &qword_1009DF7B0);
          (*(void (**)(char *, uint64_t))(v138 + 8))(v137, v139);
          v67 = v143;
          v68 = v144;
          v87 = v143;
          v88 = v144;
          v89 = 7;
        }
        else
        {
          v90 = v129;
          sub_10002C960((uint64_t)v33, v129, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
          v91 = (uint64_t)v117;
          sub_10026154C();
          v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v91, 1, v139);
          v64 = v142;
          if (v92 == 1)
          {

            sub_100010960(v91, (uint64_t *)&unk_1009E8E70);
          }
          else
          {
            sub_100010960(v91, (uint64_t *)&unk_1009E8E70);
            if (v118)
            {
              v93 = qword_1009CE8D0;
              v133 = v118;
              if (v93 != -1)
                swift_once(&qword_1009CE8D0, sub_1005A9688);
              v94 = (id)qword_100A1ECD8;
              v95 = v122;
              v96 = Logger.init(_:)(v94);
              v97 = Logger.logObject.getter(v96);
              v98 = static os_log_type_t.info.getter(v97);
              if (os_log_type_enabled(v97, v98))
              {
                v99 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v99 = 0;
                _os_log_impl((void *)&_mh_execute_header, v97, v98, "Dragging while already doing something", v99, 2u);
                swift_slowDealloc(v99, -1, -1);
              }

              (*(void (**)(char *, uint64_t))(v140 + 8))(v95, v141);
              sub_10035FDE8();
              v100 = v123;
              sub_10002CD84(v90, v123, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
              v101 = v135;
              v102 = v139;
              v116(v135, v100, v139);
              v103 = v121;
              v104 = *(void **)(v100 + *(int *)(v121 + 20));
              v105 = v124;
              sub_10000B5E4(v100 + *(int *)(v121 + 24), v124, &qword_1009D51F8);
              v106 = *(_QWORD *)(v100 + *(int *)(v103 + 28));
              v107 = *(_QWORD *)(v100 + *(int *)(v103 + 32));
              v108 = v104;
              sub_10002C8F0(v100, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
              v109 = v138;
              v110 = (uint64_t)v126;
              (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v126, v101, v102);
              v111 = v90;
              v112 = (int *)v125;
              v113 = v133;
              *(_QWORD *)(v110 + *(int *)(v125 + 20)) = v133;
              *(_QWORD *)(v110 + v112[6]) = v108;
              sub_1003BD89C(v105, v110 + v112[7]);

              *(_QWORD *)(v110 + v112[8]) = 0;
              *(_QWORD *)(v110 + v112[9]) = v106;
              *(_QWORD *)(v110 + v112[10]) = v107;
              sub_10002C8F0(v111, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
              sub_100010960(v80, &qword_1009DF7B0);
              (*(void (**)(char *, uint64_t))(v109 + 8))(v137, v102);
              v67 = v143;
              sub_10002C960(v110, v143, _s14descr1008F7311C5StateO8DraggingVMa);
              v87 = v67;
              v68 = v144;
              v88 = v144;
              v89 = 5;
              goto LABEL_28;
            }

          }
          sub_100010960(v80, &qword_1009DF7B0);
          (*(void (**)(char *, uint64_t))(v138 + 8))(v137, v139);
          v67 = v143;
          sub_10002C960(v90, v143, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
          v87 = v67;
          v68 = v144;
          v88 = v144;
          v89 = 3;
        }
LABEL_28:
        swift_storeEnumTagMultiPayload(v87, v88, v89);
        v66 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v67, v66, 1, v68);
      }
    }
  }
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v57 = Logger.init(_:)((id)qword_100A1ECD8);
  v58 = Logger.logObject.getter(v57);
  v62 = static os_log_type_t.debug.getter(v58, v59, v60, v61);
  v63 = os_log_type_enabled(v58, v62);
  v64 = v142;
  if (v63)
  {
    v65 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v65 = 0;
    _os_log_impl((void *)&_mh_execute_header, v58, v62, "Abandoning drag, no origin view", v65, 2u);
    swift_slowDealloc(v65, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v140 + 8))(v12, v141);
  v66 = 1;
  v67 = v143;
  v68 = v144;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56))(v67, v66, 1, v68);
}

uint64_t sub_1003B684C(double a1, double a2, double a3, double a4)
{
  return sub_1003B6858((void (*)(_QWORD *, double, double, double, double))sub_1003B6B08, a1, a2, a3, a4);
}

uint64_t sub_1003B6858(void (*a1)(_QWORD *, double, double, double, double), double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_QWORD *, double, double, double, double);

  v34 = a1;
  v10 = sub_10004CFD4(&qword_1009DF780);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s14descr1008F7311C5StateOMa(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v33 - v18);
  __chkstk_darwin(v20);
  v22 = (uint64_t *)((char *)&v33 - v21);
  __chkstk_darwin(v23);
  v25 = (char *)&v33 - v24;
  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v27 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v22, v5, KeyPath);
  swift_release(KeyPath);
  swift_release(v27);
  v34(v22, a2, a3, a4, a5);
  sub_10002C8F0((uint64_t)v22, _s14descr1008F7311C5StateOMa);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_100010960((uint64_t)v12, &qword_1009DF780);
  sub_10002C960((uint64_t)v12, (uint64_t)v25, _s14descr1008F7311C5StateOMa);
  sub_10002CD84((uint64_t)v25, (uint64_t)v22, _s14descr1008F7311C5StateOMa);
  v29 = swift_getKeyPath(&unk_10071FE88);
  v30 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v19, v5, v29);
  swift_release(v29);
  swift_release(v30);
  v31 = swift_getKeyPath(&unk_10071FE88);
  v32 = swift_getKeyPath(&unk_10071FEB0);
  sub_10002CD84((uint64_t)v22, (uint64_t)v16, _s14descr1008F7311C5StateOMa);
  swift_retain(v5);
  static Published.subscript.setter(v16, v5, v31, v32);
  sub_1003B3A60((uint64_t)v19);
  sub_10002C8F0((uint64_t)v22, _s14descr1008F7311C5StateOMa);
  sub_10002C8F0((uint64_t)v19, _s14descr1008F7311C5StateOMa);
  return sub_10002C8F0((uint64_t)v25, _s14descr1008F7311C5StateOMa);
}

uint64_t sub_1003B6B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D2>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, int *);
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v60 = a2;
  v7 = type metadata accessor for Logger(0);
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  __chkstk_darwin(v7);
  v55 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s14descr1008F7311C5StateOMa(0);
  v58 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v54 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v53 - v12;
  v14 = sub_10004CFD4(&qword_1009D55C8);
  __chkstk_darwin(v14);
  v53 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v53 - v17;
  v19 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
  v20 = *((_QWORD *)v19 - 1);
  __chkstk_darwin(v19);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v53 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v53 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v53 - v30;
  v59 = a1;
  sub_10002CD84(a1, (uint64_t)v13, _s14descr1008F7311C5StateOMa);
  if ((swift_getEnumCaseMultiPayload(v13, v9) & 0xFFFFFFFE) == 4)
  {
    sub_10002C960((uint64_t)v13, (uint64_t)v28, _s14descr1008F7311C5StateO8DraggingVMa);
    sub_10002C960((uint64_t)v28, (uint64_t)v18, _s14descr1008F7311C5StateO8DraggingVMa);
    v32 = *(void (**)(char *, uint64_t, uint64_t, int *))(v20 + 56);
    v32(v18, 0, 1, v19);
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t, int *))(v20 + 56);
    v32(v18, 1, 1, v19);
    sub_10002C8F0((uint64_t)v13, _s14descr1008F7311C5StateOMa);
  }
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_100010960((uint64_t)v18, &qword_1009D55C8);
    if (qword_1009CE8D0 != -1)
      swift_once(&qword_1009CE8D0, sub_1005A9688);
    v33 = (id)qword_100A1ECD8;
    v34 = v55;
    Logger.init(_:)(v33);
    v35 = v54;
    v36 = sub_10002CD84(v59, v54, _s14descr1008F7311C5StateOMa);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.error.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(12, -1);
      v40 = swift_slowAlloc(32, -1);
      v59 = v9;
      v41 = v40;
      v62 = v40;
      *(_DWORD *)v39 = 136315138;
      sub_100568D44();
      v43 = v42;
      v61 = sub_100040F58(v44, v42, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v39 + 4, v39 + 12);
      swift_bridgeObjectRelease(v43);
      sub_10002C8F0(v35, _s14descr1008F7311C5StateOMa);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Unable to make dragUpdateState from %s", v39, 0xCu);
      v45 = 1;
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      v46 = v41;
      v9 = v59;
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v57);
    }
    else
    {
      sub_10002C8F0(v35, _s14descr1008F7311C5StateOMa);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v57);
      v45 = 1;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v60, v45, 1, v9);
  }
  sub_10002C960((uint64_t)v18, (uint64_t)v31, _s14descr1008F7311C5StateO8DraggingVMa);
  sub_10002CD84(v59, v60, _s14descr1008F7311C5StateOMa);
  sub_10002CD84((uint64_t)v31, (uint64_t)v25, _s14descr1008F7311C5StateO8DraggingVMa);
  result = sub_10002CD84((uint64_t)v25, (uint64_t)v22, _s14descr1008F7311C5StateO8DraggingVMa);
  v48 = v19[8];
  v49 = *(_QWORD *)&v25[v48];
  v50 = __OFADD__(v49, 1);
  v51 = v49 + 1;
  if (!v50)
  {
    *(_QWORD *)&v22[v48] = v51;
    *(double *)&v22[v19[9]] = a3;
    sub_10002C8F0((uint64_t)v25, _s14descr1008F7311C5StateO8DraggingVMa);
    *(double *)&v22[v19[10]] = a4;
    v52 = v53;
    sub_10002C960((uint64_t)v22, v53, _s14descr1008F7311C5StateO8DraggingVMa);
    v32((char *)v52, 0, 1, v19);
    sub_1002618E0(v52);
    sub_10002C8F0((uint64_t)v31, _s14descr1008F7311C5StateO8DraggingVMa);
    v45 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v60, v45, 1, v9);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003B7030(int a1, double a2, double a3, double a4, double a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  _BOOL4 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v75;
  int v76;
  uint64_t v77;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char v90;
  uint64_t v91;
  int EnumCaseMultiPayload;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t ObjectType;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(char *, uint64_t);
  id v129;
  char *v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint8_t *v134;
  id v135;
  char *v136;
  char *v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  __n128 v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  _QWORD *v170;
  char *v171;
  uint64_t v172;
  _QWORD *v173;
  char *v174;
  char *v175;
  _QWORD *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  double v194;
  double v195;
  uint64_t v196;
  uint64_t v197;

  v6 = v5;
  LODWORD(v190) = a1;
  v11 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v11);
  v186 = (char *)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s14descr1008F7311C5StateO7TurningVMa(0);
  v180 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v172 = (uint64_t)&v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v181 = v17;
  v182 = (uint64_t)&v166 - v16;
  __chkstk_darwin(v18);
  v191 = (uint64_t)&v166 - v19;
  v20 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v20);
  v178 = (char *)&v166 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for SpreadPaginationEntity(0);
  v179 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v24 = (char *)&v166 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v171 = (char *)&v166 - v26;
  __chkstk_darwin(v27);
  v29 = (char *)&v166 - v28;
  v30 = sub_10004CFD4(&qword_1009DF780);
  __chkstk_darwin(v30);
  v32 = (char *)&v166 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = _s14descr1008F7311C5StateOMa(0);
  v189 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v177 = (uint64_t)&v166 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v187 = (uint64_t)&v166 - v35;
  __chkstk_darwin(v36);
  v38 = (uint64_t *)((char *)&v166 - v37);
  __chkstk_darwin(v39);
  v176 = (uint64_t *)((char *)&v166 - v40);
  __chkstk_darwin(v41);
  v184 = (uint64_t)&v166 - v42;
  __chkstk_darwin(v43);
  v45 = (uint64_t *)((char *)&v166 - v44);
  __chkstk_darwin(v46);
  v48 = (char *)&v166 - v47;
  v192 = type metadata accessor for Logger(0);
  v188 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v174 = (char *)&v166 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v168 = (char *)&v166 - v51;
  __chkstk_darwin(v52);
  v54 = (char *)&v166 - v53;
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v167 = v24;
  v175 = v29;
  v55 = Logger.init(_:)((id)qword_100A1ECD8);
  v56 = Logger.logObject.getter(v55);
  v57 = static os_log_type_t.info.getter(v56);
  v58 = os_log_type_enabled(v56, v57);
  v183 = v22;
  if (v58)
  {
    v59 = swift_slowAlloc(28, -1);
    v60 = swift_slowAlloc(64, -1);
    v169 = v48;
    v61 = v60;
    v196 = v60;
    *(_DWORD *)v59 = 136315650;
    v170 = v6;
    v194 = a2;
    v195 = a3;
    type metadata accessor for CGPoint(0);
    v173 = v38;
    v63 = v62;
    v185 = v45;
    v64 = String.init<A>(describing:)(&v194, v62);
    v66 = v65;
    v194 = COERCE_DOUBLE(sub_100040F58(v64, v65, &v196));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v194, &v195, v59 + 4, v59 + 12);
    swift_bridgeObjectRelease(v66);
    *(_WORD *)(v59 + 12) = 2080;
    v194 = a4;
    v195 = a5;
    v67 = String.init<A>(describing:)(&v194, v63);
    v69 = v68;
    v194 = COERCE_DOUBLE(sub_100040F58(v67, v68, &v196));
    v6 = v170;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v194, &v195, v59 + 14, v59 + 22);
    v70 = v69;
    v38 = v173;
    swift_bridgeObjectRelease(v70);
    *(_WORD *)(v59 + 22) = 1024;
    v71 = v190;
    LODWORD(v194) = v190 & 1;
    v45 = v185;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v194, (char *)&v194 + 4, v59 + 24, v59 + 28);
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "Drag end with translation: %s velocity: %s success: %{BOOL}d", (uint8_t *)v59, 0x1Cu);
    swift_arrayDestroy(v61, 2, (char *)&type metadata for Any + 8);
    v72 = v61;
    v48 = v169;
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v59, -1, -1);

    v73 = *(void (**)(char *, uint64_t))(v188 + 8);
    v73(v54, v192);
  }
  else
  {

    v73 = *(void (**)(char *, uint64_t))(v188 + 8);
    v73(v54, v192);
    v71 = v190;
  }
  KeyPath = swift_getKeyPath(&unk_10071FE88);
  v75 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v45, v6, KeyPath);
  swift_release(KeyPath);
  swift_release(v75);
  sub_1003B8024((uint64_t)v45, v71 & 1, (uint64_t)v32, a2, a4);
  sub_10002C8F0((uint64_t)v45, _s14descr1008F7311C5StateOMa);
  v76 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v189 + 48))(v32, 1, v193);
  v77 = v191;
  if (v76 == 1)
    return sub_100010960((uint64_t)v32, &qword_1009DF780);
  v79 = v73;
  sub_10002C960((uint64_t)v32, (uint64_t)v48, _s14descr1008F7311C5StateOMa);
  v80 = v6[6];
  v81 = swift_getKeyPath(&unk_10071FEF8);
  v194 = *(double *)&v80;
  v82 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v194, v81, v82);
  swift_release(v81);
  v83 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v80 + 80));
  v85 = v84;
  v87 = PageTurnStyle.rawValue.getter(0);
  v88 = v86;
  if (v83 == v87 && v85 == v86)
  {
    swift_bridgeObjectRelease_n(v85, 2);
    v89 = v186;
  }
  else
  {
    v90 = _stringCompareWithSmolCheck(_:_:expecting:)(v83, v85, v87, v86, 0);
    swift_bridgeObjectRelease(v85);
    swift_bridgeObjectRelease(v88);
    v89 = v186;
    if ((v90 & 1) == 0)
    {
      v99 = v193;
      swift_storeEnumTagMultiPayload(v45, v193, 7);
      v100 = swift_getKeyPath(&unk_10071FE88);
      v101 = (uint64_t)v45;
      v102 = swift_getKeyPath(&unk_10071FEB0);
      static Published.subscript.getter(v38, v6, v100);
      swift_release(v100);
      swift_release(v102);
      v103 = swift_getKeyPath(&unk_10071FE88);
      v104 = swift_getKeyPath(&unk_10071FEB0);
      v105 = v187;
      sub_10002CD84(v101, v187, _s14descr1008F7311C5StateOMa);
      swift_retain(v6);
      static Published.subscript.setter(v105, v6, v103, v104);
      sub_1003B3A60((uint64_t)v38);
      sub_10002C8F0(v101, _s14descr1008F7311C5StateOMa);
      sub_10002C8F0((uint64_t)v38, _s14descr1008F7311C5StateOMa);
      v106 = v177;
      sub_10002CD84((uint64_t)v48, v177, _s14descr1008F7311C5StateOMa);
      if (swift_getEnumCaseMultiPayload(v106, v99) == 2)
      {
        v107 = v172;
        sub_10002C960(v106, v172, _s14descr1008F7311C5StateO7TurningVMa);
        v108 = _s14descr1008F7311C5StateO4TurnVMa(0);
        sub_1003B52DC(*(_BYTE *)(v107 + *(int *)(v108 + 24)), (char *)(v107 + *(int *)(v108 + 28)), 1);
        sub_10002C8F0(v107, _s14descr1008F7311C5StateO7TurningVMa);
        v109 = (uint64_t)v48;
      }
      else
      {
        sub_10002C8F0((uint64_t)v48, _s14descr1008F7311C5StateOMa);
        v109 = v106;
      }
      return sub_10002C8F0(v109, _s14descr1008F7311C5StateOMa);
    }
  }
  v91 = v184;
  sub_10002CD84((uint64_t)v48, v184, _s14descr1008F7311C5StateOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v91, v193);
  if (EnumCaseMultiPayload == 2)
  {
    v185 = v45;
    sub_10002C960(v91, v77, _s14descr1008F7311C5StateO7TurningVMa);
    v110 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v89, 1, 1, v110);
    v111 = swift_allocObject(&unk_100901E40, 24, 7);
    swift_weakInit(v111 + 16, v6);
    v112 = v182;
    sub_10002CD84(v77, v182, _s14descr1008F7311C5StateO7TurningVMa);
    v113 = qword_1009CE298;
    swift_retain(v111);
    v114 = (uint64_t)v89;
    if (v113 != -1)
      swift_once(&qword_1009CE298, sub_1003B32A0);
    v115 = qword_1009DF598;
    v116 = sub_100008DB0(&qword_1009DF798, (uint64_t (*)(uint64_t))type metadata accessor for CounterActor.ActorType, (uint64_t)&unk_10071FE60);
    v117 = *(unsigned __int8 *)(v180 + 80);
    v118 = (v117 + 40) & ~v117;
    v119 = (_QWORD *)swift_allocObject(&unk_100902098, v118 + v181, v117 | 7);
    v119[2] = v115;
    v119[3] = v116;
    v119[4] = v111;
    sub_10002C960(v112, (uint64_t)v119 + v118, _s14descr1008F7311C5StateO7TurningVMa);
    swift_retain(v115);
    swift_release(v111);
    v120 = sub_10030C178(v114, (uint64_t)&unk_1009DF7A0, (uint64_t)v119);
    swift_release(v120);
    sub_10002C8F0(v191, _s14descr1008F7311C5StateO7TurningVMa);
LABEL_32:
    v45 = v185;
    goto LABEL_33;
  }
  if (EnumCaseMultiPayload == 7)
  {
    v93 = swift_getKeyPath(&unk_10071FE88);
    v94 = swift_getKeyPath(&unk_10071FEB0);
    v95 = v176;
    static Published.subscript.getter(v176, v6, v93);
    swift_release(v93);
    swift_release(v94);
    v96 = (uint64_t)v178;
    sub_10026154C();
    sub_10002C8F0((uint64_t)v95, _s14descr1008F7311C5StateOMa);
    v97 = v179;
    v98 = v183;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v96, 1, v183) == 1)
    {
      sub_100010960(v96, (uint64_t *)&unk_1009E8E70);
LABEL_24:
      v129 = (id)qword_100A1ECD8;
      v130 = v174;
      v131 = Logger.init(_:)(v129);
      v132 = Logger.logObject.getter(v131);
      v133 = static os_log_type_t.info.getter(v132);
      if (os_log_type_enabled(v132, v133))
      {
        v134 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v134 = 0;
        _os_log_impl((void *)&_mh_execute_header, v132, v133, "Drag failed, no reset possible.", v134, 2u);
        swift_slowDealloc(v134, -1, -1);
      }

      v79(v130, v192);
      goto LABEL_33;
    }
    v185 = v45;
    v121 = v175;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v175, v96, v98);
    v123 = v6[2];
    v122 = v6[3];
    ObjectType = swift_getObjectType();
    v125 = v171;
    v190 = ObjectType;
    v191 = v123;
    v193 = v122;
    dispatch thunk of LocationControlling.currentSpread.getter(ObjectType, v122);
    v126 = sub_100008DB0((unint64_t *)&qword_1009E8E80, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
    LOBYTE(v122) = dispatch thunk of static Equatable.== infix(_:_:)(v125, v121, v98, v126);
    v127 = v97;
    v128 = *(void (**)(char *, uint64_t))(v97 + 8);
    v128(v125, v98);
    if ((v122 & 1) != 0)
    {
      v128(v121, v98);
      v45 = v185;
      goto LABEL_24;
    }
    v173 = v38;
    v135 = (id)qword_100A1ECD8;
    v136 = v168;
    Logger.init(_:)(v135);
    v137 = v167;
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v167, v121, v98);
    v138 = swift_retain_n(v6, 2);
    v139 = Logger.logObject.getter(v138);
    v140 = static os_log_type_t.info.getter(v139);
    v141 = v140;
    v142 = v98;
    if (os_log_type_enabled(v139, v140))
    {
      v143 = swift_slowAlloc(22, -1);
      v169 = v48;
      v144 = v143;
      v189 = swift_slowAlloc(64, -1);
      v194 = *(double *)&v189;
      *(_DWORD *)v144 = 136315394;
      v170 = v6;
      v145 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
      LODWORD(v188) = v141;
      v146 = dispatch thunk of CustomStringConvertible.description.getter(v98, v145);
      v148 = v147;
      v196 = sub_100040F58(v146, v147, (uint64_t *)&v194);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197, v144 + 4, v144 + 12);
      v149 = swift_bridgeObjectRelease(v148);
      ((void (*)(char *, uint64_t, __n128))v128)(v137, v183, v149);
      *(_WORD *)(v144 + 12) = 2080;
      v150 = swift_getKeyPath(&unk_10071FE88);
      v151 = swift_getKeyPath(&unk_10071FEB0);
      v152 = v185;
      static Published.subscript.getter(v185, v170, v150);
      swift_release(v150);
      swift_release(v151);
      sub_100568D44();
      v154 = v153;
      v156 = v155;
      sub_10002C8F0((uint64_t)v152, _s14descr1008F7311C5StateOMa);
      v196 = sub_100040F58(v154, v156, (uint64_t *)&v194);
      v142 = v183;
      v6 = v170;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v196, &v197, v144 + 14, v144 + 22);
      swift_release_n(v6, 2);
      swift_bridgeObjectRelease(v156);
      _os_log_impl((void *)&_mh_execute_header, v139, (os_log_type_t)v188, "Aborting, moving back to %s from state %s", (uint8_t *)v144, 0x16u);
      v157 = v189;
      swift_arrayDestroy(v189, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v157, -1, -1);
      v158 = v144;
      v48 = v169;
      swift_slowDealloc(v158, -1, -1);

    }
    else
    {
      v128(v137, v98);

      swift_release_n(v6, 2);
    }
    v79(v136, v192);
    v159 = v175;
    dispatch thunk of LocationControlling.moveTo(spread:)(v175, v190, v193);
    v128(v159, v142);
    v38 = v173;
    goto LABEL_32;
  }
  sub_10002C8F0(v91, _s14descr1008F7311C5StateOMa);
LABEL_33:
  sub_10002CD84((uint64_t)v48, (uint64_t)v45, _s14descr1008F7311C5StateOMa);
  v160 = swift_getKeyPath(&unk_10071FE88);
  v161 = (uint64_t)v45;
  v162 = swift_getKeyPath(&unk_10071FEB0);
  static Published.subscript.getter(v38, v6, v160);
  swift_release(v160);
  swift_release(v162);
  v163 = swift_getKeyPath(&unk_10071FE88);
  v164 = swift_getKeyPath(&unk_10071FEB0);
  v165 = v187;
  sub_10002CD84(v161, v187, _s14descr1008F7311C5StateOMa);
  swift_retain(v6);
  static Published.subscript.setter(v165, v6, v163, v164);
  sub_1003B3A60((uint64_t)v38);
  sub_10002C8F0(v161, _s14descr1008F7311C5StateOMa);
  sub_10002C8F0((uint64_t)v38, _s14descr1008F7311C5StateOMa);
  v109 = (uint64_t)v48;
  return sub_10002C8F0(v109, _s14descr1008F7311C5StateOMa);
}

uint64_t sub_1003B8024@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D2>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;

  v72 = a2;
  v80 = (char *)a1;
  v81 = a3;
  v8 = sub_10004CFD4(&qword_1009DF7A8);
  __chkstk_darwin(v8);
  v73 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s14descr1008F7311C5StateO9ResettingVMa(0);
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  v11 = __chkstk_darwin(v10);
  v65 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for PageTransitionCompletionState(0, v11);
  v75 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v74 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009DF788);
  __chkstk_darwin(v14);
  v68 = (uint64_t)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = _s14descr1008F7311C5StateO7TurningVMa(0);
  v66 = *(_QWORD *)(v16 - 8);
  v67 = v16;
  __chkstk_darwin(v16);
  v64 = (uint64_t)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = _s14descr1008F7311C5StateOMa(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v78 = (uint64_t)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004CFD4(&qword_1009D55C8);
  __chkstk_darwin(v21);
  v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v71 = (uint64_t)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v63 - v28;
  __chkstk_darwin(v30);
  v79 = (char *)&v63 - v31;
  v32 = sub_10004CFD4(&qword_1009DF780);
  __chkstk_darwin(v32);
  v34 = (char *)&v63 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v37 = (char *)&v63 - v36;
  v76 = v5;
  sub_1003B6B08((uint64_t)v80, (uint64_t)&v63 - v36, a4, a5);
  v80 = v37;
  v38 = v19;
  v39 = v18;
  sub_10000B5E4((uint64_t)v37, (uint64_t)v34, &qword_1009DF780);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v34, 1, v18) == 1)
  {
    sub_100010960((uint64_t)v34, &qword_1009DF780);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
    v40 = v81;
LABEL_7:
    sub_100010960((uint64_t)v80, &qword_1009DF780);
    v44 = &qword_1009D55C8;
    v45 = (uint64_t)v23;
    goto LABEL_8;
  }
  v41 = v78;
  sub_10002CD84((uint64_t)v34, v78, _s14descr1008F7311C5StateOMa);
  if ((swift_getEnumCaseMultiPayload(v41, v18) & 0xFFFFFFFE) == 4)
  {
    sub_10002C960(v41, (uint64_t)v29, _s14descr1008F7311C5StateO8DraggingVMa);
    sub_10002C960((uint64_t)v29, (uint64_t)v23, _s14descr1008F7311C5StateO8DraggingVMa);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
    sub_10002C8F0(v41, _s14descr1008F7311C5StateOMa);
  }
  v42 = (uint64_t)v79;
  sub_10002C8F0((uint64_t)v34, _s14descr1008F7311C5StateOMa);
  v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
  v40 = v81;
  if (v43 == 1)
    goto LABEL_7;
  sub_10002C960((uint64_t)v23, v42, _s14descr1008F7311C5StateO8DraggingVMa);
  v48 = v76;
  v49 = (uint64_t)v73;
  v50 = v71;
  if ((v72 & 1) != 0)
  {
    sub_10002CD84(v42, v71, _s14descr1008F7311C5StateO8DraggingVMa);
    v51 = v68;
    sub_100262CBC(v50, *(_BYTE *)(*(_QWORD *)(v48 + 48) + 16), v68, *(double *)(v48 + 120));
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v51, 1, v67) != 1)
    {
      v59 = v64;
      sub_10002C960(v51, v64, _s14descr1008F7311C5StateO7TurningVMa);
      v61 = v74;
      v60 = v75;
      v62 = v77;
      (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, enum case for PageTransitionCompletionState.completed(_:), v77);
      PassthroughSubject.send(_:)(v61);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v62);
      sub_10002C8F0(v42, _s14descr1008F7311C5StateO8DraggingVMa);
      sub_100010960((uint64_t)v80, &qword_1009DF780);
      sub_10002C960(v59, v40, _s14descr1008F7311C5StateO7TurningVMa);
      v46 = 2;
      goto LABEL_9;
    }
    sub_100010960(v51, &qword_1009DF788);
  }
  sub_10002CD84(v42, v50, _s14descr1008F7311C5StateO8DraggingVMa);
  sub_100263C78(v50, *(_BYTE *)(*(_QWORD *)(v48 + 48) + 16), v49, *(double *)(v48 + 120));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v49, 1, v70) != 1)
  {
    v55 = v65;
    sub_10002C960(v49, v65, _s14descr1008F7311C5StateO9ResettingVMa);
    v57 = v74;
    v56 = v75;
    v58 = v77;
    (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, enum case for PageTransitionCompletionState.cancelled(_:), v77);
    PassthroughSubject.send(_:)(v57);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
    sub_10002C8F0(v42, _s14descr1008F7311C5StateO8DraggingVMa);
    sub_100010960((uint64_t)v80, &qword_1009DF780);
    sub_10002C960(v55, v40, _s14descr1008F7311C5StateO9ResettingVMa);
    v46 = 6;
    goto LABEL_9;
  }
  sub_100010960(v49, &qword_1009DF7A8);
  v53 = v74;
  v52 = v75;
  v54 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v75 + 104))(v74, enum case for PageTransitionCompletionState.unknown(_:), v77);
  PassthroughSubject.send(_:)(v53);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  sub_10002C8F0(v42, _s14descr1008F7311C5StateO8DraggingVMa);
  v44 = &qword_1009DF780;
  v45 = (uint64_t)v80;
LABEL_8:
  sub_100010960(v45, v44);
  v46 = 7;
LABEL_9:
  swift_storeEnumTagMultiPayload(v40, v39, v46);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v40, 0, 1, v39);
}

uint64_t sub_1003B870C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  if (qword_1009CE298 != -1)
    swift_once(&qword_1009CE298, sub_1003B32A0);
  return swift_task_switch(sub_1003B8774, qword_1009DF598, 0);
}

uint64_t sub_1003B8774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 48) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v4 = *(_QWORD *)(v0 + 56);
    v5 = _s14descr1008F7311C5StateO4TurnVMa(0);
    sub_1003B87F8(*(_BYTE *)(v4 + *(int *)(v5 + 24)));
    v3 = swift_release(Strong);
  }
  **(_BYTE **)(v0 + 40) = Strong == 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

void sub_1003B87F8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t inited;
  id v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD aBlock[5];
  uint64_t v35;
  char v36[80];

  v2 = v1;
  v3 = a1 & 1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static LocationMovement.Direction.== infix(_:_:)(v3, 0);
  v13 = 1;
  if ((v12 & 1) == 0)
    v13 = -1;
  v14 = *(_QWORD *)(v2 + 72);
  v15 = v14 + v13;
  if (__OFADD__(v14, v13))
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  *(_QWORD *)(v2 + 72) = v15;
  v16 = v14 + v13;
  if (v15 < 0)
  {
    v16 = -v15;
    if (__OFSUB__(0, v15))
      goto LABEL_10;
  }
  if (v16 >= 5)
  {
    v17 = *(_QWORD *)(v2 + 40);
    v32 = v5;
    v18 = *(void **)(v17 + OBJC_IVAR___BKEngagementManager_eventController);
    v19 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    inited = swift_initStackObject(v19, v36);
    *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
    strcpy((char *)(inited + 32), "numberOfPage");
    *(_BYTE *)(inited + 45) = 0;
    *(_WORD *)(inited + 46) = -5120;
    *(_QWORD *)(inited + 72) = &type metadata for Int;
    *(_QWORD *)(inited + 48) = v15;
    v21 = v18;
    v22 = sub_10003FB0C(inited);
    dispatch thunk of EngagementEventController.submitEvent(_:_:)(0xD00000000000001DLL, 0x80000001007BE9D0, v22);

    swift_bridgeObjectRelease(v22);
    v23 = sub_100059BB4();
    v24 = (void *)static OS_dispatch_queue.main.getter(v23);
    v25 = swift_allocObject(&unk_100901E40, 24, 7);
    swift_weakInit(v25 + 16, v2);
    aBlock[4] = sub_1003BDDB8;
    v35 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1009020B0;
    v26 = _Block_copy(aBlock);
    swift_retain(v25);
    static DispatchQoS.unspecified.getter(v27);
    v33 = _swiftEmptyArrayStorage;
    v28 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v29 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v30 = sub_100065324();
    dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v29, v30, v4, v28);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v31 = v35;
    swift_release(v25);
    swift_release(v31);
  }
}

void sub_1003B8AF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(void **)(Strong + 80);
    if (v4)
      objc_msgSend(v4, "invalidate");
    v5 = objc_msgSend((id)objc_opt_self(NSTimer), "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:", v3, "quicklyTurnedPagesTimerFired:", 0, 0, 2.0);
    v6 = *(void **)(v3 + 80);
    *(_QWORD *)(v3 + 80) = v5;
    swift_release(v3);

  }
}

void sub_1003B8BA0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[15];

  v4[0] = &unk_10071FC78;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = &unk_10071FC90;
  v4[5] = &unk_10071FC90;
  v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[7] = &unk_10071FC90;
  v4[8] = &unk_10071FCA8;
  v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[10] = &unk_10071FCC0;
  v4[11] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[12] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_1003B8C70(319);
  if (v3 <= 0x3F)
  {
    v4[13] = *(_QWORD *)(v2 - 8) + 64;
    v4[14] = &unk_10071FCD8;
    swift_updateClassMetadata2(a1, 256, 15, v4, a1 + 80);
  }
}

void sub_1003B8C70(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009DF688)
  {
    v2 = _s14descr1008F7311C5StateOMa(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009DF688);
  }
}

uint64_t storeEnumTagSinglePayload for PageTurnController.TestDriverState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1003B8D10 + 4 * byte_10071FBE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1003B8D44 + 4 * byte_10071FBE0[v4]))();
}

uint64_t sub_1003B8D44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B8D4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003B8D54);
  return result;
}

uint64_t sub_1003B8D60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003B8D68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1003B8D6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003B8D74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageTurnController.TestDriverState()
{
  return &type metadata for PageTurnController.TestDriverState;
}

unint64_t sub_1003B8D94()
{
  unint64_t result;

  result = qword_1009DF778;
  if (!qword_1009DF778)
  {
    result = swift_getWitnessTable(&unk_10071FD80, &type metadata for PageTurnController.TestDriverState);
    atomic_store(result, (unint64_t *)&qword_1009DF778);
  }
  return result;
}

void sub_1003B8DD8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD, double), unsigned int a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t KeyPath;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  _BYTE v41[4];
  unsigned int v42;
  _BYTE *v43;
  _QWORD *v44;
  _BYTE v45[24];

  v42 = a5;
  v9 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v9);
  v43 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v44 = &v41[-v12];
  __chkstk_darwin(v13);
  v15 = &v41[-v14];
  v16 = sub_10004CFD4(a3);
  v17 = __chkstk_darwin(v16);
  v19 = &v41[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = a4(0, v17);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = &v41[-v22];
  v24 = a2 + 16;
  sub_10000B5E4(a1, (uint64_t)v19, a3);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_100010960((uint64_t)v19, a3);
    swift_beginAccess(v24, v45, 0, 0);
    Strong = swift_weakLoadStrong(v24);
    if (Strong)
    {
      v26 = Strong;
      swift_storeEnumTagMultiPayload(v15, v9, 7);
      KeyPath = swift_getKeyPath(&unk_10071FE88);
      v28 = swift_getKeyPath(&unk_10071FEB0);
      v29 = v44;
      static Published.subscript.getter(v44, v26, KeyPath, v28);
      swift_release(KeyPath);
      swift_release(v28);
      v30 = swift_getKeyPath(&unk_10071FE88);
      v31 = swift_getKeyPath(&unk_10071FEB0);
      v32 = v43;
      sub_10002CD84((uint64_t)v15, (uint64_t)v43, _s14descr1008F7311C5StateOMa);
      swift_retain(v26);
      static Published.subscript.setter(v32, v26, v30, v31);
      sub_1003B3A60(v29);
      sub_10002C8F0((uint64_t)v15, _s14descr1008F7311C5StateOMa);
      sub_10002C8F0((uint64_t)v29, _s14descr1008F7311C5StateOMa);
      swift_release(v26);
    }
  }
  else
  {
    sub_10002C960((uint64_t)v19, (uint64_t)v23, (uint64_t (*)(_QWORD))a4);
    swift_beginAccess(v24, v45, 0, 0);
    v33 = swift_weakLoadStrong(v24);
    if (v33)
    {
      v34 = v33;
      sub_10002CD84((uint64_t)v23, (uint64_t)v15, (uint64_t (*)(_QWORD))a4);
      swift_storeEnumTagMultiPayload(v15, v9, v42);
      v35 = swift_getKeyPath(&unk_10071FE88);
      v36 = swift_getKeyPath(&unk_10071FEB0);
      v37 = v44;
      static Published.subscript.getter(v44, v34, v35, v36);
      swift_release(v35);
      swift_release(v36);
      v38 = swift_getKeyPath(&unk_10071FE88);
      v39 = swift_getKeyPath(&unk_10071FEB0);
      v40 = v43;
      sub_10002CD84((uint64_t)v15, (uint64_t)v43, _s14descr1008F7311C5StateOMa);
      swift_retain(v34);
      static Published.subscript.setter(v40, v34, v38, v39);
      sub_1003B3A60(v37);
      sub_10002C8F0((uint64_t)v15, _s14descr1008F7311C5StateOMa);
      sub_10002C8F0((uint64_t)v37, _s14descr1008F7311C5StateOMa);
      swift_release(v34);
    }
    sub_10002C8F0((uint64_t)v23, (uint64_t (*)(_QWORD))a4);
  }
}

double sub_1003B9178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  double result;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[24];

  v2 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v19[-v6 - 8];
  __chkstk_darwin(v8);
  v10 = &v19[-v9 - 8];
  a1 += 16;
  swift_beginAccess(a1, v19, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v13 = Strong;
    swift_storeEnumTagMultiPayload(v10, v2, 7);
    KeyPath = swift_getKeyPath(&unk_10071FE88);
    v15 = swift_getKeyPath(&unk_10071FEB0);
    static Published.subscript.getter(v7, v13, KeyPath, v15);
    swift_release(KeyPath);
    swift_release(v15);
    v16 = swift_getKeyPath(&unk_10071FE88);
    v17 = swift_getKeyPath(&unk_10071FEB0);
    sub_10002CD84((uint64_t)v10, (uint64_t)v4, _s14descr1008F7311C5StateOMa);
    swift_retain(v13);
    static Published.subscript.setter(v4, v13, v16, v17);
    sub_1003B3A60(v7);
    sub_10002C8F0((uint64_t)v10, _s14descr1008F7311C5StateOMa);
    sub_10002C8F0((uint64_t)v7, _s14descr1008F7311C5StateOMa);
    *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003B9320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  char v26;
  uint64_t (*v27)(char *, uint64_t);
  void **v28;
  uint64_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  unint64_t v36;
  void *v37;
  char *v38;
  double v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  void *v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t (*v60)(char *, uint64_t);
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void **aBlock;
  _QWORD v74[4];
  _QWORD *v75;

  v64 = a3;
  v61 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  __chkstk_darwin(v5);
  v69 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v67 = *(_QWORD *)(v7 - 8);
  v68 = v7;
  __chkstk_darwin(v7);
  v66 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for DispatchTime(0);
  v59 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v58 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v62 = (char *)&v56 - v11;
  v57 = type metadata accessor for Logger(0);
  v56 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SpreadPaginationEntity(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v56 - v19;
  v21 = _s14descr1008F7311C5StateO4TurnVMa(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, a1 + *(int *)(v21 + 28), v14);
  v22 = *(_QWORD *)(v3 + 24);
  v23 = v3;
  ObjectType = swift_getObjectType();
  dispatch thunk of LocationControlling.currentSpread.getter(ObjectType, v22);
  v25 = sub_100008DB0((unint64_t *)&qword_1009E8E80, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
  v72 = v20;
  v26 = dispatch thunk of static Equatable.== infix(_:_:)(v17, v20, v14, v25);
  v27 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  v63 = v14;
  v60 = v27;
  v27(v17, v14);
  if ((v26 & 1) == 0)
    dispatch thunk of LocationControlling.moveTo(spread:)(v72, ObjectType, v22);
  sub_10035FCAC(0);
  v28 = *(void ***)(v23 + 128);
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v29 = Logger.init(_:)((id)qword_100A1ECD8);
  v30 = Logger.logObject.getter(v29);
  v34 = static os_log_type_t.debug.getter(v30, v31, v32, v33);
  if (os_log_type_enabled(v30, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v35 = 134217984;
    aBlock = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v74, v35 + 4, v35 + 12);
    _os_log_impl((void *)&_mh_execute_header, v30, v34, "Waiting for turn to finish, current stateIndex %ld", v35, 0xCu);
    swift_slowDealloc(v35, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v56 + 8))(v13, v57);
  v36 = sub_100059BB4();
  v37 = (void *)static OS_dispatch_queue.main.getter(v36);
  v38 = v58;
  static DispatchTime.now()(v37);
  v39 = sub_10035E804();
  v40 = v62;
  + infix(_:_:)(v38, v39);
  v41 = *(void (**)(char *, uint64_t))(v59 + 8);
  v42 = v65;
  v41(v38, v65);
  v43 = swift_allocObject(&unk_100901E40, 24, 7);
  swift_weakInit(v43 + 16, v23);
  v44 = (_QWORD *)swift_allocObject(&unk_100901F08, 48, 7);
  v44[2] = v43;
  v44[3] = v28;
  v45 = v64;
  v44[4] = v61;
  v44[5] = v45;
  v74[3] = sub_1003BD888;
  v75 = v44;
  aBlock = _NSConcreteStackBlock;
  v74[0] = 1107296256;
  v74[1] = sub_1000147F0;
  v74[2] = &unk_100901F20;
  v46 = _Block_copy(&aBlock);
  v47 = v75;
  swift_retain(v45);
  swift_release(v47);
  v48 = v66;
  static DispatchQoS.unspecified.getter(v49);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v50 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v51 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v52 = sub_100065324();
  v53 = v69;
  v54 = v71;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v51, v52, v71, v50);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v40, v48, v53, v46);
  _Block_release(v46);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v53, v54);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v48, v68);
  v41(v40, v42);
  return v60(v72, v63);
}

void sub_1003B9858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t Strong;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  _BYTE v34[24];

  v4 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v4);
  v33 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v6);
  v8 = &v34[-v7 - 8];
  __chkstk_darwin(v9);
  v11 = &v34[-v10 - 8];
  v12 = sub_10004CFD4(&qword_1009D55C8);
  __chkstk_darwin(v12);
  v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v15 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = &v34[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10000B5E4(a1, (uint64_t)v14, &qword_1009D55C8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100010960((uint64_t)v14, &qword_1009D55C8);
    swift_beginAccess(a2, v34, 0, 0);
    Strong = swift_weakLoadStrong(a2);
    if (Strong)
    {
      v20 = Strong;
      swift_storeEnumTagMultiPayload(v11, v4, 7);
      KeyPath = swift_getKeyPath(&unk_10071FE88);
      v22 = swift_getKeyPath(&unk_10071FEB0);
      static Published.subscript.getter(v8, v20, KeyPath, v22);
      swift_release(KeyPath);
      swift_release(v22);
      v23 = swift_getKeyPath(&unk_10071FE88);
      v24 = swift_getKeyPath(&unk_10071FEB0);
      v25 = v33;
      sub_10002CD84((uint64_t)v11, (uint64_t)v33, _s14descr1008F7311C5StateOMa);
      swift_retain(v20);
      static Published.subscript.setter(v25, v20, v23, v24);
      sub_1003B3A60(v8);
      sub_10002C8F0((uint64_t)v11, _s14descr1008F7311C5StateOMa);
      sub_10002C8F0((uint64_t)v8, _s14descr1008F7311C5StateOMa);
      swift_release(v20);
    }
  }
  else
  {
    sub_10002C960((uint64_t)v14, (uint64_t)v18, _s14descr1008F7311C5StateO8DraggingVMa);
    swift_beginAccess(a2, v34, 0, 0);
    v26 = swift_weakLoadStrong(a2);
    if (v26)
    {
      v27 = v26;
      sub_10002CD84((uint64_t)v18, (uint64_t)v11, _s14descr1008F7311C5StateO8DraggingVMa);
      swift_storeEnumTagMultiPayload(v11, v4, 4);
      v28 = swift_getKeyPath(&unk_10071FE88);
      v29 = swift_getKeyPath(&unk_10071FEB0);
      static Published.subscript.getter(v8, v27, v28, v29);
      swift_release(v28);
      swift_release(v29);
      v30 = swift_getKeyPath(&unk_10071FE88);
      v31 = swift_getKeyPath(&unk_10071FEB0);
      v32 = v33;
      sub_10002CD84((uint64_t)v11, (uint64_t)v33, _s14descr1008F7311C5StateOMa);
      swift_retain(v27);
      static Published.subscript.setter(v32, v27, v30, v31);
      sub_1003B3A60(v8);
      sub_10002C8F0((uint64_t)v11, _s14descr1008F7311C5StateOMa);
      sub_10002C8F0((uint64_t)v8, _s14descr1008F7311C5StateOMa);
      swift_release(v27);
    }
    sub_10002C8F0((uint64_t)v18, _s14descr1008F7311C5StateO8DraggingVMa);
  }
}

uint64_t sub_1003B9C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  id v39;
  double v40;
  double v41;
  id v42;
  id v43;
  double v44;
  double v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  int *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v65;
  NSObject *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;

  v90 = a3;
  v5 = sub_10004CFD4(&qword_1009D51F8);
  __chkstk_darwin(v5);
  v89 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SpreadPaginationEntity(0);
  v87 = *(_QWORD *)(v7 - 8);
  v88 = v7;
  __chkstk_darwin(v7);
  v86 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D55C8);
  __chkstk_darwin(v9);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Logger(0);
  v84 = *(_QWORD *)(v12 - 8);
  v85 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v84 - v16;
  v18 = (int *)_s14descr1008F7311C5StateO21CapturingDragSnapshotVMa(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v91 = (uint8_t *)&v84 - v22;
  v23 = *(_QWORD *)(a2 + 48);
  KeyPath = swift_getKeyPath(&unk_10071FEF8);
  v93 = v23;
  v25 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v93, KeyPath, v25);
  swift_release(KeyPath);
  v26 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v23 + 80));
  v28 = v27;
  v30 = PageTurnStyle.rawValue.getter(0);
  v31 = v29;
  if (v26 == v30 && v28 == v29)
  {
    swift_bridgeObjectRelease_n(v28, 2);
LABEL_5:
    v33 = *(void **)(a1 + v18[5]);
    v34 = (uint64_t)v91;
    sub_10002CD84(a1, (uint64_t)v91, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
    v35 = objc_msgSend(v33, "snapshotViewAfterScreenUpdates:", 0);
    if (v35)
    {
      v36 = v35;
      v37 = objc_msgSend(v35, "superview");
      if (!v37)
        v37 = v36;
      v38 = (void *)objc_opt_self(UITraitCollection);
      v39 = objc_msgSend(v38, "currentTraitCollection");
      objc_msgSend(v39, "displayCornerRadius");
      v41 = v40;

      objc_msgSend(v36, "_setContinuousCornerRadius:", v41);
      v42 = objc_msgSend(v36, "layer");
      objc_msgSend(v42, "setMaskedCorners:", 12);

      v43 = objc_msgSend(v38, "currentTraitCollection");
      objc_msgSend(v43, "displayCornerRadius");
      v45 = v44;

      objc_msgSend(v37, "_setContinuousCornerRadius:", v45);
      v46 = objc_msgSend(v37, "layer");
      objc_msgSend(v46, "setMaskedCorners:", 12);

      v47 = (uint64_t)v91;
      sub_10002CD84((uint64_t)v91, (uint64_t)v20, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
      v49 = v86;
      v48 = v87;
      v50 = v88;
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v86, v20, v88);
      v51 = *(void **)&v20[v18[5]];
      v52 = v89;
      sub_10000B5E4((uint64_t)&v20[v18[6]], v89, &qword_1009D51F8);
      v53 = *(_QWORD *)&v20[v18[7]];
      v54 = *(_QWORD *)&v20[v18[8]];
      v55 = v36;
      v56 = v51;
      sub_10002C8F0((uint64_t)v20, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
      v57 = v50;
      v34 = v47;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v11, v49, v57);
      v58 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
      *(_QWORD *)&v11[v58[5]] = v55;
      *(_QWORD *)&v11[v58[6]] = v56;
      sub_1003BD89C(v52, (uint64_t)&v11[v58[7]]);
      *(_QWORD *)&v11[v58[8]] = 0;
      *(_QWORD *)&v11[v58[9]] = v53;
      *(_QWORD *)&v11[v58[10]] = v54;
      (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v58 - 1) + 56))(v11, 0, 1, v58);
      sub_1003B9858((uint64_t)v11, v90);

      sub_100010960((uint64_t)v11, &qword_1009D55C8);
    }
    else
    {
      if (qword_1009CE8D0 != -1)
        swift_once(&qword_1009CE8D0, sub_1005A9688);
      v59 = Logger.init(_:)((id)qword_100A1ECD8);
      v60 = Logger.logObject.getter(v59);
      v61 = static os_log_type_t.error.getter(v60);
      if (os_log_type_enabled(v60, v61))
      {
        v62 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v62 = 0;
        _os_log_impl((void *)&_mh_execute_header, v60, v61, "Couldn't get origin snapshot", v62, 2u);
        swift_slowDealloc(v62, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v84 + 8))(v17, v85);
      v63 = _s14descr1008F7311C5StateO8DraggingVMa(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v11, 1, 1, v63);
      sub_1003B9858((uint64_t)v11, v90);
      sub_100010960((uint64_t)v11, &qword_1009D55C8);
    }
    return sub_10002C8F0(v34, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
  }
  v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v30, v29, 0);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v31);
  if ((v32 & 1) != 0)
    goto LABEL_5;
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v65 = Logger.init(_:)((id)qword_100A1ECD8);
  v66 = Logger.logObject.getter(v65);
  v70 = static os_log_type_t.debug.getter(v66, v67, v68, v69);
  if (os_log_type_enabled(v66, v70))
  {
    v71 = (uint8_t *)swift_slowAlloc(12, -1);
    v72 = swift_slowAlloc(32, -1);
    v93 = v72;
    *(_DWORD *)v71 = 136315138;
    v91 = v71 + 4;
    v92 = sub_100040F58(0xD000000000000022, 0x80000001007C57A0, &v93);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93, v91, v71 + 12);
    _os_log_impl((void *)&_mh_execute_header, v66, v70, "%s - slide disabled", v71, 0xCu);
    swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v71, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v84 + 8))(v14, v85);
  sub_10002CD84(a1, (uint64_t)v20, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
  v73 = *(void **)(a1 + v18[5]);
  v75 = v86;
  v74 = v87;
  v76 = v88;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v86, v20, v88);
  v77 = *(void **)&v20[v18[5]];
  v78 = v89;
  sub_10000B5E4((uint64_t)&v20[v18[6]], v89, &qword_1009D51F8);
  v79 = *(_QWORD *)&v20[v18[7]];
  v80 = *(_QWORD *)&v20[v18[8]];
  v81 = v73;
  v82 = v77;
  sub_10002C8F0((uint64_t)v20, _s14descr1008F7311C5StateO21CapturingDragSnapshotVMa);
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v11, v75, v76);
  v83 = (int *)_s14descr1008F7311C5StateO8DraggingVMa(0);
  *(_QWORD *)&v11[v83[5]] = v81;
  *(_QWORD *)&v11[v83[6]] = v82;
  sub_1003BD89C(v78, (uint64_t)&v11[v83[7]]);
  *(_QWORD *)&v11[v83[8]] = 0;
  *(_QWORD *)&v11[v83[9]] = v79;
  *(_QWORD *)&v11[v83[10]] = v80;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v83 - 1) + 56))(v11, 0, 1, v83);
  sub_1003B9858((uint64_t)v11, v90);
  return sub_100010960((uint64_t)v11, &qword_1009D55C8);
}

uint64_t sub_1003BA46C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  NSObject *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint8_t *v41;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  int v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  char *v55;
  uint64_t v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t ObjectType;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v92 = a1;
  v2 = type metadata accessor for Logger(0);
  v90 = *(_QWORD *)(v2 - 8);
  v91 = v2;
  __chkstk_darwin(v2);
  v83 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v82 - v5;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v7);
  v84 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SpreadPaginationEntity(0);
  v85 = *(_QWORD *)(v9 - 8);
  v86 = v9;
  __chkstk_darwin(v9);
  v89 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v87 = (char *)&v82 - v12;
  v13 = _s14descr1008F7311C5StateO8DraggingVMa(0);
  __chkstk_darwin(v13);
  v88 = (uint64_t)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v82 - v16;
  v18 = sub_10004CFD4(&qword_1009D55C0);
  __chkstk_darwin(v18);
  v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v82 - v22;
  v24 = v1;
  v25 = *(_QWORD *)(v1 + 48);
  KeyPath = swift_getKeyPath(&unk_10071FEF8);
  v94 = v25;
  v27 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v94, KeyPath, v27);
  swift_release(KeyPath);
  v28 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v25 + 80));
  v30 = v29;
  v32 = PageTurnStyle.rawValue.getter(0);
  v33 = v31;
  if (v28 == v32 && v30 == v31)
  {
    swift_bridgeObjectRelease_n(v30, 2);
    goto LABEL_5;
  }
  v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v28, v30, v32, v31, 0);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v33);
  if ((v34 & 1) != 0)
  {
LABEL_5:
    if (*(_QWORD *)(v92 + *(int *)(v13 + 32)))
    {
      if (qword_1009CE8D0 != -1)
        swift_once(&qword_1009CE8D0, sub_1005A9688);
      v35 = Logger.init(_:)((id)qword_100A1ECD8);
      v36 = Logger.logObject.getter(v35);
      v40 = static os_log_type_t.debug.getter(v36, v37, v38, v39);
      if (os_log_type_enabled(v36, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v36, v40, "Ignoring Dragging change because it's just a translation update", v41, 2u);
        swift_slowDealloc(v41, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v6, v91);
    }
    else
    {
      v43 = *(_BYTE *)(v25 + 16);
      v44 = v24;
      v45 = (uint64_t)v23;
      v46 = (uint64_t)v23;
      v47 = v92;
      sub_10026105C(v43, 0, v46, *(double *)(v24 + 120));
      v48 = _s14descr1008F7311C5StateO4TurnVMa(0);
      v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48);
      v50 = v49(v45, 1, v48);
      sub_10002CD84(v47, (uint64_t)v17, _s14descr1008F7311C5StateO8DraggingVMa);
      if (v50 == 1)
      {
        v51 = sub_100263994(v43);
        v53 = v85;
        v52 = v86;
        if (v51 == 2)
        {
          sub_10002C8F0((uint64_t)v17, _s14descr1008F7311C5StateO8DraggingVMa);
        }
        else
        {
          v64 = static LocationMovement.Direction.== infix(_:_:)(v51 & 1, 0);
          sub_10002C8F0((uint64_t)v17, _s14descr1008F7311C5StateO8DraggingVMa);
          if ((v64 & 1) != 0)
          {
            v65 = *(_QWORD *)(v44 + 24);
            ObjectType = swift_getObjectType();
            dispatch thunk of LocationControlling.failedAttemptToNavigateToNextPage()(ObjectType, v65);
          }
        }
      }
      else
      {
        sub_10002C8F0((uint64_t)v17, _s14descr1008F7311C5StateO8DraggingVMa);
        v53 = v85;
        v52 = v86;
      }
      sub_10000B5E4(v45, (uint64_t)v20, &qword_1009D55C0);
      if (v49((uint64_t)v20, 1, v48) == 1)
      {
        sub_100010960((uint64_t)v20, &qword_1009D55C0);
        v67 = 1;
        v68 = v87;
        v69 = (uint64_t)v84;
      }
      else
      {
        v70 = &v20[*(int *)(v48 + 28)];
        v69 = (uint64_t)v84;
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v84, v70, v52);
        sub_10002C8F0((uint64_t)v20, _s14descr1008F7311C5StateO4TurnVMa);
        v67 = 0;
        v68 = v87;
      }
      v71 = v92;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v69, v67, 1, v52);
      v72 = v71;
      v73 = v88;
      sub_10002CD84(v72, v88, _s14descr1008F7311C5StateO8DraggingVMa);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48))(v69, 1, v52) == 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v68, v73, v52);
        sub_10002C8F0(v73, _s14descr1008F7311C5StateO8DraggingVMa);
        sub_100010960(v69, (uint64_t *)&unk_1009E8E70);
      }
      else
      {
        sub_10002C8F0(v73, _s14descr1008F7311C5StateO8DraggingVMa);
        (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v68, v69, v52);
      }
      v74 = *(_QWORD *)(v44 + 24);
      v75 = swift_getObjectType();
      v76 = v89;
      dispatch thunk of LocationControlling.currentSpread.getter(v75, v74);
      v77 = sub_100008DB0((unint64_t *)&qword_1009E8E80, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
      LOBYTE(v74) = dispatch thunk of static Equatable.== infix(_:_:)(v68, v76, v52, v77);
      v78 = *(uint64_t (**)(char *, uint64_t))(v53 + 8);
      v79 = v78(v76, v52);
      if ((v74 & 1) == 0)
      {
        v80 = static Animation.interactiveSpring(response:dampingFraction:blendDuration:)(v79, 0.25, 0.75, 0.4);
        __chkstk_darwin(v80);
        *(&v82 - 2) = v44;
        *(&v82 - 1) = (uint64_t)v68;
        withAnimation<A>(_:_:)(v81, sub_1003BDAA8, &v82 - 4, (char *)&type metadata for () + 8);
        swift_release(v80);
      }
      v78(v68, v52);
      return sub_100010960(v45, &qword_1009D55C0);
    }
  }
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v54 = (id)qword_100A1ECD8;
  v55 = v83;
  v56 = Logger.init(_:)(v54);
  v57 = Logger.logObject.getter(v56);
  v61 = static os_log_type_t.debug.getter(v57, v58, v59, v60);
  if (os_log_type_enabled(v57, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc(12, -1);
    v63 = swift_slowAlloc(32, -1);
    v94 = v63;
    *(_DWORD *)v62 = 136315138;
    v93 = sub_100040F58(0x293A5F2867617264, 0xE800000000000000, &v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v93, &v94, v62 + 4, v62 + 12);
    _os_log_impl((void *)&_mh_execute_header, v57, v61, "%s - slide disabled", v62, 0xCu);
    swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v63, -1, -1);
    swift_slowDealloc(v62, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v90 + 8))(v55, v91);
}

double sub_1003BAC30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  _BYTE v26[24];

  v2 = _s14descr1008F7311C5StateOMa(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v25[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)&v25[-1] - v6);
  __chkstk_darwin(v8);
  v10 = (char *)&v25[-1] - v9;
  v11 = a1 + 16;
  swift_beginAccess(a1 + 16, v26, 0, 0);
  Strong = swift_weakLoadStrong(a1 + 16);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(Strong + 48);
    swift_retain(v14);
    swift_release(v13);
    KeyPath = swift_getKeyPath(&unk_10071FED0);
    __chkstk_darwin(KeyPath);
    *(&v24 - 4) = v14;
    *(&v24 - 3) = 0xD000000000000014;
    *(&v24 - 2) = 0x80000001007C5800;
    v25[0] = v14;
    v16 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v25, KeyPath, sub_1003BDDEC, &v24 - 6, (char *)&type metadata for () + 8, v16);
    swift_release(v14);
    swift_release(KeyPath);
  }
  swift_beginAccess(v11, v25, 0, 0);
  v17 = swift_weakLoadStrong(v11);
  if (v17)
  {
    v19 = v17;
    swift_storeEnumTagMultiPayload(v10, v2, 7);
    v20 = swift_getKeyPath(&unk_10071FE88);
    v21 = swift_getKeyPath(&unk_10071FEB0);
    static Published.subscript.getter(v7, v19, v20, v21);
    swift_release(v20);
    swift_release(v21);
    v22 = swift_getKeyPath(&unk_10071FE88);
    v23 = swift_getKeyPath(&unk_10071FEB0);
    sub_10002CD84((uint64_t)v10, (uint64_t)v4, _s14descr1008F7311C5StateOMa);
    swift_retain(v19);
    static Published.subscript.setter(v4, v19, v22, v23);
    sub_1003B3A60(v7);
    sub_10002C8F0((uint64_t)v10, _s14descr1008F7311C5StateOMa);
    sub_10002C8F0((uint64_t)v7, _s14descr1008F7311C5StateOMa);
    *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  }
  return result;
}

uint64_t sub_1003BAED0(uint64_t a1, uint64_t a2, uint64_t (*a3)(__n128))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = a1 + 16;
  swift_beginAccess(v10, v26, 0, 0);
  Strong = swift_weakLoadStrong(v10);
  if (Strong && (v12 = *(_QWORD *)(Strong + 128), swift_release(Strong), v12 == a2))
  {
    swift_beginAccess(v10, v25, 0, 0);
    v13 = swift_weakLoadStrong(v10);
    if (v13)
    {
      v15 = v13;
      v16 = *(_QWORD *)(v13 + 48);
      swift_retain(v16);
      swift_release(v15);
      sub_10035FCAC(4);
      v14 = swift_release(v16);
    }
    return a3(v14);
  }
  else
  {
    if (qword_1009CE8D0 != -1)
      swift_once(&qword_1009CE8D0, sub_1005A9688);
    v18 = Logger.init(_:)((id)qword_100A1ECD8);
    v19 = Logger.logObject.getter(v18);
    v23 = static os_log_type_t.debug.getter(v19, v20, v21, v22);
    if (os_log_type_enabled(v19, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v23, "Skipping stale completion from turn", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1003BB090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t Strong;
  uint64_t v20;
  __n128 v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  _QWORD v35[2];
  uint64_t v36;
  _BYTE v37[24];

  v35[1] = a4;
  v36 = a5;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SpreadPaginationEntity(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v35 - v17;
  a1 += 16;
  swift_beginAccess(a1, v37, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong && (v20 = *(_QWORD *)(Strong + 128), v21 = swift_release(Strong), v20 == a2))
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))(v18, a3, v12, v21);
    ObjectType = swift_getObjectType();
    v23 = v36;
    dispatch thunk of LocationControlling.currentSpread.getter(ObjectType, v36);
    v24 = sub_100008DB0((unint64_t *)&qword_1009E8E80, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
    v25 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v15, v12, v24);
    v26 = *(void (**)(char *, uint64_t))(v13 + 8);
    v26(v15, v12);
    if ((v25 & 1) == 0)
      dispatch thunk of LocationControlling.moveTo(spread:)(v18, ObjectType, v23);
    return ((uint64_t (*)(char *, uint64_t))v26)(v18, v12);
  }
  else
  {
    if (qword_1009CE8D0 != -1)
      swift_once(&qword_1009CE8D0, sub_1005A9688);
    v28 = Logger.init(_:)((id)qword_100A1ECD8);
    v29 = Logger.logObject.getter(v28);
    v33 = static os_log_type_t.debug.getter(v29, v30, v31, v32);
    if (os_log_type_enabled(v29, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v33, "Skipping stale completion from reset", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_1003BB300(uint64_t a1, uint64_t a2, uint64_t (*a3)(__n128))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  __n128 v12;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  _BYTE v22[24];

  v6 = type metadata accessor for Logger(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v22, 0, 0);
  Strong = swift_weakLoadStrong(a1);
  if (Strong)
  {
    v11 = *(_QWORD *)(Strong + 128);
    v12 = swift_release(Strong);
    if (v11 == a2)
      return a3(v12);
  }
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v14 = Logger.init(_:)((id)qword_100A1ECD8);
  v15 = Logger.logObject.getter(v14);
  v19 = static os_log_type_t.debug.getter(v15, v16, v17, v18);
  if (os_log_type_enabled(v15, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v19, "Skipping stale completion from reset end", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

