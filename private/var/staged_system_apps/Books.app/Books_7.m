uint64_t sub_1004D7904(char a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  void *v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  char *v28;
  id v29;
  _QWORD v30[5];
  uint64_t v31;

  v3 = v2;
  v6 = BookContentModule.presentingViewController.getter();
  if (!v6)
    return 1;
  v7 = (void *)v6;
  v8 = type metadata accessor for BookContentViewController(0);
  v9 = swift_dynamicCastClass(v7, v8);
  if (!v9)
    goto LABEL_11;
  v10 = v9;
  result = (uint64_t)objc_msgSend(v3, "view");
  if (!result)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v12 = (void *)result;
  objc_msgSend((id)result, "bounds");
  v14 = v13;

  result = (uint64_t)objc_msgSend(v3, "view");
  v15 = (void *)result;
  if ((a1 & 1) != 0)
  {
    if (result)
    {
      objc_msgSend((id)result, "bounds");
      v17 = v16;

      v18 = 0.0;
      goto LABEL_9;
    }
    goto LABEL_14;
  }
  if (result)
  {
    objc_msgSend((id)result, "bounds");
    v18 = v19;

    v17 = 0.0;
LABEL_9:
    v20 = objc_msgSend(objc_allocWithZone((Class)BKEpubManualCurlDriver), "initWithStartPoint:endPoint:time:", v18, v14 * 0.5, v17, v14 * 0.5, a2);
    v21 = OBJC_IVAR____TtC5Books33BookReaderContainerViewController_manualCurlDriver;
    v22 = *(void **)&v3[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_manualCurlDriver];
    *(_QWORD *)&v3[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_manualCurlDriver] = v20;

    v23 = *(void **)&v3[v21];
    if (v23)
    {
      v24 = swift_allocObject(&unk_10090BDC8, 32, 7);
      *(_QWORD *)(v24 + 16) = v3;
      *(_QWORD *)(v24 + 24) = v10;
      v30[4] = sub_1004DB7F8;
      v31 = v24;
      v30[0] = _NSConcreteStackBlock;
      v30[1] = 1107296256;
      v30[2] = sub_1004D7C0C;
      v30[3] = &unk_10090BDE0;
      v25 = _Block_copy(v30);
      v26 = v31;
      v27 = v23;
      v28 = v3;
      v29 = v7;
      objc_msgSend(v27, "run:", v25, swift_release(v26).n128_f64[0]);

      _Block_release(v25);
      return 1;
    }
LABEL_11:

    return 1;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_1004D7B20(uint64_t result, void *a2)
{
  void *v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;

  if (result)
  {
    v3 = (void *)result;
    swift_unknownObjectRetain(result);
    v4 = objc_msgSend(a2, "view");
    objc_msgSend(v3, "translationInView:", v4);
    v6 = v5;
    v8 = v7;

    v9 = objc_msgSend(a2, "view");
    objc_msgSend(v3, "velocityInView:", v9);
    v11 = v10;
    v13 = v12;

    BookContentViewController.performPageDrag(translation:velocity:gestureState:)(objc_msgSend(v3, "state"), v6, v8, v11, v13);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

uint64_t sub_1004D7C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

void sub_1004D7C54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  Class isa;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  uint64_t v19;
  _BYTE v20[24];
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_bookProviderService)
     + OBJC_IVAR___REBookProviderService_bookEntity;
  swift_beginAccess(v1, v20, 0, 0);
  sub_10002E418(v1, (uint64_t)v21);
  v2 = v22;
  v3 = v23;
  sub_10003F198(v21, v22);
  v4 = dispatch thunk of BookEntityType.chapters.getter(v2, v3);
  v5 = _s5Books15CurrentPageViewVwxx_0(v21);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v19 = v4;
    else
      v19 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v6 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v4);
    if (v6 < 0)
    {
      __break(1u);
      return;
    }
  }
  else
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  __chkstk_darwin(v5);
  sub_1004DA93C(0, v6, v4, (uint64_t (*)(unint64_t, uint64_t, __n128))sub_1004DA934);
  v8 = v7;
  swift_bridgeObjectRelease(v4);
  v21[0] = v8;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009DB450);
  v10 = sub_100030B34((unint64_t *)&unk_1009E7680, (uint64_t *)&unk_1009DB450, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v9, v10) & 1) != 0)
  {
    v11 = objc_msgSend((id)objc_opt_self(BCProgressKitController), "sharedController");
    v12 = sub_10036620C(v8);
    swift_bridgeObjectRelease(v8);
    sub_10004CFD4((uint64_t *)&unk_1009CEC70);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v12);
    sub_10002E418(v1, (uint64_t)v21);
    v14 = v22;
    v15 = v23;
    sub_10003F198(v21, v22);
    dispatch thunk of BookEntityType.assetID.getter(v14, v15);
    v17 = v16;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    _s5Books15CurrentPageViewVwxx_0(v21);
    objc_msgSend(v11, "buildContextTree:forBook:completion:", isa, v18, 0);

  }
  else
  {
    swift_bridgeObjectRelease(v8);
  }
}

unint64_t sub_1004D7EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  __int128 v22;
  __int128 v23;
  _BYTE v24[40];
  _BYTE v25[224];

  v5 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v5, v25);
  *(_OWORD *)(inited + 16) = xmmword_1007147F0;
  *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(BCProgressContextTreeKey_uniqueID);
  *(_QWORD *)(inited + 40) = v7;
  v9 = ChapterEntity.href.getter(v8);
  *(_QWORD *)(inited + 72) = &type metadata for String;
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 56) = v10;
  *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(BCProgressContextTreeKey_title);
  *(_QWORD *)(inited + 88) = v11;
  v13 = ChapterEntity.name.getter(v12);
  *(_QWORD *)(inited + 120) = &type metadata for String;
  *(_QWORD *)(inited + 96) = v13;
  *(_QWORD *)(inited + 104) = v14;
  *(_QWORD *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)(BCProgressContextTreeKey_displayOrder);
  *(_QWORD *)(inited + 136) = v15;
  *(_QWORD *)(inited + 168) = &type metadata for Int;
  *(_QWORD *)(inited + 144) = a1;
  *(_QWORD *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)(BCProgressContextTreeKey_cfi);
  *(_QWORD *)(inited + 184) = v16;
  *(_QWORD *)&v22 = ChapterEntity.href.getter(v17);
  *((_QWORD *)&v22 + 1) = v18;
  AnyHashable.init<A>(_:)(&v22, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(a3 + 16) && (v19 = sub_1000561E8((uint64_t)v24), (v20 & 1) != 0))
  {
    sub_10004CD0C(*(_QWORD *)(a3 + 56) + 32 * v19, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_1000569AC((uint64_t)v24);
  if (*((_QWORD *)&v23 + 1))
  {
    sub_10004CFC4(&v22, (_OWORD *)(inited + 192));
  }
  else
  {
    *(_QWORD *)(inited + 216) = &type metadata for String;
    *(_QWORD *)(inited + 192) = 0;
    *(_QWORD *)(inited + 200) = 0xE000000000000000;
    sub_100010960((uint64_t)&v22, (uint64_t *)&unk_1009D04E0);
  }
  return sub_10003FB0C(inited);
}

uint64_t sub_1004D8080@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t Strong;
  void *v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = type metadata accessor for ContentSubType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_analyticsProvider);
  if (v7
    && (v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_analyticsProvider + 8),
        (Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate)) != 0))
  {
    v10 = (void *)Strong;
    v28 = a1;
    ObjectType = swift_getObjectType();
    v12 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 32);
    swift_unknownObjectRetain(v7);
    v13 = v12(ObjectType, v8);
    v14 = (void *)ContentSubType.bridgeType.getter(v13);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    v16 = objc_msgSend(v10, "analyticsContentDataForAssetViewController:contentSubType:tracker:", v1, v14, v15);

    if (v16)
    {
      v17 = v28;
      dispatch thunk of BridgedContentData.swiftType.getter();

      swift_unknownObjectRelease(v7);
      swift_unknownObjectRelease(v10);

      v18 = type metadata accessor for ContentData(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
    }
    else
    {
      swift_unknownObjectRelease(v7);
      swift_unknownObjectRelease(v10);

      v26 = type metadata accessor for ContentData(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v28, 1, 1, v26);
    }
  }
  else
  {
    if (qword_1009CDD88 != -1)
      swift_once(&qword_1009CDD88, sub_1002713A4);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100048F64(v20, (uint64_t)qword_100A1E3E0);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      swift_slowDealloc(v24, -1, -1);
    }

    v25 = type metadata accessor for ContentData(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a1, 1, 1, v25);
  }
}

BOOL sub_1004D8338()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
  v2 = Strong;
  if (Strong)
    swift_unknownObjectRelease(Strong);
  return v2 != 0;
}

uint64_t sub_1004D8378()
{
  return type metadata accessor for BookReaderContainerViewController(0);
}

uint64_t type metadata accessor for BookReaderContainerViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E7538;
  if (!qword_1009E7538)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookReaderContainerViewController);
  return result;
}

uint64_t sub_1004D83BC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD v6[54];

  v6[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[2] = &unk_100729778;
  v6[3] = &unk_100729790;
  v6[4] = &unk_100729790;
  v6[5] = &unk_100729790;
  v6[6] = &unk_100729790;
  v6[7] = &unk_100729790;
  v6[8] = &unk_100729790;
  v6[9] = &unk_100729790;
  v6[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[11] = &unk_1007297A8;
  v6[12] = &unk_1007297A8;
  v6[13] = &unk_1007297A8;
  v6[14] = &unk_1007297C0;
  v6[15] = &unk_1007297D8;
  v6[16] = &unk_1007297F0;
  v6[17] = &unk_1007297A8;
  v6[18] = &unk_1007297A8;
  v6[19] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[20] = &unk_100729808;
  v6[21] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[22] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[23] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[24] = &unk_100729820;
  v6[25] = &unk_100729790;
  v6[26] = &unk_100729838;
  v6[27] = &unk_100729790;
  v6[28] = &unk_100729838;
  v6[29] = &unk_100729838;
  v6[30] = &unk_100729838;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v6[31] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for OSSignposter(319);
    if (v4 <= 0x3F)
    {
      v6[32] = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for OSSignpostID(319);
      if (v5 <= 0x3F)
      {
        v6[33] = *(_QWORD *)(result - 8) + 64;
        v6[34] = &unk_100729790;
        v6[35] = (char *)&value witness table for Builtin.BridgeObject + 64;
        v6[36] = &unk_100729790;
        v6[37] = (char *)&value witness table for Builtin.NativeObject + 64;
        v6[38] = (char *)&value witness table for Builtin.NativeObject + 64;
        v6[39] = (char *)&value witness table for Builtin.Int8 + 64;
        v6[40] = &unk_100729850;
        v6[41] = &unk_100729790;
        v6[42] = &unk_100729790;
        v6[43] = (char *)&value witness table for Builtin.UnknownObject + 64;
        v6[44] = &unk_1007297A8;
        v6[45] = &unk_1007297A8;
        v6[46] = (char *)&value witness table for Builtin.NativeObject + 64;
        v6[47] = &unk_1007297D8;
        v6[48] = (char *)&value witness table for Builtin.Int64 + 64;
        v6[49] = &unk_1007297D8;
        v6[50] = &unk_1007297A8;
        v6[51] = &unk_100729778;
        v6[52] = (char *)&value witness table for Builtin.Int8 + 64;
        v6[53] = &unk_100729790;
        return swift_updateClassMetadata2(a1, 256, 54, v6, a1 + 80);
      }
    }
  }
  return result;
}

uint64_t sub_1004D8654(void *a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8[2];
  _QWORD v9[5];

  v9[3] = type metadata accessor for BuyButtonPresenter();
  v9[4] = &off_1008F3968;
  v9[0] = a1;
  sub_10002E418((uint64_t)v9, (uint64_t)v8);
  v4 = a1;
  sub_100402160((uint64_t)v8);
  sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009D4CE0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v5 = swift_allocObject(&unk_10090BBC0, 24, 7);
  swift_weakInit(v5 + 16, a2);
  sub_10002E418((uint64_t)v9, (uint64_t)v8);
  v6 = swift_allocObject(&unk_10090BBE8, 64, 7);
  *(_QWORD *)(v6 + 16) = v5;
  sub_100022840(v8, v6 + 24);
  swift_retain(v5);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1004DB5F4, v6);
  swift_release(v5);
  swift_release(v6);
  return _s5Books15CurrentPageViewVwxx_0(v9);
}

id sub_1004D8768(void *a1, void *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id result;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  void (*v59)(char *, uint64_t, __n128);
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t ObjectType;
  id v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96[24];
  _QWORD v97[3];
  uint64_t v98;
  uint64_t v99;
  id v100[2];

  v92 = a7;
  v93 = a8;
  v91 = a6;
  v94 = a5;
  v95 = a4;
  v12 = sub_10004CFD4((uint64_t *)&unk_1009E7720);
  v87 = *(_QWORD *)(v12 - 8);
  v88 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&ObjectType - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&ObjectType - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0, v16);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v20 = (char *)&ObjectType - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004CFD4(&qword_1009E7790);
  v85 = *(_QWORD *)(v21 - 8);
  v86 = v21;
  __chkstk_darwin(v21);
  v84 = (char *)&ObjectType - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a9 + 16) = objc_msgSend(objc_allocWithZone((Class)BCAugmentedExperienceManager), "init");
  swift_unknownObjectWeakInit(a9 + 24);
  *(_WORD *)(a9 + 32) = 0;
  *(_BYTE *)(a9 + 34) = 0;
  v23 = a9 + OBJC_IVAR____TtC5Books29EndOfBookExperienceController_lastEmittedCFIRange;
  v24 = type metadata accessor for CFIRange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = a9 + OBJC_IVAR____TtC5Books29EndOfBookExperienceController_cancellables;
  *(_QWORD *)(a9 + OBJC_IVAR____TtC5Books29EndOfBookExperienceController_cancellables) = &_swiftEmptySetSingleton;
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000029, 0x80000001007CEC70);
  swift_unknownObjectWeakAssign(a9 + 24, a2);
  v26 = *(void **)(a9 + 16);
  v89 = a1;
  objc_msgSend(v26, "setPresentationViewController:", a1);
  v90 = a3;
  v27 = *(void **)&a3[OBJC_IVAR___REBookProviderService_bookInfo];
  if (!v27)
  {
LABEL_6:
    v81 = a2;
    ObjectType = swift_getObjectType();
    v97[0] = dispatch thunk of LocationProviding.approximateVisibleCFIRangePublisher.getter(ObjectType, v94);
    OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)(0.2);
    v38 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v100[0] = (id)static OS_dispatch_queue.main.getter(v38);
    v39 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v18, 1, 1, v39);
    v40 = sub_10004CFD4(&qword_1009E7798);
    v41 = sub_100030B34(&qword_1009E77A0, &qword_1009E7798, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v42 = sub_1001EDDD0();
    v43 = v84;
    Publisher.debounce<A>(for:scheduler:options:)(v20, v100, v18, v40, v38, v41, v42);
    sub_100010960((uint64_t)v18, (uint64_t *)&unk_1009D4AE0);

    (*(void (**)(char *, uint64_t))(v82 + 8))(v20, v83);
    swift_release(v97[0]);
    v44 = swift_allocObject(&unk_10090BD78, 24, 7);
    swift_weakInit(v44 + 16, a9);
    v45 = sub_100030B34(qword_1009E77A8, &qword_1009E7790, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
    v46 = v86;
    v47 = Publisher<>.sink(receiveValue:)(sub_1004DB788, v44, v86, v45);
    v48 = swift_release(v44);
    (*(void (**)(char *, uint64_t, __n128))(v85 + 8))(v43, v46, v48);
    swift_beginAccess(v25, v97, 33, 0);
    AnyCancellable.store(in:)(v25);
    swift_endAccess(v97);
    swift_release(v47);
    v97[0] = v91;
    v49 = sub_10004CFD4(&qword_1009D9D30);
    v50 = sub_100030B34(&qword_1009E7730, &qword_1009D9D30, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    Publisher.dropFirst(_:)(1, v49, v50);
    v51 = swift_allocObject(&unk_10090BD78, 24, 7);
    swift_weakInit(v51 + 16, a9);
    v52 = (_QWORD *)swift_allocObject(&unk_10090BDA0, 40, 7);
    v52[2] = v51;
    v53 = v94;
    v54 = v95;
    v52[3] = v95;
    v52[4] = v53;
    v55 = sub_100030B34((unint64_t *)&unk_1009E7738, (uint64_t *)&unk_1009E7720, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
    swift_unknownObjectRetain(v54);
    v56 = v88;
    v57 = Publisher<>.sink(receiveValue:)(sub_1004DB7A0, v52, v88, v55);
    v58 = swift_release(v52);
    v59 = *(void (**)(char *, uint64_t, __n128))(v87 + 8);
    v59(v14, v56, v58);
    swift_beginAccess(v25, v97, 33, 0);
    AnyCancellable.store(in:)(v25);
    swift_endAccess(v97);
    swift_release(v57);
    v97[0] = v93;
    Publisher.dropFirst(_:)(1, v49, v50);
    v60 = swift_allocObject(&unk_10090BD78, 24, 7);
    swift_weakInit(v60 + 16, a9);
    v61 = Publisher<>.sink(receiveValue:)(sub_1004DB7AC, v60, v56, v55);
    v62 = swift_release(v60);
    v59(v14, v56, v62);
    swift_beginAccess(v25, v97, 33, 0);
    AnyCancellable.store(in:)(v25);
    swift_endAccess(v97);
    swift_release(v61);
    v97[0] = v92;
    Publisher.dropFirst(_:)(1, v49, v50);
    v63 = swift_allocObject(&unk_10090BD78, 24, 7);
    swift_weakInit(v63 + 16, a9);
    v64 = Publisher<>.sink(receiveValue:)(sub_1004DB7AC, v63, v56, v55);
    v65 = swift_release(v63);
    v59(v14, v56, v65);
    swift_beginAccess(v25, v97, 33, 0);
    AnyCancellable.store(in:)(v25);
    swift_endAccess(v97);
    v66 = swift_release(v64);
    v67 = v94;
    v68 = v95;
    v69 = ObjectType;
    v97[0] = dispatch thunk of LocationProviding.lastPageShowingNotificationPublisher.getter(ObjectType, v94, v66);
    v70 = swift_allocObject(&unk_10090BD78, 24, 7);
    swift_weakInit(v70 + 16, a9);
    v71 = sub_10004CFD4(&qword_1009E3B40);
    v72 = sub_100030B34(&qword_1009F0090, &qword_1009E3B40, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v73 = Publisher<>.sink(receiveValue:)(sub_1004DB7B4, v70, v71, v72);
    swift_release(v70);
    swift_release(v97[0]);
    swift_beginAccess(v25, v97, 33, 0);
    AnyCancellable.store(in:)(v25);
    swift_endAccess(v97);
    v74 = swift_release(v73);
    v97[0] = dispatch thunk of LocationProviding.attemptedNavigationPastEndNotificationPublisher.getter(v69, v67, v74);
    v75 = swift_allocObject(&unk_10090BD78, 24, 7);
    swift_weakInit(v75 + 16, a9);
    v76 = Publisher<>.sink(receiveValue:)(sub_1004DB7BC, v75, v71, v72);
    swift_release(v75);
    swift_release(v97[0]);
    swift_beginAccess(v25, v97, 33, 0);
    AnyCancellable.store(in:)(v25);
    swift_endAccess(v97);
    v77 = swift_release(v76);
    v97[0] = dispatch thunk of LocationProviding.navigatedToNextPageNotificationPublisher.getter(v69, v67, v77);
    v78 = swift_allocObject(&unk_10090BD78, 24, 7);
    swift_weakInit(v78 + 16, a9);
    v79 = Publisher<>.sink(receiveValue:)(sub_1004DB7C4, v78, v71, v72);
    swift_release(v78);
    swift_release(v97[0]);
    swift_beginAccess(v25, v97, 33, 0);
    AnyCancellable.store(in:)(v25);
    swift_endAccess(v97);
    swift_release(v79);

    swift_unknownObjectRelease(v68);
    swift_release(v91);
    swift_release(v92);
    swift_release(v93);
    return (id)a9;
  }
  v28 = a2;
  v29 = v26;
  v30 = v27;
  result = objc_msgSend(v30, "storeId");
  if (result)
  {
    v32 = result;
    objc_msgSend(v29, "setStoreID:", result);

    v33 = &v90[OBJC_IVAR___REBookProviderService_bookEntity];
    swift_beginAccess(&v90[OBJC_IVAR___REBookProviderService_bookEntity], v96, 0, 0);
    sub_10002E418((uint64_t)v33, (uint64_t)v97);
    v35 = v98;
    v34 = v99;
    sub_10003F198(v97, v98);
    LOBYTE(v33) = dispatch thunk of BookEntityType.pageProgressionDirection.getter(v35, v34) & 1;
    _s5Books15CurrentPageViewVwxx_0(v97);
    v36 = sub_100606F1C(v30, (char)v33);
    if (v36)
    {
      v37 = v36;
      objc_msgSend(*(id *)(a9 + 16), "addExperience:", v36);

    }
    a2 = v28;
    objc_msgSend(v28, "setBookPositionProcessor:", *(_QWORD *)(a9 + 16));

    goto LABEL_6;
  }
  __break(1u);
  return result;
}

char *sub_1004D9130(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _QWORD *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(_QWORD, _QWORD),uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40)
{
  _BYTE *v49;

  v49 = objc_allocWithZone((Class)type metadata accessor for BookReaderContainerViewController(0));
  return sub_1004D9318(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           v49,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

char *sub_1004D9318(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _QWORD *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void (*a23)(_QWORD, _QWORD),uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,_BYTE *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,uint64_t a40)
{
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  id v53;
  _BYTE *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  id v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  id v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  void (*v86)(_QWORD, _QWORD);
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  id v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  objc_class *v108;
  char *v109;
  char *v110;
  void (*v111)(char *, char *, uint64_t);
  char *v112;
  NSObject *v113;
  os_signpost_type_t v114;
  uint64_t v115;
  char *v116;
  uint8_t *v117;
  os_signpost_id_t v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t Strong;
  uint64_t v126;
  uint64_t v127;
  uint64_t ObjectType;
  void (*v129)(char *, _UNKNOWN **, uint64_t, uint64_t);
  char *v130;
  unsigned int v131;
  uint64_t v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *, uint64_t);
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  __n128 v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __n128 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  _QWORD *v197;
  char *v198;
  char *v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  void (*v207)(_QWORD, _QWORD);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void *v212;
  char *v213;
  char *v214;
  char *v215;
  uint64_t v216;
  id v217;
  id v218;
  void *v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  id v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  _QWORD v242[3];
  _QWORD v243[3];
  uint64_t v244;
  uint64_t v245;
  _QWORD v246[3];
  uint64_t v247;
  uint64_t v248;
  objc_super v249;
  char v250[24];
  _QWORD v251[17];

  v223 = a8;
  v229 = a6;
  v230 = a7;
  v219 = a5;
  v220 = a2;
  v200 = a4;
  v234 = a22;
  v233 = a21;
  v232 = a20;
  v240 = a19;
  v237 = a18;
  v224 = a17;
  v238 = a16;
  v239 = a15;
  v228 = a12;
  v226 = a11;
  v236 = a29;
  v217 = a30;
  v235 = a27;
  v216 = a28;
  v241 = a26;
  v212 = (void *)a25;
  v231 = a24;
  v207 = a23;
  v227 = a13;
  v221 = a14;
  v204 = a37;
  v218 = a38;
  v225 = a40;
  v202 = a39;
  v201 = a10;
  v194 = sub_10004CFD4((uint64_t *)&unk_1009E76E0);
  v186 = *(_QWORD *)(v194 - 8);
  __chkstk_darwin(v194);
  v191 = (char *)&v185 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v193 = sub_10004CFD4(&qword_1009E7748);
  v187 = *(_QWORD *)(v193 - 8);
  __chkstk_darwin(v193);
  v190 = (char *)&v185 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v192 = sub_10004CFD4(&qword_1009E7750);
  v188 = *(_QWORD *)(v192 - 8);
  __chkstk_darwin(v192);
  v189 = (char *)&v185 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = type metadata accessor for OSSignpostID(0);
  v214 = *(char **)(v203 - 8);
  __chkstk_darwin(v203);
  v215 = (char *)&v185 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v213 = (char *)&v185 - v47;
  v211 = type metadata accessor for Logger(0);
  v209 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin(v211);
  v206 = (char *)&v185 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = type metadata accessor for OSSignposter(0);
  v208 = *(_QWORD *)(v210 - 8);
  __chkstk_darwin(v210);
  v205 = (char *)&v185 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  a31[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_forcingInterfaceStyleForOneAlert] = 0;
  *(_QWORD *)&a31[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_upSellData] = 0;
  *(_QWORD *)&a31[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_appAnalyticsAdditionalData] = 0;
  *(_QWORD *)&a31[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_panDismissGesture] = 0;
  *(_QWORD *)&a31[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_swipeDismissGesture] = 0;
  *(_QWORD *)&a31[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_windowSceneTraitRegistration] = 0;
  *(_QWORD *)&a31[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_tapDuringPageTurnGesture] = 0;
  *(_QWORD *)&a31[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_selectLineGesture] = 0;
  v50 = &a31[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_statusBarStateProvider];
  *((_QWORD *)v50 + 1) = 0;
  swift_unknownObjectWeakInit(v50);
  v51 = &a31[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_buyButtonHost];
  v197 = v51;
  *v51 = 0;
  v51[1] = 0;
  v52 = OBJC_IVAR____TtC5Books33BookReaderContainerViewController_appIntentsInfo;
  v53 = objc_allocWithZone((Class)BCAppIntentsAssetViewControllerInfo);
  v54 = a31;
  *(_QWORD *)&a31[v52] = objc_msgSend(v53, "init");
  v55 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_buyButtonPresenter];
  *((_QWORD *)v55 + 4) = 0;
  *(_OWORD *)v55 = 0u;
  *((_OWORD *)v55 + 1) = 0u;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_endOfBookExperienceController] = 0;
  v198 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_viewModel];
  swift_weakInit(&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_viewModel], 0);
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_bookPositionProcessor] = 0;
  swift_unknownObjectWeakInit(&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_serviceDelegate]);
  swift_unknownObjectWeakInit(&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate]);
  swift_unknownObjectWeakInit(&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_contentOpenAnimator]);
  v199 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_log];
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000002DLL, 0x80000001007CEC20);
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_contentReadyIntervalState] = 0;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_manualCurlDriver] = 0;
  v56 = OBJC_IVAR____TtC5Books33BookReaderContainerViewController_viewSnapshotter;
  v57 = type metadata accessor for ViewSnapshotter();
  v58 = swift_allocObject(v57, 32, 7);
  swift_unknownObjectWeakInit(v58 + 16);
  *(_QWORD *)(v58 + 24) = 0;
  *(_QWORD *)&v54[v56] = v58;
  v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_scrubber] = 1;
  v59 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_closePanningTranslation];
  *(_QWORD *)v59 = 0;
  *((_QWORD *)v59 + 1) = 0;
  v59[16] = 1;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_blurView] = 0;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_themeChangeWatcher] = 0;
  v60 = OBJC_IVAR____TtC5Books33BookReaderContainerViewController_paginationHostView;
  *(_QWORD *)&v54[v60] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v61 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_analyticsProvider];
  v195 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_analyticsProvider];
  *v61 = 0;
  v61[1] = 0;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_originalWindowInterfaceStyle] = 0;
  v62 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_undoTemporaryThemeStyle];
  *v62 = 0;
  v62[1] = 0;
  v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_turnPageButtonManager] = 1;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_lookupCompleteSubscription] = 0;
  v222 = a1;
  sub_1002CFCAC(a1, (uint64_t)v251);
  v63 = objc_allocWithZone((Class)sub_10004CFD4(&qword_1009E7758));
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_readerController] = UIHostingController.init(rootView:)(v251);
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_contentModule] = a3;
  v196 = OBJC_IVAR____TtC5Books33BookReaderContainerViewController_bookProviderService;
  v64 = v200;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_bookProviderService] = v200;
  v65 = v219;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_bookReaderPresenter] = v219;
  v67 = v229;
  v66 = v230;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_closeGestureManager] = v229;
  v68 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_purchaseHandler];
  v69 = v223;
  *v68 = v66;
  v68[1] = v69;
  v70 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_configurationHandler];
  v71 = v201;
  *v70 = a9;
  v70[1] = v71;
  v72 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_orientationLocking];
  v73 = v226;
  v74 = v202;
  *v72 = v226;
  v72[1] = v74;
  *((_QWORD *)v50 + 1) = v218;
  swift_unknownObjectWeakAssign(v50, v228);
  v75 = v197;
  v202 = *v197;
  v76 = v227;
  v77 = v221;
  *v197 = v227;
  v75[1] = v77;
  v221 = a3;
  swift_retain(a3);
  v223 = v64;
  v218 = v65;
  swift_retain(v67);
  swift_unknownObjectRetain(v66);
  v219 = a9;
  swift_unknownObjectRetain(a9);
  swift_unknownObjectRetain(v73);
  swift_unknownObjectRetain(v76);
  swift_unknownObjectRelease(v202);
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_bookReaderHostEnvironmentProvider] = v239;
  v78 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_toolbarPresenter];
  v79 = v204;
  *v78 = v240;
  v78[1] = v79;
  v80 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_layoutModeProvider];
  v81 = v232;
  v82 = v233;
  v83 = v225;
  *v80 = v232;
  v80[1] = v83;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_layoutController] = v82;
  v84 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_currentLocationController];
  v85 = v234;
  v86 = v207;
  *v84 = v234;
  v84[1] = v86;
  v87 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_currentLocationProvider];
  v88 = v237;
  v89 = v238;
  v90 = v224;
  *v87 = v238;
  v87[1] = v90;
  sub_10002E418((uint64_t)v88, (uint64_t)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_pageTurnController]);
  v91 = v231;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_contentLayoutController] = v231;
  v92 = v212;
  *(_QWORD *)&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController__actionTarget] = v212;
  swift_weakAssign(v198);
  v93 = &v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_paginationService];
  v95 = v235;
  v94 = v236;
  v96 = v216;
  *v93 = v235;
  v93[1] = v96;
  v97 = v195;
  v216 = *v195;
  v98 = v217;
  *v195 = v94;
  v97[1] = v98;
  swift_unknownObjectRetain(v239);
  swift_unknownObjectRetain(v240);
  swift_unknownObjectRetain(v81);
  swift_retain(v82);
  swift_unknownObjectRetain(v85);
  swift_unknownObjectRetain(v89);
  swift_retain(v91);
  v217 = v92;
  swift_unknownObjectRetain(v95);
  swift_unknownObjectRetain(v94);
  swift_unknownObjectRelease(v216);
  v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_viewReady] = 0;
  v99 = *(_QWORD *)&v54[v196] + OBJC_IVAR___REBookProviderService_bookEntity;
  swift_beginAccess(v99, v250, 0, 0);
  sub_10002E418(v99, (uint64_t)v251);
  v100 = v206;
  (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v206, v199, v211);
  v101 = v205;
  OSSignposter.init(logger:)(v100);
  v102 = (*(uint64_t (**)(_BYTE *, char *, uint64_t))(v208 + 32))(&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_signposter], v101, v210);
  v103 = OSSignposter.logHandle.getter(v102);
  v104 = v213;
  OSSignpostID.init(log:)(v103);
  v105 = v214;
  v106 = v104;
  v107 = v203;
  (*((void (**)(_BYTE *, char *, uint64_t))v214 + 4))(&v54[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_signpostID], v104, v203);

  v108 = (objc_class *)type metadata accessor for BookReaderContainerViewController(0);
  v249.receiver = v54;
  v249.super_class = v108;
  v109 = (char *)objc_msgSendSuper2(&v249, "initWithNibName:bundle:", 0, 0);
  v110 = v215;
  v111 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v105 + 2);
  v111(v215, &v109[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_signpostID], v107);
  v112 = v109;
  v113 = OSSignposter.logHandle.getter(v112);
  v114 = static os_signpost_type_t.begin.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) != 0)
  {
    v111(v104, v110, v107);
    v115 = v107;
    v116 = v110;
    v117 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v117 = 0;
    v118 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v113, v114, v118, "REI.ContentReady", "", v117, 2u);
    v119 = v117;
    v110 = v116;
    v120 = v115;
    swift_slowDealloc(v119, -1, -1);

    v106 = v104;
    v107 = v120;
    (*((void (**)(char *, uint64_t))v105 + 1))(v104, v120);
  }
  else
  {

  }
  v111(v106, v110, v107);
  v121 = type metadata accessor for OSSignpostIntervalState(0);
  swift_allocObject(v121, *(unsigned int *)(v121 + 48), *(unsigned __int16 *)(v121 + 52));
  v122 = OSSignpostIntervalState.init(id:isOpen:)(v106, 1);
  (*((void (**)(char *, uint64_t))v105 + 1))(v110, v107);
  v123 = *(_QWORD *)&v112[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_contentReadyIntervalState];
  *(_QWORD *)&v112[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_contentReadyIntervalState] = v122;
  swift_release(v123);
  v124 = &v112[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_statusBarStateProvider];
  Strong = swift_unknownObjectWeakLoadStrong(&v112[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_statusBarStateProvider]);
  if (Strong)
  {
    v126 = Strong;
    v127 = *((_QWORD *)v124 + 1);
    ObjectType = swift_getObjectType();
    v129 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v127 + 32);
    v130 = v112;
    v129(v112, &protocol witness table for BookReaderContainerViewController, ObjectType, v127);
    swift_unknownObjectRelease(v126);
  }
  v131 = objc_msgSend((id)objc_opt_self(BCAugmentedExperienceManager), "endOfBookExperienceFeatureEnabled");
  sub_10002E418((uint64_t)v251, (uint64_t)v246);
  v216 = a36;
  if (!v131)
  {
    _s5Books15CurrentPageViewVwxx_0(v246);
    sub_10002E418((uint64_t)v251, (uint64_t)v243);
    goto LABEL_11;
  }
  v132 = v247;
  v133 = v248;
  sub_10003F198(v246, v247);
  v134 = dispatch thunk of BookEntityType.sample.getter(v132, v133);
  _s5Books15CurrentPageViewVwxx_0(v246);
  sub_10002E418((uint64_t)v251, (uint64_t)v243);
  if ((v134 & 1) != 0)
  {
LABEL_11:
    _s5Books15CurrentPageViewVwxx_0(v243);
    goto LABEL_12;
  }
  v135 = v244;
  v136 = v245;
  sub_10003F198(v243, v244);
  v137 = dispatch thunk of BookEntityType.isStoreBook.getter(v135, v136);
  _s5Books15CurrentPageViewVwxx_0(v243);
  if ((v137 & 1) != 0)
  {
    v138 = v241;
    v242[0] = *(_QWORD *)(*(_QWORD *)(v241 + 112) + 288);
    v139 = v112;
    v214 = (char *)v223;
    swift_unknownObjectRetain(v238);
    v213 = v139;
    v140 = sub_10004CFD4((uint64_t *)&unk_1009CEC60);
    v141 = sub_100030B34((unint64_t *)&qword_1009D94A0, (uint64_t *)&unk_1009CEC60, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    v212 = (void *)Publisher.eraseToAnyPublisher()(v140, v141);
    v211 = OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel;
    swift_beginAccess(*(_QWORD *)(v138 + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel)+ OBJC_IVAR____TtC5Books16OverlayViewModel__overlay, v242, 33, 0);
    v210 = sub_10004CFD4(&qword_1009E19E8);
    v215 = v112;
    v142 = v191;
    Published.projectedValue.getter(v210);
    swift_endAccess(v242);
    v208 = sub_100030B34((unint64_t *)&unk_1009E76F0, (uint64_t *)&unk_1009E76E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
    v143 = v190;
    v144 = v194;
    Publisher.map<A>(_:)(sub_1004D355C, 0, v194, &type metadata for Bool, v208);
    v207 = *(void (**)(_QWORD, _QWORD))(v186 + 8);
    v207(v142, v144);
    v206 = (char *)sub_100030B34(&qword_1009E7780, &qword_1009E7748, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
    v145 = v189;
    v146 = v193;
    Publisher<>.removeDuplicates()(v193, v206, &protocol witness table for Bool);
    v205 = *(char **)(v187 + 8);
    ((void (*)(char *, uint64_t))v205)(v143, v146);
    v147 = sub_100030B34(&qword_1009E7788, &qword_1009E7750, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v148 = v192;
    v209 = Publisher.eraseToAnyPublisher()(v192, v147);
    v149 = *(void (**)(char *, uint64_t))(v188 + 8);
    v149(v145, v148);
    swift_beginAccess(*(_QWORD *)(v241 + v211) + OBJC_IVAR____TtC5Books16OverlayViewModel__overlay, v242, 33, 0);
    Published.projectedValue.getter(v210);
    swift_endAccess(v242);
    Publisher.map<A>(_:)(sub_1004D362C, 0, v144, &type metadata for Bool, v208);
    v150 = v142;
    v112 = v215;
    v207(v150, v144);
    Publisher<>.removeDuplicates()(v146, v206, &protocol witness table for Bool);
    ((void (*)(char *, uint64_t))v205)(v143, v146);
    v151 = Publisher.eraseToAnyPublisher()(v148, v147);
    v149(v145, v148);
    v152 = type metadata accessor for EndOfBookExperienceController(0);
    v153 = swift_allocObject(v152, *(unsigned int *)(v152 + 48), *(unsigned __int16 *)(v152 + 52));
    v154 = v213;
    v155 = sub_1004D8768(v213, v213, v214, v238, v224, (uint64_t)v212, v209, v151, v153);
    v156 = *(_QWORD *)&v154[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_endOfBookExperienceController];
    *(_QWORD *)&v154[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_endOfBookExperienceController] = v155;
    swift_release(v156);
  }
LABEL_12:
  v246[0] = *(_QWORD *)(*(_QWORD *)(v241 + 112) + 288);
  v157 = sub_10004CFD4((uint64_t *)&unk_1009CEC60);
  v158 = sub_100030B34((unint64_t *)&qword_1009D94A0, (uint64_t *)&unk_1009CEC60, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v246[0] = Publisher.eraseToAnyPublisher()(v157, v158);
  v159 = v221;
  swift_retain(v221);
  v160 = sub_10004CFD4(&qword_1009D9D30);
  v161 = sub_100030B34(&qword_1009E7730, &qword_1009D9D30, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v162 = Publisher<>.sink(receiveValue:)(sub_1004DB73C, v159, v160, v161);
  swift_release(v159);
  swift_release(v246[0]);
  v163 = &v112[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_cancellables];
  swift_beginAccess(&v112[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_cancellables], v246, 33, 0);
  AnyCancellable.store(in:)(v163);
  swift_endAccess(v246);
  swift_release(v162);
  v164 = swift_allocObject(&unk_10090BD28, 24, 7);
  *(_QWORD *)(v164 + 16) = 0;
  v165 = *(_QWORD *)&v112[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_contentLayoutController];
  v166 = swift_retain(v165);
  v167 = dispatch thunk of BookContentLayoutController.layoutStatePublisher.getter(v166);
  swift_release(v165);
  v246[0] = v167;
  v168 = swift_allocObject(&unk_10090B9B8, 24, 7);
  swift_unknownObjectWeakInit(v168 + 16);
  v169 = v112;
  v170 = swift_allocObject(&unk_10090BD50, 32, 7);
  *(_QWORD *)(v170 + 16) = v168;
  *(_QWORD *)(v170 + 24) = v164;
  swift_retain(v164);
  v171 = sub_10004CFD4((uint64_t *)&unk_1009E7760);
  v172 = sub_100030B34(&qword_1009D5C88, (uint64_t *)&unk_1009E7760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v173 = Publisher<>.sink(receiveValue:)(sub_1004DB778, v170, v171, v172);
  swift_release(v170);
  swift_release(v246[0]);
  swift_beginAccess(v164 + 16, v246, 1, 0);
  v174 = *(_QWORD *)(v164 + 16);
  *(_QWORD *)(v164 + 16) = v173;
  v175 = swift_release(v174);
  v176 = v232;
  v243[0] = dispatch thunk of BookLayoutModeProviding.layoutModePublisher.getter(v216, v225, v175);
  v177 = swift_allocObject(&unk_10090B9B8, 24, 7);
  swift_unknownObjectWeakInit(v177 + 16);
  v178 = sub_10004CFD4((uint64_t *)&unk_1009E7770);
  v179 = sub_100030B34(&qword_1009E5BA0, (uint64_t *)&unk_1009E7770, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v180 = Publisher<>.sink(receiveValue:)(sub_1004DB780, v177, v178, v179);
  swift_release(v177);
  swift_release(v243[0]);
  swift_beginAccess(v163, v243, 33, 0);
  AnyCancellable.store(in:)(v163);
  swift_endAccess(v243);
  swift_release(v180);
  sub_100009E04(0, &qword_1009E7710, UITraitCollection_ptr);
  v181 = v169;
  v182 = static UITraitCollection.bc_allAPITraits.getter();
  v183 = UIViewController.registerForTraitChanges(_:action:)(v182, "_traitCollectionDidChangeWithSender:previousTraitCollection:");
  swift_release(v220);
  swift_release(v159);

  swift_release(v229);
  swift_unknownObjectRelease(v230);
  swift_unknownObjectRelease(v219);
  swift_unknownObjectRelease(v226);
  swift_unknownObjectRelease(v228);
  swift_unknownObjectRelease(v227);
  swift_unknownObjectRelease(v239);
  swift_unknownObjectRelease(v238);
  swift_unknownObjectRelease(v240);
  swift_unknownObjectRelease(v176);
  swift_release(v233);
  swift_unknownObjectRelease(v234);
  swift_release(v231);

  swift_release(v241);
  swift_unknownObjectRelease(v235);
  swift_unknownObjectRelease(v236);
  swift_unknownObjectRelease(v183);
  swift_bridgeObjectRelease(v182);

  _s5Books15CurrentPageViewVwxx_0(v237);
  sub_1002D0480((uint64_t)v222);
  _s5Books15CurrentPageViewVwxx_0(v251);
  swift_release(v164);
  return v181;
}

void sub_1004DA538(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double MidX;
  double MidY;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSString v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t inited;
  CGFloat v27;
  id v28;
  unint64_t v29;
  Class isa;
  _BYTE v31[104];
  CGRect v32;
  CGRect v33;

  if ((a5 & 1) != 0)
  {
    v9 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v9 = a1;
    v10 = v9 << 16;
    if ((a2 & 0x1000000000000000) == 0 || (a1 & 0x800000000000000) != 0)
      a4 = v10 | 7;
    else
      a4 = v10 | 0xB;
    a3 = 15;
  }
  v11 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  RelativeValue.value.getter(&v33, v11);
  MidX = CGRectGetMidX(v33);
  RelativeValue.value.getter(&v32, v11);
  MidY = CGRectGetMidY(v32);
  *(_QWORD *)&v33.origin.x = a3;
  *(_QWORD *)&v33.origin.y = a4;
  *(_QWORD *)&v32.origin.x = a1;
  *(_QWORD *)&v32.origin.y = a2;
  swift_bridgeObjectRetain(a2);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009D2B50);
  v15 = sub_100030B34((unint64_t *)&unk_1009E7650, (uint64_t *)&unk_1009D2B50, (uint64_t)&protocol conformance descriptor for Range<A>);
  v16 = sub_1001F2108();
  v17 = _NSRange.init<A, B>(_:in:)(&v33, &v32, v14, &type metadata for String, v15, v16);
  v19 = v18;
  v20 = objc_allocWithZone((Class)RVItem);
  v21 = String._bridgeToObjectiveC()();
  v22 = objc_msgSend(v20, "initWithText:selectedRange:", v21, v17, v19);

  v23 = (void *)objc_opt_self(DDRevealBridge);
  v24 = (void *)RelativeValue<>.baseView.getter(v11);
  v25 = sub_10004CFD4(&qword_1009DD620);
  inited = swift_initStackObject(v25, v31);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)&v33.origin.x = static String._unconditionallyBridgeFromObjectiveC(_:)(kDataDetectorsSourceRectKey);
  v33.origin.y = v27;
  AnyHashable.init<A>(_:)(&v33, &type metadata for String, &protocol witness table for String);
  RelativeValue.value.getter(&v33, v11);
  v28 = objc_msgSend((id)objc_opt_self(NSValue), "valueWithCGRect:", v33.origin.x, v33.origin.y, v33.size.width, v33.size.height);
  *(_QWORD *)(inited + 96) = sub_100009E04(0, &qword_1009E30D8, NSValue_ptr);
  *(_QWORD *)(inited + 72) = v28;
  v29 = sub_1000560A8(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v29);
  objc_msgSend(v23, "performDefaultActionForRVItem:view:location:fallbackMenuInteraction:context:", v22, v24, 0, isa, MidX, MidY);

}

uint64_t sub_1004DA810()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004DA834()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004DA860(uint64_t a1)
{
  uint64_t v1;

  return sub_1004D68C0(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_1004DA86C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1004DA898()
{
  uint64_t v0;

  sub_1004D6970(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32), *(id *)(v0 + 40), *(_BYTE *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1004DA8B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1004DA8DC()
{
  uint64_t v0;

  sub_1004D64D4(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1004DA8E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004DA90C()
{
  BookContentViewController.updateScrollingReadingLoupe()();
}

unint64_t sub_1004DA934(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1004D7EA0(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1004DA93C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(unint64_t, uint64_t, __n128))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v35;

  v6 = a2 - a1;
  if (__OFSUB__(a2, a1))
    goto LABEL_63;
  v4 = a3;
  v5 = a1;
  v35 = a3 >> 62;
  if (a3 >> 62)
    goto LABEL_64;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = v7 >= v6 ? v6 : v7;
    sub_10003F1DC(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0)
      break;
    if (v8)
    {
      swift_bridgeObjectRetain(v4);
      if (a2 < v5)
        goto LABEL_69;
      v9 = 0;
      v10 = v4 & 0xFFFFFFFFFFFFFF8;
      if (v4 < 0)
        v10 = v4;
      v28 = v10;
      if (v8 >= (unint64_t)v6)
        v11 = v6;
      else
        v11 = v8;
      v31 = v11;
      v33 = v5 - a2;
      while (v33 + v9)
      {
        if (v31 == v9)
          goto LABEL_56;
        if (v35)
        {
          swift_bridgeObjectRetain(v4);
          v12 = _CocoaArrayWrapper.endIndex.getter(v28);
          swift_bridgeObjectRelease(v4);
        }
        else
        {
          v12 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if (v9 == v12)
          goto LABEL_57;
        if ((v4 & 0xC000000000000001) != 0)
        {
          v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v9, v4);
        }
        else
        {
          if (v9 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_62;
          v13 = *(_QWORD *)(v4 + 8 * v9 + 32);
          v14 = swift_retain(v13);
        }
        v15 = v5;
        v16 = a4(v5 + v9, v13, v14);
        swift_release(v13);
        v18 = _swiftEmptyArrayStorage[2];
        v17 = _swiftEmptyArrayStorage[3];
        v6 = v18 + 1;
        if (v18 >= v17 >> 1)
          sub_10003F1DC(v17 > 1, v18 + 1, 1);
        ++v9;
        _swiftEmptyArrayStorage[2] = v6;
        _swiftEmptyArrayStorage[v18 + 4] = v16;
        v5 = v15;
        if (v8 == v9)
        {
          v19 = v15 + v9;
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain(v4);
      v19 = v5;
LABEL_31:
      v20 = a2;
      if (v19 == a2)
      {
LABEL_32:
        swift_bridgeObjectRelease(v4);
        return;
      }
      v21 = v4 & 0xFFFFFFFFFFFFFF8;
      if (v4 < 0)
        v21 = v4;
      v29 = v21;
      if (a2 < v5)
        goto LABEL_70;
      if (v19 > a2)
        v20 = v19;
      v30 = v20;
      v32 = v5;
      v5 = v19;
      while (v19 >= v32)
      {
        if (v30 == v5)
          goto LABEL_59;
        if (v35)
        {
          swift_bridgeObjectRetain(v4);
          v22 = _CocoaArrayWrapper.endIndex.getter(v29);
          swift_bridgeObjectRelease(v4);
          if (v8 == v22)
            goto LABEL_32;
        }
        else if (v8 == *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_32;
        }
        if ((v4 & 0xC000000000000001) != 0)
        {
          v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
          if (__OFADD__(v8, 1))
            goto LABEL_61;
        }
        else
        {
          if ((unint64_t)v8 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_60;
          v6 = *(_QWORD *)(v4 + 8 * v8 + 32);
          swift_retain(v6);
          if (__OFADD__(v8, 1))
            goto LABEL_61;
        }
        v23 = ((uint64_t (*)(uint64_t, uint64_t))a4)(v5, v6);
        swift_release(v6);
        v25 = _swiftEmptyArrayStorage[2];
        v24 = _swiftEmptyArrayStorage[3];
        v6 = v25 + 1;
        if (v25 >= v24 >> 1)
          sub_10003F1DC(v24 > 1, v25 + 1, 1);
        ++v5;
        _swiftEmptyArrayStorage[2] = v6;
        _swiftEmptyArrayStorage[v25 + 4] = v23;
        ++v8;
        if (a2 == v5)
          goto LABEL_32;
      }
    }
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    if (v4 < 0)
      v26 = v4;
    else
      v26 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v7 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v4);
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
}

void sub_1004DACF8()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = v0;
  v0[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_forcingInterfaceStyleForOneAlert] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_upSellData] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_appAnalyticsAdditionalData] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_panDismissGesture] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_swipeDismissGesture] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_windowSceneTraitRegistration] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_tapDuringPageTurnGesture] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_selectLineGesture] = 0;
  v2 = &v0[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_statusBarStateProvider];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  v3 = &v0[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_buyButtonHost];
  *v3 = 0;
  v3[1] = 0;
  v4 = OBJC_IVAR____TtC5Books33BookReaderContainerViewController_appIntentsInfo;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone((Class)BCAppIntentsAssetViewControllerInfo), "init");
  v5 = &v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_buyButtonPresenter];
  *((_QWORD *)v5 + 4) = 0;
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_endOfBookExperienceController] = 0;
  swift_weakInit(&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_viewModel], 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_bookPositionProcessor] = 0;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_serviceDelegate]);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate]);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_contentOpenAnimator]);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000002DLL, 0x80000001007CEC20);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_contentReadyIntervalState] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_cancellables] = &_swiftEmptySetSingleton;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_manualCurlDriver] = 0;
  v6 = OBJC_IVAR____TtC5Books33BookReaderContainerViewController_viewSnapshotter;
  v7 = type metadata accessor for ViewSnapshotter();
  v8 = swift_allocObject(v7, 32, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  *(_QWORD *)&v1[v6] = v8;
  *(_QWORD *)(v8 + 24) = 0;
  v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_scrubber] = 1;
  v9 = &v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_closePanningTranslation];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_blurView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_themeChangeWatcher] = 0;
  v10 = OBJC_IVAR____TtC5Books33BookReaderContainerViewController_paginationHostView;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v11 = &v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_analyticsProvider];
  *v11 = 0;
  v11[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_originalWindowInterfaceStyle] = 0;
  v12 = &v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_undoTemporaryThemeStyle];
  *v12 = 0;
  v12[1] = 0;
  v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_turnPageButtonManager] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_lookupCompleteSubscription] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/BookReaderContainerViewController.swift", 45, 2, 268, 0);
  __break(1u);
}

void sub_1004DAFDC(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  char v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *Strong;
  void *v20;
  uint64_t v21;

  v2 = v1;
  v4 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, double))(v5 + 104))(v8, enum case for BooksUIKitFeatureFlag.fluidTransitions(_:), v4, v6);
  v9 = isFeatureEnabled(_:)(v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  if ((v9 & 1) == 0)
    goto LABEL_5;
  v11 = (void *)objc_opt_self(AETestDriver);
  v12 = objc_msgSend(v11, "shared");
  if (!v12)
  {
    __break(1u);
    goto LABEL_13;
  }
  v13 = v12;
  objc_msgSend(v12, "postEvent:sender:", kBETestDriverOpenAnimationStart, v2);

  v14 = objc_msgSend(v11, "shared");
  if (!v14)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v15 = v14;
  objc_msgSend(v14, "postEvent:sender:", kBETestDriverOpenAnimationSetupStart, v2);

LABEL_5:
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_endOfBookExperienceController];
  if (v16)
  {
    swift_retain(*(_QWORD *)&v2[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_endOfBookExperienceController]);
    sub_100331574();
    *(_QWORD *)&v10 = swift_release(v16).n128_u64[0];
  }
  v17 = objc_msgSend(v2, "bc_windowForViewController", v10);
  v18 = objc_msgSend(v17, "overrideUserInterfaceStyle");
  if (v18 != *(id *)&v2[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_originalWindowInterfaceStyle])
    objc_msgSend(v17, "setOverrideUserInterfaceStyle:");
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate]);
  if (Strong)
  {
    v20 = Strong;
    objc_msgSend(Strong, "assetViewController:requestClose:error:", v2, a1 & 1, 0);
    swift_unknownObjectRelease(v20);
  }

}

void sub_1004DB1BC()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  char *v9;

  v1 = *(char **)(v0 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_bookReaderPresenter);
  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor];
  v9 = v1;
  sub_10043AFD8(0);
  v3 = *(_QWORD *)(v2 + 152);
  ObjectType = swift_getObjectType();
  dispatch thunk of CurrentLocationPersisting.bookHasClosed()(ObjectType, v3);
  v5 = *(_QWORD *)(v2 + 104);
  v6 = swift_getObjectType();
  dispatch thunk of Paginating.cancelAllOperations()(v6, v5);
  Strong = swift_weakLoadStrong(&v9[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel]);
  if (Strong)
  {
    v8 = Strong;
    sub_1004E75F0(0);

    swift_release(v8);
  }
  else
  {

  }
}

double sub_1004DB280(uint64_t a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  double result;
  _QWORD v11[5];
  uint64_t v12;

  v4 = swift_allocObject(&unk_10090BAD0, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_allocObject(&unk_10090BAF8, 32, 7);
    *(_QWORD *)(v7 + 16) = sub_1002028E0;
    *(_QWORD *)(v7 + 24) = v4;
    v11[4] = sub_10004DE04;
    v12 = v7;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1002A7214;
    v11[3] = &unk_10090BB10;
    v8 = _Block_copy(v11);
    v9 = v12;
    _Block_copy(a2);
    swift_retain(v4);
    objc_msgSend(v6, "assetViewControllerRequestToBuy:completion:", a1, v8, swift_release(v9).n128_f64[0]);
    _Block_release(v8);
    swift_release(v4);
    *(_QWORD *)&result = swift_unknownObjectRelease(v6).n128_u64[0];
  }
  else
  {
    _Block_copy(a2);
    a2[2](a2, 0);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

void sub_1004DB3D0(uint64_t a1)
{
  _BYTE *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  NSObject *oslog;

  if (v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_forcingInterfaceStyleForOneAlert] == 1)
  {
    v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_forcingInterfaceStyleForOneAlert] = 0;
    oslog = Logger.logObject.getter(a1);
    v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Ignoring single traitCollectionChange", v3, 2u);
      swift_slowDealloc(v3, -1, -1);
    }
  }
  else
  {
    v4 = *(void **)&v1[OBJC_IVAR____TtC5Books33BookReaderContainerViewController_bookReaderHostEnvironmentProvider];
    oslog = objc_msgSend(v1, "traitCollection");
    objc_msgSend(v4, "setTraitCollection:");
  }

}

uint64_t sub_1004DB4C0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004DB4E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004DB508()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

id sub_1004DB52C(char a1)
{
  uint64_t *v1;

  return sub_1004D4AB0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1004DB538()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004DB55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D7450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004DB5A4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004DB5C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

double sub_1004DB5F4()
{
  uint64_t v0;

  return sub_100401E5C(*(_QWORD *)(v0 + 16), v0 + 24);
}

void sub_1004DB600()
{
  uint64_t v0;

  sub_1004D1984(*(_QWORD *)(v0 + 16));
}

id sub_1004DB608(uint64_t a1)
{
  uint64_t v1;

  return sub_1004D19F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1004DB610()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

void sub_1004DB634()
{
  uint64_t v0;

  sub_1004D17D4(*(_QWORD *)(v0 + 32), *(CGFloat *)(v0 + 16), *(double *)(v0 + 24));
}

const char *sub_1004DB640()
{
  return "isEnabled";
}

id sub_1004DB64C@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isEnabled");
  *a2 = (_BYTE)result;
  return result;
}

id sub_1004DB67C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setEnabled:", *a1);
}

void sub_1004DB690(uint64_t a1)
{
  uint64_t v1;

  sub_1004CFAC8(a1, v1);
}

uint64_t sub_1004DB6A0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for OverlayViewModel.Overlay(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1004DB6DC(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004D0AE8(a1, a2, v2);
}

uint64_t sub_1004DB6E4()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004DB708()
{
  uint64_t v0;
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(v0 + 16);
  objc_msgSend(Strong, "setNeedsUpdateOfSupportedInterfaceOrientations");

}

void sub_1004DB73C(char *a1)
{
  sub_1004CECB4(a1);
}

uint64_t sub_1004DB744()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004DB768()
{
  return sub_1004958DC((void (*)(_QWORD))&_swift_release, 32);
}

void sub_1004DB778(uint64_t a1)
{
  uint64_t v1;

  sub_1004CEE04(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1004DB780(uint64_t *a1)
{
  uint64_t v1;

  sub_1004CF160(a1, v1);
}

double sub_1004DB788(uint64_t a1)
{
  uint64_t v1;

  return sub_10032F690(a1, v1);
}

uint64_t sub_1004DB790()
{
  return sub_1004958DC((void (*)(_QWORD))&_swift_unknownObjectRelease, 40);
}

double sub_1004DB7A0(unsigned __int8 *a1)
{
  uint64_t *v1;

  return sub_10032F720(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1004DB7AC(uint64_t a1)
{
  uint64_t v1;

  return sub_10032FB30(a1, v1);
}

void sub_1004DB7B4(uint64_t a1)
{
  uint64_t v1;

  sub_10032FBC0(a1, v1);
}

double sub_1004DB7BC(uint64_t a1)
{
  uint64_t v1;

  return sub_100330028(a1, v1);
}

double sub_1004DB7C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1003301D8(a1, v1);
}

uint64_t sub_1004DB7CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004DB7F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1004D7B20(a1, *(void **)(v1 + 16));
}

void sub_1004DB848(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v6[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[1] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[2] = &unk_100729998;
  v6[3] = &unk_100729998;
  v6[4] = &unk_1007299B0;
  sub_100288A64(319);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    v4 = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 0, 7, v6, a1 + 32);
    }
  }
}

uint64_t *sub_1004DB8F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  unsigned int v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;

  v6 = type metadata accessor for ColorScheme(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8 & 0xF8 | 7;
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v10 = 8;
  else
    v10 = *(_QWORD *)(v7 + 64);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = ((v10 + 1 + (((v8 & 0xF8) + 95) & ~v9) + v12) & ~v12) + *(_QWORD *)(v11 + 64);
  v14 = (*(_DWORD *)(v11 + 80) | v8) & 0x100000;
  if ((v12 | v9) != 7 || v14 != 0 || v13 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v18 = (uint64_t *)(v17 + (((v12 | v9) + 16) & ~(v12 | v9)));
    swift_retain(v17);
  }
  else
  {
    v40 = *(_QWORD *)(a3 + 16);
    v41 = a1;
    *a1 = *a2;
    v19 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = ~v9;
    v22 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    v39 = v6;
    if (*v23 >= 0xFFFFFFFFuLL)
    {
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      swift_retain(v24);
    }
    else
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
    }
    v25 = ((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8;
    v26 = ((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_BYTE *)v25 = *(_BYTE *)v26;
    v27 = *(_QWORD *)(v26 + 8);
    *(_QWORD *)(v25 + 8) = v27;
    v28 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    v30 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v30;
    v31 = *(_QWORD *)(v29 + 32);
    *(_QWORD *)(v28 + 32) = v31;
    v32 = (_QWORD *)((v28 + v9 + 40) & v21);
    v33 = (uint64_t *)((v29 + v9 + 40) & v21);
    v34 = *((unsigned __int8 *)v33 + v10);
    swift_retain(v27);
    swift_retain(v31);
    if (v34 >= 2)
    {
      if (v10 <= 3)
        v35 = v10;
      else
        v35 = 4;
      __asm { BR              X11 }
    }
    if (v34 == 1)
    {
      (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v7 + 16))(v32, v33, v39);
      v36 = 1;
    }
    else
    {
      v37 = *v33;
      *v32 = *v33;
      swift_retain(v37);
      v36 = 0;
    }
    v18 = v41;
    *((_BYTE *)v32 + v10) = v36;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)v32 + v10 + v12 + 1) & ~v12, ((unint64_t)v33 + v10 + v12 + 1) & ~v12, v40);
  }
  return v18;
}

uint64_t sub_1004DBB60(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v3 = (_QWORD *)((((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*v3 >= 0xFFFFFFFFuLL)
    swift_release(v3[1]);
  v4 = ((unint64_t)v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v4 + 8));
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v5 + 32));
  v6 = type metadata accessor for ColorScheme(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v9 = (_QWORD *)((v5 + v8 + 40) & ~v8);
  if (*(_QWORD *)(v7 + 64) <= 8uLL)
    v10 = 8;
  else
    v10 = *(_QWORD *)(v7 + 64);
  v11 = *((unsigned __int8 *)v9 + v10);
  if (v11 >= 2)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X13 }
  }
  if (v11 == 1)
    (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  else
    swift_release(*v9);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)v9 + v10 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1004DBCB4(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *a2;
  v5 = (unint64_t)a2 + 15;
  *a1 = v6;
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  *v7 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFF8);
  v8 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (_OWORD *)(((v5 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*(_QWORD *)v9 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v8 = *v9;
  }
  else
  {
    v10 = *(_QWORD *)((((v5 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
    swift_retain(v10);
  }
  v11 = (v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v11 = *(_BYTE *)v12;
  v13 = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v11 + 8) = v13;
  v14 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  v17 = *(_QWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 32) = v17;
  v18 = type metadata accessor for ColorScheme(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(_DWORD *)(v19 + 80) & 0xF8;
  v21 = v20 + 47;
  v22 = v20 + 47 + v14;
  v23 = ~v20 & 0xFFFFFFFFFFFFFFF8;
  v24 = (_QWORD *)(v22 & v23);
  v25 = (uint64_t *)((v21 + v15) & v23);
  if (*(_QWORD *)(v19 + 64) <= 8uLL)
    v26 = 8;
  else
    v26 = *(_QWORD *)(v19 + 64);
  v27 = *((unsigned __int8 *)v25 + v26);
  swift_retain(v13);
  swift_retain(v17);
  if (v27 >= 2)
  {
    if (v26 <= 3)
      v28 = v26;
    else
      v28 = 4;
    __asm { BR              X11 }
  }
  if (v27 == 1)
  {
    (*(void (**)(_QWORD *, uint64_t *, uint64_t))(v19 + 16))(v24, v25, v18);
    v29 = 1;
  }
  else
  {
    v30 = *v25;
    *v24 = *v25;
    swift_retain(v30);
    v29 = 0;
  }
  *((_BYTE *)v24 + v26) = v29;
  v31 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v31 + 16))(((unint64_t)v24 + v26 + *(unsigned __int8 *)(v31 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80), ((unint64_t)v25 + v26 + *(unsigned __int8 *)(v31 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  return a1;
}

_QWORD *sub_1004DBEAC(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v6 = *a2;
  v5 = (unint64_t)a2 + 15;
  *a1 = v6;
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  *v7 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = (unint64_t *)(((v5 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  if (*v8 < 0xFFFFFFFFuLL)
  {
    if (v10 >= 0xFFFFFFFF)
    {
      v13 = v9[1];
      *v8 = v10;
      v8[1] = v13;
      swift_retain(v13);
      goto LABEL_8;
    }
  }
  else
  {
    if (v10 >= 0xFFFFFFFF)
    {
      v11 = v9[1];
      v12 = v8[1];
      *v8 = v10;
      v8[1] = v11;
      swift_retain(v11);
      swift_release(v12);
      goto LABEL_8;
    }
    swift_release(v8[1]);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
LABEL_8:
  v14 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 8) = v17;
  swift_retain(v17);
  swift_release(v16);
  v18 = (_QWORD *)((v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)((v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v18[1] = v19[1];
  v18[2] = v19[2];
  v18[3] = v19[3];
  v20 = v18[4];
  v21 = v19[4];
  v18[4] = v21;
  swift_retain(v21);
  swift_release(v20);
  v22 = type metadata accessor for ColorScheme(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_DWORD *)(v23 + 80) & 0xF8;
  v25 = v24 + 47;
  v26 = (unint64_t)v18 + v24 + 47;
  v27 = ~v24 & 0xFFFFFFFFFFFFFFF8;
  v28 = (uint64_t *)(v26 & v27);
  v29 = (uint64_t *)(((unint64_t)v19 + v25) & v27);
  if (*(_QWORD *)(v23 + 64) <= 8uLL)
    v30 = 8;
  else
    v30 = *(_QWORD *)(v23 + 64);
  if (v28 != v29)
  {
    v31 = v22;
    v32 = *((unsigned __int8 *)v28 + v30);
    if (v32 >= 2)
    {
      if (v30 <= 3)
        v33 = v30;
      else
        v33 = 4;
      __asm { BR              X12 }
    }
    if (v32 == 1)
      (*(void (**)(uint64_t *, uint64_t))(v23 + 8))(v28, v22);
    else
      swift_release(*v28);
    v34 = *((unsigned __int8 *)v29 + v30);
    if (v34 >= 2)
    {
      if (v30 <= 3)
        v35 = v30;
      else
        v35 = 4;
      __asm { BR              X12 }
    }
    if (v34 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v23 + 16))(v28, v29, v31);
      *((_BYTE *)v28 + v30) = 1;
    }
    else
    {
      v36 = *v29;
      *v28 = *v29;
      *((_BYTE *)v28 + v30) = 0;
      swift_retain(v36);
    }
  }
  v37 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v37 + 24))(((unint64_t)v28 + v30 + *(unsigned __int8 *)(v37 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80), ((unint64_t)v29 + v30 + *(unsigned __int8 *)(v37 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  return a1;
}

_QWORD *sub_1004DC1A0(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v6 = *a2;
  v5 = (unint64_t)a2 + 15;
  *a1 = v6;
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  *v7 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFF8);
  v8 = ((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (_OWORD *)(((v5 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if (*(_QWORD *)v9 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v8 = *v9;
  }
  else
  {
    v10 = *(_QWORD *)((((v5 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_QWORD *)v8 = *(_QWORD *)v9;
    *(_QWORD *)(v8 + 8) = v10;
  }
  v11 = (_OWORD *)((v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  v13 = ((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v14 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = *(_OWORD *)v14;
  v16 = *(_OWORD *)(v14 + 16);
  *(_QWORD *)(v13 + 32) = *(_QWORD *)(v14 + 32);
  *(_OWORD *)v13 = v15;
  *(_OWORD *)(v13 + 16) = v16;
  v17 = type metadata accessor for ColorScheme(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_DWORD *)(v18 + 80) & 0xF8;
  v20 = v19 + 47;
  v21 = v19 + 47 + v13;
  v22 = ~v19 & 0xFFFFFFFFFFFFFFF8;
  v23 = (_QWORD *)(v21 & v22);
  v24 = (_QWORD *)((v20 + v14) & v22);
  if (*(_QWORD *)(v18 + 64) <= 8uLL)
    v25 = 8;
  else
    v25 = *(_QWORD *)(v18 + 64);
  v26 = *((unsigned __int8 *)v24 + v25);
  if (v26 >= 2)
  {
    if (v25 <= 3)
      v27 = v25;
    else
      v27 = 4;
    __asm { BR              X13 }
  }
  if (v26 == 1)
  {
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v18 + 32))(v23, v24, v17);
    v28 = 1;
  }
  else
  {
    v28 = 0;
    *v23 = *v24;
  }
  *((_BYTE *)v23 + v25) = v28;
  v29 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v29 + 32))(((unint64_t)v23 + v25 + *(unsigned __int8 *)(v29 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80), ((unint64_t)v24 + v25 + *(unsigned __int8 *)(v29 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  return a1;
}

_QWORD *sub_1004DC360(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v6 = *a2;
  v5 = (unint64_t)a2 + 15;
  *a1 = v6;
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  *v7 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFF8);
  v8 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = (unint64_t *)(((v5 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  if (*v8 < 0xFFFFFFFFuLL)
  {
    if (v10 >= 0xFFFFFFFF)
    {
      v13 = *(_QWORD *)((((v5 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
      *v8 = v10;
      v8[1] = v13;
      goto LABEL_8;
    }
  }
  else
  {
    if (v10 >= 0xFFFFFFFF)
    {
      v11 = *(_QWORD *)((((v5 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
      v12 = v8[1];
      *v8 = v10;
      v8[1] = v11;
      swift_release(v12);
      goto LABEL_8;
    }
    swift_release(v8[1]);
  }
  *(_OWORD *)v8 = *(_OWORD *)v9;
LABEL_8:
  v14 = ((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_BYTE *)v14 = *(_BYTE *)v15;
  v16 = *(_QWORD *)(v14 + 8);
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  swift_release(v16);
  v17 = (_QWORD *)((v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v17[1] = v18[1];
  v17[2] = v18[2];
  v17[3] = v18[3];
  v19 = v17[4];
  v17[4] = v18[4];
  swift_release(v19);
  v20 = type metadata accessor for ColorScheme(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(_DWORD *)(v21 + 80) & 0xF8;
  v23 = v22 + 47;
  v24 = (unint64_t)v17 + v22 + 47;
  v25 = ~v22 & 0xFFFFFFFFFFFFFFF8;
  v26 = (_QWORD *)(v24 & v25);
  v27 = (_QWORD *)(((unint64_t)v18 + v23) & v25);
  if (*(_QWORD *)(v21 + 64) <= 8uLL)
    v28 = 8;
  else
    v28 = *(_QWORD *)(v21 + 64);
  if (v26 != v27)
  {
    v29 = v20;
    v30 = *((unsigned __int8 *)v26 + v28);
    if (v30 >= 2)
    {
      if (v28 <= 3)
        v31 = v28;
      else
        v31 = 4;
      __asm { BR              X12 }
    }
    if (v30 == 1)
      (*(void (**)(_QWORD *, uint64_t))(v21 + 8))(v26, v20);
    else
      swift_release(*v26);
    v32 = *((unsigned __int8 *)v27 + v28);
    if (v32 >= 2)
    {
      if (v28 <= 3)
        v33 = v28;
      else
        v33 = 4;
      __asm { BR              X12 }
    }
    if (v32 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v21 + 32))(v26, v27, v29);
      v34 = 1;
    }
    else
    {
      v34 = 0;
      *v26 = *v27;
    }
    *((_BYTE *)v26 + v28) = v34;
  }
  v35 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v35 + 40))(((unint64_t)v26 + v28 + *(unsigned __int8 *)(v35 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80), ((unint64_t)v27 + v28 + *(unsigned __int8 *)(v35 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
  return a1;
}

uint64_t sub_1004DC634(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v19;
  int v20;
  int v21;
  unint64_t *v22;
  unint64_t v23;

  v6 = *(_QWORD *)(type metadata accessor for ColorScheme(0) - 8);
  if (*(_QWORD *)(v6 + 64) <= 8uLL)
    v7 = 8;
  else
    v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (!a2)
    return 0;
  v11 = *(_DWORD *)(v6 + 80) & 0xF8;
  v12 = v11 | 7;
  v13 = *(unsigned __int8 *)(v8 + 80);
  v14 = v7 + v13 + 1;
  if (a2 <= v10)
    goto LABEL_27;
  v15 = ((v14 + ((v11 + 95) & ~v12)) & ~v13) + *(_QWORD *)(v8 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v19 = ((a2 - v10 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v19 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v19 < 2)
    {
LABEL_27:
      v22 = (unint64_t *)((((a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v9 > 0x7FFFFFFE)
        return (*(uint64_t (**)(unint64_t))(v8 + 48))((v14
                                                                      + (((((((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                          + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                        + v12
                                                                        + 40) & ~v12)) & ~v13);
      v23 = *v22;
      if (v23 >= 0xFFFFFFFF)
        LODWORD(v23) = -1;
      if ((v23 + 1) >= 2)
        return v23;
      else
        return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_27;
LABEL_18:
  v20 = (v17 - 1) << v16;
  if (v15 > 3)
    v20 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v21 = v15;
    else
      v21 = 4;
    __asm { BR              X12 }
  }
  return v10 + v20 + 1;
}

void sub_1004DC824(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v8 = *(_QWORD *)(type metadata accessor for ColorScheme(0) - 8);
  v9 = 8;
  if (*(_QWORD *)(v8 + 64) > 8uLL)
    v9 = *(_QWORD *)(v8 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v10 + 84) <= 0x7FFFFFFEu)
    v11 = 2147483646;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = *(_DWORD *)(v8 + 80) & 0xF8;
  v13 = ((v9 + *(unsigned __int8 *)(v10 + 80) + 1 + ((v12 + 95) & ~(v12 | 7))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(_QWORD *)(v10 + 64);
  if (a3 <= v11)
  {
    v14 = 0;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = &dword_100000004;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = &_mh_execute_header.magic + 1;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X15 }
}

uint64_t type metadata accessor for PopoverListHighlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PopoverListHighlight);
}

uint64_t sub_1004DCAAC(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_100874280, 1);
}

uint64_t sub_1004DCAE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v21[2];
  _OWORD v22[2];
  uint64_t v23;

  *(double *)a6 = a7;
  *(double *)(a6 + 8) = a8;
  *(_QWORD *)(a6 + 16) = a1;
  *(_QWORD *)(a6 + 24) = a2;
  LOBYTE(v21[0]) = 0;
  State.init(wrappedValue:)(v22, v21, &type metadata for Bool);
  v12 = *((_QWORD *)&v22[0] + 1);
  *(_BYTE *)(a6 + 32) = v22[0];
  *(_QWORD *)(a6 + 40) = v12;
  type metadata accessor for CGRect(0);
  memset(v21, 0, sizeof(v21));
  State.init(wrappedValue:)(v22, v21, v13);
  v14 = v23;
  v15 = v22[1];
  *(_OWORD *)(a6 + 48) = v22[0];
  *(_OWORD *)(a6 + 64) = v15;
  *(_QWORD *)(a6 + 80) = v14;
  v17 = (_QWORD *)(a6 + *(int *)(type metadata accessor for PopoverListHighlight(0, a4, a5, v16) + 52));
  *v17 = swift_getKeyPath(&unk_100729A28);
  v18 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  v19 = swift_storeEnumTagMultiPayload(v17, v18, 0);
  return a3(v19);
}

uint64_t sub_1004DCBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  __n128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __n128 v125;
  double v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  __n128 v137;
  _QWORD *v138;
  unint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  __n128 v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t OpaqueTypeConformance2;
  char *v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t WitnessTable;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  uint64_t v232;
  void *v233;
  char v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  void *v240;
  uint64_t v241;
  void *v242;
  uint64_t v243;
  void *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  void *v254;
  uint64_t v255;
  void *v256;
  uint64_t v257;
  uint64_t v258;

  v224 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v218 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(a1);
  v217 = (uint64_t)&v172 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v5);
  v177 = (uint64_t)&v172 - v7;
  v204 = type metadata accessor for LocalCoordinateSpace(0, v6);
  v8 = __chkstk_darwin(v204);
  v203 = (char *)&v172 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v208 = type metadata accessor for DragGesture(0, v8);
  v207 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v206 = (char *)&v172 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v213 = sub_10004CFD4(&qword_1009E7830);
  v211 = *(_QWORD *)(v213 - 8);
  __chkstk_darwin(v213);
  v209 = (char *)&v172 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009E7838);
  v212 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v210 = (char *)&v172 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(v14);
  v193 = v15;
  v205 = (char *)&v172 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v216 = sub_10004CFD4(&qword_1009E7840);
  __chkstk_darwin(v216);
  v215 = (uint64_t)&v172 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100030B74(&qword_1009D5140);
  v18 = type metadata accessor for ModifiedContent(0, v3, v17);
  v182 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v180 = (char *)&v172 - v19;
  v20 = type metadata accessor for ModifiedContent(0, v18, &type metadata for _PaddingLayout);
  v183 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v181 = (char *)&v172 - v21;
  v22 = type metadata accessor for ModifiedContent(0, v20, &type metadata for _PaddingLayout);
  v188 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v184 = (char *)&v172 - v23;
  v24 = sub_100030B74(&qword_1009E7848);
  v25 = type metadata accessor for ModifiedContent(0, v22, v24);
  v191 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v190 = (char *)&v172 - v26;
  v27 = sub_100030B74(&qword_1009E7850);
  v28 = type metadata accessor for ModifiedContent(0, v25, v27);
  v202 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v225 = (char *)&v172 - v29;
  v221 = a1;
  v30 = *(_QWORD *)(a1 + 24);
  v31 = sub_100030B34(&qword_1009D5180, &qword_1009D5140, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
  v229 = v30;
  v257 = v30;
  v258 = v31;
  v185 = v18;
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v18);
  v255 = WitnessTable;
  v256 = &protocol witness table for _PaddingLayout;
  v186 = v20;
  v179 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v20);
  v253 = v179;
  v254 = &protocol witness table for _PaddingLayout;
  v189 = v22;
  v32 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v22);
  v33 = sub_100030B34(&qword_1009E7858, &qword_1009E7848, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v251 = v32;
  v252 = v33;
  v192 = v25;
  v34 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v25);
  v35 = v3;
  v36 = sub_100030B34(&qword_1009E7860, &qword_1009E7850, (uint64_t)&protocol conformance descriptor for _GeometryActionModifier<A>);
  v187 = v34;
  v249 = v34;
  v250 = v36;
  v37 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v28);
  v38 = sub_100030B34(&qword_1009E7868, &qword_1009E7838, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  v245 = v28;
  v246 = v12;
  v228 = v12;
  v227 = v37;
  v247 = v37;
  v248 = v38;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v245, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 0);
  v195 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v194 = (char *)&v172 - v40;
  v196 = v41;
  v42 = type metadata accessor for ModifiedContent(0, v41, &type metadata for _PaddingLayout);
  v199 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v198 = (char *)&v172 - v43;
  v44 = type metadata accessor for ModifiedContent(0, v42, &type metadata for _PaddingLayout);
  v200 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v46 = (char *)&v172 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  v197 = (char *)&v172 - v48;
  __chkstk_darwin(v49);
  v201 = (uint64_t)&v172 - v50;
  v51 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v51);
  v53 = (_OWORD *)((char *)&v172 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0));
  v223 = type metadata accessor for _ConditionalContent(0, v44, v35);
  v222 = *(_QWORD *)(v223 - 8);
  __chkstk_darwin(v223);
  v55 = (char *)&v172 - v54;
  v56 = v226[2];
  if (v56)
  {
    v172 = v32;
    v218 = v56;
    v173 = v46;
    v174 = v55;
    v175 = v44;
    v176 = v42;
    v219 = v38;
    v177 = v28;
    v57 = v226[3];
    v58 = v35;
    v59 = (char *)v53 + *(int *)(v51 + 20);
    v60 = enum case for RoundedCornerStyle.continuous(_:);
    v61 = v226;
    v62 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 104))(v59, v60, v62);
    __asm { FMOV            V0.2D, #4.0 }
    *v53 = _Q0;
    v68 = v221;
    v69 = sub_100008DB0(&qword_1009D8F80, (uint64_t (*)(uint64_t))&type metadata accessor for RoundedRectangle, (uint64_t)&protocol conformance descriptor for RoundedRectangle);
    v217 = v57;
    v70 = swift_retain(v57);
    v71 = v180;
    v220 = v58;
    v72 = v229;
    v73 = View.contentShape<A>(_:eoFill:)(v53, 0, v58, v51, v229, v69, v70);
    v74 = static Edge.Set.horizontal.getter(v73);
    v75 = v181;
    v76 = v185;
    View.padding(_:_:)(v74, *v61, 0, v185, WitnessTable);
    v77 = (*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v71, v76);
    v78 = static Edge.Set.vertical.getter(v77);
    v79 = v184;
    v80 = v186;
    View.padding(_:_:)(v78, v61[1], 0, v186, v179);
    (*(void (**)(char *, uint64_t))(v183 + 8))(v75, v80);
    v81 = v61[5];
    LOBYTE(v245) = *((_BYTE *)v61 + 32);
    v246 = v81;
    sub_10004CFD4(&qword_1009D8450);
    v82 = State.wrappedValue.getter(&v234);
    v83 = v61;
    v84 = v68;
    v85 = (uint64_t)v53;
    v86 = v79;
    v87 = v72;
    if (v234 == 1)
    {
      v88 = static Color.accentColor.getter(v82);
      v89 = v83;
      v90.n128_f64[0] = sub_1004DDD9C();
      v91 = Color.opacity(_:)(v88, v90);
      swift_release(v88);
    }
    else
    {
      v89 = v83;
      v91 = static Color.clear.getter(v82);
    }
    v102 = v85;
    v186 = v85;
    v103 = v215;
    v104 = sub_10025BC3C(v102, v215);
    v105 = v216;
    *(_QWORD *)(v103 + *(int *)(v216 + 52)) = v91;
    *(_WORD *)(v103 + *(int *)(v105 + 56)) = 256;
    v106 = static Alignment.center.getter(v104);
    v108 = v107;
    v109 = sub_100030B34(&qword_1009E7870, &qword_1009E7840, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    v110 = v190;
    v111 = v108;
    v112 = v189;
    View.background<A>(_:alignment:)(v103, v106, v111, v189, v105, v172, v109);
    sub_1004DE0C4(v103);
    (*(void (**)(char *, uint64_t))(v188 + 8))(v86, v112);
    v113 = v214;
    v216 = *(_QWORD *)(v214 + 16);
    v114 = v205;
    ((void (*)(char *, _QWORD *, uint64_t))v216)(v205, v89, v84);
    v115 = *(unsigned __int8 *)(v113 + 80);
    v116 = ((v115 + 32) & ~v115) + v193;
    v117 = (v115 + 32) & ~v115;
    v215 = v117;
    v193 = v115 | 7;
    v189 = v116;
    v118 = swift_allocObject(&unk_10090BEC8, v116, v115 | 7);
    v119 = v220;
    *(_QWORD *)(v118 + 16) = v220;
    *(_QWORD *)(v118 + 24) = v87;
    v120 = v119;
    v214 = *(_QWORD *)(v113 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v214)(v118 + v117, v114, v84);
    type metadata accessor for CGSize(0);
    v122 = v121;
    v123 = sub_100008DB0(&qword_1009E7878, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, (uint64_t)&protocol conformance descriptor for CGSize);
    v124 = v192;
    View.onGeometryChange<A>(of:do:)(sub_1004DDE94, 0, sub_1004DE108, v118, v192, v122, v187, v123);
    v125 = swift_release(v118);
    v126 = (*(double (**)(char *, uint64_t, __n128))(v191 + 8))(v110, v124, v125);
    v127 = v203;
    static CoordinateSpaceProtocol<>.local.getter(v126);
    v128 = v206;
    DragGesture.init<A>(minimumDistance:coordinateSpace:)(v127, v204, &protocol witness table for LocalCoordinateSpace, 0.0);
    ((void (*)(char *, _QWORD *, uint64_t))v216)(v114, v89, v84);
    v129 = v193;
    v130 = swift_allocObject(&unk_10090BEF0, v116, v193);
    v131 = v120;
    v132 = v229;
    *(_QWORD *)(v130 + 16) = v120;
    *(_QWORD *)(v130 + 24) = v132;
    ((void (*)(uint64_t, char *, uint64_t))v214)(v130 + v215, v114, v84);
    v133 = sub_100008DB0(&qword_1009E7880, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture, (uint64_t)&protocol conformance descriptor for DragGesture);
    v134 = sub_100008DB0(&qword_1009D93E8, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture.Value, (uint64_t)&protocol conformance descriptor for DragGesture.Value);
    v135 = v209;
    v136 = v208;
    Gesture<>.onChanged(_:)(sub_1004DE164, v130, v208, v133, v134);
    v137 = swift_release(v130);
    (*(void (**)(char *, uint64_t, __n128))(v207 + 8))(v128, v136, v137);
    v138 = v226;
    ((void (*)(char *, _QWORD *, uint64_t))v216)(v114, v226, v84);
    v139 = (v189 + 7) & 0xFFFFFFFFFFFFFFF8;
    v140 = swift_allocObject(&unk_10090BF18, v139 + 16, v129);
    *(_QWORD *)(v140 + 16) = v131;
    *(_QWORD *)(v140 + 24) = v132;
    ((void (*)(uint64_t, char *, uint64_t))v214)(v140 + v215, v114, v84);
    v141 = (_QWORD *)(v140 + v139);
    v142 = v217;
    *v141 = v218;
    v141[1] = v142;
    v143 = sub_100030B34(&qword_1009E7888, &qword_1009E7830, (uint64_t)&protocol conformance descriptor for _ChangedGesture<A>);
    swift_retain(v142);
    v144 = v210;
    v145 = v213;
    Gesture.onEnded(_:)(sub_1004DE2CC, v140, v213, v143);
    v146 = swift_release(v140);
    v147 = (*(uint64_t (**)(char *, uint64_t, __n128))(v211 + 8))(v135, v145, v146);
    v148 = static GestureMask.all.getter(v147);
    v149 = v194;
    v99 = v177;
    v150 = v228;
    v151 = v227;
    v152 = v219;
    v153 = v225;
    View.simultaneousGesture<A>(_:including:)(v144, v148, v177, v228);
    (*(void (**)(char *, uint64_t))(v212 + 8))(v144, v150);
    v154 = (*(uint64_t (**)(char *, uint64_t))(v202 + 8))(v153, v99);
    v155 = static Edge.Set.horizontal.getter(v154);
    v156 = *v138 ^ 0x8000000000000000;
    v245 = v99;
    v246 = v150;
    v247 = v151;
    v248 = v152;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v245, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
    v158 = v198;
    v159 = v156;
    v160 = v196;
    View.padding(_:_:)(v155, v159, 0, v196, OpaqueTypeConformance2);
    v161 = (*(uint64_t (**)(char *, uint64_t))(v195 + 8))(v149, v160);
    v162 = static Edge.Set.vertical.getter(v161);
    v163 = v138[1] ^ 0x8000000000000000;
    v232 = OpaqueTypeConformance2;
    v233 = &protocol witness table for _PaddingLayout;
    v42 = v176;
    v164 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v176);
    v165 = (uint64_t)v197;
    View.padding(_:_:)(v162, v163, 0, v42, v164);
    (*(void (**)(char *, uint64_t))(v199 + 8))(v158, v42);
    v230 = v164;
    v231 = &protocol witness table for _PaddingLayout;
    v98 = v229;
    v101 = v175;
    v166 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v175);
    v167 = v201;
    sub_100344038(v165, v101, v201);
    v168 = *(void (**)(uint64_t, uint64_t))(v200 + 8);
    v168(v165, v101);
    v169 = (uint64_t)v173;
    sub_100341C00(v167, v101, (uint64_t)v173);
    v55 = v174;
    sub_100265E68(v169, v101, v220, v166, v98);
    sub_10002AD00(v218, v217);
    v168(v169, v101);
    v168(v167, v101);
    sub_10025BC80(v186);
    v38 = v219;
    v100 = v227;
    v97 = v228;
  }
  else
  {
    v92 = v177;
    v93 = v229;
    sub_100344038((uint64_t)v226 + *(int *)(v221 + 56), v35, v177);
    v94 = v217;
    sub_100341C00(v92, v35, v217);
    v245 = v28;
    v246 = v228;
    v247 = v227;
    v248 = v38;
    v243 = swift_getOpaqueTypeConformance2(&v245, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
    v244 = &protocol witness table for _PaddingLayout;
    v241 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v42);
    v242 = &protocol witness table for _PaddingLayout;
    v95 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v44);
    sub_100265F2C(v94, v44, v35, v95, v93);
    v96 = *(void (**)(uint64_t, uint64_t))(v218 + 8);
    v96(v94, v35);
    v96(v92, v35);
    v97 = v228;
    v98 = v93;
    v99 = v28;
    v100 = v227;
    v101 = v44;
  }
  v245 = v99;
  v246 = v97;
  v247 = v100;
  v248 = v38;
  v239 = swift_getOpaqueTypeConformance2(&v245, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
  v240 = &protocol witness table for _PaddingLayout;
  v237 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v42);
  v238 = &protocol witness table for _PaddingLayout;
  v235 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v101);
  v236 = v98;
  v170 = v223;
  swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v223);
  sub_100341C00((uint64_t)v55, v170, v224);
  return (*(uint64_t (**)(char *, uint64_t))(v222 + 8))(v55, v170);
}

double sub_1004DDD9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  void (*v8)(char *, uint64_t);
  double result;
  uint64_t v10;

  v0 = type metadata accessor for ColorScheme(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v6 = (char *)&v10 - v5;
  sub_10066848C((uint64_t)&v10 - v5);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for ColorScheme.dark(_:), v0);
  v7 = static ColorScheme.== infix(_:_:)(v6, v3);
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v3, v0);
  v8(v6, v0);
  result = 0.12;
  if ((v7 & 1) != 0)
    return 0.15;
  return result;
}

void sub_1004DDE94(uint64_t a1@<X8>)
{
  uint64_t v2;

  *(double *)a1 = GeometryProxy.size.getter();
  *(_QWORD *)(a1 + 8) = v2;
}

double sub_1004DDEBC(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  double result;
  _QWORD v6[2];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a2 + 80);
  v3 = *(_OWORD *)(a2 + 64);
  v8 = *(_OWORD *)(a2 + 48);
  v9 = v3;
  v10 = v2;
  v6[0] = 0;
  v6[1] = 0;
  v7 = *a1;
  v4 = sub_10004CFD4(&qword_1009E7890);
  *(_QWORD *)&result = State.wrappedValue.setter(v6, v4).n128_u64[0];
  return result;
}

double sub_1004DDF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  _BYTE v9[9];
  uint64_t v10;

  type metadata accessor for PopoverListHighlight(0, a3, a4, a4);
  v5 = sub_1004DDF8C();
  v6 = *(_QWORD *)(a2 + 40);
  v9[1] = *(_BYTE *)(a2 + 32);
  v10 = v6;
  v9[0] = v5;
  v7 = sub_10004CFD4(&qword_1009D8450);
  *(_QWORD *)&result = State.wrappedValue.setter(v9, v7).n128_u64[0];
  return result;
}

BOOL sub_1004DDF8C()
{
  _QWORD *v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  _QWORD v7[4];
  CGPoint v8;
  CGRect v9;

  sub_10004CFD4(&qword_1009E7890);
  v0 = State.wrappedValue.getter(v7);
  v1 = *(double *)v7;
  v2 = *(double *)&v7[1];
  v3 = *(double *)&v7[2];
  v4 = *(double *)&v7[3];
  v8.x = DragGesture.Value.location.getter(v0);
  v8.y = v5;
  v9.origin.x = v1;
  v9.origin.y = v2;
  v9.size.width = v3;
  v9.size.height = v4;
  return CGRectContainsPoint(v9, v8);
}

uint64_t sub_1004DE014(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _BYTE v13[9];
  uint64_t v14;

  v9 = *(_QWORD *)(a2 + 40);
  v13[1] = *(_BYTE *)(a2 + 32);
  v14 = v9;
  v13[0] = 0;
  v10 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.setter(v13, v10);
  type metadata accessor for PopoverListHighlight(0, a5, a6, v11);
  result = sub_1004DDF8C();
  if ((result & 1) != 0)
    return a3();
  return result;
}

uint64_t sub_1004DE0C4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009E7840);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_1004DE108(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PopoverListHighlight(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  return sub_1004DDEBC(a1, v4 + ((v6 + 32) & ~v6));
}

double sub_1004DE164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PopoverListHighlight(0, v6, v7, a4) - 8) + 80);
  return sub_1004DDF14(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_1004DE1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  unint64_t v16;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for PopoverListHighlight(0, v5, *(_QWORD *)(v4 + 24), a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = *(_QWORD *)(v7 + 64);
  v11 = (char *)(v4 + v9);
  if (*(_QWORD *)(v4 + v9 + 16))
    swift_release(*((_QWORD *)v11 + 3));
  swift_release(*((_QWORD *)v11 + 5));
  swift_release(*((_QWORD *)v11 + 10));
  v12 = &v11[*(int *)(v6 + 52)];
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v12, v13) == 1)
  {
    v14 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
  }
  else
  {
    v15 = swift_release(*(_QWORD *)v12);
  }
  v16 = (v10 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(char *, uint64_t, __n128))(*(_QWORD *)(v5 - 8) + 8))(&v11[*(int *)(v6 + 56)], v5, v15);
  swift_release(*(_QWORD *)(v4 + v16 + 8));
  return swift_deallocObject(v4, v16 + 16, v8 | 7);
}

uint64_t sub_1004DE2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(_QWORD *)(type metadata accessor for PopoverListHighlight(0, v6, v7, a4) - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = v4 + ((*(_QWORD *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1004DE014(a1, v4 + v9, *(uint64_t (**)(void))v10, *(_QWORD *)(v10 + 8), v6, v7);
}

uint64_t sub_1004DE344(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t WitnessTable;
  void *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *a1;
  v2 = a1[1];
  v3 = sub_100030B74(&qword_1009D5140);
  v4 = type metadata accessor for ModifiedContent(255, v1, v3);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _PaddingLayout);
  v6 = type metadata accessor for ModifiedContent(255, v5, &type metadata for _PaddingLayout);
  v7 = sub_100030B74(&qword_1009E7848);
  v8 = type metadata accessor for ModifiedContent(255, v6, v7);
  v9 = sub_100030B74(&qword_1009E7850);
  v10 = type metadata accessor for ModifiedContent(255, v8, v9);
  v11 = sub_100030B74(&qword_1009E7838);
  v31 = v2;
  v32 = sub_100030B34(&qword_1009D5180, &qword_1009D5140, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v4);
  v30 = &protocol witness table for _PaddingLayout;
  v27 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  v28 = &protocol witness table for _PaddingLayout;
  v25 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v6);
  v26 = sub_100030B34(&qword_1009E7858, &qword_1009E7848, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
  v23 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  v24 = sub_100030B34(&qword_1009E7860, &qword_1009E7850, (uint64_t)&protocol conformance descriptor for _GeometryActionModifier<A>);
  v12 = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v10);
  v13 = sub_100030B34(&qword_1009E7868, &qword_1009E7838, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  v19 = v10;
  v20 = v11;
  v21 = v12;
  v22 = v13;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(255, &v19, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 0);
  v15 = type metadata accessor for ModifiedContent(255, OpaqueTypeMetadata2, &type metadata for _PaddingLayout);
  v16 = type metadata accessor for ModifiedContent(255, v15, &type metadata for _PaddingLayout);
  v17 = type metadata accessor for _ConditionalContent(255, v16, v1);
  v19 = v10;
  v20 = v11;
  v21 = v12;
  v22 = v13;
  swift_getOpaqueTypeConformance2(&v19, &opaque type descriptor for <<opaque return type of View.simultaneousGesture<A>(_:including:)>>, 1);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v15);
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v16);
  return swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v17);
}

BOOL static RETestDriver.isValid(viewController:)(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BookReaderContainerViewController(0);
  return swift_dynamicCastClass(a1, v2) != 0;
}

BOOL static RETestDriver.closeBook(viewController:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for BookReaderContainerViewController(0);
  v3 = swift_unknownObjectRetain(a1);
  v4 = swift_dynamicCastClass(v3, v2);
  if (v4)
    sub_1004DAFDC(1);
  swift_unknownObjectRelease(a1);
  return v4 != 0;
}

BOOL static RETestDriver.turnToInitialPage(viewController:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;

  v2 = type metadata accessor for BookReaderContainerViewController(0);
  v3 = swift_unknownObjectRetain(a1);
  v4 = swift_dynamicCastClass(v3, v2);
  v5 = v4;
  if (v4)
  {
    v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_currentLocationController);
    v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_currentLocationController + 8);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain(v6);
    dispatch thunk of LocationControlling.moveTo(pageNumber:)(1, ObjectType, v7);
    swift_unknownObjectRelease(a1);
    a1 = v6;
  }
  swift_unknownObjectRelease(a1);
  return v5 != 0;
}

uint64_t static RETestDriver.performScrollTest(viewController:name:iterations:delta:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v10;
  uint64_t v11;
  char v12;

  v10 = type metadata accessor for BookReaderContainerViewController(0);
  v11 = swift_unknownObjectRetain(a1);
  if (swift_dynamicCastClass(v11, v10))
    v12 = sub_1004D7718(a2, a3, a4, a5);
  else
    v12 = 0;
  swift_unknownObjectRelease(a1);
  return v12 & 1;
}

uint64_t static RETestDriver.simulateManualPageTurn(viewController:rtl:time:)(uint64_t a1, char a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;

  v6 = type metadata accessor for BookReaderContainerViewController(0);
  v7 = swift_unknownObjectRetain(a1);
  if (swift_dynamicCastClass(v7, v6))
    v8 = sub_1004D7904(a2 & 1, a3);
  else
    v8 = 0;
  swift_unknownObjectRelease(a1);
  return v8 & 1;
}

id RETestDriver.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RETestDriver();
  return objc_msgSendSuper2(&v2, "init");
}

id RETestDriver.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RETestDriver();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t _s5Books12RETestDriverC23getBookControllerLayout04viewF0SSSgyXl_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v2 = type metadata accessor for BookReaderContainerViewController(0);
  v3 = swift_unknownObjectRetain(a1);
  v4 = swift_dynamicCastClass(v3, v2);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_layoutModeProvider + 8);
    ObjectType = swift_getObjectType();
    v7 = dispatch thunk of BookLayoutModeProviding.layoutMode.getter(ObjectType, v5);
    switch(v7)
    {
      case 0:
        break;
      case 1:
        v9 = &kBETestDriverEpubLayoutPaged;
        goto LABEL_8;
      case 2:
        v9 = &kBETestDriverEpubLayoutVerticalScroll;
        goto LABEL_8;
      case 3:
        v9 = &kBETestDriverEpubLayoutHorizontalScroll;
LABEL_8:
        v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v9);
        swift_unknownObjectRelease(a1);
        return v8;
      default:
        type metadata accessor for BookLayoutMode(0);
        v12 = v7;
        result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v11, &v12, v11, &type metadata for UInt);
        __break(1u);
        return result;
    }
  }
  swift_unknownObjectRelease(a1);
  return 0;
}

double _s5Books12RETestDriverC23setBookControllerLayout_04viewF0ySS_yXltFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  double result;

  v6 = type metadata accessor for BookReaderContainerViewController(0);
  v7 = swift_unknownObjectRetain(a3);
  if (swift_dynamicCastClass(v7, v6))
  {
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBETestDriverEpubLayoutPaged);
    if (v8 == a1 && v9 == a2)
    {
      swift_bridgeObjectRelease(a2);
      v13 = 1;
    }
    else
    {
      v11 = v9;
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, a1, a2, 0);
      swift_bridgeObjectRelease(v11);
      if ((v12 & 1) != 0)
      {
        v13 = 1;
      }
      else
      {
        v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBETestDriverEpubLayoutVerticalScroll);
        if (v14 == a1 && v15 == a2)
        {
          swift_bridgeObjectRelease(a2);
          v13 = 2;
        }
        else
        {
          v17 = v15;
          v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0);
          swift_bridgeObjectRelease(v17);
          if ((v18 & 1) != 0)
          {
            v13 = 2;
          }
          else
          {
            v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBETestDriverEpubLayoutHorizontalScroll);
            v21 = v20;
            if (v19 == a1 && v20 == a2)
            {
              swift_bridgeObjectRelease(a2);
              v13 = 3;
            }
            else
            {
              v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, a1, a2, 0);
              swift_bridgeObjectRelease(v21);
              if ((v22 & 1) != 0)
                v13 = 3;
              else
                v13 = 0;
            }
          }
        }
      }
    }
    sub_1004D7620(v13);
  }
  *(_QWORD *)&result = swift_unknownObjectRelease(a3).n128_u64[0];
  return result;
}

BOOL _s5Books12RETestDriverC8turnPage14viewController7forwardSbyXl_SbtFZ_0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  __n128 v15;
  uint64_t v17;

  v4 = type metadata accessor for LocationMovement(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for BookReaderContainerViewController(0);
  v9 = swift_unknownObjectRetain(a1);
  v10 = swift_dynamicCastClass(v9, v8);
  v11 = v10;
  if (v10)
  {
    if ((a2 & 1) != 0)
      static LocationMovement.spreadForward.getter(v10);
    else
      static LocationMovement.spreadBackward.getter(v10);
    v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_currentLocationController);
    v13 = *(_QWORD *)(v11 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_currentLocationController + 8);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain(v12);
    dispatch thunk of LocationControlling.move(_:)(v7, ObjectType, v13);
    swift_unknownObjectRelease(a1);
    v15 = swift_unknownObjectRelease(v12);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v15);
  }
  else
  {
    swift_unknownObjectRelease(a1);
  }
  return v11 != 0;
}

uint64_t type metadata accessor for RETestDriver()
{
  return objc_opt_self(_TtC5Books12RETestDriver);
}

unint64_t sub_1004DF008()
{
  unint64_t result;

  result = qword_1009E78C0;
  if (!qword_1009E78C0)
  {
    result = swift_getWitnessTable(&unk_100729B00, &type metadata for OpenMostRecentBookIntent);
    atomic_store(result, (unint64_t *)&qword_1009E78C0);
  }
  return result;
}

unint64_t sub_1004DF050()
{
  unint64_t result;

  result = qword_1009E78C8;
  if (!qword_1009E78C8)
  {
    result = swift_getWitnessTable(&unk_100729B28, &type metadata for OpenMostRecentBookIntent);
    atomic_store(result, (unint64_t *)&qword_1009E78C8);
  }
  return result;
}

uint64_t sub_1004DF094(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087436C, 1);
}

uint64_t sub_1004DF0A4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100874344, 1);
}

uint64_t sub_1004DF0B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1EA88);
  sub_100048F64(v10, (uint64_t)qword_100A1EA88);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001007C1930);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for 'Open Most Recent Book' AppIntent.", 44, 2);
}

uint64_t sub_1004DF228(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[11] = a1;
  v2[12] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[13] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[14] = v4;
  v2[15] = v5;
  return swift_task_switch(sub_1004DF294, v4, v5);
}

uint64_t sub_1004DF294()
{
  uint64_t v0;
  _QWORD *v1;

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = (_QWORD *)swift_task_alloc(dword_1009E50A4);
  *(_QWORD *)(v0 + 128) = v1;
  *v1 = v0;
  v1[1] = sub_1004DF2EC;
  return sub_100470894();
}

uint64_t sub_1004DF2EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  _QWORD *v7;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 128);
  *(_QWORD *)(*v1 + 136) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = *(_QWORD *)(v2 + 112);
    v5 = *(_QWORD *)(v2 + 120);
    v6 = sub_1004DF3C8;
  }
  else
  {

    swift_unknownObjectRelease(*(_QWORD *)(v2 + 24));
    *(_QWORD *)(v2 + 80) = *(_QWORD *)(v2 + 40);
    sub_1001FC120((_QWORD *)(v2 + 80));
    *(_QWORD *)(v2 + 72) = *(_QWORD *)(v2 + 48);
    v7 = (_QWORD *)(v2 + 72);
    sub_1001FC120(v7);
    v4 = v7[5];
    v5 = v7[6];
    v6 = sub_1004DF388;
  }
  return swift_task_switch(v6, v4, v5);
}

uint64_t sub_1004DF388()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_release(*(_QWORD *)(v0 + 104));
  static IntentResult.result<>()(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1004DF3C8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 104);

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 40);
  sub_1001FC120((_QWORD *)(v0 + 64));
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 48);
  sub_1001FC120((_QWORD *)(v0 + 56));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1004DF438@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CE720 != -1)
    swift_once(&qword_1009CE720, sub_1004DF0B4);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1EA88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1004DF4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = sub_10004CFD4(&qword_1009E78F8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.init(stringLiteral:)(0xD000000000000010, 0x80000001007CED90, a1, a2, v5);
  return IntentParameterSummary.init(_:table:)(v7, 0x6E65746E49707041, 0xEA00000000007374, a1, a2);
}

uint64_t sub_1004DF564(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1009E78F4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AE34;
  return sub_1004DF228(a1, v4);
}

uint64_t sub_1004DF5BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1004DF620();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenMostRecentBookIntent()
{
  return &type metadata for OpenMostRecentBookIntent;
}

uint64_t sub_1004DF5F4()
{
  return sub_100030B34(&qword_1009E78D8, &qword_1009E78E0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

unint64_t sub_1004DF620()
{
  unint64_t result;

  result = qword_1009E78E8;
  if (!qword_1009E78E8)
  {
    result = swift_getWitnessTable(&unk_100729A70, &type metadata for OpenMostRecentBookIntent);
    atomic_store(result, &qword_1009E78E8);
  }
  return result;
}

void sub_1004DF694(char *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;

  if (a3)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3);
  }
  else
  {
    v6 = 0;
    v7 = 0;
  }
  v8 = (uint64_t *)&a1[*a4];
  v9 = v8[1];
  *v8 = v6;
  v8[1] = v7;
  v10 = a1;
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v10, "setNeedsLayout");
  objc_msgSend(v10, "layoutIfNeeded");

}

id sub_1004DF85C()
{
  char *v0;
  id v1;
  id v2;
  double v3;
  void *v4;
  NSString *v5;
  id v6;
  char isUniquelyReferenced_nonNull_native;
  id v8;
  void *v9;
  NSString *v10;
  id v11;
  char v12;
  id v13;
  NSString v14;
  Class isa;
  _OWORD v17[2];
  __int128 v18;
  uint64_t v19;

  v1 = *(id *)&v0[OBJC_IVAR___BKLibraryBookshelfInfoBadge_badgeText + 8];
  if (v1)
  {
    v2 = objc_msgSend(v0, "font", swift_bridgeObjectRetain(*(_QWORD *)&v0[OBJC_IVAR___BKLibraryBookshelfInfoBadge_badgeText + 8]).n128_f64[0]);
    if (v2)
    {
      v4 = v2;
      v19 = sub_100009E04(0, &qword_1009EB8E0, UIFont_ptr);
      *(_QWORD *)&v18 = v4;
      sub_10004CFC4(&v18, v17);
      v5 = NSFontAttributeName;
      v6 = v4;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      sub_1002C494C(v17, v5, isUniquelyReferenced_nonNull_native);

      *(_QWORD *)&v3 = swift_bridgeObjectRelease(0x8000000000000000).n128_u64[0];
    }
    v8 = objc_msgSend(v0, "textColor", v3);
    if (v8)
    {
      v9 = v8;
      v19 = sub_100009E04(0, (unint64_t *)&qword_1009EC680, UIColor_ptr);
      *(_QWORD *)&v18 = v9;
      sub_10004CFC4(&v18, v17);
      v10 = NSForegroundColorAttributeName;
      v11 = v9;
      v12 = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
      sub_1002C494C(v17, v10, v12);

      swift_bridgeObjectRelease(0x8000000000000000);
    }
    v13 = objc_allocWithZone((Class)NSAttributedString);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v1);
    type metadata accessor for Key(0);
    sub_100352538();
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v1 = objc_msgSend(v13, "initWithString:attributes:", v14, isa, swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton).n128_f64[0]);

  }
  return v1;
}

void sub_1004DFAC0()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  NSString v4;
  id v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  id v10;
  id v11;
  NSString v12;
  id v13;
  double v14;
  double v15;
  uint64_t v16;
  NSString v17;
  objc_super v18;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___BKLibraryBookshelfInfoBadge_badgeText + 8];
  if (v1)
  {
    v2 = objc_allocWithZone((Class)UILabel);
    swift_bridgeObjectRetain(v1);
    v3 = objc_msgSend(v2, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    v4 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setText:", v4);

    v5 = objc_msgSend(v0, "font");
    objc_msgSend(v3, "setFont:", v5);

    objc_msgSend(v3, "sizeThatFits:", 0.0, 0.0);
    v7 = v6;

    objc_msgSend(v0, "frame");
    if (v7 > v8)
    {
      v9 = *(_QWORD *)&v0[OBJC_IVAR___BKLibraryBookshelfInfoBadge_fallbackBadgeText + 8];
      if (v9)
      {
        v10 = objc_allocWithZone((Class)UILabel);
        swift_bridgeObjectRetain(v9);
        v11 = objc_msgSend(v10, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
        v12 = String._bridgeToObjectiveC()();
        objc_msgSend(v11, "setText:", v12);

        v13 = objc_msgSend(v0, "font");
        objc_msgSend(v11, "setFont:", v13);

        objc_msgSend(v11, "sizeThatFits:", 0.0, 0.0);
        v15 = v14;

        if (v7 <= v15)
          v16 = v9;
        else
          v16 = v1;
        if (v7 > v15)
          v1 = v9;
        swift_bridgeObjectRelease(v16);
      }
    }
    v17 = String._bridgeToObjectiveC()();
    objc_msgSend(v0, "setText:", v17, swift_bridgeObjectRelease(v1).n128_f64[0]);

    v18.receiver = v0;
    v18.super_class = (Class)type metadata accessor for LibraryBookshelfInfoBadge();
    objc_msgSendSuper2(&v18, "layoutSubviews");
  }
}

id sub_1004DFD3C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibraryBookshelfInfoBadge();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for LibraryBookshelfInfoBadge()
{
  return objc_opt_self(BKLibraryBookshelfInfoBadge);
}

id sub_1004DFDCC(void *a1)
{
  char *v1;
  char *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  NSString *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  NSString *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  id v26;
  __int128 v27;
  __int128 v28;

  v2 = v1;
  if (a1)
  {
    v3 = a1;
    if ((uint64_t)objc_msgSend(v3, "length") < 1)
      goto LABEL_21;
    v4 = objc_msgSend(v3, "attributesAtIndex:effectiveRange:", 0, 0);
    type metadata accessor for Key(0);
    v6 = v5;
    v7 = sub_100352538();
    v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v4, v6, (char *)&type metadata for Any + 8, v7);

    if (*(_QWORD *)(v8 + 16))
    {
      v9 = NSFontAttributeName;
      v10 = sub_100033914(v9);
      if ((v11 & 1) != 0)
      {
        sub_10004CD0C(*(_QWORD *)(v8 + 56) + 32 * v10, (uint64_t)&v27);

        if (*((_QWORD *)&v28 + 1))
        {
          v12 = sub_100009E04(0, &qword_1009EB8E0, UIFont_ptr);
          if ((swift_dynamicCast(&v26, &v27, (char *)&type metadata for Any + 8, v12, 6) & 1) != 0)
          {
            v13 = v26;
            objc_msgSend(v2, "setFont:", v26);

          }
          goto LABEL_12;
        }
      }
      else
      {
        v27 = 0u;
        v28 = 0u;

      }
    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }
    sub_10004A7B8((uint64_t)&v27);
LABEL_12:
    if (*(_QWORD *)(v8 + 16))
    {
      v16 = NSForegroundColorAttributeName;
      v17 = sub_100033914(v16);
      if ((v18 & 1) != 0)
      {
        sub_10004CD0C(*(_QWORD *)(v8 + 56) + 32 * v17, (uint64_t)&v27);
      }
      else
      {
        v27 = 0u;
        v28 = 0u;
      }

    }
    else
    {
      v27 = 0u;
      v28 = 0u;
    }
    swift_bridgeObjectRelease(v8);
    if (!*((_QWORD *)&v28 + 1))
    {

      sub_10004A7B8((uint64_t)&v27);
      goto LABEL_23;
    }
    v19 = sub_100009E04(0, (unint64_t *)&qword_1009EC680, UIColor_ptr);
    if ((swift_dynamicCast(&v26, &v27, (char *)&type metadata for Any + 8, v19, 6) & 1) != 0)
    {
      v20 = v26;
      objc_msgSend(v2, "setTextColor:", v20);

    }
LABEL_21:

LABEL_23:
    v21 = objc_msgSend(v3, "string");
    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v15 = v22;

    goto LABEL_24;
  }
  v14 = 0;
  v15 = 0;
LABEL_24:
  v23 = (uint64_t *)&v2[OBJC_IVAR___BKLibraryBookshelfInfoBadge_badgeText];
  v24 = *(_QWORD *)&v2[OBJC_IVAR___BKLibraryBookshelfInfoBadge_badgeText + 8];
  *v23 = v14;
  v23[1] = v15;
  objc_msgSend(v2, "setNeedsLayout", swift_bridgeObjectRelease(v24).n128_f64[0]);
  return objc_msgSend(v2, "layoutIfNeeded");
}

uint64_t destroy for RSCloseButton(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + 16));
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t initializeWithCopy for RSCloseButton(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  LOBYTE(v4) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v4;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = v3;
  swift_retain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for RSCloseButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  swift_retain(v7);
  swift_release(v9);
  v11 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v10;
  swift_retain(v10);
  swift_release(v12);
  return a1;
}

uint64_t assignWithTake for RSCloseButton(uint64_t a1, uint64_t a2)
{
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v5;
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for RSCloseButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RSCloseButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RSCloseButton()
{
  return &type metadata for RSCloseButton;
}

uint64_t sub_1004E0278(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100874434, 1);
}

uint64_t sub_1004E0288@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t KeyPath;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101[16];
  uint64_t v102;
  _QWORD v103[2];

  v100 = a1;
  v2 = type metadata accessor for AccessibilityActionKind(0);
  v98 = *(_QWORD *)(v2 - 8);
  v99 = v2;
  __chkstk_darwin(v2);
  v97 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for AutomaticHoverEffect(0);
  v5 = *(_QWORD *)(v4 - 8);
  v95 = v4;
  v96 = v5;
  __chkstk_darwin(v4);
  v94 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for ContentShapeKinds(0);
  v88 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v84 = (char *)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for BorderlessButtonStyle(0);
  v83 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_10004CFD4(&qword_1009E7938);
  v79 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_10004CFD4(&qword_1009E7940);
  v77 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v13 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_10004CFD4(&qword_1009E7948);
  __chkstk_darwin(v75);
  v15 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_10004CFD4(&qword_1009E7950);
  __chkstk_darwin(v73);
  v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_10004CFD4(&qword_1009E7958);
  v89 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v80 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_10004CFD4(&qword_1009E7960);
  __chkstk_darwin(v86);
  v20 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_10004CFD4(&qword_1009E7968);
  __chkstk_darwin(v93);
  v87 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v92 = (char *)&v73 - v23;
  v74 = v1;
  v24 = *(_QWORD *)(v1 + 40);
  v85 = *(_QWORD *)(v1 + 32);
  v25 = v85;
  v102 = v1;
  v26 = v24;
  v81 = v24;
  swift_retain(v24);
  v27 = sub_10004CFD4(&qword_1009E7970);
  v28 = sub_100030B34(&qword_1009E7978, &qword_1009E7970, (uint64_t)&protocol conformance descriptor for ZStack<A>);
  v29 = Button.init(action:label:)(v25, v26, sub_1004E0F78, v101, v27, v28);
  BorderlessButtonStyle.init()(v29);
  v30 = sub_100030B34(&qword_1009E7980, &qword_1009E7938, (uint64_t)&protocol conformance descriptor for Button<A>);
  v31 = sub_100008DB0((unint64_t *)&qword_1009EBC10, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v32 = v76;
  v33 = v82;
  View.buttonStyle<A>(_:)(v9, v76, v82, v30, v31);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v9, v33);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v11, v32);
  v34 = v77;
  v35 = v78;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v15, v13, v78);
  v15[*(int *)(v75 + 36)] = 0;
  v36 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  v37 = v84;
  static ContentShapeKinds.hoverEffect.getter(v36);
  v38 = v73;
  v39 = &v17[*(int *)(v73 + 36)];
  v40 = sub_10004CFD4(&qword_1009DDC28);
  v41 = v88;
  v42 = v90;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(&v39[*(int *)(v40 + 40)], v37, v90);
  *v39 = 0;
  sub_10000B5E4((uint64_t)v15, (uint64_t)v17, &qword_1009E7948);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v37, v42);
  v43 = sub_100010960((uint64_t)v15, &qword_1009E7948);
  v44 = v94;
  static CustomHoverEffect<>.automatic.getter(v43);
  v45 = sub_1004E0F80();
  v46 = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v47 = v80;
  v48 = v95;
  View.hoverEffect<A>(_:isEnabled:)(v44, 1, v38, v95, v45, v46);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v44, v48);
  sub_100010960((uint64_t)v17, &qword_1009E7950);
  v49 = *(_QWORD *)(v74 + 16);
  LOBYTE(v42) = *(_BYTE *)(v74 + 24);
  swift_retain(v49);
  v51 = sub_1006682B0(v50, v42);
  swift_release(v49);
  KeyPath = swift_getKeyPath(&unk_100729BF0);
  v103[0] = v51;
  v53 = swift_retain(v51);
  v54 = AnyShapeStyle.init<A>(_:)(v103, &type metadata for Color, &protocol witness table for Color, v53);
  v55 = v89;
  v56 = v91;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v20, v47, v91);
  v57 = swift_release(v51);
  v58 = v86;
  v59 = (uint64_t *)&v20[*(int *)(v86 + 36)];
  *v59 = KeyPath;
  v59[1] = v54;
  (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v47, v56, v57);
  v60 = sub_100370ED4();
  v62 = v61;
  v103[0] = v60;
  v103[1] = v61;
  v63 = sub_1004E1114();
  v64 = sub_1001F2108();
  v65 = (uint64_t)v87;
  View.accessibilityLabel<A>(_:)(v103, v58, &type metadata for String, v63, v64);
  swift_bridgeObjectRelease(v62);
  v66 = sub_100010960((uint64_t)v20, &qword_1009E7960);
  v67 = v97;
  static AccessibilityActionKind.default.getter(v66);
  v68 = (uint64_t)v92;
  ModifiedContent<>.accessibilityAction(_:_:)(v67, v85, v81, v93);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v67, v99);
  sub_100010960(v65, &qword_1009E7968);
  v69 = swift_getKeyPath(&unk_100729C20);
  v70 = v100;
  sub_10000B5E4(v68, v100, &qword_1009E7968);
  v71 = v70 + *(int *)(sub_10004CFD4(&qword_1009E79B0) + 36);
  *(_QWORD *)v71 = v69;
  *(_BYTE *)(v71 + 8) = 0;
  return sub_100010960(v68, &qword_1009E7968);
}

uint64_t sub_1004E09C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *a2 = static Alignment.center.getter(a1);
  a2[1] = v4;
  v5 = sub_10004CFD4(&qword_1009E79B8);
  return sub_1004E0A04(a1, (uint64_t)a2 + *(int *)(v5 + 44));
}

uint64_t sub_1004E0A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  unsigned __int8 v69;
  uint64_t v70;
  uint64_t v71;

  v64 = a1;
  v3 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v3);
  v61 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v51);
  v6 = (uint64_t *)((char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for Image.Scale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009F41C0);
  __chkstk_darwin(v11);
  v13 = (uint64_t *)((char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = sub_10004CFD4(&qword_1009E79C0);
  __chkstk_darwin(v52);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10004CFD4(&qword_1009F41D0);
  __chkstk_darwin(v60);
  v63 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v59 = (uint64_t)&v51 - v18;
  __chkstk_darwin(v19);
  v62 = (uint64_t)&v51 - v21;
  if (qword_1009CE1D8 != -1)
    v20 = swift_once(&qword_1009CE1D8, sub_10036FF70);
  v22 = qword_100A1E738;
  v23 = static Alignment.center.getter(v20);
  _FrameLayout.init(width:height:alignment:)(&v66, v22, 0, v22, 0, v23, v24);
  v58 = v66;
  v57 = v67;
  v56 = v68;
  v55 = v69;
  v53 = v71;
  v54 = v70;
  v25 = Image.init(systemName:)(0x6B72616D78, 0xE500000000000000);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for Image.Scale.medium(_:), v7);
  KeyPath = swift_getKeyPath(&unk_100729C50);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v51 + 28), v10, v7);
  *v6 = KeyPath;
  sub_10000B5E4((uint64_t)v6, (uint64_t)v13 + *(int *)(v11 + 36), &qword_1009D38F8);
  *v13 = v25;
  swift_retain(v25);
  sub_100010960((uint64_t)v6, &qword_1009D38F8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release(v25);
  v28 = static Font.Weight.semibold.getter(v27);
  v29 = type metadata accessor for Font.Design(0);
  v30 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v61, 1, 1, v29);
  v31 = static Font.system(size:weight:design:)(*(_QWORD *)&v28, 0, v30, 16.0);
  sub_100010960(v30, &qword_1009CEDD0);
  v32 = swift_getKeyPath(&unk_100729C80);
  sub_10000B5E4((uint64_t)v13, (uint64_t)v15, (uint64_t *)&unk_1009F41C0);
  v33 = (uint64_t *)&v15[*(int *)(v52 + 36)];
  *v33 = v32;
  v33[1] = v31;
  sub_100010960((uint64_t)v13, (uint64_t *)&unk_1009F41C0);
  v34 = *(void **)v64;
  if (*(_QWORD *)v64)
  {
    v35 = swift_getKeyPath(&unk_100729CB0);
    v36 = swift_getKeyPath(&unk_100729CD8);
    v37 = v34;
    static Published.subscript.getter(&v65, v37, v35);

    swift_release(v35);
    swift_release(v36);
    v38 = v65;
    v39 = swift_getKeyPath(&unk_100729CF8);
    v40 = v59;
    sub_10000B5E4((uint64_t)v15, v59, &qword_1009E79C0);
    v41 = (uint64_t *)(v40 + *(int *)(v60 + 36));
    *v41 = v39;
    v41[1] = v38;
    sub_100010960((uint64_t)v15, &qword_1009E79C0);
    v42 = v62;
    sub_1004E122C(v40, v62);
    v43 = v63;
    sub_10000B5E4(v42, v63, &qword_1009F41D0);
    *(_WORD *)a2 = 256;
    *(_QWORD *)(a2 + 8) = v58;
    *(_BYTE *)(a2 + 16) = v57;
    *(_QWORD *)(a2 + 24) = v56;
    *(_BYTE *)(a2 + 32) = v55;
    v44 = v53;
    *(_QWORD *)(a2 + 40) = v54;
    *(_QWORD *)(a2 + 48) = v44;
    v45 = sub_10004CFD4(&qword_1009E79C8);
    sub_10000B5E4(v43, a2 + *(int *)(v45 + 48), &qword_1009F41D0);
    sub_100010960(v42, &qword_1009F41D0);
    return sub_100010960(v43, &qword_1009F41D0);
  }
  else
  {
    v47 = *(_QWORD *)(v64 + 8);
    v48 = type metadata accessor for ChromeStyle(0);
    v49 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v47, v48, v49, v50);
    __break(1u);
  }
  return result;
}

uint64_t sub_1004E0F40@<X0>(uint64_t a1@<X8>)
{
  return sub_1004E0288(a1);
}

uint64_t sub_1004E0F78@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1004E09C0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1004E0F80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E7988;
  if (!qword_1009E7988)
  {
    v1 = sub_100030B74(&qword_1009E7950);
    sub_1004E1004();
    sub_100030B34(&qword_1009DDC48, &qword_1009DDC28, (uint64_t)&protocol conformance descriptor for _ContentShapeKindModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7988);
  }
  return result;
}

unint64_t sub_1004E1004()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009E7990;
  if (!qword_1009E7990)
  {
    v1 = sub_100030B74(&qword_1009E7948);
    v2[0] = sub_100030B74(&qword_1009E7938);
    v2[1] = type metadata accessor for BorderlessButtonStyle(255);
    v2[2] = sub_100030B34(&qword_1009E7980, &qword_1009E7938, (uint64_t)&protocol conformance descriptor for Button<A>);
    v2[3] = sub_100008DB0((unint64_t *)&qword_1009EBC10, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
    sub_100030B34(&qword_1009D1E38, &qword_1009D1E40, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7990);
  }
  return result;
}

unint64_t sub_1004E1114()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009E7998;
  if (!qword_1009E7998)
  {
    v1 = sub_100030B74(&qword_1009E7960);
    v2[0] = sub_100030B74(&qword_1009E7950);
    v2[1] = type metadata accessor for AutomaticHoverEffect(255);
    v2[2] = sub_1004E0F80();
    v2[3] = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
    sub_100030B34(&qword_1009E79A0, &qword_1009E79A8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7998);
  }
  return result;
}

uint64_t sub_1004E122C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009F41D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004E1278()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E79D0;
  if (!qword_1009E79D0)
  {
    v1 = sub_100030B74(&qword_1009E79B0);
    sub_1004E12FC();
    sub_100030B34((unint64_t *)&unk_1009D8600, &qword_1009D1CD0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E79D0);
  }
  return result;
}

unint64_t sub_1004E12FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E79D8;
  if (!qword_1009E79D8)
  {
    v1 = sub_100030B74(&qword_1009E7968);
    sub_1004E1114();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E79D8);
  }
  return result;
}

void sub_1004E1380()
{
  NSString v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v0);

  if (v1)
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v1);

    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v3 = objc_msgSend(v2, "widthAnchor");
    v4 = objc_msgSend(v3, "constraintEqualToConstant:", 13.0);

    objc_msgSend(v4, "setActive:", 1);
    v5 = objc_msgSend(v2, "heightAnchor");
    v6 = objc_msgSend(v2, "widthAnchor");
    v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

    objc_msgSend(v7, "setActive:", 1);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E14FC()
{
  NSString v0;
  id v1;
  id v2;
  id v3;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v0);

  if (v1)
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v1);

    v3 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksWhite");
    objc_msgSend(v2, "setTintColor:", v3);

    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  }
  else
  {
    __break(1u);
  }
}

char *sub_1004E15E0(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *result;
  char *v23;
  id v24;
  id v25;
  id v26;
  char *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  Class isa;
  id v45;
  objc_super v46;

  v4[OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_hasSupplementalContent] = 0;
  v9 = OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_supplementalBackgroundView;
  v10 = v4;
  sub_1004E1380();
  *(_QWORD *)&v4[v9] = v11;
  v12 = OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_supplementalIconView;
  sub_1004E14FC();
  *(_QWORD *)&v10[v12] = v13;

  v46.receiver = v10;
  v46.super_class = (Class)type metadata accessor for AudiobookTOCToolbarButton();
  v14 = (char *)objc_msgSendSuper2(&v46, "initWithFrame:", a1, a2, a3, a4);
  v15 = OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_supplementalBackgroundView;
  v16 = *(void **)&v14[OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_supplementalBackgroundView];
  v17 = v14;
  objc_msgSend(v17, "addSubview:", v16);
  v18 = OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_supplementalIconView;
  objc_msgSend(v17, "addSubview:", *(_QWORD *)&v17[OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_supplementalIconView]);
  v19 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v20 = swift_allocObject(v19, 80, 7);
  *(_OWORD *)(v20 + 16) = xmmword_10071C6F0;
  v21 = objc_msgSend(v16, "topAnchor");
  result = (char *)objc_msgSend(v17, "imageView");
  if (result)
  {
    v23 = result;
    v24 = objc_msgSend(result, "topAnchor");

    v25 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v24, -2.0);
    *(_QWORD *)(v20 + 32) = v25;
    v26 = objc_msgSend(*(id *)&v14[v15], "trailingAnchor");
    result = (char *)objc_msgSend(v17, "imageView");
    if (result)
    {
      v27 = result;
      v45 = (id)objc_opt_self(NSLayoutConstraint);
      v28 = objc_msgSend(v27, "trailingAnchor");

      v29 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v28, 4.0);
      *(_QWORD *)(v20 + 40) = v29;
      v30 = objc_msgSend(*(id *)&v17[v18], "centerXAnchor");
      v31 = objc_msgSend(*(id *)&v14[v15], "centerXAnchor");
      v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

      *(_QWORD *)(v20 + 48) = v32;
      v33 = objc_msgSend(*(id *)&v17[v18], "centerYAnchor");
      v34 = objc_msgSend(*(id *)&v14[v15], "centerYAnchor");
      v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

      *(_QWORD *)(v20 + 56) = v35;
      v36 = objc_msgSend(*(id *)&v17[v18], "widthAnchor");
      v37 = objc_msgSend(*(id *)&v14[v15], "widthAnchor");
      v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

      *(_QWORD *)(v20 + 64) = v38;
      v39 = objc_msgSend(*(id *)&v17[v18], "heightAnchor");
      v40 = objc_msgSend(*(id *)&v14[v15], "heightAnchor");
      v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

      *(_QWORD *)(v20 + 72) = v41;
      specialized Array._endMutation()(v42);
      v43 = v20;
      sub_10034132C();
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v45, "activateConstraints:", isa, swift_bridgeObjectRelease(v43).n128_f64[0]);

      sub_1004E1AF0();
      return v17;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1004E1AF0()
{
  _BYTE *v0;
  uint64_t v1;
  unint64_t v2;
  NSString v3;
  id v4;
  id v5;
  objc_super v6;

  v1 = OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_hasSupplementalContent;
  if (v0[OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_hasSupplementalContent])
    v2 = 0x80000001007BAB00;
  else
    v2 = 0xEA0000000000434FLL;
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  v4 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v3);

  if (v4)
  {
    v5 = objc_msgSend(v4, "imageFlippedForRightToLeftLayoutDirection");

    v6.receiver = v0;
    v6.super_class = (Class)type metadata accessor for AudiobookTOCToolbarButton();
    objc_msgSendSuper2(&v6, "setImage:forState:", v5, 0);

    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_supplementalBackgroundView], "setHidden:", (v0[v1] & 1) == 0);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books25AudiobookTOCToolbarButton_supplementalIconView], "setHidden:", (v0[v1] & 1) == 0);
  }
  else
  {
    __break(1u);
  }
}

void sub_1004E1C30()
{
  uint64_t v0;

}

id sub_1004E1C5C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiobookTOCToolbarButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AudiobookTOCToolbarButton()
{
  return objc_opt_self(_TtC5Books25AudiobookTOCToolbarButton);
}

ValueMetadata *type metadata accessor for WidthPreferenceKey()
{
  return &type metadata for WidthPreferenceKey;
}

void sub_1004E1CF4()
{
  qword_100A1EAA0 = 0;
}

double sub_1004E1D00@<D0>(_QWORD *a1@<X8>)
{
  return sub_1004E1D58(&qword_1009CE728, (double *)&qword_100A1EAA0, (uint64_t)sub_1004E1CF4, a1);
}

ValueMetadata *type metadata accessor for HeightPreferenceKey()
{
  return &type metadata for HeightPreferenceKey;
}

void sub_1004E1D30()
{
  qword_100A1EAA8 = 0;
}

double sub_1004E1D3C@<D0>(_QWORD *a1@<X8>)
{
  return sub_1004E1D58(&qword_1009CE730, (double *)&qword_100A1EAA8, (uint64_t)sub_1004E1D30, a1);
}

double sub_1004E1D58@<D0>(_QWORD *a1@<X2>, double *a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  double result;

  if (*a1 != -1)
    swift_once(a1, a3);
  result = *a2;
  *a4 = *(_QWORD *)a2;
  return result;
}

_QWORD *sub_1004E1D9C(double *a1, _QWORD *(*a2)(double *__return_ptr))
{
  double v3;
  _QWORD *result;
  double v5;
  double v6;

  v3 = *a1;
  result = a2(&v6);
  v5 = v6;
  if (v3 > v6)
    v5 = v3;
  *a1 = v5;
  return result;
}

uint64_t sub_1004E1DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, unsigned __int8 a10, uint64_t a11, uint64_t a12, unsigned __int8 a13, unsigned __int8 a14)
{
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  int *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjCClassFromMetadata;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[4];
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;

  v53 = a7;
  v54 = a8;
  v49 = a6;
  v48 = a5;
  v47 = a4;
  v59 = a13;
  v60 = a14;
  v57 = a11;
  v58 = a12;
  v52 = a10;
  v18 = type metadata accessor for Locale(0);
  v55 = *(_QWORD *)(v18 - 8);
  v56 = v18;
  __chkstk_darwin(v18);
  v20 = &v46[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v23 = &v46[-v22];
  v24 = type metadata accessor for String.LocalizationValue(0);
  v25 = *(_QWORD *)(v24 - 8);
  v50 = v24;
  v51 = v25;
  __chkstk_darwin(v24);
  v27 = &v46[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  v30 = &v46[-v29];
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = v47 & 1;
  *(_QWORD *)(a9 + 32) = v48;
  *(_BYTE *)(a9 + 40) = v49 & 1;
  v31 = (int *)type metadata accessor for PageTurnOptionsMenu(0);
  sub_100025B3C(v53, a9 + v31[7], &qword_1009D5030);
  v32 = a9 + v31[8];
  *(_QWORD *)v32 = v54;
  *(_BYTE *)(v32 + 8) = v52 & 1;
  v33 = (uint64_t *)(a9 + v31[9]);
  v34 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000015, 0x80000001007CEF50);
  static Locale.current.getter(v34);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v25 + 16))(v27, v30, v24);
  v35 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v35);
  v37 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v39 = v55;
  v38 = v56;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v55 + 16))(v20, v23, v56);
  v40 = String.init(localized:table:bundle:locale:comment:)(v27, 0, 0, v37, v20, "AX label Describing a button for page navigation animation style", 64, 2);
  v42 = v41;
  (*(void (**)(_BYTE *, uint64_t))(v39 + 8))(v23, v38);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v51 + 8))(v30, v50);
  *v33 = v40;
  v33[1] = v42;
  v44 = a9 + v31[10];
  v45 = v58;
  *(_QWORD *)v44 = v57;
  *(_QWORD *)(v44 + 8) = v45;
  *(_BYTE *)(v44 + 16) = v59;
  *(_BYTE *)(a9 + v31[11]) = v60;
  return result;
}

uint64_t type metadata accessor for PageTurnOptionsMenu(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E7A78;
  if (!qword_1009E7A78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PageTurnOptionsMenu);
  return result;
}

char *sub_1004E20C8(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  uint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _OWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
  }
  else
  {
    v7 = a1;
    v8 = (uint64_t)a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    v9 = *((_BYTE *)a2 + 24);
    v10 = v4;
    sub_1001F2508(v8, v9);
    *((_QWORD *)v7 + 2) = v8;
    v7[24] = v9;
    v11 = (uint64_t)a2[4];
    LOBYTE(v8) = *((_BYTE *)a2 + 40);
    sub_1001F2508(v11, v8);
    *((_QWORD *)v7 + 4) = v11;
    v7[40] = v8;
    v12 = a3[7];
    v13 = &v7[v12];
    v14 = (_OWORD *)((char *)a2 + v12);
    v15 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      *(_OWORD *)v13 = *v14;
      v16 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v17 = &v13[v16];
      v18 = (char *)v14 + v16;
      v19 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      v20 = 1;
    }
    else
    {
      v21 = *(_QWORD *)v14;
      *(_QWORD *)v13 = *(_QWORD *)v14;
      swift_retain(v21);
      v20 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v20);
    v22 = a3[8];
    v23 = a3[9];
    v24 = &v7[v22];
    v25 = (uint64_t *)((char *)a2 + v22);
    v26 = *v25;
    LOBYTE(v25) = *((_BYTE *)v25 + 8);
    *(_QWORD *)v24 = v26;
    v24[8] = (char)v25;
    v27 = &v7[v23];
    v28 = (char **)((char *)a2 + v23);
    v29 = v28[1];
    *(_QWORD *)v27 = *v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = a3[10];
    v31 = a3[11];
    v32 = &v7[v30];
    v33 = (uint64_t *)((char *)a2 + v30);
    v34 = *v33;
    v4 = (char *)v33[1];
    *(_QWORD *)v32 = *v33;
    *((_QWORD *)v32 + 1) = v4;
    v32[16] = *((_BYTE *)v33 + 16);
    v7[v31] = *((_BYTE *)a2 + v31);
    swift_retain(v26);
    swift_bridgeObjectRetain(v29);
    swift_retain(v34);
  }
  swift_retain(v4);
  return v7;
}

double sub_1004E226C(uint64_t a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  double result;

  sub_1001F2564(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_1001F2564(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  v4 = (_QWORD *)(a1 + a2[7]);
  v5 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = (char *)v4 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v7 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release(*v4);
  }
  swift_release(*(_QWORD *)(a1 + a2[8]));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9] + 8));
  v8 = (_QWORD *)(a1 + a2[10]);
  swift_release(*v8);
  *(_QWORD *)&result = swift_release(v8[1]).n128_u64[0];
  return result;
}

uint64_t sub_1004E2344(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v7;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  v10 = v6;
  sub_1001F2508(v8, v9);
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v11 = *(_QWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a2 + 40);
  sub_1001F2508(v11, v12);
  *(_QWORD *)(a1 + 32) = v11;
  *(_BYTE *)(a1 + 40) = v12;
  v13 = a3[7];
  v14 = (_OWORD *)(a1 + v13);
  v15 = (_OWORD *)(a2 + v13);
  v16 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
  {
    *v14 = *v15;
    v17 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v18 = (char *)v14 + v17;
    v19 = (char *)v15 + v17;
    v20 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    v21 = 1;
  }
  else
  {
    v22 = *(_QWORD *)v15;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    swift_retain(v22);
    v21 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v16, v21);
  v23 = a3[8];
  v24 = a3[9];
  v25 = a1 + v23;
  v26 = (uint64_t *)(a2 + v23);
  v27 = *v26;
  LOBYTE(v26) = *((_BYTE *)v26 + 8);
  *(_QWORD *)v25 = v27;
  *(_BYTE *)(v25 + 8) = (_BYTE)v26;
  v28 = (_QWORD *)(a1 + v24);
  v29 = (_QWORD *)(a2 + v24);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[10];
  v32 = a3[11];
  v33 = a1 + v31;
  v34 = (uint64_t *)(a2 + v31);
  v35 = *v34;
  v36 = v34[1];
  *(_QWORD *)v33 = *v34;
  *(_QWORD *)(v33 + 8) = v36;
  *(_BYTE *)(v33 + 16) = *((_BYTE *)v34 + 16);
  *(_BYTE *)(a1 + v32) = *(_BYTE *)(a2 + v32);
  swift_retain(v27);
  swift_bridgeObjectRetain(v30);
  swift_retain(v35);
  swift_retain(v36);
  return a1;
}

uint64_t sub_1004E24C4(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_BYTE *)(a2 + 24);
  sub_1001F2508(v9, v10);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 24) = v10;
  sub_1001F2564(v11, v12);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = *(_BYTE *)(a2 + 40);
  sub_1001F2508(v13, v14);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v13;
  *(_BYTE *)(a1 + 40) = v14;
  sub_1001F2564(v15, v16);
  if (a1 != a2)
  {
    v17 = a3[7];
    v18 = (_OWORD *)(a1 + v17);
    v19 = (_OWORD *)(a2 + v17);
    sub_100010960(a1 + v17, &qword_1009D5038);
    v20 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(v19, v20) == 1)
    {
      *v18 = *v19;
      v21 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v22 = (char *)v18 + v21;
      v23 = (char *)v19 + v21;
      v24 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      v25 = 1;
    }
    else
    {
      v26 = *(_QWORD *)v19;
      *(_QWORD *)v18 = *(_QWORD *)v19;
      swift_retain(v26);
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v18, v20, v25);
  }
  v27 = a3[8];
  v28 = (uint64_t *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *v29;
  LOBYTE(v29) = *((_BYTE *)v29 + 8);
  v31 = *v28;
  *v28 = v30;
  *((_BYTE *)v28 + 8) = (_BYTE)v29;
  swift_retain(v30);
  swift_release(v31);
  v32 = a3[9];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)(a2 + v32);
  *v33 = *v34;
  v35 = v34[1];
  v36 = v33[1];
  v33[1] = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  v37 = a3[10];
  v38 = a1 + v37;
  v39 = a2 + v37;
  v40 = *(_QWORD *)(a1 + v37);
  v41 = *(_QWORD *)(a2 + v37);
  *(_QWORD *)(a1 + v37) = v41;
  swift_retain(v41);
  swift_release(v40);
  v42 = *(_QWORD *)(v39 + 8);
  v43 = *(_QWORD *)(v38 + 8);
  *(_QWORD *)(v38 + 8) = v42;
  swift_retain(v42);
  swift_release(v43);
  *(_BYTE *)(v38 + 16) = *(_BYTE *)(v39 + 16);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1004E26C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = a3[7];
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    *v7 = *v8;
    v10 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v11 = (char *)v7 + v10;
    v12 = (char *)v8 + v10;
    v13 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v14 = a3[8];
  v15 = a3[9];
  v16 = a1 + v14;
  v17 = a2 + v14;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_BYTE *)(v16 + 8) = *(_BYTE *)(v17 + 8);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v18 = a3[10];
  v19 = a3[11];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_BYTE *)(v20 + 16) = *(_BYTE *)(v21 + 16);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  return a1;
}

uint64_t sub_1004E2804(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v7;
  sub_1001F2564(v8, v9);
  v10 = *(_BYTE *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v10;
  sub_1001F2564(v11, v12);
  if (a1 != a2)
  {
    v13 = a3[7];
    v14 = (_OWORD *)(a1 + v13);
    v15 = (_OWORD *)(a2 + v13);
    sub_100010960(a1 + v13, &qword_1009D5038);
    v16 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(v15, v16) == 1)
    {
      *v14 = *v15;
      v17 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v18 = (char *)v14 + v17;
      v19 = (char *)v15 + v17;
      v20 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      swift_storeEnumTagMultiPayload(v14, v16, 1);
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
  }
  v21 = a3[8];
  v22 = (uint64_t *)(a1 + v21);
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  LOBYTE(v23) = *((_BYTE *)v23 + 8);
  v25 = *v22;
  *v22 = v24;
  *((_BYTE *)v22 + 8) = (_BYTE)v23;
  swift_release(v25);
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)(a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  v31 = v27[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease(v31);
  v32 = a3[10];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = *(_QWORD *)(a1 + v32);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);
  swift_release(v35);
  v36 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v33 + 8) = *(_QWORD *)(v34 + 8);
  swift_release(v36);
  *(_BYTE *)(v33 + 16) = *(_BYTE *)(v34 + 16);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_1004E29B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004E29C4);
}

uint64_t sub_1004E29C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10004CFD4(&qword_1009D5030);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 28), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1004E2A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004E2A58);
}

uint64_t sub_1004E2A58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10004CFD4(&qword_1009D5030);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 28), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
  return result;
}

void sub_1004E2ADC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_100729E38;
  v4[1] = &unk_100729E50;
  v4[2] = &unk_100729E50;
  sub_10025BB8C(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    v4[4] = &unk_100729E50;
    v4[5] = &unk_100729E68;
    v4[6] = &unk_100729E80;
    v4[7] = &unk_100729E98;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
  }
}

uint64_t sub_1004E2B7C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100874518, 1);
}

uint64_t sub_1004E2B8C@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t OpaqueTypeConformance2;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t KeyPath;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101[16];
  uint64_t v102;
  char v103[16];
  uint64_t v104;
  char v105[8];
  uint64_t v106;
  _QWORD v107[2];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;

  v98 = a1;
  v93 = type metadata accessor for InlinePickerStyle(0, a2);
  v94 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v89 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MenuOrder(0);
  v99 = *(_QWORD *)(v4 - 8);
  v100 = v4;
  __chkstk_darwin(v4);
  v82 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AutomaticHoverEffect(0);
  v85 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009E7AC8);
  v77 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_10004CFD4(&qword_1009E7AD0);
  v80 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v13 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_10004CFD4(&qword_1009E7AD8);
  v84 = *(_QWORD *)(v81 - 8);
  __chkstk_darwin(v81);
  v76 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_10004CFD4(&qword_1009E7AE0);
  v87 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v78 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_10004CFD4(&qword_1009E7AE8);
  __chkstk_darwin(v90);
  v83 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v88 = (char *)&v75 - v18;
  v97 = sub_10004CFD4(&qword_1009E7AF0);
  v96 = *(_QWORD *)(v97 - 8);
  __chkstk_darwin(v97);
  v91 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_10004CFD4(&qword_1009E7AF8);
  __chkstk_darwin(v95);
  v92 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v2;
  v106 = v2;
  v104 = v2;
  v21 = sub_10004CFD4(&qword_1009E7B00);
  v22 = sub_10004CFD4(&qword_1009E7B08);
  v23 = sub_1004E4928();
  v24 = sub_100030B34(&qword_1009E7B78, &qword_1009E7B08, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
  v25 = Menu.init(content:label:)(sub_1004E4900, v105, sub_1004E4920, v103, v21, v22, v23, v24);
  static CustomHoverEffect<>.automatic.getter(v25);
  v26 = sub_100030B34(&qword_1009E7B80, &qword_1009E7AC8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
  v27 = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  View.hoverEffect<A>(_:isEnabled:)(v8, 1, v9, v6, v26, v27);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v8, v6);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v11, v9);
  v29 = v82;
  static MenuOrder.fixed.getter(v28);
  v108 = v9;
  v109 = v6;
  v110 = v26;
  v111 = (void *)v27;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v108, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
  v31 = v76;
  v32 = v79;
  View.menuOrder(_:)(v29, v79, OpaqueTypeConformance2);
  v85 = *(_QWORD *)(v99 + 8);
  ((void (*)(char *, uint64_t))v85)(v29, v100);
  v33 = (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v13, v32);
  v34 = v89;
  InlinePickerStyle.init()(v33);
  v108 = v32;
  v109 = OpaqueTypeConformance2;
  v35 = swift_getOpaqueTypeConformance2(&v108, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 1);
  v36 = v78;
  v37 = v81;
  v38 = v93;
  View.pickerStyle<A>(_:)(v34, v81, v93, v35, &protocol witness table for InlinePickerStyle);
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v94 + 8))(v34, v38);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v31, v37);
  v40 = type metadata accessor for PageTurnOptionsMenu(0);
  v41 = v75;
  v42 = (uint64_t *)(v75 + *(int *)(v40 + 36));
  v44 = *v42;
  v43 = v42[1];
  v107[0] = v44;
  v107[1] = v43;
  v108 = v37;
  v109 = v39;
  v110 = v35;
  v111 = &protocol witness table for InlinePickerStyle;
  v45 = swift_getOpaqueTypeConformance2(&v108, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
  v46 = sub_1001F2108();
  v47 = (uint64_t)v83;
  v48 = v86;
  View.accessibilityLabel<A>(_:)(v107, v86, &type metadata for String, v45, v46);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v36, v48);
  v49 = v41 + *(int *)(v40 + 40);
  v50 = *(_QWORD *)v49;
  v51 = *(_QWORD *)(v49 + 8);
  LOBYTE(v49) = *(_BYTE *)(v49 + 16);
  v108 = v50;
  v109 = v51;
  LOBYTE(v110) = v49;
  v52 = sub_10004CFD4(&qword_1009E7B88);
  Binding.wrappedValue.getter(v107, v52);
  v53 = PageNavigationStyle.accessibilityName.getter(LOBYTE(v107[0]));
  v55 = v54;
  v108 = v53;
  v109 = v54;
  v56 = (uint64_t)v88;
  v57 = v90;
  ModifiedContent<>.accessibilityValue<A>(_:)(&v108, v90, &type metadata for String, v46);
  swift_bridgeObjectRelease(v55);
  sub_100010960(v47, &qword_1009E7AE8);
  v102 = v41;
  v58 = sub_10004CFD4(&qword_1009DFE50);
  v59 = sub_1004E4BF0();
  sub_100030B34(&qword_1009DFE60, &qword_1009DFE50, (uint64_t)&protocol conformance descriptor for VStack<A>);
  v60 = v91;
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_1004E4BE8, v101, v57, v58, v59);
  sub_100010960(v56, &qword_1009E7AE8);
  KeyPath = swift_getKeyPath(&unk_100729F00);
  v62 = v96;
  v63 = v92;
  v64 = v60;
  v65 = v97;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v92, v60, v97);
  v66 = &v63[*(int *)(v95 + 36)];
  v67 = (uint64_t)v63;
  *(_QWORD *)v66 = KeyPath;
  v66[8] = 0;
  (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v65);
  v68 = swift_getKeyPath(&unk_100729F30);
  static MenuOrder.fixed.getter(v68);
  v69 = sub_10004CFD4(&qword_1009E7B98);
  v70 = v98;
  v71 = (uint64_t *)(v98 + *(int *)(v69 + 36));
  v72 = sub_10004CFD4(&qword_1009E7BA0);
  v73 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))((char *)v71 + *(int *)(v72 + 28), v29, v100);
  *v71 = v68;
  sub_10000B5E4(v67, v70, &qword_1009E7AF8);
  ((void (*)(char *, uint64_t))v85)(v29, v73);
  return sub_100010960(v67, &qword_1009E7AF8);
}

double sub_1004E33A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double result;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PageTurnOptionsMenu(0) + 40));
  v3 = *v2;
  v4 = v2[1];
  LOBYTE(v2) = *((_BYTE *)v2 + 16);
  v15 = v3;
  v16 = v4;
  v17 = (char)v2;
  v5 = sub_10004CFD4(&qword_1009E7B88);
  Binding.projectedValue.getter(v5);
  v6 = v18;
  v7 = v19;
  v14 = v1;
  swift_retain(v18);
  swift_retain(v19);
  v8 = sub_10004CFD4(&qword_1009E7BA8);
  v9 = sub_1004E4E4C();
  v10 = sub_1004E4E90();
  Picker.init(selection:label:content:)(&v18, v11, sub_1004E4E44, v13, &type metadata for EmptyView, &type metadata for PageNavigationStyle, v8, &protocol witness table for EmptyView, v9, v10);
  swift_release(v7);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_1004E34A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  unsigned int v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t result;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __n128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD v107[2];
  char v108;
  uint64_t v109;

  v106 = a2;
  v3 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v3);
  v104 = (uint64_t)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v89);
  v6 = (uint64_t *)((char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v88 = type metadata accessor for Image.Scale(0);
  v7 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v9 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v10);
  v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Font.TextStyle(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_10004CFD4(&qword_1009E0888);
  __chkstk_darwin(v87);
  v18 = (uint64_t *)((char *)&v87 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v91 = sub_10004CFD4(&qword_1009E7B70);
  __chkstk_darwin(v91);
  v92 = (uint64_t)&v87 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4(&qword_1009E7B60);
  __chkstk_darwin(v20);
  v95 = (uint64_t)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_10004CFD4(&qword_1009E7B50);
  __chkstk_darwin(v94);
  v97 = (uint64_t)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_10004CFD4(&qword_1009E7B40);
  __chkstk_darwin(v93);
  v98 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_10004CFD4(&qword_1009E7B30);
  __chkstk_darwin(v96);
  v103 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_10004CFD4(&qword_1009E7B20);
  __chkstk_darwin(v101);
  v102 = (uint64_t)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_10004CFD4(&qword_1009E7B00);
  __chkstk_darwin(v99);
  v100 = (uint64_t)&v87 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for PageTurnOptionsMenu(0);
  v27 = (uint64_t *)(a1 + *(int *)(v90 + 40));
  v28 = *v27;
  v29 = v27[1];
  LOBYTE(v27) = *((_BYTE *)v27 + 16);
  v107[0] = v28;
  v107[1] = v29;
  v108 = (char)v27;
  v30 = sub_10004CFD4(&qword_1009E7B88);
  Binding.wrappedValue.getter(&v109, v30);
  v105 = a1;
  sub_1004E3D9C(v109);
  v32 = v31;
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for Font.TextStyle.callout(_:), v13);
  v33 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v12, 1, 1, v33);
  v34 = static Font.system(_:design:weight:)(v16, v12, 0, 1);
  sub_100010960((uint64_t)v12, &qword_1009CEDD0);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  static Font.Weight.semibold.getter(v35);
  v36 = Font.weight(_:)(v34);
  swift_release(v34);
  KeyPath = swift_getKeyPath(&unk_100729F60);
  v38 = v88;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.large(_:), v88);
  v39 = swift_getKeyPath(&unk_100729F90);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v6 + *(int *)(v89 + 28), v9, v38);
  *v6 = v39;
  sub_10000B5E4((uint64_t)v6, (uint64_t)v18 + *(int *)(v87 + 36), &qword_1009D38F8);
  *v18 = v32;
  v18[1] = KeyPath;
  v18[2] = v36;
  swift_retain(v32);
  swift_retain(KeyPath);
  swift_retain(v36);
  sub_100010960((uint64_t)v6, &qword_1009D38F8);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v38);
  swift_release(v36);
  swift_release(KeyPath);
  swift_release(v32);
  v41 = static Edge.Set.top.getter(v40);
  v42 = v41;
  v43 = static Edge.Set.bottom.getter(v41);
  v44 = Edge.Set.init(rawValue:)(0);
  v45 = Edge.Set.init(rawValue:)(v44);
  if (Edge.Set.init(rawValue:)(v45 & v42) != v42)
    v44 = Edge.Set.init(rawValue:)(v44 | v42);
  v46 = Edge.Set.init(rawValue:)(v44);
  if (Edge.Set.init(rawValue:)(v46 & v43) != v43)
    LOBYTE(v44) = Edge.Set.init(rawValue:)(v44 | v43);
  v47 = (uint64_t)v103;
  v48 = EdgeInsets.init(_all:)(6.0);
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v55 = v92;
  sub_10000B5E4((uint64_t)v18, v92, &qword_1009E0888);
  v56 = v55 + *(int *)(v91 + 36);
  *(_BYTE *)v56 = v44;
  *(double *)(v56 + 8) = v48;
  *(_QWORD *)(v56 + 16) = v50;
  *(_QWORD *)(v56 + 24) = v52;
  *(_QWORD *)(v56 + 32) = v54;
  *(_BYTE *)(v56 + 40) = 0;
  v57 = sub_100010960((uint64_t)v18, &qword_1009E0888);
  v58 = static Alignment.center.getter(v57);
  v59 = v95;
  sub_1005F2F6C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v95, 0.0, 1, INFINITY, 0, v58, v60);
  sub_100010960(v55, &qword_1009E7B70);
  v61 = v105;
  v62 = (uint64_t *)(v105 + *(int *)(v90 + 32));
  v63 = *v62;
  v64 = *((_BYTE *)v62 + 8);
  swift_retain(*v62);
  v66 = sub_1006682B0(v65, v64);
  v67 = swift_release(v63);
  LOBYTE(v63) = static Edge.Set.all.getter(v67);
  v68 = v97;
  sub_10000B5E4(v59, v97, &qword_1009E7B60);
  v69 = v68 + *(int *)(v94 + 36);
  *(_QWORD *)v69 = v66;
  *(_BYTE *)(v69 + 8) = v63;
  sub_100010960(v59, &qword_1009E7B60);
  v70 = v104;
  sub_10066805C(v104);
  v71 = (uint64_t)v98;
  v72 = (uint64_t)&v98[*(int *)(v93 + 36)];
  sub_10002CD84(v70, v72, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v72 + *(int *)(sub_10004CFD4(&qword_1009F4140) + 36)) = 256;
  sub_10000B5E4(v68, v71, &qword_1009E7B50);
  sub_10025BC80(v70);
  sub_100010960(v68, &qword_1009E7B50);
  sub_10066805C(v70);
  v73 = v47 + *(int *)(v96 + 36);
  sub_10002CD84(v70, v73, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_BYTE *)(v73 + *(int *)(sub_10004CFD4(&qword_1009D5140) + 36)) = 0;
  sub_10000B5E4(v71, v47, &qword_1009E7B40);
  sub_10025BC80(v70);
  sub_100010960(v71, &qword_1009E7B40);
  if (*(_QWORD *)v61)
  {
    v74 = *(id *)v61;
    v75 = ChromeStyle.accentColor.getter();

    v76 = swift_getKeyPath(&unk_100729FC0);
    v107[0] = v75;
    v77 = swift_retain(v75);
    v78 = AnyShapeStyle.init<A>(_:)(v107, &type metadata for Color, &protocol witness table for Color, v77);
    v79 = v102;
    sub_10000B5E4(v47, v102, &qword_1009E7B30);
    swift_release(v75);
    v80 = (uint64_t *)(v79 + *(int *)(v101 + 36));
    *v80 = v76;
    v80[1] = v78;
    sub_100010960(v47, &qword_1009E7B30);
    v81 = v100;
    sub_10000B5E4(v79, v100, &qword_1009E7B20);
    *(_BYTE *)(v81 + *(int *)(v99 + 36)) = 0;
    sub_100010960(v79, &qword_1009E7B20);
    return sub_100025B3C(v81, v106, &qword_1009E7B00);
  }
  else
  {
    v83 = *(_QWORD *)(v61 + 8);
    v84 = type metadata accessor for ChromeStyle(0);
    v85 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v83, v84, v85, v86);
    __break(1u);
  }
  return result;
}

void sub_1004E3D9C(char a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ImageResource(0);
  __chkstk_darwin(v2);
  __asm { BR              X10 }
}

uint64_t sub_1004E3E08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CEBC0 != -1)
    swift_once(&qword_1009CEBC0, sub_10069C5DC);
  v3 = sub_100048F64(v0, (uint64_t)qword_100A1F168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v0);
  return Image.init(_:)(v1);
}

__n128 sub_1004E3F5C@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  __n128 result;
  unint64_t v9;
  __n128 v10;
  unsigned __int8 v11;
  unint64_t v12;

  v4 = static HorizontalAlignment.center.getter(a1);
  sub_1004E3FCC(a1, (uint64_t)&v9);
  v5 = v9;
  v6 = v11;
  v7 = v12;
  result = v10;
  a2->n128_u64[0] = v4;
  a2->n128_u64[1] = 0;
  a2[1].n128_u8[0] = 1;
  a2[1].n128_u64[1] = v5;
  a2[2] = result;
  a2[3].n128_u8[0] = v6;
  a2[3].n128_u64[1] = v7;
  return result;
}

double sub_1004E3FCC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v4 = type metadata accessor for PageTurnOptionsMenu(0);
  v5 = (uint64_t *)(a1 + *(int *)(v4 + 40));
  v6 = *v5;
  v7 = v5[1];
  LOBYTE(v5) = *((_BYTE *)v5 + 16);
  v23 = v6;
  v24 = v7;
  v25 = (char)v5;
  v8 = sub_10004CFD4(&qword_1009E7B88);
  Binding.wrappedValue.getter(&v26, v8);
  sub_1004E3D9C(v26);
  v10 = v9;
  v11 = (uint64_t *)(a1 + *(int *)(v4 + 36));
  v12 = v11[1];
  v23 = *v11;
  v24 = v12;
  v13 = sub_1001F2108();
  v14 = swift_bridgeObjectRetain(v12);
  v15 = Text.init<A>(_:)(&v23, &type metadata for String, v13, v14);
  v17 = v16;
  v19 = v18;
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v15;
  v21 = v20 & 1;
  *(_QWORD *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 24) = v20 & 1;
  *(_QWORD *)(a2 + 32) = v18;
  swift_retain(v10);
  sub_1001F596C(v15, v17, v21);
  swift_bridgeObjectRetain(v19);
  sub_1001F5B28(v15, v17, v21);
  swift_release(v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v19).n128_u64[0];
  return result;
}

uint64_t sub_1004E40E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for MenuOrder(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.menuOrder.setter(v4);
}

uint64_t sub_1004E4160(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  _UNKNOWN **v16;

  v2 = type metadata accessor for PageTurnOptionsMenu(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  __chkstk_darwin(v2);
  v16 = &off_1008F0EB0;
  sub_10002CD84(a1, (uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = *(unsigned __int8 *)(v3 + 80);
  v7 = (v6 + 16) & ~v6;
  v8 = swift_allocObject(&unk_10090C1A8, v7 + v4, v6 | 7);
  sub_1004E51AC((uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7);
  v9 = sub_10004CFD4(&qword_1009E7BE8);
  v10 = sub_10004CFD4(&qword_1009E7BC8);
  v11 = sub_100030B34(&qword_1009E7BF0, &qword_1009E7BE8, (uint64_t)&protocol conformance descriptor for [A]);
  v12 = sub_1004E4EF4();
  v13 = sub_1004E523C();
  return ForEach<>.init(_:content:)(&v16, sub_1004E51F0, v8, v9, &type metadata for PageNavigationStyle, v10, v11, v12, v13);
}

uint64_t sub_1004E42A0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t KeyPath;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62[16];
  uint64_t v63;
  char v64;
  _BYTE v65[23];
  unsigned __int8 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v50 = a2;
  v61 = a3;
  v5 = type metadata accessor for AccessibilityChildBehavior(0);
  v56 = *(_QWORD *)(v5 - 8);
  v57 = v5;
  __chkstk_darwin(v5);
  v55 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for TitleAndIconLabelStyle(0);
  v52 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D8850);
  v51 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009E7BE0);
  v14 = *(_QWORD *)(v13 - 8);
  v53 = v13;
  v54 = v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009E7C00);
  v59 = *(_QWORD *)(v17 - 8);
  v60 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_10004CFD4(&qword_1009E7BD8);
  v20 = __chkstk_darwin(v58);
  v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a1;
  v65[16] = v23;
  v63 = a2;
  v64 = v23;
  v24 = Label.init(title:icon:)(sub_1004E5280, v65, sub_1004E5288, v62, &type metadata for Text, &type metadata for Image, &protocol witness table for Text, &protocol witness table for Image, v20);
  TitleAndIconLabelStyle.init()(v24);
  v25 = sub_100030B34(&qword_1009D3E98, (uint64_t *)&unk_1009D8850, (uint64_t)&protocol conformance descriptor for Label<A, B>);
  v26 = sub_100008DB0(&qword_1009D6AA8, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
  View.labelStyle<A>(_:)(v9, v10, v7, v25, v26);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v7);
  v27 = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v12, v10);
  v28 = v55;
  static AccessibilityChildBehavior.combine.getter(v27);
  v67 = v10;
  v68 = v7;
  v69 = v25;
  v70 = v26;
  v29 = 1;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v67, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
  v31 = v53;
  View.accessibilityElement(children:)(v28, v53, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v28, v57);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v16, v31);
  v32 = v50 + *(int *)(type metadata accessor for PageTurnOptionsMenu(0) + 40);
  v33 = *(_QWORD *)v32;
  v34 = *(_QWORD *)(v32 + 8);
  LOBYTE(v32) = *(_BYTE *)(v32 + 16);
  v67 = v33;
  v68 = v34;
  LOBYTE(v69) = v32;
  v35 = sub_10004CFD4(&qword_1009E7B88);
  Binding.wrappedValue.getter(&v66, v35);
  v36 = PageNavigationStyle.rawValue.getter(v66);
  v38 = v37;
  v40 = PageNavigationStyle.rawValue.getter(v23);
  v41 = v39;
  if (v36 != v40 || (v42 = v38, v38 != v39))
  {
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v40, v39, 0);
    v42 = v41;
  }
  swift_bridgeObjectRelease(v38);
  v43 = swift_bridgeObjectRelease(v42);
  v45 = v59;
  v44 = v60;
  (*(void (**)(char *, char *, uint64_t, __n128))(v59 + 16))(v22, v19, v60, v43);
  v22[*(int *)(v58 + 36)] = v29 & 1;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v44);
  KeyPath = swift_getKeyPath(&unk_100729F00);
  v47 = v61;
  sub_10000B5E4((uint64_t)v22, v61, &qword_1009E7BD8);
  v48 = v47 + *(int *)(sub_10004CFD4(&qword_1009E7BC8) + 36);
  *(_QWORD *)v48 = KeyPath;
  *(_BYTE *)(v48 + 8) = 0;
  return sub_100010960((uint64_t)v22, &qword_1009E7BD8);
}

uint64_t sub_1004E46E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  __n128 v4;
  uint64_t result;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[2];

  v9[0] = PageNavigationStyle.displayName.getter();
  v9[1] = v2;
  v3 = sub_1001F2108();
  result = Text.init<A>(_:)(v9, &type metadata for String, v3, v4);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7 & 1;
  *(_QWORD *)(a1 + 24) = v8;
  return result;
}

void sub_1004E4734(uint64_t a1, char a2)
{
  uint64_t v3;

  v3 = type metadata accessor for ImageResource(0);
  __chkstk_darwin(v3);
  __asm { BR              X10 }
}

uint64_t sub_1004E47A8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (qword_1009CEBC0 != -1)
    swift_once(&qword_1009CEBC0, sub_10069C5DC);
  v4 = sub_100048F64(v1, (uint64_t)qword_100A1F168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v4, v1);
  result = Image.init(_:)(v2);
  *v0 = result;
  return result;
}

double sub_1004E4900()
{
  return sub_1004E33A8();
}

uint64_t sub_1004E4920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004E34A0(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1004E4928()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E7B10;
  if (!qword_1009E7B10)
  {
    v1 = sub_100030B74(&qword_1009E7B00);
    sub_1004E4994();
    sub_1002812F0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7B10);
  }
  return result;
}

unint64_t sub_1004E4994()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E7B18;
  if (!qword_1009E7B18)
  {
    v1 = sub_100030B74(&qword_1009E7B20);
    sub_1004E4A18();
    sub_100030B34(&qword_1009E79A0, &qword_1009E79A8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7B18);
  }
  return result;
}

unint64_t sub_1004E4A18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E7B28;
  if (!qword_1009E7B28)
  {
    v1 = sub_100030B74(&qword_1009E7B30);
    sub_1004E4A9C();
    sub_100030B34(&qword_1009D5180, &qword_1009D5140, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7B28);
  }
  return result;
}

unint64_t sub_1004E4A9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E7B38;
  if (!qword_1009E7B38)
  {
    v1 = sub_100030B74(&qword_1009E7B40);
    sub_1004E4B20();
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7B38);
  }
  return result;
}

unint64_t sub_1004E4B20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E7B48;
  if (!qword_1009E7B48)
  {
    v1 = sub_100030B74(&qword_1009E7B50);
    sub_1001F5558(&qword_1009E7B58, &qword_1009E7B60, (void (*)(void))sub_1004E4BC4);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7B48);
  }
  return result;
}

uint64_t sub_1004E4BC4()
{
  return sub_1001F5558(&qword_1009E7B68, &qword_1009E7B70, (void (*)(void))sub_1003D7A84);
}

double sub_1004E4BE8@<D0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  double result;

  *(_QWORD *)&result = sub_1004E3F5C(*(_QWORD *)(v1 + 16), a1).n128_u64[0];
  return result;
}

unint64_t sub_1004E4BF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t OpaqueTypeConformance2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;

  result = qword_1009E7B90;
  if (!qword_1009E7B90)
  {
    v1 = sub_100030B74(&qword_1009E7AE8);
    v2 = sub_100030B74(&qword_1009E7AD8);
    v4 = type metadata accessor for InlinePickerStyle(255, v3);
    v5 = sub_100030B74(&qword_1009E7AD0);
    v8 = sub_100030B74(&qword_1009E7AC8);
    v9 = type metadata accessor for AutomaticHoverEffect(255);
    v10 = sub_100030B34(&qword_1009E7B80, &qword_1009E7AC8, (uint64_t)&protocol conformance descriptor for Menu<A, B>);
    v11 = (void *)sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
    v8 = v5;
    v9 = OpaqueTypeConformance2;
    v7 = swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.menuOrder(_:)>>, 1);
    v8 = v2;
    v9 = v4;
    v10 = v7;
    v11 = &protocol witness table for InlinePickerStyle;
    swift_getOpaqueTypeConformance2(&v8, &opaque type descriptor for <<opaque return type of View.pickerStyle<A>(_:)>>, 1);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7B90);
  }
  return result;
}

uint64_t sub_1004E4D70()
{
  return EnvironmentValues.menuOrder.getter();
}

uint64_t sub_1004E4DA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1004E4DCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.tint.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1004E4DF4(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tint.setter(v1);
}

uint64_t sub_1004E4E1C(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.tint.setter(v1);
}

uint64_t sub_1004E4E44()
{
  uint64_t v0;

  return sub_1004E4160(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1004E4E4C()
{
  unint64_t result;

  result = qword_1009E7BB0;
  if (!qword_1009E7BB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PageNavigationStyle, &type metadata for PageNavigationStyle);
    atomic_store(result, (unint64_t *)&qword_1009E7BB0);
  }
  return result;
}

unint64_t sub_1004E4E90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E7BB8;
  if (!qword_1009E7BB8)
  {
    v1 = sub_100030B74(&qword_1009E7BA8);
    sub_1004E4EF4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7BB8);
  }
  return result;
}

unint64_t sub_1004E4EF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E7BC0;
  if (!qword_1009E7BC0)
  {
    v1 = sub_100030B74(&qword_1009E7BC8);
    sub_1004E4F78();
    sub_100030B34((unint64_t *)&unk_1009D8600, &qword_1009D1CD0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7BC0);
  }
  return result;
}

unint64_t sub_1004E4F78()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = qword_1009E7BD0;
  if (!qword_1009E7BD0)
  {
    v1 = sub_100030B74(&qword_1009E7BD8);
    v2 = sub_100030B74(&qword_1009E7BE0);
    v4 = sub_100030B74((uint64_t *)&unk_1009D8850);
    v5 = type metadata accessor for TitleAndIconLabelStyle(255);
    v6 = sub_100030B34(&qword_1009D3E98, (uint64_t *)&unk_1009D8850, (uint64_t)&protocol conformance descriptor for Label<A, B>);
    v7 = sub_100008DB0(&qword_1009D6AA8, (uint64_t (*)(uint64_t))&type metadata accessor for TitleAndIconLabelStyle, (uint64_t)&protocol conformance descriptor for TitleAndIconLabelStyle);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.labelStyle<A>(_:)>>, 1);
    v4 = v2;
    v5 = OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_1003F3DB0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7BD0);
  }
  return result;
}

uint64_t sub_1004E5090()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = (int *)type metadata accessor for PageTurnOptionsMenu(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;

  sub_1001F2564(*(_QWORD *)(v6 + 16), *(_BYTE *)(v6 + 24));
  sub_1001F2564(*(_QWORD *)(v6 + 32), *(_BYTE *)(v6 + 40));
  v7 = (_QWORD *)(v0 + v4 + v1[7]);
  v8 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = (char *)v7 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v10 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release(*v7);
  }
  swift_release(*(_QWORD *)(v6 + v1[8]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[9] + 8));
  v11 = (_QWORD *)(v6 + v1[10]);
  swift_release(*v11);
  swift_release(v11[1]);
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1004E51AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageTurnOptionsMenu(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004E51F0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for PageTurnOptionsMenu(0) - 8) + 80);
  return sub_1004E42A0(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_1004E523C()
{
  unint64_t result;

  result = qword_1009E7BF8;
  if (!qword_1009E7BF8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PageNavigationStyle, &type metadata for PageNavigationStyle);
    atomic_store(result, (unint64_t *)&qword_1009E7BF8);
  }
  return result;
}

uint64_t sub_1004E5280@<X0>(uint64_t a1@<X8>)
{
  return sub_1004E46E0(a1);
}

void sub_1004E5288()
{
  uint64_t v0;

  sub_1004E4734(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

unint64_t sub_1004E5298()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E7C08;
  if (!qword_1009E7C08)
  {
    v1 = sub_100030B74(&qword_1009E7B98);
    sub_1004E531C();
    sub_100030B34(&qword_1009E7C18, &qword_1009E7BA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7C08);
  }
  return result;
}

unint64_t sub_1004E531C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009E7C10;
  if (!qword_1009E7C10)
  {
    v1 = sub_100030B74(&qword_1009E7AF8);
    v2[0] = sub_100030B74(&qword_1009E7AE8);
    v2[1] = sub_100030B74(&qword_1009DFE50);
    v2[2] = sub_1004E4BF0();
    v2[3] = sub_100030B34(&qword_1009DFE60, &qword_1009DFE50, (uint64_t)&protocol conformance descriptor for VStack<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>, 1);
    sub_100030B34((unint64_t *)&unk_1009D8600, &qword_1009D1CD0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E7C10);
  }
  return result;
}

_QWORD *sub_1004E540C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1004E7528(a1, (uint64_t)&unk_10072A520, a2);
}

void sub_1004E5420(char *a1)
{
  sub_1004E7860(*a1);
}

void sub_1004E5444(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072A368);
  v6 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + 17);
}

double sub_1004E54D0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A368);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004EBA10, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

__n128 sub_1004E5578@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  __n128 result;
  __int128 v7;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072A3B8);
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  result = *(__n128 *)(v3 + 24);
  v7 = *(_OWORD *)(v3 + 40);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v7;
  return result;
}

void sub_1004E5608(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  __int128 v7;
  _BYTE v8[16];
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A3B8);
  v9 = v4;
  v10 = v7;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v6 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, KeyPath, sub_1004EB38C, v8, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
}

uint64_t sub_1004E56C8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E7C20);
  sub_100048F64(v0, (uint64_t)qword_1009E7C20);
  sub_100009B88();
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001FLL, 0x80000001007CF5D0);
}

uint64_t sub_1004E5738()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072A2A0);
  v4 = v0;
  v2 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return swift_unknownObjectWeakLoadStrong(v0 + 16);
}

uint64_t sub_1004E57C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072A2A0);
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_unknownObjectWeakLoadStrong(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v7;
  return result;
}

double sub_1004E5858(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  double result;
  _QWORD v8[7];
  uint64_t v9;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A2A0);
  v8[2] = v4;
  v8[3] = v2;
  v8[4] = v3;
  v9 = v4;
  v6 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  swift_unknownObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004EB360, v8, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_unknownObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_1004E5914()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072A728);
  v4 = v0;
  v2 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return swift_unknownObjectWeakLoadStrong(v0 + 144);
}

uint64_t sub_1004E59A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_QWORD *)(a1 + 152) = a3;
  return swift_unknownObjectWeakAssign(a1 + 144, a2);
}

uint64_t sub_1004E59C0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072A700);
  v4 = v0;
  v2 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return swift_weakLoadStrong(v0 + 160);
}

uint64_t sub_1004E5A48(uint64_t a1)
{
  return swift_weakAssign(a1 + 160);
}

uint64_t sub_1004E5A60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];

  KeyPath = swift_getKeyPath(&unk_10072A4F8);
  v7[0] = v1;
  v4 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v7, KeyPath, v4);
  swift_release(KeyPath);
  v5 = v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, v7, 0, 0);
  return sub_1003F5FE0(v5, a1);
}

uint64_t sub_1004E5B10(uint64_t a1, uint64_t a2)
{
  return sub_1004E6D8C(a1, a2, &OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, (void (*)(uint64_t, uint64_t))sub_1004EB0DC);
}

uint64_t sub_1004E5B34()
{
  return sub_1004E5DC4((uint64_t)&unk_10072A4D0, &OBJC_IVAR____TtC5Books19BookReaderViewModel__closedAndNoOverlayVisible);
}

void sub_1004E5B48(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A4D0, &OBJC_IVAR____TtC5Books19BookReaderViewModel__closedAndNoOverlayVisible, a2);
}

double sub_1004E5B5C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A4D0);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004EBA88, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

id sub_1004E5C04()
{
  return sub_1004E5CF4((uint64_t)&unk_10072A6D8, &OBJC_IVAR____TtC5Books19BookReaderViewModel__coverImage);
}

id sub_1004E5C18@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004E6584(a1, (uint64_t)&unk_10072A6D8, &OBJC_IVAR____TtC5Books19BookReaderViewModel__coverImage, a2);
}

void sub_1004E5C2C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A6D8);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  v6 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1004EB9AC, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);

}

id sub_1004E5CE0()
{
  return sub_1004E5CF4((uint64_t)&unk_10072A6B0, &OBJC_IVAR____TtC5Books19BookReaderViewModel__backgroundColor);
}

id sub_1004E5CF4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = v2;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  return *(id *)(v2 + *a2);
}

void sub_1004E5D78(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__backgroundColor);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__backgroundColor) = a2;
  v3 = a2;

}

uint64_t sub_1004E5DB0()
{
  return sub_1004E5DC4((uint64_t)&unk_10072A2F0, &OBJC_IVAR____TtC5Books19BookReaderViewModel__bookCharacterFlowMatchesAppCharacterFlow);
}

uint64_t sub_1004E5DC4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = v2;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v2 + *a2);
}

void sub_1004E5E48(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, _BYTE *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v9 = v6;
  v8 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v8);
  swift_release(KeyPath);
  *a4 = *(_BYTE *)(v6 + *a3);
}

double sub_1004E5EE0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A2F0);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004EBA4C, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1004E5F88()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072A390);
  v4 = v0;
  v2 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeRenderMode);
}

uint64_t sub_1004E6014(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeRenderMode) = a2;
  return result;
}

double sub_1004E6024()
{
  return sub_1004E61E4((uint64_t)&unk_10072A458, &OBJC_IVAR____TtC5Books19BookReaderViewModel__edgeInsets);
}

void sub_1004E6038(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  __int128 v7;
  _BYTE v8[16];
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A458);
  v9 = v4;
  v10 = v7;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v6 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, KeyPath, sub_1004EB4A8, v8, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
}

double sub_1004E60F8()
{
  return sub_1004E69F8((uint64_t)&unk_10072A430, &OBJC_IVAR____TtC5Books19BookReaderViewModel__gutterWidth);
}

double sub_1004E610C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1004E6A90(a1, (uint64_t)&unk_10072A430, &OBJC_IVAR____TtC5Books19BookReaderViewModel__gutterWidth, a2);
}

void sub_1004E6120(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A430);
  v6[2] = v3;
  v6[3] = v2;
  v7 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_1004EBAC4, v6, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
}

double sub_1004E61D0()
{
  return sub_1004E61E4((uint64_t)&unk_10072A688, &OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin);
}

double sub_1004E61E4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = v2;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  return *(double *)(v2 + *a2);
}

double sub_1004E6270@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1004E6284(a1, (uint64_t)&unk_10072A688, &OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin, a2).n128_u64[0];
  return result;
}

__n128 sub_1004E6284@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, _OWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  __n128 result;
  __int128 v11;
  uint64_t v12;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v12 = v6;
  v8 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v12, KeyPath, v8);
  swift_release(KeyPath);
  v9 = v6 + *a3;
  result = *(__n128 *)v9;
  v11 = *(_OWORD *)(v9 + 16);
  *a4 = *(_OWORD *)v9;
  a4[1] = v11;
  return result;
}

void sub_1004E6320(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  __int128 v7;
  _BYTE v8[16];
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A688);
  v9 = v4;
  v10 = v7;
  v11 = v2;
  v12 = v3;
  v13 = v4;
  v6 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, KeyPath, sub_1004EB944, v8, (char *)&type metadata for () + 8, v6);
  swift_release(KeyPath);
}

uint64_t sub_1004E63E0(uint64_t result, double a2, double a3, double a4, double a5)
{
  double *v5;

  v5 = (double *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin);
  *v5 = a2;
  v5[1] = a3;
  v5[2] = a4;
  v5[3] = a5;
  return result;
}

double sub_1004E63F8()
{
  return sub_1004E691C((uint64_t)&unk_10072A480, &OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor);
}

double sub_1004E640C@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072A480);
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor);
  *a2 = v6;
  *(_QWORD *)&result = swift_retain(v6).n128_u64[0];
  return result;
}

double sub_1004E64A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A480);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  swift_retain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1004EB4CC, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

id sub_1004E655C()
{
  return sub_1004E5CF4((uint64_t)&unk_10072A660, &OBJC_IVAR____TtC5Books19BookReaderViewModel__textColor);
}

id sub_1004E6570@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004E6584(a1, (uint64_t)&unk_10072A660, &OBJC_IVAR____TtC5Books19BookReaderViewModel__textColor, a2);
}

id sub_1004E6584@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  void *v9;
  uint64_t v11;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v11 = v6;
  v8 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v8);
  swift_release(KeyPath);
  v9 = *(void **)(v6 + *a3);
  *a4 = v9;
  return v9;
}

void sub_1004E661C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A660);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  v6 = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1004EB8E0, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);

}

void sub_1004E66D0(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__textColor);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__textColor) = a2;
  v3 = a2;

}

uint64_t sub_1004E6708@<X0>(uint64_t a1@<X8>)
{
  return sub_1004E707C((uint64_t)&unk_10072A638, &OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for ColorScheme, a1);
}

uint64_t sub_1004E6724(uint64_t a1, uint64_t a2)
{
  return sub_1004E7314(a1, a2, &OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme);
}

uint64_t sub_1004E6748()
{
  return sub_1004E5DC4((uint64_t)&unk_10072A610, &OBJC_IVAR____TtC5Books19BookReaderViewModel__usePhysicalPages);
}

void sub_1004E675C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A610, &OBJC_IVAR____TtC5Books19BookReaderViewModel__usePhysicalPages, a2);
}

double sub_1004E6770(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A610);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004EB898, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1004E6818(uint64_t result, char a2)
{
  *(_BYTE *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel__usePhysicalPages) = a2;
  return result;
}

uint64_t sub_1004E6828()
{
  return sub_1004E5DC4((uint64_t)&unk_10072A5E8, &OBJC_IVAR____TtC5Books19BookReaderViewModel__hasPhysicalPages);
}

void sub_1004E683C(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A5E8, &OBJC_IVAR____TtC5Books19BookReaderViewModel__hasPhysicalPages, a2);
}

double sub_1004E6850(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A5E8);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004EB858, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1004E68F8(uint64_t result, char a2)
{
  *(_BYTE *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel__hasPhysicalPages) = a2;
  return result;
}

double sub_1004E6908()
{
  return sub_1004E691C((uint64_t)&unk_10072A5C0, &OBJC_IVAR____TtC5Books19BookReaderViewModel__historyViewModel);
}

double sub_1004E691C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = v2;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_retain(*(_QWORD *)(v2 + *a2)).n128_u64[0];
  return result;
}

uint64_t sub_1004E69A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__historyViewModel);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__historyViewModel) = a2;
  swift_retain(a2);
  return swift_release(v2);
}

double sub_1004E69E4()
{
  return sub_1004E69F8((uint64_t)&unk_10072A3E0, &OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarTopMargin);
}

double sub_1004E69F8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v7 = v2;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v7, KeyPath, v5);
  swift_release(KeyPath);
  return *(double *)(v2 + *a2);
}

double sub_1004E6A7C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1004E6A90(a1, (uint64_t)&unk_10072A3E0, &OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarTopMargin, a2);
}

double sub_1004E6A90@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X4>, double *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  double result;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v10 = v6;
  v8 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v8);
  swift_release(KeyPath);
  result = *(double *)(v6 + *a3);
  *a4 = result;
  return result;
}

void sub_1004E6B28(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A3E0);
  v6[2] = v3;
  v6[3] = v2;
  v7 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_1004EBAEC, v6, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
}

double sub_1004E6BD8()
{
  return sub_1004E69F8((uint64_t)&unk_10072A408, &OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarBottomMargin);
}

double sub_1004E6BEC@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1004E6A90(a1, (uint64_t)&unk_10072A408, &OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarBottomMargin, a2);
}

void sub_1004E6C00(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A408);
  v6[2] = v3;
  v6[3] = v2;
  v7 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_1004EBAD8, v6, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
}

uint64_t sub_1004E6CB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];

  KeyPath = swift_getKeyPath(&unk_10072A1B8);
  v7[0] = v1;
  v4 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v7, KeyPath, v4);
  swift_release(KeyPath);
  v5 = v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, v7, 0, 0);
  return sub_10002CD84(v5, a1, type metadata accessor for BookReaderChromeState);
}

uint64_t sub_1004E6D68(uint64_t a1, uint64_t a2)
{
  return sub_1004E6D8C(a1, a2, &OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, (void (*)(uint64_t, uint64_t))sub_1004EB124);
}

uint64_t sub_1004E6D8C(uint64_t a1, uint64_t a2, _QWORD *a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  _BYTE v8[24];

  v6 = a1 + *a3;
  swift_beginAccess(v6, v8, 33, 0);
  a4(a2, v6);
  return swift_endAccess(v8);
}

uint64_t sub_1004E6DF4()
{
  return sub_1004E5DC4((uint64_t)&unk_10072A598, &OBJC_IVAR____TtC5Books19BookReaderViewModel__isShowingExpandedContent);
}

void sub_1004E6E08(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A598, &OBJC_IVAR____TtC5Books19BookReaderViewModel__isShowingExpandedContent, a2);
}

double sub_1004E6E1C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A598);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004EB810, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1004E6EC4(uint64_t result, char a2)
{
  *(_BYTE *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel__isShowingExpandedContent) = a2;
  return result;
}

uint64_t sub_1004E6ED4()
{
  return sub_1004E5DC4((uint64_t)&unk_10072A2C8, &OBJC_IVAR____TtC5Books19BookReaderViewModel__isShowingRealTitle);
}

double sub_1004E6EE8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A2C8);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004EBA60, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1004E6F90()
{
  return sub_1004E5DC4((uint64_t)&unk_10072A318, &OBJC_IVAR____TtC5Books19BookReaderViewModel__fadeLeadingTitleEdge);
}

void sub_1004E6FA4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A318, &OBJC_IVAR____TtC5Books19BookReaderViewModel__fadeLeadingTitleEdge, a2);
}

double sub_1004E6FB8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A318);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004EBA38, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1004E7060@<X0>(uint64_t a1@<X8>)
{
  return sub_1004E707C((uint64_t)&unk_10072A340, &OBJC_IVAR____TtC5Books19BookReaderViewModel__layoutDirection, (uint64_t (*)(_QWORD, __n128))&type metadata accessor for LayoutDirection, a1);
}

uint64_t sub_1004E707C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t (*a3)(_QWORD, __n128)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD v14[3];

  KeyPath = swift_getKeyPath(a1);
  v14[0] = v4;
  v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v14, KeyPath, v9);
  swift_release(KeyPath);
  v10 = v4 + *a2;
  v11 = swift_beginAccess(v10, v14, 0, 0);
  v12 = a3(0, v11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a4, v10, v12);
}

uint64_t sub_1004E7144@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072A340);
  v9[0] = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v5);
  swift_release(KeyPath);
  v6 = v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__layoutDirection;
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__layoutDirection, v9, 0, 0);
  v7 = type metadata accessor for LayoutDirection(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, v6, v7);
}

uint64_t sub_1004E7208(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  __n128 v12;
  _BYTE v14[16];
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;

  v4 = type metadata accessor for LayoutDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v5 + 16))(v8, a1, v4, v6);
  v9 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A340);
  v15 = v9;
  v16 = v8;
  v17 = v9;
  v11 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v17, KeyPath, sub_1004EBA24, v14, (char *)&type metadata for () + 8, v11);
  v12 = swift_release(KeyPath);
  return (*(uint64_t (**)(_BYTE *, uint64_t, __n128))(v5 + 8))(v8, v4, v12);
}

uint64_t sub_1004E7314(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];

  v6 = a1 + *a3;
  swift_beginAccess(v6, v9, 33, 0);
  v7 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v6, a2, v7);
  return swift_endAccess(v9);
}

uint64_t sub_1004E7390()
{
  return sub_1004E5DC4((uint64_t)&unk_10072A250, &OBJC_IVAR____TtC5Books19BookReaderViewModel__isScrollMode);
}

void sub_1004E73A4(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A250, &OBJC_IVAR____TtC5Books19BookReaderViewModel__isScrollMode, a2);
}

double sub_1004E73B8(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A250);
  v7[2] = v3;
  v8 = v2;
  v9 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1004EB210, v7, (char *)&type metadata for () + 8, v5);
  *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  return result;
}

uint64_t sub_1004E7460()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072A570);
  v4 = v0;
  v2 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__bookmarkNotesContentType);
}

uint64_t sub_1004E74EC(uint64_t result, char a2)
{
  *(_BYTE *)(result + OBJC_IVAR____TtC5Books19BookReaderViewModel__bookmarkNotesContentType) = a2 & 1;
  return result;
}

uint64_t sub_1004E7500()
{
  return sub_1004E77D0((uint64_t)&unk_10072A548);
}

_QWORD *sub_1004E7514@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1004E7528(a1, (uint64_t)&unk_10072A548, a2);
}

_QWORD *sub_1004E7528@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  _QWORD *result;
  char v8;
  uint64_t v9;

  v4 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v9 = v4;
  v6 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v9, KeyPath, v6);
  swift_release(KeyPath);
  result = CurrentValueSubject.value.getter(&v8);
  *a3 = v8;
  return result;
}

void sub_1004E75CC(char *a1)
{
  sub_1004E75F0(*a1);
}

void sub_1004E75F0(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSString v8;
  _QWORD v9[3];
  char v10;
  uint64_t v11;

  v3 = a1 & 1;
  KeyPath = swift_getKeyPath(&unk_10072A548);
  v11 = v1;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v5);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(&v11);
  if (v11 != v3)
  {
    v6 = swift_getKeyPath(&unk_10072A548);
    __chkstk_darwin(v6);
    v9[2] = v1;
    v10 = v3;
    v11 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, v6, sub_1004EB780, v9, (char *)&type metadata for () + 8, v5);
    swift_release(v6);
    if ((a1 & 1) == 0)
    {
      byte_100A1EAB0 = 1;
      if (qword_1009CE740 != -1)
        swift_once(&qword_1009CE740, sub_100008F6C);
      v7 = (void *)qword_1009E7C38;
      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(v7, "setBool:forKey:", 1, v8);

    }
  }
}

uint64_t sub_1004E77A0(uint64_t a1, char a2)
{
  return sub_1004E7A2C(a1, a2);
}

uint64_t sub_1004E77BC()
{
  return sub_1004E77D0((uint64_t)&unk_10072A520);
}

uint64_t sub_1004E77D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  unsigned __int8 v5;
  uint64_t v6;

  KeyPath = swift_getKeyPath(a1);
  v6 = v1;
  v3 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v3);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(&v5);
  return v5;
}

void sub_1004E7860(char a1)
{
  uint64_t v1;
  int v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  NSString v8;
  _QWORD v9[3];
  char v10;
  uint64_t v11;

  v3 = a1 & 1;
  KeyPath = swift_getKeyPath(&unk_10072A520);
  v11 = v1;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v11, KeyPath, v5);
  swift_release(KeyPath);
  CurrentValueSubject.value.getter(&v11);
  if (v11 != v3)
  {
    v6 = swift_getKeyPath(&unk_10072A520);
    __chkstk_darwin(v6);
    v9[2] = v1;
    v10 = v3;
    v11 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v11, v6, sub_1004EB71C, v9, (char *)&type metadata for () + 8, v5);
    swift_release(v6);
    if ((a1 & 1) == 0)
    {
      byte_100A1EAB0 = 1;
      if (qword_1009CE740 != -1)
        swift_once(&qword_1009CE740, sub_100008F6C);
      v7 = (void *)qword_1009E7C38;
      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(v7, "setBool:forKey:", 1, v8);

    }
  }
}

uint64_t sub_1004E7A10(uint64_t a1, char a2)
{
  return sub_1004E7A2C(a1, a2);
}

uint64_t sub_1004E7A2C(uint64_t a1, char a2)
{
  char v3;

  v3 = a2;
  return CurrentValueSubject.value.setter(&v3);
}

double sub_1004E7A68()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  _QWORD *v3;
  double result;
  _QWORD v5[3];

  KeyPath = swift_getKeyPath(&unk_10072A4A8);
  v5[0] = v0;
  v2 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v5, KeyPath, v2);
  swift_release(KeyPath);
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__cancellables);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__cancellables, v5, 0, 0);
  *(_QWORD *)&result = swift_bridgeObjectRetain(*v3).n128_u64[0];
  return result;
}

double sub_1004E7B10@<D0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  double result;
  _QWORD v9[3];

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072A4A8);
  v9[0] = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v9, KeyPath, v5);
  swift_release(KeyPath);
  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__cancellables);
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__cancellables, v9, 0, 0);
  v7 = *v6;
  *a2 = *v6;
  *(_QWORD *)&result = swift_bridgeObjectRetain(v7).n128_u64[0];
  return result;
}

double sub_1004E7BC0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A4A8);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  swift_bridgeObjectRetain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_1004EB678, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v2).n128_u64[0];
  return result;
}

uint64_t sub_1004E7C78(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__cancellables);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__cancellables, v6, 1, 0);
  v4 = *v3;
  *v3 = a2;
  swift_bridgeObjectRetain(a2);
  return swift_bridgeObjectRelease(v4);
}

double sub_1004E7CE4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double result;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t ObjectType;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[4];

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009E8698);
  v3 = *(_QWORD *)(v2 - 8);
  v109 = v2;
  v110 = v3;
  __chkstk_darwin(v2);
  v108 = (char *)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009E76E0);
  v6 = *(_QWORD *)(v5 - 8);
  v104 = v5;
  v105 = v6;
  __chkstk_darwin(v5);
  v99 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009E86A0);
  v9 = *(_QWORD *)(v8 - 8);
  v106 = v8;
  v107 = v9;
  __chkstk_darwin(v8);
  v100 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009E86A8);
  v98 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_10004CFD4(&qword_1009E86B0);
  __chkstk_darwin(v96);
  v92 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_10004CFD4(&qword_1009D4D90);
  __chkstk_darwin(v94);
  v91 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_10004CFD4(&qword_1009E2E58);
  __chkstk_darwin(v93);
  v17 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_10004CFD4(&qword_1009E86B8);
  v111 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v19 = (char *)&v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess(v0[13] + OBJC_IVAR___REChromeStyle__pageBackgroundColor, v113, 33, 0);
  v20 = sub_10004CFD4(&qword_1009E0EB8);
  Published.projectedValue.getter(v20);
  swift_endAccess(v113);
  v21 = v0[11];
  v102 = v0[10];
  v103 = v21;
  ObjectType = swift_getObjectType();
  v112 = dispatch thunk of BookLayoutModeProviding.layoutModePublisher.getter(ObjectType, v21, v22);
  swift_beginAccess(v0[16] + OBJC_IVAR____TtC5Books13PageCurlState__isCurlActive, v113, 33, 0);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  Published.projectedValue.getter(v23);
  swift_endAccess(v113);
  v113[0] = *(_QWORD *)(v0[17] + 88);
  v24 = sub_10004CFD4(&qword_1009DD040);
  v25 = sub_100030B34(&qword_1009E86C0, &qword_1009DD040, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v26 = Publisher.eraseToAnyPublisher()(v24, v25);
  v113[0] = v26;
  v27 = sub_10004CFD4(&qword_1009E86C8);
  v28 = sub_100030B34(&qword_1009E86D0, &qword_1009E86C8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.map<A>(_:)(sub_1004E88F4, 0, v27, &type metadata for Bool, v28);
  swift_release(v26);
  v29 = sub_100030B34(&qword_1009E86D8, &qword_1009E86A8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v30 = v92;
  Publisher<>.removeDuplicates()(v11, v29, &protocol witness table for Bool);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v13, v11);
  v31 = sub_10004CFD4((uint64_t *)&unk_1009E7770);
  v97 = v31;
  v32 = sub_100030B34(&qword_1009E2E68, &qword_1009E2E58, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v33 = sub_100030B34(&qword_1009E5BA0, (uint64_t *)&unk_1009E7770, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v98 = v33;
  v34 = sub_100030B34((unint64_t *)&unk_1009DE3D0, &qword_1009D4D90, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v35 = sub_100030B34(&qword_1009E86E0, &qword_1009E86B0, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  Publishers.CombineLatest4.init(_:_:_:_:)(v17, &v112, v91, v30, v93, v31, v94, v96, v32, v33, v34, v35);
  v36 = swift_allocObject(&unk_10090C230, 24, 7);
  swift_weakInit(v36 + 16, v1);
  v37 = swift_allocObject(&unk_10090C258, 32, 7);
  *(_QWORD *)(v37 + 16) = sub_1004EB544;
  *(_QWORD *)(v37 + 24) = v36;
  v38 = sub_100030B34(&qword_1009E86E8, &qword_1009E86B8, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest4<A, B, C, D>);
  v39 = v95;
  v40 = Publisher<>.sink(receiveValue:)(sub_1004EB570, v37, v95, v38);
  v41 = swift_release(v37);
  (*(void (**)(char *, uint64_t, __n128))(v111 + 8))(v19, v39, v41);
  KeyPath = swift_getKeyPath(&unk_10072A4A8);
  v113[0] = v1;
  v43 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v113, KeyPath, v43);
  swift_release(KeyPath);
  v113[0] = v1;
  v44 = swift_getKeyPath(&unk_10072A4A8);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v113, v44, v43);
  swift_release(v44);
  v45 = (uint64_t)v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__cancellables;
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__cancellables, v113, 33, 0);
  v46 = sub_10004CFD4(&qword_1009E86F0);
  v111 = v46;
  v96 = sub_100030B34((unint64_t *)&unk_1009E91F0, &qword_1009E86F0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v45, v46, v96);
  swift_endAccess(v113);
  swift_release(v40);
  v113[0] = v1;
  v47 = swift_getKeyPath(&unk_10072A4A8);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v113, v47, v43);
  swift_release(v47);
  v113[0] = *(_QWORD *)(v1[14] + 288);
  v48 = sub_10004CFD4((uint64_t *)&unk_1009CEC60);
  v49 = sub_100030B34((unint64_t *)&qword_1009D94A0, (uint64_t *)&unk_1009CEC60, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v112 = Publisher.eraseToAnyPublisher()(v48, v49);
  swift_beginAccess(*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel)+ OBJC_IVAR____TtC5Books16OverlayViewModel__overlay, v113, 33, 0);
  v50 = sub_10004CFD4(&qword_1009E19E8);
  v51 = v99;
  Published.projectedValue.getter(v50);
  swift_endAccess(v113);
  v52 = sub_10004CFD4(&qword_1009D9D30);
  v53 = sub_100030B34(&qword_1009E7730, &qword_1009D9D30, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v54 = sub_100030B34((unint64_t *)&unk_1009E76F0, (uint64_t *)&unk_1009E76E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v55 = v100;
  v56 = v104;
  Publisher.combineLatest<A>(_:)(v51, v52, v104, v53, v54);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v51, v56);
  swift_release(v112);
  v57 = swift_allocObject(&unk_10090C230, 24, 7);
  swift_weakInit(v57 + 16, v1);
  v58 = swift_allocObject(&unk_10090C280, 32, 7);
  *(_QWORD *)(v58 + 16) = sub_1004EB5A8;
  *(_QWORD *)(v58 + 24) = v57;
  v59 = sub_100030B34(&qword_1009E86F8, &qword_1009E86A0, (uint64_t)&protocol conformance descriptor for Publishers.CombineLatest<A, B>);
  v60 = v106;
  v61 = Publisher<>.sink(receiveValue:)(sub_1004EB5B0, v58, v106, v59);
  v62 = swift_release(v58);
  (*(void (**)(char *, uint64_t, __n128))(v107 + 8))(v55, v60, v62);
  v63 = swift_getKeyPath(&unk_10072A4A8);
  v113[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v113, v63, v43);
  swift_release(v63);
  v113[0] = v1;
  v64 = swift_getKeyPath(&unk_10072A4A8);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v113, v64, v43);
  swift_release(v64);
  v95 = v45;
  swift_beginAccess(v45, v113, 33, 0);
  v65 = v96;
  AnyCancellable.store<A>(in:)(v45, v111, v96);
  swift_endAccess(v113);
  swift_release(v61);
  v113[0] = v1;
  v66 = swift_getKeyPath(&unk_10072A4A8);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v113, v66, v43);
  v67 = swift_release(v66);
  v68 = dispatch thunk of BookLayoutModeProviding.layoutModePublisher.getter(ObjectType, v103, v67);
  v113[0] = v68;
  v69 = sub_100008DB0((unint64_t *)&qword_1009D91C8, (uint64_t (*)(uint64_t))type metadata accessor for BookLayoutMode, (uint64_t)&unk_10070D37C);
  v70 = v108;
  Publisher<>.removeDuplicates()(v97, v98, v69);
  swift_release(v68);
  v71 = swift_allocObject(&unk_10090C230, 24, 7);
  swift_weakInit(v71 + 16, v1);
  v72 = sub_100030B34(&qword_1009E8700, &qword_1009E8698, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
  v73 = v109;
  v74 = Publisher<>.sink(receiveValue:)(sub_1004EB5F8, v71, v109, v72);
  v75 = swift_release(v71);
  (*(void (**)(char *, uint64_t, __n128))(v110 + 8))(v70, v73, v75);
  v76 = swift_getKeyPath(&unk_10072A4A8);
  v113[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v113, v76, v43);
  swift_release(v76);
  v113[0] = v1;
  v77 = swift_getKeyPath(&unk_10072A4A8);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v113, v77, v43);
  swift_release(v77);
  v78 = v95;
  swift_beginAccess(v95, v113, 33, 0);
  v79 = v111;
  AnyCancellable.store<A>(in:)(v78, v111, v65);
  swift_endAccess(v113);
  swift_release(v74);
  v113[0] = v1;
  v80 = swift_getKeyPath(&unk_10072A4A8);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v113, v80, v43);
  swift_release(v80);
  v81 = v1[9];
  v82 = swift_getObjectType();
  v113[0] = dispatch thunk of ReadingSettingsProviding.pageNavigationStylePublisher.getter(v82, v81);
  v83 = swift_allocObject(&unk_10090C230, 24, 7);
  swift_weakInit(v83 + 16, v1);
  v84 = sub_10004CFD4(&qword_1009E5CA8);
  v85 = sub_100030B34(&qword_1009E8F60, &qword_1009E5CA8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v86 = Publisher<>.sink(receiveValue:)(sub_1004EB600, v83, v84, v85);
  swift_release(v83);
  swift_release(v113[0]);
  v87 = swift_getKeyPath(&unk_10072A4A8);
  v113[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)(v113, v87, v43);
  swift_release(v87);
  v113[0] = v1;
  v88 = swift_getKeyPath(&unk_10072A4A8);
  ObservationRegistrar.willSet<A, B>(_:keyPath:)(v113, v88, v43);
  swift_release(v88);
  swift_beginAccess(v78, v113, 33, 0);
  AnyCancellable.store<A>(in:)(v78, v79, v65);
  swift_endAccess(v113);
  swift_release(v86);
  v113[0] = v1;
  v89 = swift_getKeyPath(&unk_10072A4A8);
  ObservationRegistrar.didSet<A, B>(_:keyPath:)(v113, v89, v43);
  *(_QWORD *)&result = swift_release(v89).n128_u64[0];
  return result;
}

uint64_t sub_1004E88F4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v4 = type metadata accessor for PageTurnViewModel.State.Active(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - v8;
  v10 = sub_10004CFD4(&qword_1009DD038);
  __chkstk_darwin(v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PageTurnViewModel.State(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v24 - v17;
  swift_storeEnumTagMultiPayload((char *)&v24 - v17, v13, 2);
  v19 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_10002CD84(a1, (uint64_t)v12, type metadata accessor for PageTurnViewModel.State);
  sub_10002CD84((uint64_t)v18, v19, type metadata accessor for PageTurnViewModel.State);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v13);
  if (!EnumCaseMultiPayload)
  {
    if (!swift_getEnumCaseMultiPayload(v19, v13))
    {
      sub_10002C8F0(v19, type metadata accessor for PageTurnViewModel.State);
      v22 = (uint64_t)v12;
LABEL_9:
      sub_10002C8F0(v22, type metadata accessor for PageTurnViewModel.State);
      v21 = 1;
      goto LABEL_12;
    }
LABEL_11:
    sub_100010960((uint64_t)v12, &qword_1009DD038);
    v21 = 0;
    goto LABEL_12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload(v19, v13) == 2)
    {
      v22 = (uint64_t)v12;
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  sub_10002CD84((uint64_t)v12, (uint64_t)v15, type metadata accessor for PageTurnViewModel.State);
  if (swift_getEnumCaseMultiPayload(v19, v13) != 1)
  {
    sub_10002C8F0((uint64_t)v15, type metadata accessor for PageTurnViewModel.State.Active);
    goto LABEL_11;
  }
  sub_1004EB690((uint64_t)v15, (uint64_t)v9);
  sub_1004EB690(v19, (uint64_t)v6);
  v21 = sub_1003612D8((uint64_t)v9, (uint64_t)v6);
  sub_10002C8F0((uint64_t)v6, type metadata accessor for PageTurnViewModel.State.Active);
  sub_10002C8F0((uint64_t)v9, type metadata accessor for PageTurnViewModel.State.Active);
  sub_10002C8F0((uint64_t)v12, type metadata accessor for PageTurnViewModel.State);
LABEL_12:
  result = sub_10002C8F0((uint64_t)v18, type metadata accessor for PageTurnViewModel.State);
  *a2 = v21 & 1;
  return result;
}

double sub_1004E8B8C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t Strong;
  double result;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  _BYTE v27[24];

  v9 = a5 + 16;
  swift_beginAccess(a5 + 16, v27, 0, 0);
  Strong = swift_weakLoadStrong(v9);
  if (Strong)
  {
    v12 = Strong;
    v13 = *(_QWORD *)(Strong + 136);
    KeyPath = swift_getKeyPath(&unk_10072A1E0);
    v26 = v13;
    v15 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v26, KeyPath, v15);
    swift_release(KeyPath);
    v16 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v13 + 80));
    v18 = v17;
    v19 = 1;
    v20 = PageTurnStyle.rawValue.getter(1);
    v22 = v16 == v20 && v18 == v21;
    v23 = v18;
    if (!v22)
    {
      v24 = v21;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v20, v21, 0);
      v23 = v24;
    }
    swift_bridgeObjectRelease(v18);
    swift_bridgeObjectRelease(v23);
    v25 = a3 & 1;
    sub_1004E9BAC(v19 & 1, v25);
    sub_1004E9254(a1, a2 == 2, v25, a4 & 1);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

double sub_1004E8CF0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];
  char v26[24];

  v6 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v6);
  v8 = (char *)&v25[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v25[-1] - v10;
  v12 = a3 + 16;
  swift_beginAccess(v12, v26, 0, 0);
  Strong = swift_weakLoadStrong(v12);
  if (Strong)
  {
    v14 = Strong;
    sub_1003F5FE0(a2, (uint64_t)v11);
    if ((a1 & 1) != 0)
    {
      v15 = type metadata accessor for OverlayViewModel.Overlay(0);
      v16 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v11, 1, v15) == 1;
    }
    else
    {
      v16 = 0;
    }
    sub_100010960((uint64_t)v11, &qword_1009EFD70);
    KeyPath = swift_getKeyPath(&unk_10072A4D0);
    __chkstk_darwin(KeyPath);
    *(&v24 - 2) = v14;
    *((_BYTE *)&v24 - 8) = v16;
    v25[0] = v14;
    v18 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v25, KeyPath, sub_1004EB630, &v24 - 4, (char *)&type metadata for () + 8, v18);
    swift_release(v14);
    swift_release(KeyPath);
  }
  swift_beginAccess(v12, v25, 0, 0);
  v19 = swift_weakLoadStrong(v12);
  if (v19)
  {
    v21 = v19;
    sub_1003F5FE0(a2, (uint64_t)v8);
    v22 = swift_getKeyPath(&unk_10072A4F8);
    __chkstk_darwin(v22);
    *(&v24 - 2) = v21;
    *(&v24 - 1) = (uint64_t)v8;
    v24 = v21;
    v23 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v24, v22, sub_1004EB650, &v24 - 4, (char *)&type metadata for () + 8, v23);
    swift_release(v22);
    sub_100010960((uint64_t)v8, &qword_1009EFD70);
    *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  }
  return result;
}

double sub_1004E8F88(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  int v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  char v12;
  uint64_t v13;
  char v14[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    v7 = BEBookLayoutMode.isScroll.getter(v2, result) & 1;
    KeyPath = swift_getKeyPath(&unk_10072A250);
    v13 = v6;
    v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v13, KeyPath, v9);
    swift_release(KeyPath);
    if (v7 != *(unsigned __int8 *)(v6 + OBJC_IVAR____TtC5Books19BookReaderViewModel__isScrollMode))
    {
      v10 = swift_getKeyPath(&unk_10072A250);
      __chkstk_darwin(v10);
      v11[2] = v6;
      v12 = v7;
      v13 = v6;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v13, v10, sub_1004EBA74, v11, (char *)&type metadata for () + 8, v9);
      swift_release(v10);
    }
    sub_1004EA4F8();
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_1004E90DC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;
  uint64_t KeyPath;
  uint64_t v16;
  _QWORD v17[3];
  char v18;
  uint64_t v19;
  char v20[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v6 = Strong;
    sub_1004E99FC(v2);
    v7 = PageNavigationStyle.rawValue.getter(v2);
    v9 = v8;
    v10 = PageNavigationStyle.rawValue.getter(3);
    if (v7 == v10 && v9 == v11)
    {
      v14 = 1;
      v13 = v9;
    }
    else
    {
      v13 = v11;
      v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v9, v10, v11, 0);
    }
    swift_bridgeObjectRelease(v9);
    swift_bridgeObjectRelease(v13);
    KeyPath = swift_getKeyPath(&unk_10072A250);
    __chkstk_darwin(KeyPath);
    v17[2] = v6;
    v18 = v14 & 1;
    v19 = v6;
    v16 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v19, KeyPath, sub_1004EBA74, v17, (char *)&type metadata for () + 8, v16);
    swift_release(KeyPath);
    sub_1004EA4F8();
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

double sub_1004E9254(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char v26;
  double result;
  uint64_t v28;
  _QWORD v29[5];
  uint64_t v30;

  v5 = v4;
  v10 = *(_QWORD *)(v4 + 136);
  KeyPath = swift_getKeyPath(&unk_10072A1E0);
  v30 = v10;
  v12 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v30, KeyPath, v12);
  swift_release(KeyPath);
  v13 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v10 + 80));
  v15 = v14;
  v16 = PageTurnStyle.rawValue.getter(2);
  if (v13 == v16 && v15 == v17)
  {
    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v19);
    if ((v20 & 1) == 0)
    {
      if ((a2 & 1) == 0 && (a3 & 1) == 0 && (a4 & 1) != 0)
        goto LABEL_9;
      goto LABEL_12;
    }
  }
  if ((a2 & 1) == 0)
  {
LABEL_9:
    swift_retain(a1);
    goto LABEL_13;
  }
LABEL_12:
  a1 = static Color.clear.getter(v21);
LABEL_13:
  v22 = swift_getKeyPath(&unk_10072A480);
  v30 = v5;
  v23 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v30, v22, v23);
  swift_release(v22);
  v24 = *(_QWORD *)(v5 + OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor);
  v25 = swift_retain(v24);
  v26 = static Color.== infix(_:_:)(v25);
  swift_release(v24);
  if ((v26 & 1) != 0)
  {
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  else
  {
    v28 = swift_getKeyPath(&unk_10072A480);
    __chkstk_darwin(v28);
    v29[2] = v5;
    v29[3] = a1;
    v30 = v5;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v30, v28, sub_1004EB4CC, v29, (char *)&type metadata for () + 8, v23);
    swift_release(v28);
    *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  }
  return result;
}

void sub_1004E9484(void *a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  id v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD v14[4];
  NSObject *v15;
  uint64_t v16;
  char v17[24];

  if ((a2 & 1) != 0)
  {
    if (qword_1009CE738 != -1)
      swift_once(&qword_1009CE738, sub_1004E56C8);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100048F64(v10, (uint64_t)qword_1009E7C20);
    v15 = Logger.logObject.getter(v11);
    v12 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v12, "failed to get cover image with error", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

  }
  else
  {
    v4 = a3 + 16;
    swift_beginAccess(a3 + 16, v17, 0, 0);
    Strong = swift_weakLoadStrong(v4);
    if (Strong)
    {
      v6 = Strong;
      v7 = objc_msgSend(objc_allocWithZone((Class)UIImage), "initWithCGImage:", a1);
      KeyPath = swift_getKeyPath(&unk_10072A6D8);
      __chkstk_darwin(KeyPath);
      v14[2] = v6;
      v14[3] = v7;
      v16 = v6;
      v9 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v16, KeyPath, sub_1004EB9F8, v14, (char *)&type metadata for () + 8, v9);
      swift_release(KeyPath);

      sub_10031726C(a1, 0);
      swift_release(v6);
    }
  }
}

void sub_1004E9690()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  double v5;
  uint64_t KeyPath;
  uint64_t v7;
  __n128 v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];
  _QWORD v43[2];
  _QWORD *v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[16];
  _QWORD *v50;
  double v51;
  char v52[16];
  _QWORD *v53;
  double v54;
  _QWORD *v55;

  v1 = v0;
  v2 = v0[5];
  v3 = v0[7];
  ObjectType = swift_getObjectType();
  v5 = (*(double (**)(uint64_t, uint64_t))(v3 + 24))(ObjectType, v3);
  KeyPath = swift_getKeyPath(&unk_10072A3E0);
  v53 = v0;
  v54 = v5;
  v55 = v0;
  v7 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v55, KeyPath, sub_1004EB3E8, v52, (char *)&type metadata for () + 8, v7);
  v8 = swift_release(KeyPath);
  v9 = (*(double (**)(uint64_t, uint64_t, __n128))(v3 + 32))(ObjectType, v3, v8);
  v10 = swift_getKeyPath(&unk_10072A408);
  v50 = v0;
  v51 = v9;
  v55 = v0;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v55, v10, sub_1004EB428, v49, (char *)&type metadata for () + 8, v7);
  swift_release(v10);
  v11 = swift_getKeyPath(&unk_10072A2A0);
  v55 = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v55, v11, v7);
  swift_release(v11);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + 2);
  if (Strong)
  {
    v13 = Strong;
    v47 = ObjectType;
    v48 = v2;
    v14 = v1[3];
    v15 = swift_getObjectType();
    v16 = dispatch thunk of BookContentLayoutProviderProviding.contentLayoutProvider.getter(v15, v14);
    v18 = v17;
    swift_unknownObjectRelease(v13);
    v19 = swift_getObjectType();
    v46 = v16;
    v20 = dispatch thunk of BookContentLayoutProviding.chromeGutterWidth.getter(v19, v18);
    v21 = swift_getKeyPath(&unk_10072A430);
    __chkstk_darwin(v21);
    v44 = v1;
    v45 = v20;
    v55 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v55, v21, sub_1004EB468, v43, (char *)&type metadata for () + 8, v7);
    swift_release(v21);
    v22 = PageProgressDirection.rawValue.getter(*(unsigned __int8 *)(v1[17] + 16));
    v24 = v23;
    v25 = 1;
    v27 = PageProgressDirection.rawValue.getter(1);
    v28 = v26;
    if (v22 != v27 || (v29 = v24, v24 != v26))
    {
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v27, v26, 0);
      v29 = v28;
    }
    swift_bridgeObjectRelease(v24);
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 96))(v47, v3, v30);
    v31 = EdgeInsets.init(_:isRTL:)(v25 & 1);
    v33 = v32;
    v35 = v34;
    v37 = v36;
    v38 = swift_getKeyPath(&unk_10072A458);
    __chkstk_darwin(v38);
    v42[2] = v1;
    *(double *)&v42[3] = v31;
    v43[0] = v33;
    v43[1] = v35;
    v44 = v37;
    v55 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v55, v38, sub_1004EB4A8, v42, (char *)&type metadata for () + 8, v7);
    swift_release(v38);
    v39 = v1[9];
    v40 = swift_getObjectType();
    v41 = dispatch thunk of ReadingSettingsProviding.pageNavigationStyle.getter(v40, v39);
    sub_1004E99FC(v41);
    swift_unknownObjectRelease(v46);
  }
}

void sub_1004E99FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[9];
  uint64_t v27;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 136);
  v5 = *(_QWORD *)(v1 + 56);
  ObjectType = swift_getObjectType();
  v7 = (*(double (**)(uint64_t, uint64_t))(v5 + 96))(ObjectType, v5);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  KeyPath = swift_getKeyPath(&unk_10072A3B8);
  v26[2] = v4;
  *(double *)&v26[3] = v7;
  v26[4] = v9;
  v26[5] = v11;
  v26[6] = v13;
  v27 = v4;
  v15 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v27, KeyPath, sub_1004EB38C, v26, (char *)&type metadata for () + 8, v15);
  swift_release(KeyPath);
  v16 = PageNavigationStyle.rawValue.getter(a1);
  v18 = v17;
  v20 = PageNavigationStyle.rawValue.getter(0);
  v21 = v19;
  if (v16 == v20 && v18 == v19)
  {
    v22 = 1;
    v21 = v18;
  }
  else
  {
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v18, v20, v19, 0);
  }
  swift_bridgeObjectRelease(v18);
  swift_bridgeObjectRelease(v21);
  v23 = *(_QWORD *)(v2 + 128);
  v24 = swift_getKeyPath(&unk_10072A208);
  v25 = swift_getKeyPath(&unk_10072A230);
  static Published.subscript.getter(&v27, v23, v24);
  swift_release(v24);
  swift_release(v25);
  sub_1004E9BAC(v22 & 1, v27);
}

double sub_1004E9BAC(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  id v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  id v35;
  uint64_t v36;
  unsigned int *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  unsigned __int8 v49;
  char v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  id *v57;
  uint64_t v58;
  char *v59;
  void (*v60)();
  uint64_t v61;
  id v62;
  uint64_t v63;
  char *v64;
  int v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  _QWORD v73[3];

  v3 = v2;
  v70 = type metadata accessor for LayoutDirection(0);
  v6 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_10072A2A0);
  v10 = v2 + OBJC_IVAR____TtC5Books19BookReaderViewModel___observationRegistrar;
  v73[0] = v2;
  v11 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v73, KeyPath, v11);
  swift_release(KeyPath);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 16);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    v71 = dispatch thunk of BookContentLayoutProviderProviding.contentLayoutProvider.getter(ObjectType, v14);
    v63 = v16;
    swift_unknownObjectRelease(v13);
    v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v62 = objc_msgSend(v17, "userInterfaceLayoutDirection");

    v18 = *(unsigned __int8 *)(v3 + 224);
    v67 = a2;
    v68 = a1;
    v65 = v18;
    v64 = v8;
    if ((v18 & 1) != 0)
    {
      v19 = 0;
    }
    else
    {
      v26 = swift_getKeyPath(&unk_10072A1B8);
      v73[0] = v3;
      ObservationRegistrar.access<A, B>(_:keyPath:)(v73, v26, v11);
      swift_release(v26);
      v27 = v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
      swift_beginAccess(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, v73, 0, 0);
      v19 = *(_BYTE *)(v27 + *(int *)(type metadata accessor for BookReaderChromeState(0) + 32));
    }
    v28 = swift_getKeyPath(&unk_10072A2C8);
    __chkstk_darwin(v28);
    *(&v62 - 2) = (id)v3;
    *((_BYTE *)&v62 - 8) = v19;
    v72 = (void *)v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v72, v28, sub_1004EB258, &v62 - 4, (char *)&type metadata for () + 8, v11);
    swift_release(v28);
    v29 = swift_getKeyPath(&unk_10072A2F0);
    v72 = (void *)v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v72, v29, v11);
    swift_release(v29);
    if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__bookCharacterFlowMatchesAppCharacterFlow) & 1) != 0)
    {
      v30 = 0;
    }
    else
    {
      v31 = swift_getKeyPath(&unk_10072A2C8);
      v72 = (void *)v3;
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v72, v31, v11);
      swift_release(v31);
      v30 = *(_BYTE *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__isShowingRealTitle);
    }
    v32 = swift_getKeyPath(&unk_10072A318);
    __chkstk_darwin(v32);
    *(&v62 - 2) = (id)v3;
    *((_BYTE *)&v62 - 8) = v30;
    v72 = (void *)v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v72, v32, sub_1004EB2C0, &v62 - 4, (char *)&type metadata for () + 8, v11);
    swift_release(v32);
    v33 = swift_getKeyPath(&unk_10072A2C8);
    v72 = (void *)v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v72, v33, v11);
    v34 = swift_release(v33);
    if (*(_BYTE *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__isShowingRealTitle) == 1)
    {
      v35 = v62;
      if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel_characterFlowIsRTL) & 1) != 0)
      {
LABEL_15:
        v36 = v10;
        v37 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
        goto LABEL_18;
      }
    }
    else
    {
      v35 = v62;
      if (v62 == (id)1)
        goto LABEL_15;
    }
    v36 = v10;
    v37 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
LABEL_18:
    LODWORD(v62) = v35 == (id)1;
    v38 = v64;
    v39 = v70;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v6 + 104))(v64, *v37, v70, v34);
    v40 = swift_getKeyPath(&unk_10072A340);
    __chkstk_darwin(v40);
    *(&v62 - 2) = (id)v3;
    *(&v62 - 1) = v38;
    v72 = (void *)v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v72, v40, sub_1004EB2E0, &v62 - 4, (char *)&type metadata for () + 8, v11);
    v41 = swift_release(v40);
    v42 = v39;
    v43 = v36;
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v38, v42, v41);
    v44 = v62 ^ *(_BYTE *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel_characterFlowIsRTL);
    v45 = swift_getKeyPath(&unk_10072A2F0);
    __chkstk_darwin(v45);
    *(&v62 - 2) = (id)v3;
    *((_BYTE *)&v62 - 8) = (v44 & 1) == 0;
    v72 = (void *)v3;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v72, v45, sub_1004EB308, &v62 - 4, (char *)&type metadata for () + 8, v11);
    swift_release(v45);
    v46 = swift_getObjectType();
    v70 = dispatch thunk of BookContentLayoutProviding.columnCount.getter(v46, v63);
    v47 = swift_getKeyPath(&unk_10072A250);
    v72 = (void *)v3;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v72, v47, v11);
    swift_release(v47);
    v48 = *(_BYTE *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__isScrollMode);
    v69 = v43;
    v66 = v11;
    if ((v48 & 1) != 0)
    {
      v49 = 0;
      v50 = v67;
    }
    else
    {
      v50 = v67;
      v49 = v67 & (v68 ^ 1);
    }
    v51 = *(void **)(v3 + 136);
    v52 = swift_getKeyPath(&unk_10072A368);
    __chkstk_darwin(v52);
    *(&v62 - 2) = v51;
    *((_BYTE *)&v62 - 8) = v49 & 1;
    v72 = v51;
    v53 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v72, v52, sub_1004EB328, &v62 - 4, (char *)&type metadata for () + 8, v53);
    swift_release(v52);
    if ((v50 & 1) != 0)
    {
      v54 = swift_getKeyPath(&unk_10072A390);
      __chkstk_darwin(v54);
      *(&v62 - 2) = (id)v3;
      *(&v62 - 1) = 0;
      v72 = (void *)v3;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v72, v54, sub_1004EBAB0, &v62 - 4, (char *)&type metadata for () + 8, v66);
      swift_unknownObjectRelease(v71);
      *(_QWORD *)&result = swift_release(v54).n128_u64[0];
    }
    else
    {
      v55 = v68 & (v70 == 2);
      if (v65)
      {
        v56 = swift_getKeyPath(&unk_10072A390);
        __chkstk_darwin(v56);
        v57 = &v62 - 4;
        *(&v62 - 2) = (id)v3;
        v58 = v66;
        if (v55)
          *(&v62 - 1) = (id)30;
        else
          *(&v62 - 1) = (id)31;
        v72 = (void *)v3;
        v59 = (char *)&type metadata for () + 8;
        v60 = sub_1004EBAB0;
        v61 = v56;
      }
      else
      {
        v56 = swift_getKeyPath(&unk_10072A390);
        __chkstk_darwin(v56);
        v57 = &v62 - 4;
        *(&v62 - 2) = (id)v3;
        v58 = v66;
        if (((v49 | v55) & 1) != 0)
        {
          *(&v62 - 1) = (id)28;
          v72 = (void *)v3;
          v59 = (char *)&type metadata for () + 8;
          v60 = sub_1004EBAB0;
        }
        else
        {
          *(&v62 - 1) = (id)29;
          v72 = (void *)v3;
          v59 = (char *)&type metadata for () + 8;
          v60 = sub_1004EB34C;
        }
        v61 = v56;
      }
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v72, v61, v60, v57, v59, v58);
      swift_unknownObjectRelease(v71);
      *(_QWORD *)&result = swift_release(v56).n128_u64[0];
    }
    return result;
  }
  if (qword_1009CE738 != -1)
    swift_once(&qword_1009CE738, sub_1004E56C8);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_100048F64(v20, (uint64_t)qword_1009E7C20);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.error.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "Must have a contentLayoutProvider", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }

  return result;
}

double sub_1004EA420()
{
  return sub_1004E69F8((uint64_t)&unk_10072A278, &OBJC_IVAR____TtC5Books19BookReaderViewModel__statusBarBackgroundOpacity);
}

double sub_1004EA434@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1004E6A90(a1, (uint64_t)&unk_10072A278, &OBJC_IVAR____TtC5Books19BookReaderViewModel__statusBarBackgroundOpacity, a2);
}

void sub_1004EA448(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD v6[5];
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A278);
  v6[2] = v3;
  v6[3] = v2;
  v7 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v7, KeyPath, sub_1004EBA9C, v6, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
}

void sub_1004EA4F8()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  double v5;
  uint64_t v6;
  _QWORD v7[5];
  _QWORD v8[4];
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_10072A250);
  v8[0] = v0;
  v2 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v8, KeyPath, v2);
  swift_release(KeyPath);
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__isScrollMode) != 1
    || (v3 = swift_getKeyPath(&unk_10072A1B8),
        v8[0] = v0,
        ObservationRegistrar.access<A, B>(_:keyPath:)(v8, v3, v2),
        swift_release(v3),
        v4 = (_BYTE *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState),
        swift_beginAccess(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, v8, 0, 0),
        v5 = 1.0,
        (*v4 & 1) == 0))
  {
    v5 = 0.0;
  }
  v6 = swift_getKeyPath(&unk_10072A278);
  __chkstk_darwin(v6);
  v7[2] = v0;
  *(double *)&v7[3] = v5;
  v9 = v0;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, v6, sub_1004EB1F8, v7, (char *)&type metadata for () + 8, v2);
  swift_release(v6);
}

double sub_1004EA65C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v24[16];
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;

  v2 = v1;
  v4 = type metadata accessor for BookReaderChromeState(0);
  __chkstk_darwin(v4);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002CD84(a1, (uint64_t)v6, type metadata accessor for BookReaderChromeState);
  KeyPath = swift_getKeyPath(&unk_10072A1B8);
  v25 = v2;
  v26 = v6;
  v27 = v2;
  v8 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v27, KeyPath, sub_1004EB170, v24, (char *)&type metadata for () + 8, v8);
  swift_release(KeyPath);
  sub_10002C8F0((uint64_t)v6, type metadata accessor for BookReaderChromeState);
  sub_1004EA4F8();
  v9 = *(_QWORD *)(v2 + 136);
  v10 = swift_getKeyPath(&unk_10072A1E0);
  v27 = v9;
  v11 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v27, v10, v11);
  swift_release(v10);
  v12 = PageTurnStyle.rawValue.getter(*(unsigned __int8 *)(v9 + 80));
  v14 = v13;
  v15 = 1;
  v17 = PageTurnStyle.rawValue.getter(1);
  v18 = v16;
  if (v12 != v17 || (v19 = v14, v14 != v16))
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v17, v16, 0);
    v19 = v18;
  }
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)(v2 + 128);
  v21 = swift_getKeyPath(&unk_10072A208);
  v22 = swift_getKeyPath(&unk_10072A230);
  static Published.subscript.getter(&v27, v20, v21);
  swift_release(v21);
  swift_release(v22);
  return sub_1004E9BAC(v15 & 1, v27);
}

uint64_t sub_1004EA87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_1001FE9A0(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 64));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 80));

  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));
  swift_release(*(_QWORD *)(v0 + 136));
  sub_1001FE9A0(v0 + 144);
  swift_weakDestroy(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 168));
  swift_release(*(_QWORD *)(v0 + 176));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 184));
  v1 = v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_preorderedPublisher;
  v2 = sub_10004CFD4(&qword_1009D4D90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_100010960(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, &qword_1009EFD70);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel));

  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAppEntity + 8);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAppEntity + 24);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAppEntity + 32);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAppEntity + 40);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAppEntity + 48);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAppEntity + 56);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAppEntity + 64);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAppEntity + 88);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAppEntity + 72));
  swift_release(v9);
  swift_release(v8);
  swift_release(v7);
  swift_release(v6);
  swift_release(v5);
  swift_release(v4);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAssetID + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookLanguage + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookTitle + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookAuthor + 8));

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor));
  v11 = v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
  v12 = type metadata accessor for ColorScheme(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__historyViewModel));
  sub_10002C8F0(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, type metadata accessor for BookReaderChromeState);
  v13 = v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__layoutDirection;
  v14 = type metadata accessor for LayoutDirection(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_isBookOpenSubject));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel_showThemeCustomizationTipSubject));
  sub_1003D2908(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__paginatingService);
  sub_1003D2908(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__pageNumberProvider);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel__cancellables));
  v15 = v0 + OBJC_IVAR____TtC5Books19BookReaderViewModel___observationRegistrar;
  v16 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
  return v0;
}

uint64_t sub_1004EAB74()
{
  uint64_t v0;

  sub_1004EA87C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004EAB98()
{
  return type metadata accessor for BookReaderViewModel(0);
}

uint64_t type metadata accessor for BookReaderViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E7D68;
  if (!qword_1009E7D68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookReaderViewModel);
  return result;
}

void sub_1004EABDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[59];

  v14[0] = &unk_10072A098;
  v14[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[2] = &unk_10072A0B0;
  v14[3] = &unk_10072A0C8;
  v14[4] = &unk_10072A0C8;
  v14[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v14[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v14[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[8] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[9] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[12] = &unk_10072A0E0;
  v14[13] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[10] = (char *)&value witness table for Builtin.NativeObject + 64;
  v14[11] = &unk_10072A098;
  v14[14] = &unk_10072A0F8;
  v14[15] = &unk_10072A110;
  v14[16] = &unk_10072A128;
  sub_1004EADD8();
  if (v3 <= 0x3F)
  {
    v14[17] = *(_QWORD *)(v2 - 8) + 64;
    sub_1004EAE2C(319);
    if (v5 <= 0x3F)
    {
      v14[18] = *(_QWORD *)(v4 - 8) + 64;
      v14[19] = (char *)&value witness table for Builtin.NativeObject + 64;
      v14[20] = &unk_10072A128;
      v14[21] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v14[22] = &unk_10072A140;
      v14[23] = &unk_10072A0C8;
      v14[24] = &unk_10072A0C8;
      v14[25] = &unk_10072A0C8;
      v14[26] = &unk_10072A0C8;
      v14[27] = &unk_10072A128;
      v14[28] = &unk_10072A128;
      v14[29] = &unk_10072A128;
      v14[30] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v14[31] = &unk_10072A128;
      v14[32] = (char *)&value witness table for Builtin.Int64 + 64;
      v14[33] = &unk_10072A158;
      v14[34] = (char *)&value witness table for Builtin.Int64 + 64;
      v14[35] = &unk_10072A158;
      v14[36] = (char *)&value witness table for Builtin.NativeObject + 64;
      v14[37] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6 = type metadata accessor for ColorScheme(319);
      if (v7 <= 0x3F)
      {
        v14[38] = *(_QWORD *)(v6 - 8) + 64;
        v14[39] = &unk_10072A128;
        v14[40] = &unk_10072A128;
        v14[41] = (char *)&value witness table for Builtin.NativeObject + 64;
        v14[42] = (char *)&value witness table for Builtin.Int64 + 64;
        v14[43] = (char *)&value witness table for Builtin.Int64 + 64;
        v14[44] = &unk_10072A128;
        v8 = type metadata accessor for BookReaderChromeState(319);
        if (v9 <= 0x3F)
        {
          v14[45] = *(_QWORD *)(v8 - 8) + 64;
          v14[46] = &unk_10072A128;
          v14[47] = &unk_10072A128;
          v14[48] = &unk_10072A128;
          v10 = type metadata accessor for LayoutDirection(319);
          if (v11 <= 0x3F)
          {
            v14[49] = *(_QWORD *)(v10 - 8) + 64;
            v14[50] = &unk_10072A128;
            v14[51] = &unk_10072A128;
            v14[52] = (char *)&value witness table for Builtin.NativeObject + 64;
            v14[53] = (char *)&value witness table for Builtin.NativeObject + 64;
            v14[54] = &unk_10072A098;
            v14[55] = &unk_10072A098;
            v14[56] = (char *)&value witness table for Builtin.BridgeObject + 64;
            v14[57] = (char *)&value witness table for Builtin.Int64 + 64;
            v12 = type metadata accessor for ObservationRegistrar(319);
            if (v13 <= 0x3F)
            {
              v14[58] = *(_QWORD *)(v12 - 8) + 64;
              swift_updateClassMetadata2(a1, 256, 59, v14, a1 + 80);
            }
          }
        }
      }
    }
  }
}

void sub_1004EADD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1009E7D78)
  {
    v0 = type metadata accessor for Published.Publisher(0, &type metadata for Bool);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1009E7D78);
  }
}

void sub_1004EAE2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009E7D80)
  {
    v2 = type metadata accessor for OverlayViewModel.Overlay(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009E7D80);
  }
}

uint64_t sub_1004EAE80()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  uint64_t v6;
  Swift::String v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  Swift::String v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  __int128 v26;

  v1 = v0;
  *(_QWORD *)&v24 = 0;
  *((_QWORD *)&v24 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(154);
  v26 = v24;
  v2._countAndFlagsBits = 0xD000000000000031;
  v2._object = (void *)0x80000001007CF510;
  String.append(_:)(v2);
  v3 = *(_QWORD *)(v0 + 56);
  v24 = *(_OWORD *)(v0 + 40);
  v25 = v3;
  v4 = sub_10004CFD4(&qword_1009E8688);
  _print_unlocked<A, B>(_:_:)(&v24, &v26, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v5._countAndFlagsBits = 0xD00000000000001FLL;
  v5._object = (void *)0x80000001007CF550;
  String.append(_:)(v5);
  v24 = *(_OWORD *)(v0 + 64);
  v6 = sub_10004CFD4(&qword_1009E8690);
  _print_unlocked<A, B>(_:_:)(&v24, &v26, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v7._countAndFlagsBits = 0xD000000000000016;
  v7._object = (void *)0x80000001007CF570;
  String.append(_:)(v7);
  v8 = (char *)*(id *)(v0 + 96);
  v9 = objc_msgSend(v8, "description");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v12 = v11;

  v13._countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);

  swift_bridgeObjectRelease(v12);
  v14._object = (void *)0x80000001007CF590;
  v14._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v14);
  v15 = *(id *)(v1 + 104);
  v16 = objc_msgSend(v15, "description");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);

  swift_bridgeObjectRelease(v19);
  v21._countAndFlagsBits = 0xD000000000000017;
  v21._object = (void *)0x80000001007CF5B0;
  String.append(_:)(v21);
  *(_QWORD *)&v24 = *(_QWORD *)&v8[OBJC_IVAR____TtC5Books18BookActionMediator_actionMenuState];
  v22 = type metadata accessor for REActionMenuState(0);
  _print_unlocked<A, B>(_:_:)(&v24, &v26, v22, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  return v26;
}

uint64_t sub_1004EB0BC()
{
  return sub_1004EAE80();
}

uint64_t sub_1004EB0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EFD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004EB124(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BookReaderChromeState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004EB170()
{
  uint64_t v0;

  return sub_1004E6D8C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, (void (*)(uint64_t, uint64_t))sub_1004EB124);
}

void sub_1004EB1A8(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A250, &OBJC_IVAR____TtC5Books19BookReaderViewModel__isScrollMode, a2);
}

double sub_1004EB1D0@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1004E6A90(a1, (uint64_t)&unk_10072A278, &OBJC_IVAR____TtC5Books19BookReaderViewModel__statusBarBackgroundOpacity, a2);
}

double sub_1004EB1F8()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__statusBarBackgroundOpacity) = result;
  return result;
}

void sub_1004EB210()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__isScrollMode) = *(_BYTE *)(v0 + 24);
}

void sub_1004EB230(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A2C8, &OBJC_IVAR____TtC5Books19BookReaderViewModel__isShowingRealTitle, a2);
}

void sub_1004EB258()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__isShowingRealTitle) = *(_BYTE *)(v0 + 24);
}

void sub_1004EB270(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A2F0, &OBJC_IVAR____TtC5Books19BookReaderViewModel__bookCharacterFlowMatchesAppCharacterFlow, a2);
}

void sub_1004EB298(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A318, &OBJC_IVAR____TtC5Books19BookReaderViewModel__fadeLeadingTitleEdge, a2);
}

void sub_1004EB2C0()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__fadeLeadingTitleEdge) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1004EB2E0()
{
  uint64_t v0;

  return sub_1004E7314(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC5Books19BookReaderViewModel__layoutDirection, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection);
}

void sub_1004EB308()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__bookCharacterFlowMatchesAppCharacterFlow) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1004EB328()
{
  uint64_t v0;

  return sub_10035EA7C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_1004EB34C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeRenderMode) = *(_QWORD *)(v0 + 24);
}

uint64_t sub_1004EB360()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[2];
  v1 = v0[3];
  *(_QWORD *)(v2 + 24) = v0[4];
  return swift_unknownObjectWeakAssign(v2 + 16, v1);
}

double *sub_1004EB38C()
{
  return sub_1004EB3A0();
}

double *sub_1004EB3A0()
{
  uint64_t v0;

  return sub_10035EA84(*(double **)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

double sub_1004EB3C0@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1004E6A90(a1, (uint64_t)&unk_10072A3E0, &OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarTopMargin, a2);
}

double sub_1004EB3E8()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarTopMargin) = result;
  return result;
}

double sub_1004EB400@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1004E6A90(a1, (uint64_t)&unk_10072A408, &OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarBottomMargin, a2);
}

double sub_1004EB428()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarBottomMargin) = result;
  return result;
}

double sub_1004EB440@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1004E6A90(a1, (uint64_t)&unk_10072A430, &OBJC_IVAR____TtC5Books19BookReaderViewModel__gutterWidth, a2);
}

double sub_1004EB468()
{
  uint64_t v0;
  double result;

  result = *(double *)(v0 + 24);
  *(double *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__gutterWidth) = result;
  return result;
}

double sub_1004EB480@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1004E6284(a1, (uint64_t)&unk_10072A458, &OBJC_IVAR____TtC5Books19BookReaderViewModel__edgeInsets, a2).n128_u64[0];
  return result;
}

double sub_1004EB4A8()
{
  double result;

  *(_QWORD *)&result = sub_1004EB960(&OBJC_IVAR____TtC5Books19BookReaderViewModel__edgeInsets).n128_u64[0];
  return result;
}

uint64_t sub_1004EB4CC()
{
  return sub_1004EB4E0();
}

uint64_t sub_1004EB4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor) = v1;
  swift_retain(v1);
  return swift_release(v3);
}

uint64_t sub_1004EB520()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

double sub_1004EB544(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;

  return sub_1004E8B8C(a1, a2, a3, a4, v4);
}

uint64_t sub_1004EB54C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004EB570(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(unsigned __int8 *)(a1 + 17));
}

double sub_1004EB5A8(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1004E8CF0(a1, a2, v2);
}

uint64_t sub_1004EB5B0(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, unsigned __int8 *);
  uint64_t v4;
  uint64_t v5;

  v3 = *(uint64_t (**)(uint64_t, unsigned __int8 *))(v1 + 16);
  v4 = *a1;
  v5 = sub_10004CFD4(&qword_1009E8708);
  return v3(v4, &a1[*(int *)(v5 + 48)]);
}

double sub_1004EB5F8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1004E8F88(a1, v1);
}

double sub_1004EB600(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1004E90DC(a1, v1);
}

void sub_1004EB608(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A4D0, &OBJC_IVAR____TtC5Books19BookReaderViewModel__closedAndNoOverlayVisible, a2);
}

void sub_1004EB630()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__closedAndNoOverlayVisible) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1004EB650()
{
  uint64_t v0;

  return sub_1004E6D8C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC5Books19BookReaderViewModel__overlay, (void (*)(uint64_t, uint64_t))sub_1004EB0DC);
}

uint64_t sub_1004EB678()
{
  uint64_t v0;

  return sub_1004E7C78(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1004EB690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PageTurnViewModel.State.Active(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1004EB6D4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1004E7528(a1, (uint64_t)&unk_10072A520, a2);
}

void sub_1004EB6F8(char *a1)
{
  sub_1004E7860(*a1);
}

uint64_t sub_1004EB71C()
{
  return sub_1004EB79C();
}

_QWORD *sub_1004EB738@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1004E7528(a1, (uint64_t)&unk_10072A548, a2);
}

void sub_1004EB75C(char *a1)
{
  sub_1004E75F0(*a1);
}

uint64_t sub_1004EB780()
{
  return sub_1004EB79C();
}

uint64_t sub_1004EB79C()
{
  uint64_t v0;
  char v2;

  v2 = *(_BYTE *)(v0 + 24);
  return CurrentValueSubject.value.setter(&v2);
}

void sub_1004EB7E8(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A598, &OBJC_IVAR____TtC5Books19BookReaderViewModel__isShowingExpandedContent, a2);
}

void sub_1004EB810()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__isShowingExpandedContent) = *(_BYTE *)(v0 + 24);
}

void sub_1004EB830(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A5E8, &OBJC_IVAR____TtC5Books19BookReaderViewModel__hasPhysicalPages, a2);
}

void sub_1004EB858()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__hasPhysicalPages) = *(_BYTE *)(v0 + 24);
}

void sub_1004EB870(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  sub_1004E5E48(a1, (uint64_t)&unk_10072A610, &OBJC_IVAR____TtC5Books19BookReaderViewModel__usePhysicalPages, a2);
}

void sub_1004EB898()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderViewModel__usePhysicalPages) = *(_BYTE *)(v0 + 24);
}

id sub_1004EB8B8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004E6584(a1, (uint64_t)&unk_10072A660, &OBJC_IVAR____TtC5Books19BookReaderViewModel__textColor, a2);
}

void sub_1004EB8E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__textColor);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__textColor) = v2;
  v4 = v2;

}

double sub_1004EB91C@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1004E6284(a1, (uint64_t)&unk_10072A688, &OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin, a2).n128_u64[0];
  return result;
}

double sub_1004EB944()
{
  double result;

  *(_QWORD *)&result = sub_1004EB960(&OBJC_IVAR____TtC5Books19BookReaderViewModel__menuOuterMargin).n128_u64[0];
  return result;
}

__n128 sub_1004EB960(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 16) + *a1;
  result = *(__n128 *)(v1 + 24);
  v4 = *(_OWORD *)(v1 + 40);
  *(__n128 *)v2 = result;
  *(_OWORD *)(v2 + 16) = v4;
  return result;
}

id sub_1004EB984@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1004E6584(a1, (uint64_t)&unk_10072A6D8, &OBJC_IVAR____TtC5Books19BookReaderViewModel__coverImage, a2);
}

void sub_1004EB9AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v3 = *(void **)(v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__coverImage);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books19BookReaderViewModel__coverImage) = v2;
  v4 = v2;

}

void sub_1004EB9F8()
{
  sub_1004EB9AC();
}

uint64_t sub_1004EBA10()
{
  return sub_1004EB328();
}

uint64_t sub_1004EBA24()
{
  return sub_1004EB2E0();
}

void sub_1004EBA38()
{
  sub_1004EB2C0();
}

void sub_1004EBA4C()
{
  sub_1004EB308();
}

void sub_1004EBA60()
{
  sub_1004EB258();
}

void sub_1004EBA74()
{
  sub_1004EB210();
}

void sub_1004EBA88()
{
  sub_1004EB630();
}

double sub_1004EBA9C()
{
  return sub_1004EB1F8();
}

void sub_1004EBAB0()
{
  sub_1004EB34C();
}

double sub_1004EBAC4()
{
  return sub_1004EB468();
}

double sub_1004EBAD8()
{
  return sub_1004EB428();
}

double sub_1004EBAEC()
{
  return sub_1004EB3E8();
}

id ServiceCenter.__allocating_init(appConfiguration:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithAppConfiguration:", a1);

  return v3;
}

char *ServiceCenter.init(appConfiguration:)(void *a1)
{
  uint64_t v1;
  char *v3;
  char *v4;
  uint64_t ObjectType;

  v3 = (char *)objc_allocWithZone((Class)swift_getObjectType());
  v4 = sub_1004EBD78(a1, v3);
  ObjectType = swift_getObjectType();
  swift_deallocPartialClassInstance(v1, ObjectType, 40, 7);
  return v4;
}

void ServiceCenter.readingActivityService.getter()
{
  sub_1004EBBEC((uint64_t (*)(_QWORD))type metadata accessor for ReadingActivityService, &qword_1009F0760);
}

void ServiceCenter.widgetService.getter()
{
  sub_1004EBBEC((uint64_t (*)(_QWORD))type metadata accessor for WidgetService, &qword_1009E8710);
}

void sub_1004EBBEC(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = a1(0);
  v4 = sub_10004CFD4(a2);
  v5 = String.init<A>(describing:)(&v9, v4);
  v7 = v6;
  v8 = sub_10002DFD8(v5, v6, a1);
  swift_bridgeObjectRelease(v7);
  if (!v8)
    __break(1u);
}

void ServiceCenter.yearInReviewEligibilityService.getter()
{
  sub_1004EBBEC((uint64_t (*)(_QWORD))type metadata accessor for YearInReviewEligibilityService, &qword_1009E8718);
}

uint64_t ServiceCenter.priceTrackingService.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v6 = type metadata accessor for PriceTrackingService();
  v0 = sub_10004CFD4(&qword_1009E8720);
  v1 = String.init<A>(describing:)(&v6, v0);
  v3 = v2;
  v4 = sub_10002DFD8(v1, v2, (uint64_t (*)(_QWORD))type metadata accessor for PriceTrackingService);
  swift_bridgeObjectRelease(v3);
  return v4;
}

char *sub_1004EBD78(void *a1, char *a2)
{
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  objc_super v10;
  char v11;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&a2[OBJC_IVAR___BKServiceCenter____lazy_storage___serviceQueue] = 0;
  *(_QWORD *)&a2[OBJC_IVAR___BKServiceCenter____lazy_storage___group] = 0;
  *(_QWORD *)&a2[OBJC_IVAR___BKServiceCenter_services] = _swiftEmptyDictionarySingleton;
  v5 = OBJC_IVAR___BKServiceCenter__setupState;
  v11 = 0;
  v6 = sub_10004CFD4(&qword_1009EC8D0);
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = a2;
  *(_QWORD *)&a2[v5] = MutableObservableContainer.init(value:)(&v11);

  v10.receiver = v7;
  v10.super_class = ObjectType;
  v8 = (char *)objc_msgSendSuper2(&v10, "init");
  sub_10002B704(v8);

  return v8;
}

uint64_t type metadata accessor for ServiceCenterAppConfiguration()
{
  return objc_opt_self(BKServiceCenterAppConfiguration);
}

uint64_t sub_1004EBE74(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009E8750);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004EBEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D7B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1004EBEFC(unint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;

  v3 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = _swiftEmptyArrayStorage;
    if (!v4)
      break;
    result = (_QWORD *)specialized ContiguousArray.reserveCapacity(_:)(v4);
    if (v4 < 0)
    {
      __break(1u);
      return result;
    }
    v6 = 0;
    v7 = v3 & 0xC000000000000001;
    v8 = &OBJC_IVAR___BKRootBarItem_identifier;
    v24 = v3 & 0xC000000000000001;
    while (v4 != v6)
    {
      if (v7)
        v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      else
        v9 = (char *)*(id *)(v3 + 8 * v6 + 32);
      v12 = v9;
      v13 = *a2;
      if (*(_QWORD *)(*a2 + 16))
      {
        v14 = (uint64_t *)&v9[*v8];
        v16 = *v14;
        v15 = v14[1];
        swift_bridgeObjectRetain(v15);
        v17 = sub_10004CE80(v16, v15);
        if ((v18 & 1) != 0)
        {
          v19 = v3;
          v20 = a2;
          v21 = v8;
          v22 = *(id *)(*(_QWORD *)(v13 + 56) + 8 * v17);
          swift_bridgeObjectRelease(v15);
          sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
          if ((static NSObject.== infix(_:_:)(v12, v22) & 1) != 0)
          {

            v12 = v22;
          }
          else
          {

          }
          v8 = v21;
          a2 = v20;
          v3 = v19;
          v7 = v24;
        }
        else
        {
          v9 = (char *)swift_bridgeObjectRelease(v15);
        }
      }
      ++v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v10 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
      v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v12);
      specialized ContiguousArray._endMutation()(v11);
      if (v4 == v6)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_21:
    if (v3 < 0)
      v23 = v3;
    else
      v23 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v3);
  }
  return result;
}

uint64_t sub_1004EC0EC(uint64_t a1, uint64_t a2)
{
  return sub_1004EC1D8(a1, a2, (uint64_t)&qword_1009D8D70, UIViewController_ptr);
}

uint64_t sub_1004EC100(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004EC1C4(uint64_t a1, uint64_t a2)
{
  return sub_1004EC1D8(a1, a2, (uint64_t)&qword_1009D41B0, UIView_ptr);
}

uint64_t sub_1004EC1D8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unint64_t v17;
  char v18;
  uint64_t v19;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v8 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v8; v8 = _CocoaArrayWrapper.endIndex.getter(v19))
  {
    v9 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v10 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v11 = v10;
      a4 = (_QWORD *)sub_100009E04(0, (unint64_t *)a3, a4);
      a3 = static NSObject.== infix(_:_:)(v11, a1);

      if ((a3 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v8 == 1)
        goto LABEL_18;
      if (v9)
        break;
      v9 = 5;
      while (1)
      {
        v17 = v9 - 3;
        if (__OFADD__(v9 - 4, 1))
          break;
        a3 = (uint64_t)*(id *)(a2 + 8 * v9);
        v18 = static NSObject.== infix(_:_:)(a3, a1);

        if ((v18 & 1) != 0)
          goto LABEL_6;
        ++v9;
        if (v17 == v8)
          goto LABEL_18;
      }
      __break(1u);
    }
    a3 = 1;
    while (1)
    {
      v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(a3, a2);
      v14 = a3 + 1;
      if (__OFADD__(a3, 1))
        break;
      v15 = v13;
      v16 = static NSObject.== infix(_:_:)(v13, a1);
      swift_unknownObjectRelease(v15);
      if ((v16 & 1) != 0)
        goto LABEL_6;
      ++a3;
      if (v14 == v8)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v19 = a2;
    else
      v19 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_1004EC35C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t i;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t *v18;
  char *v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t *v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v39;
  unint64_t v40;
  char v41;
  _BYTE v42[24];
  char v43;
  _BYTE v44[24];
  _QWORD v45[2];

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v4 = a2 + 32;
  v40 = a1 & 0xC000000000000000;
  v39 = a1 & 0x3FFFFFFFFFFFFFFFLL;
  swift_bridgeObjectRetain(a2);
  for (i = 0; i != v2; ++i)
  {
    v6 = *(_QWORD *)(v4 + 8 * i);
    if (!(v6 >> 62))
    {
      if (a1 >> 62)
        continue;
      KeyPath = swift_getKeyPath(&unk_10072A8B0);
      v21 = swift_getKeyPath(&unk_10072A8D8);
      sub_10028C678(v6);
      sub_10028C678(a1);
      static Published.subscript.getter(v45, v6, KeyPath, v21);
      swift_release(KeyPath);
      swift_release(v21);
      v10 = (_QWORD *)v45[0];
      v22 = swift_getKeyPath(&unk_10072A8B0);
      v23 = swift_getKeyPath(&unk_10072A8D8);
      static Published.subscript.getter(v45, a1, v22, v23);
      swift_release(v22);
      swift_release(v23);
      v13 = v45[0];
      v24 = v10[2];
      if (v24 != *(_QWORD *)(v45[0] + 16))
      {
LABEL_36:
        swift_bridgeObjectRelease(v10);
        swift_bridgeObjectRelease(v13);
LABEL_37:
        sub_10028C694(a1);
        sub_10028C694(v6);
        continue;
      }
      if (v24)
      {
        v25 = v10;
        if (v10 == (_QWORD *)v45[0])
        {
LABEL_22:
          swift_bridgeObjectRelease(v10);
          swift_bridgeObjectRelease(v25);
          sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
          if ((static NSObject.== infix(_:_:)(*(_QWORD *)(v6 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_currentContentSnapshotView), *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_currentContentSnapshotView)) & 1) == 0)goto LABEL_37;
          v26 = (unint64_t *)(v6 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
          swift_beginAccess(v6 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders, v42, 0, 0);
          v17 = *v26;
          v18 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
          v19 = &v41;
          goto LABEL_24;
        }
        if (v10[4] != *(_QWORD *)(v45[0] + 32))
          goto LABEL_36;
        if (v24 != 1)
        {
          if (v10[5] != *(_QWORD *)(v45[0] + 40))
            goto LABEL_36;
          v33 = 2 - v24;
          v34 = 6;
          while (v33 + v34 != 6)
          {
            v35 = v10[v34];
            v36 = *(_QWORD *)(v45[0] + 8 * v34++);
            if (v35 != v36)
              goto LABEL_36;
          }
        }
      }
      v25 = (_QWORD *)v45[0];
      goto LABEL_22;
    }
    if (v6 >> 62 != 1)
      __asm { BR              X9 }
    if (v40 != 0x4000000000000000)
      continue;
    v7 = v6 & 0x3FFFFFFFFFFFFFFFLL;
    v8 = swift_getKeyPath(&unk_10072A8B0);
    v9 = swift_getKeyPath(&unk_10072A8D8);
    sub_10028C678(v6);
    sub_10028C678(a1);
    static Published.subscript.getter(v45, v6 & 0x3FFFFFFFFFFFFFFFLL, v8, v9);
    swift_release(v8);
    swift_release(v9);
    v10 = (_QWORD *)v45[0];
    v11 = swift_getKeyPath(&unk_10072A8B0);
    v12 = swift_getKeyPath(&unk_10072A8D8);
    static Published.subscript.getter(v45, v39, v11, v12);
    swift_release(v11);
    swift_release(v12);
    v13 = v45[0];
    v14 = v10[2];
    if (v14 != *(_QWORD *)(v45[0] + 16))
      goto LABEL_36;
    if (!v14)
      goto LABEL_12;
    v15 = v10;
    if (v10 != (_QWORD *)v45[0])
    {
      if (v10[4] != *(_QWORD *)(v45[0] + 32))
        goto LABEL_36;
      if (v14 != 1)
      {
        if (v10[5] != *(_QWORD *)(v45[0] + 40))
          goto LABEL_36;
        v29 = 2 - v14;
        v30 = 6;
        while (v29 + v30 != 6)
        {
          v31 = v10[v30];
          v32 = *(_QWORD *)(v45[0] + 8 * v30++);
          if (v31 != v32)
            goto LABEL_36;
        }
      }
LABEL_12:
      v15 = (_QWORD *)v45[0];
    }
    swift_bridgeObjectRelease(v10);
    swift_bridgeObjectRelease(v15);
    sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
    if ((static NSObject.== infix(_:_:)(*(_QWORD *)(v7 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_currentContentSnapshotView), *(_QWORD *)(v39 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_currentContentSnapshotView)) & 1) == 0)goto LABEL_37;
    v16 = (unint64_t *)(v7 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
    swift_beginAccess(v7 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders, v44, 0, 0);
    v17 = *v16;
    v18 = (uint64_t *)(v39 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
    v19 = &v43;
LABEL_24:
    swift_beginAccess(v18, v19, 0, 0);
    v27 = *v18;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v27);
    v28 = sub_100669A6C(v17, v27);
    swift_bridgeObjectRelease(v17);
    swift_bridgeObjectRelease(v27);
    sub_10028C694(a1);
    sub_10028C694(v6);
    if ((v28 & 1) != 0)
    {
      swift_bridgeObjectRelease(a2);
      return 1;
    }
  }
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_1004EC858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;

  if ((unint64_t)a2 >> 62)
    goto LABEL_20;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v18))
  {
    v5 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v6 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
LABEL_5:
      v7 = v6;
      type metadata accessor for SinglePageViewController();
      v8 = static NSObject.== infix(_:_:)(v7, a1);

      if ((v8 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease(a2);
        return 1;
      }
      if (v4 == 1)
        goto LABEL_18;
      if (v5)
        break;
      v5 = 5;
      while (1)
      {
        v15 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v16 = *(id *)(a2 + 8 * v5);
        v17 = static NSObject.== infix(_:_:)(v16, a1);

        if ((v17 & 1) != 0)
          goto LABEL_6;
        ++v5;
        if (v15 == v4)
          goto LABEL_18;
      }
      __break(1u);
    }
    v10 = 1;
    while (1)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, a2);
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        break;
      v13 = v11;
      v14 = static NSObject.== infix(_:_:)(v11, a1);
      swift_unknownObjectRelease(v13);
      if ((v14 & 1) != 0)
        goto LABEL_6;
      ++v10;
      if (v12 == v4)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    if (a2 < 0)
      v18 = a2;
    else
      v18 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
  }
LABEL_18:
  swift_bridgeObjectRelease(a2);
  return 0;
}

uint64_t sub_1004EC9CC(uint64_t a1, uint64_t a2)
{
  return sub_1004EC1D8(a1, a2, (uint64_t)&unk_1009D9EC0, UIGestureRecognizer_ptr);
}

uint64_t sub_1004EC9E0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D0A60);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_37;
      v15 = *(_QWORD *)(v29 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_37;
        v15 = *(_QWORD *)(v29 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_37;
          v15 = *(_QWORD *)(v29 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v41);
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v19;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v20;
    *((_QWORD *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_10004CFC4(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_10004CFC4(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_10004CFC4(v37, v38);
    sub_10004CFC4(v38, &v34);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v30;
    *(_OWORD *)(v11 + 16) = v31;
    *(_QWORD *)(v11 + 32) = v32;
    result = (uint64_t)sub_10004CFC4(&v34, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_100299C3C(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v29 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

Swift::Int sub_1004ECDA4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  Swift::Int result;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD v33[2];
  _BYTE v34[56];
  _QWORD v35[5];
  _QWORD v36[2];
  _BYTE v37[56];
  _OWORD v38[2];
  uint64_t v39;
  __int128 v40;
  _OWORD v41[2];
  uint64_t v42;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4((uint64_t *)&unk_1009D7A40);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v31 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 8;
  swift_bridgeObjectRetain(a1);
  result = swift_retain(v3);
  v32 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v32 << 6);
      goto LABEL_28;
    }
    v13 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v13 >= v30)
      goto LABEL_40;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    v15 = v32 + 1;
    if (!v14)
    {
      v15 = v32 + 2;
      if (v32 + 2 >= v30)
        goto LABEL_40;
      v14 = *(_QWORD *)(v31 + 8 * v15);
      if (!v14)
      {
        v15 = v32 + 3;
        if (v32 + 3 >= v30)
          goto LABEL_40;
        v14 = *(_QWORD *)(v31 + 8 * v15);
        if (!v14)
        {
          v15 = v32 + 4;
          if (v32 + 4 >= v30)
            goto LABEL_40;
          v14 = *(_QWORD *)(v31 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v32 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_10000B5E4(*(_QWORD *)(a1 + 56) + 40 * v12, (uint64_t)v41, &qword_1009E8A20);
    *(_QWORD *)&v40 = v19;
    *((_QWORD *)&v40 + 1) = v18;
    *(_OWORD *)&v37[40] = v40;
    v38[0] = v41[0];
    v38[1] = v41[1];
    v39 = v42;
    v35[0] = v19;
    v35[1] = v18;
    swift_bridgeObjectRetain(v18);
    v20 = sub_10004CFD4(&qword_1009D2A80);
    swift_dynamicCast(v36, v35, &type metadata for String, v20, 7);
    sub_100025B3C((uint64_t)v38, (uint64_t)v37, &qword_1009E8A20);
    v22 = v36[0];
    v21 = v36[1];
    sub_100025B3C((uint64_t)v37, (uint64_t)v34, &qword_1009E8A20);
    sub_100025B3C((uint64_t)v34, (uint64_t)v36, &qword_1009E8A20);
    sub_100025B3C((uint64_t)v36, (uint64_t)v35, &qword_1009E8A20);
    Hasher.init(_seed:)(v33, v3[5]);
    if (v21)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v21);
      String.hash(into:)(v33, v22, v21);
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    result = Hasher._finalize()();
    v23 = -1 << *((_BYTE *)v3 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~v7[v24 >> 6]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v24) & ~v7[v24 >> 6])) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = v7[v25];
      }
      while (v29 == -1);
      v9 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)((char *)v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = (_QWORD *)(v3[6] + 16 * v9);
    *v10 = v22;
    v10[1] = v21;
    result = sub_100025B3C((uint64_t)v35, v3[7] + 40 * v9, &qword_1009E8A20);
    ++v3[2];
  }
  v16 = v32 + 5;
  if (v32 + 5 >= v30)
  {
LABEL_40:
    swift_release(v3);
    sub_100299C3C(a1);
    return (Swift::Int)v3;
  }
  v14 = *(_QWORD *)(v31 + 8 * v16);
  if (v14)
  {
    v15 = v32 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v30)
      goto LABEL_40;
    v14 = *(_QWORD *)(v31 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_42:
  __break(1u);
  return result;
}

void sub_1004ED1BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D0A60);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 8;
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_37;
      v14 = *(_QWORD *)(v29 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_37;
        v14 = *(_QWORD *)(v29 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_37;
          v14 = *(_QWORD *)(v29 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    v19 = *(_BYTE *)(*(_QWORD *)(a1 + 56) + v12);
    *(_QWORD *)&v39[0] = *v17;
    *((_QWORD *)&v39[0] + 1) = v18;
    swift_bridgeObjectRetain(v18);
    swift_dynamicCast(&v31, v39, &type metadata for String, &type metadata for AnyHashable, 7);
    v30 = v19;
    swift_dynamicCast(v34, &v30, &type metadata for Bool, (char *)&type metadata for Any + 8, 7);
    v35 = v31;
    v36 = v32;
    v37 = v33;
    sub_10004CFC4(v34, v38);
    v31 = v35;
    v32 = v36;
    v33 = v37;
    sub_10004CFC4(v38, v39);
    sub_10004CFC4(v39, &v35);
    v20 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~v7[v22 >> 6]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v22) & ~v7[v22 >> 6])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = v7[v23];
      }
      while (v27 == -1);
      v9 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)((char *)v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v31;
    *(_OWORD *)(v10 + 16) = v32;
    *(_QWORD *)(v10 + 32) = v33;
    sub_10004CFC4(&v35, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_100299C3C(a1);
    return;
  }
  v14 = *(_QWORD *)(v29 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_1004ED564(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _OWORD v41[2];
  _OWORD v42[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D0A60);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v32 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 8;
  swift_bridgeObjectRetain(a1);
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v31)
      goto LABEL_37;
    v15 = *(_QWORD *)(v32 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v31)
        goto LABEL_37;
      v15 = *(_QWORD *)(v32 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v31)
          goto LABEL_37;
        v15 = *(_QWORD *)(v32 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v31)
            goto LABEL_37;
          v15 = *(_QWORD *)(v32 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = 16 * v13;
    v19 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = v19[1];
    v21 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v18);
    v23 = *v21;
    v22 = v21[1];
    *(_QWORD *)&v42[0] = *v19;
    *((_QWORD *)&v42[0] + 1) = v20;
    swift_bridgeObjectRetain(v20);
    swift_bridgeObjectRetain(v22);
    swift_dynamicCast(&v34, v42, &type metadata for String, &type metadata for AnyHashable, 7);
    v33[0] = v23;
    v33[1] = v22;
    swift_dynamicCast(v37, v33, &type metadata for String, (char *)&type metadata for Any + 8, 7);
    v38 = v34;
    v39 = v35;
    v40 = v36;
    sub_10004CFC4(v37, v41);
    v34 = v38;
    v35 = v39;
    v36 = v40;
    sub_10004CFC4(v41, v42);
    sub_10004CFC4(v42, &v38);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v24 = -1 << *((_BYTE *)v3 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~v7[v25 >> 6]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v25) & ~v7[v25 >> 6])) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = v7[v26];
      }
      while (v30 == -1);
      v10 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)((char *)v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v34;
    *(_OWORD *)(v11 + 16) = v35;
    *(_QWORD *)(v11 + 32) = v36;
    result = (uint64_t)sub_10004CFC4(&v38, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v31)
  {
LABEL_37:
    swift_release(v3);
    sub_100299C3C(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v32 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v31)
      goto LABEL_37;
    v15 = *(_QWORD *)(v32 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1004ED920(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  Swift::Int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  _OWORD v37[4];
  _OWORD v38[2];
  _OWORD v39[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D05E0);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v34 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v33 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 8;
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v35 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v35 << 6);
      goto LABEL_28;
    }
    v11 = v35 + 1;
    if (__OFADD__(v35, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v33)
      goto LABEL_37;
    v12 = *(_QWORD *)(v34 + 8 * v11);
    v13 = v35 + 1;
    if (!v12)
    {
      v13 = v35 + 2;
      if (v35 + 2 >= v33)
        goto LABEL_37;
      v12 = *(_QWORD *)(v34 + 8 * v13);
      if (!v12)
      {
        v13 = v35 + 3;
        if (v35 + 3 >= v33)
          goto LABEL_37;
        v12 = *(_QWORD *)(v34 + 8 * v13);
        if (!v12)
        {
          v13 = v35 + 4;
          if (v35 + 4 >= v33)
            goto LABEL_37;
          v12 = *(_QWORD *)(v34 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v35 = v13;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v39[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = *(void **)&v39[0];
    *(_QWORD *)&v38[0] = v16;
    v17 = sub_100009E04(0, &qword_1009EB8E0, UIFont_ptr);
    v18 = v15;
    v19 = v16;
    swift_dynamicCast((char *)v39 + 8, v38, v17, (char *)&type metadata for Any + 8, 7);
    v20 = *(_QWORD *)&v39[0];
    sub_10004CFC4((_OWORD *)((char *)v39 + 8), v37);
    sub_10004CFC4(v37, v39);
    sub_10004CFC4(v39, v38);
    v21 = v3[5];
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
    v24 = v23;
    Hasher.init(_seed:)(&v36, v21);
    String.hash(into:)(&v36, v22, v24);
    v25 = Hasher._finalize()();
    swift_bridgeObjectRelease(v24);
    v26 = -1 << *((_BYTE *)v3 + 32);
    v27 = v25 & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~v7[v27 >> 6]) != 0)
    {
      v8 = __clz(__rbit64((-1 << v27) & ~v7[v27 >> 6])) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = v7[v28];
      }
      while (v32 == -1);
      v8 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)((char *)v7 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(v3[6] + 8 * v8) = v20;
    sub_10004CFC4(v38, (_OWORD *)(v3[7] + 32 * v8));
    ++v3[2];
  }
  v14 = v35 + 5;
  if (v35 + 5 >= v33)
  {
LABEL_37:
    swift_release(v3);
    sub_100299C3C(a1);
    return;
  }
  v12 = *(_QWORD *)(v34 + 8 * v14);
  if (v12)
  {
    v13 = v35 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v33)
      goto LABEL_37;
    v12 = *(_QWORD *)(v34 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_1004EDCD0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];
  _OWORD v39[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D0A60);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 8;
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v28)
        goto LABEL_37;
      v14 = *(_QWORD *)(v29 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v28)
          goto LABEL_37;
        v14 = *(_QWORD *)(v29 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v28)
            goto LABEL_37;
          v14 = *(_QWORD *)(v29 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    v19 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    *(_QWORD *)&v39[0] = *v17;
    *((_QWORD *)&v39[0] + 1) = v18;
    swift_bridgeObjectRetain(v18);
    swift_dynamicCast(&v31, v39, &type metadata for String, &type metadata for AnyHashable, 7);
    v30 = v19;
    swift_dynamicCast(v34, &v30, &type metadata for Int, (char *)&type metadata for Any + 8, 7);
    v35 = v31;
    v36 = v32;
    v37 = v33;
    sub_10004CFC4(v34, v38);
    v31 = v35;
    v32 = v36;
    v33 = v37;
    sub_10004CFC4(v38, v39);
    sub_10004CFC4(v39, &v35);
    v20 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~v7[v22 >> 6]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v22) & ~v7[v22 >> 6])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = v7[v23];
      }
      while (v27 == -1);
      v9 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)((char *)v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v31;
    *(_OWORD *)(v10 + 16) = v32;
    *(_QWORD *)(v10 + 32) = v33;
    sub_10004CFC4(&v35, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_100299C3C(a1);
    return;
  }
  v14 = *(_QWORD *)(v29 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v28)
      goto LABEL_37;
    v14 = *(_QWORD *)(v29 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_1004EE074(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t i;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D0678);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain(a1);
  i = 0;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v12 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v12 >= v28)
    goto LABEL_32;
  v13 = *(_QWORD *)(v29 + 8 * v12);
  v14 = i + 1;
  if (!v13)
  {
    v14 = i + 2;
    if (i + 2 >= v28)
      goto LABEL_32;
    v13 = *(_QWORD *)(v29 + 8 * v14);
    if (!v13)
    {
      v14 = i + 3;
      if (i + 3 >= v28)
        goto LABEL_32;
      v13 = *(_QWORD *)(v29 + 8 * v14);
      if (!v13)
      {
        v14 = i + 4;
        if (i + 4 >= v28)
          goto LABEL_32;
        v13 = *(_QWORD *)(v29 + 8 * v14);
        if (!v13)
        {
          v15 = i + 5;
          if (i + 5 < v28)
          {
            v13 = *(_QWORD *)(v29 + 8 * v15);
            if (v13)
            {
              v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v14 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_36;
              if (v14 >= v28)
                break;
              v13 = *(_QWORD *)(v29 + 8 * v14);
              ++v15;
              if (v13)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_100299C3C(a1);
          return;
        }
      }
    }
  }
LABEL_26:
  v6 = (v13 - 1) & v13;
  v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; v11 = v10 | (i << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v11);
    swift_bridgeObjectRetain(v17);
    v20 = v19;
    v21 = sub_10004CE80(v18, v17);
    v22 = v21;
    if ((v23 & 1) != 0)
    {
      v8 = (uint64_t *)(v3[6] + 16 * v21);
      swift_bridgeObjectRelease(v8[1]);
      *v8 = v18;
      v8[1] = v17;
      v9 = v3[7];
      swift_unknownObjectRelease(*(_QWORD *)(v9 + 8 * v22));
      *(_QWORD *)(v9 + 8 * v22) = v20;
      if (!v6)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v21;
    v24 = (uint64_t *)(v3[6] + 16 * v21);
    *v24 = v18;
    v24[1] = v17;
    *(_QWORD *)(v3[7] + 8 * v21) = v20;
    v25 = v3[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_34;
    v3[2] = v27;
    if (!v6)
      goto LABEL_11;
LABEL_10:
    v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_1004EE314(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  int64_t i;
  char *v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t *v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _OWORD v50[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D0A40);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v41 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v40 = (unint64_t)(63 - v4) >> 6;
  v7 = &v47;
  v8 = &v49;
  swift_bridgeObjectRetain(v1);
  i = 0;
  v10 = (char *)&type metadata for Any + 8;
  v11 = &type metadata for String;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v40)
    goto LABEL_32;
  v21 = *(_QWORD *)(v41 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v40)
      goto LABEL_32;
    v21 = *(_QWORD *)(v41 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v40)
        goto LABEL_32;
      v21 = *(_QWORD *)(v41 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v40)
          goto LABEL_32;
        v21 = *(_QWORD *)(v41 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v40)
          {
            v21 = *(_QWORD *)(v41 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v40)
                break;
              v21 = *(_QWORD *)(v41 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_100299C3C(v1);
          return;
        }
      }
    }
  }
LABEL_26:
  v43 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v6)) | (i << 6))
  {
    v24 = 16 * v19;
    v25 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v27 = *v25;
    v26 = v25[1];
    v28 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v24);
    v29 = *v28;
    v30 = v28[1];
    v45 = v27;
    v46 = v26;
    v44[0] = v29;
    v44[1] = v30;
    swift_bridgeObjectRetain(v26);
    swift_bridgeObjectRetain(v30);
    swift_dynamicCast(v7, v44, v11, v10, 7);
    v31 = v45;
    v32 = v46;
    sub_10004CFC4(v7, v8);
    sub_10004CFC4(v8, v50);
    sub_10004CFC4(v50, &v48);
    v33 = sub_10004CE80(v31, v32);
    v34 = v33;
    if ((v35 & 1) != 0)
    {
      v42 = i;
      v12 = v8;
      v13 = v7;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v3[6] + 16 * v33);
      swift_bridgeObjectRelease(v17[1]);
      *v17 = v31;
      v17[1] = v32;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v7 = v13;
      v8 = v12;
      i = v42;
      v18 = (_QWORD *)(v3[7] + 32 * v34);
      _s5Books15CurrentPageViewVwxx_0(v18);
      sub_10004CFC4(&v48, v18);
      v6 = v43;
      if (!v43)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v33;
    v36 = (uint64_t *)(v3[6] + 16 * v33);
    *v36 = v31;
    v36[1] = v32;
    sub_10004CFC4(&v48, (_OWORD *)(v3[7] + 32 * v33));
    v37 = v3[2];
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
      goto LABEL_34;
    v3[2] = v39;
    v6 = v43;
    if (!v43)
      goto LABEL_11;
LABEL_10:
    v43 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_1004EE67C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t i;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D7A80);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  swift_bridgeObjectRetain(a1);
  i = 0;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v12 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v12 >= v28)
    goto LABEL_32;
  v13 = *(_QWORD *)(v29 + 8 * v12);
  v14 = i + 1;
  if (!v13)
  {
    v14 = i + 2;
    if (i + 2 >= v28)
      goto LABEL_32;
    v13 = *(_QWORD *)(v29 + 8 * v14);
    if (!v13)
    {
      v14 = i + 3;
      if (i + 3 >= v28)
        goto LABEL_32;
      v13 = *(_QWORD *)(v29 + 8 * v14);
      if (!v13)
      {
        v14 = i + 4;
        if (i + 4 >= v28)
          goto LABEL_32;
        v13 = *(_QWORD *)(v29 + 8 * v14);
        if (!v13)
        {
          v15 = i + 5;
          if (i + 5 < v28)
          {
            v13 = *(_QWORD *)(v29 + 8 * v15);
            if (v13)
            {
              v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v14 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_36;
              if (v14 >= v28)
                break;
              v13 = *(_QWORD *)(v29 + 8 * v14);
              ++v15;
              if (v13)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_100299C3C(a1);
          return;
        }
      }
    }
  }
LABEL_26:
  v6 = (v13 - 1) & v13;
  v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; v11 = v10 | (i << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v11);
    swift_bridgeObjectRetain(v17);
    v20 = v19;
    v21 = sub_10004CE80(v18, v17);
    v22 = v21;
    if ((v23 & 1) != 0)
    {
      v8 = (uint64_t *)(v3[6] + 16 * v21);
      swift_bridgeObjectRelease(v8[1]);
      *v8 = v18;
      v8[1] = v17;
      v9 = v3[7];

      *(_QWORD *)(v9 + 8 * v22) = v20;
      if (!v6)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v21;
    v24 = (uint64_t *)(v3[6] + 16 * v21);
    *v24 = v18;
    v24[1] = v17;
    *(_QWORD *)(v3[7] + 8 * v21) = v20;
    v25 = v3[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (v26)
      goto LABEL_34;
    v3[2] = v27;
    if (!v6)
      goto LABEL_11;
LABEL_10:
    v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_1004EE91C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t *v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  _OWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[16];
  uint64_t v44;
  _BYTE v45[32];
  __int128 v46;
  _OWORD v47[2];
  __int128 v48;
  _OWORD v49[2];

  v1 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4((uint64_t *)&unk_1009DDD90);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v36 = v1 + 64;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 64);
  v35 = (unint64_t)(63 - v4) >> 6;
  v7 = v49;
  v8 = v47;
  v9 = &v42;
  v10 = &v44;
  swift_bridgeObjectRetain(v1);
  v37 = 0;
  if (v6)
    goto LABEL_10;
LABEL_11:
  v18 = v37 + 1;
  if (__OFADD__(v37, 1))
    goto LABEL_35;
  if (v18 >= v35)
    goto LABEL_32;
  v19 = *(_QWORD *)(v36 + 8 * v18);
  v20 = v37 + 1;
  if (!v19)
  {
    v20 = v37 + 2;
    if (v37 + 2 >= v35)
      goto LABEL_32;
    v19 = *(_QWORD *)(v36 + 8 * v20);
    if (!v19)
    {
      v20 = v37 + 3;
      if (v37 + 3 >= v35)
        goto LABEL_32;
      v19 = *(_QWORD *)(v36 + 8 * v20);
      if (!v19)
      {
        v20 = v37 + 4;
        if (v37 + 4 >= v35)
          goto LABEL_32;
        v19 = *(_QWORD *)(v36 + 8 * v20);
        if (!v19)
        {
          v21 = v37 + 5;
          if (v37 + 5 < v35)
          {
            v19 = *(_QWORD *)(v36 + 8 * v21);
            if (v19)
            {
              v20 = v37 + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v20 = v21 + 1;
              if (__OFADD__(v21, 1))
                goto LABEL_36;
              if (v20 >= v35)
                break;
              v19 = *(_QWORD *)(v36 + 8 * v20);
              ++v21;
              if (v19)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_100299C3C(v1);
          return;
        }
      }
    }
  }
LABEL_26:
  v37 = v20;
  v38 = (v19 - 1) & v19;
  for (i = __clz(__rbit64(v19)) + (v20 << 6); ; i = __clz(__rbit64(v6)) | (v37 << 6))
  {
    v22 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * i);
    v24 = *v22;
    v23 = v22[1];
    sub_10004CD0C(*(_QWORD *)(v1 + 56) + 32 * i, (uint64_t)v7);
    *(_QWORD *)&v48 = v24;
    *((_QWORD *)&v48 + 1) = v23;
    v46 = v48;
    v47[0] = v49[0];
    v47[1] = v49[1];
    v40 = v24;
    v41 = v23;
    sub_10004CFC4(v8, v39);
    swift_bridgeObjectRetain(v23);
    v25 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
    swift_dynamicCast(v9, v39, (char *)&type metadata for Any + 8, v25, 7);
    v26 = v40;
    v27 = v41;
    sub_100025B3C((uint64_t)v9, (uint64_t)v10, (uint64_t *)&unk_1009D04E0);
    sub_100025B3C((uint64_t)v10, (uint64_t)v45, (uint64_t *)&unk_1009D04E0);
    sub_100025B3C((uint64_t)v45, (uint64_t)v43, (uint64_t *)&unk_1009D04E0);
    v28 = sub_10004CE80(v26, v27);
    v29 = v28;
    if ((v30 & 1) != 0)
    {
      v11 = v10;
      v12 = v9;
      v13 = v8;
      v14 = v1;
      v15 = v7;
      v16 = (uint64_t *)(v3[6] + 16 * v28);
      swift_bridgeObjectRelease(v16[1]);
      *v16 = v26;
      v16[1] = v27;
      v7 = v15;
      v1 = v14;
      v8 = v13;
      v9 = v12;
      v10 = v11;
      sub_1002C6CD8((uint64_t)v43, v3[7] + 32 * v29);
      v6 = v38;
      if (!v38)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v3[2] >= v3[3])
      break;
    *(_QWORD *)((char *)v3 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v28;
    v31 = (uint64_t *)(v3[6] + 16 * v28);
    *v31 = v26;
    v31[1] = v27;
    sub_100025B3C((uint64_t)v43, v3[7] + 32 * v28, (uint64_t *)&unk_1009D04E0);
    v32 = v3[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_34;
    v3[2] = v34;
    v6 = v38;
    if (!v38)
      goto LABEL_11;
LABEL_10:
    v38 = (v6 - 1) & v6;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

void sub_1004EECC8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  id v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D0A60);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v31 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 8;
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v30)
      goto LABEL_37;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v30)
        goto LABEL_37;
      v14 = *(_QWORD *)(v31 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v30)
          goto LABEL_37;
        v14 = *(_QWORD *)(v31 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v30)
            goto LABEL_37;
          v14 = *(_QWORD *)(v31 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v18 = v17[1];
    v19 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v12);
    *(_QWORD *)&v41[0] = *v17;
    *((_QWORD *)&v41[0] + 1) = v18;
    swift_bridgeObjectRetain(v18);
    v20 = v19;
    swift_dynamicCast(&v33, v41, &type metadata for String, &type metadata for AnyHashable, 7);
    v32 = v20;
    v21 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
    swift_dynamicCast(v36, &v32, v21, (char *)&type metadata for Any + 8, 7);
    v37 = v33;
    v38 = v34;
    v39 = v35;
    sub_10004CFC4(v36, v40);
    v33 = v37;
    v34 = v38;
    v35 = v39;
    sub_10004CFC4(v40, v41);
    sub_10004CFC4(v41, &v37);
    v22 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v23 = -1 << *((_BYTE *)v3 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~v7[v24 >> 6]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v24) & ~v7[v24 >> 6])) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = v7[v25];
      }
      while (v29 == -1);
      v9 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)((char *)v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v33;
    *(_OWORD *)(v10 + 16) = v34;
    *(_QWORD *)(v10 + 32) = v35;
    sub_10004CFC4(&v37, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v30)
  {
LABEL_37:
    swift_release(v3);
    sub_100299C3C(a1);
    return;
  }
  v14 = *(_QWORD *)(v31 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v30)
      goto LABEL_37;
    v14 = *(_QWORD *)(v31 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_1004EF088(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _OWORD v35[2];
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[2];
  _OWORD v40[3];
  _OWORD v41[2];
  __int128 v42;
  _OWORD v43[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_10004CFD4(&qword_1009D0A60);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = _swiftEmptyDictionarySingleton;
  }
  v30 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v29 = (unint64_t)(63 - v4) >> 6;
  v7 = v3 + 8;
  swift_bridgeObjectRetain(a1);
  swift_retain(v3);
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v29)
      goto LABEL_37;
    v14 = *(_QWORD *)(v30 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v29)
        goto LABEL_37;
      v14 = *(_QWORD *)(v30 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v29)
          goto LABEL_37;
        v14 = *(_QWORD *)(v30 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v29)
            goto LABEL_37;
          v14 = *(_QWORD *)(v30 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_10004CD0C(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v43);
    *(_QWORD *)&v42 = v19;
    *((_QWORD *)&v42 + 1) = v18;
    v40[2] = v42;
    v41[0] = v43[0];
    v41[1] = v43[1];
    v31[0] = v19;
    v31[1] = v18;
    swift_bridgeObjectRetain(v18);
    swift_dynamicCast(&v32, v31, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_10004CFC4(v41, v40);
    v20 = sub_10004CFD4(&qword_1009DA340);
    swift_dynamicCast(v35, v40, v20, (char *)&type metadata for Any + 8, 7);
    v36 = v32;
    v37 = v33;
    v38 = v34;
    sub_10004CFC4(v35, v39);
    v32 = v36;
    v33 = v37;
    v34 = v38;
    sub_10004CFC4(v39, v40);
    sub_10004CFC4(v40, &v36);
    v21 = AnyHashable._rawHashValue(seed:)(v3[5]);
    v22 = -1 << *((_BYTE *)v3 + 32);
    v23 = v21 & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~v7[v23 >> 6]) != 0)
    {
      v9 = __clz(__rbit64((-1 << v23) & ~v7[v23 >> 6])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = v7[v24];
      }
      while (v28 == -1);
      v9 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)((char *)v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = v3[6] + 40 * v9;
    *(_OWORD *)v10 = v32;
    *(_OWORD *)(v10 + 16) = v33;
    *(_QWORD *)(v10 + 32) = v34;
    sub_10004CFC4(&v36, (_OWORD *)(v3[7] + 32 * v9));
    ++v3[2];
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v29)
  {
LABEL_37:
    swift_release(v3);
    sub_100299C3C(a1);
    return;
  }
  v14 = *(_QWORD *)(v30 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v29)
      goto LABEL_37;
    v14 = *(_QWORD *)(v30 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

char *TabBarController.__allocating_init(viewControllerProvider:)(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TabBarController.init(viewControllerProvider:)(a1);
}

uint64_t sub_1004EF4AC(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  CGRect v15;
  CGRect v16;
  CGRect v17;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
    return 0;
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  v11 = 0;
  if (!CGRectEqualToRect(*(CGRect *)(a1 + 32), v16))
  {
    v12 = v5 - 1;
    v13 = a1 + 88;
    while (v12 != v11)
    {
      v15 = *(CGRect *)(v13 - 24);
      v17.origin.x = a2;
      v17.origin.y = a3;
      v17.size.width = a4;
      v17.size.height = a5;
      v13 += 32;
      ++v11;
      if (CGRectEqualToRect(v15, v17))
        return v11;
    }
    return 0;
  }
  return v11;
}

uint64_t sub_1004EF57C(uint64_t a1, uint64_t a2)
{
  return sub_100013690(a1, a2, (unint64_t *)&qword_1009D41B0, UIView_ptr);
}

uint64_t sub_1004EF590(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v5 = type metadata accessor for ContentSizeCategory(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  v9 = sub_100008DB0(&qword_1009E8AE8, (uint64_t (*)(uint64_t))&type metadata accessor for ContentSizeCategory, (uint64_t)&protocol conformance descriptor for ContentSizeCategory);
  v10 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)(v7, a1, v5, v9) & 1) == 0)
  {
    ++v10;
    v7 += v8;
    if (v2 == v10)
      return 0;
  }
  return v10;
}

uint64_t sub_1004EF65C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == a1)
    return 0;
  result = 0;
  v5 = v2 - 1;
  while (v5 != result)
  {
    v6 = *(_QWORD *)(a2 + 40 + 8 * result++);
    if (v6 == a1)
      return result;
  }
  return 0;
}

void sub_1004EF6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];

  v4 = v3;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_10004CFC4((_OWORD *)a1, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v9 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002C3A2C(v10, a2, a3, isUniquelyReferenced_nonNull_native);
    v8 = *v3;
    *v4 = v9;
    swift_bridgeObjectRelease(a3);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    sub_100010960(a1, (uint64_t *)&unk_1009D04E0);
    sub_1002BD938(a2, a3, v10);
    swift_bridgeObjectRelease(a3);
    sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D04E0);
  }
}

double sub_1004EF794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004EF7DC(a1, a2, a3, &qword_1009DA310, (uint64_t (*)(_QWORD, double))&type metadata accessor for PBPropertyConfiguration, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1002C409C, (void (*)(uint64_t, uint64_t))sub_1002BDD04);
}

double sub_1004EF7B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004EF7DC(a1, a2, a3, &qword_1009DF290, (uint64_t (*)(_QWORD, double))&type metadata accessor for SeriesListSortOrder, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1002C463C, (void (*)(uint64_t, uint64_t))sub_1002BDE00);
}

double sub_1004EF7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD, double), void (*a6)(char *, uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, uint64_t))
{
  _QWORD *v7;
  _QWORD *v11;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  double result;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;

  v27 = a6;
  v11 = v7;
  v15 = sub_10004CFD4(a4);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a5(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v27 - v22;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v20 + 48))(a1, 1, v19, v21) == 1)
  {
    sub_100010960(a1, a4);
    a7(a2, a3);
    swift_bridgeObjectRelease(a3);
    sub_100010960((uint64_t)v18, a4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v23, a1, v19);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
    v28 = *v11;
    *v11 = 0x8000000000000000;
    v27(v23, a2, a3, isUniquelyReferenced_nonNull_native);
    v26 = *v11;
    *v11 = v28;
    swift_bridgeObjectRelease(a3);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v26).n128_u64[0];
  }
  return result;
}

double sub_1004EF95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1004EF7DC(a1, a2, a3, &qword_1009DF280, (uint64_t (*)(_QWORD, double))&type metadata accessor for SeriesListFilterOption, (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1002C4660, (void (*)(uint64_t, uint64_t))sub_1002BDF58);
}

void sub_1004EF980(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  __n128 v16;
  char v17;
  unint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009E8A28);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Book.Metadata(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v11 + 48))(a1, 1, v10, v12) == 1)
  {
    sub_100010960(a1, (uint64_t *)&unk_1009E8A28);
    v15 = sub_1002C8328(a2);
    if ((v17 & 1) != 0)
    {
      v18 = v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v20 = *v3;
      v26 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1002C1910();
        v20 = v26;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v9, *(_QWORD *)(v20 + 56) + *(_QWORD *)(v11 + 72) * v18, v10);
      sub_1002BEC94(v18, v20);
      v21 = *v3;
      *v3 = v20;
      v16 = swift_bridgeObjectRelease(v21);
      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v9, v22, 1, v10, v16);
    sub_100010960((uint64_t)v9, (uint64_t *)&unk_1009E8A28);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v14, a1, v10);
    v23 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v26 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002C4D94((uint64_t)v14, a2, v23);
    v24 = *v3;
    *v3 = v26;
    swift_bridgeObjectRelease(v24);
  }
}

double sub_1004EFB58(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  char v8;
  uint64_t v9;
  unint64_t v10;
  double result;
  char v12;
  unint64_t v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  v6 = *v3;
  if ((a2 & 1) != 0)
  {
    v10 = sub_1002C8328(a3);
    if ((v12 & 1) == 0)
      return result;
    v13 = v10;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v4);
    v15 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1002C1B04();
      v15 = v17;
    }
    sub_1002BE928(v13, v15);
    v9 = *v4;
    *v4 = v15;
  }
  else
  {
    v8 = swift_isUniquelyReferenced_nonNull_native(v6);
    v16 = *v4;
    *v4 = 0x8000000000000000;
    sub_1002C4F34(a1, a3, v8);
    v9 = *v4;
    *v4 = v16;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

uint64_t sub_1004EFC24(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009E8A60);
  __chkstk_darwin(v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CollectionRecommendationOptions(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_100010960(a1, (uint64_t *)&unk_1009E8A60);
    sub_1002BE088(a2, (uint64_t)v8);
    v14 = type metadata accessor for CollectionRecommendationType(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009E8A60);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v20 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002C503C((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    v17 = *v3;
    *v3 = v20;
    swift_bridgeObjectRelease(v17);
    v18 = type metadata accessor for CollectionRecommendationType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a2, v18);
  }
}

void sub_1004EFDB0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  __n128 v15;
  char v16;
  unint64_t v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009E8A38);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D7AA0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_100010960(a1, &qword_1009E8A38);
    v14 = sub_1002C8328(a2);
    if ((v16 & 1) != 0)
    {
      v17 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v19 = *v3;
      v25 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1002C1F70();
        v19 = v25;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v10 + 72) * v17, v9);
      sub_1002BEF74(v17, v19);
      v20 = *v3;
      *v3 = v19;
      v15 = swift_bridgeObjectRelease(v20);
      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, v21, 1, v9, v15);
    sub_100010960((uint64_t)v8, &qword_1009E8A38);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    v22 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v25 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002C51C4((uint64_t)v13, a2, v22);
    v23 = *v3;
    *v3 = v25;
    swift_bridgeObjectRelease(v23);
  }
}

void sub_1004EFF8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  __n128 v15;
  char v16;
  unint64_t v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009E8A48);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContentMessage.CFIUpdate(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_100010960(a1, &qword_1009E8A48);
    v14 = sub_1002BB7F4(a2);
    if ((v16 & 1) != 0)
    {
      v17 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v19 = *v3;
      v25 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1002C2D9C();
        v19 = v25;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v10 + 72) * v17, v9);
      sub_1002BF730(v17, v19);
      v20 = *v3;
      *v3 = v19;
      v15 = swift_bridgeObjectRelease(v20);
      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, v21, 1, v9, v15);
    sub_100010960((uint64_t)v8, &qword_1009E8A48);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    v22 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v25 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002C55F4((uint64_t)v13, a2, v22);
    v23 = *v3;
    *v3 = v25;
    swift_bridgeObjectRelease(v23);
  }
}

void sub_1004F0164(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  __n128 v15;
  char v16;
  unint64_t v17;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009E8A40);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CFIRange(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_100010960(a1, &qword_1009E8A40);
    v14 = sub_1002BB7F4(a2);
    if ((v16 & 1) != 0)
    {
      v17 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v19 = *v3;
      v25 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1002C2D88();
        v19 = v25;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v10 + 72) * v17, v9);
      sub_1002BF724(v17, v19);
      v20 = *v3;
      *v3 = v19;
      v15 = swift_bridgeObjectRelease(v20);
      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, v21, 1, v9, v15);
    sub_100010960((uint64_t)v8, &qword_1009E8A40);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    v22 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v25 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002C55D0((uint64_t)v13, a2, v22);
    v23 = *v3;
    *v3 = v25;
    swift_bridgeObjectRelease(v23);
  }
}

void sub_1004F033C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  __n128 v16;
  char v17;
  unint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009E8A50);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StoreBookRating(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v11 + 48))(a1, 1, v10, v12) == 1)
  {
    sub_100010960(a1, (uint64_t *)&unk_1009E8A50);
    v15 = sub_1002C8328(a2);
    if ((v17 & 1) != 0)
    {
      v18 = v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
      v20 = *v3;
      v26 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1002C333C();
        v20 = v26;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v9, *(_QWORD *)(v20 + 56) + *(_QWORD *)(v11 + 72) * v18, v10);
      sub_1002BF73C(v18, v20);
      v21 = *v3;
      *v3 = v20;
      v16 = swift_bridgeObjectRelease(v21);
      v22 = 0;
    }
    else
    {
      v22 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v9, v22, 1, v10, v16);
    sub_100010960((uint64_t)v9, (uint64_t *)&unk_1009E8A50);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v14, a1, v10);
    v23 = swift_isUniquelyReferenced_nonNull_native(*v3);
    v26 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002C59E8((uint64_t)v14, a2, v23);
    v24 = *v3;
    *v3 = v26;
    swift_bridgeObjectRelease(v24);
  }
}

void *MiniPlayerHostingTabBarController.bc_preferredTabBarScrollEdgeAppearance.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController__bc_preferredTabBarScrollEdgeAppearance);
  v2 = v1;
  return v1;
}

void MiniPlayerHostingTabBarController.bc_preferredTabBarScrollEdgeAppearance.setter(void *a1)
{
  sub_1004F7504(a1);

}

void *MiniPlayerHostingTabBarController.miniPlayerViewController.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1004F06D0(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  v5 = v2;
  sub_1004F0744(v4);

}

void sub_1004F0744(void *a1)
{
  char *v1;
  unsigned __int8 *v2;
  void **v4;
  double v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t ObjectType;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  char v27[24];

  v2 = (unsigned __int8 *)v1;
  v4 = (void **)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController];
  *(_QWORD *)&v5 = swift_beginAccess(&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController], v27, 0, 0).n128_u64[0];
  if (!*v4)
  {
    if (!a1)
      return;
    goto LABEL_8;
  }
  if (a1 && *v4 == a1)
    return;
  if (a1)
  {
LABEL_8:
    objc_msgSend(a1, "willMoveToParentViewController:", 0, v5);
    v7 = objc_msgSend(a1, "view");
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, "removeFromSuperview");

      v9 = objc_msgSend(a1, "view");
      if (v9)
      {
        v10 = v9;
        objc_msgSend(v9, "setInsetsLayoutMarginsFromSafeArea:", 1);

        if ((objc_msgSend(v2, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
        {
          ObjectType = swift_getObjectType();
          v26 = a1;
          sub_10043681C(v2[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState], 0x80u, ObjectType, (uint64_t)&off_100906280);
        }
        objc_msgSend(a1, "removeFromParentViewController", v26);
        v6 = *v4;
        if (!*v4)
          goto LABEL_18;
LABEL_13:
        v12 = swift_getObjectType();
        v13 = v6;
        objc_msgSend(v2, "addChildViewController:", v13);
        v14 = objc_msgSend(v13, "view");
        if (v14)
        {
          v15 = v14;
          objc_msgSend(v14, "setInsetsLayoutMarginsFromSafeArea:", 0);

          v16 = sub_1004F0F80();
          v18 = v17;
          v19 = objc_msgSend(v13, "view");
          if (v19)
          {
            v20 = v19;
            v21 = swift_getObjectType();
            (*(void (**)(void *, uint64_t, uint64_t))(v18 + 64))(v20, v21, v18);

            if ((objc_msgSend(v2, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
            {
              v26 = v13;
              sub_10043681C(128, v2[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState], v12, (uint64_t)&off_100906280);
            }
            objc_msgSend(v13, "didMoveToParentViewController:", v2, v26);

            goto LABEL_18;
          }
LABEL_26:
          __break(1u);
          return;
        }
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_25;
  }
  objc_msgSend(v1, "shouldAutomaticallyForwardAppearanceMethods", v5);
  v6 = *v4;
  if (*v4)
    goto LABEL_13;
LABEL_18:
  v22 = sub_1004F0F80();
  objc_msgSend(v22, "setHidden:", *v4 == 0);

  v23 = objc_msgSend(v2, "tabBar");
  if (*v4)
  {
    v24 = objc_msgSend(v2, "tabBar");
    v25 = objc_msgSend(v24, "standardAppearance");

  }
  else
  {
    v25 = objc_msgSend(v2, "bc_preferredTabBarScrollEdgeAppearance");
  }
  objc_msgSend(v23, "setScrollEdgeAppearance:", v25);

  sub_1004F22A0();
  _s5Books33MiniPlayerHostingTabBarControllerC11viewDidMove2to23shouldAppearOrDisappearySo8UIWindowCSg_SbtF_0();
}

void _s5Books33MiniPlayerHostingTabBarControllerC11viewDidMove2to23shouldAppearOrDisappearySo8UIWindowCSg_SbtF_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *, _QWORD, uint64_t);
  char v7;
  void (*v8)(char *, uint64_t);
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  Class isa;
  void *v18;
  char *v19;
  double v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  char *v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  char *v33;
  id v34;
  void *v35;
  char *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  Class v49;
  uint64_t v50;
  uint64_t v51[3];

  v1 = v0;
  v2 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v51[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v6(v5, enum case for BooksUIKitFeatureFlag.floatingTabBar(_:), v2);
  v7 = isFeatureEnabled(_:)(v5);
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  if ((v7 & 1) != 0
    || (v6(v5, enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:), v2),
        v9 = isFeatureEnabled(_:)(v5),
        v8(v5, v2),
        (v9 & 1) != 0))
  {
    v10 = OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_bottomAnchorConstraint;
    v11 = *(void **)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_bottomAnchorConstraint];
    if (v11)
    {
      v12 = (void *)objc_opt_self(NSLayoutConstraint);
      v13 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
      v14 = swift_allocObject(v13, 40, 7);
      *(_OWORD *)(v14 + 16) = xmmword_1007118F0;
      *(_QWORD *)(v14 + 32) = v11;
      v51[0] = v14;
      specialized Array._endMutation()(v14);
      v15 = v51[0];
      sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
      v16 = v11;
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v15);
      objc_msgSend(v12, "deactivateConstraints:", isa);

      v18 = *(void **)&v1[v10];
      *(_QWORD *)&v1[v10] = 0;

    }
    v19 = &v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController];
    *(_QWORD *)&v20 = swift_beginAccess(&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController], v51, 0, 0).n128_u64[0];
    if (*(_QWORD *)v19)
    {
      v21 = objc_msgSend(v1, "traitCollection", v20);
      if (objc_msgSend(v21, "horizontalSizeClass") == (id)1)
      {
        v22 = objc_msgSend(v1, "tabBar");
        v23 = objc_msgSend(v22, "window");

        if (!v23)
        {
          v36 = sub_1004F0F80();
          v37 = objc_msgSend(v36, "bottomAnchor");

          v38 = objc_msgSend(v1, "view");
          if (!v38)
          {
            __break(1u);
            return;
          }
          v39 = v38;
          v40 = objc_msgSend(v38, "safeAreaLayoutGuide");

          v41 = objc_msgSend(v40, "bottomAnchor");
          v42 = objc_msgSend(v37, "constraintEqualToAnchor:", v41);

          v35 = *(void **)&v1[v10];
          *(_QWORD *)&v1[v10] = v42;
          goto LABEL_16;
        }
        v24 = objc_msgSend(v1, "tabBar");
        v25 = objc_msgSend(v24, "topAnchor");

        v26 = sub_1004F0F80();
        v27 = objc_msgSend(v26, "bottomAnchor");

        v28 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v25, 0.0);
      }
      else
      {
        v29 = objc_msgSend(v1, "viewIfLoaded");
        if (!v29
          || (v30 = v29, v31 = objc_msgSend(v29, "window"), v30, !v31)
          || (v32 = objc_msgSend(v31, "safeAreaLayoutGuide"),
              v31,
              v25 = objc_msgSend(v32, "bottomAnchor"),
              v32,
              !v25))
        {
LABEL_17:
          v43 = *(void **)&v1[v10];
          if (v43)
          {
            v44 = (void *)objc_opt_self(NSLayoutConstraint);
            v45 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
            v46 = swift_allocObject(v45, 40, 7);
            *(_OWORD *)(v46 + 16) = xmmword_1007118F0;
            *(_QWORD *)(v46 + 32) = v43;
            v50 = v46;
            specialized Array._endMutation()(v46);
            v47 = v50;
            sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
            v48 = v43;
            v49 = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v47);
            objc_msgSend(v44, "activateConstraints:", v49);

          }
          return;
        }
        v33 = sub_1004F0F80();
        v27 = objc_msgSend(v33, "bottomAnchor");

        v28 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v25, 10.0);
      }
      v34 = v28;

      v35 = *(void **)&v1[v10];
      *(_QWORD *)&v1[v10] = v34;

LABEL_16:
      goto LABEL_17;
    }
  }
}

char *sub_1004F0F80()
{
  char *v0;
  char *v1;
  void *v2;
  char *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v1 = &v0[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController____lazy_storage___hostContainerView];
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController____lazy_storage___hostContainerView];
  if (v2)
  {
    v3 = *(char **)&v0[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController____lazy_storage___hostContainerView];
  }
  else
  {
    v4 = sub_1004F0FF0(v0);
    v5 = *(void **)v1;
    *(_QWORD *)v1 = v4;
    *((_QWORD *)v1 + 1) = v6;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

char *sub_1004F0FF0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *, _QWORD, uint64_t);
  char v7;
  void (*v8)(char *, uint64_t);
  char v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  char *v14;
  char *v15;
  char *v16;
  id v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  CGFloat Height;
  void (*v27)(_QWORD *);
  uint64_t v28;
  char *result;
  void *v30;
  void *v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  NSArray v55;
  id v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  void *v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  double v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[4];
  CGRect v77;

  v2 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
  v6(v5, enum case for BooksUIKitFeatureFlag.floatingTabBar(_:), v2);
  v7 = isFeatureEnabled(_:)(v5);
  v8 = *(void (**)(char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  if ((v7 & 1) != 0
    || (v6(v5, enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:), v2),
        v9 = isFeatureEnabled(_:)(v5),
        v8(v5, v2),
        (v9 & 1) != 0)
    || (v10 = objc_msgSend(a1, "tabBar"),
        v11 = objc_msgSend(v10, "superview"),
        v11,
        v10,
        !v11))
  {
    v56 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ToastContainerView()), "init");
    objc_msgSend(v56, "setHidden:", 1);
    objc_msgSend(v56, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    result = (char *)objc_msgSend(a1, "view");
    if (result)
    {
      v57 = result;
      objc_msgSend(result, "addSubview:", v56);

      result = (char *)objc_msgSend(a1, "view");
      if (result)
      {
        v58 = result;
        v32 = (char *)v56;
        v59 = objc_msgSend(a1, "tabBar");
        objc_msgSend(v58, "insertSubview:belowSubview:", v32, v59);

        v60 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
        v61 = swift_allocObject(v60, 56, 7);
        *(_OWORD *)(v61 + 16) = xmmword_1007118D0;
        v62 = objc_msgSend(v32, "leadingAnchor");
        result = (char *)objc_msgSend(a1, "view");
        if (result)
        {
          v63 = result;
          v64 = objc_msgSend(result, "leadingAnchor");

          v65 = objc_msgSend(v62, "constraintEqualToAnchor:", v64);
          *(_QWORD *)(v61 + 32) = v65;
          v66 = objc_msgSend(v32, "trailingAnchor");
          result = (char *)objc_msgSend(a1, "view");
          if (result)
          {
            v67 = result;
            v68 = (void *)objc_opt_self(NSLayoutConstraint);
            v69 = objc_msgSend(v67, "trailingAnchor");

            v70 = objc_msgSend(v66, "constraintEqualToAnchor:", v69);
            *(_QWORD *)(v61 + 40) = v70;
            v71 = objc_msgSend(v32, "heightAnchor");
            v72 = *(double *)&v32[OBJC_IVAR____TtC5Books18ToastContainerView_defaultHeight];

            v73 = objc_msgSend(v71, "constraintEqualToConstant:", v72);
            *(_QWORD *)(v61 + 48) = v73;
            v76[0] = v61;
            specialized Array._endMutation()(v74);
            v75 = v76[0];
            sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
            v55.super.isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease(v75);
            objc_msgSend(v68, "activateConstraints:", v55.super.isa);
            goto LABEL_17;
          }
          goto LABEL_21;
        }
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_20;
  }
  if (qword_1009CDD38 != -1)
    swift_once(&qword_1009CDD38, sub_100009C98);
  v12 = (void *)qword_100A1E3D8;
  v13 = objc_allocWithZone((Class)type metadata accessor for PaletteContainerView());
  v14 = sub_10001B0D4(v12);
  swift_getObjectType();
  v15 = v14;
  objc_msgSend(v15, "setHidden:", 1);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = v15;
  v17 = objc_msgSend(a1, "tabBar");
  objc_msgSend(v17, "frame");
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;

  v77.origin.x = v19;
  v77.origin.y = v21;
  v77.size.width = v23;
  v77.size.height = v25;
  Height = CGRectGetHeight(v77);
  v27 = sub_100259700(v76);
  *(CGFloat *)(v28 + 16) = Height;
  ((void (*)(_QWORD *, _QWORD))v27)(v76, 0);

  result = (char *)objc_msgSend(a1, "view");
  if (!result)
    goto LABEL_22;
  v30 = result;
  objc_msgSend(result, "addSubview:", v16);

  result = (char *)objc_msgSend(a1, "view");
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v31 = result;
  v32 = v16;
  v33 = objc_msgSend(a1, "tabBar");
  objc_msgSend(v31, "insertSubview:belowSubview:", v32, v33);

  v34 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v35 = swift_allocObject(v34, 64, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1007143B0;
  v36 = objc_msgSend(v32, "leadingAnchor");
  result = (char *)objc_msgSend(a1, "view");
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v37 = result;
  v38 = objc_msgSend(result, "leadingAnchor");

  v39 = objc_msgSend(v36, "constraintEqualToAnchor:", v38);
  *(_QWORD *)(v35 + 32) = v39;
  v40 = objc_msgSend(v32, "trailingAnchor");
  result = (char *)objc_msgSend(a1, "view");
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v41 = result;
  v42 = objc_msgSend(result, "trailingAnchor");

  v43 = objc_msgSend(v40, "constraintEqualToAnchor:", v42);
  *(_QWORD *)(v35 + 40) = v43;
  v44 = objc_msgSend(v32, "topAnchor");
  v45 = objc_msgSend(a1, "tabBar");
  v46 = objc_msgSend(v45, "topAnchor");

  v47 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v46, -*(double *)&v32[OBJC_IVAR____TtC5Books20PaletteContainerView_defaultHeight]);
  *(_QWORD *)(v35 + 48) = v47;
  v48 = objc_msgSend(v32, "bottomAnchor");

  result = (char *)objc_msgSend(a1, "view");
  if (result)
  {
    v49 = result;
    v50 = (void *)objc_opt_self(NSLayoutConstraint);
    v51 = objc_msgSend(v49, "bottomAnchor");

    v52 = objc_msgSend(v48, "constraintEqualToAnchor:", v51);
    *(_QWORD *)(v35 + 56) = v52;
    v76[0] = v35;
    specialized Array._endMutation()(v53);
    v54 = v76[0];
    sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
    v55.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v54);
    objc_msgSend(v50, "activateConstraints:", v55.super.isa);
LABEL_17:

    return v32;
  }
LABEL_26:
  __break(1u);
  return result;
}

Swift::Void __swiftcall MiniPlayerHostingTabBarController.viewWillDisappear(_:)(Swift::Bool a1)
{
  unsigned __int8 *v1;
  _BOOL4 v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t ObjectType;
  char v7[24];
  objc_super v8;

  v2 = a1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  objc_msgSendSuper2(&v8, "viewWillDisappear:", v2);
  v3 = OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState;
  v4 = v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState];
  v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState] = v2 | 0x40;
  if (((v4 & 0xC0) != 0x40 || ((((v4 & 1) == 0) ^ v2) & 1) == 0)
    && (objc_msgSend(v1, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
  {
    v5 = &v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController], v7, 0, 0);
    if (*(_QWORD *)v5)
    {
      ObjectType = swift_getObjectType();
      sub_10043681C(v4, v1[v3], ObjectType, (uint64_t)&off_100906280);
    }
  }
}

Swift::Void __swiftcall MiniPlayerHostingTabBarController.viewDidDisappear(_:)(Swift::Bool a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t ObjectType;
  char v7[24];
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  objc_msgSendSuper2(&v8, "viewDidDisappear:", a1);
  v3 = OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState;
  v4 = v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState];
  v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState] = 0x80;
  if ((_DWORD)v4 != 128 && (objc_msgSend(v1, "shouldAutomaticallyForwardAppearanceMethods") & 1) == 0)
  {
    v5 = &v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController];
    swift_beginAccess(&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController], v7, 0, 0);
    if (*(_QWORD *)v5)
    {
      ObjectType = swift_getObjectType();
      sub_10043681C(v4, v1[v3], ObjectType, (uint64_t)&off_100906280);
    }
  }
}

Swift::Void __swiftcall MiniPlayerHostingTabBarController.viewDidLayoutSubviews()()
{
  void *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  id v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  CGFloat Height;
  void (*v16)(_BYTE *, _QWORD);
  uint64_t v17;
  _BYTE v18[32];
  objc_super v19;
  CGRect v20;

  v1 = v0;
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  objc_msgSendSuper2(&v19, "viewDidLayoutSubviews");
  v2 = sub_1004F0F80();
  v4 = v3;
  ObjectType = swift_getObjectType();
  v6 = objc_msgSend(v1, "tabBar");
  objc_msgSend(v6, "frame");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v20.origin.x = v8;
  v20.origin.y = v10;
  v20.size.width = v12;
  v20.size.height = v14;
  Height = CGRectGetHeight(v20);
  v16 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v4 + 32))(v18, ObjectType, v4);
  *(CGFloat *)(v17 + 16) = Height;
  v16(v18, 0);

  _s5Books33MiniPlayerHostingTabBarControllerC11viewDidMove2to23shouldAppearOrDisappearySo8UIWindowCSg_SbtF_0();
}

_QWORD *MiniPlayerHostingTabBarController.viewControllers.getter()
{
  _QWORD **v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD **v5;
  id *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v14;
  _QWORD **v15;
  _QWORD **v16;
  _BYTE v17[24];
  _QWORD *v18;
  objc_super v19;

  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  v1 = objc_msgSendSuper2(&v19, "viewControllers");
  if (v1)
  {
    v2 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

    v18 = _swiftEmptyArrayStorage;
    if ((unint64_t)v3 >> 62)
      goto LABEL_22;
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    v5 = v0;
LABEL_4:
    v6 = (id *)((char *)v0 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController);
    swift_beginAccess((char *)v0 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController, v17, 0, 0);
    if (v4)
    {
      v16 = v0;
      v7 = 0;
      while (1)
      {
        if ((v3 & 0xC000000000000001) != 0)
        {
          v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v3);
        }
        else
        {
          if (v7 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_21:
            __break(1u);
LABEL_22:
            if (v3 < 0)
              v14 = v3;
            else
              v14 = v3 & 0xFFFFFFFFFFFFFF8;
            v15 = v0;
            v4 = _CocoaArrayWrapper.endIndex.getter(v14);
            goto LABEL_4;
          }
          v10 = *(id *)(v3 + 8 * v7 + 32);
        }
        v11 = v10;
        v12 = v7 + 1;
        if (__OFADD__(v7, 1))
          goto LABEL_21;
        if (*v6 && v10 == *v6)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v10);
          v8 = v18[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v8);
          v9 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v11);
          v0 = &v18;
          specialized ContiguousArray._endMutation()(v9);
        }
        ++v7;
        if (v12 == v4)
        {
          v1 = v18;
          v0 = v16;
          goto LABEL_18;
        }
      }
    }
    v1 = _swiftEmptyArrayStorage;
LABEL_18:
    swift_bridgeObjectRelease(v3);

  }
  return v1;
}

void MiniPlayerHostingTabBarController.viewControllers.setter(uint64_t a1)
{
  void *v1;
  NSArray v3;
  objc_super v4;

  if (a1)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    v3.super.isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3.super.isa = 0;
  }
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  objc_msgSendSuper2(&v4, "setViewControllers:", v3.super.isa);

}

_QWORD *MiniPlayerHostingTabBarController._viewControllersInTabBar()()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v15;
  char *v16;
  char *v17;
  char v18[24];
  _QWORD *v19;

  v1 = v0;
  v2 = objc_msgSend(v0, "childViewControllers");
  v3 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

  v19 = _swiftEmptyArrayStorage;
  if ((unint64_t)v4 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v1;
LABEL_3:
  v7 = (id *)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController], v18, 0, 0);
  if (v5)
  {
    v17 = v1;
    v8 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v4);
      }
      else
      {
        if (v8 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_19:
          __break(1u);
LABEL_20:
          if (v4 < 0)
            v15 = v4;
          else
            v15 = v4 & 0xFFFFFFFFFFFFFF8;
          v16 = v1;
          v5 = _CocoaArrayWrapper.endIndex.getter(v15);
          goto LABEL_3;
        }
        v11 = *(id *)(v4 + 8 * v8 + 32);
      }
      v12 = v11;
      v1 = (char *)(v8 + 1);
      if (__OFADD__(v8, 1))
        goto LABEL_19;
      if (*v7 && v11 == *v7)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v11);
        v9 = v19[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
        v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v12);
        specialized ContiguousArray._endMutation()(v10);
      }
      ++v8;
      if (v1 == (char *)v5)
      {
        v13 = v19;
        v1 = v17;
        goto LABEL_17;
      }
    }
  }
  v13 = _swiftEmptyArrayStorage;
LABEL_17:
  swift_bridgeObjectRelease(v4);

  return v13;
}

Swift::Void __swiftcall MiniPlayerHostingTabBarController._rebuildTabBarItems(animated:)(Swift::Bool animated)
{
  _BYTE *v1;
  uint64_t v3;
  char v4;
  objc_super v5;

  v3 = OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_isRebuildingTabBarItems;
  v4 = v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_isRebuildingTabBarItems];
  v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_isRebuildingTabBarItems] = 1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  objc_msgSendSuper2(&v5, "_rebuildTabBarItemsAnimated:", animated);
  v1[v3] = v4;
}

Swift::Void __swiftcall MiniPlayerHostingTabBarController._updateLayout(for:)(UITraitCollection_optional a1)
{
  _BYTE *v1;
  Class isa;
  uint64_t v3;
  char v4;
  objc_super v5;

  isa = a1.value.super.isa;
  v3 = OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_isRebuildingTabBarItems;
  v4 = v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_isRebuildingTabBarItems];
  v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_isRebuildingTabBarItems] = 1;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  objc_msgSendSuper2(&v5, "_updateLayoutForTraitCollection:", isa);
  v1[v3] = v4;
}

void MiniPlayerHostingTabBarController.mutableChildViewControllers.setter(void *a1)
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  objc_msgSendSuper2(&v3, "setMutableChildViewControllers:", a1);

}

void sub_1004F22A0()
{
  void *v0;
  id v1;
  char *v2;
  unsigned __int8 v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  id v8;

  v1 = objc_msgSend(v0, "selectedViewController");
  if (v1)
  {
    v8 = v1;
    v2 = sub_1004F0F80();
    v3 = objc_msgSend(v2, "isHidden");

    if ((v3 & 1) == 0)
    {
      v4 = sub_1004F0F80();
      v6 = v5;
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);

    }
    objc_msgSend(v8, "additionalSafeAreaInsets");
    objc_msgSend(v8, "setAdditionalSafeAreaInsets:");

  }
}

id MiniPlayerHostingTabBarController.init(tabs:)(uint64_t a1)
{
  _BYTE *v1;
  _QWORD *v3;
  Class isa;
  id v5;
  objc_super v7;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController__bc_preferredTabBarScrollEdgeAppearance] = 0;
  v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState] = 0x80;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_bottomAnchorConstraint] = 0;
  v3 = &v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController____lazy_storage___hostContainerView];
  *v3 = 0;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_isRebuildingTabBarItems] = 0;
  sub_100009E04(0, &qword_1009E87C8, UITab_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  v5 = objc_msgSendSuper2(&v7, "initWithTabs:", isa);

  return v5;
}

id MiniPlayerHostingTabBarController.init(coder:)(void *a1)
{
  _BYTE *v1;
  _QWORD *v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController__bc_preferredTabBarScrollEdgeAppearance] = 0;
  v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_appearanceState] = 0x80;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_bottomAnchorConstraint] = 0;
  v3 = &v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController____lazy_storage___hostContainerView];
  *v3 = 0;
  v3[1] = 0;
  v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_isRebuildingTabBarItems] = 0;
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for MiniPlayerHostingTabBarController();
  v4 = objc_msgSendSuper2(&v6, "initWithCoder:", a1);

  return v4;
}

id MiniPlayerHostingTabBarController.__deallocating_deinit(uint64_t a1)
{
  return sub_10025965C(a1, type metadata accessor for MiniPlayerHostingTabBarController);
}

uint64_t MiniPlayerHostingTabBarController.dockMiniPlayer(_:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_10090C2E0, 32, 7);
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = a1;
  aBlock[4] = sub_1004F7624;
  v25 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_10090C2F8;
  v13 = _Block_copy(aBlock);
  v14 = v25;
  v15 = v2;
  v16 = a1;
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v20 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v4, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v22);
}

void sub_1004F27DC(uint64_t a1, void *a2)
{
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v3 = (void **)(a1 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController);
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController, v6, 1, 0);
  v4 = *v3;
  *v3 = a2;
  v5 = a2;
  sub_1004F0744(v4);

}

Swift::Void __swiftcall MiniPlayerHostingTabBarController.undockMiniPlayer()()
{
  uint64_t v0;
  void **v1;
  void *v2;
  _BYTE v3[24];

  v1 = (void **)(v0 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController, v3, 1, 0);
  v2 = *v1;
  *v1 = 0;
  sub_1004F0744(v2);

}

uint64_t TabBarController.rootBarEventPublisher.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009CEEA0);
  v1 = sub_100030B34(&qword_1009E87F0, (uint64_t *)&unk_1009CEEA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_1004F29E0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072A868);
  v2 = swift_getKeyPath(&unk_10072A890);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t TabBarController._rootBarCoordinator.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BKTabBarController__rootBarCoordinator;
  swift_beginAccess(v0 + OBJC_IVAR___BKTabBarController__rootBarCoordinator, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t TabBarController._rootBarCoordinator.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR___BKTabBarController__rootBarCoordinator;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

void (*TabBarController._rootBarCoordinator.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___BKTabBarController__rootBarCoordinator;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_1002B5650;
}

void sub_1004F2B60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1004F3788();

  }
}

Swift::Void __swiftcall TabBarController.select(identifier:isUserAction:)(Swift::String identifier, Swift::Bool isUserAction)
{
  void *v2;
  void *v3;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;

  v3 = v2;
  object = identifier._object;
  countAndFlagsBits = identifier._countAndFlagsBits;
  v7 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v8 = (void *)static OS_dispatch_queue.main.getter(v7);
  v9 = &_dispatch_main_q;
  v10 = &_dispatch_main_q;
  v11 = v8;
  v12 = &_dispatch_main_q;
  if (v11 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v9 = v11;
  }

  v13 = sub_1004F3980(countAndFlagsBits, (unint64_t)object);
  if ((v14 & 1) == 0)
  {
    v15 = v13;
    if ((*((_BYTE *)v3 + OBJC_IVAR___BKTabBarController_isTransferingFromSidebar) & 1) == 0 && isUserAction)
    {
      v16 = objc_msgSend(v3, "bk_rootBarCoordinator");
      if (v16)
      {
        v17 = v16;
        v18 = objc_msgSend(v16, "rootViewController");
        objc_msgSend(v18, "bc_dismissIfSafeAnimated:", 0, swift_unknownObjectRelease(v17).n128_f64[0]);

      }
    }
    objc_msgSend(v3, "bc_setSelectedIndex:", v15);
    sub_100049A90();
  }
}

Swift::Bool __swiftcall TabBarController.hasStandardItem(withIdentifier:)(Swift::String withIdentifier)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  char v9;

  object = withIdentifier._object;
  countAndFlagsBits = withIdentifier._countAndFlagsBits;
  v3 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v4 = (void *)static OS_dispatch_queue.main.getter(v3);
  v5 = &_dispatch_main_q;
  v6 = &_dispatch_main_q;
  v7 = v4;
  v8 = &_dispatch_main_q;
  if (v7 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v5 = v7;
  }

  sub_1004F3980(countAndFlagsBits, (unint64_t)object);
  return (v9 & 1) == 0;
}

UINavigationController_optional __swiftcall TabBarController.navigationController(forIdentifier:)(Swift::String forIdentifier)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  Swift::Bool v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  objc_class *v18;
  objc_class *v19;
  UINavigationController_optional result;

  object = forIdentifier._object;
  countAndFlagsBits = forIdentifier._countAndFlagsBits;
  v3 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v4 = (void *)static OS_dispatch_queue.main.getter(v3);
  v5 = &_dispatch_main_q;
  v6 = &_dispatch_main_q;
  v7 = v4;
  v8 = &_dispatch_main_q;
  v9 = &_dispatch_main_q;
  if (v7 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v9 = v7;
  }

  v10 = sub_1004F3980(countAndFlagsBits, (unint64_t)object);
  if (v11)
  {
    v18 = 0;
  }
  else
  {
    v12 = v10;
    v13 = (void *)static OS_dispatch_queue.main.getter(v10);
    v14 = &_dispatch_main_q;
    v15 = v13;
    v16 = &_dispatch_main_q;
    if (v15 == &_dispatch_main_q)
    {
      +[NSThread isMainThread](NSThread, "isMainThread");
      v5 = v15;
    }

    v17 = (void *)sub_1004F3C00(v12);
    v18 = (objc_class *)objc_msgSend(v17, "contentNavigationController");

  }
  v19 = v18;
  result.value.super.super.super.isa = v19;
  result.is_nil = v11;
  return result;
}

UIViewController_optional __swiftcall TabBarController.topViewController(forIdentifier:)(Swift::String forIdentifier)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  Swift::String v9;
  void *v10;
  objc_class *v11;
  Swift::Bool v12;
  objc_class *v13;
  UIViewController_optional result;

  object = forIdentifier._object;
  countAndFlagsBits = forIdentifier._countAndFlagsBits;
  v3 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v4 = (void *)static OS_dispatch_queue.main.getter(v3);
  v5 = &_dispatch_main_q;
  v6 = &_dispatch_main_q;
  v7 = v4;
  v8 = &_dispatch_main_q;
  if (v7 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v5 = v7;
  }

  v9._countAndFlagsBits = countAndFlagsBits;
  v9._object = object;
  v10 = (void *)TabBarController.navigationController(forIdentifier:)(v9);
  v11 = (objc_class *)objc_msgSend(v10, "topViewController");

  v13 = v11;
  result.value.super.super.isa = v13;
  result.is_nil = v12;
  return result;
}

Swift::Void __swiftcall TabBarController.viewWillAppear(_:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  void *v4;
  objc_super v5;
  _QWORD v6[3];
  char v7;

  v6[1] = 0;
  v6[2] = 0;
  v6[0] = a1;
  v7 = 0;
  PassthroughSubject.send(_:)(v6);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for TabBarController(0);
  objc_msgSendSuper2(&v5, "viewWillAppear:", a1);
  v3 = objc_msgSend(v1, "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setAccessibilityElementsHidden:", 0);

  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall TabBarController.viewDidAppear(_:)(Swift::Bool a1)
{
  sub_1004F3190(a1, 1, (SEL *)&selRef_viewDidAppear_);
}

Swift::Void __swiftcall TabBarController.viewWillDisappear(_:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  objc_super v6;
  _QWORD v7[3];
  char v8;

  v7[1] = 0;
  v7[2] = 0;
  v7[0] = a1;
  v8 = 2;
  PassthroughSubject.send(_:)(v7);
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for TabBarController(0);
  v3 = objc_msgSendSuper2(&v6, "viewWillDisappear:", a1);
  if (_AXSAutomationEnabled(v3))
  {
    v4 = objc_msgSend(v1, "view");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "setAccessibilityElementsHidden:", 1);

    }
    else
    {
      __break(1u);
    }
  }
}

Swift::Void __swiftcall TabBarController.viewDidDisappear(_:)(Swift::Bool a1)
{
  sub_1004F3190(a1, 3, (SEL *)&selRef_viewDidDisappear_);
}

id sub_1004F3190(char a1, char a2, SEL *a3)
{
  void *v3;
  objc_super v7;
  _QWORD v8[3];
  char v9;

  v8[1] = 0;
  v8[2] = 0;
  v8[0] = a1 & 1;
  v9 = a2;
  PassthroughSubject.send(_:)(v8);
  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for TabBarController(0);
  return objc_msgSendSuper2(&v7, *a3, a1 & 1);
}

void TabBarController.viewWillTransition(to:with:)(uint64_t (*a1)(uint64_t a1, uint64_t a2), double a2, double a3)
{
  void *v3;
  void *v4;
  objc_class *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void **v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void *v16;
  void (*v17)();
  uint64_t v18;
  objc_super v19;

  v4 = v3;
  v13 = *(void ***)&a2;
  v14 = *(_QWORD *)&a3;
  v15 = a1;
  LOBYTE(v16) = 4;
  swift_unknownObjectRetain(a1);
  PassthroughSubject.send(_:)(&v13);
  swift_unknownObjectRelease(a1);
  v8 = (objc_class *)type metadata accessor for TabBarController(0);
  v19.receiver = v3;
  v19.super_class = v8;
  objc_msgSendSuper2(&v19, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3, v13, v14, v15, v16);
  v9 = swift_allocObject(&unk_10090C358, 24, 7);
  *(_QWORD *)(v9 + 16) = v3;
  v17 = sub_1004F7658;
  v18 = v9;
  v13 = _NSConcreteStackBlock;
  v14 = 1107296256;
  v15 = sub_1004D7C0C;
  v16 = &unk_10090C370;
  v10 = _Block_copy(&v13);
  v11 = v18;
  v12 = v4;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", 0, v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);
}

Swift::Void __swiftcall TabBarController.didReceiveMemoryWarning()()
{
  void *v0;
  id v1;
  int64_t v2;
  uint64_t i;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t j;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSString v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int64_t v34;
  id v35;
  id v36;
  objc_super v37;

  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for TabBarController(0);
  objc_msgSendSuper2(&v37, "didReceiveMemoryWarning");
  v1 = objc_msgSend(v0, "selectedViewController");
  v2 = MiniPlayerHostingTabBarController.tabViewControllers.getter();
  if ((unint64_t)v2 >> 62)
    goto LABEL_34;
  for (i = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10); i; i = _CocoaArrayWrapper.endIndex.getter(v29))
  {
    v4 = 0;
    v5 = v2 & 0xC000000000000001;
    v6 = v2 & 0xFFFFFFFFFFFFFF8;
    v7 = v2 + 32;
    v34 = v2;
    v35 = v1;
    v32 = v2 & 0xC000000000000001;
    v33 = i;
    v30 = v2 + 32;
    v31 = v2 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v5)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v2);
      }
      else
      {
        if (v4 >= *(_QWORD *)(v6 + 16))
          goto LABEL_32;
        v9 = *(id *)(v7 + 8 * v4);
      }
      v10 = v9;
      if (__OFADD__(v4++, 1))
        break;
      if (v1)
      {
        v8 = v1;
        if (v9 == v1)
          goto LABEL_5;
      }
      v12 = objc_opt_self(BSUIRootBarWrapperViewController);
      v13 = swift_dynamicCastObjCClass(v10, v12);
      if (v13)
      {
        v14 = (void *)v13;
        v8 = v10;
        v15 = objc_msgSend(v14, "contentNavigationController");
        v16 = v8;
        if (v15)
        {
          v36 = v15;
          v17 = objc_msgSend(v15, "viewControllers");
          v18 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
          v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

          if ((unint64_t)v19 >> 62)
          {
            if (v19 < 0)
              v28 = v19;
            else
              v28 = v19 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v19);
            v2 = _CocoaArrayWrapper.endIndex.getter(v28);
            swift_bridgeObjectRelease(v19);
            if (v2)
            {
LABEL_17:
              if (v2 < 1)
                goto LABEL_33;
              for (j = 0; j != v2; ++j)
              {
                if ((v19 & 0xC000000000000001) != 0)
                  v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(j, v19);
                else
                  v21 = *(id *)(v19 + 8 * j + 32);
                v22 = v21;
                v23 = objc_opt_self(TUIFeedViewController);
                v24 = swift_dynamicCastObjCClass(v22, v23);
                if (v24)
                {
                  v25 = (void *)v24;
                  v26 = v22;
                  v27 = String._bridgeToObjectiveC()();
                  objc_msgSend(v25, "suspendAndTeardownForReason:", v27);

                }
              }
            }
          }
          else
          {
            v2 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v2)
              goto LABEL_17;
          }

          swift_bridgeObjectRelease(v19);
          v1 = v35;
          v16 = v36;
          i = v33;
          v2 = v34;
          v6 = v31;
          v5 = v32;
          v7 = v30;
        }

        goto LABEL_5;
      }
      v8 = v10;
LABEL_5:

      if (v4 == i)
        goto LABEL_38;
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    if (v2 < 0)
      v29 = v2;
    else
      v29 = v2 & 0xFFFFFFFFFFFFFF8;
  }
LABEL_38:

  swift_bridgeObjectRelease(v2);
}

Swift::Bool __swiftcall TabBarController.bc_analyticsVisibility(ofChild:)(UIViewController ofChild)
{
  void *v1;
  objc_class *v3;
  objc_class *v4;

  v3 = (objc_class *)objc_msgSend(v1, "selectedViewController");
  if (v3)
  {
    v4 = v3;

    LOBYTE(v3) = v4 == ofChild.super.super.isa;
  }
  return (char)v3;
}

UIViewController __swiftcall TabBarController.bc_contextualPresenting()()
{
  void *v0;

  return (UIViewController)v0;
}

void sub_1004F3788()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  Class isa;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for DispatchPredicate(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v5 = static OS_dispatch_queue.main.getter(v6);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  v7 = _dispatchPreconditionTest(_:)(v5);
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    swift_once(&qword_1009CE750, sub_10006BB90);
    goto LABEL_4;
  }
  type metadata accessor for HotReloadController(0);
  v8 = (void *)static HotReloadController.shared.getter();
  v9 = dispatch thunk of HotReloadController.isHotReloading.getter();

  if ((v9 & 1) != 0)
    return;
  if (qword_1009CE750 != -1)
    goto LABEL_9;
LABEL_4:
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100048F64(v10, (uint64_t)qword_1009E8770);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Deleting items due to JSABridge reload", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = *(_QWORD *)&v1[OBJC_IVAR___BKTabBarController_items];
  *(_QWORD *)&v1[OBJC_IVAR___BKTabBarController_items] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v15);
  sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setViewControllers:", isa);

}

uint64_t sub_1004F3980(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30[2];

  v3 = v2;
  v6 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v7 = (void *)static OS_dispatch_queue.main.getter(v6);
  v8 = &_dispatch_main_q;
  v9 = &_dispatch_main_q;
  v10 = v7;
  v11 = &_dispatch_main_q;
  if (v10 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v8 = v10;
  }

  v12 = *(_QWORD *)(v3 + OBJC_IVAR___BKTabBarController_items);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(v12);
  v14 = sub_1002C5A9C(v13, a1, a2);
  v16 = v15;
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(a2);
  v17 = v16 & 1;
  if (qword_1009CE750 != -1)
    swift_once(&qword_1009CE750, sub_10006BB90);
  v18 = type metadata accessor for Logger(0);
  sub_100048F64(v18, (uint64_t)qword_1009E8770);
  v19 = swift_bridgeObjectRetain_n(a2, 2);
  v20 = Logger.logObject.getter(v19);
  v24 = static os_log_type_t.debug.getter(v20, v21, v22, v23);
  if (os_log_type_enabled(v20, v24))
  {
    v25 = swift_slowAlloc(22, -1);
    v26 = swift_slowAlloc(32, -1);
    v30[0] = v26;
    *(_DWORD *)v25 = 136446466;
    swift_bridgeObjectRetain(a2);
    v29 = sub_100040F58(a1, a2, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease_n(a2, 3);
    *(_WORD *)(v25 + 12) = 2048;
    if (v17)
      v27 = -1;
    else
      v27 = v14;
    v29 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30, v25 + 14, v25 + 22);
    _os_log_impl((void *)&_mh_execute_header, v20, v24, "Index of RootBarItem with identifier %{public}s: %ld", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  return v14;
}

uint64_t sub_1004F3C00(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[2];
  void *v15;

  v2 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v3 = (void *)static OS_dispatch_queue.main.getter(v2);
  v4 = &_dispatch_main_q;
  v5 = &_dispatch_main_q;
  v6 = v3;
  v7 = &_dispatch_main_q;
  if (v6 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v4 = v6;
  }

  v8 = MiniPlayerHostingTabBarController.tabViewControllers.getter();
  v14[0] = a1;
  v14[1] = v8;
  v9 = sub_10004CFD4(&qword_1009E8868);
  v10 = sub_100030B34((unint64_t *)&unk_1009E8870, &qword_1009E8868, (uint64_t)&protocol conformance descriptor for [A]);
  Collection.subscript.getter(&v15, v14, v9, v10);
  swift_bridgeObjectRelease(v8);
  v11 = v15;
  if (v15)
  {
    v12 = objc_opt_self(BSUIRootBarWrapperViewController);
    result = swift_dynamicCastObjCClass(v11, v12);
    if (result)
      return result;

  }
  return 0;
}

uint64_t *NSNotificationName.rootBarReady.unsafeMutableAddressor()
{
  if (qword_1009CE748 != -1)
    swift_once(&qword_1009CE748, sub_100064CCC);
  return &static NSNotificationName.rootBarReady;
}

id TabBarController.preferredStatusBarStyle.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v1 = objc_msgSend(v0, "selectedViewController");
  if (v1)
  {
    v2 = v1;
    v3 = objc_opt_self(BSUIRootBarWrapperViewController);
    v4 = (void *)swift_dynamicCastObjCClass(v2, v3);
    if (v4)
    {
      v5 = objc_msgSend(v4, "contentNavigationController");
      if (v5)
      {
        v6 = v5;
        v7 = objc_msgSend(v5, "preferredStatusBarStyle");

      }
      else
      {
        v7 = 0;
      }
      goto LABEL_10;
    }

  }
  v8 = objc_msgSend(v0, "selectedViewController");
  if (v8)
  {
    v2 = v8;
    v7 = objc_msgSend(v8, "preferredStatusBarStyle");
LABEL_10:

    return v7;
  }
  return 0;
}

BOOL TabBarController.prefersStatusBarHidden.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend(v0, "bc_windowForViewController");
  v2 = objc_msgSend(v1, "windowScene");

  if (v2)
  {
    v5 = objc_msgSend(v2, "interfaceOrientation");

    if ((isPad(v6, v7) & 1) != 0)
      return 0;
  }
  else
  {
    v5 = 0;
    if ((isPad(v3, v4) & 1) != 0)
      return 0;
  }
  return sub_10004DFF4((uint64_t)v5);
}

BOOL sub_1004F3EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100009E04(0, (unint64_t *)&unk_1009E8A70, BCCardStackViewController_ptr);
  v9 = (void *)UIViewController.firstVisibleChildViewController<A>(of:includePresented:)(v8, 1, v8);
  if (v9)
  {
    v10 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v11 = static OS_dispatch_queue.main.getter(v10);
    v22 = v1;
    v12 = (void *)v11;
    v13 = swift_allocObject(&unk_10090C410, 24, 7);
    swift_unknownObjectWeakInit(v13 + 16, v9);
    aBlock[4] = sub_1004F7CAC;
    v24 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_10090C428;
    v14 = _Block_copy(aBlock);
    v21 = v4;
    v15 = v14;
    v16 = swift_release(v24);
    static DispatchQoS.unspecified.getter(v16);
    aBlock[0] = _swiftEmptyArrayStorage;
    v17 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v18 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v19 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v0, v17);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v21);
  }
  return v9 != 0;
}

void sub_1004F4140(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  void *v4;
  _QWORD aBlock[6];
  _BYTE v6[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    aBlock[4] = BKAppDelegate.enableMetricsInspectorOnDebugMode();
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_10090C450;
    v4 = _Block_copy(aBlock);
    objc_msgSend(v3, "popAllCardsAnimated:completion:", 1, v4);
    _Block_release(v4);

  }
}

id _s5Books33MiniPlayerHostingTabBarControllerC4tabsACSaySo5UITabCG_tcfC_0(uint64_t a1)
{
  objc_class *v1;
  id v3;
  Class isa;
  id v5;

  v3 = objc_allocWithZone(v1);
  sub_100009E04(0, &qword_1009E87C8, UITab_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v5 = objc_msgSend(v3, "initWithTabs:", isa, swift_bridgeObjectRelease(a1).n128_f64[0]);

  return v5;
}

void TabBarController.init(tabs:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.TabBarController", 22, "init(tabs:)", 11, 0);
  __break(1u);
}

void TabBarController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.TabBarController", 22, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

double sub_1004F4324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double result;

  sub_1001FE9A0(v0 + OBJC_IVAR___BKTabBarController_viewControllerProvider);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR___BKTabBarController_rootBarEventSubject));
  v1 = v0 + OBJC_IVAR___BKTabBarController__cachedSelectedItem;
  v2 = sub_10004CFD4(&qword_1009D33C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1001FE9A0(v0 + OBJC_IVAR___BKTabBarController__rootBarCoordinator);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR___BKTabBarController_items));

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR___BKTabBarController_cancellables)).n128_u64[0];
  return result;
}

id TabBarController.__deallocating_deinit()
{
  return sub_10025965C(0, (uint64_t (*)(void))type metadata accessor for TabBarController);
}

Swift::Void __swiftcall TabBarController.tabBarController(_:didSelect:)(UITabBarController _, UIViewController didSelect)
{
  sub_1004F7838(didSelect.super.super.isa);
}

UIInterfaceOrientationMask __swiftcall TabBarController.tabBarControllerSupportedInterfaceOrientations(_:)(UITabBarController a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = -[objc_class selectedViewController](a1.super.super.super.isa, "selectedViewController");
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(v1, "supportedInterfaceOrientations");

    return (UIInterfaceOrientationMask)v4;
  }
  else if (isPad(0, v2))
  {
    return 30;
  }
  else
  {
    return 2;
  }
}

Swift::OpaquePointer_optional __swiftcall TabBarController.flowControllers()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  Swift::Bool v4;
  void *v5;
  Swift::OpaquePointer_optional result;

  v1 = sub_10004CFD4(&qword_1009D4B80);
  v2 = swift_allocObject(v1, 64, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v2 + 56) = type metadata accessor for TabBarController(0);
  *(_QWORD *)(v2 + 32) = v0;
  v3 = v0;
  v5 = (void *)v2;
  result.value._rawValue = v5;
  result.is_nil = v4;
  return result;
}

uint64_t TabBarController.bc_stringForReturnToRootBarItem.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  Swift::String v9;

  v0 = TabBarController.selectedItem.getter();
  v1 = (void *)v0;
  if (!v0)
    return 0;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
  v2 = *(void **)(v0 + OBJC_IVAR___BKRootBarItem_identifier + 8);
  swift_bridgeObjectRetain_n(v2, 2);

  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v3, (unint64_t)v2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(v2);
    v6 = 14;
  }
  else
  {
    v9._countAndFlagsBits = v3;
    v9._object = v2;
    v6 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v9);
    if (v6 == 16)
      v6 = 15;
  }
  v7 = sub_100415594(v6);
  swift_bridgeObjectRelease(v2);
  return v7;
}

id TabBarController.activeRootBarWrapperViewController.getter()
{
  void *v0;
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend(v0, "selectedViewController");
  if (result)
  {
    v2 = result;
    v3 = objc_opt_self(BSUIRootBarWrapperViewController);
    result = (id)swift_dynamicCastObjCClass(v2, v3);
    if (!result)
    {

      return 0;
    }
  }
  return result;
}

_QWORD *TabBarController.transferableNavigationControllers()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  char *v13;
  char *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD v34[2];
  _QWORD *v35;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKTabBarController_items);
  if (!((unint64_t)v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BKTabBarController_items));
    if (v2)
      goto LABEL_3;
LABEL_25:
    swift_bridgeObjectRelease(v1);
    return _swiftEmptyDictionarySingleton;
  }
  if (v1 < 0)
    v31 = *(_QWORD *)(v0 + OBJC_IVAR___BKTabBarController_items);
  else
    v31 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v2 = _CocoaArrayWrapper.endIndex.getter(v31);
  if (!v2)
    goto LABEL_25;
LABEL_3:
  result = (_QWORD *)sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v4 = 0;
    v33 = _swiftEmptyDictionarySingleton;
    v32 = v1 & 0xC000000000000001;
    do
    {
      if (v32)
        v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      else
        v13 = (char *)*(id *)(v1 + 8 * v4 + 32);
      v14 = v13;
      v15 = (void *)static OS_dispatch_queue.main.getter(v13);
      v16 = &_dispatch_main_q;
      v17 = v15;
      v18 = &_dispatch_main_q;
      v19 = &_dispatch_main_q;
      if (v17 == &_dispatch_main_q)
      {
        +[NSThread isMainThread](NSThread, "isMainThread");
        v19 = v17;
      }

      v21 = (void *)static OS_dispatch_queue.main.getter(v20);
      v22 = &_dispatch_main_q;
      v23 = v21;
      v24 = &_dispatch_main_q;
      v25 = &_dispatch_main_q;
      if (v23 == &_dispatch_main_q)
      {
        +[NSThread isMainThread](NSThread, "isMainThread");
        v25 = v23;
      }

      v26 = MiniPlayerHostingTabBarController.tabViewControllers.getter();
      v34[0] = v4;
      v34[1] = v26;
      v27 = sub_10004CFD4(&qword_1009E8868);
      v28 = sub_100030B34((unint64_t *)&unk_1009E8870, &qword_1009E8868, (uint64_t)&protocol conformance descriptor for [A]);
      Collection.subscript.getter(&v35, v34, v27, v28);
      swift_bridgeObjectRelease(v26);
      v29 = v35;
      if (v35)
      {
        v30 = objc_opt_self(BSUIRootBarWrapperViewController);
        v5 = (void *)swift_dynamicCastObjCClass(v29, v30);
        if (!v5)

      }
      else
      {
        v5 = 0;
      }
      v6 = objc_msgSend(v5, "contentNavigationController", v32);

      if (v6)
      {
        v7 = v2;
        v8 = *(_QWORD *)&v14[OBJC_IVAR___BKRootBarItem_identifier];
        v9 = *(_QWORD *)&v14[OBJC_IVAR___BKRootBarItem_identifier + 8];
        swift_bridgeObjectRetain(v9);
        v10 = v6;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
        v35 = v33;
        sub_1002C3A10((uint64_t)v10, v8, v9, isUniquelyReferenced_nonNull_native);
        v33 = v35;

        v12 = v9;
        v2 = v7;
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(0x8000000000000000);
      }
      else
      {

      }
      ++v4;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease(v1);
    return v33;
  }
  return result;
}

Swift::Void __swiftcall TabBarController.prepareNavigationControllerForTransferRootBarItem(with:)(Swift::String with)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  double v32;
  uint64_t v33;
  uint64_t v34;

  object = with._object;
  countAndFlagsBits = with._countAndFlagsBits;
  v3 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v4 = (void *)static OS_dispatch_queue.main.getter(v3);
  v5 = &_dispatch_main_q;
  v6 = &_dispatch_main_q;
  v7 = v4;
  v8 = &_dispatch_main_q;
  if (v7 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v5 = v7;
  }

  v9 = sub_1004F3980(countAndFlagsBits, (unint64_t)object);
  if ((v10 & 1) == 0)
  {
    v11 = sub_1004F3C00(v9);
    if (v11)
    {
      v12 = (void *)v11;
      v13 = TabBarController.selectedItem.getter();
      if (v13)
      {
        v14 = (void *)v13;
        v16 = *(_QWORD *)(v13 + OBJC_IVAR___BKRootBarItem_identifier);
        v15 = *(void **)(v13 + OBJC_IVAR___BKRootBarItem_identifier + 8);
        swift_bridgeObjectRetain(v15);

        if (v16 == countAndFlagsBits && v15 == object)
        {
          v19 = swift_bridgeObjectRelease(object).n128_u64[0];
        }
        else
        {
          v18 = _stringCompareWithSmolCheck(_:_:expecting:)(countAndFlagsBits, object, v16, v15, 0);
          v19 = swift_bridgeObjectRelease(v15).n128_u64[0];
          if ((v18 & 1) == 0)
            goto LABEL_24;
        }
        v20 = objc_msgSend(v12, "contentNavigationController", *(double *)&v19);
        if (v20)
        {
          v21 = v20;
          v22 = objc_msgSend(v20, "topViewController");

          if (v22)
          {
            v23 = objc_opt_self(BKLibraryBookshelfCollectionViewController);
            v24 = (void *)swift_dynamicCastObjCClass(v22, v23);
            if (v24)
            {
              v25 = v24;
              if (objc_msgSend(v24, "isEditing"))
              {
                if (qword_1009CE758 != -1)
                  swift_once(&qword_1009CE758, sub_1004F6D40);
                v26 = type metadata accessor for Logger(0);
                sub_100048F64(v26, (uint64_t)qword_1009E8788);
                v27 = swift_bridgeObjectRetain_n(object, 2);
                v28 = Logger.logObject.getter(v27);
                v29 = static os_log_type_t.default.getter(v28);
                if (os_log_type_enabled(v28, v29))
                {
                  v30 = (uint8_t *)swift_slowAlloc(12, -1);
                  v31 = swift_slowAlloc(32, -1);
                  v34 = v31;
                  *(_DWORD *)v30 = 136446210;
                  swift_bridgeObjectRetain(object);
                  v33 = sub_100040F58(countAndFlagsBits, (unint64_t)object, &v34);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v30 + 4, v30 + 12);
                  swift_bridgeObjectRelease_n(object, 3);
                  _os_log_impl((void *)&_mh_execute_header, v28, v29, "Resetting tab bar appearance for edit mode in %{public}s tab", v30, 0xCu);
                  swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v31, -1, -1);
                  swift_slowDealloc(v30, -1, -1);

                }
                else
                {

                  *(_QWORD *)&v32 = swift_bridgeObjectRelease_n(object, 2).n128_u64[0];
                }
                objc_msgSend(v25, "updateTabBarControllerForEditing:", 0, v32);
              }
            }

          }
        }
      }
LABEL_24:
      objc_msgSend(v12, "setContentNavigationController:", 0);

    }
  }
}

void TabBarController.transfer(from:)(NSObject *a1, uint64_t (**a2)(NSObject *, char *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  os_log_t v25;
  uint8_t *v26;
  NSObject *ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t (*__ptr32 *v36)();
  void *v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  NSObject *v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (**v71)(NSObject *, char *);
  uint64_t (*v72)(NSObject *, char *);
  __n128 v73;
  double v74;
  id v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  NSObject *v86;
  Class isa;
  os_log_type_t v88;
  uint64_t v89;
  _DWORD *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  _DWORD *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  void *v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  void *v115;
  id v116;
  id v117;
  id v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  void *v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  NSObject *v132;
  os_log_type_t v133;
  uint64_t v134;
  uint8_t *v135;
  unint64_t *v136;
  uint8_t *v137;
  id v138;
  id v139;
  void *v140;
  id v141;
  uint64_t v142;
  NSString v143;
  double v144;
  uint64_t v145;
  id v146;
  id v147;
  double v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  void *v153;
  void *v154;
  id v155;
  id v156;
  id v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void *v162;
  id v163;
  char *v164;
  NSObject *v165;
  os_log_type_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  char *v173;
  NSObject *v174;
  os_log_type_t v175;
  uint64_t v176;
  uint8_t *v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  os_log_t v182;
  id v183;
  char *v184;
  char *v185;
  void *v186;
  uint64_t v187;
  NSObject *v188;
  uint64_t v189;
  uint64_t v190;
  unsigned __int8 v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unsigned __int8 v195;
  char v196;
  uint64_t *v197;
  uint64_t v198;
  NSObject *v199;
  os_log_type_t v200;
  uint8_t *v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  void *v206;
  id v207;
  id v208;
  id v209;
  void *v210;
  void *v211;
  uint64_t v212;
  char v213;
  uint64_t v214;
  void *v215;
  id v216;
  id v217;
  id v218;
  uint64_t v219;
  char v220;
  void *v221;
  double v222;
  id v223;
  void *v224;
  id v225;
  uint64_t v226;
  void *v227;
  uint64_t v228;
  void *v229;
  uint64_t v230;
  NSObject *v231;
  os_log_type_t v232;
  uint8_t *v233;
  _BYTE *v234;
  uint64_t v235;
  double v236;
  __n128 v237;
  uint64_t v238;
  __n128 v239;
  uint64_t v240;
  id v241;
  uint64_t v242;
  id v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  NSObject *v247;
  uint64_t v248;
  char *v249;
  unint64_t *v250;
  uint64_t *v251;
  __int128 *v252;
  uint8_t *v253;
  unint64_t *v254;
  uint8_t *v255;
  uint64_t v256;
  os_log_t v257;
  uint64_t (**v258)(NSObject *, char *);
  __n128 v259;
  NSObject *v260;
  char *v261;
  uint64_t v262;
  id v263;
  NSObject *v264;
  uint64_t v265;
  uint64_t *v266;
  uint64_t v267;
  uint64_t v268[3];
  uint64_t v269;
  unint64_t v270;
  uint64_t v271;
  _BYTE *v272;
  __int128 v273;
  __int128 v274;
  uint64_t v275;
  char v276[8];
  __int128 v277;
  Swift::String v278;

  v3 = v2;
  v258 = a2;
  v5 = type metadata accessor for Logger(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v245 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1009CE758 != -1)
    swift_once(&qword_1009CE758, sub_1004F6D40);
  v9 = sub_100048F64(v5, (uint64_t)qword_1009E8788);
  v248 = v6;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v246 = v5;
  v10(v8, v9, v5);
  v11 = swift_unknownObjectRetain_n(a1, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  v14 = os_log_type_enabled(v12, v13);
  v265 = v3;
  v257 = a1;
  if (v14)
  {
    v15 = (uint64_t)a1;
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v277 = v17;
    *(_DWORD *)v16 = 136315138;
    v268[0] = v15;
    v268[1] = (uint64_t)v258;
    swift_unknownObjectRetain(v15);
    v18 = sub_10004CFD4((uint64_t *)&unk_1009E8880);
    v19 = sub_10004CFD4((uint64_t *)&unk_1009D7980);
    if (swift_dynamicCast(&v273, v268, v18, v19, 6))
    {
      v20 = *((_QWORD *)&v274 + 1);
      v21 = v275;
      sub_10003F198(&v273, *((uint64_t *)&v274 + 1));
      v22 = dispatch thunk of CustomStringConvertible.description.getter(v20, v21);
      v24 = v23;
      _s5Books15CurrentPageViewVwxx_0(&v273);
    }
    else
    {
      v275 = 0;
      v273 = 0u;
      v274 = 0u;
      sub_100010960((uint64_t)&v273, &qword_1009E8890);
      v24 = 0xE90000000000003ELL;
      v22 = 0x6E776F6E6B6E753CLL;
    }
    *(_QWORD *)&v273 = sub_100040F58(v22, v24, (uint64_t *)&v277);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v273, (char *)&v273 + 8, v16 + 4, v16 + 12);
    v25 = v257;
    swift_unknownObjectRelease_n(v257, 2);
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Starting to transfer navigation from forwarder %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    v26 = v16;
    a1 = v25;
    swift_slowDealloc(v26, -1, -1);

    v3 = v265;
  }
  else
  {
    swift_unknownObjectRelease_n(a1, 2);

  }
  v245 = 0x7972617262696CLL;
  ObjectType = swift_getObjectType();
  v28 = (uint64_t)a1;
  v29 = (uint64_t)v258;
  v30 = v258[2](ObjectType, (char *)v258);
  v272 = (_BYTE *)v30;
  v31 = *(_QWORD *)(v29 + 8);
  v32 = swift_bridgeObjectRetain(v30);
  v256 = (uint64_t)ObjectType;
  v33 = ((uint64_t (*)(NSObject *, uint64_t, __n128))v31)(ObjectType, v29, v32);
  v34 = (uint64_t)&off_1009E8000;
  v35 = &_dispatch_main_q;
  v36 = &off_10070C000;
  v261 = v8;
  v247 = v33;
  if (!v33)
  {
    swift_bridgeObjectRelease(v30);
    goto LABEL_39;
  }
  v37 = (void *)v33;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v29 = v37;
  v38 = (void *)static OS_dispatch_queue.main.getter(v29);
  v39 = &_dispatch_main_q;
  v31 = v38;
  v40 = &_dispatch_main_q;
  v41 = &_dispatch_main_q;
  if ((_UNKNOWN *)v31 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v41 = (void *)v31;
  }

  v28 = v265;
  v42 = sub_1004F3980(0x7972617262696CLL, 0xE700000000000000);
  if ((v43 & 1) != 0)
    goto LABEL_34;
  v44 = v42;
  v45 = (void *)static OS_dispatch_queue.main.getter(v42);
  v46 = &_dispatch_main_q;
  v47 = v45;
  v48 = &_dispatch_main_q;
  v49 = &_dispatch_main_q;
  if (v47 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v49 = v47;
  }

  v268[0] = *(_QWORD *)(v265 + OBJC_IVAR___BKTabBarController_items);
  *(_QWORD *)&v277 = v44;
  ObjectType = sub_10004CFD4(&qword_1009E8800);
  v50 = sub_100030B34(&qword_1009E8808, &qword_1009E8800, (uint64_t)&protocol conformance descriptor for [A]);
  v28 = (uint64_t)v268;
  Collection.subscript.getter(&v273, &v277, ObjectType, v50);
  v31 = v273;
  if (!(_QWORD)v273)
  {
LABEL_34:

    swift_bridgeObjectRelease(v30);
LABEL_38:
    v3 = v265;
    goto LABEL_39;
  }
  if ((objc_msgSend((id)v29, "isLibraryCollection") & 1) == 0
    || (v28 = *(_QWORD *)(v29 + OBJC_IVAR___BKRootBarItem_identifier),
        ObjectType = *(NSObject **)(v29 + OBJC_IVAR___BKRootBarItem_identifier + 8),
        v51 = (uint64_t *)(v31 + OBJC_IVAR___BKRootBarItem_identifier),
        v52 = *(_QWORD *)(v31 + OBJC_IVAR___BKRootBarItem_identifier),
        v53 = *(NSObject **)(v31 + OBJC_IVAR___BKRootBarItem_identifier + 8),
        v28 == v52)
    && ObjectType == v53
    || (v266 = (uint64_t *)(v29 + OBJC_IVAR___BKRootBarItem_identifier),
        (_stringCompareWithSmolCheck(_:_:expecting:)(v28, ObjectType, v52, v53, 0) & 1) != 0)
    || !*(_QWORD *)(v30 + 16))
  {
LABEL_37:
    swift_bridgeObjectRelease(v30);

    goto LABEL_38;
  }
  swift_bridgeObjectRetain(ObjectType);
  v54 = v28;
  v28 = v30;
  v55 = sub_10004CE80(v54, (uint64_t)ObjectType);
  if ((v56 & 1) == 0)
  {
    swift_bridgeObjectRelease(ObjectType);
    goto LABEL_37;
  }
  v264 = *(id *)(*(_QWORD *)(v30 + 56) + 8 * v55);
  swift_bridgeObjectRelease(ObjectType);
  swift_bridgeObjectRelease(v30);
  v57 = *v51;
  ObjectType = v51[1];
  swift_bridgeObjectRetain(ObjectType);
  v59 = (void *)static OS_dispatch_queue.main.getter(v58);
  v60 = &_dispatch_main_q;
  v61 = v59;
  v62 = &_dispatch_main_q;
  v63 = &_dispatch_main_q;
  if (v61 == &_dispatch_main_q)
  {
    +[NSThread isMainThread](NSThread, "isMainThread");
    v63 = v61;
  }

  v3 = v265;
  v28 = v265;
  v64 = sub_1004F3980(v57, (unint64_t)ObjectType);
  if ((v65 & 1) != 0)
  {
LABEL_174:

    swift_bridgeObjectRelease(ObjectType);
    goto LABEL_39;
  }
  v28 = sub_1004F3C00(v64);
  swift_bridgeObjectRelease(ObjectType);
  if (!v28)
  {
LABEL_176:

    goto LABEL_181;
  }
  v263 = (id)v28;
  v66 = *v51;
  v67 = v51[1];
  swift_bridgeObjectRetain(v67);
  v68 = (void *)sub_1002BD924(v66, v67);
  swift_bridgeObjectRelease(v67);

  v69 = *v266;
  v70 = v266[1];
  v71 = v258;
  v72 = v258[3];
  v73 = swift_bridgeObjectRetain(v70);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t (**)(NSObject *, char *), __n128))v72)(v69, v70, v256, v71, v73);
  *(_QWORD *)&v74 = swift_bridgeObjectRelease(v70).n128_u64[0];
  v75 = -[NSObject viewControllers](v264, "viewControllers", v74);
  v76 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v75, v76);

  *(_QWORD *)&v273 = v28;
  v77 = sub_1004F73FC();
  v78 = (uint64_t)v77;
  if ((unint64_t)v28 >> 62)
    goto LABEL_194;
  v79 = v77;
  v3 = v265;
  do
  {
    v262 = v76;
    v260 = v78;
    sub_1002C35E8(0, 0, v78);
    v80 = (void *)sub_1004F6B7C();
    if (v80)
    {
      v81 = (uint64_t)v80;
      v82 = objc_msgSend(v80, "libraryCollectionListViewControllerWithAssetIDs:knownAssetTypes:knownStoreAssetIDs:containsSeriesContainer:showDivider:", 0, 0, 0, 0, 0);
      v78 = (uint64_t)v82;
      v28 = v273;
      if ((unint64_t)v273 >> 62)
        goto LABEL_199;
      v83 = *(_QWORD *)((v273 & 0xFFFFFFFFFFFFF8) + 0x10);
      v84 = v82;
      if (v83 >= 1)
        goto LABEL_31;
      goto LABEL_203;
    }
LABEL_32:
    v85 = v273;
    v86 = v264;
    isa = Array._bridgeToObjectiveC()().super.isa;
    -[NSObject setViewControllers:](v86, "setViewControllers:", isa, swift_bridgeObjectRelease(v85).n128_f64[0]);

    v78 = (uint64_t)v263;
    v264 = v86;
    objc_msgSend(v263, "setContentNavigationController:", v86);
    v29 = (uint64_t)(id)v29;
    ObjectType = Logger.logObject.getter(v29);
    v88 = static os_log_type_t.default.getter(ObjectType);
    v28 = v88;
    v89 = (uint64_t)ObjectType;
    if (os_log_type_enabled(ObjectType, v88))
    {
      v90 = (_DWORD *)swift_slowAlloc(12, -1);
      v262 = swift_slowAlloc(32, -1);
      v268[0] = v262;
      v91 = *((_QWORD *)v36 + 300);
      v259.n128_u64[0] = (unint64_t)v90;
      *v90 = v91;
      v255 = (uint8_t *)(v90 + 1);
      v92 = *v266;
      v93 = v266[1];
      swift_bridgeObjectRetain(v93);
      *(_QWORD *)&v277 = sub_100040F58(v92, v93, v268);
      v94 = v90 + 3;
      v3 = v265;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v277, (char *)&v277 + 8, v255, v94);

      swift_bridgeObjectRelease(v93);
      v95 = v28;
      v28 = v259.n128_u64[0];
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v89, v95, "Converted the nav stack of '%{public}s' item from navigation forwarder to library tab", (uint8_t *)v259.n128_u64[0], 0xCu);
      ObjectType = v262;
      swift_arrayDestroy(v262, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(ObjectType, -1, -1);
      swift_slowDealloc(v28, -1, -1);

    }
    else
    {
LABEL_179:

    }
LABEL_181:

LABEL_39:
    v96 = *((_QWORD *)v272 + 8);
    v263 = v272 + 64;
    v97 = 1 << v272[32];
    v98 = -1;
    if (v97 < 64)
      v98 = ~(-1 << v97);
    v78 = v98 & v96;
    v262 = *(_QWORD *)(v34 + 2040);
    v264 = ((unint64_t)(v97 + 63) >> 6);
    v250 = &v270;
    v252 = &v274;
    v251 = &v275;
    v266 = (uint64_t *)v272;
    v99 = swift_bridgeObjectRetain(v272);
    v89 = 0;
    v99.n128_u64[0] = *((_QWORD *)v36 + 300);
    v259 = v99;
    v249 = (char *)&type metadata for Any + 8;
    while (v78)
    {
      v100 = __clz(__rbit64(v78));
      v78 &= v78 - 1;
      v101 = v100 | (v89 << 6);
LABEL_59:
      v105 = v266[6] + 16 * v101;
      v36 = *(uint64_t (*__ptr32 **)())v105;
      v31 = *(_QWORD *)(v105 + 8);
      v106 = *(void **)(v266[7] + 8 * v101);
      v34 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      swift_bridgeObjectRetain(v31);
      v29 = v106;
      v107 = (void *)static OS_dispatch_queue.main.getter(v29);
      v108 = &_dispatch_main_q;
      v109 = v107;
      v110 = &_dispatch_main_q;
      v111 = &_dispatch_main_q;
      if (v109 == &_dispatch_main_q)
      {
        +[NSThread isMainThread](NSThread, "isMainThread");
        v111 = v109;
      }

      v28 = v3;
      v112 = sub_1004F3980((uint64_t)v36, v31);
      if ((v113 & 1) != 0)
        goto LABEL_42;
      v114 = v112;
      v115 = (void *)static OS_dispatch_queue.main.getter(v112);
      v116 = &_dispatch_main_q;
      v117 = v115;
      v118 = &_dispatch_main_q;
      v119 = &_dispatch_main_q;
      if (v117 == &_dispatch_main_q)
      {
        +[NSThread isMainThread](NSThread, "isMainThread");
        v119 = v117;
      }

      v269 = *(_QWORD *)(v3 + v262);
      v271 = v114;
      v120 = sub_10004CFD4(&qword_1009E8800);
      v121 = sub_100030B34(&qword_1009E8808, &qword_1009E8800, (uint64_t)&protocol conformance descriptor for [A]);
      v28 = (uint64_t)&v269;
      v122 = Collection.subscript.getter(v268, &v271, v120, v121);
      ObjectType = v268[0];
      if (!v268[0])
      {
LABEL_42:
        swift_bridgeObjectRelease(v31);

      }
      else
      {
        v123 = (void *)static OS_dispatch_queue.main.getter(v122);
        v124 = &_dispatch_main_q;
        v125 = v123;
        v126 = &_dispatch_main_q;
        v127 = &_dispatch_main_q;
        if (v125 == &_dispatch_main_q)
        {
          +[NSThread isMainThread](NSThread, "isMainThread");
          v127 = v125;
        }

        v28 = v3;
        v128 = sub_1004F3980((uint64_t)v36, v31);
        if ((v129 & 1) != 0 || (v28 = v3, (v130 = sub_1004F3C00(v128)) == 0))
        {
          swift_bridgeObjectRelease(v31);

          v29 = (uint64_t)ObjectType;
        }
        else
        {
          v34 = v130;
          v260 = ObjectType;
          v131 = swift_bridgeObjectRetain_n(v31, 2);
          v132 = Logger.logObject.getter(v131);
          v133 = static os_log_type_t.default.getter(v132);
          if (os_log_type_enabled(v132, v133))
          {
            v134 = swift_slowAlloc(12, -1);
            v255 = (uint8_t *)v34;
            v135 = (uint8_t *)v134;
            v254 = (unint64_t *)swift_slowAlloc(32, -1);
            v268[0] = (uint64_t)v254;
            *(_DWORD *)v135 = v259.n128_u32[0];
            v253 = v135 + 4;
            swift_bridgeObjectRetain(v31);
            v269 = sub_100040F58((uint64_t)v36, v31, v268);
            v3 = v265;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v269, v250, v253, v135 + 12);
            swift_bridgeObjectRelease_n(v31, 3);
            _os_log_impl((void *)&_mh_execute_header, v132, v133, "Transferring the '%{public}s' item from navigation forwarder", v135, 0xCu);
            v136 = v254;
            swift_arrayDestroy(v254, 1, v249);
            swift_slowDealloc(v136, -1, -1);
            v137 = v135;
            v34 = (uint64_t)v255;
            swift_slowDealloc(v137, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v31, 2);
          }

          ((void (*)(uint64_t (*__ptr32 *)(), int64_t, uint64_t))v258[3])(v36, v31, v256);
          v138 = objc_msgSend((id)v29, "viewControllers", swift_bridgeObjectRelease(v31).n128_f64[0]);
          v31 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
          v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v138, v31);

          if ((unint64_t)v28 >> 62)
          {
            if (v28 < 0)
              v145 = v28;
            else
              v145 = v28 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v28);
            ObjectType = _CocoaArrayWrapper.endIndex.getter(v145);
            swift_bridgeObjectRelease(v28);
            if (!ObjectType)
            {
LABEL_83:
              *(_QWORD *)&v144 = swift_bridgeObjectRelease(v28).n128_u64[0];
              goto LABEL_84;
            }
          }
          else
          {
            ObjectType = *(NSObject **)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!ObjectType)
              goto LABEL_83;
          }
          if ((v28 & 0xC000000000000001) != 0)
          {
            v139 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v28);
          }
          else
          {
            if (!*(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
LABEL_178:
              __break(1u);
              goto LABEL_179;
            }
            v139 = *(id *)(v28 + 32);
          }
          v140 = v139;
          v141 = objc_msgSend(v139, "navigationItem", swift_bridgeObjectRelease(v28).n128_f64[0]);

          RootBarItem.title.getter((uint64_t *)&v273);
          v142 = *((_QWORD *)&v273 + 1);
          v277 = *v252;
          sub_100210D88((uint64_t)&v277);
          sub_100025B3C((uint64_t)v251, (uint64_t)v276, &qword_1009D2A80);
          sub_100210D88((uint64_t)v276);
          v143 = String._bridgeToObjectiveC()();
          objc_msgSend(v141, "setTitle:", v143, swift_bridgeObjectRelease(v142).n128_f64[0]);

          v3 = v265;
LABEL_84:
          v146 = objc_msgSend((id)v29, "viewControllers", v144);
          v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v146, v31);

          if ((unint64_t)v31 >> 62)
          {
            if (v31 < 0)
              v149 = v31;
            else
              v149 = v31 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v31);
            v28 = _CocoaArrayWrapper.endIndex.getter(v149);
            swift_bridgeObjectRelease(v31);
          }
          else
          {
            v28 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          ObjectType = v260;
          if (v28)
          {
            if ((v31 & 0xC000000000000001) != 0)
            {
              v147 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v31);
            }
            else
            {
              if (!*(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_178;
              v147 = *(id *)(v31 + 32);
            }
            v28 = (uint64_t)v147;
            v31 = (int64_t)objc_msgSend(v147, "navigationItem", swift_bridgeObjectRelease(v31).n128_f64[0]);

            objc_msgSend((id)v31, "setLargeTitleDisplayMode:", 1);
          }
          else
          {
            *(_QWORD *)&v148 = swift_bridgeObjectRelease(v31).n128_u64[0];
          }
          objc_msgSend((id)v34, "setContentNavigationController:", v29, v148);

          v29 = v34;
        }
      }
    }
    v102 = v89 + 1;
    if (__OFADD__(v89, 1))
    {
      __break(1u);
      goto LABEL_174;
    }
    if (v102 >= (uint64_t)v264)
      goto LABEL_99;
    v103 = *((_QWORD *)v263 + v102);
    ++v89;
    if (v103)
      goto LABEL_58;
    v89 = v102 + 1;
    if (v102 + 1 >= (uint64_t)v264)
      goto LABEL_99;
    v103 = *((_QWORD *)v263 + v89);
    if (v103)
      goto LABEL_58;
    v89 = v102 + 2;
    if (v102 + 2 >= (uint64_t)v264)
      goto LABEL_99;
    v103 = *((_QWORD *)v263 + v89);
    if (v103)
      goto LABEL_58;
    v104 = v102 + 3;
    if (v104 < (uint64_t)v264)
    {
      v103 = *((_QWORD *)v263 + v104);
      if (!v103)
      {
        while (1)
        {
          v89 = v104 + 1;
          if (__OFADD__(v104, 1))
            break;
          if (v89 >= (uint64_t)v264)
            goto LABEL_99;
          v103 = *((_QWORD *)v263 + v89);
          ++v104;
          if (v103)
            goto LABEL_58;
        }
        __break(1u);
        goto LABEL_176;
      }
      v89 = v104;
LABEL_58:
      v78 = (v103 - 1) & v103;
      v101 = __clz(__rbit64(v103)) + (v89 << 6);
      goto LABEL_59;
    }
LABEL_99:
    swift_release(v266);
    v29 = *(_QWORD *)(v3 + v262);
    if ((unint64_t)v29 >> 62)
    {
      if (v29 < 0)
        v28 = *(_QWORD *)(v3 + v262);
      else
        v28 = v29 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v3 + v262));
      v150 = _CocoaArrayWrapper.endIndex.getter(v28);
    }
    else
    {
      v150 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(v3 + v262));
    }
    v76 = (uint64_t)v261;
    if (v150)
    {
      v266 = (uint64_t *)sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      if (v150 >= 1)
      {
        v151 = 0;
        v264 = (v29 & 0xC000000000000001);
        v254 = &v270;
        v258 = (uint64_t (**)(NSObject *, char *))((char *)&type metadata for Any + 8);
        v260 = v29;
        v263 = (id)v150;
        while (1)
        {
          if (v264)
            v152 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v151, v29);
          else
            v152 = *(id *)(v29 + 8 * v151 + 32);
          v153 = v152;
          v154 = (void *)static OS_dispatch_queue.main.getter(v152);
          v155 = &_dispatch_main_q;
          v156 = v154;
          v157 = &_dispatch_main_q;
          v158 = &_dispatch_main_q;
          if (v156 == &_dispatch_main_q)
          {
            +[NSThread isMainThread](NSThread, "isMainThread");
            v158 = v156;
          }

          v78 = MiniPlayerHostingTabBarController.tabViewControllers.getter();
          v269 = v78;
          v271 = v151;
          v159 = sub_10004CFD4(&qword_1009E8868);
          v160 = sub_100030B34((unint64_t *)&unk_1009E8870, &qword_1009E8868, (uint64_t)&protocol conformance descriptor for [A]);
          Collection.subscript.getter(v268, &v271, v159, v160);
          swift_bridgeObjectRelease(v78);
          v36 = (uint64_t (*__ptr32 *)())v268[0];
          if (!v268[0])
            goto LABEL_117;
          v161 = objc_opt_self(BSUIRootBarWrapperViewController);
          v162 = (void *)swift_dynamicCastObjCClass(v36, v161);
          if (!v162)
            break;
          v34 = (uint64_t)v162;
          v163 = objc_msgSend(v162, "contentNavigationController");

          if (v163)
          {

          }
          else
          {
            v173 = v153;
            v174 = Logger.logObject.getter(v173);
            v175 = static os_log_type_t.default.getter(v174);
            if (os_log_type_enabled(v174, v175))
            {
              v176 = swift_slowAlloc(12, -1);
              v257 = v174;
              v177 = (uint8_t *)v176;
              v178 = swift_slowAlloc(32, -1);
              v256 = v178;
              *(_DWORD *)v177 = v259.n128_u32[0];
              v268[0] = v178;
              v255 = v177 + 4;
              v180 = *(_QWORD *)&v173[OBJC_IVAR___BKRootBarItem_identifier];
              v179 = *(_QWORD *)&v173[OBJC_IVAR___BKRootBarItem_identifier + 8];
              swift_bridgeObjectRetain(v179);
              v181 = v180;
              v29 = (uint64_t)v260;
              v269 = sub_100040F58(v181, v179, v268);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v269, v254, v255, v177 + 12);

              swift_bridgeObjectRelease(v179);
              v182 = v257;
              _os_log_impl((void *)&_mh_execute_header, v257, v175, "Creating nav controller for '%{public}s' tab that the navigation forwarder didn't provide", v177, 0xCu);
              v78 = v256;
              swift_arrayDestroy(v256, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v78, -1, -1);
              swift_slowDealloc(v177, -1, -1);

            }
            else
            {

            }
            v183 = sub_100046B44(v173);
            objc_msgSend((id)v34, "setContentNavigationController:", v183);

            v76 = (uint64_t)v261;
            v150 = (uint64_t)v263;
          }
LABEL_106:
          if (v150 == ++v151)
            goto LABEL_123;
        }

LABEL_117:
        v164 = v153;
        v165 = Logger.logObject.getter(v164);
        v166 = static os_log_type_t.fault.getter(v165);
        v34 = v166;
        if (os_log_type_enabled(v165, v166))
        {
          v78 = swift_slowAlloc(12, -1);
          v167 = swift_slowAlloc(32, -1);
          v268[0] = v167;
          *(_DWORD *)v78 = v259.n128_u32[0];
          v168 = *(_QWORD *)&v164[OBJC_IVAR___BKRootBarItem_identifier];
          v169 = *(_QWORD *)&v164[OBJC_IVAR___BKRootBarItem_identifier + 8];
          swift_bridgeObjectRetain(v169);
          v170 = v168;
          v29 = (uint64_t)v260;
          *(_QWORD *)(v78 + 4) = sub_100040F58(v170, v169, v268);

          v171 = v169;
          v76 = (uint64_t)v261;
          swift_bridgeObjectRelease(v171);
          _os_log_impl((void *)&_mh_execute_header, v165, (os_log_type_t)v34, "RootBarItem '%{public}s' does not have a tab VC", (uint8_t *)v78, 0xCu);
          swift_arrayDestroy(v167, 1, v258);
          v172 = v167;
          v150 = (uint64_t)v263;
          swift_slowDealloc(v172, -1, -1);
          swift_slowDealloc(v78, -1, -1);
        }
        else
        {

        }
        goto LABEL_106;
      }
      __break(1u);
    }
    else
    {
LABEL_123:
      swift_bridgeObjectRelease(v29);
      ObjectType = v247;
      v184 = (char *)v247;
      v28 = v265;
      if (v247)
        goto LABEL_131;
      v184 = (char *)TabBarController.selectedItem.getter();
      if (v184)
        goto LABEL_131;
      v29 = *(_QWORD *)(v28 + v262);
      if (!((unint64_t)v29 >> 62))
      {
        v31 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*(_QWORD *)(v28 + v262));
        if (!v31)
          goto LABEL_191;
        goto LABEL_127;
      }
    }
    if (v29 < 0)
      v238 = v29;
    else
      v238 = v29 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v29);
    v31 = _CocoaArrayWrapper.endIndex.getter(v238);
    if (!v31)
    {
LABEL_191:
      swift_bridgeObjectRelease(v29);
      v239 = swift_bridgeObjectRelease(v272);
      (*(void (**)(uint64_t, uint64_t, __n128))(v248 + 8))(v76, v246, v239);
      return;
    }
LABEL_127:
    if ((v29 & 0xC000000000000001) != 0)
    {
      v185 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v29);
      goto LABEL_130;
    }
    if (*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v185 = (char *)*(id *)(v29 + 32);
LABEL_130:
      v184 = v185;
      swift_bridgeObjectRelease(v29);
LABEL_131:
      v186 = *(void **)&v184[OBJC_IVAR___BKRootBarItem_identifier + 8];
      v269 = *(_QWORD *)&v184[OBJC_IVAR___BKRootBarItem_identifier];
      v187 = v269;
      v270 = (unint64_t)v186;
      v188 = ObjectType;
      swift_bridgeObjectRetain_n(v186, 3);
      _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v187, (unint64_t)v186);
      v190 = v189;
      swift_bridgeObjectRelease(v189);
      if (v190)
      {
        swift_bridgeObjectRelease(v186);
        v191 = 14;
      }
      else
      {
        v278._countAndFlagsBits = v187;
        v278._object = v186;
        v195 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v278);
        if (v195 > 0x10u || ((0x1E01Fu >> v195) & 1) == 0)
        {
          swift_bridgeObjectRelease_n(v186, 2);
          goto LABEL_141;
        }
        v191 = byte_10072A8FA[(char)v195];
      }
      v192 = RootBarItemsProvider.ItemKind.rawValue.getter(v191);
      v194 = v193;
      if (v192 == 0x6D6F74737563 && v193 == 0xE600000000000000)
      {
        swift_bridgeObjectRelease_n(v186, 2);
        swift_bridgeObjectRelease(0xE600000000000000);
      }
      else
      {
        v196 = _stringCompareWithSmolCheck(_:_:expecting:)(v192, v193, 0x6D6F74737563, 0xE600000000000000, 0);
        swift_bridgeObjectRelease(v186);
        swift_bridgeObjectRelease(v194);
        if ((v196 & 1) == 0)
        {
          v245 = v187;
          v28 = v265;
LABEL_142:
          v197 = (uint64_t *)OBJC_IVAR___BKTabBarController_isTransferingFromSidebar;
          *(_BYTE *)(v28 + OBJC_IVAR___BKTabBarController_isTransferingFromSidebar) = 1;
          v198 = swift_bridgeObjectRetain_n(v186, 2);
          v199 = Logger.logObject.getter(v198);
          v200 = static os_log_type_t.default.getter(v199);
          if (os_log_type_enabled(v199, v200))
          {
            v266 = v197;
            v201 = (uint8_t *)swift_slowAlloc(12, -1);
            v202 = swift_slowAlloc(32, -1);
            v268[0] = v202;
            *(_DWORD *)v201 = v259.n128_u32[0];
            swift_bridgeObjectRetain(v186);
            v271 = sub_100040F58(v245, (unint64_t)v186, v268);
            v197 = v266;
            v76 = (uint64_t)v261;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v271, &v272, v201 + 4, v201 + 12);
            swift_bridgeObjectRelease_n(v186, 3);
            _os_log_impl((void *)&_mh_execute_header, v199, v200, "Transferring selected item '%{public}s'", v201, 0xCu);
            swift_arrayDestroy(v202, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v202, -1, -1);
            swift_slowDealloc(v201, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n(v186, 2);
          }

          swift_beginAccess(&v269, v268, 0, 0);
          v204 = v269;
          v203 = v270;
          sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
          swift_bridgeObjectRetain(v203);
          v206 = (void *)static OS_dispatch_queue.main.getter(v205);
          v207 = &_dispatch_main_q;
          v208 = v206;
          v209 = &_dispatch_main_q;
          v210 = &_dispatch_main_q;
          if (v208 == &_dispatch_main_q)
          {
            +[NSThread isMainThread](NSThread, "isMainThread");
            v210 = v208;
          }

          v211 = (void *)v265;
          v212 = sub_1004F3980(v204, v203);
          if ((v213 & 1) == 0)
          {
            objc_msgSend(v211, "bc_setSelectedIndex:", v212);
            sub_100049A90();
          }
          swift_bridgeObjectRelease(v203);
          *((_BYTE *)v197 + (_QWORD)v211) = 0;
          swift_bridgeObjectRetain(v203);
          v215 = (void *)static OS_dispatch_queue.main.getter(v214);
          v216 = &_dispatch_main_q;
          v217 = v215;
          v218 = &_dispatch_main_q;
          if (v217 == &_dispatch_main_q)
          {
            +[NSThread isMainThread](NSThread, "isMainThread");
            v35 = v217;
          }

          v219 = sub_1004F3980(v204, v203);
          if ((v220 & 1) != 0)
          {

            swift_bridgeObjectRelease(v203);
          }
          else
          {
            v221 = (void *)sub_1004F3C00(v219);
            *(_QWORD *)&v222 = swift_bridgeObjectRelease(v203).n128_u64[0];
            if (v221)
            {
              v223 = objc_msgSend(v221, "contentNavigationController", v222);
              if (v223
                && (v224 = v223,
                    v225 = objc_msgSend(v223, "topViewController"),
                    v224,
                    v225))
              {
                v226 = objc_opt_self(BKLibraryBookshelfCollectionViewController);
                v227 = (void *)swift_dynamicCastObjCClass(v225, v226);
                v228 = v248;
                if (v227)
                {
                  v229 = v227;
                  if (objc_msgSend(v227, "isEditing"))
                  {
                    v266 = (uint64_t *)v188;
                    swift_bridgeObjectRetain(v203);
                    v231 = Logger.logObject.getter(v230);
                    v232 = static os_log_type_t.default.getter(v231);
                    if (os_log_type_enabled(v231, v232))
                    {
                      v233 = (uint8_t *)swift_slowAlloc(12, -1);
                      v265 = swift_slowAlloc(32, -1);
                      v271 = v265;
                      *(_DWORD *)v233 = v259.n128_u32[0];
                      v264 = (v233 + 4);
                      swift_bridgeObjectRetain(v203);
                      v267 = sub_100040F58(v204, v203, &v271);
                      v76 = (uint64_t)v261;
                      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v267, v268, v264, v233 + 12);
                      swift_bridgeObjectRelease(v203);
                      v234 = v272;
                      swift_bridgeObjectRelease_n(v203, 2);
                      swift_bridgeObjectRelease(v234);
                      _os_log_impl((void *)&_mh_execute_header, v231, v232, "Updating tab bar appearance for edit mode in '%{public}s' tab", v233, 0xCu);
                      v235 = v265;
                      swift_arrayDestroy(v265, 1, (char *)&type metadata for Any + 8);
                      swift_slowDealloc(v235, -1, -1);
                      swift_slowDealloc(v233, -1, -1);

                    }
                    else
                    {

                      swift_bridgeObjectRelease_n(v203, 2);
                      *(_QWORD *)&v236 = swift_bridgeObjectRelease(v272).n128_u64[0];
                    }
                    objc_msgSend(v229, "updateTabBarControllerForEditing:", 1, v236, v245);

                    goto LABEL_165;
                  }
                  swift_bridgeObjectRelease(v203);

LABEL_162:
                  v237 = swift_bridgeObjectRelease(v272);
LABEL_166:
                  (*(void (**)(uint64_t, uint64_t, __n128))(v228 + 8))(v76, v246, v237);
                  return;
                }
                swift_bridgeObjectRelease(v203);

              }
              else
              {
                swift_bridgeObjectRelease(v203);
                v228 = v248;
              }

              goto LABEL_162;
            }

          }
          swift_bridgeObjectRelease(v203);
          v237 = swift_bridgeObjectRelease(v272);
LABEL_165:
          v228 = v248;
          goto LABEL_166;
        }
        swift_bridgeObjectRelease(v186);
        v28 = v265;
      }
LABEL_141:
      v186 = (void *)0xE700000000000000;
      v269 = 0x7972617262696CLL;
      v270 = 0xE700000000000000;
      goto LABEL_142;
    }
    __break(1u);
LABEL_194:
    if (v28 < 0)
      v240 = v28;
    else
      v240 = v28 & 0xFFFFFFFFFFFFFF8;
    v241 = (id)v78;
    swift_bridgeObjectRetain(v28);
    v81 = _CocoaArrayWrapper.endIndex.getter(v240);
    swift_bridgeObjectRelease(v28);
    v3 = v265;
  }
  while ((v81 & 0x8000000000000000) == 0);
  __break(1u);
LABEL_199:
  if (v28 < 0)
    v242 = v28;
  else
    v242 = v28 & 0xFFFFFFFFFFFFFF8;
  v243 = (id)v78;
  swift_bridgeObjectRetain(v28);
  v244 = _CocoaArrayWrapper.endIndex.getter(v242);
  swift_bridgeObjectRelease(v28);
  if (v244 >= 1)
  {
LABEL_31:
    sub_1002C35E8(1, 1, v78);
    swift_unknownObjectRelease(v81);

    v3 = v265;
    goto LABEL_32;
  }
LABEL_203:
  __break(1u);
}

uint64_t sub_1004F6B7C()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = objc_msgSend(v0, "im_ancestorFlowControllerConformingToProtocol:", &OBJC_PROTOCOL___BSUILibraryCollectionUIProvider);
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100025B3C((uint64_t)v6, (uint64_t)v7, (uint64_t *)&unk_1009D04E0);
  if (v8)
  {
    v3 = sub_10004CFD4(&qword_1009E8AE0);
    if (swift_dynamicCast(&v5, v7, (char *)&type metadata for Any + 8, v3, 6))
      return v5;
    else
      return 0;
  }
  else
  {
    sub_100010960((uint64_t)v7, (uint64_t *)&unk_1009D04E0);
    return 0;
  }
}

id static NSNotificationName.rootBarReady.getter()
{
  if (qword_1009CE748 != -1)
    swift_once(&qword_1009CE748, sub_100064CCC);
  return (id)static NSNotificationName.rootBarReady;
}

uint64_t static TabBarController.rootBarReadyNotification.getter()
{
  if (qword_1009CE748 != -1)
    swift_once(&qword_1009CE748, sub_100064CCC);
  return static String._unconditionallyBridgeFromObjectiveC(_:)(static NSNotificationName.rootBarReady);
}

uint64_t sub_1004F6D40(uint64_t a1)
{
  return sub_100007AF0(a1, qword_1009E8788, 0xD000000000000019, 0x80000001007CFA50);
}

uint64_t sub_1004F6D64@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072A868);
  v5 = swift_getKeyPath(&unk_10072A890);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1004F6DE0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  id v6;
  void *v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072A868);
  v5 = swift_getKeyPath(&unk_10072A890);
  v8 = v2;
  v6 = v2;
  return static Published.subscript.setter(&v8, v3, KeyPath, v5);
}

unint64_t sub_1004F6E50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10004CFD4(&qword_1009D0A40);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_10000B5E4(v7, (uint64_t)&v16, &qword_1009D0A48);
    v8 = v16;
    v9 = v17;
    result = sub_1004F6F84(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10004CFC4(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004F6F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_1004F6FE8(a1, a2, v5);
}

unint64_t sub_1004F6FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    v11 = v10[1];
    if ((*v10 != a1 || v11 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      i = (i + 1) & v13;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v14 = (_QWORD *)(v9 + 16 * i);
        v15 = v14[1];
        if ((*v14 != a1 || v15 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0)
        {
          for (i = (i + 1) & v13; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v13)
          {
            v17 = (_QWORD *)(v9 + 16 * i);
            v18 = v17[1];
            if (*v17 == a1 && v18 == a2)
              break;
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

_QWORD *sub_1004F712C(uint64_t a1, id a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  unint64_t v10;
  uint64_t v12;

  if ((unint64_t)a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1);
LABEL_9:
        v9 = v8;
        v10 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        if (v8 == a2)
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
          v6 = _swiftEmptyArrayStorage[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v6);
          v7 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v6, v9);
          specialized ContiguousArray._endMutation()(v7);
        }
        ++v5;
        if (v10 == v4)
          return _swiftEmptyArrayStorage;
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      if (a1 < 0)
        v12 = a1;
      else
        v12 = a1 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v12);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v8 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1004F7278(unint64_t a1, id *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  uint64_t v18;
  id *v19;
  _BYTE v20[24];
  _QWORD *v21;

  v3 = a1;
  v21 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_19;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  a2 = (id *)((char *)a2 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController);
  swift_beginAccess(a2, v20, 0, 0);
  if (v4)
  {
    v19 = a2;
    v5 = 0;
    v6 = v3 & 0xC000000000000001;
    v7 = v3 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if (v6)
      {
        v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v3);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v7 + 16))
        {
          __break(1u);
LABEL_18:
          __break(1u);
LABEL_19:
          if (v3 < 0)
            v18 = v3;
          else
            v18 = v3 & 0xFFFFFFFFFFFFFF8;
          v4 = _CocoaArrayWrapper.endIndex.getter(v18);
          goto LABEL_3;
        }
        v14 = *(id *)(v3 + 8 * v5 + 32);
      }
      v15 = v14;
      v16 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_18;
      if (*a2 && v14 == *a2)
      {

      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v14);
        v8 = v6;
        v9 = v4;
        v10 = v3;
        v11 = v21[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v11);
        v12 = v11;
        v3 = v10;
        v4 = v9;
        v6 = v8;
        v13 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v15);
        specialized ContiguousArray._endMutation()(v13);
        a2 = v19;
      }
      ++v5;
      if (v16 == v4)
        return v21;
    }
  }
  return _swiftEmptyArrayStorage;
}

id sub_1004F73FC()
{
  id v0;
  id v1;
  uint64_t v2;
  NSString v3;
  id v4;
  uint64_t v6[2];
  __int128 v7;
  uint64_t v8;
  _BYTE v9[16];
  __int128 v10;

  v0 = objc_msgSend(objc_allocWithZone((Class)BSUIPlaceholderViewController), "init");
  v1 = objc_msgSend(v0, "navigationItem");
  RootBarItem.title.getter(v6);
  v2 = v6[1];
  v10 = v7;
  sub_100210D88((uint64_t)&v10);
  sub_100025B3C((uint64_t)&v8, (uint64_t)v9, &qword_1009D2A80);
  sub_100210D88((uint64_t)v9);
  v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v2);
  objc_msgSend(v1, "setTitle:", v3);

  v4 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v4, "setLargeTitleDisplayMode:", 1);

  return v0;
}

void sub_1004F7504(void *a1)
{
  char *v1;
  void *v2;
  id v3;
  id v4;
  char *v5;
  id v6;
  id v7;
  char v8[24];

  v2 = *(void **)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController__bc_preferredTabBarScrollEdgeAppearance];
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController__bc_preferredTabBarScrollEdgeAppearance] = a1;
  v3 = a1;

  v4 = objc_msgSend(v1, "tabBar");
  v5 = &v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController], v8, 0, 0);
  if (*(_QWORD *)v5)
  {
    v6 = objc_msgSend(v1, "tabBar");
    v7 = objc_msgSend(v6, "standardAppearance");

  }
  else
  {
    v7 = objc_msgSend(v1, "bc_preferredTabBarScrollEdgeAppearance");
  }
  objc_msgSend(v4, "setScrollEdgeAppearance:", v7);

}

uint64_t sub_1004F75F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1004F7624()
{
  uint64_t v0;

  sub_1004F27DC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1004F762C(uint64_t a1)
{
  uint64_t v1;

  sub_1004F2B60(a1, v1);
}

uint64_t sub_1004F7634()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1004F7658()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), "setNeedsStatusBarAppearanceUpdate");
  _s5Books33MiniPlayerHostingTabBarControllerC11viewDidMove2to23shouldAppearOrDisappearySo8UIWindowCSg_SbtF_0();
}

void sub_1004F7688()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D33C8);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKTabBarController_viewControllerProvider]);
  v6 = OBJC_IVAR___BKTabBarController_rootBarEventSubject;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009CEEA0);
  v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  *(_QWORD *)&v0[v6] = PassthroughSubject.init()(v8);
  v9 = &v0[OBJC_IVAR___BKTabBarController__cachedSelectedItem];
  v13 = 0;
  v10 = sub_10004CFD4((uint64_t *)&unk_1009D7930);
  Published.init(initialValue:)(&v13, v10);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___BKTabBarController__rootBarCoordinator]);
  *(_QWORD *)&v1[OBJC_IVAR___BKTabBarController_items] = _swiftEmptyArrayStorage;
  v11 = OBJC_IVAR___BKTabBarController_isCreatingContentForNavigationController;
  *(_QWORD *)&v1[v11] = objc_msgSend((id)objc_opt_self(NSHashTable), "weakObjectsHashTable");
  v1[OBJC_IVAR___BKTabBarController_isPopulatingItems] = 0;
  v1[OBJC_IVAR___BKTabBarController_isTransferingFromSidebar] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BKTabBarController_cancellables] = &_swiftEmptySetSingleton;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/TabBarController.swift", 28, 2, 338, 0);
  __break(1u);
}

void sub_1004F7838(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  int v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  id v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  _QWORD v39[2];
  char *v40;

  v2 = v1;
  v4 = objc_opt_self(BSUIRootBarWrapperViewController);
  v5 = swift_dynamicCastObjCClass(a1, v4);
  if (v5)
  {
    v6 = (void *)v5;
    v38 = a1;
    v7 = objc_msgSend(v6, "contentNavigationController");
    if (!v7)
    {

      return;
    }
    v8 = v7;
    objc_msgSend(v7, "bc_updateNavBarVisibleWithTransitionCoordinator:duration:", 0, 0.0);
    KeyPath = swift_getKeyPath(&unk_10072A868);
    v10 = swift_getKeyPath(&unk_10072A890);
    static Published.subscript.getter(&v40, v2, KeyPath);
    swift_release(KeyPath);
    swift_release(v10);
    v11 = v40;
    if (v40)
    {
      v12 = *(_QWORD *)&v40[OBJC_IVAR___BKRootBarItem_identifier];
      v13 = *(_QWORD *)&v40[OBJC_IVAR___BKRootBarItem_identifier + 8];
      swift_bridgeObjectRetain_n(v13, 2);

      v14 = v2;
      v11 = (id)sub_1004F3980(v12, v13);
      LOBYTE(v12) = v15;

      swift_bridgeObjectRelease_n(v13, 2);
      v16 = v12 & 1;
    }
    else
    {
      v16 = 1;
    }
    sub_100049A90();
    v17 = objc_msgSend(v2, "selectedIndex");
    if ((v16 & 1) == 0 && v11 == v17)
    {
      if (!sub_1004F3EF4())
      {
        v18 = sub_10004C404();
        if (v18)
        {
          v19 = v18;
          v20 = objc_msgSend(v18, "viewControllers");
          v21 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
          v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

          if ((unint64_t)v22 >> 62)
          {
            if (v22 < 0)
              v37 = v22;
            else
              v37 = v22 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v22);
            v23 = _CocoaArrayWrapper.endIndex.getter(v37);
            swift_bridgeObjectRelease(v22);
          }
          else
          {
            v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          *(_QWORD *)&v24 = swift_bridgeObjectRelease(v22).n128_u64[0];
          if (v23 == 1)
          {
            v25 = objc_msgSend(v19, "topViewController", v24);
            v26 = objc_msgSend(v25, "contentScrollView");

            if (!v26)
            {

              goto LABEL_25;
            }
            v27 = v26;
            objc_msgSend(v27, "_scrollToTopIfPossible:", 1);

            goto LABEL_22;
          }

        }
      }

      goto LABEL_25;
    }
    v28 = MiniPlayerHostingTabBarController.tabViewControllers.getter();
    v29 = v28;
    if (v16)
    {
      swift_bridgeObjectRelease(v28);
      v27 = 0;
    }
    else
    {
      v39[0] = v11;
      v39[1] = v28;
      v30 = sub_10004CFD4(&qword_1009E8868);
      v31 = sub_100030B34((unint64_t *)&unk_1009E8870, &qword_1009E8868, (uint64_t)&protocol conformance descriptor for [A]);
      Collection.subscript.getter(&v40, v39, v30, v31);
      swift_bridgeObjectRelease(v29);
      v27 = v40;
      if (v40)
      {
        v32 = sub_100009E04(0, (unint64_t *)&unk_1009E8A70, BCCardStackViewController_ptr);
        v27 = v27;
        v33 = (void *)UIViewController.firstVisibleChildViewController<A>(of:includePresented:)(v32, 1, v32);

LABEL_21:
        v34 = sub_100009E04(0, (unint64_t *)&unk_1009E8A70, BCCardStackViewController_ptr);
        v35 = (void *)UIViewController.firstVisibleChildViewController<A>(of:includePresented:)(v34, 1, v34);
        objc_msgSend(v33, "viewWillDisappearFromTabChange");
        v36 = v35;
        objc_msgSend(v36, "viewWillAppearFromTabChange");

LABEL_22:
LABEL_25:

        return;
      }
    }
    v33 = 0;
    goto LABEL_21;
  }
}

id sub_1004F7C2C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR____TtC5Books33MiniPlayerHostingTabBarController_miniPlayerViewController);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1004F7C80()
{
  return type metadata accessor for TabBarController(0);
}

uint64_t sub_1004F7C88()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1004F7CAC()
{
  uint64_t v0;

  sub_1004F4140(v0);
}

uint64_t sub_1004F7CBC()
{
  id *v0;

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004F7CF8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004F7D1C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004F7D48()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004F7D8C()
{
  uint64_t v0;

  return sub_100025E00(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

id ContainerHost.__allocating_init(launchCoordinator:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  char *v4;
  objc_super v6;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR___BKContainerHost____lazy_storage___containerManager] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___BKContainerHost____lazy_storage___container] = 0;
  v4 = &v3[OBJC_IVAR___BKContainerHost____lazy_storage___resolver];
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_QWORD *)v4 + 4) = 0;
  *(_QWORD *)&v3[OBJC_IVAR___BKContainerHost_launchCoordinator] = a1;
  v6.receiver = v3;
  v6.super_class = v1;
  return objc_msgSendSuper2(&v6, "init");
}

id ContainerHost.init(launchCoordinator:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  objc_class *ObjectType;
  char *v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType(v2, a2);
  *(_QWORD *)&v2[OBJC_IVAR___BKContainerHost____lazy_storage___containerManager] = 0;
  *(_QWORD *)&v2[OBJC_IVAR___BKContainerHost____lazy_storage___container] = 0;
  v5 = &v2[OBJC_IVAR___BKContainerHost____lazy_storage___resolver];
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_QWORD *)v5 + 4) = 0;
  *(_QWORD *)&v2[OBJC_IVAR___BKContainerHost_launchCoordinator] = a1;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, "init");
}

void ContainerHost.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.ContainerHost", 19, "init()", 6, 0);
  __break(1u);
}

_QWORD *sub_1004F7F84(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  Swift::String v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_100366B20(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = (char *)*(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      v7 = *(_QWORD *)&v5[OBJC_IVAR____TtC5Books24SinglePageViewController_viewModel];
      swift_retain(v7);
      v8._countAndFlagsBits = sub_10063E564();
      object = v8._object;
      String.append(_:)(v8);
      swift_release(v7);
      swift_bridgeObjectRelease(object);
      v10._countAndFlagsBits = 32;
      v10._object = (void *)0xE100000000000000;
      String.append(_:)(v10);
      v11._countAndFlagsBits = 2114390;
      v11._object = (void *)0xE300000000000000;
      String.append(_:)(v11);

      swift_bridgeObjectRelease(0xE300000000000000);
      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      v14 = v13 + 1;
      if (v13 >= v12 >> 1)
        sub_100366B20(v12 > 1, v13 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v14;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004F8148()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072AAE0);
  v2 = swift_getKeyPath(&unk_10072AB08);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1004F81B8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1EB18);
  sub_100048F64(v0, (uint64_t)qword_100A1EB18);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_logger(for:)(0x6C72754365676150, 0xE800000000000000);
}

uint64_t sub_1004F8234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E8B80);
  v1 = sub_100048F64(v0, (uint64_t)qword_1009E8B80);
  if (qword_1009CE760 != -1)
    swift_once(&qword_1009CE760, sub_1004F81B8);
  v2 = sub_100048F64(v0, (uint64_t)qword_100A1EB18);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1004F82C4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072AAE0);
  v5 = swift_getKeyPath(&unk_10072AB08);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1004F8340(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072AAE0);
  v5 = swift_getKeyPath(&unk_10072AB08);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_1004F83B0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072AA90);
  v2 = swift_getKeyPath(&unk_10072AAB8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_1004F8420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC5Books13PageCurlState__isCurlActive;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Books13PageCurlState__pageCurlDirection;
  v4 = sub_10004CFD4(&qword_1009E8F98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004F84A0()
{
  return type metadata accessor for PageCurlState(0);
}

uint64_t type metadata accessor for PageCurlState(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009E8BD0, (uint64_t)&nominal type descriptor for PageCurlState);
}

void sub_1004F84BC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  sub_100443A4C();
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10026B338(319, (unint64_t *)&unk_1009E8BE8, (uint64_t (*)(uint64_t))type metadata accessor for NavigationDirection, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 2, v6, a1 + 80);
    }
  }
}

void sub_1004F855C()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  char *i;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t Strong;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  uint64_t v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BOOL8 v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int v69;
  uint64_t v70;
  char v71[24];

  v1 = v0;
  v2 = type metadata accessor for SpreadPaginationEntity(0);
  v65 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v62 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  v5 = __chkstk_darwin(v4);
  v64 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v0, "gestureRecognizers", v5);
  v8 = sub_100009E04(0, (unint64_t *)&unk_1009D9EC0, UIGestureRecognizer_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v15 = v9;
    else
      v15 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v10 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v9);
    if (!v10)
      goto LABEL_13;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v10)
      goto LABEL_13;
  }
  if (v10 < 1)
  {
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v11 = 0;
  v12 = OBJC_IVAR____TtC5Books22PageCurlViewController_isEnabled;
  do
  {
    if ((v9 & 0xC000000000000001) != 0)
      v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
    else
      v13 = *(id *)(v9 + 8 * v11 + 32);
    v14 = v13;
    ++v11;
    objc_msgSend(v13, "setEnabled:", v1[v12]);

  }
  while (v10 != v11);
LABEL_13:
  v16 = objc_msgSend(v1, "view", swift_bridgeObjectRelease(v9).n128_f64[0]);
  if (v16)
  {
    v17 = v16;
    v18 = OBJC_IVAR____TtC5Books22PageCurlViewController_isEnabled;
    objc_msgSend(v16, "setHidden:", (v1[OBJC_IVAR____TtC5Books22PageCurlViewController_isEnabled] & 1) == 0);

    v19 = objc_msgSend(v1, "viewControllers");
    if (!v19
      || (v20 = v19,
          v21 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr),
          v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21),
          v20,
          v23 = (uint64_t)sub_10050F2DC(v22),
          swift_bridgeObjectRelease(v22),
          !v23))
    {
      swift_bridgeObjectRelease(0);
      v23 = (uint64_t)_swiftEmptyArrayStorage;
    }
    if ((unint64_t)v23 >> 62)
    {
      if (v23 < 0)
        v61 = v23;
      else
        v61 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v23);
      v24 = _CocoaArrayWrapper.endIndex.getter(v61);
      swift_bridgeObjectRelease(v23);
      if (v24)
      {
LABEL_19:
        v70 = v24 - 1;
        if (v24 >= 1)
        {
          v63 = v2;
          v25 = 0;
          v66 = OBJC_IVAR____TtC5Books22PageCurlViewController_columns;
          v67 = v23;
          v69 = v1[OBJC_IVAR____TtC5Books22PageCurlViewController_isSample];
          v26 = &v1[OBJC_IVAR____TtC5Books22PageCurlViewController_contentLayoutProviderProviding];
          v68 = v23 & 0xC000000000000001;
          if ((v23 & 0xC000000000000001) == 0)
            goto LABEL_22;
LABEL_21:
          for (i = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, v23);
                ;
                i = (char *)*(id *)(v23 + 8 * v25 + 32))
          {
            v28 = i;
            v29 = OBJC_IVAR____TtC5Books24SinglePageViewController_viewModel;
            v30 = *(_QWORD *)&i[OBJC_IVAR____TtC5Books24SinglePageViewController_viewModel];
            if (v69)
              *(_BYTE *)(v30 + OBJC_IVAR____TtC5Books17PageCurlViewModel_wide) = *(_QWORD *)&v1[v66] == 2;
            *(_BYTE *)(v30 + OBJC_IVAR____TtC5Books17PageCurlViewModel_showTitle) = v1[v18];
            Strong = swift_unknownObjectWeakLoadStrong(v26);
            if (Strong)
            {
              v33 = Strong;
              v34 = *((_QWORD *)v26 + 1);
              ObjectType = swift_getObjectType();
              swift_retain(v30);
              v36 = dispatch thunk of BookContentLayoutProviderProviding.contentLayoutProvider.getter(ObjectType, v34);
              v38 = v37;
              swift_unknownObjectRelease(v33);
              v39 = swift_getObjectType();
              v40 = v38;
              v23 = v67;
              v41 = dispatch thunk of BookContentLayoutProviding.gutterWidth.getter(v39, v40);
              swift_unknownObjectRelease(v36);
              *(double *)(v30 + 16) = v41;
              *(_QWORD *)&v32 = swift_release(v30).n128_u64[0];
            }
            v42 = OBJC_IVAR____TtC5Books24SinglePageViewController_enabled;
            v28[OBJC_IVAR____TtC5Books24SinglePageViewController_enabled] = v1[v18];
            v43 = *(void **)&v28[OBJC_IVAR____TtC5Books24SinglePageViewController_sampleHeaderChromeViewController];
            if (v43)
            {
              v44 = objc_msgSend(v43, "view", v32);
              if (!v44)
                goto LABEL_51;
              v45 = v44;
              objc_msgSend(v44, "setHidden:", 1);

            }
            v46 = *(void **)&v28[OBJC_IVAR____TtC5Books24SinglePageViewController_titleChromeViewController];
            if (v46)
            {
              v47 = objc_msgSend(v46, "view", v32);
              if (!v47)
                goto LABEL_52;
              v48 = v47;
              if ((v28[v42] & 1) != 0
                && (v49 = *(_QWORD *)&v28[v29],
                    *(_BYTE *)(v49 + OBJC_IVAR____TtC5Books17PageCurlViewModel_showTitle) == 1))
              {
                v50 = v49 + OBJC_IVAR____TtC5Books17PageCurlViewModel_spread;
                swift_beginAccess(v49 + OBJC_IVAR____TtC5Books17PageCurlViewModel_spread, v71, 0, 0);
                v51 = v50;
                v52 = v64;
                sub_10000B5E4(v51, v64, (uint64_t *)&unk_1009E8E70);
                v53 = v65;
                v54 = v63;
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v52, 1, v63))
                {
                  sub_100010960(v52, (uint64_t *)&unk_1009E8E70);
                  v55 = 0;
                }
                else
                {
                  v56 = v62;
                  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v62, v52, v54);
                  v57 = sub_100010960(v52, (uint64_t *)&unk_1009E8E70);
                  v58 = SpreadPaginationEntity.columns.getter(v57);
                  v59 = v56;
                  v23 = v67;
                  (*(void (**)(char *, uint64_t))(v53 + 8))(v59, v54);
                  v60 = *(_QWORD *)(v58 + 16);
                  swift_bridgeObjectRelease(v58);
                  v55 = v60 == 1;
                }
              }
              else
              {
                v55 = 1;
              }
              objc_msgSend(v48, "setHidden:", v55);

            }
            else
            {

            }
            if (v70 == v25)
              break;
            ++v25;
            if (v68)
              goto LABEL_21;
LABEL_22:
            ;
          }
          goto LABEL_48;
        }
        goto LABEL_50;
      }
    }
    else
    {
      v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v24)
        goto LABEL_19;
    }
LABEL_48:
    swift_bridgeObjectRelease(v23);
    return;
  }
LABEL_53:
  __break(1u);
}

id sub_1004F8B60()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC5Books22PageCurlViewController____lazy_storage___panGestureRecognizer;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Books22PageCurlViewController____lazy_storage___panGestureRecognizer];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC5Books22PageCurlViewController____lazy_storage___panGestureRecognizer];
  }
  else
  {
    v4 = sub_1004F8BC0(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1004F8BC0(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _UNKNOWN **i;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = objc_msgSend(a1, "gestureRecognizers");
  v2 = sub_100009E04(0, (unint64_t *)&unk_1009D9EC0, UIGestureRecognizer_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  for (i = BCMutableCloudSyncVersions_ptr; v4; i = BCMutableCloudSyncVersions_ptr)
  {
    v6 = 4;
    while (1)
    {
      v7 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6 - 4, v3)
         : *(id *)(v3 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v10 = objc_opt_self(i[482]);
      v11 = swift_dynamicCastObjCClass(v8, v10);
      if (v11)
      {
        v13 = v11;
        swift_bridgeObjectRelease(v3);
        return (id)v13;
      }

      ++v6;
      if (v9 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_13:
    if (v3 < 0)
      v14 = v3;
    else
      v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v4 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(v3);
  }
LABEL_10:
  swift_bridgeObjectRelease(v3);
  return objc_msgSend(objc_allocWithZone((Class)i[482]), "initWithTarget:action:", 0, 0);
}

void sub_1004F8D28()
{
  char *v0;
  char *v1;
  int v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t Strong;
  void *v9;
  id v10;
  id v11;
  void *v12;
  objc_super v13;

  v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, "viewDidLoad");
  if (qword_1009CDD90 != -1)
    swift_once(&qword_1009CDD90, sub_10027A100);
  v2 = byte_100A1E408;
  v3 = (void *)objc_opt_self(UIColor);
  if (v2 == 1)
  {
    v4 = objc_msgSend(v3, "systemMintColor");
    v5 = objc_msgSend(v4, "colorWithAlphaComponent:", 0.4);

  }
  else
  {
    v5 = objc_msgSend(v3, "clearColor");
  }
  v6 = objc_msgSend(v1, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "setBackgroundColor:", v5);

    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_liveContentViewController]);
    if (Strong)
    {
      v9 = (void *)Strong;
      v10 = sub_1004F8B60();
      dispatch thunk of BookContentViewController.setCurlPanRecognizer(_:)();

    }
    v11 = objc_msgSend(v1, "view");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "setBEPassthroughViewDelegate:", v1);

      sub_1004F8EC0();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_1004F8EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;

  v1 = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC5Books22PageCurlViewController_readingSettingsProvider;
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books22PageCurlViewController_readingSettingsProvider);
  if (!Strong)
    return result;
  v8 = Strong;
  v9 = *(_QWORD *)(v5 + 8);
  ObjectType = swift_getObjectType();
  v11 = dispatch thunk of ReadingSettingsProviding.pageNavigationStyle.getter(ObjectType, v9);
  swift_unknownObjectRelease(v8);
  v12 = v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_contentLayoutProviderProviding;
  v13 = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_contentLayoutProviderProviding);
  if (!v13)
    return result;
  v14 = v13;
  v15 = *(_QWORD *)(v12 + 8);
  v16 = OBJC_IVAR____TtC5Books22PageCurlViewController_isEnabled;
  v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_isEnabled);
  v18 = swift_getObjectType();
  v19 = dispatch thunk of BookContentLayoutProviderProviding.contentLayoutProvider.getter(v18, v15);
  v21 = v20;
  v22 = PageNavigationStyle.rawValue.getter(v11);
  v24 = v23;
  v25 = PageNavigationStyle.rawValue.getter(0);
  if (v22 == v25 && v24 == v26)
  {
    swift_bridgeObjectRelease_n(v24, 2);
LABEL_15:
    v38 = swift_getObjectType();
    v39 = dispatch thunk of BookContentLayoutProviding.layout.getter(v38, v21) == 1;
    v40 = *(unsigned __int8 *)(v1 + v16);
    *(_BYTE *)(v1 + v16) = v39;
    if (v40 == v39)
      goto LABEL_17;
    goto LABEL_16;
  }
  v28 = v26;
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v25, v26, 0);
  swift_bridgeObjectRelease(v24);
  swift_bridgeObjectRelease(v28);
  if ((v29 & 1) != 0)
    goto LABEL_15;
  v30 = *(_BYTE *)(v1 + v16);
  *(_BYTE *)(v1 + v16) = 0;
  if ((v30 & 1) != 0)
  {
LABEL_16:
    sub_1004F855C();
    v39 = *(unsigned __int8 *)(v1 + v16);
LABEL_17:
    if (v17 == v39)
      goto LABEL_10;
LABEL_18:
    v41 = type metadata accessor for SpreadPaginationEntity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v4, 1, 1, v41);
    sub_1004FA040((uint64_t)v4);
    swift_unknownObjectRelease(v14);
    swift_unknownObjectRelease(v19);
    sub_100010960((uint64_t)v4, (uint64_t *)&unk_1009E8E70);
    return result;
  }
  if ((v17 & 1) != 0)
    goto LABEL_18;
LABEL_10:
  if (qword_1009CE768 != -1)
    swift_once(&qword_1009CE768, sub_1004F8234);
  v31 = type metadata accessor for Logger(0);
  v32 = sub_100048F64(v31, (uint64_t)qword_1009E8B80);
  v43 = Logger.logObject.getter(v32);
  v36 = static os_log_type_t.debug.getter(v43, v33, v34, v35);
  if (os_log_type_enabled(v43, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, v36, "Updated curl style to same value - no work to do", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
    swift_unknownObjectRelease(v14);
    swift_unknownObjectRelease(v19);

  }
  else
  {

    swift_unknownObjectRelease(v14);
    *(_QWORD *)&result = swift_unknownObjectRelease(v19).n128_u64[0];
  }
  return result;
}

void sub_1004F9200(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  int v13;
  id v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  id v24;
  void *v25;
  id v26;
  CGRect v27;
  CGRect v28;

  v3 = objc_msgSend(v1, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_14;
  }
  v4 = v3;
  v26 = objc_msgSend(v3, "superview");

  if (v26)
  {
    objc_msgSend(a1, "bounds");
    objc_msgSend(v26, "convertRect:fromCoordinateSpace:", a1);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    if (qword_1009CDD90 != -1)
      swift_once(&qword_1009CDD90, sub_10027A100);
    v13 = byte_100A1E408;
    v14 = objc_msgSend(v1, "view");
    if (v14)
    {
      v15 = v14;
      if (v13)
        v8 = v8 + 200.0;
      objc_msgSend(v14, "frame");
      v17 = v16;
      v19 = v18;
      v21 = v20;
      v23 = v22;

      v27.origin.x = v17;
      v27.origin.y = v19;
      v27.size.width = v21;
      v27.size.height = v23;
      v28.origin.x = v6;
      v28.origin.y = v8;
      v28.size.width = v10;
      v28.size.height = v12;
      if (CGRectEqualToRect(v27, v28))
        goto LABEL_11;
      v24 = objc_msgSend(v1, "view");
      if (v24)
      {
        v25 = v24;
        objc_msgSend(v24, "setFrame:", v6, v8, v10, v12);

LABEL_11:
        return;
      }
      goto LABEL_15;
    }
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
}

void sub_1004F9480()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t Strong;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __n128 v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint8_t *v89;
  uint64_t ObjectType;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;

  v1 = sub_10004CFD4(&qword_1009E8EE8);
  v109 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v108 = (char *)&ObjectType - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_10004CFD4(&qword_1009E8EF0);
  __chkstk_darwin(v105);
  v103 = (char *)&ObjectType - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_10004CFD4(&qword_1009E8EF8);
  v98 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v97 = (char *)&ObjectType - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_10004CFD4(&qword_1009E8F00);
  __chkstk_darwin(v101);
  v99 = (char *)&ObjectType - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_10004CFD4(&qword_1009E8F08);
  v104 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v102 = (char *)&ObjectType - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009E8F10);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v107 = (char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009E8F18);
  v112 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v111 = (char *)&ObjectType - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009E8F20);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&ObjectType - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009E8F28);
  v110 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v18 = (char *)&ObjectType - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = v0;
  v19 = v0 + OBJC_IVAR____TtC5Books22PageCurlViewController_contentLayoutProviderProviding;
  Strong = swift_unknownObjectWeakLoadStrong(v19);
  if (Strong)
  {
    if ((*(_BYTE *)(v113 + OBJC_IVAR____TtC5Books22PageCurlViewController_isObservingChanges) & 1) != 0)
    {
      swift_unknownObjectRelease(Strong);
    }
    else
    {
      v93 = v8;
      v94 = v7;
      v95 = v1;
      v96 = v10;
      v21 = *(_QWORD *)(v19 + 8);
      *(_BYTE *)(v113 + OBJC_IVAR____TtC5Books22PageCurlViewController_isObservingChanges) = 1;
      v22 = Strong;
      ObjectType = swift_getObjectType();
      v23 = dispatch thunk of BookContentLayoutProviderProviding.contentLayoutProviderPublisher.getter(ObjectType, v21);
      v114 = v23;
      v24 = sub_10004CFD4(&qword_1009E8F30);
      v25 = sub_100030B34(&qword_1009E8F38, &qword_1009E8F30, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v92 = v24;
      v91 = v25;
      Publisher.dropFirst(_:)(1, v24, v25);
      swift_release(v23);
      v26 = sub_100030B34((unint64_t *)&unk_1009E8F40, &qword_1009E8F20, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
      Publisher<>.failIfNotOnMain(_:function:file:line:)(0, 0, "setupChangeMonitoring()", 23, 2, "/Library/Caches/com.apple.xbs/Sources/Alder/ios/AppSource/REI/BookReaderModule/PageCurlViewController.swift", 107, 2, 747, v12, v26);
      v27 = v21;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      v28 = swift_allocObject(&unk_10090C610, 24, 7);
      v29 = v113;
      swift_unknownObjectWeakInit(v28 + 16);
      v114 = v12;
      v115 = v26;
      OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v114, &opaque type descriptor for <<opaque return type of Publisher<>.failIfNotOnMain(_:function:file:line:)>>, 1);
      v31 = Publisher<>.sink(receiveValue:)(sub_100503DBC, v28, v16, OpaqueTypeConformance2);
      v32 = swift_release(v28);
      (*(void (**)(char *, uint64_t, __n128))(v110 + 8))(v18, v16, v32);
      v33 = v29 + OBJC_IVAR____TtC5Books22PageCurlViewController_cancellables;
      swift_beginAccess(v29 + OBJC_IVAR____TtC5Books22PageCurlViewController_cancellables, &v114, 33, 0);
      AnyCancellable.store(in:)(v33);
      swift_endAccess(&v114);
      swift_release(v31);
      v34 = *(_QWORD *)(v29 + OBJC_IVAR____TtC5Books22PageCurlViewController_currentLocationProvider + 8);
      v35 = swift_getObjectType();
      v36 = dispatch thunk of LocationProviding.currentLocationPublisher.getter(v35, v34);
      v114 = v36;
      v37 = sub_10004CFD4(&qword_1009E34C0);
      v38 = sub_100030B34((unint64_t *)&unk_1009E8F50, &qword_1009E34C0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v39 = v111;
      Publisher<>.failIfNotOnMain(_:function:file:line:)(0, 0, "setupChangeMonitoring()", 23, 2, "/Library/Caches/com.apple.xbs/Sources/Alder/ios/AppSource/REI/BookReaderModule/PageCurlViewController.swift", 107, 2, 761, v37, v38);
      swift_release(v36);
      v40 = swift_allocObject(&unk_10090C610, 24, 7);
      swift_unknownObjectWeakInit(v40 + 16);
      v41 = (_QWORD *)swift_allocObject(&unk_10090C638, 40, 7);
      v41[2] = v40;
      v41[3] = v22;
      v110 = v27;
      v41[4] = v27;
      v42 = v22;
      swift_unknownObjectRetain(v22);
      v114 = v37;
      v115 = v38;
      v43 = swift_getOpaqueTypeConformance2(&v114, &opaque type descriptor for <<opaque return type of Publisher<>.failIfNotOnMain(_:function:file:line:)>>, 1);
      v44 = v96;
      v45 = Publisher<>.sink(receiveValue:)(sub_100503DF0, v41, v96, v43);
      v46 = swift_release(v41);
      (*(void (**)(char *, uint64_t, __n128))(v112 + 8))(v39, v44, v46);
      swift_beginAccess(v33, &v114, 33, 0);
      AnyCancellable.store(in:)(v33);
      swift_endAccess(&v114);
      swift_release(v45);
      v47 = v29 + OBJC_IVAR____TtC5Books22PageCurlViewController_readingSettingsProvider;
      v48 = swift_unknownObjectWeakLoadStrong(v29 + OBJC_IVAR____TtC5Books22PageCurlViewController_readingSettingsProvider);
      if (v48)
      {
        v49 = *(_QWORD *)(v47 + 8);
        v112 = v49;
        v96 = v48;
        v111 = (char *)swift_getObjectType();
        v50 = dispatch thunk of ReadingSettingsProviding.pageNavigationStylePublisher.getter(v111, v49);
        v114 = v50;
        v51 = sub_10004CFD4(&qword_1009E5CA8);
        v52 = sub_100030B34(&qword_1009E8F60, &qword_1009E5CA8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
        v53 = sub_100503DFC();
        v54 = v97;
        Publisher<>.removeDuplicates()(v51, v52, v53);
        swift_release(v50);
        v55 = sub_100030B34(&qword_1009E8F70, &qword_1009E8EF8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
        v57 = v99;
        v56 = v100;
        Publisher.asSignal()(v100, v55);
        (*(void (**)(char *, uint64_t))(v98 + 8))(v54, v56);
        v58 = dispatch thunk of BookContentLayoutProviderProviding.contentLayoutProviderPublisher.getter(ObjectType, v110);
        v114 = v58;
        v59 = v103;
        v60 = v92;
        v61 = v91;
        Publisher.asSignal()(v92, v91);
        swift_release(v58);
        v114 = v56;
        v115 = v55;
        v62 = swift_getOpaqueTypeConformance2(&v114, &opaque type descriptor for <<opaque return type of Publisher.asSignal()>>, 1);
        v114 = v60;
        v115 = v61;
        v63 = swift_getOpaqueTypeConformance2(&v114, &opaque type descriptor for <<opaque return type of Publisher.asSignal()>>, 1);
        v64 = v102;
        Publishers.Merge.init(_:_:)(v57, v59, v101, v105, v62, v63);
        v65 = sub_100030B34(&qword_1009E8F78, &qword_1009E8F08, (uint64_t)&protocol conformance descriptor for Publishers.Merge<A, B>);
        v66 = v106;
        v67 = v107;
        Publisher<>.failIfNotOnMain(_:function:file:line:)(0, 0, "setupChangeMonitoring()", 23, 2, "/Library/Caches/com.apple.xbs/Sources/Alder/ios/AppSource/REI/BookReaderModule/PageCurlViewController.swift", 107, 2, 790, v106, v65);
        (*(void (**)(char *, uint64_t))(v104 + 8))(v64, v66);
        v68 = swift_allocObject(&unk_10090C610, 24, 7);
        v69 = v42;
        swift_unknownObjectWeakInit(v68 + 16);
        v114 = v66;
        v115 = v65;
        v70 = swift_getOpaqueTypeConformance2(&v114, &opaque type descriptor for <<opaque return type of Publisher<>.failIfNotOnMain(_:function:file:line:)>>, 1);
        v71 = v94;
        v72 = Publisher<>.sink(receiveValue:)(sub_100503E40, v68, v94, v70);
        v73 = swift_release(v68);
        (*(void (**)(char *, uint64_t, __n128))(v93 + 8))(v67, v71, v73);
        swift_beginAccess(v33, &v114, 33, 0);
        AnyCancellable.store(in:)(v33);
        swift_endAccess(&v114);
        v74 = swift_release(v72);
        v75 = v96;
        v76 = dispatch thunk of ReadingSettingsProviding.currentThemePublisher.getter(v111, v112, v74);
        v114 = v76;
        v77 = sub_10004CFD4((uint64_t *)&unk_1009E8F80);
        v78 = sub_100030B34((unint64_t *)&unk_1009F0040, (uint64_t *)&unk_1009E8F80, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
        v79 = v108;
        Publisher<>.failIfNotOnMain(_:function:file:line:)(0, 0, "setupChangeMonitoring()", 23, 2, "/Library/Caches/com.apple.xbs/Sources/Alder/ios/AppSource/REI/BookReaderModule/PageCurlViewController.swift", 107, 2, 797, v77, v78);
        swift_release(v76);
        v80 = swift_allocObject(&unk_10090C610, 24, 7);
        swift_unknownObjectWeakInit(v80 + 16);
        v114 = v77;
        v115 = v78;
        v81 = swift_getOpaqueTypeConformance2(&v114, &opaque type descriptor for <<opaque return type of Publisher<>.failIfNotOnMain(_:function:file:line:)>>, 1);
        v82 = v95;
        v83 = Publisher<>.sink(receiveValue:)(sub_100503E48, v80, v95, v81);
        v84 = swift_release(v80);
        (*(void (**)(char *, uint64_t, __n128))(v109 + 8))(v79, v82, v84);
        swift_beginAccess(v33, &v114, 33, 0);
        AnyCancellable.store(in:)(v33);
        swift_endAccess(&v114);
        swift_unknownObjectRelease(v69);
        swift_unknownObjectRelease(v75);
        swift_release(v83);
      }
      else
      {
        if (qword_1009CE768 != -1)
          swift_once(&qword_1009CE768, sub_1004F8234);
        v85 = type metadata accessor for Logger(0);
        v86 = sub_100048F64(v85, (uint64_t)qword_1009E8B80);
        v87 = Logger.logObject.getter(v86);
        v88 = static os_log_type_t.error.getter(v87);
        if (os_log_type_enabled(v87, v88))
        {
          v89 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v89 = 0;
          _os_log_impl((void *)&_mh_execute_header, v87, v88, "Must have a reading settings provider by now", v89, 2u);
          swift_slowDealloc(v89, -1, -1);
          swift_unknownObjectRelease(v22);

        }
        else
        {

          swift_unknownObjectRelease(v22);
        }
      }
    }
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000026, 0x80000001007CFF60, "Books/PageCurlViewController.swift", 34, 2, 736, 0);
    __break(1u);
  }
}

uint64_t sub_1004FA040(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t ObjectType;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  void (*v75)(char *, uint64_t, __n128);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  __n128 v91;
  void (*v92)(_QWORD, __n128);
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __n128 v98;
  void (*v99)(char *, uint64_t, __n128);
  int v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char *v104;
  __n128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  __n128 v113;
  __n128 v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  __n128 v124;
  uint64_t v125;
  Class isa;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  void (*v131)(char *, _QWORD, uint64_t, __n128);
  unsigned int v132;
  void (*v133)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v134)(uint64_t, char *, uint64_t);
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153[32];

  v3 = type metadata accessor for BookNavigationDirection(0);
  v147 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v136 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v145 = (char *)&v130 - v6;
  __chkstk_darwin(v7);
  v135 = (char *)&v130 - v8;
  __chkstk_darwin(v9);
  v142 = (char *)&v130 - v10;
  __chkstk_darwin(v11);
  v140 = (char *)&v130 - v12;
  __chkstk_darwin(v13);
  v139 = (char *)&v130 - v14;
  v15 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v15);
  v144 = (uint64_t)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v141 = (uint64_t)&v130 - v18;
  __chkstk_darwin(v19);
  v138 = (uint64_t)&v130 - v20;
  v21 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v21);
  v143 = (uint64_t)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v137 = (uint64_t)&v130 - v24;
  __chkstk_darwin(v25);
  v27 = (char *)&v130 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v130 - v29;
  v31 = type metadata accessor for SpreadPaginationEntity(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v148 = (char *)&v130 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = v1;
  v35 = (uint64_t *)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_beganCurls];
  swift_beginAccess(&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_beganCurls], v153, 0, 0);
  v149 = *v35;
  v36 = sub_10004CFD4((uint64_t *)&unk_1009E8EB0);
  v37 = sub_100030B34(&qword_1009DDE10, (uint64_t *)&unk_1009E8EB0, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v36, v37) & 1) != 0)
  {
    v148 = (char *)a1;
    if (qword_1009CE768 != -1)
      swift_once(&qword_1009CE768, sub_1004F8234);
    v38 = type metadata accessor for Logger(0);
    sub_100048F64(v38, (uint64_t)qword_1009E8B80);
    v39 = v1;
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc(22, -1);
      v43 = swift_slowAlloc(64, -1);
      v149 = v43;
      *(_DWORD *)v42 = 136315394;
      v151 = sub_100040F58(0xD000000000000029, 0x80000001007CFEA0, &v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v42 + 4, v42 + 12);
      *(_WORD *)(v42 + 12) = 2080;
      v44 = *v35;
      v45 = type metadata accessor for SinglePageViewController();
      swift_bridgeObjectRetain(v44);
      v47 = Array.description.getter(v46, v45);
      v49 = v48;
      swift_bridgeObjectRelease(v44);
      v151 = sub_100040F58(v47, v49, &v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v151, &v152, v42 + 14, v42 + 22);

      swift_bridgeObjectRelease(v49);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Attempting to call %s when we're currently already tracking VCs: %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

    }
    else
    {

    }
    v53 = (uint64_t)v148;
    v39[OBJC_IVAR____TtC5Books22PageCurlViewController_needResetAfterCurlEnd] = 1;
    v54 = (uint64_t)&v39[OBJC_IVAR____TtC5Books22PageCurlViewController_spreadForResetAfterCurlEnd];
    swift_beginAccess(v54, &v149, 33, 0);
    sub_100503D08(v53, v54);
    return swift_endAccess(&v149);
  }
  else
  {
    sub_10000B5E4(a1, (uint64_t)v30, (uint64_t *)&unk_1009E8E70);
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31);
    v146 = v31;
    if (v50 == 1)
    {
      v51 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_locationController + 8];
      ObjectType = swift_getObjectType();
      dispatch thunk of LocationControlling.currentSpread.getter(ObjectType, v51);
      sub_100010960((uint64_t)v30, (uint64_t *)&unk_1009E8E70);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v148, v30, v31);
    }
    v56 = v32;
    v57 = &v1[OBJC_IVAR____TtC5Books22PageCurlViewController_oldColumnCount];
    if (v1[OBJC_IVAR____TtC5Books22PageCurlViewController_oldColumnCount + 8] != 1
      || (sub_1004FBC64(), (v57[8] & 1) == 0))
    {
      if (*(_QWORD *)v57 != *(_QWORD *)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_columns])
        sub_1004FBC64();
    }
    v58 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_columns];
    v59 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    if (v58 == 1)
    {
      v60 = swift_allocObject(v59, 40, 7);
      *(_OWORD *)(v60 + 16) = xmmword_1007118F0;
      v61 = v146;
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v27, v148, v146);
      v62 = 1;
      v63 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v27, 0, 1, v61);
      SpreadPaginationEntity.firstLocation.getter(v63);
      v64 = *(_QWORD *)&v34[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService];
      v65 = *(_QWORD *)&v34[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8];
      v66 = swift_getObjectType();
      swift_unknownObjectRetain(v64);
      v67 = dispatch thunk of Paginating.bookPaginationEntity.getter(v66, v65);
      v68 = swift_unknownObjectRelease(v64);
      BookPaginationEntity.navigationDirection.getter(v68);
      v69 = swift_release(v67);
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v147 + 104))(v140, enum case for BookNavigationDirection.rightToLeft(_:), v3, v69);
      v70 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
      dispatch thunk of RawRepresentable.rawValue.getter(&v149, v3, v70);
      dispatch thunk of RawRepresentable.rawValue.getter(&v151, v3, v70);
      v71 = v150;
      v72 = v152;
      if (v149 != v151 || (v73 = v150, v150 != v152))
      {
        v62 = _stringCompareWithSmolCheck(_:_:expecting:)(v149, v150, v151, v152, 0);
        v73 = v72;
      }
      swift_bridgeObjectRelease(v71);
      v74 = swift_bridgeObjectRelease(v73);
      v75 = *(void (**)(char *, uint64_t, __n128))(v147 + 8);
      v75(v140, v3, v74);
      ((void (*)(char *, uint64_t))v75)(v139, v3);
      v76 = type metadata accessor for PageCurlViewModel(0);
      swift_allocObject(v76, *(unsigned int *)(v76 + 48), *(unsigned __int16 *)(v76 + 52));
      v77 = sub_10063E8C8((uint64_t)v27, v138, v62 & 1, 1, 1, 1, 0);
      v78 = sub_1004FADB0(v77);
      swift_release(v77);
      *(_QWORD *)(v60 + 32) = v78;
      v149 = v60;
      specialized Array._endMutation()(v79);
      v80 = v149;
    }
    else
    {
      v140 = (char *)swift_allocObject(v59, 48, 7);
      *((_OWORD *)v140 + 1) = xmmword_1007118C0;
      v81 = v137;
      v82 = (uint64_t)v148;
      v83 = v146;
      v134 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 16);
      v134(v137, v148, v146);
      v138 = v32;
      v84 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v32 + 56);
      LODWORD(v139) = 1;
      v133 = v84;
      v84(v81, 0, 1, v83);
      sub_1004FB484(v82, v141);
      v85 = &v34[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService];
      v86 = *(_QWORD *)&v34[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService];
      v87 = *(_QWORD *)&v34[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8];
      v88 = swift_getObjectType();
      swift_unknownObjectRetain(v86);
      v89 = dispatch thunk of Paginating.bookPaginationEntity.getter(v88, v87);
      v90 = swift_unknownObjectRelease(v86);
      BookPaginationEntity.navigationDirection.getter(v90);
      v91 = swift_release(v89);
      v92 = *(void (**)(_QWORD, __n128))(v147 + 104);
      v93 = v135;
      v132 = enum case for BookNavigationDirection.rightToLeft(_:);
      v131 = (void (*)(char *, _QWORD, uint64_t, __n128))v92;
      v92(v135, v91);
      v94 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
      dispatch thunk of RawRepresentable.rawValue.getter(&v149, v3, v94);
      dispatch thunk of RawRepresentable.rawValue.getter(&v151, v3, v94);
      v95 = v150;
      v96 = v152;
      if (v149 != v151 || (v97 = v150, v150 != v152))
      {
        LODWORD(v139) = _stringCompareWithSmolCheck(_:_:expecting:)(v149, v150, v151, v152, 0);
        v97 = v96;
      }
      swift_bridgeObjectRelease(v95);
      v98 = swift_bridgeObjectRelease(v97);
      v99 = *(void (**)(char *, uint64_t, __n128))(v147 + 8);
      v99(v93, v3, v98);
      ((void (*)(char *, uint64_t))v99)(v142, v3);
      v100 = v34[OBJC_IVAR____TtC5Books22PageCurlViewController_isSample] ^ 1;
      v101 = type metadata accessor for PageCurlViewModel(0);
      swift_allocObject(v101, *(unsigned int *)(v101 + 48), *(unsigned __int16 *)(v101 + 52));
      LODWORD(v147) = v100;
      v102 = 1;
      v103 = sub_10063E8C8(v137, v141, v139 & 1, 1, v100 & 1, 1, 0);
      v104 = sub_1004FADB0(v103);
      v105 = swift_release(v103);
      *((_QWORD *)v140 + 4) = v104;
      v106 = v143;
      v107 = (uint64_t)v148;
      v108 = v146;
      ((void (*)(uint64_t, char *, uint64_t, __n128))v134)(v143, v148, v146, v105);
      v133(v106, 0, 1, v108);
      sub_1004FB874(v107, v144);
      v109 = *(_QWORD *)v85;
      v110 = *((_QWORD *)v85 + 1);
      v111 = swift_getObjectType();
      swift_unknownObjectRetain(v109);
      v112 = dispatch thunk of Paginating.bookPaginationEntity.getter(v111, v110);
      v113 = swift_unknownObjectRelease(v109);
      BookPaginationEntity.navigationDirection.getter(v113);
      v114 = swift_release(v112);
      v115 = v136;
      v131(v136, v132, v3, v114);
      dispatch thunk of RawRepresentable.rawValue.getter(&v149, v3, v94);
      dispatch thunk of RawRepresentable.rawValue.getter(&v151, v3, v94);
      v116 = v150;
      v117 = v152;
      if (v149 != v151 || (v118 = v150, v150 != v152))
      {
        v102 = _stringCompareWithSmolCheck(_:_:expecting:)(v149, v150, v151, v152, 0);
        v118 = v117;
      }
      swift_bridgeObjectRelease(v116);
      v119 = swift_bridgeObjectRelease(v118);
      v99(v115, v3, v119);
      ((void (*)(char *, uint64_t))v99)(v145, v3);
      swift_allocObject(v101, *(unsigned int *)(v101 + 48), *(unsigned __int16 *)(v101 + 52));
      v120 = sub_10063E8C8(v143, v144, v102 & 1, 1, v147 & 1, 1, 0);
      v121 = sub_1004FADB0(v120);
      swift_release(v120);
      v122 = (uint64_t)v140;
      *((_QWORD *)v140 + 5) = v121;
      v149 = v122;
      specialized Array._endMutation()(v123);
      v80 = v149;
      v56 = v138;
    }
    if ((unint64_t)v80 >> 62)
    {
      if (v80 < 0)
        v127 = v80;
      else
        v127 = v80 & 0xFFFFFFFFFFFFFF8;
      v128 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
      v129 = swift_bridgeObjectRetain(v80);
      v125 = _bridgeCocoaArray<A>(_:)(v127, v128, v129);
      swift_bridgeObjectRelease(v80);
    }
    else
    {
      v124 = swift_bridgeObjectRetain(v80);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v124);
      sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
      v125 = v80;
    }
    swift_bridgeObjectRelease(v80);
    sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v34, "setViewControllers:direction:animated:completion:", isa, 0, 0, 0, swift_bridgeObjectRelease(v125).n128_f64[0]);

    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v148, v146);
  }
}

uint64_t sub_1004FACD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_isSample) == 1)
    *(_BYTE *)(a1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_wide) = *(_QWORD *)(v1
                                                                                + OBJC_IVAR____TtC5Books22PageCurlViewController_columns) == 2;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_showTitle) = *(_BYTE *)(v1
                                                                                  + OBJC_IVAR____TtC5Books22PageCurlViewController_isEnabled);
  v3 = v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_contentLayoutProviderProviding;
  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_contentLayoutProviderProviding);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(v3 + 8);
    ObjectType = swift_getObjectType(result, v5);
    v9 = dispatch thunk of BookContentLayoutProviderProviding.contentLayoutProvider.getter(ObjectType, v7);
    v11 = v10;
    swift_unknownObjectRelease(v6);
    v13 = swift_getObjectType(v9, v12);
    v14 = dispatch thunk of BookContentLayoutProviding.gutterWidth.getter(v13, v11);
    result = swift_unknownObjectRelease(v9);
    *(double *)(a1 + 16) = v14;
  }
  return result;
}

char *sub_1004FADB0(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  void *v4;
  void *v5;
  char v6;
  id v7;
  char *v8;
  char *result;
  char *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  char *v16;
  double v17;
  char *v18;
  _BYTE v19[40];

  v2 = v1;
  sub_1004FACD0(a1);
  sub_10028D0D4((uint64_t)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_containerBuilder], (uint64_t)v19);
  v4 = *(void **)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_pageBackgroundColor];
  v5 = *(void **)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_curlHappenedPublisher];
  v6 = v2[OBJC_IVAR____TtC5Books22PageCurlViewController_isEnabled];
  objc_allocWithZone((Class)type metadata accessor for SinglePageViewController());
  swift_retain(a1);
  v7 = v4;
  swift_retain(v5);
  v8 = sub_1004AF594(a1, (uint64_t)v19, v7, v5, v6);
  result = (char *)objc_msgSend(v2, "view");
  if (result)
  {
    v10 = result;
    objc_msgSend(result, "bounds");
    v12 = v11;
    v14 = v13;

    v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books22PageCurlViewController_columns];
    result = (char *)objc_msgSend(v8, "view");
    if (result)
    {
      v16 = result;
      v17 = v12 / (double)v15;
      objc_msgSend(result, "setFrame:", 0.0, 0.0, v17, v14);

      v18 = &v8[OBJC_IVAR____TtC5Books24SinglePageViewController_contentRect];
      *(_QWORD *)v18 = 0;
      *((_QWORD *)v18 + 1) = 0;
      *((double *)v18 + 2) = v17;
      *((double *)v18 + 3) = v14;
      sub_1004B078C();
      return v8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1004FAF24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t, __n128);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = type metadata accessor for BookNavigationDirection(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - v6;
  v8 = v0 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService;
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
  v10 = *(_QWORD *)(v8 + 8);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v9);
  v12 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v10);
  v13 = swift_unknownObjectRelease(v9);
  BookPaginationEntity.navigationDirection.getter(v13);
  v14 = swift_release(v12);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v4, enum case for BookNavigationDirection.rightToLeft(_:), v1, v14);
  v15 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
  dispatch thunk of RawRepresentable.rawValue.getter(&v25, v1, v15);
  dispatch thunk of RawRepresentable.rawValue.getter(&v23, v1, v15);
  v16 = v26;
  v17 = v24;
  if (v25 == v23 && v26 == v24)
  {
    v18 = swift_bridgeObjectRelease_n(v26, 2);
    v19 = 1;
  }
  else
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v25, v26, v23, v24, 0);
    swift_bridgeObjectRelease(v16);
    v18 = swift_bridgeObjectRelease(v17);
    if ((v20 & 1) != 0)
      v19 = 1;
    else
      v19 = -1;
  }
  v21 = *(void (**)(char *, uint64_t, __n128))(v2 + 8);
  v21(v4, v1, v18);
  ((void (*)(char *, uint64_t))v21)(v7, v1);
  return v19;
}

uint64_t sub_1004FB0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t v39;
  __n128 v40;
  __n128 v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[24];
  char v49[24];

  v43 = a2;
  v46 = a1;
  v47 = a3;
  v4 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v4);
  v45 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v44 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - v10;
  v12 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v42 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)&v42 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v42 - v22;
  v24 = v3 + OBJC_IVAR____TtC5Books22PageCurlViewController_pendingDestinationSpread;
  swift_beginAccess(v3 + OBJC_IVAR____TtC5Books22PageCurlViewController_pendingDestinationSpread, v49, 0, 0);
  sub_10000B5E4(v24, (uint64_t)v20, (uint64_t *)&unk_1009E8E70);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v25(v20, 1, v6) == 1)
  {
    v27 = v44;
    v26 = (uint64_t)v45;
    v42 = v23;
    v28 = v3;
    sub_100010960((uint64_t)v20, (uint64_t *)&unk_1009E8E70);
    sub_10000B5E4(v46, (uint64_t)v14, (uint64_t *)&unk_1009E8E70);
    if (v25(v14, 1, v6) == 1)
    {
      sub_100010960((uint64_t)v14, (uint64_t *)&unk_1009E8E70);
      v29 = v47;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v29, 1, 1, v6);
    }
    v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v27, v14, v6);
    SpreadPaginationEntity.firstLocation.getter(v32);
    v33 = type metadata accessor for PageLocation(0);
    v34 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v26, 1, v33);
    sub_100010960(v26, &qword_1009E3508);
    v29 = v47;
    if (v34 == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v6);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v29, 1, 1, v6);
    }
    v37 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
    v36 = *(_QWORD *)(v28 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain(v37);
    v39 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v36);
    v40 = swift_unknownObjectRelease(v37);
    v23 = v42;
    BookPaginationEntity.spread(_:offsetBy:)(v27, v43, v40);
    v41 = swift_release(v39);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v27, v6, v41);
  }
  else
  {
    v30 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v30(v11, v20, v6);
    v30(v23, v11, v6);
    v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v31(v23, 0, 1, v6);
    v31(v17, 1, 1, v6);
    swift_beginAccess(v24, v48, 33, 0);
    sub_100502658((uint64_t)v17, v24);
    swift_endAccess(v48);
    v29 = v47;
  }
  return sub_100503D50((uint64_t)v23, v29);
}

uint64_t sub_1004FB484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(char *, uint64_t, __n128);
  uint64_t v28;
  char v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v47[0] = a2;
  v47[1] = a1;
  v3 = sub_10004CFD4(&qword_1009E6750);
  __chkstk_darwin(v3);
  v5 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v47 - v7;
  v9 = type metadata accessor for BookNavigationDirection(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v47 - v14;
  v16 = v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService;
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
  v18 = *(_QWORD *)(v16 + 8);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v17);
  v20 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v18);
  v21 = swift_unknownObjectRelease(v17);
  BookPaginationEntity.navigationDirection.getter(v21);
  v22 = swift_release(v20);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104))(v12, enum case for BookNavigationDirection.rightToLeft(_:), v9, v22);
  v23 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
  dispatch thunk of RawRepresentable.rawValue.getter(&v50, v9, v23);
  dispatch thunk of RawRepresentable.rawValue.getter(&v48, v9, v23);
  v24 = v51;
  v25 = v49;
  if (v50 == v48 && v51 == v49)
  {
    v26 = swift_bridgeObjectRelease_n(v51, 2);
    v27 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
    v27(v12, v9, v26);
    v28 = ((uint64_t (*)(char *, uint64_t))v27)(v15, v9);
LABEL_5:
    v32 = SpreadPaginationEntity.columns.getter(v28);
    v33 = *(_QWORD *)(v32 + 16);
    if (v33)
    {
      v34 = v33 - 1;
      v35 = type metadata accessor for SpreadPaginationEntity.Column(0);
      v36 = *(_QWORD *)(v35 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v8, v32+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v8, 0, 1, v35);
    }
    else
    {
      v35 = type metadata accessor for SpreadPaginationEntity.Column(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v8, 1, 1, v35);
    }
    swift_bridgeObjectRelease(v32);
    type metadata accessor for SpreadPaginationEntity.Column(0);
    v37 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v8, 1, v35) != 1)
    {
      SpreadPaginationEntity.Column.location.getter();
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v8, v35);
    }
    v38 = (uint64_t)v8;
    goto LABEL_16;
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v51, v48, v49, 0);
  swift_bridgeObjectRelease(v24);
  v30 = swift_bridgeObjectRelease(v25);
  v31 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
  v31(v12, v9, v30);
  v28 = ((uint64_t (*)(char *, uint64_t))v31)(v15, v9);
  if ((v29 & 1) != 0)
    goto LABEL_5;
  v40 = SpreadPaginationEntity.columns.getter(v28);
  v41 = *(_QWORD *)(v40 + 16);
  v42 = type metadata accessor for SpreadPaginationEntity.Column(0);
  v43 = *(_QWORD *)(v42 - 8);
  if (v41)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v5, v40 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80)), v42);
    v44 = 0;
  }
  else
  {
    v44 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v5, v44, 1, v42);
  v45 = swift_bridgeObjectRelease(v40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v43 + 48))(v5, 1, v42, v45) != 1)
  {
    SpreadPaginationEntity.Column.location.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v5, v42);
  }
  v38 = (uint64_t)v5;
LABEL_16:
  sub_100010960(v38, &qword_1009E6750);
  v46 = type metadata accessor for PageLocation(0);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v47[0], 1, 1, v46);
}

uint64_t sub_1004FB874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  __n128 v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(char *, uint64_t, __n128);
  uint64_t v28;
  char v29;
  __n128 v30;
  void (*v31)(char *, uint64_t, __n128);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v47[0] = a2;
  v47[1] = a1;
  v3 = sub_10004CFD4(&qword_1009E6750);
  __chkstk_darwin(v3);
  v5 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v47 - v7;
  v9 = type metadata accessor for BookNavigationDirection(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v47 - v14;
  v16 = v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService;
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
  v18 = *(_QWORD *)(v16 + 8);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v17);
  v20 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v18);
  v21 = swift_unknownObjectRelease(v17);
  BookPaginationEntity.navigationDirection.getter(v21);
  v22 = swift_release(v20);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v10 + 104))(v12, enum case for BookNavigationDirection.rightToLeft(_:), v9, v22);
  v23 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
  dispatch thunk of RawRepresentable.rawValue.getter(&v50, v9, v23);
  dispatch thunk of RawRepresentable.rawValue.getter(&v48, v9, v23);
  v24 = v51;
  v25 = v49;
  if (v50 == v48 && v51 == v49)
  {
    v26 = swift_bridgeObjectRelease_n(v51, 2);
    v27 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
    v27(v12, v9, v26);
    v28 = ((uint64_t (*)(char *, uint64_t))v27)(v15, v9);
LABEL_5:
    v32 = SpreadPaginationEntity.columns.getter(v28);
    v33 = *(_QWORD *)(v32 + 16);
    v34 = type metadata accessor for SpreadPaginationEntity.Column(0);
    v35 = *(_QWORD *)(v34 - 8);
    if (v33)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(v8, v32 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80)), v34);
      v36 = 0;
    }
    else
    {
      v36 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v8, v36, 1, v34);
    v37 = swift_bridgeObjectRelease(v32);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v35 + 48))(v8, 1, v34, v37) != 1)
    {
      SpreadPaginationEntity.Column.location.getter();
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v8, v34);
    }
    v38 = (uint64_t)v8;
    goto LABEL_16;
  }
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v51, v48, v49, 0);
  swift_bridgeObjectRelease(v24);
  v30 = swift_bridgeObjectRelease(v25);
  v31 = *(void (**)(char *, uint64_t, __n128))(v10 + 8);
  v31(v12, v9, v30);
  v28 = ((uint64_t (*)(char *, uint64_t))v31)(v15, v9);
  if ((v29 & 1) != 0)
    goto LABEL_5;
  v40 = SpreadPaginationEntity.columns.getter(v28);
  v41 = *(_QWORD *)(v40 + 16);
  if (v41)
  {
    v42 = v41 - 1;
    v43 = type metadata accessor for SpreadPaginationEntity.Column(0);
    v44 = *(_QWORD *)(v43 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v5, v40+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v42, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v5, 0, 1, v43);
  }
  else
  {
    v43 = type metadata accessor for SpreadPaginationEntity.Column(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v5, 1, 1, v43);
  }
  swift_bridgeObjectRelease(v40);
  type metadata accessor for SpreadPaginationEntity.Column(0);
  v45 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v5, 1, v43) != 1)
  {
    SpreadPaginationEntity.Column.location.getter();
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v5, v43);
  }
  v38 = (uint64_t)v5;
LABEL_16:
  sub_100010960(v38, &qword_1009E6750);
  v46 = type metadata accessor for PageLocation(0);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v47[0], 1, 1, v46);
}

id sub_1004FBC64()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  id result;
  char *v11;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5Books22PageCurlViewController_columns;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books22PageCurlViewController_columns];
  v4 = &v0[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService];
  v6 = *((_QWORD *)v4 + 1);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v5);
  v8 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v6);
  swift_unknownObjectRelease(v5);
  v9 = sub_1005029F0(v3);
  objc_msgSend(v1, "_setSpineLocation:", v9, swift_release(v8).n128_f64[0]);
  objc_msgSend(v1, "setDoubleSided:", v9 == 2);
  result = objc_msgSend(v1, "_invalidatePageCurl");
  v11 = &v1[OBJC_IVAR____TtC5Books22PageCurlViewController_oldColumnCount];
  *(_QWORD *)v11 = *(_QWORD *)&v1[v2];
  v11[8] = 0;
  return result;
}

uint64_t sub_1004FBD44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  char v24;
  uint64_t v26;

  v2 = v1;
  v4 = type metadata accessor for Location(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - v9;
  v11 = sub_1004FAF24();
  if (a1 == 1)
    v12 = v11;
  else
    v12 = -v11;
  if (v12 == -1)
  {
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_currentLocationProvider + 8);
    ObjectType = swift_getObjectType();
    dispatch thunk of LocationProviding.currentLocation.getter(ObjectType, v18);
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
    v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
    v21 = swift_getObjectType();
    swift_unknownObjectRetain(v15);
    Paginating.firstLocation.getter(v21, v20);
  }
  else
  {
    if (v12 != 1)
    {
      v24 = 0;
      return v24 & 1;
    }
    v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_currentLocationProvider + 8);
    v14 = swift_getObjectType();
    dispatch thunk of LocationProviding.currentLocation.getter(v14, v13);
    v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
    v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
    v17 = swift_getObjectType();
    swift_unknownObjectRetain(v15);
    Paginating.lastLocation.getter(v17, v16);
  }
  swift_unknownObjectRelease(v15);
  v22 = static Location.== infix(_:_:)(v10, v7);
  v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v7, v4);
  v23(v10, v4);
  v24 = v22 ^ 1;
  return v24 & 1;
}

char *sub_1004FBF20(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int (*v130)(char *, uint64_t, uint64_t);
  uint64_t (*v131)(char *, _QWORD, uint64_t, uint64_t);
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t ObjectType;
  uint64_t v137;
  __n128 v138;
  __n128 v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  __n128 v145;
  void (*v146)(char *, uint64_t, __n128);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __n128 v167;
  uint64_t v168;
  uint64_t v169;
  unsigned int (*v170)(uint64_t, uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(uint64_t, char *, uint64_t);
  uint64_t v176;
  void (*v177)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char v193;
  void (*v194)(char *, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  unsigned int (*v208)(uint64_t, uint64_t, uint64_t);
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void (*v212)(uint64_t, char *, uint64_t);
  uint64_t v213;
  uint64_t v214;
  void (*v215)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  __n128 v229;
  char *v230;
  __n128 v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  __n128 v238;
  void (*v239)(char *, uint64_t, __n128);
  uint64_t v240;
  uint64_t v241;
  void (*v242)(char *, uint64_t);
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  char v248;
  void (*v249)(char *, uint64_t);
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  unsigned int (*v256)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unsigned int v261;
  uint64_t v262;
  char v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  __n128 v268;
  char *v269;
  __n128 v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  __n128 v277;
  void (*v278)(char *, uint64_t, __n128);
  uint64_t v279;
  uint64_t v280;
  __n128 v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  __n128 v287;
  char *v288;
  __n128 v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  char v294;
  __n128 v295;
  void (*v296)(char *, uint64_t, __n128);
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  char v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  __n128 v309;
  __n128 v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  __n128 v317;
  void (*v318)(char *, uint64_t, __n128);
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  __n128 v323;
  uint64_t v324;
  unsigned int v325;
  uint64_t v326;
  char v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  __n128 v333;
  char *v334;
  __n128 v335;
  char *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  __n128 v342;
  void (*v343)(char *, uint64_t, __n128);
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  char v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  __n128 v355;
  char *v356;
  __n128 v357;
  char *v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  __n128 v364;
  void (*v365)(char *, uint64_t, __n128);
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v370;
  uint64_t v371;
  char *v372;
  char *v373;
  char *v374;
  char *v375;
  char *v376;
  char *v377;
  char *v378;
  uint64_t v379;
  char *v380;
  char *v381;
  char *v382;
  uint64_t v383;
  char *v384;
  char *v385;
  char *v386;
  char *v387;
  char *v388;
  char *v389;
  char *v390;
  char *v391;
  char *v392;
  char *v393;
  uint64_t v394;
  char *v395;
  char *v396;
  char *v397;
  char *v398;
  char *v399;
  char *v400;
  char *v401;
  uint64_t v402;
  char *v403;
  char *v404;
  char *v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  char *v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  char *v421;
  uint64_t v422;
  unsigned int (*v423)(uint64_t, uint64_t, uint64_t);
  char *v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  char v433[8];

  v424 = a1;
  v4 = type metadata accessor for PageLocation(0);
  v5 = *(_QWORD *)(v4 - 8);
  v417 = v4;
  v418 = v5;
  __chkstk_darwin(v4);
  v378 = (char *)&v370 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v375 = (char *)&v370 - v8;
  __chkstk_darwin(v9);
  v405 = (char *)&v370 - v10;
  v416 = sub_10004CFD4(&qword_1009E6748);
  __chkstk_darwin(v416);
  v415 = (uint64_t)&v370 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v411 = (uint64_t)&v370 - v13;
  v14 = sub_10004CFD4(&qword_1009E6750);
  __chkstk_darwin(v14);
  v396 = (char *)&v370 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v401 = (char *)&v370 - v17;
  __chkstk_darwin(v18);
  v413 = (char *)&v370 - v19;
  __chkstk_darwin(v20);
  v391 = (char *)&v370 - v21;
  __chkstk_darwin(v22);
  v408 = (char *)&v370 - v23;
  v24 = type metadata accessor for BookNavigationDirection(0);
  v422 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v399 = (char *)&v370 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v398 = (char *)&v370 - v27;
  __chkstk_darwin(v28);
  v393 = (char *)&v370 - v29;
  __chkstk_darwin(v30);
  v392 = (char *)&v370 - v31;
  __chkstk_darwin(v32);
  v377 = (char *)&v370 - v33;
  __chkstk_darwin(v34);
  v384 = (char *)&v370 - v35;
  __chkstk_darwin(v36);
  v388 = (char *)&v370 - v37;
  __chkstk_darwin(v38);
  v387 = (char *)&v370 - v39;
  __chkstk_darwin(v40);
  v382 = (char *)&v370 - v41;
  __chkstk_darwin(v42);
  v381 = (char *)&v370 - v43;
  __chkstk_darwin(v44);
  v374 = (char *)&v370 - v45;
  __chkstk_darwin(v46);
  v373 = (char *)&v370 - v47;
  __chkstk_darwin(v48);
  v50 = (char *)&v370 - v49;
  __chkstk_darwin(v51);
  v53 = (char *)&v370 - v52;
  v54 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v54);
  v397 = (char *)&v370 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  v407 = (uint64_t)&v370 - v57;
  __chkstk_darwin(v58);
  v383 = (uint64_t)&v370 - v59;
  __chkstk_darwin(v60);
  v404 = (char *)&v370 - v61;
  __chkstk_darwin(v62);
  v406 = (uint64_t)&v370 - v63;
  __chkstk_darwin(v64);
  v414 = (char *)&v370 - v65;
  __chkstk_darwin(v66);
  v386 = (char *)&v370 - v67;
  __chkstk_darwin(v68);
  v380 = (char *)&v370 - v69;
  __chkstk_darwin(v70);
  v379 = (uint64_t)&v370 - v71;
  __chkstk_darwin(v72);
  v389 = (char *)&v370 - v73;
  __chkstk_darwin(v74);
  v394 = (uint64_t)&v370 - v75;
  __chkstk_darwin(v76);
  v412 = (uint64_t)&v370 - v77;
  __chkstk_darwin(v78);
  v420 = (uint64_t)&v370 - v79;
  __chkstk_darwin(v80);
  v82 = (char *)&v370 - v81;
  v83 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v83);
  v409 = (uint64_t)&v370 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v85);
  v410 = (uint64_t)&v370 - v86;
  __chkstk_darwin(v87);
  v400 = (char *)&v370 - v88;
  __chkstk_darwin(v89);
  v376 = (char *)&v370 - v90;
  __chkstk_darwin(v91);
  v385 = (char *)&v370 - v92;
  __chkstk_darwin(v93);
  v402 = (uint64_t)&v370 - v94;
  __chkstk_darwin(v95);
  v390 = (char *)&v370 - v96;
  __chkstk_darwin(v97);
  v372 = (char *)&v370 - v98;
  __chkstk_darwin(v99);
  v101 = (char *)&v370 - v100;
  __chkstk_darwin(v102);
  v104 = (char *)&v370 - v103;
  __chkstk_darwin(v105);
  v419 = (uint64_t)&v370 - v106;
  __chkstk_darwin(v107);
  v109 = (char *)&v370 - v108;
  v110 = type metadata accessor for SpreadPaginationEntity(0);
  v425 = *(_QWORD *)(v110 - 8);
  v426 = v110;
  __chkstk_darwin(v110);
  v395 = (char *)&v370 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v112);
  v403 = (char *)&v370 - v113;
  __chkstk_darwin(v114);
  v421 = (char *)&v370 - v115;
  __chkstk_darwin(v116);
  v118 = (char *)&v370 - v117;
  v119 = sub_1004FAF24();
  if (a2 == 1)
    v120 = v119;
  else
    v120 = -v119;
  v423 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v120;
  if ((sub_1004FBD44(a2) & 1) != 0)
  {
    v371 = v24;
    v121 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_columns);
    v122 = v2;
    v123 = *(_QWORD *)&v424[OBJC_IVAR____TtC5Books24SinglePageViewController_viewModel];
    v124 = v123 + OBJC_IVAR____TtC5Books17PageCurlViewModel_spread;
    if (v121 == 1)
    {
      swift_beginAccess(v123 + OBJC_IVAR____TtC5Books17PageCurlViewModel_spread, v433, 0, 0);
      v125 = v419;
      sub_10000B5E4(v124, v419, (uint64_t *)&unk_1009E8E70);
      sub_1004FB0E4(v125, (uint64_t)v423, (uint64_t)v109);
      sub_100010960(v125, (uint64_t *)&unk_1009E8E70);
      v127 = v425;
      v126 = v426;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v425 + 48))(v109, 1, v426) == 1)
      {
        v101 = v109;
LABEL_49:
        sub_100010960((uint64_t)v101, (uint64_t *)&unk_1009E8E70);
        v128 = v122 + OBJC_IVAR____TtC5Books22PageCurlViewController_locationController;
        goto LABEL_50;
      }
      (*(void (**)(char *, char *, uint64_t))(v127 + 32))(v118, v109, v126);
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v104, v118, v126);
      v131 = *(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v127 + 56);
      v132 = 1;
      v133 = v131(v104, 0, 1, v126);
      SpreadPaginationEntity.firstLocation.getter(v133);
      v134 = *(_QWORD *)(v122 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
      v135 = *(_QWORD *)(v122 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v134);
      v137 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v135);
      v138 = swift_unknownObjectRelease(v134);
      BookPaginationEntity.navigationDirection.getter(v138);
      v139 = swift_release(v137);
      v140 = v371;
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v422 + 104))(v50, enum case for BookNavigationDirection.rightToLeft(_:), v371, v139);
      v141 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
      dispatch thunk of RawRepresentable.rawValue.getter(&v431, v140, v141);
      dispatch thunk of RawRepresentable.rawValue.getter(&v429, v140, v141);
      v142 = v432;
      v143 = v430;
      if (v431 != v429 || (v144 = v432, v432 != v430))
      {
        v132 = _stringCompareWithSmolCheck(_:_:expecting:)(v431, v432, v429, v430, 0);
        v144 = v143;
      }
      swift_bridgeObjectRelease(v142);
      v145 = swift_bridgeObjectRelease(v144);
      v146 = *(void (**)(char *, uint64_t, __n128))(v422 + 8);
      v147 = v371;
      v146(v50, v371, v145);
      ((void (*)(char *, uint64_t))v146)(v53, v147);
      v148 = type metadata accessor for PageCurlViewModel(0);
      swift_allocObject(v148, *(unsigned int *)(v148 + 48), *(unsigned __int16 *)(v148 + 52));
      v149 = sub_10063E8C8((uint64_t)v104, (uint64_t)v82, v132 & 1, 1, 1, 1, 0);
      (*(void (**)(char *, uint64_t))(v425 + 8))(v118, v426);
LABEL_94:
      swift_retain(v149);
      v218 = sub_1004FADB0(v368);
      swift_release_n(v149, 2);
      return v218;
    }
    v370 = v122;
    swift_beginAccess(v123 + OBJC_IVAR____TtC5Books17PageCurlViewModel_spread, v433, 0, 0);
    sub_10000B5E4(v124, (uint64_t)v101, (uint64_t *)&unk_1009E8E70);
    v129 = v425;
    v130 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v425 + 48);
    if (v130(v101, 1, v426) == 1)
    {
      v122 = v370;
      goto LABEL_49;
    }
    v150 = *(void (**)(char *, char *, uint64_t))(v129 + 32);
    v150(v421, v101, v426);
    v151 = v123 + OBJC_IVAR____TtC5Books17PageCurlViewModel_location;
    swift_beginAccess(v123 + OBJC_IVAR____TtC5Books17PageCurlViewModel_location, &v431, 0, 0);
    v152 = sub_10000B5E4(v151, v420, &qword_1009E3508);
    v153 = SpreadPaginationEntity.columns.getter(v152);
    v154 = *(_QWORD *)(v153 + 16);
    v424 = (char *)v150;
    if (v423 != (unsigned int (*)(uint64_t, uint64_t, uint64_t))-1)
    {
      v155 = type metadata accessor for SpreadPaginationEntity.Column(0);
      v156 = *(_QWORD *)(v155 - 8);
      if (v154)
      {
        v157 = (uint64_t)v413;
        (*(void (**)(char *, unint64_t, uint64_t))(v156 + 16))(v413, v153 + ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80)), v155);
        v158 = 0;
        v159 = v417;
        v160 = v418;
        v161 = v415;
        v162 = v416;
      }
      else
      {
        v158 = 1;
        v159 = v417;
        v160 = v418;
        v161 = v415;
        v162 = v416;
        v157 = (uint64_t)v413;
      }
      v413 = *(char **)(v156 + 56);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v413)(v157, v158, 1, v155);
      v167 = swift_bridgeObjectRelease(v153);
      v416 = *(_QWORD *)(v156 + 48);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v416)(v157, 1, v155, v167) == 1)
      {
        sub_100010960(v157, &qword_1009E6750);
        v168 = (uint64_t)v414;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v414, 1, 1, v159);
      }
      else
      {
        v168 = (uint64_t)v414;
        SpreadPaginationEntity.Column.location.getter();
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v157, v155);
      }
      v169 = v161 + *(int *)(v162 + 48);
      sub_10000B5E4(v420, v161, &qword_1009E3508);
      sub_10000B5E4(v168, v169, &qword_1009E3508);
      v170 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v160 + 48);
      if (v170(v161, 1, v159) == 1)
      {
        sub_100010960(v168, &qword_1009E3508);
        if (v170(v169, 1, v159) == 1)
        {
          v171 = sub_100010960(v161, &qword_1009E3508);
          goto LABEL_35;
        }
      }
      else
      {
        v172 = v406;
        sub_10000B5E4(v161, v406, &qword_1009E3508);
        if (v170(v169, 1, v159) != 1)
        {
          v189 = v418;
          v190 = v405;
          (*(void (**)(char *, uint64_t, uint64_t))(v418 + 32))(v405, v169, v159);
          v191 = sub_100008DB0((unint64_t *)&unk_1009E8ED0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
          v192 = v172;
          v193 = dispatch thunk of static Equatable.== infix(_:_:)(v172, v190, v159, v191);
          v194 = *(void (**)(char *, uint64_t))(v189 + 8);
          v194(v190, v159);
          sub_100010960(v168, &qword_1009E3508);
          v194((char *)v192, v159);
          v171 = sub_100010960(v415, &qword_1009E3508);
          if ((v193 & 1) != 0)
          {
LABEL_35:
            v195 = SpreadPaginationEntity.columns.getter(v171);
            v196 = v195;
            v197 = *(_QWORD *)(v195 + 16);
            if (v197)
            {
              v198 = (uint64_t)v401;
              (*(void (**)(char *, unint64_t, uint64_t))(v156 + 16))(v401, v195+ ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80))+ *(_QWORD *)(v156 + 72) * (v197 - 1), v155);
              v199 = 0;
            }
            else
            {
              v199 = 1;
              v198 = (uint64_t)v401;
            }
            v255 = (uint64_t)v400;
            v256 = (unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v416;
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v413)(v198, v199, 1, v155);
            v257 = swift_bridgeObjectRelease(v196);
            if (v256(v198, 1, v155, v257) == 1)
            {
              sub_100010960(v198, &qword_1009E6750);
              v258 = v418;
              v259 = (uint64_t)v404;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v418 + 56))(v404, 1, 1, v159);
              v260 = v425;
            }
            else
            {
              v259 = (uint64_t)v404;
              SpreadPaginationEntity.Column.location.getter();
              (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v198, v155);
              v261 = v170(v259, 1, v159);
              v260 = v425;
              v258 = v418;
              if (v261 != 1)
              {
                v300 = v378;
                (*(void (**)(char *, uint64_t, uint64_t))(v418 + 32))(v378, v259, v159);
                v301 = (uint64_t)v376;
                v302 = v426;
                (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v376, v421, v426);
                v303 = 1;
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v260 + 56))(v301, 0, 1, v302);
                v304 = v383;
                (*(void (**)(uint64_t, char *, uint64_t))(v258 + 16))(v383, v300, v159);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v258 + 56))(v304, 0, 1, v159);
                v305 = *(_QWORD *)(v370 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
                v306 = *(_QWORD *)(v370 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
                v307 = swift_getObjectType();
                swift_unknownObjectRetain(v305);
                v308 = dispatch thunk of Paginating.bookPaginationEntity.getter(v307, v306);
                v309 = swift_unknownObjectRelease(v305);
                BookPaginationEntity.navigationDirection.getter(v309);
                v310 = swift_release(v308);
                v311 = v377;
                v312 = v371;
                (*(void (**)(char *, _QWORD, uint64_t, __n128))(v422 + 104))(v377, enum case for BookNavigationDirection.rightToLeft(_:), v371, v310);
                v313 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
                dispatch thunk of RawRepresentable.rawValue.getter(&v429, v312, v313);
                dispatch thunk of RawRepresentable.rawValue.getter(&v427, v312, v313);
                v314 = v430;
                v315 = v428;
                if (v429 != v427 || (v316 = v430, v430 != v428))
                {
                  v303 = _stringCompareWithSmolCheck(_:_:expecting:)(v429, v430, v427, v428, 0);
                  v316 = v315;
                }
                swift_bridgeObjectRelease(v314);
                v317 = swift_bridgeObjectRelease(v316);
                v318 = *(void (**)(char *, uint64_t, __n128))(v422 + 8);
                v319 = v371;
                v318(v311, v371, v317);
                ((void (*)(char *, uint64_t))v318)(v384, v319);
                v320 = type metadata accessor for PageCurlViewModel(0);
                swift_allocObject(v320, *(unsigned int *)(v320 + 48), *(unsigned __int16 *)(v320 + 52));
                v149 = sub_10063E8C8(v301, v383, v303 & 1, 1, 0, 1, 0);
                (*(void (**)(char *, uint64_t))(v418 + 8))(v300, v417);
                goto LABEL_80;
              }
            }
            sub_100010960(v259, &qword_1009E3508);
            v262 = v426;
            (*(void (**)(uint64_t, char *, uint64_t))(v260 + 16))(v255, v421, v426);
            v263 = 1;
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v260 + 56))(v255, 0, 1, v262);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v258 + 56))(v407, 1, 1, v159);
            v264 = *(_QWORD *)(v370 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
            v265 = *(_QWORD *)(v370 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
            v266 = swift_getObjectType();
            swift_unknownObjectRetain(v264);
            v267 = dispatch thunk of Paginating.bookPaginationEntity.getter(v266, v265);
            v268 = swift_unknownObjectRelease(v264);
            v269 = v392;
            BookPaginationEntity.navigationDirection.getter(v268);
            v270 = swift_release(v267);
            v271 = v393;
            v272 = v371;
            (*(void (**)(char *, _QWORD, uint64_t, __n128))(v422 + 104))(v393, enum case for BookNavigationDirection.rightToLeft(_:), v371, v270);
            v273 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
            dispatch thunk of RawRepresentable.rawValue.getter(&v429, v272, v273);
            dispatch thunk of RawRepresentable.rawValue.getter(&v427, v272, v273);
            v274 = v430;
            v275 = v428;
            if (v429 != v427 || (v276 = v430, v430 != v428))
            {
              v263 = _stringCompareWithSmolCheck(_:_:expecting:)(v429, v430, v427, v428, 0);
              v276 = v275;
            }
            swift_bridgeObjectRelease(v274);
            v277 = swift_bridgeObjectRelease(v276);
            v278 = *(void (**)(char *, uint64_t, __n128))(v422 + 8);
            v279 = v371;
            v278(v271, v371, v277);
            ((void (*)(char *, uint64_t))v278)(v269, v279);
            v280 = type metadata accessor for PageCurlViewModel(0);
            swift_allocObject(v280, *(unsigned int *)(v280 + 48), *(unsigned __int16 *)(v280 + 52));
            v149 = sub_10063E8C8(v255, v407, v263 & 1, 0, 0, 1, 0);
LABEL_80:
            sub_100010960(v420, &qword_1009E3508);
            (*(void (**)(char *, uint64_t))(v260 + 8))(v421, v426);
            goto LABEL_94;
          }
          goto LABEL_30;
        }
        sub_100010960(v168, &qword_1009E3508);
        (*(void (**)(uint64_t, uint64_t))(v418 + 8))(v172, v159);
      }
      sub_100010960(v161, &qword_1009E6748);
LABEL_30:
      v173 = v425;
      v174 = v426;
      v175 = *(void (**)(uint64_t, char *, uint64_t))(v425 + 16);
      v176 = v419;
      v175(v419, v421, v426);
      v177 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v173 + 56);
      v177(v176, 0, 1, v174);
      v178 = v410;
      v122 = v370;
      sub_1004FB0E4(v176, (uint64_t)v423, v410);
      sub_100010960(v176, (uint64_t *)&unk_1009E8E70);
      if (v130((char *)v178, 1, v174) == 1)
      {
        v129 = v425;
LABEL_48:
        sub_100010960(v420, &qword_1009E3508);
        (*(void (**)(char *, uint64_t))(v129 + 8))(v421, v426);
        v101 = (char *)v178;
        goto LABEL_49;
      }
      v179 = v395;
      v180 = v426;
      ((void (*)(char *, uint64_t, uint64_t))v424)(v395, v178, v426);
      v181 = v409;
      v175(v409, v179, v180);
      v182 = 1;
      v183 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v177)(v181, 0, 1, v180);
      v184 = SpreadPaginationEntity.columns.getter(v183);
      v185 = v184;
      if (*(_QWORD *)(v184 + 16))
      {
        v186 = (uint64_t)v396;
        (*(void (**)(char *, unint64_t, uint64_t))(v156 + 16))(v396, v184 + ((*(unsigned __int8 *)(v156 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80)), v155);
        v182 = 0;
        v187 = v399;
        v188 = (uint64_t)v397;
      }
      else
      {
        v187 = v399;
        v188 = (uint64_t)v397;
        v186 = (uint64_t)v396;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v413)(v186, v182, 1, v155);
      v281 = swift_bridgeObjectRelease(v185);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v416)(v186, 1, v155, v281) == 1)
      {
        sub_100010960(v186, &qword_1009E6750);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v418 + 56))(v188, 1, 1, v417);
      }
      else
      {
        SpreadPaginationEntity.Column.location.getter();
        (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v186, v155);
      }
      v282 = v425;
      v284 = *(_QWORD *)(v122 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
      v283 = *(_QWORD *)(v122 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
      v285 = swift_getObjectType();
      swift_unknownObjectRetain(v284);
      v286 = dispatch thunk of Paginating.bookPaginationEntity.getter(v285, v283);
      v287 = swift_unknownObjectRelease(v284);
      v288 = v398;
      BookPaginationEntity.navigationDirection.getter(v287);
      v289 = swift_release(v286);
      v290 = v371;
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v422 + 104))(v187, enum case for BookNavigationDirection.rightToLeft(_:), v371, v289);
      v291 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
      dispatch thunk of RawRepresentable.rawValue.getter(&v429, v290, v291);
      dispatch thunk of RawRepresentable.rawValue.getter(&v427, v290, v291);
      v292 = v430;
      v293 = v428;
      if (v429 == v427 && v430 == v428)
      {
        v294 = 1;
        v293 = v430;
      }
      else
      {
        v294 = _stringCompareWithSmolCheck(_:_:expecting:)(v429, v430, v427, v428, 0);
      }
      swift_bridgeObjectRelease(v292);
      v295 = swift_bridgeObjectRelease(v293);
      v296 = *(void (**)(char *, uint64_t, __n128))(v422 + 8);
      v297 = v371;
      v296(v187, v371, v295);
      ((void (*)(char *, uint64_t))v296)(v288, v297);
      v298 = type metadata accessor for PageCurlViewModel(0);
      swift_allocObject(v298, *(unsigned int *)(v298 + 48), *(unsigned __int16 *)(v298 + 52));
      v149 = sub_10063E8C8(v409, v188, v294 & 1, 0, 0, 1, 0);
      v242 = *(void (**)(char *, uint64_t))(v282 + 8);
      v243 = v179;
LABEL_75:
      v299 = v426;
      v242(v243, v426);
      sub_100010960(v420, &qword_1009E3508);
      v242(v421, v299);
      goto LABEL_94;
    }
    if (v154)
    {
      v163 = v154 - 1;
      v164 = type metadata accessor for SpreadPaginationEntity.Column(0);
      v165 = *(_QWORD *)(v164 - 8);
      v166 = (uint64_t)v408;
      (*(void (**)(char *, unint64_t, uint64_t))(v165 + 16))(v408, v153+ ((*(unsigned __int8 *)(v165 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v165 + 80))+ *(_QWORD *)(v165 + 72) * v163, v164);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v165 + 56))(v166, 0, 1, v164);
    }
    else
    {
      v164 = type metadata accessor for SpreadPaginationEntity.Column(0);
      v166 = (uint64_t)v408;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v164 - 8) + 56))(v408, 1, 1, v164);
    }
    v200 = v417;
    v201 = v412;
    swift_bridgeObjectRelease(v153);
    type metadata accessor for SpreadPaginationEntity.Column(0);
    v202 = *(_QWORD *)(v164 - 8);
    v423 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v202 + 48);
    if (v423(v166, 1, v164) == 1)
    {
      v203 = v202;
      sub_100010960(v166, &qword_1009E6750);
      v204 = v418;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v418 + 56))(v201, 1, 1, v200);
    }
    else
    {
      SpreadPaginationEntity.Column.location.getter();
      v203 = v202;
      (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v166, v164);
      v204 = v418;
    }
    v205 = v201;
    v206 = v411;
    v207 = v411 + *(int *)(v416 + 48);
    sub_10000B5E4(v420, v411, &qword_1009E3508);
    sub_10000B5E4(v205, v207, &qword_1009E3508);
    v208 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48);
    if (v208(v206, 1, v200) == 1)
    {
      sub_100010960(v205, &qword_1009E3508);
      if (v208(v207, 1, v200) == 1)
      {
        v209 = sub_100010960(v206, &qword_1009E3508);
        v210 = v203;
        goto LABEL_56;
      }
    }
    else
    {
      v211 = v394;
      sub_10000B5E4(v206, v394, &qword_1009E3508);
      if (v208(v207, 1, v200) != 1)
      {
        v210 = v203;
        v244 = v418;
        v245 = v211;
        v246 = v405;
        (*(void (**)(char *, uint64_t, uint64_t))(v418 + 32))(v405, v207, v200);
        v247 = sub_100008DB0((unint64_t *)&unk_1009E8ED0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
        v248 = dispatch thunk of static Equatable.== infix(_:_:)(v245, v246, v200, v247);
        v249 = *(void (**)(char *, uint64_t))(v244 + 8);
        v249(v246, v200);
        sub_100010960(v412, &qword_1009E3508);
        v249((char *)v245, v417);
        v129 = v425;
        v200 = v417;
        v209 = sub_100010960(v411, &qword_1009E3508);
        if ((v248 & 1) != 0)
        {
LABEL_56:
          v250 = SpreadPaginationEntity.columns.getter(v209);
          v251 = v250;
          v252 = v370;
          if (*(_QWORD *)(v250 + 16))
          {
            v253 = (uint64_t)v391;
            (*(void (**)(char *, unint64_t, uint64_t))(v210 + 16))(v391, v250 + ((*(unsigned __int8 *)(v210 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v210 + 80)), v164);
            v254 = 0;
          }
          else
          {
            v254 = 1;
            v253 = (uint64_t)v391;
          }
          v321 = (uint64_t)v390;
          v322 = (uint64_t)v389;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v210 + 56))(v253, v254, 1, v164);
          v323 = swift_bridgeObjectRelease(v251);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v423)(v253, 1, v164, v323) == 1)
          {
            sub_100010960(v253, &qword_1009E6750);
            v324 = v418;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v418 + 56))(v322, 1, 1, v200);
          }
          else
          {
            SpreadPaginationEntity.Column.location.getter();
            (*(void (**)(uint64_t, uint64_t))(v210 + 8))(v253, v164);
            v325 = v208(v322, 1, v200);
            v324 = v418;
            if (v325 != 1)
            {
              v346 = v375;
              (*(void (**)(char *, uint64_t, uint64_t))(v418 + 32))(v375, v322, v200);
              v347 = (uint64_t)v372;
              v348 = v426;
              (*(void (**)(char *, char *, uint64_t))(v129 + 16))(v372, v421, v426);
              v349 = 1;
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v129 + 56))(v347, 0, 1, v348);
              v350 = v379;
              (*(void (**)(uint64_t, char *, uint64_t))(v324 + 16))(v379, v346, v200);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v324 + 56))(v350, 0, 1, v200);
              v351 = *(_QWORD *)(v252 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
              v352 = *(_QWORD *)(v252 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
              v353 = swift_getObjectType();
              swift_unknownObjectRetain(v351);
              v354 = dispatch thunk of Paginating.bookPaginationEntity.getter(v353, v352);
              v355 = swift_unknownObjectRelease(v351);
              v356 = v373;
              BookPaginationEntity.navigationDirection.getter(v355);
              v357 = swift_release(v354);
              v358 = v374;
              v359 = v371;
              (*(void (**)(char *, _QWORD, uint64_t, __n128))(v422 + 104))(v374, enum case for BookNavigationDirection.rightToLeft(_:), v371, v357);
              v360 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
              dispatch thunk of RawRepresentable.rawValue.getter(&v429, v359, v360);
              dispatch thunk of RawRepresentable.rawValue.getter(&v427, v359, v360);
              v361 = v430;
              v362 = v428;
              if (v429 != v427 || (v363 = v430, v430 != v428))
              {
                v349 = _stringCompareWithSmolCheck(_:_:expecting:)(v429, v430, v427, v428, 0);
                v363 = v362;
              }
              swift_bridgeObjectRelease(v361);
              v364 = swift_bridgeObjectRelease(v363);
              v365 = *(void (**)(char *, uint64_t, __n128))(v422 + 8);
              v366 = v371;
              v365(v358, v371, v364);
              ((void (*)(char *, uint64_t))v365)(v356, v366);
              v367 = type metadata accessor for PageCurlViewModel(0);
              swift_allocObject(v367, *(unsigned int *)(v367 + 48), *(unsigned __int16 *)(v367 + 52));
              v149 = sub_10063E8C8(v347, v379, v349 & 1, 1, 0, 1, 0);
              (*(void (**)(char *, uint64_t))(v418 + 8))(v346, v417);
              goto LABEL_93;
            }
          }
          sub_100010960(v322, &qword_1009E3508);
          v326 = v426;
          (*(void (**)(uint64_t, char *, uint64_t))(v129 + 16))(v321, v421, v426);
          v327 = 1;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v129 + 56))(v321, 0, 1, v326);
          v328 = (uint64_t)v380;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v324 + 56))(v380, 1, 1, v200);
          v329 = *(_QWORD *)(v252 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
          v330 = *(_QWORD *)(v252 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
          v331 = swift_getObjectType();
          swift_unknownObjectRetain(v329);
          v332 = dispatch thunk of Paginating.bookPaginationEntity.getter(v331, v330);
          v333 = swift_unknownObjectRelease(v329);
          v334 = v381;
          BookPaginationEntity.navigationDirection.getter(v333);
          v335 = swift_release(v332);
          v336 = v382;
          v337 = v371;
          (*(void (**)(char *, _QWORD, uint64_t, __n128))(v422 + 104))(v382, enum case for BookNavigationDirection.rightToLeft(_:), v371, v335);
          v338 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
          dispatch thunk of RawRepresentable.rawValue.getter(&v429, v337, v338);
          dispatch thunk of RawRepresentable.rawValue.getter(&v427, v337, v338);
          v339 = v430;
          v340 = v428;
          if (v429 != v427 || (v341 = v430, v430 != v428))
          {
            v327 = _stringCompareWithSmolCheck(_:_:expecting:)(v429, v430, v427, v428, 0);
            v341 = v340;
          }
          swift_bridgeObjectRelease(v339);
          v342 = swift_bridgeObjectRelease(v341);
          v343 = *(void (**)(char *, uint64_t, __n128))(v422 + 8);
          v344 = v371;
          v343(v336, v371, v342);
          ((void (*)(char *, uint64_t))v343)(v334, v344);
          v345 = type metadata accessor for PageCurlViewModel(0);
          swift_allocObject(v345, *(unsigned int *)(v345 + 48), *(unsigned __int16 *)(v345 + 52));
          v149 = sub_10063E8C8(v321, v328, v327 & 1, 0, 0, 1, 0);
LABEL_93:
          sub_100010960(v420, &qword_1009E3508);
          (*(void (**)(char *, uint64_t))(v129 + 8))(v421, v426);
          goto LABEL_94;
        }
LABEL_47:
        v212 = *(void (**)(uint64_t, char *, uint64_t))(v129 + 16);
        v213 = v419;
        v214 = v426;
        v212(v419, v421, v426);
        v215 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v129 + 56);
        v215(v213, 0, 1, v214);
        v178 = v402;
        v122 = v370;
        sub_1004FB0E4(v213, -1, v402);
        sub_100010960(v213, (uint64_t *)&unk_1009E8E70);
        if (v130((char *)v178, 1, v214) == 1)
          goto LABEL_48;
        v219 = v403;
        v220 = v426;
        ((void (*)(char *, uint64_t, uint64_t))v424)(v403, v178, v426);
        v221 = (uint64_t)v385;
        v212((uint64_t)v385, v219, v220);
        v222 = 1;
        v223 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v215)(v221, 0, 1, v220);
        v224 = (uint64_t)v386;
        SpreadPaginationEntity.lastLocation.getter(v223);
        v225 = *(_QWORD *)(v122 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
        v226 = *(_QWORD *)(v122 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
        v227 = swift_getObjectType();
        swift_unknownObjectRetain(v225);
        v228 = dispatch thunk of Paginating.bookPaginationEntity.getter(v227, v226);
        v229 = swift_unknownObjectRelease(v225);
        v230 = v387;
        BookPaginationEntity.navigationDirection.getter(v229);
        v231 = swift_release(v228);
        v232 = v388;
        v233 = v371;
        (*(void (**)(char *, _QWORD, uint64_t, __n128))(v422 + 104))(v388, enum case for BookNavigationDirection.rightToLeft(_:), v371, v231);
        v234 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
        dispatch thunk of RawRepresentable.rawValue.getter(&v429, v233, v234);
        dispatch thunk of RawRepresentable.rawValue.getter(&v427, v233, v234);
        v235 = v430;
        v236 = v428;
        if (v429 != v427 || (v237 = v430, v430 != v428))
        {
          v222 = _stringCompareWithSmolCheck(_:_:expecting:)(v429, v430, v427, v428, 0);
          v237 = v236;
        }
        swift_bridgeObjectRelease(v235);
        v238 = swift_bridgeObjectRelease(v237);
        v239 = *(void (**)(char *, uint64_t, __n128))(v422 + 8);
        v240 = v371;
        v239(v232, v371, v238);
        ((void (*)(char *, uint64_t))v239)(v230, v240);
        v241 = type metadata accessor for PageCurlViewModel(0);
        swift_allocObject(v241, *(unsigned int *)(v241 + 48), *(unsigned __int16 *)(v241 + 52));
        v149 = sub_10063E8C8(v221, v224, v222 & 1, 0, 0, 1, 0);
        v242 = *(void (**)(char *, uint64_t))(v129 + 8);
        v243 = v403;
        goto LABEL_75;
      }
      sub_100010960(v412, &qword_1009E3508);
      (*(void (**)(uint64_t, uint64_t))(v418 + 8))(v211, v200);
    }
    sub_100010960(v206, &qword_1009E6748);
    goto LABEL_47;
  }
  v128 = v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_locationController;
LABEL_50:
  v216 = *(_QWORD *)(v128 + 8);
  v217 = swift_getObjectType();
  dispatch thunk of LocationControlling.failedAttemptToNavigateToNextPage()(v217, v216);
  return 0;
}

id sub_1004FE134(char *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  id v15;
  id result;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t ObjectType;
  uint64_t v32;
  int v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  void *Strong;
  void *v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  double v50;
  double v51;
  uint64_t v52;
  double v53;
  id v54;
  double v55;
  double v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  id v62;
  void *v63;
  id v64;
  char v65;
  void *v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  id v75;
  void *v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  void *v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double v101;
  id v102;
  char v103[24];

  v2 = v1;
  v4 = type metadata accessor for SpreadPaginationEntity(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v103[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v8);
  v10 = &v103[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v12 = __chkstk_darwin(v11);
  v14 = &v103[-v13 - 8];
  if (objc_msgSend(v2, "be_areCurlAnimationsInFlightOrPending", v12))
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    result = objc_msgSend(v2, "view");
    if (result)
    {
      v17 = result;
      objc_msgSend(result, "bounds");
      v19 = v18;
      v21 = v20;
      v23 = v22;
      v25 = v24;

      objc_msgSend(v15, "setFrame:", v19, v21, v23, v25);
      if (qword_1009CDD90 != -1)
        swift_once(&qword_1009CDD90, sub_10027A100);
      if (byte_100A1E408 == 1)
      {
LABEL_13:
        v43 = objc_msgSend((id)objc_opt_self(UIColor), "redColor");
        objc_msgSend(v15, "setBackgroundColor:", v43);

        return v15;
      }
LABEL_40:
      objc_msgSend(v15, "setBackgroundColor:", *(_QWORD *)&v2[OBJC_IVAR____TtC5Books22PageCurlViewController_pageBackgroundColor]);
      return v15;
    }
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v102 = a1;
  v26 = *(_QWORD *)&a1[OBJC_IVAR____TtC5Books24SinglePageViewController_viewModel]
      + OBJC_IVAR____TtC5Books17PageCurlViewModel_location;
  swift_beginAccess(v26, v103, 0, 0);
  sub_10000B5E4(v26, (uint64_t)v14, &qword_1009E3508);
  v27 = type metadata accessor for PageLocation(0);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
  v29 = v28(v14, 1, v27);
  sub_100010960((uint64_t)v14, &qword_1009E3508);
  if (v29 == 1
    || (v30 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books22PageCurlViewController_locationController + 8],
        ObjectType = swift_getObjectType(),
        v32 = dispatch thunk of LocationControlling.currentSpread.getter(ObjectType, v30),
        SpreadPaginationEntity.firstLocation.getter(v32),
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4),
        v33 = v28(v10, 1, v27),
        sub_100010960((uint64_t)v10, &qword_1009E3508),
        v33 == 1))
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    result = objc_msgSend(v2, "view");
    if (result)
    {
      v34 = result;
      objc_msgSend(result, "bounds");
      v36 = v35;
      v38 = v37;
      v40 = v39;
      v42 = v41;

      objc_msgSend(v15, "setFrame:", v36, v38, v40, v42);
      if (qword_1009CDD90 != -1)
        swift_once(&qword_1009CDD90, sub_10027A100);
      if (byte_100A1E408 == 1)
        goto LABEL_13;
      goto LABEL_40;
    }
    goto LABEL_69;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Books22PageCurlViewController_liveContentViewController]);
  if (!Strong)
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    result = objc_msgSend(v2, "view");
    if (result)
    {
      v76 = result;
      objc_msgSend(result, "bounds");
      v78 = v77;
      v80 = v79;
      v82 = v81;
      v84 = v83;

      objc_msgSend(v15, "setFrame:", v78, v80, v82, v84);
      if (qword_1009CDD90 != -1)
        swift_once(&qword_1009CDD90, sub_10027A100);
      if (byte_100A1E408 == 1)
        goto LABEL_13;
      goto LABEL_40;
    }
    goto LABEL_72;
  }
  v45 = Strong;
  result = objc_msgSend(Strong, "view");
  if (!result)
    goto LABEL_70;
  v46 = result;
  v47 = objc_msgSend(result, "superview");

  if (!v47 || (v48 = objc_msgSend(v47, "superview"), v47, !v48))
  {
    v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    result = objc_msgSend(v2, "view");
    if (!result)
    {
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    v66 = result;
    objc_msgSend(result, "bounds");
    v68 = v67;
    v70 = v69;
    v72 = v71;
    v74 = v73;

    objc_msgSend(v15, "setFrame:", v68, v70, v72, v74);
    if (qword_1009CDD90 != -1)
      swift_once(&qword_1009CDD90, sub_10027A100);
    if (byte_100A1E408 != 1)
    {
      objc_msgSend(v15, "setBackgroundColor:", *(_QWORD *)&v2[OBJC_IVAR____TtC5Books22PageCurlViewController_pageBackgroundColor]);

      return v15;
    }
    v75 = objc_msgSend((id)objc_opt_self(UIColor), "redColor");
    objc_msgSend(v15, "setBackgroundColor:", v75);
    goto LABEL_35;
  }
  result = objc_msgSend(v2, "view");
  if (result)
  {
    v49 = result;
    objc_msgSend(result, "bounds");
    v51 = v50;

    v52 = OBJC_IVAR____TtC5Books22PageCurlViewController_columns;
    v53 = v51 / (double)*(uint64_t *)&v2[OBJC_IVAR____TtC5Books22PageCurlViewController_columns];
    v54 = objc_msgSend(v2, "viewControllers");
    v56 = 0.0;
    if (v54)
    {
      v57 = v54;
      v58 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
      v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v57, v58);

      if ((unint64_t)v59 >> 62)
      {
        if (v59 < 0)
          v85 = v59;
        else
          v85 = v59 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v59);
        v60 = _CocoaArrayWrapper.endIndex.getter(v85);
        swift_bridgeObjectRelease(v59);
        if (v60)
        {
LABEL_22:
          v61 = v60 - 1;
          if (__OFSUB__(v60, 1))
          {
            __break(1u);
          }
          else if ((v59 & 0xC000000000000001) == 0)
          {
            if ((v61 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v61 < *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              v62 = *(id *)(v59 + 8 * v61 + 32);
              goto LABEL_27;
            }
            __break(1u);
LABEL_67:
            swift_once(&qword_1009CE768, sub_1004F8234);
LABEL_54:
            v88 = type metadata accessor for Logger(0);
            v89 = sub_100048F64(v88, (uint64_t)qword_1009E8B80);
            v90 = Logger.logObject.getter(v89);
            v91 = static os_log_type_t.error.getter(v90);
            if (os_log_type_enabled(v90, v91))
            {
              v92 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v92 = 0;
              _os_log_impl((void *)&_mh_execute_header, v90, v91, "Producing placeholder view for no location", v92, 2u);
              swift_slowDealloc(v92, -1, -1);
            }

            v15 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
            result = objc_msgSend(v2, "view");
            if (!result)
              goto LABEL_74;
            v93 = result;
            objc_msgSend(result, "bounds");
            v95 = v94;
            v97 = v96;
            v99 = v98;
            v101 = v100;

            objc_msgSend(v15, "setFrame:", v95, v97, v99, v101);
            if (qword_1009CDD90 != -1)
              swift_once(&qword_1009CDD90, sub_10027A100);
            if (byte_100A1E408 != 1)
            {
              objc_msgSend(v15, "setBackgroundColor:", *(_QWORD *)&v2[OBJC_IVAR____TtC5Books22PageCurlViewController_pageBackgroundColor]);
              goto LABEL_62;
            }
            v75 = objc_msgSend((id)objc_opt_self(UIColor), "redColor");
            objc_msgSend(v15, "setBackgroundColor:", v75);

LABEL_35:
            return v15;
          }
          v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v59);
LABEL_27:
          v63 = v62;
          swift_bridgeObjectRelease(v59);
          v64 = v102;
          v65 = static NSObject.== infix(_:_:)(v64, v63);

          v55 = 0.0;
          if ((v65 & 1) != 0)
            v56 = v53;
          else
            v56 = 0.0;
          goto LABEL_48;
        }
      }
      else
      {
        v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v60)
          goto LABEL_22;
      }
      *(_QWORD *)&v55 = swift_bridgeObjectRelease(v59).n128_u64[0];
    }
LABEL_48:
    objc_msgSend(v48, "frame", v55);
    if (*(_QWORD *)&v2[v52] == 1)
      v86 = objc_msgSend(v48, "snapshotViewAfterScreenUpdates:", 0);
    else
      v86 = objc_msgSend(v48, "resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:", 0, v56, 0.0, v53);
    v87 = v86;
    if (v87)
    {
      v15 = v87;
LABEL_62:

      return v15;
    }
    if (qword_1009CE768 == -1)
      goto LABEL_54;
    goto LABEL_67;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

void sub_1004FEC2C(char *a1)
{
  char *v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  char *v27;
  id v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  _BYTE v46[24];
  uint64_t v47;

  v3 = sub_10004CFD4(&qword_1009E3508);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "view", v4);
  if (!v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = v7;
  objc_msgSend(v7, "setAlpha:", 1.0);

  v9 = OBJC_IVAR____TtC5Books24SinglePageViewController_viewModel;
  *(_BYTE *)(*(_QWORD *)&a1[OBJC_IVAR____TtC5Books24SinglePageViewController_viewModel]
           + OBJC_IVAR____TtC5Books17PageCurlViewModel_live) = 0;
  v10 = sub_1004FE134(a1);
  objc_msgSend(v10, "bounds");
  v44 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", v11, v12, v13, v14);
  v15 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v44, "setBackgroundColor:", v15);

  objc_msgSend(v44, "addSubview:", v10);
  v16 = objc_msgSend(v1, "view");
  if (!v16)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v17 = v16;
  objc_msgSend(v16, "bounds");
  v19 = v18;
  v21 = v20;

  v22 = v19 / (double)*(uint64_t *)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_columns];
  swift_unknownObjectWeakAssign(*(_QWORD *)&a1[v9] + OBJC_IVAR____TtC5Books17PageCurlViewModel_realView, v44);
  v23 = &a1[OBJC_IVAR____TtC5Books24SinglePageViewController_contentRect];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *((double *)v23 + 2) = v22;
  *((_QWORD *)v23 + 3) = v21;
  sub_1004B078C();
  sub_1004B17FC();
  if (qword_1009CE768 != -1)
    swift_once(&qword_1009CE768, sub_1004F8234);
  v24 = type metadata accessor for Logger(0);
  sub_100048F64(v24, (uint64_t)qword_1009E8B80);
  v25 = a1;
  v26 = v10;
  v27 = v25;
  v28 = v26;
  v29 = Logger.logObject.getter(v28);
  v33 = static os_log_type_t.debug.getter(v29, v30, v31, v32);
  if (os_log_type_enabled(v29, v33))
  {
    v34 = swift_slowAlloc(22, -1);
    v43 = swift_slowAlloc(32, -1);
    v47 = v43;
    *(_DWORD *)v34 = 136315394;
    v35 = *(_QWORD *)&a1[v9] + OBJC_IVAR____TtC5Books17PageCurlViewModel_location;
    swift_beginAccess(v35, v46, 0, 0);
    sub_10000B5E4(v35, (uint64_t)v6, &qword_1009E3508);
    v36 = String.init<A>(describing:)(v6, v3);
    v38 = v37;
    v45 = sub_100040F58(v36, v37, &v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v34 + 4, v34 + 12);

    *(_QWORD *)&v39 = swift_bridgeObjectRelease(v38).n128_u64[0];
    *(_WORD *)(v34 + 12) = 2048;
    objc_msgSend(v28, "frame", v39);
    v45 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, v46, v34 + 14, v34 + 22);

    _os_log_impl((void *)&_mh_execute_header, v29, v33, "willTransition for vc %s ->show snapshot of width %f", (uint8_t *)v34, 0x16u);
    v41 = v43;
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v34, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1004FF210()
{
  return type metadata accessor for PageCurlViewController(0);
}

uint64_t type metadata accessor for PageCurlViewController(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009E8DF8, (uint64_t)&nominal type descriptor for PageCurlViewController);
}

void sub_1004FF22C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];
  uint64_t v5;
  void *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  void *v16;
  char *v17;
  void *v18;

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[1] = &unk_10072A958;
  v4[2] = &unk_10072A970;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = &unk_10072A988;
  v4[5] = &unk_10072A9A0;
  v4[6] = &unk_10072A9B8;
  v4[7] = &unk_10072A9A0;
  v4[8] = &unk_10072A9D0;
  v4[9] = &unk_10072A9D0;
  v4[10] = &unk_10072A988;
  v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[12] = &unk_10072A9B8;
  sub_10026B338(319, &qword_1009D2C88, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8) + 64;
    v6 = &unk_10072A9B8;
    v7 = (char *)&value witness table for Builtin.UnknownObject + 64;
    v8 = v5;
    v9 = v5;
    v10 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v11 = (char *)&value witness table for Builtin.NativeObject + 64;
    v12 = (char *)&value witness table for Builtin.NativeObject + 64;
    v13 = &unk_10072A9E8;
    v14 = (char *)&value witness table for Builtin.Int64 + 64;
    v15 = &unk_10072A9A0;
    v16 = &unk_10072A9B8;
    v17 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v18 = &unk_10072AA00;
    swift_updateClassMetadata2(a1, 256, 27, v4, a1 + 80);
  }
}

double sub_1004FF360()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  BOOL v15;
  double v16;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t);
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  __int128 v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  id v44;
  double v45;
  uint64_t v46;

  v1 = type metadata accessor for Logger(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - v6;
  v8 = sub_1004F8B60();
  v9 = objc_msgSend(v0, "view");
  objc_msgSend(v8, "velocityInView:", v9);
  v11 = v10;
  v13 = v12;

  v14 = fabs(v11);
  v15 = v14 >= 300.0 || v14 < 10.0;
  v16 = 0.25;
  if (!v15)
    v16 = 0.15;
  if (v14 > 1.79769313e308 || v14 < 300.0)
    v18 = v16;
  else
    v18 = 0.1;
  v19 = exp2(v14 / -900.0);
  if (qword_1009CE768 != -1)
    swift_once(&qword_1009CE768, sub_1004F8234);
  v20 = sub_100048F64(v1, (uint64_t)qword_1009E8B80);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v20, v1);
  if (qword_1009CDD90 != -1)
    swift_once(&qword_1009CDD90, sub_10027A100);
  Logger.if (_:)(byte_100A1E408);
  v21 = *(uint64_t (**)(char *, uint64_t))(v2 + 8);
  v22 = v21(v4, v1);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.info.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(42, -1);
    v43 = swift_slowAlloc(64, -1);
    v46 = v43;
    *(_DWORD *)v25 = 136315906;
    v26 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v27 = swift_allocObject(v26, 72, 7);
    v41 = xmmword_10070CCA0;
    *(_OWORD *)(v27 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v27 + 56) = &type metadata for CGFloat;
    v28 = sub_10030A0E4();
    v42 = (void (*)(char *, uint64_t))v21;
    v29 = v28;
    *(_QWORD *)(v27 + 64) = v28;
    *(double *)(v27 + 32) = v11;
    v30 = String.init(format:_:)(1714499109, 0xE400000000000000, v27);
    v44 = v8;
    v32 = v31;
    v45 = COERCE_DOUBLE(sub_100040F58(v30, v31, &v46));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease(v32);
    *(_WORD *)(v25 + 12) = 2080;
    v33 = swift_allocObject(v26, 72, 7);
    *(_OWORD *)(v33 + 16) = v41;
    *(_QWORD *)(v33 + 56) = &type metadata for CGFloat;
    *(_QWORD *)(v33 + 64) = v29;
    *(_QWORD *)(v33 + 32) = v13;
    v34 = String.init(format:_:)(1714499109, 0xE400000000000000, v33);
    v36 = v35;
    v45 = COERCE_DOUBLE(sub_100040F58(v34, v35, &v46));
    v8 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v25 + 14, v25 + 22);
    swift_bridgeObjectRelease(v36);
    *(_WORD *)(v25 + 22) = 2048;
    v45 = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v25 + 24, v25 + 32);
    *(_WORD *)(v25 + 32) = 2048;
    v45 = v19 * 0.15 + 0.1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46, v25 + 34, v25 + 42);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Curl velocity is %s, %s. Duration chosen by case: %f. vard: %f", (uint8_t *)v25, 0x2Au);
    v37 = v43;
    swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    swift_slowDealloc(v25, -1, -1);

    v42(v7, v1);
  }
  else
  {

    v21(v7, v1);
  }
  v38 = type metadata accessor for DebugOptions(0);
  v39 = static DebugOptions.pageCurlInteractiveAnimationDuration.getter(v38);

  return v39;
}

char *sub_1004FF7E8(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  char *v15;

  v9 = type metadata accessor for SinglePageViewController();
  v10 = swift_dynamicCastClass(a4, v9);
  if (v10)
  {
    v11 = (char *)v10;
    v12 = a3;
    v13 = a4;
    v14 = a1;
    v15 = sub_1004FBF20(v11, a5);

  }
  else
  {
    v15 = 0;
  }
  return v15;
}

void sub_1004FF87C(void *a1, unint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_QWORD, __n128);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t KeyPath;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  os_log_type_t v59;
  _BOOL4 v60;
  uint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(_QWORD, _QWORD, _QWORD);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t ObjectType;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(_QWORD, _QWORD, _QWORD);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  __n128 v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int (*v97)(uint64_t, uint64_t, uint64_t);
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  char *v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  char *v116;
  uint64_t v117;
  _BOOL8 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  void (*v132)(char *, char *);
  uint64_t v133;
  void *Strong;
  __n128 v135;
  void *v136;
  char *v137;
  id v138;
  void *v139;
  double v140;
  double v141;
  uint64_t v142;
  uint64_t v143;
  double v144;
  char *v145;
  char *v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  __n128 v150;
  uint64_t v151;
  __n128 v152;
  uint64_t v153;
  _QWORD v154[2];
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t);
  unsigned int v159;
  void (*v160)(char *, _QWORD, uint64_t);
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t (*v166)(char *, uint64_t, uint64_t);
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  unint64_t v171;
  void (*v172)(_QWORD, _QWORD, _QWORD);
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v6);
  v162 = (char *)v154 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v166 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)v154 - v9);
  v168 = type metadata accessor for PageLocation(0);
  v167 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v161 = (char *)v154 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v163 = (char *)v154 - v12;
  __chkstk_darwin(v13);
  v164 = (char *)v154 - v14;
  __chkstk_darwin(v15);
  v165 = (char *)v154 - v16;
  v17 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v17);
  v169 = (char *)v154 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)v154 - v20;
  v174 = type metadata accessor for SpreadPaginationEntity(0);
  v22 = *(_QWORD *)(v174 - 8);
  __chkstk_darwin(v174);
  v24 = (char *)v154 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)v154 - v26;
  v29 = __chkstk_darwin(v28);
  v31 = (char *)v154 - v30;
  v178 = type metadata accessor for PageTransitionCompletionState(0, v29);
  v32 = *(_QWORD *)(v178 - 8);
  __chkstk_darwin(v178);
  v170 = (char *)v154 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_10050F2DC(a2);
  if (v34)
  {
    v35 = (uint64_t)v34;
    v36 = objc_msgSend(v3, "viewControllers");
    if (!v36
      || (v37 = v36,
          v177 = v24,
          v38 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr),
          v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v37, v38),
          v37,
          v40 = sub_10050F2DC(v39),
          v41 = swift_bridgeObjectRelease(v39),
          !v40))
    {
      swift_bridgeObjectRelease(v35);
      return;
    }
    v176 = v22;
    v172 = (void (*)(_QWORD, _QWORD, _QWORD))v27;
    v42 = (uint64_t)v40;
    v43 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Books22PageCurlViewController_curlCompletedPublisher];
    v44 = *(void (**)(_QWORD, __n128))(v32 + 104);
    v45 = v170;
    v159 = enum case for PageTransitionCompletionState.unknown(_:);
    v46 = v178;
    v160 = (void (*)(char *, _QWORD, uint64_t))v44;
    v44(v170, v41);
    v154[1] = v43;
    PassthroughSubject.send(_:)(v45);
    v47 = *(_QWORD *)(v32 + 8);
    ((void (*)(char *, uint64_t))v47)(v45, v46);
    v184 = v35;
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v42);
    v179 = (char *)v42;
    sub_100375C68(v48);
    v49 = v184;
    v182 = v184;
    swift_bridgeObjectRetain(v184);
    PassthroughSubject.send(_:)(&v182);
    swift_bridgeObjectRelease(v49);
    v171 = (unint64_t)v3;
    v50 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Books22PageCurlViewController_state];
    KeyPath = swift_getKeyPath(&unk_10072AAE0);
    v52 = swift_getKeyPath(&unk_10072AB08);
    LOBYTE(v182) = 1;
    swift_retain(v50);
    v154[0] = v50;
    static Published.subscript.setter(&v182, v50, KeyPath, v52);
    swift_bridgeObjectRetain(v49);
    sub_100502ECC(a1, v49);
    swift_bridgeObjectRelease(v49);
    if (qword_1009CE768 != -1)
      goto LABEL_50;
LABEL_5:
    v53 = type metadata accessor for Logger(0);
    sub_100048F64(v53, (uint64_t)qword_1009E8B80);
    v54 = swift_bridgeObjectRetain_n(v35, 2);
    v55 = Logger.logObject.getter(v54);
    v59 = static os_log_type_t.debug.getter(v55, v56, v57, v58);
    v60 = os_log_type_enabled(v55, v59);
    v175 = v35;
    v61 = v176;
    v158 = (void (*)(char *, uint64_t))v47;
    if (v60)
    {
      v62 = (uint8_t *)swift_slowAlloc(12, -1);
      v182 = swift_slowAlloc(32, -1);
      v63 = v182;
      *(_DWORD *)v62 = 136315138;
      v64 = type metadata accessor for SinglePageViewController();
      swift_bridgeObjectRetain(v35);
      v66 = Array.description.getter(v65, v64);
      v68 = v67;
      swift_bridgeObjectRelease(v175);
      v180 = sub_100040F58(v66, v68, &v182);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v180, &v181, v62 + 4, v62 + 12);
      swift_bridgeObjectRelease_n(v175, 2);
      v69 = v68;
      v35 = v175;
      swift_bridgeObjectRelease(v69);
      _os_log_impl((void *)&_mh_execute_header, v55, v59, "willTransition to %s", v62, 0xCu);
      swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
      v70 = v63;
      v61 = v176;
      swift_slowDealloc(v70, -1, -1);
      swift_slowDealloc(v62, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v35, 2);
    }
    v71 = v177;
    v73 = (char *)v171;
    v72 = v172;
    v75 = *(_QWORD *)(v171 + OBJC_IVAR____TtC5Books22PageCurlViewController_locationController);
    v74 = *(_QWORD *)(v171 + OBJC_IVAR____TtC5Books22PageCurlViewController_locationController + 8);
    ObjectType = swift_getObjectType();
    v156 = v75;
    v155 = ObjectType;
    v157 = v74;
    dispatch thunk of LocationControlling.currentSpread.getter(ObjectType, v74);
    v77 = v174;
    v172 = *(void (**)(_QWORD, _QWORD, _QWORD))(v61 + 16);
    v172(v21, v31, v174);
    v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v61 + 56);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v78)(v21, 0, 1, v77);
    v79 = (uint64_t)&v73[OBJC_IVAR____TtC5Books22PageCurlViewController_spreadBeforeCurl];
    swift_beginAccess(&v73[OBJC_IVAR____TtC5Books22PageCurlViewController_spreadBeforeCurl], &v182, 33, 0);
    sub_100502658((uint64_t)v21, v79);
    swift_endAccess(&v182);
    if (qword_1009CDD90 != -1)
      swift_once(&qword_1009CDD90, sub_10027A100);
    v80 = (uint64_t)v179;
    if (byte_100A1E408 == 1)
    {
      v182 = 0;
      v183 = 0xE000000000000000;
      v81 = sub_1004F7F84((uint64_t)v179);
      swift_bridgeObjectRelease(v81);
      swift_bridgeObjectRelease(v183);
    }
    v82 = v73;
    v83 = sub_1005026A8(v80);
    swift_bridgeObjectRelease(v83);
    v179 = v82;

    v84 = v184;
    swift_bridgeObjectRelease(v80);
    swift_bridgeObjectRelease(v84);
    if (!((unint64_t)v35 >> 62))
    {
      v85 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v35);
      v86 = v72;
      if (!v85)
        goto LABEL_55;
      goto LABEL_15;
    }
    if (v35 >= 0)
      v151 = v35 & 0xFFFFFFFFFFFFFF8;
    else
      v151 = v35;
    swift_bridgeObjectRetain(v35);
    v85 = _CocoaArrayWrapper.endIndex.getter(v151);
    v86 = v72;
    if (v85)
    {
LABEL_15:
      v171 = v35 & 0xC000000000000001;
      if ((v35 & 0xC000000000000001) != 0)
      {
        v88 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v35);
        v87 = (uint64_t)v169;
      }
      else
      {
        v87 = (uint64_t)v169;
        if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_60:
          __break(1u);
          return;
        }
        v88 = (char *)*(id *)(v35 + 32);
      }
      swift_bridgeObjectRelease(v35);
      v89 = *(_QWORD *)&v88[OBJC_IVAR____TtC5Books24SinglePageViewController_viewModel];
      swift_retain(v89);

      v90 = v89 + OBJC_IVAR____TtC5Books17PageCurlViewModel_spread;
      swift_beginAccess(v89 + OBJC_IVAR____TtC5Books17PageCurlViewModel_spread, &v182, 0, 0);
      sub_10000B5E4(v90, v87, (uint64_t *)&unk_1009E8E70);
      v91 = swift_release(v89);
      v21 = (char *)v174;
      v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v61 + 48))(v87, 1, v174, v91);
      v173 = v31;
      if (v92 == 1)
      {
        sub_100010960(v87, (uint64_t *)&unk_1009E8E70);
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, char *))(v61 + 32))(v86, v87, v21);
        v93 = sub_100008DB0((unint64_t *)&qword_1009E8E80, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
        v94 = dispatch thunk of static Equatable.== infix(_:_:)(v31, v86, v21, v93);
        if ((v94 & 1) == 0)
        {
          v95 = (uint64_t)v166;
          SpreadPaginationEntity.firstLocation.getter(v94);
          v96 = v167;
          v97 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
          if (v97(v95, 1, v168) == 1)
          {
            sub_100010960(v95, &qword_1009E3508);
          }
          else
          {
            v169 = (char *)v85;
            v98 = v165;
            v99 = v168;
            v166 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v96 + 32);
            v100 = v166(v165, v95, v168);
            v101 = (uint64_t)v162;
            SpreadPaginationEntity.firstLocation.getter(v100);
            if (v97(v101, 1, v99) == 1)
            {
              (*(void (**)(char *, uint64_t))(v167 + 8))(v98, v168);
              sub_100010960(v101, &qword_1009E3508);
              v21 = (char *)v174;
              v85 = (uint64_t)v169;
            }
            else
            {
              v102 = v164;
              v103 = v101;
              v104 = v168;
              v105 = v166(v164, v103, v168);
              v106 = PageLocation.documentOrdinal.getter(v105);
              v107 = PageLocation.documentOrdinal.getter(v106);
              v108 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
              v108(v163, v98, v104);
              v109 = v161;
              v110 = ((uint64_t (*)(char *, char *, uint64_t))v108)(v161, v102, v104);
              v111 = v107 < v106;
              v85 = (uint64_t)v169;
              if (v111)
              {
                v115 = *(void (**)(char *, uint64_t))(v167 + 8);
                v112 = v168;
                v115(v109, v168);
                v115(v163, v112);
                v118 = 0;
              }
              else
              {
                v113 = v163;
                v166 = (uint64_t (*)(char *, uint64_t, uint64_t))PageLocation.pageOffset.getter(v110);
                v114 = PageLocation.pageOffset.getter(v166);
                v115 = *(void (**)(char *, uint64_t))(v167 + 8);
                v116 = v109;
                v117 = v168;
                v115(v116, v168);
                v115(v113, v117);
                v118 = (uint64_t)v166 >= v114;
              }
              v119 = swift_getKeyPath(&unk_10072AA90);
              v120 = swift_getKeyPath(&unk_10072AAB8);
              v180 = v118;
              v121 = v154[0];
              swift_retain(v154[0]);
              static Published.subscript.setter(&v180, v121, v119, v120);
              v122 = v168;
              v115(v164, v168);
              v115(v165, v122);
              v21 = (char *)v174;
              v71 = v177;
            }
          }
          v123 = v170;
          v124 = v178;
          v160(v170, v159, v178);
          PassthroughSubject.send(_:)(v123);
          v158(v123, v124);
          dispatch thunk of LocationControlling.moveTo(spread:)(v86, v155, v157);
        }
        (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD), char *))(v61 + 8))(v86, v21);
      }
      v178 = OBJC_IVAR____TtC5Books22PageCurlViewController_columns;
      v170 = &v179[OBJC_IVAR____TtC5Books22PageCurlViewController_liveContentViewController];
      v125 = &v179[OBJC_IVAR____TtC5Books22PageCurlViewController_beganCurls];
      v47 = 4;
      while (1)
      {
        v31 = (char *)v85;
        if (v171)
          v126 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v47 - 4, v35);
        else
          v126 = (char *)*(id *)(v35 + 8 * v47);
        v127 = v126;
        v128 = (char *)(v47 - 3);
        if (__OFADD__(v47 - 4, 1))
        {
          __break(1u);
LABEL_50:
          swift_once(&qword_1009CE768, sub_1004F8234);
          goto LABEL_5;
        }
        v129 = OBJC_IVAR____TtC5Books24SinglePageViewController_viewModel;
        *(_BYTE *)(*(_QWORD *)&v126[OBJC_IVAR____TtC5Books24SinglePageViewController_viewModel]
                 + OBJC_IVAR____TtC5Books17PageCurlViewModel_live) = 1;
        v130 = *(_QWORD *)&v179[v178];
        v172(v71, v173, v21);
        if (v130 != 1)
          break;
        v131 = sub_1004B1D28();
        v132 = *(void (**)(char *, char *))(v176 + 8);
        v132(v71, v21);
        if ((v131 & 1) == 0)
          goto LABEL_40;
        swift_unknownObjectWeakAssign(*(_QWORD *)&v127[v129] + OBJC_IVAR____TtC5Books17PageCurlViewModel_realView, 0);
LABEL_44:
        v137 = v179;
        *(_BYTE *)(*(_QWORD *)&v127[v129] + OBJC_IVAR____TtC5Books17PageCurlViewModel_animationState) = 2;
        v138 = objc_msgSend(v137, "view");
        if (!v138)
          goto LABEL_60;
        v139 = v138;
        objc_msgSend(v138, "bounds");
        v141 = v140;
        v143 = v142;

        v144 = (double)*(uint64_t *)&v137[v178];
        v145 = &v127[OBJC_IVAR____TtC5Books24SinglePageViewController_contentRect];
        *(_QWORD *)v145 = 0;
        *((_QWORD *)v145 + 1) = 0;
        *((double *)v145 + 2) = v141 / v144;
        *((_QWORD *)v145 + 3) = v143;
        sub_1004B078C();
        sub_1004B1070();
        sub_1004B17FC();
        swift_beginAccess(v125, &v180, 33, 0);
        v146 = v127;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v146);
        v148 = *(_QWORD *)((*(_QWORD *)v125 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v147 = *(_QWORD *)((*(_QWORD *)v125 & 0xFFFFFFFFFFFFFF8) + 0x18);
        v35 = v175;
        if (v148 >= v147 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v147 > 1, v148 + 1, 1);
        v149 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v148, v146);
        specialized Array._endMutation()(v149);
        swift_endAccess(&v180);

        ++v47;
        v85 = (uint64_t)v31;
        v71 = v177;
        if (v128 == v31)
        {
          v150 = swift_bridgeObjectRelease(v35);
          v31 = v173;
          goto LABEL_56;
        }
      }
      v132 = *(void (**)(char *, char *))(v176 + 8);
      v132(v71, v21);
LABEL_40:
      v133 = *(_QWORD *)&v127[v129];
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v170);
      v135 = swift_retain(v133);
      if (Strong)
      {
        v136 = (void *)dispatch thunk of BookContentViewController.contentHostView.getter(v135);

      }
      else
      {
        v136 = 0;
      }
      swift_unknownObjectWeakAssign(v133 + OBJC_IVAR____TtC5Books17PageCurlViewModel_realView, v136);
      swift_release(v133);

      v21 = (char *)v174;
      goto LABEL_44;
    }
LABEL_55:
    v152 = swift_bridgeObjectRelease(v35);
    v153 = (uint64_t)v169;
    v21 = (char *)v174;
    v78(v169, 1, 1, v174, v152);
    sub_100010960(v153, (uint64_t *)&unk_1009E8E70);
    v150 = swift_bridgeObjectRelease(v35);
    v132 = *(void (**)(char *, char *))(v61 + 8);
LABEL_56:
    ((void (*)(char *, char *, __n128))v132)(v31, v21, v150);
  }
}

uint64_t sub_100500804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  char *v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v4 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(_QWORD *)(a1 + 8);
  a2 += 16;
  swift_beginAccess(a2, v16, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v9 = (char *)result;
    ObjectType = swift_getObjectType();
    v11 = dispatch thunk of BookContentLayoutProviding.columnCount.getter(ObjectType, v7);
    v12 = OBJC_IVAR____TtC5Books22PageCurlViewController_columns;
    if (v11 != *(_QWORD *)&v9[OBJC_IVAR____TtC5Books22PageCurlViewController_columns])
    {
      v13 = v11;
      if ((objc_msgSend(v9, "_isInterfaceRotating") & 1) == 0)
        *(_QWORD *)&v9[v12] = v13;
    }
    v14 = type metadata accessor for SpreadPaginationEntity(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    sub_1004FA040((uint64_t)v6);

    return sub_100010960((uint64_t)v6, (uint64_t *)&unk_1009E8E70);
  }
  return result;
}

void sub_10050091C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t ObjectType;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];

  v39 = a4;
  v37[1] = a1;
  v38 = type metadata accessor for PageLocation(0);
  v5 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SpreadPaginationEntity(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v12);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v37 - v16;
  __chkstk_darwin(v18);
  v20 = (char *)v37 - v19;
  a2 += 16;
  swift_beginAccess(a2, v41, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v22 = (char *)Strong;
    v37[0] = v11;
    v23 = Strong + OBJC_IVAR____TtC5Books22PageCurlViewController_spreadBeforeCurl;
    swift_beginAccess(Strong + OBJC_IVAR____TtC5Books22PageCurlViewController_spreadBeforeCurl, v40, 0, 0);
    sub_10000B5E4(v23, (uint64_t)v20, (uint64_t *)&unk_1009E8E70);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    if (v24(v20, 1, v8) == 1)
    {
      sub_100010960((uint64_t)v20, (uint64_t *)&unk_1009E8E70);
      ObjectType = swift_getObjectType();
      v26 = dispatch thunk of BookContentLayoutProviderProviding.contentLayoutProvider.getter(ObjectType, v39);
      v28 = v27;
      v29 = swift_getObjectType();
      v30 = dispatch thunk of BookContentLayoutProviding.layout.getter(v29, v28);
      swift_unknownObjectRelease(v26);
      if (v30 == 1)
      {
        v31 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService];
        v39 = *(_QWORD *)&v22[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8];
        v32 = swift_getObjectType();
        swift_unknownObjectRetain(v31);
        v33 = dispatch thunk of Paginating.bookPaginationEntity.getter(v32, v39);
        swift_unknownObjectRelease(v31);
        Location.pageLocation.getter(v34);
        BookPaginationEntity.spread(containing:)(v7);
        v35 = swift_release(v33);
        (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v38, v35);
        if (v24(v17, 1, v8) == 1)
        {

          sub_100010960((uint64_t)v17, (uint64_t *)&unk_1009E8E70);
        }
        else
        {
          v36 = v37[0];
          (*(void (**)(_QWORD, char *, uint64_t))(v9 + 32))(v37[0], v17, v8);
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v36, v8);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
          sub_1004FA040((uint64_t)v14);

          sub_100010960((uint64_t)v14, (uint64_t *)&unk_1009E8E70);
          (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v36, v8);
        }
      }
      else
      {

      }
    }
    else
    {

      sub_100010960((uint64_t)v20, (uint64_t *)&unk_1009E8E70);
    }
  }
}

void sub_100500C48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  _BYTE v5[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v5, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    sub_1004F8EC0();

  }
}

void sub_100500C98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  __n128 v4;
  char *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  _BYTE v30[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v30, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v5 = (char *)Strong;
    v6 = (void *)BookThemeEntity.backgroundColor.getter(v4);
    v7 = *(void **)&v5[OBJC_IVAR____TtC5Books22PageCurlViewController_pageBackgroundColor];
    *(_QWORD *)&v5[OBJC_IVAR____TtC5Books22PageCurlViewController_pageBackgroundColor] = v6;
    v8 = v6;

    v9 = (void *)swift_unknownObjectWeakLoadStrong(&v5[OBJC_IVAR____TtC5Books22PageCurlViewController_liveContentViewController]);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "viewIfLoaded");

      if (v11)
      {
        v12 = objc_msgSend(v11, "traitCollection");

        if (v12)
        {
          v13 = objc_msgSend((id)objc_opt_self(BEPageCurlConfig), "shared");
          v14 = objc_msgSend(v8, "resolvedColorWithTraitCollection:", v12);
          objc_msgSend(v13, "setBaseColor:", v14);

        }
      }
    }
    v15 = objc_msgSend(v5, "viewControllers");
    if (!v15
      || (v16 = v15,
          v17 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr),
          v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, v17),
          v16,
          v19 = (uint64_t)sub_10050F2DC(v18),
          swift_bridgeObjectRelease(v18),
          !v19))
    {

      return;
    }
    if ((unint64_t)v19 >> 62)
    {
      if (v19 >= 0)
        v29 = v19 & 0xFFFFFFFFFFFFFF8;
      else
        v29 = v19;
      swift_bridgeObjectRetain(v19);
      v20 = _CocoaArrayWrapper.endIndex.getter(v29);
      swift_bridgeObjectRelease(v19);
      if (v20)
        goto LABEL_10;
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v20)
      {
LABEL_10:
        if (v20 < 1)
        {
          __break(1u);
          return;
        }
        if ((v19 & 0xC000000000000001) != 0)
        {
          v21 = 0;
          do
          {
            v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21++, v19);
            v23 = *(void **)(v22 + OBJC_IVAR____TtC5Books24SinglePageViewController_pageBackgroundColor);
            *(_QWORD *)(v22 + OBJC_IVAR____TtC5Books24SinglePageViewController_pageBackgroundColor) = v8;
            v24 = v8;
            swift_unknownObjectRelease(v22);

          }
          while (v20 != v21);

        }
        else
        {
          v25 = 0;
          do
          {
            v26 = *(_QWORD *)(v19 + 8 * v25++ + 32);
            v27 = *(void **)(v26 + OBJC_IVAR____TtC5Books24SinglePageViewController_pageBackgroundColor);
            *(_QWORD *)(v26 + OBJC_IVAR____TtC5Books24SinglePageViewController_pageBackgroundColor) = v8;
            v28 = v8;

          }
          while (v20 != v25);

        }
        goto LABEL_24;
      }
    }

LABEL_24:
    swift_bridgeObjectRelease(v19);
  }
}

uint64_t sub_100500F58(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  char v12;
  void *Strong;
  void *v14;

  v3 = v2;
  v6 = sub_100009E04(0, (unint64_t *)&unk_1009E8EA0, UITapGestureRecognizer_ptr);
  if (objc_msgSend(a1, "isKindOfClass:", swift_getObjCClassFromMetadata(v6)))
  {
    v7 = objc_msgSend(v2, "gestureRecognizers");
    v8 = sub_100009E04(0, (unint64_t *)&unk_1009D9EC0, UIGestureRecognizer_ptr);
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

    LOBYTE(v7) = sub_1004EC9CC((uint64_t)a1, v9);
    swift_bridgeObjectRelease(v9);
    if ((v7 & 1) != 0)
      return 0;
  }
  sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
  v11 = sub_1004F8B60();
  v12 = static NSObject.== infix(_:_:)(a1, v11);

  if ((v12 & 1) == 0)
    return 1;
  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC5Books22PageCurlViewController_liveContentViewController]);
  if (!Strong)
    return 1;
  v14 = Strong;
  v10 = objc_msgSend(Strong, "gestureRecognizer:shouldReceiveTouch:", a1, a2);

  return (uint64_t)v10;
}

uint64_t sub_1005011EC(void *a1, uint64_t a2, void *a3, void *a4, SEL *a5)
{
  id v9;
  id v10;
  char *v11;
  id v12;
  char *Strong;
  char *v14;
  uint64_t v15;

  sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
  v9 = a3;
  v10 = a4;
  v11 = a1;
  v12 = sub_1004F8B60();
  LOBYTE(a4) = static NSObject.== infix(_:_:)(v9, v12);

  if ((a4 & 1) != 0
    && (Strong = (char *)swift_unknownObjectWeakLoadStrong(&v11[OBJC_IVAR____TtC5Books22PageCurlViewController_liveContentViewController])) != 0)
  {
    v14 = Strong;
    v15 = (uint64_t)objc_msgSend(Strong, *a5, v9, v10);

    v10 = v11;
    v11 = v14;
  }
  else
  {
    v15 = 1;
  }

  return v15;
}

uint64_t sub_1005012D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  char v26;
  void (*v27)(char *, uint64_t, __n128);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for BookNavigationDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - v9;
  v11 = v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_readingSettingsProvider;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books22PageCurlViewController_readingSettingsProvider);
  if (Strong)
  {
    v13 = Strong;
    v14 = *(_QWORD *)(v11 + 8);
    ObjectType = swift_getObjectType();
    LOBYTE(v14) = dispatch thunk of ReadingSettingsProviding.bothMarginsAdvance.getter(ObjectType, v14);
    swift_unknownObjectRelease(v13);
    if ((v14 & 1) != 0)
    {
      v16 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
      v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8);
      v18 = swift_getObjectType();
      swift_unknownObjectRetain(v16);
      v19 = dispatch thunk of Paginating.bookPaginationEntity.getter(v18, v17);
      v20 = swift_unknownObjectRelease(v16);
      BookPaginationEntity.navigationDirection.getter(v20);
      v21 = swift_release(v19);
      (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v7, enum case for BookNavigationDirection.rightToLeft(_:), v4, v21);
      v22 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
      dispatch thunk of RawRepresentable.rawValue.getter(&v31, v4, v22);
      dispatch thunk of RawRepresentable.rawValue.getter(&v29, v4, v22);
      v23 = v32;
      v24 = v30;
      if (v31 == v29 && v32 == v30)
      {
        v25 = swift_bridgeObjectRelease_n(v32, 2);
        a1 = 1;
      }
      else
      {
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, v29, v30, 0);
        swift_bridgeObjectRelease(v23);
        v25 = swift_bridgeObjectRelease(v24);
        a1 = v26 & 1;
      }
      v27 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
      v27(v7, v4, v25);
      ((void (*)(char *, uint64_t))v27)(v10, v4);
    }
  }
  return a1;
}

uint64_t sub_1005015AC(void *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char v22;
  uint64_t v23;
  void *v24;
  void (*v25)(char *, uint64_t);
  _QWORD v28[2];
  void *v29;

  v4 = v3;
  v8 = sub_10004CFD4(&qword_1009E8E90);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v28[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v28[-1] - v13;
  if (*(_BYTE *)(v4 + OBJC_IVAR____TtC5Books22PageCurlViewController_isEnabled) == 1)
  {
    v29 = a1;
    *(double *)v28 = a2;
    *(double *)&v28[1] = a3;
    v15 = a1;
    v16 = sub_10004CFD4(&qword_1009E8E98);
    type metadata accessor for CGPoint(0);
    RelativeValue.init(base:value:)(&v29, v28, v16, v17);
    Strong = swift_weakLoadStrong(v4 + OBJC_IVAR____TtC5Books22PageCurlViewController_bookContentLayoutController);
    if (Strong
      && (v19 = Strong,
          v20 = BookContentLayoutController.contentLoaderWithVisibleAccessory(at:)(v14),
          swift_release(v19),
          v20))
    {
      v21 = swift_unknownObjectRelease(v20);
      (*(void (**)(char *, char *, uint64_t, __n128))(v9 + 16))(v11, v14, v8, v21);
      v22 = 1;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
      v23 = swift_unknownObjectWeakLoadStrong(v4 + OBJC_IVAR____TtC5Books22PageCurlViewController_liveContentViewController);
      if (v23)
      {
        v24 = (void *)v23;
        v22 = BookContentViewController.pointIsInContent(_:)(v11);

      }
      else
      {
        v22 = 0;
      }
    }
    v25 = *(void (**)(char *, uint64_t))(v9 + 8);
    v25(v11, v8);
    v25(v14, v8);
  }
  else
  {
    v22 = 1;
  }
  return v22 & 1;
}

uint64_t sub_1005017CC(_BYTE *a1)
{
  return PageMovementState.init(isIdle:isDragging:)((*a1 & 1) == 0, 0);
}

uint64_t sub_1005017E0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(char *, uint64_t, __n128);
  uint64_t v29;
  char *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];

  v3 = v2;
  v44 = a2;
  v46 = a1;
  v4 = type metadata accessor for LocationMovement(0);
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  __chkstk_darwin(v4);
  v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SpreadPaginationEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v43 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - v10;
  v12 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v12);
  v39 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v38 - v15;
  __chkstk_darwin(v17);
  v19 = (char *)&v38 - v18;
  v20 = v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService;
  v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService);
  v22 = *(_QWORD *)(v20 + 8);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v21);
  v24 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v22);
  swift_unknownObjectRelease(v21);
  v45 = v3;
  v25 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books22PageCurlViewController_locationController + 8);
  v26 = swift_getObjectType();
  dispatch thunk of LocationControlling.currentSpread.getter(v26, v25);
  BookPaginationEntity.spread(_:byMoving:)(v11, v46);
  v27 = swift_release(v24);
  v28 = *(void (**)(char *, uint64_t, __n128))(v7 + 8);
  v28(v11, v6, v27);
  sub_10000B5E4((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_1009E8E70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v6) == 1)
  {
    v29 = sub_100010960((uint64_t)v16, (uint64_t *)&unk_1009E8E70);
    v30 = v40;
    static LocationMovement.spreadForward.getter(v29);
    v31 = static LocationMovement.== infix(_:_:)(v46, v30);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v30, v42);
    if ((v31 & 1) != 0)
      dispatch thunk of LocationControlling.failedAttemptToNavigateToNextPage()(v26, v25);
  }
  else
  {
    v32 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v43, v16, v6);
    v33 = (uint64_t)v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v39, v32, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
    v34 = v45 + OBJC_IVAR____TtC5Books22PageCurlViewController_pendingDestinationSpread;
    swift_beginAccess(v45 + OBJC_IVAR____TtC5Books22PageCurlViewController_pendingDestinationSpread, v47, 33, 0);
    sub_100502658(v33, v34);
    v35 = swift_endAccess(v47);
    v36 = LocationMovement.direction.getter(v35);
    sub_100501B0C(v32, v36 & 1, v44 & 1);
    ((void (*)(uint64_t, uint64_t))v28)(v32, v6);
  }
  return sub_100010960((uint64_t)v19, (uint64_t *)&unk_1009E8E70);
}

void sub_100501B0C(uint64_t a1, char a2, int a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  id v24;
  void **v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  void (*v49)(char *, uint64_t, __n128);
  char v50;
  char v51;
  __n128 v52;
  void (*v53)(char *, uint64_t, __n128);
  void **v54;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSArray v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t ObjectType;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void **aBlock;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t);
  void *v86;
  Swift::Void (__swiftcall *v87)();
  uint64_t v88;
  void **v89;
  uint64_t v90;

  v78 = a3;
  v5 = a2 & 1;
  v6 = type metadata accessor for Logger(0);
  v80 = *(_QWORD *)(v6 - 8);
  v81 = v6;
  __chkstk_darwin(v6);
  v79 = (void **)((char *)&ObjectType - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for BookNavigationDirection(0);
  v75 = *(_QWORD *)(v8 - 8);
  v76 = v8;
  __chkstk_darwin(v8);
  v73 = (char *)&ObjectType - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v74 = (char *)&ObjectType - v12;
  v77 = type metadata accessor for PageTransitionCompletionState(0, v11);
  v13 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v15 = (char *)&ObjectType - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for SpreadPaginationEntity(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&ObjectType - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = static LocationMovement.Direction.== infix(_:_:)(v5, 0);
  v82 = v3;
  v21 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Books22PageCurlViewController_locationController + 8];
  ObjectType = swift_getObjectType();
  v71 = v21;
  dispatch thunk of LocationControlling.currentSpread.getter(ObjectType, v21);
  v22 = sub_100008DB0((unint64_t *)&qword_1009E8E80, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
  v72 = a1;
  v23 = dispatch thunk of static Equatable.== infix(_:_:)(a1, v19, v16, v22);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if ((v23 & 1) == 0)
  {
    v80 = v20;
    v30 = *(_QWORD *)&v82[OBJC_IVAR____TtC5Books22PageCurlViewController_state];
    KeyPath = swift_getKeyPath(&unk_10072AA90);
    v32 = swift_getKeyPath(&unk_10072AAB8);
    v79 = (void **)((v20 & 1) == 0);
    aBlock = v79;
    swift_retain(v30);
    static Published.subscript.setter(&aBlock, v30, KeyPath, v32);
    v33 = v77;
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for PageTransitionCompletionState.completed(_:), v77);
    PassthroughSubject.send(_:)(v15);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v33);
    if ((v78 & 1) == 0)
    {
      dispatch thunk of LocationControlling.moveTo(spread:)(v72, ObjectType, v71);
      return;
    }
    v34 = v82;
    v36 = *(_QWORD *)&v82[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService];
    v35 = *(_QWORD *)&v82[OBJC_IVAR____TtC5Books22PageCurlViewController_paginatingService + 8];
    v37 = swift_getObjectType();
    swift_unknownObjectRetain(v36);
    v38 = dispatch thunk of Paginating.bookPaginationEntity.getter(v37, v35);
    v39 = swift_unknownObjectRelease(v36);
    v40 = v74;
    BookPaginationEntity.navigationDirection.getter(v39);
    v41 = swift_release(v38);
    v43 = v75;
    v42 = v76;
    v44 = v73;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v75 + 104))(v73, enum case for BookNavigationDirection.rightToLeft(_:), v76, v41);
    v45 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v42, v45);
    dispatch thunk of RawRepresentable.rawValue.getter(&v89, v42, v45);
    v46 = v84;
    v47 = v90;
    if (aBlock == v89 && v84 == v90)
    {
      v48 = swift_bridgeObjectRelease_n(v84, 2);
      v49 = *(void (**)(char *, uint64_t, __n128))(v43 + 8);
      v49(v44, v42, v48);
      ((void (*)(char *, uint64_t))v49)(v40, v42);
      v50 = v80;
    }
    else
    {
      v51 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v84, v89, v90, 0);
      swift_bridgeObjectRelease(v46);
      v52 = swift_bridgeObjectRelease(v47);
      v53 = *(void (**)(char *, uint64_t, __n128))(v43 + 8);
      v53(v44, v42, v52);
      ((void (*)(char *, uint64_t))v53)(v40, v42);
      v54 = v79;
      v50 = v80;
      if ((v51 & 1) == 0)
        goto LABEL_14;
    }
    v54 = (void **)(v50 & 1);
LABEL_14:
    v55 = objc_msgSend(v34, "_incomingViewControllersForGestureDrivenCurlInDirection:", v54);
    if (v55)
    {
      v56 = v55;
      v57 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
      v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v56, v57);

      if ((unint64_t)v58 >> 62)
      {
        if (v58 < 0)
          v69 = v58;
        else
          v69 = v58 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v58);
        v59 = _CocoaArrayWrapper.endIndex.getter(v69);
        swift_bridgeObjectRelease(v58);
      }
      else
      {
        v59 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (v59 == *(_QWORD *)&v34[OBJC_IVAR____TtC5Books22PageCurlViewController_columns])
      {
        v60 = sub_10003AC78(v58);
        swift_bridgeObjectRelease(v58);
        v61.super.isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v60);
        v87 = BKAppDelegate.enableMetricsInspectorOnDebugMode();
        v88 = 0;
        aBlock = _NSConcreteStackBlock;
        v84 = 1107296256;
        v85 = sub_10004DCB4;
        v86 = &unk_10090C5D8;
        v62 = _Block_copy(&aBlock);
        objc_msgSend(v34, "_setViewControllers:withCurlOfType:fromLocation:direction:animated:notifyDelegate:completion:", v61.super.isa, 1, v54, 1, 1, v62, 0.0, 0.0);
        _Block_release(v62);
LABEL_24:

        return;
      }
      swift_bridgeObjectRelease(v58);
    }
    if (qword_1009CE768 != -1)
      swift_once(&qword_1009CE768, sub_1004F8234);
    v63 = sub_100048F64(v81, (uint64_t)qword_1009E8B80);
    v61.super.isa = (Class)Logger.logObject.getter(v63);
    v67 = static os_log_type_t.debug.getter(v61.super.isa, v64, v65, v66);
    if (os_log_type_enabled((os_log_t)v61.super.isa, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v68 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v61.super.isa, v67, "Need controllers, cannot curl", v68, 2u);
      swift_slowDealloc(v68, -1, -1);
    }
    goto LABEL_24;
  }
  if (qword_1009CE8D0 != -1)
    swift_once(&qword_1009CE8D0, sub_1005A9688);
  v24 = (id)qword_100A1ECD8;
  v25 = v79;
  v26 = Logger.init(_:)(v24);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Cannot curl to the current spread", v29, 2u);
    swift_slowDealloc(v29, -1, -1);
  }

  (*(void (**)(void **, uint64_t))(v80 + 8))(v25, v81);
}

void sub_1005021D0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t ObjectType;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  LODWORD(v32) = a2;
  v5 = type metadata accessor for SpreadPaginationEntity(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Logger(0);
  v33 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_locationController + 8);
  ObjectType = swift_getObjectType();
  v17 = dispatch thunk of LocationControlling.direction(to:)(a1, ObjectType, v15);
  if (v17 == 2)
  {
    v32 = v9;
    if (qword_1009CE8D0 != -1)
      swift_once(&qword_1009CE8D0, sub_1005A9688);
    Logger.init(_:)((id)qword_100A1ECD8);
    v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      v22 = swift_slowAlloc(32, -1);
      v34[0] = v22;
      *(_DWORD *)v21 = 136315138;
      v31 = v21 + 4;
      v23 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
      v24 = dispatch thunk of CustomStringConvertible.description.getter(v5, v23);
      v26 = v25;
      v35 = sub_100040F58(v24, v25, v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v31, v21 + 12);
      v27 = swift_bridgeObjectRelease(v26);
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unable to determine movement direction to destination %s", v21, 0xCu);
      swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v22, -1, -1);
      swift_slowDealloc(v21, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v32);
  }
  else
  {
    v28 = v17 & 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v14, a1, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
    v29 = v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_pendingDestinationSpread;
    swift_beginAccess(v3 + OBJC_IVAR____TtC5Books22PageCurlViewController_pendingDestinationSpread, v34, 33, 0);
    sub_100502658((uint64_t)v14, v29);
    swift_endAccess(v34);
    sub_100501B0C(a1, v28, v32 & 1);
  }
}

uint64_t sub_100502524(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = type metadata accessor for BKTapActionView();
  return UICoordinateSpace.contains(_:)(a2, v3) & 1;
}

uint64_t sub_10050256C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072AA90);
  v5 = swift_getKeyPath(&unk_10072AAB8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005025E8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072AA90);
  v5 = swift_getKeyPath(&unk_10072AAB8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_100502658(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1005026A8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  char *v5;
  char *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_100366B20(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = (char *)*(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      sub_1004FEC2C(v5);

      v8 = _swiftEmptyArrayStorage[2];
      v7 = _swiftEmptyArrayStorage[3];
      v9 = v8 + 1;
      if (v8 >= v7 >> 1)
        sub_100366B20(v7 > 1, v8 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v9;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1005027EC(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v9;
  id v10;
  uint64_t i;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;

  v3 = a1;
  v26 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_23;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v21 = v3;
      v5 = 0;
      v24 = v3 & 0xFFFFFFFFFFFFFF8;
      v25 = v3 & 0xC000000000000001;
      v22 = v4;
      v23 = v3 + 32;
      while (v25)
      {
        v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v21);
LABEL_9:
        v7 = v6;
        if (__OFADD__(v5++, 1))
          goto LABEL_22;
        v9 = *(_QWORD *)(a2 + 16);
        if (v9)
        {
          v10 = v6;
          swift_bridgeObjectRetain(a2);
          for (i = 0; i != v9; ++i)
          {
            v12 = *(void **)(a2 + 8 * i + 32);
            if (v12)
            {
              sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
              v13 = v10;
              v14 = v12;
              v3 = static NSObject.== infix(_:_:)(v14, v13);

              if ((v3 & 1) != 0)
              {

                swift_bridgeObjectRelease(a2);
                v4 = v22;
                goto LABEL_5;
              }
            }
          }

          swift_bridgeObjectRelease(a2);
          v4 = v22;
        }
        v15 = type metadata accessor for AlwaysPassthroughView();
        v16 = swift_dynamicCastClass(v7, v15);
        if (v16)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
          v17 = v26[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v17);
          v18 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v7);
          v3 = (uint64_t)&v26;
          specialized ContiguousArray._endMutation()(v18);
        }
        else
        {

        }
LABEL_5:
        if (v5 == v4)
          return v26;
      }
      if (v5 < *(_QWORD *)(v24 + 16))
        break;
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      if (v3 < 0)
        v20 = v3;
      else
        v20 = v3 & 0xFFFFFFFFFFFFFF8;
      v4 = _CocoaArrayWrapper.endIndex.getter(v20);
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    v6 = *(id *)(v23 + 8 * v5);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1005029F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = type metadata accessor for BookNavigationDirection(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7.n128_f64[0] = __chkstk_darwin(v6);
  v9 = (char *)&v18 - v8;
  BookPaginationEntity.navigationDirection.getter(v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for BookNavigationDirection.rightToLeft(_:), v2);
  v10 = sub_100008DB0(&qword_1009DD818, (uint64_t (*)(uint64_t))&type metadata accessor for BookNavigationDirection, (uint64_t)&protocol conformance descriptor for BookNavigationDirection);
  dispatch thunk of RawRepresentable.rawValue.getter(&v20, v2, v10);
  dispatch thunk of RawRepresentable.rawValue.getter(&v18, v2, v10);
  v11 = v21;
  v12 = v19;
  if (v20 == v18 && v21 == v19)
  {
    v13 = swift_bridgeObjectRelease_n(v21, 2);
    v14 = 3;
  }
  else
  {
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, v18, v19, 0);
    swift_bridgeObjectRelease(v11);
    v13 = swift_bridgeObjectRelease(v12);
    if ((v15 & 1) != 0)
      v14 = 3;
    else
      v14 = 1;
  }
  v16 = *(void (**)(char *, uint64_t, __n128))(v3 + 8);
  v16(v5, v2, v13);
  ((void (*)(char *, uint64_t))v16)(v9, v2);
  if (a1 == 2)
    return 2;
  else
    return v14;
}

void sub_100502B74()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC5Books22PageCurlViewController_contentLayoutProviderProviding];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  swift_weakInit(&v0[OBJC_IVAR____TtC5Books22PageCurlViewController_bookContentLayoutController], 0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR____TtC5Books22PageCurlViewController_liveContentViewController]);
  v3 = &v0[OBJC_IVAR____TtC5Books22PageCurlViewController_readingSettingsProvider];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books22PageCurlViewController_beganCurls] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC5Books22PageCurlViewController_needResetAfterCurlEnd] = 0;
  v4 = &v0[OBJC_IVAR____TtC5Books22PageCurlViewController_spreadForResetAfterCurlEnd];
  v5 = type metadata accessor for SpreadPaginationEntity(0);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  v1[OBJC_IVAR____TtC5Books22PageCurlViewController_isEnabled] = 0;
  v6(&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_spreadBeforeCurl], 1, 1, v5);
  v6(&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_pendingDestinationSpread], 1, 1, v5);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_1001E0ED4((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v7 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_tapActionViews] = v7;
  v8 = OBJC_IVAR____TtC5Books22PageCurlViewController_curlHappenedPublisher;
  v9 = sub_10004CFD4(&qword_1009E8F90);
  v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  *(_QWORD *)&v1[v8] = PassthroughSubject.init()(v10);
  v11 = OBJC_IVAR____TtC5Books22PageCurlViewController_curlCompletedPublisher;
  v12 = sub_10004CFD4(&qword_1009E5AE0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  *(_QWORD *)&v1[v11] = PassthroughSubject.init()(v13);
  v14 = &v1[OBJC_IVAR____TtC5Books22PageCurlViewController_oldColumnCount];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v1[OBJC_IVAR____TtC5Books22PageCurlViewController_isObservingChanges] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    v15 = (void *)sub_1001DFDDC((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v15 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController_cancellables] = v15;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books22PageCurlViewController____lazy_storage___panGestureRecognizer] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/PageCurlViewController.swift", 34, 2, 138, 0);
  __break(1u);
}

void sub_100502DD0()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_8;
  }
  v2 = v1;
  v7 = objc_msgSend(v1, "window");

  if (v7)
  {
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

      v5 = objc_msgSend(v0, "view");
      if (v5)
      {
        v6 = v5;
        objc_msgSend(v5, "setAutoresizingMask:", 0);

        sub_1004F9200(v7);
        sub_1004F9480();

        return;
      }
      goto LABEL_9;
    }
LABEL_8:
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

void sub_100502ECC(void *a1, uint64_t a2)
{
  unint64_t v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;

  v4 = objc_msgSend(a1, "view");
  if (!v4)
  {
    __break(1u);
    return;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "subviews");

  v7 = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v22 = a2;
    else
      v22 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v9 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v33 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v9);
    if (v9 < 0)
    {
      __break(1u);
      goto LABEL_41;
    }
    v11 = 0;
    do
    {
      if ((a2 & 0xC000000000000001) != 0)
        v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a2);
      else
        v12 = *(id *)(a2 + 8 * v11 + 32);
      v13 = v12;
      ++v11;
      v14 = objc_msgSend(v12, "view");

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v16 = v33[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v16);
      v17 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v16, v14);
      specialized ContiguousArray._endMutation()(v17);
    }
    while (v9 != v11);
    v10 = v33;
  }
  a2 = (uint64_t)sub_1005027EC(v8, (uint64_t)v10);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v10);
  v2 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v23 = a2;
    else
      v23 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v18 = _CocoaArrayWrapper.endIndex.getter(v23);
    if (!v18)
      goto LABEL_28;
  }
  else
  {
    v18 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (!v18)
      goto LABEL_28;
  }
  if (v18 >= 1)
  {
    for (i = 0; i != v18; ++i)
    {
      if ((a2 & 0xC000000000000001) != 0)
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
      else
        v20 = *(id *)(a2 + 8 * i + 32);
      v21 = v20;
      objc_msgSend(v20, "removeFromSuperview");

    }
LABEL_28:
    swift_bridgeObjectRelease(a2);
    v33 = (_QWORD *)a2;
    v24 = sub_10004CFD4((uint64_t *)&unk_1009DDE90);
    v25 = sub_100030B34((unint64_t *)&unk_1009E8EC0, (uint64_t *)&unk_1009DDE90, (uint64_t)&protocol conformance descriptor for [A]);
    if ((Collection.isNotEmpty.getter(v24, v25) & 1) == 0)
    {
      swift_bridgeObjectRelease(a2);
      return;
    }
    if (qword_1009CE768 == -1)
      goto LABEL_30;
    goto LABEL_42;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  swift_once(&qword_1009CE768, sub_1004F8234);
LABEL_30:
  v26 = type metadata accessor for Logger(0);
  sub_100048F64(v26, (uint64_t)qword_1009E8B80);
  swift_bridgeObjectRetain(a2);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.info.getter(v28);
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v30 = 134217984;
    if (v2)
    {
      if (a2 < 0)
        v32 = a2;
      else
        v32 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v31 = _CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v31 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a2);
    v33 = (_QWORD *)v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v30 + 4, v30 + 12);
    swift_bridgeObjectRelease(a2);
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

uint64_t sub_1005032AC(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v13;
  unint64_t i;
  unint64_t v15;
  id v16;
  void *v17;
  char v18;
  uint64_t v19;
  id v20;
  id v21;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = *a1;
  if ((unint64_t)*a1 >> 62)
    goto LABEL_65;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(*a1);
  if (v5)
  {
LABEL_3:
    sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
    v6 = 0;
    while (1)
    {
      v7 = (v4 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4)
         : *(id *)(v4 + 8 * v6 + 32);
      v8 = v7;
      v9 = static NSObject.== infix(_:_:)(v7, a2);

      if ((v9 & 1) != 0)
        break;
      v10 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        if ((v4 & 0x8000000000000000) != 0)
          v35 = v4;
        else
          v35 = v4 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v4);
        v5 = _CocoaArrayWrapper.endIndex.getter(v35);
        if (!v5)
          goto LABEL_10;
        goto LABEL_3;
      }
      ++v6;
      if (v10 == v5)
        goto LABEL_10;
    }
    swift_bridgeObjectRelease(v4);
    v13 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else
    {
      v9 = *a1;
      if (!((unint64_t)*a1 >> 62))
      {
        if (v13 != *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_16:
          for (i = v6 + 5; ; ++i)
          {
            v4 = i - 4;
            v15 = *a1;
            if ((*a1 & 0xC000000000000001) != 0)
            {
              v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v15);
            }
            else
            {
              if ((v4 & 0x8000000000000000) != 0)
                goto LABEL_55;
              if (v4 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_56;
              v16 = *(id *)(v15 + 8 * i);
            }
            v17 = v16;
            v18 = static NSObject.== infix(_:_:)(v16, a2);

            if ((v18 & 1) != 0)
              goto LABEL_42;
            if (v4 != v6)
              break;
LABEL_41:
            if (__OFADD__(v6++, 1))
              goto LABEL_58;
LABEL_42:
            v31 = i - 3;
            if (__OFADD__(v4, 1))
              goto LABEL_57;
            v32 = *a1;
            if ((unint64_t)*a1 >> 62)
            {
              if (v32 < 0)
                v34 = *a1;
              else
                v34 = v32 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*a1);
              v33 = _CocoaArrayWrapper.endIndex.getter(v34);
              swift_bridgeObjectRelease(v32);
            }
            else
            {
              v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            if (v31 == v33)
              return v6;
          }
          v19 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, *a1);
            v19 = *a1;
            if ((*a1 & 0xC000000000000001) == 0)
            {
LABEL_27:
              if ((v4 & 0x8000000000000000) != 0)
                goto LABEL_61;
              if (v4 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_62;
              v21 = *(id *)(v19 + 8 * i);
              goto LABEL_30;
            }
          }
          else
          {
            if ((v6 & 0x8000000000000000) != 0)
              goto LABEL_59;
            if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_60;
            v20 = *(id *)(v19 + 8 * v6 + 32);
            if ((v19 & 0xC000000000000001) == 0)
              goto LABEL_27;
          }
          v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v19);
          v19 = *a1;
LABEL_30:
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v19);
          *a1 = v19;
          if (!isUniquelyReferenced_nonNull_bridgeObject || v19 < 0 || (v19 & 0x4000000000000000) != 0)
          {
            v19 = sub_100064598(v19);
            *a1 = v19;
          }
          v23 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20);
          *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v21;

          specialized Array._endMutation()(v24);
          v25 = *a1;
          v26 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
          *a1 = v25;
          if (!v26 || v25 < 0 || (v25 & 0x4000000000000000) != 0)
          {
            v25 = sub_100064598(v25);
            *a1 = v25;
          }
          if ((v4 & 0x8000000000000000) != 0)
            goto LABEL_63;
          v27 = v25 & 0xFFFFFFFFFFFFFF8;
          if (v4 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_64;
          v28 = *(void **)(v27 + 8 * i);
          *(_QWORD *)(v27 + 8 * i) = v20;

          specialized Array._endMutation()(v29);
          goto LABEL_41;
        }
        return v6;
      }
    }
    if (v9 < 0)
      v38 = v9;
    else
      v38 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v39 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v9);
    if (v13 != v39)
      goto LABEL_16;
    return v6;
  }
LABEL_10:
  swift_bridgeObjectRelease(v4);
  v11 = *a1;
  if (!((unint64_t)*a1 >> 62))
    return *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v11 < 0)
    v36 = *a1;
  else
    v36 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v37 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v11);
  return v37;
}

void sub_100503678(void *a1, int a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  unsigned int *v21;
  void (*v22)(char *, _QWORD, uint64_t, __n128);
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t KeyPath;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t i;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t ObjectType;
  void (*v55)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  int v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE v73[24];
  char v74[24];
  _BYTE v75[24];
  char v76[32];
  _BYTE v77[32];

  v5 = v2;
  v8 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v8);
  v67 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v71 = (uint64_t)&v64 - v11;
  __chkstk_darwin(v12);
  v66 = (uint64_t)&v64 - v13;
  v72 = type metadata accessor for SpreadPaginationEntity(0);
  v69 = *(_QWORD *)(v72 - 8);
  v14 = __chkstk_darwin(v72);
  v65 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for PageTransitionCompletionState(0, v14);
  v17 = *(_QWORD *)(v16 - 8);
  v18.n128_f64[0] = __chkstk_darwin(v16);
  v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (unsigned int *)&enum case for PageTransitionCompletionState.completed(_:);
  v22 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v17 + 104);
  v68 = a2;
  if ((a2 & 1) == 0)
    v21 = (unsigned int *)&enum case for PageTransitionCompletionState.cancelled(_:);
  v22(v20, *v21, v16, v18);
  PassthroughSubject.send(_:)(v20);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  v23 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC5Books22PageCurlViewController_state);
  v24 = objc_msgSend(v5, "be_areCurlAnimationsInFlightOrPending");
  KeyPath = swift_getKeyPath(&unk_10072AAE0);
  v26 = swift_getKeyPath(&unk_10072AB08);
  v77[0] = v24;
  swift_retain(v23);
  static Published.subscript.setter(v77, v23, KeyPath, v26);
  v27 = objc_msgSend(a1, "viewControllers");
  if (!v27)
    return;
  v28 = v27;
  v29 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v30 = (uint64_t *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v28, v29);

  v31 = (uint64_t)sub_10050F2DC((unint64_t)v30);
  swift_bridgeObjectRelease(v30);
  if (!v31)
    return;
  v32 = v31 & 0xFFFFFFFFFFFFFF8;
  v70 = v5;
  if ((unint64_t)v31 >> 62)
    goto LABEL_21;
  v33 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v33)
  {
LABEL_7:
    if (v33 >= 1)
    {
      v5 = 0;
      v30 = 0;
      v34 = (_QWORD *)((char *)v70 + OBJC_IVAR____TtC5Books22PageCurlViewController_beganCurls);
      while (1)
      {
        if ((v31 & 0xC000000000000001) != 0)
          v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v31);
        else
          v35 = *(id *)(v31 + 8 * (_QWORD)v5 + 32);
        v36 = v35;
        sub_1004B1A74(0);
        swift_beginAccess(v34, v77, 33, 0);
        v37 = v36;
        v38 = sub_1005032AC(v34, (uint64_t)v37);

        v4 = *v34;
        if ((unint64_t)*v34 >> 62)
        {
          if (v4 < 0)
            v39 = *v34;
          else
            v39 = v4 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*v34);
          v3 = _CocoaArrayWrapper.endIndex.getter(v39);
          swift_bridgeObjectRelease(v4);
          if (v3 < v38)
          {
LABEL_20:
            __break(1u);
LABEL_21:
            if (v31 >= 0)
              v40 = v32;
            else
              v40 = v31;
            swift_bridgeObjectRetain(v31);
            v33 = _CocoaArrayWrapper.endIndex.getter(v40);
            swift_bridgeObjectRelease(v31);
            if (!v33)
              goto LABEL_25;
            goto LABEL_7;
          }
        }
        else
        {
          v32 = v4 & 0xFFFFFFFFFFFFF8;
          v3 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v3 < v38)
            goto LABEL_20;
        }
        v5 = (_QWORD *)((char *)v5 + 1);
        sub_1002C8014(v38, v3);
        swift_endAccess(v77);

        if ((_QWORD *)v33 == v5)
          goto LABEL_25;
      }
    }
    __break(1u);
LABEL_35:
    if (v33 < 0)
      v46 = v33;
    else
      v46 = v33 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v33);
    v42 = _CocoaArrayWrapper.endIndex.getter(v46);
    if (!v42)
      goto LABEL_39;
LABEL_28:
    if (v42 >= 1)
    {
      for (i = 0; i != v42; ++i)
      {
        if ((v33 & 0xC000000000000001) != 0)
          v44 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v33);
        else
          v44 = *(id *)(v33 + 8 * i + 32);
        v45 = v44;
        sub_1004B1A74(0);

      }
      goto LABEL_39;
    }
    __break(1u);
  }
  else
  {
LABEL_25:
    v41 = swift_bridgeObjectRelease(v31);
    v5 = &unk_100A1E000;
    v3 = v72;
    v4 = v69;
    if ((v68 & 1) == 0)
    {
      v30 = (_QWORD *)((char *)v70 + OBJC_IVAR____TtC5Books22PageCurlViewController_beganCurls);
      swift_beginAccess((char *)v70 + OBJC_IVAR____TtC5Books22PageCurlViewController_beganCurls, v77, 1, 0);
      v33 = *v30;
      if ((unint64_t)*v30 >> 62)
        goto LABEL_35;
      v42 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*v30);
      if (v42)
        goto LABEL_28;
LABEL_39:
      swift_bridgeObjectRelease(v33);
      v47 = *v30;
      *v30 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v47);
      v48 = v70;
      v49 = (uint64_t)v70 + v5[360];
      swift_beginAccess(v49, v76, 0, 0);
      v50 = v49;
      v51 = v66;
      sub_10000B5E4(v50, v66, (uint64_t *)&unk_1009E8E70);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v51, 1, v3) == 1)
      {
        sub_100010960(v51, (uint64_t *)&unk_1009E8E70);
      }
      else
      {
        v52 = v65;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v65, v51, v3);
        v53 = *(_QWORD *)((char *)v48 + OBJC_IVAR____TtC5Books22PageCurlViewController_locationController + 8);
        ObjectType = swift_getObjectType();
        dispatch thunk of LocationControlling.moveTo(spread:)(v52, ObjectType, v53);
        (*(void (**)(char *, uint64_t))(v4 + 8))(v52, v3);
      }
    }
    v55 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v4 + 56);
    v56 = v71;
    v55(v71, 1, 1, v3, v41);
    v57 = v70;
    v58 = (uint64_t)v70 + v5[360];
    swift_beginAccess(v58, v75, 33, 0);
    sub_100502658(v56, v58);
    swift_endAccess(v75);
    if (*((_BYTE *)v57 + OBJC_IVAR____TtC5Books22PageCurlViewController_needResetAfterCurlEnd) == 1)
    {
      *((_BYTE *)v57 + OBJC_IVAR____TtC5Books22PageCurlViewController_needResetAfterCurlEnd) = 0;
      v59 = (_QWORD *)((char *)v57 + OBJC_IVAR____TtC5Books22PageCurlViewController_beganCurls);
      swift_beginAccess((char *)v57 + OBJC_IVAR____TtC5Books22PageCurlViewController_beganCurls, v75, 1, 0);
      v60 = *v59;
      *v59 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRelease(v60);
      v61 = (uint64_t)v57 + OBJC_IVAR____TtC5Books22PageCurlViewController_spreadForResetAfterCurlEnd;
      swift_beginAccess((char *)v57 + OBJC_IVAR____TtC5Books22PageCurlViewController_spreadForResetAfterCurlEnd, v74, 0, 0);
      v62 = v71;
      sub_10000B5E4(v61, v71, (uint64_t *)&unk_1009E8E70);
      v63 = (uint64_t)v67;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v55)(v67, 1, 1, v72);
      swift_beginAccess(v61, v73, 33, 0);
      sub_100502658(v63, v61);
      swift_endAccess(v73);
      sub_1004FA040(v62);
      sub_100010960(v62, (uint64_t *)&unk_1009E8E70);
    }
  }
}

uint64_t sub_100503D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100503D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100503D98()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100503DBC(uint64_t a1)
{
  uint64_t v1;

  return sub_100500804(a1, v1);
}

uint64_t sub_100503DC4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100503DF0(uint64_t a1)
{
  uint64_t *v1;

  sub_10050091C(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_100503DFC()
{
  unint64_t result;

  result = qword_1009E8F68;
  if (!qword_1009E8F68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PageNavigationStyle, &type metadata for PageNavigationStyle);
    atomic_store(result, (unint64_t *)&qword_1009E8F68);
  }
  return result;
}

void sub_100503E40(uint64_t a1)
{
  uint64_t v1;

  sub_100500C48(a1, v1);
}

void sub_100503E48(uint64_t a1)
{
  uint64_t v1;

  sub_100500C98(a1, v1);
}

void sub_100503E50()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t j;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  _BYTE v93[32];
  uint64_t v94;
  _QWORD v95[16];

  v3 = v0;
  v4 = objc_msgSend(v0, "leadingItemGroups");
  v91 = sub_100009E04(0, &qword_1009D8D68, UIBarButtonItemGroup_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v91);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v37 = v5;
    else
      v37 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v92 = v0;
  if (v6)
  {
    v95[0] = _swiftEmptyArrayStorage;
    v7 = (uint64_t)v95;
    sub_100366B94(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
    {
      __break(1u);
      goto LABEL_58;
    }
    v8 = 0;
    v2 = v95[0];
    do
    {
      if ((v5 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v5);
      else
        v9 = *(id *)(v5 + 8 * v8 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, "barButtonItems");
      v12 = sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
      v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

      v95[0] = v2;
      v15 = *(_QWORD *)(v2 + 16);
      v14 = *(_QWORD *)(v2 + 24);
      v1 = (_QWORD *)(v15 + 1);
      if (v15 >= v14 >> 1)
      {
        sub_100366B94(v14 > 1, v15 + 1, 1);
        v2 = v95[0];
      }
      ++v8;
      *(_QWORD *)(v2 + 16) = v1;
      *(_QWORD *)(v2 + 8 * v15 + 32) = v13;
    }
    while (v6 != v8);
    swift_bridgeObjectRelease(v5);
    v3 = v92;
  }
  else
  {
    swift_bridgeObjectRelease(v5);
    v2 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v95[0] = _swiftEmptyArrayStorage;
  v16 = *(_QWORD *)(v2 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain(v2);
    for (i = 0; i != v16; ++i)
    {
      v18 = *(_QWORD *)(v2 + 8 * i + 32);
      swift_bridgeObjectRetain(v18);
      sub_100374B14(v19);
    }
    swift_bridgeObjectRelease_n(v2, 2);
    v7 = v95[0];
    if (!(v95[0] >> 62))
    {
LABEL_18:
      v20 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v20)
        goto LABEL_19;
LABEL_34:
      v26 = objc_msgSend(v3, "leftBarButtonItems", swift_bridgeObjectRelease(v7).n128_f64[0]);
      if (!v26)
      {
LABEL_64:
        v1 = _swiftEmptyArrayStorage;
        goto LABEL_65;
      }
      v27 = v26;
      v28 = sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
      v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

      if (!((unint64_t)v7 >> 62))
      {
        v29 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v29)
        {
LABEL_63:
          swift_bridgeObjectRelease(v7);
          goto LABEL_64;
        }
LABEL_37:
        if (v29 < 1)
        {
          __break(1u);
LABEL_148:
          v1 = sub_1005B0D94(0, v1[2] + 1, 1, v1);
          goto LABEL_88;
        }
        swift_bridgeObjectRetain(v7);
        v30 = 0;
        v22 = _swiftEmptyArrayStorage;
        do
        {
          if ((v7 & 0xC000000000000001) != 0)
            v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v7);
          else
            v31 = *(id *)(v7 + 8 * v30 + 32);
          sub_100384D94(v31, (uint64_t)v93);
          if (v94 == 1)
          {
            sub_100504A70((uint64_t)v93);
          }
          else
          {
            sub_100504AB0((uint64_t)v93, (uint64_t)v95);
            sub_100504AB0((uint64_t)v95, (uint64_t)v93);
            if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
              v22 = sub_1005B0DA8(0, v22[2] + 1, 1, (unint64_t)v22);
            v33 = v22[2];
            v32 = v22[3];
            if (v33 >= v32 >> 1)
              v22 = sub_1005B0DA8((_QWORD *)(v32 > 1), v33 + 1, 1, (unint64_t)v22);
            v22[2] = v33 + 1;
            sub_100504AB0((uint64_t)v93, (uint64_t)&v22[15 * v33 + 4]);
          }
          ++v30;
        }
        while (v29 != v30);
        goto LABEL_50;
      }
LABEL_59:
      if (v7 < 0)
        v38 = v7;
      else
        v38 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
      v29 = _CocoaArrayWrapper.endIndex.getter(v38);
      swift_bridgeObjectRelease(v7);
      if (!v29)
        goto LABEL_63;
      goto LABEL_37;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v2);
    v7 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_18;
  }
  if (v7 < 0)
    v25 = v7;
  else
    v25 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v20 = _CocoaArrayWrapper.endIndex.getter(v25);
  swift_bridgeObjectRelease(v7);
  if (!v20)
    goto LABEL_34;
LABEL_19:
  if (v20 < 1)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  swift_bridgeObjectRetain(v7);
  v21 = 0;
  v22 = _swiftEmptyArrayStorage;
  do
  {
    sub_100384D94(*(id *)(v7 + 8 * v21 + 32), (uint64_t)v93);
    if (v94 == 1)
    {
      sub_100504A70((uint64_t)v93);
    }
    else
    {
      sub_100504AB0((uint64_t)v93, (uint64_t)v95);
      sub_100504AB0((uint64_t)v95, (uint64_t)v93);
      if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
        v22 = sub_1005B0DA8(0, v22[2] + 1, 1, (unint64_t)v22);
      v24 = v22[2];
      v23 = v22[3];
      if (v24 >= v23 >> 1)
        v22 = sub_1005B0DA8((_QWORD *)(v23 > 1), v24 + 1, 1, (unint64_t)v22);
      v22[2] = v24 + 1;
      sub_100504AB0((uint64_t)v93, (uint64_t)&v22[15 * v24 + 4]);
    }
    ++v21;
  }
  while (v20 != v21);
LABEL_50:
  swift_bridgeObjectRelease_n(v7, 2);
  v1 = sub_1005B0D94(0, 1, 1, _swiftEmptyArrayStorage);
  v35 = v1[2];
  v34 = v1[3];
  if (v35 >= v34 >> 1)
    v1 = sub_1005B0D94((_QWORD *)(v34 > 1), v35 + 1, 1, v1);
  v1[2] = v35 + 1;
  v36 = &v1[3 * v35];
  v36[4] = v22;
  v36[5] = 0;
  *((_BYTE *)v36 + 48) = 3;
LABEL_65:
  v39 = objc_msgSend(v3, "titleView");
  if (v39)
  {
    v40 = v39;
    v41 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0)
      v1 = sub_1005B0D94(0, v1[2] + 1, 1, v1);
    v43 = v1[2];
    v42 = v1[3];
    if (v43 >= v42 >> 1)
      v1 = sub_1005B0D94((_QWORD *)(v42 > 1), v43 + 1, 1, v1);
    v1[2] = v43 + 1;
    v44 = &v1[3 * v43];
    v44[4] = v40;
    v44[5] = 0;
    *((_BYTE *)v44 + 48) = 1;

    goto LABEL_71;
  }
  v59 = objc_msgSend(v3, "title");
  if (!v59)
  {
LABEL_71:
    v45 = objc_msgSend(v3, "trailingItemGroups", v1);
    goto LABEL_72;
  }
  v60 = v59;
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
  v7 = v61;

  v62 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v62 = v2 & 0xFFFFFFFFFFFFLL;
  if (!v62)
  {
    swift_bridgeObjectRelease(v7);
    v45 = objc_msgSend(v3, "trailingItemGroups", v1);
    goto LABEL_72;
  }
  if ((swift_isUniquelyReferenced_nonNull_native(v1) & 1) == 0)
    goto LABEL_148;
LABEL_88:
  v64 = v1[2];
  v63 = v1[3];
  if (v64 >= v63 >> 1)
    v1 = sub_1005B0D94((_QWORD *)(v63 > 1), v64 + 1, 1, v1);
  v1[2] = v64 + 1;
  v65 = &v1[3 * v64];
  v65[4] = v2;
  v65[5] = v7;
  *((_BYTE *)v65 + 48) = 0;
  v45 = objc_msgSend(v3, "trailingItemGroups", v1);
LABEL_72:
  v46 = v45;
  v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v46, v91);

  if ((unint64_t)v47 >> 62)
  {
    if (v47 < 0)
      v66 = v47;
    else
      v66 = v47 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v47);
    v48 = _CocoaArrayWrapper.endIndex.getter(v66);
    swift_bridgeObjectRelease(v47);
    if (v48)
      goto LABEL_74;
LABEL_97:
    swift_bridgeObjectRelease(v47);
    v51 = _swiftEmptyArrayStorage;
    goto LABEL_98;
  }
  v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v48)
    goto LABEL_97;
LABEL_74:
  v95[0] = _swiftEmptyArrayStorage;
  v49 = (uint64_t)v95;
  sub_100366B94(0, v48 & ~(v48 >> 63), 0);
  if (v48 < 0)
  {
    __break(1u);
    goto LABEL_140;
  }
  v50 = 0;
  v51 = (_QWORD *)v95[0];
  do
  {
    if ((v47 & 0xC000000000000001) != 0)
      v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v50, v47);
    else
      v52 = *(id *)(v47 + 8 * v50 + 32);
    v53 = v52;
    v54 = objc_msgSend(v52, "barButtonItems");
    v55 = sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
    v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v54, v55);

    v95[0] = v51;
    v58 = v51[2];
    v57 = v51[3];
    if (v58 >= v57 >> 1)
    {
      sub_100366B94(v57 > 1, v58 + 1, 1);
      v51 = (_QWORD *)v95[0];
    }
    ++v50;
    v51[2] = v58 + 1;
    v51[v58 + 4] = v56;
  }
  while (v48 != v50);
  swift_bridgeObjectRelease(v47);
  v3 = v92;
LABEL_98:
  v95[0] = _swiftEmptyArrayStorage;
  v67 = v51[2];
  if (v67)
  {
    swift_bridgeObjectRetain(v51);
    for (j = 0; j != v67; ++j)
    {
      v69 = v51[j + 4];
      swift_bridgeObjectRetain(v69);
      sub_100374B14(v70);
    }
    swift_bridgeObjectRelease(v51);
  }
  swift_bridgeObjectRelease(v51);
  v49 = v95[0];
  if (!(v95[0] >> 62))
  {
    v71 = *(_QWORD *)((v95[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v71)
      goto LABEL_104;
LABEL_118:
    v77 = objc_msgSend(v3, "rightBarButtonItems", swift_bridgeObjectRelease(v49).n128_f64[0]);
    if (!v77)
      return;
    v78 = v77;
    v79 = sub_100009E04(0, &qword_1009D8D60, UIBarButtonItem_ptr);
    v49 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v78, v79);

    if (!((unint64_t)v49 >> 62))
    {
      v80 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v80)
      {
LABEL_145:
        swift_bridgeObjectRelease(v49);
        return;
      }
LABEL_121:
      if (v80 < 1)
      {
        __break(1u);
        return;
      }
      swift_bridgeObjectRetain(v49);
      v81 = 0;
      v73 = _swiftEmptyArrayStorage;
      do
      {
        if ((v49 & 0xC000000000000001) != 0)
          v82 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v81, v49);
        else
          v82 = *(id *)(v49 + 8 * v81 + 32);
        sub_100384D94(v82, (uint64_t)v93);
        if (v94 == 1)
        {
          sub_100504A70((uint64_t)v93);
        }
        else
        {
          sub_100504AB0((uint64_t)v93, (uint64_t)v95);
          sub_100504AB0((uint64_t)v95, (uint64_t)v93);
          if ((swift_isUniquelyReferenced_nonNull_native(v73) & 1) == 0)
            v73 = sub_1005B0DA8(0, v73[2] + 1, 1, (unint64_t)v73);
          v84 = v73[2];
          v83 = v73[3];
          if (v84 >= v83 >> 1)
            v73 = sub_1005B0DA8((_QWORD *)(v83 > 1), v84 + 1, 1, (unint64_t)v73);
          v73[2] = v84 + 1;
          sub_100504AB0((uint64_t)v93, (uint64_t)&v73[15 * v84 + 4]);
        }
        ++v81;
      }
      while (v80 != v81);
      goto LABEL_134;
    }
LABEL_141:
    if (v49 < 0)
      v89 = v49;
    else
      v89 = v49 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v49);
    v80 = _CocoaArrayWrapper.endIndex.getter(v89);
    swift_bridgeObjectRelease(v49);
    if (!v80)
      goto LABEL_145;
    goto LABEL_121;
  }
  if (v95[0] < 0)
    v76 = v95[0];
  else
    v76 = v95[0] & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v95[0]);
  v71 = _CocoaArrayWrapper.endIndex.getter(v76);
  swift_bridgeObjectRelease(v49);
  if (!v71)
    goto LABEL_118;
LABEL_104:
  if (v71 < 1)
  {
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  swift_bridgeObjectRetain(v49);
  v72 = 0;
  v73 = _swiftEmptyArrayStorage;
  do
  {
    sub_100384D94(*(id *)(v49 + 8 * v72 + 32), (uint64_t)v93);
    if (v94 == 1)
    {
      sub_100504A70((uint64_t)v93);
    }
    else
    {
      sub_100504AB0((uint64_t)v93, (uint64_t)v95);
      sub_100504AB0((uint64_t)v95, (uint64_t)v93);
      if ((swift_isUniquelyReferenced_nonNull_native(v73) & 1) == 0)
        v73 = sub_1005B0DA8(0, v73[2] + 1, 1, (unint64_t)v73);
      v75 = v73[2];
      v74 = v73[3];
      if (v75 >= v74 >> 1)
        v73 = sub_1005B0DA8((_QWORD *)(v74 > 1), v75 + 1, 1, (unint64_t)v73);
      v73[2] = v75 + 1;
      sub_100504AB0((uint64_t)v93, (uint64_t)&v73[15 * v75 + 4]);
    }
    ++v72;
  }
  while (v71 != v72);
LABEL_134:
  swift_bridgeObjectRelease_n(v49, 2);
  v85 = v90;
  if ((swift_isUniquelyReferenced_nonNull_native(v90) & 1) == 0)
    v85 = sub_1005B0D94(0, v90[2] + 1, 1, v90);
  v87 = v85[2];
  v86 = v85[3];
  if (v87 >= v86 >> 1)
    v85 = sub_1005B0D94((_QWORD *)(v86 > 1), v87 + 1, 1, v85);
  v85[2] = v87 + 1;
  v88 = &v85[3 * v87];
  v88[4] = v73;
  v88[5] = 0;
  *((_BYTE *)v88 + 48) = 4;
}

uint64_t sub_100504A70(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009E8FA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100504AB0(uint64_t a1, uint64_t a2)
{
  initializeWithTake for MainToolbar.Button(a2, a1);
  return a2;
}

id RootBarItem.__allocating_init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, __int128 a10, uint64_t a11, char a12)
{
  objc_class *v12;
  id v20;

  v20 = objc_allocWithZone(v12);
  return RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10, *((uint64_t *)&a10 + 1), a11, a12);
}

uint64_t RootBarItem.iconName.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_100505E00(&OBJC_IVAR___BKRootBarItem_iconNameOverride, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))sub_100047674, a1);
}

void sub_100504BBC(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, _QWORD, uint64_t);
  char v12;
  void (*v13)(char *, uint64_t);
  char v14;
  id v15;
  id v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  _QWORD v32[4];

  v3 = type metadata accessor for AutomationSemantics(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, _QWORD, uint64_t))(v8 + 104);
  v11(v10, enum case for BooksUIKitFeatureFlag.floatingTabBar(_:), v7);
  v12 = isFeatureEnabled(_:)(v10);
  v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13(v10, v7);
  if ((v12 & 1) != 0
    || (v11(v10, enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:), v7),
        v14 = isFeatureEnabled(_:)(v10),
        v13(v10, v7),
        (v14 & 1) != 0))
  {
    if (a1)
      v15 = objc_msgSend(a1, "toTabBarElement");
    else
      v15 = 0;
    objc_msgSend(v1, "_uip_setTabElement:", v15);

    v16 = objc_msgSend(v1, "_uip_tabElement");
    if (v16)
    {
      v17 = v16;
      v18 = type metadata accessor for ExtendedUITabBarElement();
      v19 = swift_dynamicCastClass(v17, v18);
      if (v19)
      {
        v20 = *(_QWORD *)(v19 + OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_shortTabBarTitle + 8);
        swift_bridgeObjectRetain(v20);

        if (!v20)
          goto LABEL_12;
        v21 = objc_msgSend(v1, "tabBarItem");
        if (!v21)
        {
          __break(1u);
LABEL_25:
          __break(1u);
          return;
        }
        v22 = v21;
        v17 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v20);
        objc_msgSend(v22, "setTitle:", v17);

      }
    }
LABEL_12:
    v23 = objc_msgSend(v1, "_uip_tabElement");
    if (v23)
    {
      v24 = v23;
      v25 = type metadata accessor for ExtendedUITabBarElement();
      v26 = swift_dynamicCastClass(v24, v25);
      if (v26)
      {
        v28 = *(_QWORD *)(v26 + OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_automationID);
        v27 = *(_QWORD *)(v26 + OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_automationID + 8);
        swift_bridgeObjectRetain(v27);

        if (v27)
        {
          v29 = objc_msgSend(v1, "tabBarItem");
          if (v29)
          {
            v30 = v29;
            v32[3] = &type metadata for String;
            v32[0] = v28;
            v32[1] = v27;
            static AutomationSemantics.tabBar(tabName:)(v32);
            _s5Books15CurrentPageViewVwxx_0(v32);
            UITabBarItem.setAutomationSemantics(_:)(v6);

            (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
            return;
          }
          goto LABEL_25;
        }
      }
      else
      {

      }
    }

    return;
  }
  if (a1)
    v31 = objc_msgSend(a1, "toTabBarItem");
  else
    v31 = 0;
  objc_msgSend(v1, "setTabBarItem:", v31);

}

id ExtendedTabBarItem.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5Books18ExtendedTabBarItem_rootBarItem] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExtendedTabBarItem();
  return objc_msgSendSuper2(&v2, "init");
}

id ExtendedTabBarItem.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books18ExtendedTabBarItem_rootBarItem] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ExtendedTabBarItem();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id ExtendedTabBarItem.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for ExtendedTabBarItem);
}

id ExtendedUITabBarElement.__allocating_init(identifier:title:image:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  objc_class *v5;
  id v9;
  NSString v10;
  NSString v11;
  id v12;

  v9 = objc_allocWithZone(v5);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v12 = objc_msgSend(v9, "initWithIdentifier:title:image:", v10, v11, a5);

  return v12;
}

id ExtendedUITabBarElement.init(identifier:title:image:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char *v5;
  char *v9;
  char *v10;
  NSString v11;
  NSString v12;
  id v13;
  objc_super v15;

  *(_QWORD *)&v5[OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_rootBarItem] = 0;
  v9 = &v5[OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_shortTabBarTitle];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v5[OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_automationID];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for ExtendedUITabBarElement();
  v13 = objc_msgSendSuper2(&v15, "initWithIdentifier:title:image:", v11, v12, a5);

  return v13;
}

id ExtendedUITabBarElement.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for ExtendedUITabBarElement);
}

uint64_t RootBarItem.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier + 8));
  return v1;
}

uint64_t RootBarItem.isPlaceholder.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___BKRootBarItem_isPlaceholder);
}

uint64_t RootBarItem.url.getter()
{
  return sub_10050541C(&OBJC_IVAR___BKRootBarItem_url);
}

uint64_t RootBarItem.iconNameOverride.getter()
{
  return sub_10050541C(&OBJC_IVAR___BKRootBarItem_iconNameOverride);
}

uint64_t RootBarItem.selectedIconNameOverride.getter()
{
  return sub_10050541C(&OBJC_IVAR___BKRootBarItem_selectedIconNameOverride);
}

uint64_t RootBarItem.titleOverride.getter()
{
  return sub_10050541C(&OBJC_IVAR___BKRootBarItem_titleOverride);
}

uint64_t RootBarItem.countryCode.getter()
{
  return sub_10050541C(&OBJC_IVAR___BKRootBarItem_countryCode);
}

uint64_t sub_10050541C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t RootBarItem.editNameOnSelect.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___BKRootBarItem_editNameOnSelect);
}

id RootBarItem.init(identifier:isPlaceholder:url:titleOverride:iconNameOverride:selectedIconNameOverride:countryCode:editNameOnSelect:)(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  char *v14;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v30;
  objc_super v32;

  v20 = a2;
  v21 = a1;
  if (a1 == 0x5F676E6964616572 && a2 == 0xEB00000000776F6ELL
    || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, 0x5F676E6964616572, 0xEB00000000776F6ELL, 0) & 1) != 0
    || v21 == 0x776F6E5F64616572 && v20 == 0xE800000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v20, 0x776F6E5F64616572, 0xE800000000000000, 0) & 1) != 0)
  {
    v22 = v14;
    swift_bridgeObjectRelease(v20);
    v20 = 0xE400000000000000;
    v21 = 1701670760;
  }
  else
  {
    v30 = v14;
  }
  v23 = (uint64_t *)&v14[OBJC_IVAR___BKRootBarItem_identifier];
  *v23 = v21;
  v23[1] = v20;
  v14[OBJC_IVAR___BKRootBarItem_isPlaceholder] = a3 & 1;
  v24 = &v14[OBJC_IVAR___BKRootBarItem_url];
  *(_QWORD *)v24 = a4;
  *((_QWORD *)v24 + 1) = a5;
  v25 = &v14[OBJC_IVAR___BKRootBarItem_titleOverride];
  *(_QWORD *)v25 = a6;
  *((_QWORD *)v25 + 1) = a7;
  v26 = &v14[OBJC_IVAR___BKRootBarItem_iconNameOverride];
  *(_QWORD *)v26 = a8;
  *((_QWORD *)v26 + 1) = a9;
  v27 = &v14[OBJC_IVAR___BKRootBarItem_selectedIconNameOverride];
  *(_QWORD *)v27 = a10;
  *((_QWORD *)v27 + 1) = a11;
  v28 = &v14[OBJC_IVAR___BKRootBarItem_countryCode];
  *(_QWORD *)v28 = a12;
  *((_QWORD *)v28 + 1) = a13;
  v14[OBJC_IVAR___BKRootBarItem_editNameOnSelect] = a14 & 1;

  v32.receiver = v14;
  v32.super_class = (Class)type metadata accessor for RootBarItem();
  return objc_msgSendSuper2(&v32, "init");
}

id RootBarItem.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return RootBarItem.init(coder:)(a1);
}

void RootBarItem.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.RootBarItem", 17, "init()", 6, 0);
  __break(1u);
}

id RootBarItem.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for RootBarItem);
}

uint64_t RootBarItem.isSearch.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  Swift::String v12;

  v1 = v0 + OBJC_IVAR___BKRootBarItem_identifier;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
  v2 = *(void **)(v1 + 8);
  swift_bridgeObjectRetain(v2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v3, (unint64_t)v2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(v2);
    v6 = 14;
  }
  else
  {
    v12._countAndFlagsBits = v3;
    v12._object = v2;
    v6 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v12);
    if (v6 == 16)
      v6 = 15;
  }
  v7 = RootBarItemsProvider.ItemKind.rawValue.getter(v6);
  v9 = v8;
  if (v7 == 0x686372616573 && v8 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 1;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0x686372616573, 0xE600000000000000, 0);
    swift_bridgeObjectRelease(v9);
    return v11 & 1;
  }
}

uint64_t RootBarItem.isStoreOnly.getter()
{
  return sub_100505C30((uint64_t (*)(uint64_t, __n128))sub_100415C94);
}

uint64_t RootBarItem.isDefaultCollection.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v7;
  Swift::String v8;

  v1 = v0 + OBJC_IVAR___BKRootBarItem_identifier;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
  v2 = *(void **)(v1 + 8);
  swift_bridgeObjectRetain(v2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v3, (unint64_t)v2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(v2);
    return 0;
  }
  else
  {
    v8._countAndFlagsBits = v3;
    v8._object = v2;
    v7 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v8);
    if (v7 > 0x10u)
      return 1;
    else
      return (0x1FE0u >> v7) & 1;
  }
}

uint64_t RootBarItem.isCustomCollection.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  Swift::String v12;

  v1 = v0 + OBJC_IVAR___BKRootBarItem_identifier;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
  v2 = *(void **)(v1 + 8);
  swift_bridgeObjectRetain(v2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v3, (unint64_t)v2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(v2);
    v6 = 14;
  }
  else
  {
    v12._countAndFlagsBits = v3;
    v12._object = v2;
    v6 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v12);
    if (v6 == 16)
      v6 = 15;
  }
  v7 = RootBarItemsProvider.ItemKind.rawValue.getter(v6);
  v9 = v8;
  if (v7 == 0x6D6F74737563 && v8 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 1;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0x6D6F74737563, 0xE600000000000000, 0);
    swift_bridgeObjectRelease(v9);
    return v11 & 1;
  }
}

uint64_t RootBarItem.isLibraryCollection.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  char v12;
  Swift::String v13;

  v1 = v0 + OBJC_IVAR___BKRootBarItem_identifier;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
  v2 = *(void **)(v1 + 8);
  swift_bridgeObjectRetain(v2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v3, (unint64_t)v2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(v2);
    v6 = 14;
  }
  else
  {
    v13._countAndFlagsBits = v3;
    v13._object = v2;
    v10 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v13);
    if (v10 > 0x10u || ((0x1E01Fu >> v10) & 1) == 0)
      return 1;
    v6 = byte_10072ABD6[(char)v10];
  }
  v7 = RootBarItemsProvider.ItemKind.rawValue.getter(v6);
  v9 = v8;
  if (v7 == 0x6D6F74737563 && v8 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease(0xE600000000000000);
    return 1;
  }
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, 0x6D6F74737563, 0xE600000000000000, 0);
  swift_bridgeObjectRelease(v9);
  return v12 & 1;
}

uint64_t sub_100505B80(char *a1, uint64_t a2, uint64_t (*a3)(uint64_t, __n128))
{
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char v11;
  Swift::String v13;

  v5 = *(_QWORD *)&a1[OBJC_IVAR___BKRootBarItem_identifier];
  v4 = *(void **)&a1[OBJC_IVAR___BKRootBarItem_identifier + 8];
  v6 = a1;
  swift_bridgeObjectRetain(v4);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v5, (unint64_t)v4);
  v8 = v7;
  swift_bridgeObjectRelease(v7);
  if (v8)
  {
    v9 = swift_bridgeObjectRelease(v4);
    v10 = 14;
  }
  else
  {
    v13._countAndFlagsBits = v5;
    v13._object = v4;
    LODWORD(v10) = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v13);
    if (v10 == 16)
      v10 = 15;
    else
      v10 = v10;
  }
  v11 = a3(v10, v9);

  return v11 & 1;
}

uint64_t RootBarItem.isStandardItem.getter()
{
  return sub_100505C30((uint64_t (*)(uint64_t, __n128))sub_100415E40);
}

uint64_t sub_100505C30(uint64_t (*a1)(uint64_t, __n128))
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  Swift::String v11;

  v2 = v1 + OBJC_IVAR___BKRootBarItem_identifier;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___BKRootBarItem_identifier);
  v3 = *(void **)(v2 + 8);
  swift_bridgeObjectRetain(v3);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v4, (unint64_t)v3);
  v6 = v5;
  swift_bridgeObjectRelease(v5);
  if (v6)
  {
    v7 = swift_bridgeObjectRelease(v3);
    v8 = 14;
  }
  else
  {
    v11._countAndFlagsBits = v4;
    v11._object = v3;
    LODWORD(v8) = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v11);
    if (v8 == 16)
      v8 = 15;
    else
      v8 = v8;
  }
  return a1(v8, v7);
}

uint64_t RootBarItem.requiresURL.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  char v7;
  Swift::String v9;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
  v1 = *(void **)(v0 + OBJC_IVAR___BKRootBarItem_identifier + 8);
  swift_bridgeObjectRetain(v1);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v2, (unint64_t)v1);
  v4 = v3;
  swift_bridgeObjectRelease(v3);
  if (v4)
  {
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v9._countAndFlagsBits = v2;
    v9._object = v1;
    v5 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v9);
    if (v5 > 0x10u || ((1 << v5) & 0x1E01F) == 0)
    {
      v7 = 0;
      return v7 & 1;
    }
  }
  v7 = *(_BYTE *)(v0 + OBJC_IVAR___BKRootBarItem_isPlaceholder) ^ 1;
  return v7 & 1;
}

uint64_t RootBarItem.automationID.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  Swift::String v8;

  v1 = v0 + OBJC_IVAR___BKRootBarItem_identifier;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
  v2 = *(void **)(v1 + 8);
  swift_bridgeObjectRetain(v2);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v3, (unint64_t)v2);
  v5 = v4;
  swift_bridgeObjectRelease(v4);
  if (v5)
  {
    swift_bridgeObjectRelease(v2);
    v6 = 14;
  }
  else
  {
    v8._countAndFlagsBits = v3;
    v8._object = v2;
    v6 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v8);
    if (v6 == 16)
      v6 = 15;
  }
  return sub_100048A4C(v6);
}

uint64_t RootBarItem.selectedIconName.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_100505E00(&OBJC_IVAR___BKRootBarItem_selectedIconNameOverride, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD))sub_100047674, a1);
}

uint64_t sub_100505E00@<X0>(_QWORD *a1@<X0>, void (*a2)(_QWORD *__return_ptr, _QWORD, _QWORD, _QWORD, _QWORD)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  _QWORD v14[6];
  _BYTE v15[8];
  uint64_t v16;

  v5 = (uint64_t *)(v3 + *a1);
  v6 = v5[1];
  if (v6)
  {
    v7 = 0;
    v8 = 0;
    v9 = *v5;
    v10 = v5[1];
    v11 = *v5;
    v12 = v10;
  }
  else
  {
    a2(v14, *(_QWORD *)(v3 + OBJC_IVAR___BKRootBarItem_identifier), *(_QWORD *)(v3 + OBJC_IVAR___BKRootBarItem_identifier + 8), *(_QWORD *)(v3 + OBJC_IVAR___BKRootBarItem_countryCode), *(_QWORD *)(v3 + OBJC_IVAR___BKRootBarItem_countryCode + 8));
    v11 = v14[0];
    v12 = v14[1];
    v9 = v14[2];
    v10 = v14[3];
    v7 = v14[4];
    v8 = v14[5];
    sub_100025B3C((uint64_t)v14, (uint64_t)v15, (uint64_t *)&unk_1009D7970);
    if (!v16)
    {
      v7 = 0;
      v8 = 0;
      v9 = 0;
      v10 = 0xE000000000000000;
      v11 = 0;
      v12 = 0xE000000000000000;
    }
  }
  result = swift_bridgeObjectRetain_n(v6, 2);
  *a3 = v11;
  a3[1] = v12;
  a3[2] = v9;
  a3[3] = v10;
  a3[4] = v7;
  a3[5] = v8;
  return result;
}

char *RootBarItem.toTabBarElement()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  NSString v11;
  void *v12;
  id v13;
  NSString v14;
  uint64_t v15;
  objc_class *v16;
  id v17;
  NSString v18;
  NSString v19;
  char *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  NSString v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[4];
  uint64_t v37[2];
  __int128 v38;
  uint64_t v39;
  _QWORD v40[6];
  _OWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  _BYTE v47[16];
  _BYTE v48[16];
  __int128 v49;

  v1 = type metadata accessor for AutomationSemantics(0);
  v33 = *(_QWORD *)(v1 - 8);
  v34 = v1;
  __chkstk_darwin(v1);
  v32 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_identifier];
  v4 = *(void **)&v0[OBJC_IVAR___BKRootBarItem_identifier + 8];
  swift_bridgeObjectRetain(v4);
  RootBarItem.title.getter(v37);
  v49 = v38;
  sub_100210D88((uint64_t)&v49);
  sub_100025B3C((uint64_t)&v39, (uint64_t)v48, &qword_1009D2A80);
  sub_100210D88((uint64_t)v48);
  v5 = *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_iconNameOverride + 8];
  v35 = v3;
  if (v5)
  {
    v6 = 0;
    v7 = v5;
    v8 = v5;
  }
  else
  {
    sub_100047674(v3, v4, *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_countryCode], *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_countryCode + 8], (uint64_t)v40);
    v9 = v40[1];
    v7 = v40[3];
    v10 = v40[5];
    sub_100025B3C((uint64_t)v40, (uint64_t)&v43, (uint64_t *)&unk_1009D7970);
    if (v44)
      v6 = v10;
    else
      v6 = 0;
    if (v44)
    {
      v8 = v9;
    }
    else
    {
      v7 = 0xE000000000000000;
      v8 = 0xE000000000000000;
    }
  }
  swift_bridgeObjectRetain_n(v5, 2);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRetain(v8);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v8);
  v12 = (void *)objc_opt_self(UIImage);
  v13 = objc_msgSend(v12, "_systemImageNamed:", v11);

  if (v13
    || (swift_bridgeObjectRetain(v8),
        v14 = String._bridgeToObjectiveC()(),
        v13 = objc_msgSend(v12, "imageNamed:", v14, swift_bridgeObjectRelease(v8).n128_f64[0]),
        v14,
        v13))
  {
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v31 = String._bridgeToObjectiveC()();
    v13 = objc_msgSend(v12, "systemImageNamed:", v31);
    swift_bridgeObjectRelease(v8);

  }
  v15 = v37[1];
  v16 = (objc_class *)type metadata accessor for ExtendedUITabBarElement();
  v17 = objc_allocWithZone(v16);
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  v19 = String._bridgeToObjectiveC()();
  v20 = (char *)objc_msgSend(v17, "initWithIdentifier:title:image:", v18, v19, v13, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v21 = v35;
  if (v21 == 0x686372616573 && v4 == (void *)0xE600000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)(v21, v4, 0x686372616573, 0xE600000000000000, 0) & 1) != 0)
  {
    objc_msgSend(v20, "_setTabBarPlacement:", 1);
  }
  v22 = *(void **)&v20[OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_rootBarItem];
  *(_QWORD *)&v20[OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_rootBarItem] = v0;
  v23 = v0;

  RootBarItem.title.getter((uint64_t *)v41);
  sub_100025B3C((uint64_t)&v42, (uint64_t)v47, &qword_1009D2A80);
  v46 = v41[0];
  sub_100210D60((uint64_t)v47);
  sub_100210D88((uint64_t)&v46);
  v45 = v41[1];
  sub_100210D88((uint64_t)&v45);
  sub_100210D88((uint64_t)v47);
  v24 = *(_QWORD *)&v20[OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_shortTabBarTitle + 8];
  sub_100025B3C((uint64_t)v47, (uint64_t)&v20[OBJC_IVAR____TtC5Books23ExtendedUITabBarElement_shortTabBarTitle], &qword_1009D2A80);
  v25 = objc_msgSend(v23, "automationID", swift_bridgeObjectRelease(v24).n128_f64[0]);
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v36[3] = &type metadata for String;
  v36[0] = v26;
  v36[1] = v28;
  v29 = v32;
  static AutomationSemantics.tabBar(tabName:)(v36);
  _s5Books15CurrentPageViewVwxx_0(v36);
  UIAccessibilityIdentification.setAutomationSemantics(_:)(v29, v16);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v34);
  return v20;
}

uint64_t RootBarItem.suggestedTrackerName.getter()
{
  char *v0;
  uint64_t v1;
  char *v2;

  if ((objc_msgSend(v0, "isLibraryCollection") & 1) != 0)
    return 0x7972617262696CLL;
  v2 = &v0[OBJC_IVAR___BKRootBarItem_identifier];
  v1 = *(_QWORD *)&v0[OBJC_IVAR___BKRootBarItem_identifier];
  swift_bridgeObjectRetain(*((_QWORD *)v2 + 1));
  return v1;
}

uint64_t RootBarItem.sidebarTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v11[6];
  _BYTE v12[8];
  uint64_t v13;
  Swift::String v14;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_titleOverride + 8);
  if (v1)
  {
    v2 = 0;
    v3 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_titleOverride);
    v4 = v1;
  }
  else
  {
    v6 = *(_QWORD *)(v0 + OBJC_IVAR___BKRootBarItem_identifier);
    v5 = *(void **)(v0 + OBJC_IVAR___BKRootBarItem_identifier + 8);
    swift_bridgeObjectRetain(v5);
    _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v6, (unint64_t)v5);
    v8 = v7;
    swift_bridgeObjectRelease(v7);
    if (v8)
    {
      swift_bridgeObjectRelease(v5);
      v9 = 14;
    }
    else
    {
      v14._countAndFlagsBits = v6;
      v14._object = v5;
      v9 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v14);
      if (v9 == 16)
        v9 = 15;
    }
    sub_100047B64(v9, v11);
    v4 = v11[1];
    v3 = v11[2];
    v2 = v11[5];
    sub_100025B3C((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_1009D7970);
    if (!v13)
    {
      v2 = 0;
      v3 = 0;
      v4 = 0xE000000000000000;
    }
  }
  swift_bridgeObjectRetain_n(v1, 2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v4);
  return v3;
}

uint64_t type metadata accessor for ExtendedUITabBarElement()
{
  return objc_opt_self(_TtC5Books23ExtendedUITabBarElement);
}

double destroy for SearchView(_QWORD *a1)
{
  double result;

  _s5Books15CurrentPageViewVwxx_0(a1);
  *(_QWORD *)&result = swift_release(a1[6]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for SearchView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_retain(v5);
  return a1;
}

uint64_t assignWithCopy for SearchView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1001EAB00((_QWORD *)a1, (_QWORD *)a2);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain(v4);
  swift_release(v5);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

__n128 initializeWithTake for SearchView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SearchView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v5);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchView()
{
  return &type metadata for SearchView;
}

uint64_t sub_1005066F8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008751B8, 1);
}

_QWORD *sub_100506708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v24[8];
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;

  if (*(_BYTE *)(v0 + 56) == 1)
  {
    sub_10002E418(v0, (uint64_t)v24);
    v1 = *(_QWORD *)(v0 + 48);
    v2 = type metadata accessor for SearchViewModel(0);
    v3 = sub_100506A00();
    swift_retain(v1);
    v24[5] = ObservedObject.init(wrappedValue:)(v4, v2, v3);
    v24[6] = v5;
    v19 = 0;
    v20 = 1;
    v21 = sub_1001DB230((uint64_t)_swiftEmptyArrayStorage);
    v22 = 0;
    v23 = 1;
    State.init(wrappedValue:)(&v30, &v19, &type metadata for SearchPopoverView.ResultListHeightInfo);
    v24[7] = v30;
    v25 = v31;
    v26 = v32;
    v27 = v33;
    v28 = v34;
    v29 = v35;
    sub_100506A48((uint64_t)v24, (uint64_t)&v30);
    v36 = 0;
    v6 = sub_100506944();
    v7 = sub_100506988();
    _ConditionalContent<>.init(storage:)(&v30, &type metadata for SearchPopoverView, &type metadata for SearchModalView, v6, v7);
    return sub_100506A84(v24);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 24);
    v10 = *(_QWORD *)(v0 + 32);
    v11 = sub_10003F198((_QWORD *)v0, v9);
    v12 = __chkstk_darwin(v11);
    v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v15 + 16))(v14, v12);
    v16 = *(_QWORD *)(v0 + 48);
    swift_retain(v16);
    sub_1006872F0((uint64_t)v14, v16, v9, v10, (uint64_t)v24);
    sub_100506908((uint64_t)v24, (uint64_t)&v30);
    v36 = 1;
    v17 = sub_100506944();
    v18 = sub_100506988();
    _ConditionalContent<>.init(storage:)(&v30, &type metadata for SearchPopoverView, &type metadata for SearchModalView, v17, v18);
    return (_QWORD *)sub_1005069CC((uint64_t)v24);
  }
}

uint64_t sub_100506908(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SearchModalView(a2, a1);
  return a2;
}

unint64_t sub_100506944()
{
  unint64_t result;

  result = qword_1009E90A8;
  if (!qword_1009E90A8)
  {
    result = swift_getWitnessTable(&unk_10072D77C, &type metadata for SearchPopoverView);
    atomic_store(result, (unint64_t *)&qword_1009E90A8);
  }
  return result;
}

unint64_t sub_100506988()
{
  unint64_t result;

  result = qword_1009E90B0;
  if (!qword_1009E90B0)
  {
    result = swift_getWitnessTable(&unk_100738B28, &type metadata for SearchModalView);
    atomic_store(result, (unint64_t *)&qword_1009E90B0);
  }
  return result;
}

uint64_t sub_1005069CC(uint64_t a1)
{
  destroy for SearchModalView(a1);
  return a1;
}

unint64_t sub_100506A00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EFDC0;
  if (!qword_1009EFDC0)
  {
    v1 = type metadata accessor for SearchViewModel(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for SearchViewModel, v1);
    atomic_store(result, (unint64_t *)&qword_1009EFDC0);
  }
  return result;
}

uint64_t sub_100506A48(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SearchPopoverView(a2, a1);
  return a2;
}

_QWORD *sub_100506A84(_QWORD *a1)
{
  destroy for SearchPopoverView(a1);
  return a1;
}

unint64_t sub_100506ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E90B8;
  if (!qword_1009E90B8)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009E90C0);
    sub_100506944();
    sub_100506988();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E90B8);
  }
  return result;
}

uint64_t sub_100506B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v22[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v22[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0x5320746E65636552, 0xEF73656863726165);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Recent searches list title", 26, 2);
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  qword_100A1EB68 = v18;
  unk_100A1EB70 = v20;
  return result;
}

uint64_t sub_100506CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v22[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v22[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0x7261656C43, 0xE500000000000000);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Recent searches clear button text", 33, 2);
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  qword_100A1EB78 = v18;
  unk_100A1EB80 = v20;
  return result;
}

uint64_t sub_100506EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v22[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v22[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0x6E69686372616553, 0xAC000000A680E267);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Searching loading cell text", 27, 2);
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  qword_100A1EB88 = v18;
  unk_100A1EB90 = v20;
  return result;
}

uint64_t sub_100507090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v22[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v22[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0x726F4D2064616F4CLL, 0xAC000000A680E265);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Load more cell text", 19, 2);
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  qword_100A1EB98 = v18;
  unk_100A1EBA0 = v20;
  return result;
}

uint64_t sub_100507260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v22[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v22[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007D0370);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Type a word or page number - used for placeholder text in EPUB search", 69, 2);
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  qword_100A1EBA8 = v18;
  qword_100A1EBB0 = v20;
  return result;
}

void sub_10050742C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;

  v0 = type metadata accessor for Locale(0);
  v1 = __chkstk_darwin(v0);
  __chkstk_darwin(v1);
  v2 = type metadata accessor for String.LocalizationValue(0);
  v3 = __chkstk_darwin(v2);
  v4 = __chkstk_darwin(v3);
  v5 = (char *)&loc_100507504
     + dword_10050768C[dispatch thunk of SearchViewModel.loadingTitle.getter(v4)];
  __asm { BR              X9 }
}

uint64_t sub_100507518()
{
  uint64_t v0;

  if (qword_1009CE780 != -1)
    swift_once(&qword_1009CE780, sub_100506EC0);
  v0 = qword_100A1EB88;
  swift_bridgeObjectRetain(unk_100A1EB90);
  return v0;
}

uint64_t sub_10050769C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[4];

  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v39 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v39 - v14;
  if (a1 <= 0)
  {
    v21 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007D0430);
    static Locale.current.getter(v21);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v22 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
    v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    v20 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v24, v5, "No matches found cell detail text", 33, 2);
  }
  else
  {
    if (a1 != 1)
    {
      v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007D0480);
      static Locale.current.getter(v26);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
      v27 = type metadata accessor for BundleFinder();
      v28 = swift_getObjCClassFromMetadata(v27);
      v29 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v28);
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
      v30 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v29, v5, "Multiple matches found cell detail text", 39, 2);
      v32 = v31;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      v33 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
      v34 = swift_allocObject(v33, 72, 7);
      *(_OWORD *)(v34 + 16) = xmmword_10070CCA0;
      v39[2] = a1;
      v35 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      v37 = v36;
      *(_QWORD *)(v34 + 56) = &type metadata for String;
      *(_QWORD *)(v34 + 64) = sub_10002BE50();
      *(_QWORD *)(v34 + 32) = v35;
      *(_QWORD *)(v34 + 40) = v37;
      v25 = String.init(format:_:)(v30, v32, v34);
      swift_bridgeObjectRelease(v32);
      return v25;
    }
    v16 = String.LocalizationValue.init(stringLiteral:)(0x20686374616D2031, 0xED0000646E756F66);
    static Locale.current.getter(v16);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
    v17 = type metadata accessor for BundleFinder();
    v18 = swift_getObjCClassFromMetadata(v17);
    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v18);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    v20 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v19, v5, "1 match found cell detail text", 30, 2);
  }
  v25 = v20;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v25;
}

uint64_t sub_100507A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v22;
  _BYTE v23[16];

  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v23[-v12];
  String.LocalizationValue.init(stringLiteral:)(0x40252065676150, 0xE700000000000000);
  v14 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  static Locale.current.getter(v14);
  v22 = 2;
  v15 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Search_Result_Page_Number", 25, 2, v10, 0, 0, 0, v6, "Search result for page number", 29, v22);
  v17 = v16;
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  v18 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v19 = swift_allocObject(v18, 72, 7);
  *(_OWORD *)(v19 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  *(_QWORD *)(v19 + 64) = sub_10002BE50();
  *(_QWORD *)(v19 + 32) = a1;
  *(_QWORD *)(v19 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  v20 = String.init(format:_:)(v15, v17, v19);
  swift_bridgeObjectRelease(v17);
  return v20;
}

void *BookReaderModuleHost.asset.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)(v0 + OBJC_IVAR___REBookReaderModuleHost_bookProviderService)
                + OBJC_IVAR___REBookProviderService_bookInfo);
  v2 = v1;
  return v1;
}

uint64_t BookReaderModuleHost.assetViewControllerDelegate.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___REBookReaderModuleHost_assetViewControllerDelegate;
  swift_beginAccess(v0 + OBJC_IVAR___REBookReaderModuleHost_assetViewControllerDelegate, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

double BookReaderModuleHost.assetViewControllerDelegate.setter(uint64_t a1)
{
  double result;

  sub_10050D81C(a1);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*BookReaderModuleHost.assetViewControllerDelegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___REBookReaderModuleHost_assetViewControllerDelegate;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_100507DE8;
}

void sub_100507DE8(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t Strong;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    v5 = v3[4];
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
    v6 = *(void **)(v5 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
    if (v6)
    {
      Strong = swift_unknownObjectWeakLoadStrong(v3[4] + v3[5]);
      objc_msgSend(v6, "setAssetViewControllerDelegate:", Strong);
      swift_unknownObjectRelease(Strong);
    }
  }
  free(v3);
}

uint64_t BookReaderModuleHost.contentOpenAnimator.getter()
{
  return sub_100246D24(&OBJC_IVAR___REBookReaderModuleHost_contentOpenAnimator);
}

uint64_t BookReaderModuleHost.contentOpenAnimator.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR___REBookReaderModuleHost_contentOpenAnimator);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_unknownObjectRelease(v4);
}

uint64_t (*BookReaderModuleHost.contentOpenAnimator.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___REBookReaderModuleHost_contentOpenAnimator, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t BookReaderModuleHost.readerType.getter()
{
  return 6;
}

id BookReaderModuleHost.appIntentsInfo.getter()
{
  uint64_t v0;
  id *v1;
  _BYTE v3[24];

  v1 = (id *)(v0 + OBJC_IVAR___REBookReaderModuleHost_appIntentsInfo);
  swift_beginAccess(v0 + OBJC_IVAR___REBookReaderModuleHost_appIntentsInfo, v3, 0, 0);
  return *v1;
}

void sub_1005080D0(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___REBookReaderModuleHost_appIntentsInfo);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

  type metadata accessor for BookReaderModuleHost(0);
  BCAppIntentsAssetViewController.notifyAppIntentsInfoChanged()();

}

uint64_t BookReaderModuleHost.target(forAction:withSender:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v3;
  char *v4;
  uint64_t ObjectType;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  objc_class *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  objc_super v30;
  __int128 v31;
  __int128 v32;

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = *(void **)&v4[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (!v9)
  {
    v18 = (objc_class *)ObjectType;
    sub_10004AA7C(a2, (uint64_t)&v31);
    v19 = *((_QWORD *)&v32 + 1);
    if (*((_QWORD *)&v32 + 1))
    {
      v20 = sub_10003F198(&v31, *((uint64_t *)&v32 + 1));
      v21 = *(_QWORD *)(v19 - 8);
      v22 = __chkstk_darwin(v20);
      v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v21 + 16))(v24, v22);
      v25 = _bridgeAnythingToObjectiveC<A>(_:)(v24, v19);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v19);
      _s5Books15CurrentPageViewVwxx_0(&v31);
    }
    else
    {
      v25 = 0;
    }
    v30.receiver = v4;
    v30.super_class = v18;
    v28 = objc_msgSendSuper2(&v30, "targetForAction:withSender:", a1, v25);
    swift_unknownObjectRelease(v25);
    if (v28)
    {
      _bridgeAnyObjectToAny(_:)(v28);
      swift_unknownObjectRelease(v28);
      return sub_10004C7B4((uint64_t)&v31, a3);
    }
LABEL_13:
    v31 = 0u;
    v32 = 0u;
    return sub_10004C7B4((uint64_t)&v31, a3);
  }
  sub_10004AA7C(a2, (uint64_t)&v31);
  v10 = *((_QWORD *)&v32 + 1);
  if (*((_QWORD *)&v32 + 1))
  {
    v11 = sub_10003F198(&v31, *((uint64_t *)&v32 + 1));
    v12 = *(_QWORD *)(v10 - 8);
    v13 = __chkstk_darwin(v11);
    v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v12 + 16))(v15, v13);
    v16 = v9;
    v17 = _bridgeAnythingToObjectiveC<A>(_:)(v15, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
    _s5Books15CurrentPageViewVwxx_0(&v31);
  }
  else
  {
    v26 = v9;
    v17 = 0;
  }
  v27 = objc_msgSend(v9, "targetForAction:withSender:", a1, v17);

  swift_unknownObjectRelease(v17);
  if (!v27)
  {

    goto LABEL_13;
  }
  _bridgeAnyObjectToAny(_:)(v27);
  swift_unknownObjectRelease(v27);

  return sub_10004C7B4((uint64_t)&v31, a3);
}

uint64_t sub_1005084C4()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  Swift::String v3;
  Swift::String v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  _QWORD v15[2];

  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease(0xE000000000000000);
  strcpy((char *)v15, "#moduleHost: ");
  HIWORD(v15[1]) = -4864;
  v1 = *(_QWORD *)(v0 + OBJC_IVAR___REBookReaderModuleHost_hostID);
  v2 = *(void **)(v0 + OBJC_IVAR___REBookReaderModuleHost_hostID + 8);
  swift_bridgeObjectRetain(v2);
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v2);
  v4._countAndFlagsBits = 0x4449746573736120;
  v4._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v4);
  v5 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___REBookReaderModuleHost_book), "assetLogID");
  if (v5)
  {
    v6 = v5;
    v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v10 = Optional<A>.description.getter(v7, v9);
  v12 = v11;
  swift_bridgeObjectRelease(v9);
  v13._countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease(v12);
  return v15[0];
}

id BookReaderModuleHost.snapshotDuringLiveResize.getter()
{
  id result;
  void *v1;

  result = (id)sub_10050D8AC();
  if (result)
  {
    v1 = result;
    if ((objc_msgSend(result, "respondsToSelector:", "snapshotDuringLiveResize") & 1) != 0)
      return objc_msgSend(v1, "snapshotDuringLiveResize");
    else
      return 0;
  }
  return result;
}

Swift::Void __swiftcall BookReaderModuleHost.open(_:)(Swift::Bool a1)
{
  sub_1005089D8(a1, "%{public}s Open", (SEL *)&selRef_open_, 0);
}

id BookReaderModuleHost.open(toLocation:animated:)(uint64_t a1, char a2)
{
  void *v2;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  char *v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22[3];

  v5 = v2;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v22[0] = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = sub_1005084C4();
    v12 = v11;
    v21 = sub_100040F58(v10, v11, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, v22, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s Open to Location", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {

  }
  v13 = *(void **)&v5[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (v13)
    return objc_msgSend(v13, "openToLocation:animated:", a1, a2 & 1);
  v15 = &v5[OBJC_IVAR___REBookReaderModuleHost_methodCalls];
  swift_beginAccess(&v5[OBJC_IVAR___REBookReaderModuleHost_methodCalls], v22, 33, 0);
  v16 = *(_QWORD **)v15;
  swift_unknownObjectRetain(a1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
  *(_QWORD *)v15 = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_1005B1EAC(0, v16[2] + 1, 1, v16);
    *(_QWORD *)v15 = v16;
  }
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    v16 = sub_1005B1EAC((_QWORD *)(v18 > 1), v19 + 1, 1, v16);
    *(_QWORD *)v15 = v16;
  }
  v16[2] = v19 + 1;
  v20 = &v16[2 * v19];
  v20[4] = a1;
  *((_BYTE *)v20 + 40) = a2 & 1 | 0x20;
  return (id)swift_endAccess(v22);
}

Swift::Void __swiftcall BookReaderModuleHost.jumpToBeginning(animated:)(Swift::Bool animated)
{
  sub_1005089D8(animated, "%{public}s jumpToBeginning", (SEL *)&selRef_jumpToBeginningAnimated_, 64);
}

id sub_1005089D8(char a1, const char *a2, SEL *a3, char a4)
{
  void *v4;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint8_t *v17;
  void *v18;
  char *v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  SEL *v26;
  uint64_t v27;
  uint64_t v28[3];

  v9 = v4;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v26 = a3;
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v28[0] = v13;
    *(_DWORD *)v12 = 136446210;
    v14 = sub_1005084C4();
    v16 = v15;
    v27 = sub_100040F58(v14, v15, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28, v12 + 4, v12 + 12);

    swift_bridgeObjectRelease(v16);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, a2, v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    v17 = v12;
    a3 = v26;
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {

  }
  v18 = *(void **)&v9[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (v18)
    return objc_msgSend(v18, *a3, a1 & 1);
  v20 = &v9[OBJC_IVAR___REBookReaderModuleHost_methodCalls];
  swift_beginAccess(&v9[OBJC_IVAR___REBookReaderModuleHost_methodCalls], v28, 33, 0);
  v21 = *(_QWORD **)v20;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v20);
  *(_QWORD *)v20 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_1005B1EAC(0, v21[2] + 1, 1, v21);
    *(_QWORD *)v20 = v21;
  }
  v24 = v21[2];
  v23 = v21[3];
  if (v24 >= v23 >> 1)
  {
    v21 = sub_1005B1EAC((_QWORD *)(v23 > 1), v24 + 1, 1, v21);
    *(_QWORD *)v20 = v21;
  }
  v21[2] = v24 + 1;
  v25 = &v21[2 * v24];
  v25[4] = a1 & 1;
  *((_BYTE *)v25 + 40) = a4;
  return (id)swift_endAccess(v28);
}

Swift::Void __swiftcall BookReaderModuleHost.close(_:)(Swift::Bool a1)
{
  void *v1;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = sub_1005084C4();
    v10 = v9;
    v12 = sub_100040F58(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s close", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  v11 = *(void **)&v3[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (v11)
    objc_msgSend(v11, "close:", a1);
}

Swift::Void __swiftcall BookReaderModuleHost.saveStateClosing(_:)(Swift::Bool a1)
{
  void *v1;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(18, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = v7;
    *(_DWORD *)v6 = 136446466;
    v8 = sub_1005084C4();
    v10 = v9;
    v12 = sub_100040F58(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v6 + 12) = 1024;
    LODWORD(v12) = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, (char *)&v12 + 4, v6 + 14, v6 + 18);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s saveStateClosing: %{BOOL}d", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  v11 = *(void **)&v3[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (v11)
    objc_msgSend(v11, "saveStateClosing:", a1);
}

Swift::Void __swiftcall BookReaderModuleHost.saveStateClosing(_:suspending:)(Swift::Bool _, Swift::Bool suspending)
{
  void *v2;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = v2;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc(24, -1);
    v9 = swift_slowAlloc(32, -1);
    v15 = v9;
    *(_DWORD *)v8 = 136446722;
    v10 = sub_1005084C4();
    v12 = v11;
    v14 = sub_100040F58(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v8 + 4, v8 + 12);

    swift_bridgeObjectRelease(v12);
    *(_WORD *)(v8 + 12) = 1024;
    LODWORD(v14) = _;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, (char *)&v14 + 4, v8 + 14, v8 + 18);
    *(_WORD *)(v8 + 18) = 1024;
    LODWORD(v14) = suspending;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, (char *)&v14 + 4, v8 + 20, v8 + 24);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s saveStateClosing: %{BOOL}d suspending: %{BOOL}d", (uint8_t *)v8, 0x18u);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {

  }
  v13 = (void *)sub_10050D8AC();
  if (v13)
    objc_msgSend(v13, "saveStateClosing:suspending:", _, suspending);
}

id BookReaderModuleHost.dismissShouldBegin(_:)(id a1)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (v3)
    return objc_msgSend(v3, "dismissShouldBegin:", a1);
  else
    return objc_msgSend(a1, "proposedBeginState");
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerUpdateToolbars()()
{
  sub_100509374((SEL *)&selRef_assetViewControllerUpdateToolbars, 2);
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerUpdateCloseStateTypeIfNeeded()()
{
  sub_100509374((SEL *)&selRef_assetViewControllerUpdateCloseStateTypeIfNeeded, 3);
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerUpdateToolbarsAfterOpenAnimation()()
{
  sub_100509374((SEL *)&selRef_assetViewControllerUpdateToolbarsAfterOpenAnimation, 5);
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerUpdateToolbarsForOpenAnimation()()
{
  sub_100509374((SEL *)&selRef_assetViewControllerUpdateToolbarsForOpenAnimation, 4);
}

id sub_100509374(SEL *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _BYTE v11[24];

  if (*(_QWORD *)(v2 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController))
    return objc_msgSend(*(id *)(v2 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController), *a1);
  v5 = (_QWORD *)(v2 + OBJC_IVAR___REBookReaderModuleHost_methodCalls);
  swift_beginAccess(v5, v11, 33, 0);
  v6 = (_QWORD *)*v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
  *v5 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_1005B1EAC(0, v6[2] + 1, 1, v6);
    *v5 = v6;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    v6 = sub_1005B1EAC((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    *v5 = v6;
  }
  v6[2] = v9 + 1;
  v10 = &v6[2 * v9];
  v10[4] = a2;
  *((_BYTE *)v10 + 40) = 0x80;
  return (id)swift_endAccess(v11);
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerWillAddView()()
{
  void *v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(12, -1);
    v5 = swift_slowAlloc(32, -1);
    v10 = v5;
    *(_DWORD *)v4 = 136446210;
    v6 = sub_1005084C4();
    v8 = v7;
    v9 = sub_100040F58(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10, v4 + 4, v4 + 12);

    swift_bridgeObjectRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s assetViewControllerWillAddView", v4, 0xCu);
    swift_arrayDestroy(v5, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1, -1);
    swift_slowDealloc(v4, -1, -1);
  }
  else
  {

  }
  sub_100509618();
}

void sub_100509618()
{
  char *v0;
  char *v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  char *v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  void *Strong;
  id v41;
  id v42;
  char *v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  uint64_t v73;
  void *v74;
  Class isa;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];

  v1 = &v0[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (!*(_QWORD *)&v0[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController])
  {
    v2 = v0;
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter(v3);
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(12, -1);
      v6 = swift_slowAlloc(32, -1);
      v81[0] = v6;
      *(_DWORD *)v5 = 136446210;
      v7 = sub_1005084C4();
      v9 = v8;
      v79 = sub_100040F58(v7, v8, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, &v80, v5 + 4, v5 + 12);

      swift_bridgeObjectRelease(v9);
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s initializeReaderModule", v5, 0xCu);
      swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v6, -1, -1);
      swift_slowDealloc(v5, -1, -1);
    }
    else
    {

    }
    v78 = v1;
    v10 = objc_msgSend((id)objc_opt_self(BCLightLevelController), "sharedInstance");
    if (v10)
    {
      v11 = v10;
      type metadata accessor for ThemeAppearanceManager(0);
      v12 = objc_allocWithZone((Class)type metadata accessor for LightLevelControllerWrapper());
      v13 = sub_10001AB7C(v11);
      v14 = sub_100008DB0((unint64_t *)&qword_1009E9220, (uint64_t (*)(uint64_t))type metadata accessor for LightLevelControllerWrapper, (uint64_t)&unk_10073422C);
      static ThemeAppearanceManager.setupIfNeeded(lightLevelController:)(v13, v14);

      v16 = static ThemeAppearanceManager.shared.getter(v15);
      v17 = *(void **)&v2[OBJC_IVAR___REBookReaderModuleHost_hostEnvironmentProvider];
      ThemeAppearanceManager.traitCollection.setter(objc_msgSend(v17, "traitCollection"));
      v77 = type metadata accessor for BookReaderModuleFactory();
      v18 = *(void **)&v2[OBJC_IVAR___REBookReaderModuleHost_bookProviderService];
      v19 = *(void **)&v2[OBJC_IVAR___REBookReaderModuleHost_book];
      v20 = *(void **)&v2[OBJC_IVAR___REBookReaderModuleHost_annotationProvider];
      v21 = *(void **)&v2[OBJC_IVAR___REBookReaderModuleHost_storeController];
      v22 = *(void **)&v2[OBJC_IVAR___REBookReaderModuleHost_styleManager];
      v23 = *(void **)&v2[OBJC_IVAR___REBookReaderModuleHost_engagementManager];
      v24 = (_QWORD *)swift_allocObject(&unk_10090C880, 96, 7);
      v24[2] = v77;
      v24[3] = v17;
      v24[4] = v18;
      v24[5] = v19;
      v24[6] = v20;
      v24[7] = v21;
      v24[8] = v22;
      v24[9] = v2;
      v24[10] = v23;
      v24[11] = v16;
      v25 = v2;
      swift_unknownObjectRetain(v17);
      v26 = v18;
      v27 = v19;
      v28 = v16;
      v29 = v20;
      v30 = v21;
      v31 = v22;
      v32 = v23;
      swift_retain(v16);
      v33 = (void *)sub_100649AD0((void (*)(uint64_t *__return_ptr, __n128))sub_10050E3C8, (uint64_t)v24);
      v35 = v34;
      swift_release(v24);
      v36 = *(id *)v78;
      *(_QWORD *)v78 = v33;
      *((_QWORD *)v78 + 1) = v35;
      v37 = v33;

      v38 = *(_QWORD *)&v25[OBJC_IVAR___REBookReaderModuleHost_appIntentsInfoTracker];
      v39 = *(id *)v78;
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v38 + 16);
      swift_unknownObjectWeakAssign(v38 + 16, v39);
      v41 = v39;
      sub_100065CF0(Strong);

      v42 = *(id *)v78;
      if (!*(_QWORD *)v78)
        goto LABEL_18;
      v43 = &v25[OBJC_IVAR___REBookReaderModuleHost_assetViewControllerDelegate];
      swift_beginAccess(&v25[OBJC_IVAR___REBookReaderModuleHost_assetViewControllerDelegate], v81, 0, 0);
      v44 = swift_unknownObjectWeakLoadStrong(v43);
      objc_msgSend(v42, "setAssetViewControllerDelegate:", v44);
      swift_unknownObjectRelease(v44);
      if (!*(_QWORD *)v78)
        goto LABEL_18;
      objc_msgSend(*(id *)v78, "setContentOpenAnimator:", *(_QWORD *)&v25[OBJC_IVAR___REBookReaderModuleHost_contentOpenAnimator], swift_beginAccess(&v25[OBJC_IVAR___REBookReaderModuleHost_contentOpenAnimator], &v79, 0, 0).n128_f64[0]);
      if (!*(_QWORD *)v78)
        goto LABEL_18;
      v45 = *(id *)v78;
      v46 = objc_msgSend(v45, "view");
      if (!v46)
      {
        v47 = v45;
        goto LABEL_17;
      }
      v47 = v46;
      objc_msgSend(v25, "addChildViewController:", v45);
      objc_msgSend(v45, "didMoveToParentViewController:", v25);
      objc_msgSend(v47, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v48 = objc_msgSend(v25, "view");
      if (v48)
      {
        v49 = v48;
        v50 = v28;
        objc_msgSend(v48, "addSubview:", v47);

        v51 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
        v52 = swift_allocObject(v51, 64, 7);
        *(_OWORD *)(v52 + 16) = xmmword_1007143B0;
        v53 = objc_msgSend(v47, "topAnchor");
        v54 = objc_msgSend(v25, "view");
        if (v54)
        {
          v55 = v54;
          v56 = objc_msgSend(v54, "topAnchor");

          v57 = objc_msgSend(v53, "constraintEqualToAnchor:", v56);
          *(_QWORD *)(v52 + 32) = v57;
          v58 = objc_msgSend(v47, "bottomAnchor");
          v59 = objc_msgSend(v25, "view");
          if (v59)
          {
            v60 = v59;
            v61 = objc_msgSend(v59, "bottomAnchor");

            v62 = objc_msgSend(v58, "constraintEqualToAnchor:", v61);
            *(_QWORD *)(v52 + 40) = v62;
            v63 = objc_msgSend(v47, "leadingAnchor");
            v64 = objc_msgSend(v25, "view");
            if (v64)
            {
              v65 = v64;
              v66 = objc_msgSend(v64, "leadingAnchor");

              v67 = objc_msgSend(v63, "constraintEqualToAnchor:", v66);
              *(_QWORD *)(v52 + 48) = v67;
              v68 = objc_msgSend(v47, "trailingAnchor");
              v69 = objc_msgSend(v25, "view");
              if (v69)
              {
                v70 = v69;
                v71 = objc_msgSend(v69, "trailingAnchor");

                v72 = objc_msgSend(v68, "constraintEqualToAnchor:", v71);
                *(_QWORD *)(v52 + 56) = v72;
                specialized Array._endMutation()(v73);
                v74 = (void *)objc_opt_self(NSLayoutConstraint);
                sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
                isa = Array._bridgeToObjectiveC()().super.isa;
                objc_msgSend(v74, "activateConstraints:", isa);

                v76 = *(_QWORD *)&v25[OBJC_IVAR___REBookReaderModuleHost_readerHostViewConstraints];
                *(_QWORD *)&v25[OBJC_IVAR___REBookReaderModuleHost_readerHostViewConstraints] = v52;
                swift_bridgeObjectRelease(v76);
                sub_10050CF38();

                v28 = v50;
LABEL_17:

LABEL_18:
                swift_release(v28);
                return;
              }
LABEL_25:
              __break(1u);
              return;
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerPrepareForReload()()
{
  void *v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(12, -1);
    v5 = swift_slowAlloc(32, -1);
    v12 = v5;
    *(_DWORD *)v4 = 136446210;
    v6 = sub_1005084C4();
    v8 = v7;
    v11 = sub_100040F58(v6, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v4 + 4, v4 + 12);

    swift_bridgeObjectRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s assetViewControllerPrepareForReload", v4, 0xCu);
    swift_arrayDestroy(v5, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1, -1);
    swift_slowDealloc(v4, -1, -1);
  }
  else
  {

  }
  v9 = (void *)sub_10050D8AC();
  if (v9)
  {
    v10 = v9;
    if ((objc_msgSend(v9, "respondsToSelector:", "assetViewControllerPrepareForReload") & 1) != 0)
      objc_msgSend(v10, "assetViewControllerPrepareForReload");
  }
}

Swift::Void __swiftcall BookReaderModuleHost.setAssetIsPreordered(_:)(NSNumber_optional a1)
{
  uint64_t v1;
  Class isa;
  void *v3;
  _QWORD **v4;
  _QWORD *v5;
  objc_class *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _BYTE v11[24];

  isa = a1.value.super.super.isa;
  v3 = *(void **)(v1 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (v3)
  {
    objc_msgSend(v3, "setAssetIsPreordered:", isa);
  }
  else
  {
    v4 = (_QWORD **)(v1 + OBJC_IVAR___REBookReaderModuleHost_methodCalls);
    swift_beginAccess(v4, v11, 33, 0);
    v5 = *v4;
    v6 = isa;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
    *v4 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v5 = sub_1005B1EAC(0, v5[2] + 1, 1, v5);
      *v4 = v5;
    }
    v9 = v5[2];
    v8 = v5[3];
    if (v9 >= v8 >> 1)
    {
      v5 = sub_1005B1EAC((_QWORD *)(v8 > 1), v9 + 1, 1, v5);
      *v4 = v5;
    }
    v5[2] = v9 + 1;
    v10 = &v5[2 * v9];
    v10[4] = isa;
    *((_BYTE *)v10 + 40) = 96;
    swift_endAccess(v11);
  }
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerWillOpen()()
{
  sub_10050A30C("%{public}s assetViewControllerWillOpen", (SEL *)&selRef_assetViewControllerWillOpen, 0);
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerDidOpen(animated:)(Swift::Bool animated)
{
  void *v1;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v14 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = sub_1005084C4();
    v10 = v9;
    v13 = sub_100040F58(v8, v9, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s assetViewControllerDidOpen", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  v11 = (void *)sub_10050D8AC();
  if (v11)
  {
    v12 = v11;
    if ((objc_msgSend(v11, "respondsToSelector:", "assetViewControllerDidOpenAnimated:") & 1) != 0)
      objc_msgSend(v12, "assetViewControllerDidOpenAnimated:", animated);
  }
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerWillEnterForeground()()
{
  sub_10050A30C("%{public}s assetViewControllerWillEnterForeground", (SEL *)&selRef_assetViewControllerWillEnterForeground, 1);
}

uint64_t sub_10050A30C(const char *a1, SEL *a2, uint64_t a3)
{
  void *v3;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t result;
  char *v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];

  v7 = v3;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v24 = a3;
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v26[0] = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_1005084C4();
    v14 = v13;
    v25 = sub_100040F58(v12, v13, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26, v10 + 4, v10 + 12);

    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a1, v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    v15 = v10;
    a3 = v24;
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {

  }
  v16 = *(void **)&v7[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (v16)
  {
    result = (uint64_t)objc_msgSend(*(id *)&v7[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController], "respondsToSelector:", *a2);
    if ((result & 1) != 0)
      return (uint64_t)objc_msgSend(v16, *a2);
  }
  else
  {
    v18 = &v7[OBJC_IVAR___REBookReaderModuleHost_methodCalls];
    swift_beginAccess(&v7[OBJC_IVAR___REBookReaderModuleHost_methodCalls], v26, 33, 0);
    v19 = *(_QWORD **)v18;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v18);
    *(_QWORD *)v18 = v19;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v19 = sub_1005B1EAC(0, v19[2] + 1, 1, v19);
      *(_QWORD *)v18 = v19;
    }
    v22 = v19[2];
    v21 = v19[3];
    if (v22 >= v21 >> 1)
    {
      v19 = sub_1005B1EAC((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
      *(_QWORD *)v18 = v19;
    }
    v19[2] = v22 + 1;
    v23 = &v19[2 * v22];
    v23[4] = a3;
    *((_BYTE *)v23 + 40) = 0x80;
    return swift_endAccess(v26);
  }
  return result;
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerDidEnterBackground()()
{
  void *v0;
  char *v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(12, -1);
    v5 = swift_slowAlloc(32, -1);
    v11 = v5;
    *(_DWORD *)v4 = 136446210;
    v6 = sub_1005084C4();
    v8 = v7;
    v10 = sub_100040F58(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11, v4 + 4, v4 + 12);

    swift_bridgeObjectRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s assetViewControllerDidEnterBackground", v4, 0xCu);
    swift_arrayDestroy(v5, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1, -1);
    swift_slowDealloc(v4, -1, -1);
  }
  else
  {

  }
  v9 = *(void **)&v1[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (v9)
  {
    if ((objc_msgSend(v9, "respondsToSelector:", "assetViewControllerDidEnterBackground") & 1) != 0)
      objc_msgSend(v9, "assetViewControllerDidEnterBackground");
  }
}

Swift::Void __swiftcall BookReaderModuleHost.assetViewControllerDidClose(animated:)(Swift::Bool animated)
{
  void *v1;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  Class isa;
  Class v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *Strong;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31[3];

  v3 = v1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v31[0] = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = sub_1005084C4();
    v10 = v9;
    v30 = sub_100040F58(v8, v9, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s assetViewControllerDidClose", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  v11 = &v3[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  v12 = *(void **)&v3[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (v12)
  {
    if ((objc_msgSend(*(id *)&v3[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController], "respondsToSelector:", "assetViewControllerDidCloseAnimated:") & 1) != 0)objc_msgSend(v12, "assetViewControllerDidCloseAnimated:", animated);
    v13 = *(void **)v11;
    if (*(_QWORD *)v11)
    {
      v14 = OBJC_IVAR___REBookReaderModuleHost_readerHostViewConstraints;
      v15 = *(_QWORD *)&v3[OBJC_IVAR___REBookReaderModuleHost_readerHostViewConstraints];
      if (v15)
      {
        v16 = &v3[OBJC_IVAR___REBookReaderModuleHost_fixedSizeConstraints];
        swift_beginAccess(&v3[OBJC_IVAR___REBookReaderModuleHost_fixedSizeConstraints], v31, 1, 0);
        v17 = *(_QWORD *)v16;
        if (*(_QWORD *)v16)
        {
          v18 = (void *)objc_opt_self(NSLayoutConstraint);
          sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
          v29 = v13;
          swift_bridgeObjectRetain(v15);
          swift_bridgeObjectRetain(v17);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v18, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

          v20 = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v18, "deactivateConstraints:", v20, swift_bridgeObjectRelease(v17).n128_f64[0]);

          v21 = *(_QWORD *)&v3[v14];
          *(_QWORD *)&v3[v14] = 0;
          swift_bridgeObjectRelease(v21);
          v22 = *(_QWORD *)v16;
          *(_QWORD *)v16 = 0;
          objc_msgSend(v29, "willMoveToParentViewController:", 0, swift_bridgeObjectRelease(v22).n128_f64[0]);
          v23 = objc_msgSend(v29, "viewIfLoaded");
          objc_msgSend(v23, "removeFromSuperview");

          objc_msgSend(v3, "removeChildViewController:", v29);
          v24 = *(void **)v11;
          *(_QWORD *)v11 = 0;
          *((_QWORD *)v11 + 1) = 0;

          v25 = *(_QWORD *)&v3[OBJC_IVAR___REBookReaderModuleHost_appIntentsInfoTracker];
          v26 = *(void **)v11;
          Strong = (void *)swift_unknownObjectWeakLoadStrong(v25 + 16);
          swift_unknownObjectWeakAssign(v25 + 16, v26);
          v28 = v26;
          sub_100065CF0(Strong);

        }
      }
    }
  }
}

Swift::Int __swiftcall BookReaderModuleHost.pageCountIncludingUpsell()()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (!v1)
    return 1;
  if ((objc_msgSend(v1, "respondsToSelector:", "pageCountIncludingUpsell") & 1) != 0)
    return (Swift::Int)objc_msgSend(v1, "pageCountIncludingUpsell");
  return 0;
}

void BookReaderModuleHost.didPurchase(withProductProfile:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t aBlock[5];
  uint64_t v24;

  v7 = v3;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v21 = a1;
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    aBlock[0] = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_1005084C4();
    v14 = v13;
    v22 = sub_100040F58(v12, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, aBlock, v10 + 4, v10 + 12);

    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s didPurchase", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    v15 = v10;
    a1 = v21;
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {

  }
  v16 = sub_10050D8AC();
  if (v16)
  {
    v17 = (void *)v16;
    aBlock[4] = a2;
    v24 = a3;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000147F0;
    aBlock[3] = (uint64_t)&unk_10090C748;
    v18 = _Block_copy(aBlock);
    v19 = v24;
    v20 = v17;
    swift_retain(a3);
    objc_msgSend(v20, "didPurchaseWithProductProfile:completion:", a1, v18, swift_release(v19).n128_f64[0]);

    _Block_release(v18);
  }
}

Swift::Void __swiftcall BookReaderModuleHost.setBuyButtonProgress(_:)(Swift::Float a1)
{
  void *v1;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  uint64_t v15;

  v3 = v1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(32, -1);
    v15 = v7;
    *(_DWORD *)v6 = 136446466;
    v8 = sub_1005084C4();
    v10 = v9;
    v14 = COERCE_DOUBLE(sub_100040F58(v8, v9, &v15));
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v10);
    *(_WORD *)(v6 + 12) = 2048;
    v14 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v6 + 14, v6 + 22);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s setBuyButtonProgress: %f", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  v11 = (void *)sub_10050D8AC();
  if (v11)
  {
    v12 = v11;
    if ((objc_msgSend(v11, "respondsToSelector:", "setBuyButtonProgress:") & 1) != 0)
    {
      *(Swift::Float *)&v13 = a1;
      objc_msgSend(v12, "setBuyButtonProgress:", v13);
    }
  }
}

Swift::Void __swiftcall BookReaderModuleHost.requestClose(_:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v13 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = sub_1005084C4();
    v10 = v9;
    v12 = sub_100040F58(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%{public}s requestClose", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {

  }
  v11 = (void *)sub_10050D8AC();
  if (v11)
    objc_msgSend(v11, "requestClose:", a1);
}

uint64_t BookReaderModuleHost.bookPositionProcessor.getter()
{
  return sub_100246D24(&OBJC_IVAR___REBookReaderModuleHost_bookPositionProcessor);
}

uint64_t sub_10050B224(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  id v7;

  swift_unknownObjectRetain(a3);
  v7 = a1;
  a4(a3);

  return swift_unknownObjectRelease(a3);
}

double BookReaderModuleHost.bookPositionProcessor.setter(uint64_t a1)
{
  double result;

  sub_10050DA34(a1);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void (*BookReaderModuleHost.bookPositionProcessor.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___REBookReaderModuleHost_bookPositionProcessor;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  return sub_10050B2EC;
}

void sub_10050B2EC(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;

  v3 = (_QWORD *)*a1;
  swift_endAccess(*a1);
  if ((a2 & 1) == 0)
  {
    v4 = v3[3];
    v5 = *(void **)(v4 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
    if (v5)
      objc_msgSend(v5, "setBookPositionProcessor:", *(_QWORD *)(v4 + v3[4]));
  }
  free(v3);
}

char *BookReaderModuleHost.__allocating_init(hostEnvironmentProvider:book:annotationProvider:storeController:styleManager:engagementManager:)(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  objc_class *v6;
  objc_class *v7;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t ObjectType;

  v7 = v6;
  v14 = objc_allocWithZone(v6);
  type metadata accessor for ContentSizeCategoryManager(0);
  v15 = static ContentSizeCategoryManager.shared.getter();
  v16 = objc_allocWithZone(v7);
  v17 = sub_10050B608(a1, a2, a3, a4, a5, a6, v15);
  ObjectType = swift_getObjectType();
  swift_deallocPartialClassInstance(v14, ObjectType, *(unsigned int *)((swift_isaMask & *v14) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v14) + 0x34));
  return v17;
}

char *BookReaderModuleHost.init(hostEnvironmentProvider:book:annotationProvider:storeController:styleManager:engagementManager:)(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  objc_class *ObjectType;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for ContentSizeCategoryManager(0);
  v15 = static ContentSizeCategoryManager.shared.getter();
  v16 = objc_allocWithZone(ObjectType);
  v17 = sub_10050B608(a1, a2, a3, a4, a5, a6, v15);
  v18 = swift_getObjectType();
  swift_deallocPartialClassInstance(v7, v18, *(unsigned int *)((swift_isaMask & *v7) + 0x30), *(unsigned __int16 *)((swift_isaMask & *v7) + 0x34));
  return v17;
}

char *sub_10050B608(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7)
{
  char *v7;
  uint64_t v9;
  void (**v10)(char *, _QWORD, __n128);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  char *v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  id v38;
  void (**v39)(char *, _QWORD, __n128);
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  char *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void *v72;
  void *v73;
  void *v74;
  char *v75;
  id v76;
  id v77;
  uint64_t v78;
  void (**v79)(char *, _QWORD, __n128);
  uint64_t v80;
  objc_class *ObjectType;
  uint64_t v82;
  uint64_t v83;
  objc_super v84;
  uint64_t v85[6];

  v82 = a7;
  v76 = a5;
  v77 = a6;
  v73 = a3;
  v74 = a4;
  v72 = a2;
  ObjectType = (objc_class *)swift_getObjectType();
  v9 = sub_10004CFD4((uint64_t *)&unk_1009E91E0);
  v10 = *(void (***)(char *, _QWORD, __n128))(v9 - 8);
  v78 = v9;
  v79 = v10;
  __chkstk_darwin(v9);
  v75 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(&v7[OBJC_IVAR___REBookReaderModuleHost_assetViewControllerDelegate]);
  *(_QWORD *)&v7[OBJC_IVAR___REBookReaderModuleHost_contentOpenAnimator] = 0;
  v16 = OBJC_IVAR___REBookReaderModuleHost_appIntentsInfoTracker;
  v17 = type metadata accessor for AppIntentsAssetViewControllerInfoTracker(0);
  v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  swift_unknownObjectWeakInit(v18 + 16);
  v85[0] = 0;
  v19 = v7;
  v20 = sub_10004CFD4((uint64_t *)&unk_1009E91D0);
  Published.init(initialValue:)(v85, v20);
  *(_QWORD *)(v18 + OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker_task) = 0;
  swift_unknownObjectWeakAssign(v18 + 16, 0);
  *(_QWORD *)&v7[v16] = v18;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_appIntentsInfoChangeObserver] = 0;
  v21 = OBJC_IVAR___REBookReaderModuleHost_appIntentsInfo;
  *(_QWORD *)&v19[v21] = objc_msgSend(objc_allocWithZone((Class)BCAppIntentsAssetViewControllerInfo), "init");
  v22 = &v19[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000020, 0x80000001007B2590);
  v23 = (uint64_t *)&v19[OBJC_IVAR___REBookReaderModuleHost_hostID];
  v24 = _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  v25 = UUID.uuidString.getter(v24);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  *v23 = v25;
  v23[1] = v27;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_methodCalls] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_bookPositionProcessor] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_subscribers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_readerHostViewConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_fixedSizeConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_snapshotView] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_blurView] = 0;
  v19[OBJC_IVAR___REBookReaderModuleHost_inBackground] = 0;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_hostEnvironmentProvider] = a1;
  v28 = v72;
  v29 = v73;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_book] = v72;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_annotationProvider] = v29;
  v30 = v74;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_storeController] = v74;
  v32 = v76;
  v31 = v77;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_styleManager] = v76;
  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_engagementManager] = v31;
  v33 = &v19[OBJC_IVAR___REBookReaderModuleHost_contentSizeCategoryManager];
  v34 = v82;
  *(_QWORD *)v33 = v82;
  *((_QWORD *)v33 + 1) = &protocol witness table for ContentSizeCategoryManager;
  v80 = a1;
  swift_unknownObjectRetain(a1);
  v35 = v28;
  v36 = v29;
  v37 = v30;
  v38 = v32;
  v39 = (void (**)(char *, _QWORD, __n128))v31;
  swift_retain(v34);
  AEBookInfo.bookEntity.getter(v85);
  v40 = objc_allocWithZone((Class)type metadata accessor for EpubBookParserWrapper());
  v41 = v35;
  v42 = v37;
  v43 = objc_msgSend(v40, "init");
  v44 = objc_allocWithZone((Class)type metadata accessor for BookProviderService(0));
  v77 = v42;
  v45 = sub_10050DE74(v85, v35, (uint64_t)v42, (uint64_t)v43, v44);
  v76 = v41;

  *(_QWORD *)&v19[OBJC_IVAR___REBookReaderModuleHost_bookProviderService] = v45;
  v84.receiver = v19;
  v84.super_class = ObjectType;
  v46 = (char *)objc_msgSendSuper2(&v84, "initWithNibName:bundle:", 0, 0);
  sub_10050BCD0();
  type metadata accessor for DebugOptions(0);
  static DebugOptions.registerOptions()();
  swift_beginAccess(*(_QWORD *)&v46[OBJC_IVAR___REBookReaderModuleHost_appIntentsInfoTracker]+ OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker__appIntentsInfo, v85, 33, 0);
  v47 = sub_10004CFD4(&qword_1009DC2E8);
  v48 = v75;
  Published.projectedValue.getter(v47);
  swift_endAccess(v85);
  v49 = swift_allocObject(&unk_10090C858, 24, 7);
  swift_unknownObjectWeakInit(v49 + 16);
  v50 = sub_100030B34(&qword_1009E5520, (uint64_t *)&unk_1009E91E0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v51 = v78;
  v52 = Publisher<>.sink(receiveValue:)(sub_10050E2F4, v49, v78, v50);
  v53 = swift_release(v49);
  v79[1](v48, v51, v53);
  v54 = *(_QWORD *)&v46[OBJC_IVAR___REBookReaderModuleHost_appIntentsInfoChangeObserver];
  *(_QWORD *)&v46[OBJC_IVAR___REBookReaderModuleHost_appIntentsInfoChangeObserver] = v52;
  swift_release(v54);
  v55 = v46;
  v56 = Logger.logObject.getter(v55);
  v57 = static os_log_type_t.default.getter(v56);
  if (os_log_type_enabled(v56, v57))
  {
    v58 = (uint8_t *)swift_slowAlloc(12, -1);
    v59 = swift_slowAlloc(32, -1);
    v79 = v39;
    v60 = v38;
    v61 = v36;
    v62 = v59;
    v85[0] = v59;
    *(_DWORD *)v58 = 136446210;
    v63 = sub_1005084C4();
    v65 = v64;
    v83 = sub_100040F58(v63, v64, v85);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84, v58 + 4, v58 + 12);

    swift_bridgeObjectRelease(v65);
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "%{public}s init", v58, 0xCu);
    swift_arrayDestroy(v62, 1, (char *)&type metadata for Any + 8);
    v66 = v62;
    v36 = v61;
    v38 = v60;
    v39 = v79;
    swift_slowDealloc(v66, -1, -1);
    swift_slowDealloc(v58, -1, -1);

  }
  else
  {

  }
  v67 = sub_10004CFD4(&qword_1009E8848);
  v68 = swift_allocObject(v67, 48, 7);
  *(_OWORD *)(v68 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v68 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory(0);
  *(_QWORD *)(v68 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  v69 = v55;
  v70 = UIViewController.registerForTraitChanges<A>(_:handler:)(v68, sub_10050D7A8, 0, ObjectType);
  swift_unknownObjectRelease(v70);
  swift_bridgeObjectRelease(v68);

  swift_unknownObjectRelease(v80);
  swift_release(v82);
  return v69;
}

uint64_t sub_10050BCD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  void (*v20)(_BYTE *, uint64_t, __n128);
  uint64_t v22;
  _BYTE v23[24];

  v1 = v0;
  v2 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v22 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v23[-v6 - 8];
  v8 = (void *)objc_opt_self(NSNotificationCenter);
  v9 = objc_msgSend(v8, "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIApplicationWillEnterForegroundNotification, 0);

  v10 = swift_allocObject(&unk_10090C858, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  v12 = Publisher<>.sink(receiveValue:)(sub_10050E2FC, v10, v2, v11);
  swift_release(v10);
  v13 = v1 + OBJC_IVAR___REBookReaderModuleHost_subscribers;
  swift_beginAccess(v1 + OBJC_IVAR___REBookReaderModuleHost_subscribers, v23, 33, 0);
  v14 = sub_10004CFD4(&qword_1009E86F0);
  v15 = sub_100030B34((unint64_t *)&unk_1009E91F0, &qword_1009E86F0, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v13, v14, v15);
  swift_endAccess(v23);
  v16 = objc_msgSend(v8, "defaultCenter", swift_release(v12).n128_f64[0]);
  NSNotificationCenter.publisher(for:object:)(UIApplicationDidEnterBackgroundNotification, 0);

  v17 = swift_allocObject(&unk_10090C858, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = Publisher<>.sink(receiveValue:)(sub_10050E304, v17, v2, v11);
  swift_release(v17);
  swift_beginAccess(v13, v23, 33, 0);
  AnyCancellable.store<A>(in:)(v13, v14, v15);
  swift_endAccess(v23);
  v19 = swift_release(v18);
  v20 = *(void (**)(_BYTE *, uint64_t, __n128))(v22 + 8);
  v20(v4, v2, v19);
  return ((uint64_t (*)(_BYTE *, uint64_t))v20)(v7, v2);
}

void sub_10050BF68(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  char *v5;
  id v6;
  void **v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  _BYTE v12[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (char *)Strong;
    if (v2)
      v6 = v2;
    else
      v6 = objc_msgSend(objc_allocWithZone((Class)BCAppIntentsAssetViewControllerInfo), "init");
    v7 = (void **)&v5[OBJC_IVAR___REBookReaderModuleHost_appIntentsInfo];
    swift_beginAccess(&v5[OBJC_IVAR___REBookReaderModuleHost_appIntentsInfo], &v11, 1, 0);
    v8 = *v7;
    *v7 = v6;
    v9 = v2;
    v10 = v6;

    type metadata accessor for BookReaderModuleHost(0);
    BCAppIntentsAssetViewController.notifyAppIntentsInfoChanged()();

  }
}

id BookReaderModuleHost.__deallocating_deinit()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  objc_super v13;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v12 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_1005084C4();
    v9 = v8;
    v11 = sub_100040F58(v7, v8, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v5 + 4, v5 + 12);

    swift_bridgeObjectRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s deinit", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v13.receiver = v2;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, "dealloc");
}

void sub_10050C388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  _BYTE *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  Class isa;
  Class v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _BYTE v18[24];
  _BYTE v19[24];
  _BYTE v20[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (_BYTE *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR___REBookReaderModuleHost_readerHostViewConstraints);
    if (v5)
    {
      v6 = (uint64_t *)(Strong + OBJC_IVAR___REBookReaderModuleHost_fixedSizeConstraints);
      swift_beginAccess(Strong + OBJC_IVAR___REBookReaderModuleHost_fixedSizeConstraints, v19, 0, 0);
      v7 = *v6;
      if (*v6)
      {
        v8 = (void *)objc_opt_self(NSLayoutConstraint);
        sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
        swift_bridgeObjectRetain(v5);
        swift_bridgeObjectRetain(v7);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v8, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

        v10 = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v8, "deactivateConstraints:", v10, swift_bridgeObjectRelease(v7).n128_f64[0]);

        swift_beginAccess(v6, v18, 33, 0);
        v11 = *v6;
        if (*v6)
        {
          *v6 = (uint64_t)_swiftEmptyArrayStorage;
          swift_bridgeObjectRelease(v11);
        }
        swift_endAccess(v18);
        v12 = OBJC_IVAR___REBookReaderModuleHost_snapshotView;
        v13 = *(void **)&v4[OBJC_IVAR___REBookReaderModuleHost_snapshotView];
        if (v13)
        {
          objc_msgSend(v13, "removeFromSuperview");
          v14 = *(void **)&v4[v12];
        }
        else
        {
          v14 = 0;
        }
        *(_QWORD *)&v4[v12] = 0;

        v15 = OBJC_IVAR___REBookReaderModuleHost_blurView;
        v16 = *(void **)&v4[OBJC_IVAR___REBookReaderModuleHost_blurView];
        if (v16)
        {
          objc_msgSend(v16, "removeFromSuperview");
          v17 = *(void **)&v4[v15];
        }
        else
        {
          v17 = 0;
        }
        *(_QWORD *)&v4[v15] = 0;

        v4[OBJC_IVAR___REBookReaderModuleHost_inBackground] = 0;
      }
    }

  }
}

void sub_10050C55C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  void *v6;
  Class isa;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  double v24;
  id v25;
  id v26;
  double v27;
  id v28;
  uint64_t v29;
  Class v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33[3];
  char v34[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v34, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
    return;
  v4 = (char *)Strong;
  v5 = *(_QWORD *)(Strong + OBJC_IVAR___REBookReaderModuleHost_readerHostViewConstraints);
  if (!v5)
    goto LABEL_10;
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
  swift_bridgeObjectRetain(v5);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  v8 = *(void **)&v4[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (!v8 || (v9 = objc_msgSend(v8, "viewIfLoaded")) == 0)
  {
LABEL_10:

    return;
  }
  v10 = v9;
  v11 = objc_msgSend(v4, "viewIfLoaded");
  if (!v11)
  {

    goto LABEL_10;
  }
  v12 = v11;
  v4[OBJC_IVAR___REBookReaderModuleHost_inBackground] = 1;
  v13 = objc_msgSend(v10, "snapshotViewAfterScreenUpdates:", 0);
  v14 = OBJC_IVAR___REBookReaderModuleHost_snapshotView;
  v15 = *(void **)&v4[OBJC_IVAR___REBookReaderModuleHost_snapshotView];
  *(_QWORD *)&v4[OBJC_IVAR___REBookReaderModuleHost_snapshotView] = v13;

  v16 = *(void **)&v4[v14];
  if (v16)
  {
    v17 = v16;
    sub_100411014(v17, 0.0, 0.0, 0.0, 0.0);
    v18 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 6);
    v19 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v18);

    v20 = *(void **)&v4[OBJC_IVAR___REBookReaderModuleHost_blurView];
    *(_QWORD *)&v4[OBJC_IVAR___REBookReaderModuleHost_blurView] = v19;

  }
  v21 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1007118C0;
  v23 = objc_msgSend(v10, "widthAnchor");
  objc_msgSend(v10, "frame");
  v25 = objc_msgSend(v23, "constraintEqualToConstant:", v24);

  *(_QWORD *)(v22 + 32) = v25;
  v26 = objc_msgSend(v10, "heightAnchor");
  objc_msgSend(v10, "frame");
  v28 = objc_msgSend(v26, "constraintEqualToConstant:", v27);

  *(_QWORD *)(v22 + 40) = v28;
  v33[0] = v22;
  specialized Array._endMutation()(v29);
  v30 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", v30);

  v31 = (uint64_t *)&v4[OBJC_IVAR___REBookReaderModuleHost_fixedSizeConstraints];
  swift_beginAccess(&v4[OBJC_IVAR___REBookReaderModuleHost_fixedSizeConstraints], v33, 1, 0);
  v32 = *v31;
  *v31 = v22;

  swift_bridgeObjectRelease(v32);
}

void BookReaderModuleHost.viewWillTransition(to:with:)(uint64_t a1, double a2, double a3)
{
  char *v3;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  void *v19;
  unsigned __int8 v21;
  id v22;
  void *v23;
  unsigned int v24;
  objc_super v25;

  v7 = OBJC_IVAR___REBookReaderModuleHost_inBackground;
  if ((v3[OBJC_IVAR___REBookReaderModuleHost_inBackground] & 1) == 0)
  {
    v25.receiver = v3;
    v25.super_class = (Class)swift_getObjectType();
    objc_msgSendSuper2(&v25, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  }
  v8 = *(void **)&v3[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (v8)
  {
    if ((v3[v7] & 1) != 0)
      v9 = v8;
    else
      objc_msgSend(v8, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
    v10 = objc_msgSend(v8, "viewIfLoaded");
    if (!v10)
      goto LABEL_22;
    v11 = v10;
    v12 = *(void **)&v3[OBJC_IVAR___REBookReaderModuleHost_blurView];
    if (!v12)
    {
LABEL_21:

LABEL_22:
      return;
    }
    v13 = v12;
    objc_msgSend(v11, "frame");
    v15 = v14;
    v17 = v16;
    v18 = objc_msgSend(v3, "view");
    v19 = v18;
    if (v15 == a2 && v17 == a3)
    {
      if (v18)
      {
        v24 = objc_msgSend(v13, "isDescendantOfView:", v18);

        if (v24)
          objc_msgSend(v13, "removeFromSuperview");
        goto LABEL_20;
      }
    }
    else
    {
      if (v18)
      {
        v21 = objc_msgSend(v13, "isDescendantOfView:", v18);

        if ((v21 & 1) != 0)
        {
LABEL_20:

          goto LABEL_21;
        }
        v22 = objc_msgSend(v3, "view");
        if (v22)
        {
          v23 = v22;
          sub_100411014(v13, 0.0, 0.0, 0.0, 0.0);

          goto LABEL_20;
        }
LABEL_26:
        __break(1u);
        return;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_26;
  }
}

Swift::Void __swiftcall BookReaderModuleHost.viewIsAppearing(_:)(Swift::Bool a1)
{
  void *v1;
  objc_class *ObjectType;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_100509618();
  v4.receiver = v1;
  v4.super_class = ObjectType;
  objc_msgSendSuper2(&v4, "viewIsAppearing:", a1);
  objc_msgSend(v1, "bc_analyticsVisibilityUpdateSubtree");
}

Swift::Void __swiftcall BookReaderModuleHost.viewDidAppear(_:)(Swift::Bool a1)
{
  void *v1;
  id v3;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, "viewDidAppear:", a1);
  objc_msgSend(v1, "bc_analyticsVisibilityUpdateSubtree");
  swift_getObjectType();
  v3 = objc_msgSend(v1, "traitCollection");
  dispatch thunk of ContentSizeCategoryManaging.updateContentSizeCategory(withTraitCollection:)();

}

Swift::Void __swiftcall BookReaderModuleHost.viewDidMove(to:shouldAppearOrDisappear:)(UIWindow_optional to, Swift::Bool shouldAppearOrDisappear)
{
  void *v2;
  Swift::Bool is_nil;
  Class isa;
  objc_super v5;

  is_nil = to.is_nil;
  isa = to.value.super.super.super.isa;
  v5.receiver = v2;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, "viewDidMoveToWindow:shouldAppearOrDisappear:", isa, is_nil);
}

Swift::Void __swiftcall BookReaderModuleHost.viewWillDisappear(_:)(Swift::Bool a1)
{
  sub_10050CE1C(a1, (SEL *)&selRef_viewWillDisappear_);
}

Swift::Void __swiftcall BookReaderModuleHost.viewDidDisappear(_:)(Swift::Bool a1)
{
  sub_10050CE1C(a1, (SEL *)&selRef_viewDidDisappear_);
}

id sub_10050CE1C(char a1, SEL *a2)
{
  void *v2;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v6, *a2, a1 & 1);
  return objc_msgSend(v2, "bc_analyticsVisibilityUpdateSubtree");
}

void sub_10050CE84(void *a1, uint64_t a2, uint64_t a3, const char **a4)
{
  const char *v6;
  id v7;
  objc_super v8;

  v8.receiver = a1;
  v8.super_class = (Class)swift_getObjectType();
  v6 = *a4;
  v7 = v8.receiver;
  objc_msgSendSuper2(&v8, v6, a3);
  objc_msgSend(v7, "bc_analyticsVisibilityUpdateSubtree", v8.receiver, v8.super_class);

}

uint64_t BookReaderModuleHost.supportedInterfaceOrientations.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (v1)
    return (uint64_t)objc_msgSend(v1, "supportedInterfaceOrientations");
  else
    return 30;
}

uint64_t sub_10050CF38()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t result;
  _BYTE v7[24];

  v1 = *(void **)(v0 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (v1)
  {
    v2 = (uint64_t *)(v0 + OBJC_IVAR___REBookReaderModuleHost_methodCalls);
    swift_beginAccess(v0 + OBJC_IVAR___REBookReaderModuleHost_methodCalls, v7, 1, 0);
    v3 = *v2;
    if (*(_QWORD *)(*v2 + 16))
    {
      v4 = v1;
      swift_bridgeObjectRetain(v3);
      __asm { BR              X10 }
    }
    v5 = v1;
    *v2 = (uint64_t)_swiftEmptyArrayStorage;

    return swift_bridgeObjectRelease(v3);
  }
  return result;
}

void *BookReaderModuleHost.childForStatusBarStyle.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  v2 = v1;
  return v1;
}

void BookReaderModuleHost.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.BookReaderModuleHost", 26, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t sub_10050D1C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t ObjectType;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (!*v1)
    return 0;
  v2 = v1[1];
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
}

UIView_optional __swiftcall BookReaderModuleHost.transitionContentView()()
{
  char *v0;
  void *v1;
  objc_class *v2;
  Swift::Bool v3;
  UIView_optional result;

  if (*(_QWORD *)&v0[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController])
    v1 = *(void **)&v0[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  else
    v1 = v0;
  v2 = (objc_class *)objc_msgSend(v1, "view");
  result.value.super.super.isa = v2;
  result.is_nil = v3;
  return result;
}

Swift::Bool __swiftcall BookReaderModuleHost.prefersStatusBarHiddenDuringTransition()()
{
  uint64_t v0;
  void *v1;
  id v3;
  NSString v4;
  unsigned __int8 v5;

  v1 = *(void **)(v0 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (v1)
    return objc_msgSend(v1, "prefersStatusBarHidden");
  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(v3, "BOOLForKey:", v4);

  return v5 ^ 1;
}

id BookReaderModuleHost.upSellData.getter()
{
  return sub_10050D448((SEL *)&selRef_upSellData);
}

void BookReaderModuleHost.upSellData.setter(void *a1)
{
  sub_10050D4BC(a1, (const char **)&selRef_setUpSellData_);
}

void (*BookReaderModuleHost.upSellData.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController;
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(id *)(v1 + v3);
  if (v4)
    v4 = objc_msgSend(v4, "upSellData");
  *a1 = v4;
  return sub_10050D3F4;
}

void sub_10050D3F4(_QWORD *a1, char a2)
{
  sub_10050D570(a1, a2, (SEL *)&selRef_setUpSellData_);
}

id sub_10050D40C(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3;

  v3 = *(id *)(a1 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (v3)
    v3 = objc_msgSend(v3, *a3);
  return v3;
}

id BookReaderModuleHost.appAnalyticsAdditionalData.getter()
{
  return sub_10050D448((SEL *)&selRef_appAnalyticsAdditionalData);
}

id sub_10050D448(SEL *a1)
{
  uint64_t v1;

  if (*(_QWORD *)(v1 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController))
    return objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController), *a1));
  else
    return 0;
}

id sub_10050D494(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id result;

  result = *(id *)(a1 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (result)
    return objc_msgSend(result, *a4);
  return result;
}

void BookReaderModuleHost.appAnalyticsAdditionalData.setter(void *a1)
{
  sub_10050D4BC(a1, (const char **)&selRef_setAppAnalyticsAdditionalData_);
}

void sub_10050D4BC(void *a1, const char **a2)
{
  uint64_t v2;
  void *v3;
  const char *v4;
  id v5;
  id v6;

  v3 = *(void **)(v2 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (v3)
  {
    v4 = *a2;
    v6 = a1;
    v5 = v3;
    objc_msgSend(v5, v4, v6);

    a1 = v6;
  }

}

void (*BookReaderModuleHost.appAnalyticsAdditionalData.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController;
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(id *)(v1 + v3);
  if (v4)
    v4 = objc_msgSend(v4, "appAnalyticsAdditionalData");
  *a1 = v4;
  return sub_10050D564;
}

void sub_10050D564(_QWORD *a1, char a2)
{
  sub_10050D570(a1, a2, (SEL *)&selRef_setAppAnalyticsAdditionalData_);
}

void sub_10050D570(_QWORD *a1, char a2, SEL *a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  const char *v9;
  id v10;
  void *v11;

  v5 = a1[1];
  v4 = a1[2];
  if ((a2 & 1) != 0)
  {
    v6 = *(void **)(v5 + v4);
    v7 = (void *)*a1;
    if (v6)
    {
      v11 = (void *)*a1;
      objc_msgSend(v6, *a3, *a1);
LABEL_6:
      v7 = v11;
    }
  }
  else
  {
    v7 = (void *)*a1;
    v8 = *(void **)(v5 + v4);
    if (v8)
    {
      v9 = *a3;
      v11 = (void *)*a1;
      v10 = v8;
      objc_msgSend(v10, v9, v11);

      goto LABEL_6;
    }
  }

}

Swift::Void __swiftcall BookReaderModuleHost.forceRepagination()()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (v1)
    objc_msgSend(v1, "forceRepagination");
}

Swift::Void __swiftcall BookReaderModuleHost.setFinishedForAssetID(_:)(Swift::String a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(v1 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (v2)
  {
    if ((objc_msgSend(*(id *)(v1 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController), "respondsToSelector:", "setFinishedForAssetID:") & 1) != 0)
    {
      v3 = v2;
      v4 = String._bridgeToObjectiveC()();
      objc_msgSend(v3, "setFinishedForAssetID:", v4);

    }
  }
}

void sub_10050D7A8(void *a1)
{
  id v2;

  swift_getObjectType();
  v2 = objc_msgSend(a1, "traitCollection");
  dispatch thunk of ContentSizeCategoryManaging.updateContentSizeCategory(withTraitCollection:)();

}

uint64_t sub_10050D81C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  void *v5;
  uint64_t Strong;
  _BYTE v7[24];

  v3 = v1 + OBJC_IVAR___REBookReaderModuleHost_assetViewControllerDelegate;
  swift_beginAccess(v1 + OBJC_IVAR___REBookReaderModuleHost_assetViewControllerDelegate, v7, 1, 0);
  result = swift_unknownObjectWeakAssign(v3, a1);
  v5 = *(void **)(v1 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (v5)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v3);
    objc_msgSend(v5, "setAssetViewControllerDelegate:", Strong);
    return swift_unknownObjectRelease(Strong);
  }
  return result;
}

uint64_t sub_10050D8AC()
{
  char *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)&v0[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  if (!v1)
  {
    v2 = v0;
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.error.getter(v3);
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(12, -1);
      v6 = swift_slowAlloc(32, -1);
      v12 = v6;
      *(_DWORD *)v5 = 136446210;
      v7 = sub_1005084C4();
      v9 = v8;
      v11 = sub_100040F58(v7, v8, &v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12, v5 + 4, v5 + 12);

      swift_bridgeObjectRelease(v9);
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s API called unexpectedly before Book Reader Module intialization", v5, 0xCu);
      swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v6, -1, -1);
      swift_slowDealloc(v5, -1, -1);
    }
    else
    {

    }
  }
  return v1;
}

id sub_10050DA34(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  id result;
  _BYTE v6[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR___REBookReaderModuleHost_bookPositionProcessor);
  swift_beginAccess(v1 + OBJC_IVAR___REBookReaderModuleHost_bookPositionProcessor, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRelease(v4);
  result = *(id *)(v1 + OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController);
  if (result)
    return objc_msgSend(result, "setBookPositionProcessor:", *v3);
  return result;
}

id sub_10050DAB8@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR___REBookReaderModuleHost_appIntentsInfo);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_10050DB0C()
{
  return type metadata accessor for BookReaderModuleHost(0);
}

uint64_t type metadata accessor for BookReaderModuleHost(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E91C0;
  if (!qword_1009E91C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookReaderModuleHost);
  return result;
}

uint64_t sub_10050DB50(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[24];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = &unk_10072ACB0;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = &unk_10072ACC8;
  v4[9] = &unk_10072ACE0;
  v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[11] = &unk_10072ACE0;
  v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[13] = &unk_10072ACF8;
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[14] = *(_QWORD *)(result - 8) + 64;
    v4[15] = &unk_10072ACB0;
    v4[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[17] = &unk_10072ACE0;
    v4[18] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[19] = &unk_10072ACE0;
    v4[20] = &unk_10072ACE0;
    v4[21] = &unk_10072ACE0;
    v4[22] = &unk_10072ACE0;
    v4[23] = &unk_10072AD10;
    return swift_updateClassMetadata2(a1, 256, 24, v4, a1 + 80);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BookReaderModuleHost.MethodCapture(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10050DC84(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_10050DC84(id result, unsigned __int8 a2)
{
  int v2;

  v2 = a2 >> 5;
  if (v2 == 3)
    return result;
  if (v2 == 1)
    return (id)swift_unknownObjectRetain(result);
  return result;
}

void destroy for BookReaderModuleHost.MethodCapture(uint64_t a1)
{
  sub_10050DCB4(*(void **)a1, *(_BYTE *)(a1 + 8));
}

void sub_10050DCB4(void *a1, unsigned __int8 a2)
{
  int v2;

  v2 = a2 >> 5;
  if (v2 == 3)
  {

  }
  else if (v2 == 1)
  {
    swift_unknownObjectRelease(a1);
  }
}

uint64_t assignWithCopy for BookReaderModuleHost.MethodCapture(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_10050DC84(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_10050DCB4(v5, v6);
  return a1;
}

uint64_t assignWithTake for BookReaderModuleHost.MethodCapture(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_10050DCB4(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookReaderModuleHost.MethodCapture(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7C && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 124);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0xF))) ^ 0x7F;
  if (v3 >= 0x7B)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for BookReaderModuleHost.MethodCapture(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 124;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_10050DE08(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = (char)v1;
  v3 = v1 >> 5;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_10050DE28(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x1Fu;
  return result;
}

uint64_t sub_10050DE38(uint64_t result, unsigned int a2)
{
  if (a2 < 4)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | (32 * a2);
  }
  else
  {
    *(_QWORD *)result = a2 - 4;
    *(_BYTE *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookReaderModuleHost.MethodCapture()
{
  return &type metadata for BookReaderModuleHost.MethodCapture;
}

id sub_10050DE74(_QWORD *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  objc_class *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  objc_super v18;
  objc_class *v19;
  _QWORD v20[5];
  _QWORD v21[5];

  v21[3] = type metadata accessor for EpubBookParserWrapper();
  v21[4] = sub_100008DB0(&qword_1009E9200, (uint64_t (*)(uint64_t))type metadata accessor for EpubBookParserWrapper, (uint64_t)&protocol conformance descriptor for EpubBookParserWrapper);
  v21[0] = a4;
  v20[3] = sub_100009E04(0, &qword_1009E9208, &off_1008E5398);
  v20[4] = sub_10050E30C();
  v20[0] = a3;
  v10 = (objc_class *)type metadata accessor for BookProviderService(0);
  v19 = v10;
  v11 = a5;
  v12 = sub_10004CFD4(&qword_1009CEDD8);
  v13 = String.init<A>(describing:)(&v19, v12);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v13, v14);
  sub_10002E418((uint64_t)a1, (uint64_t)&v11[OBJC_IVAR___REBookProviderService_bookEntity]);
  *(_QWORD *)&v11[OBJC_IVAR___REBookProviderService_bookInfo] = a2;
  sub_10002E418((uint64_t)v20, (uint64_t)&v11[OBJC_IVAR___REBookProviderService_storeController]);
  sub_10002E418((uint64_t)v21, (uint64_t)&v11[OBJC_IVAR___REBookProviderService_epubParser]);
  if (a2)
    v15 = objc_msgSend(a2, "managedObjectContext");
  else
    v15 = 0;
  *(_QWORD *)&v11[OBJC_IVAR___REBookProviderService_bookInfoMOC] = v15;

  v18.receiver = v11;
  v18.super_class = v10;
  v16 = objc_msgSendSuper2(&v18, "init");
  _s5Books15CurrentPageViewVwxx_0(v21);
  _s5Books15CurrentPageViewVwxx_0(v20);
  _s5Books15CurrentPageViewVwxx_0(a1);
  return v16;
}

void sub_10050E030()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___REBookReaderModuleHost_assetViewControllerDelegate]);
  *(_QWORD *)&v0[OBJC_IVAR___REBookReaderModuleHost_contentOpenAnimator] = 0;
  v6 = OBJC_IVAR___REBookReaderModuleHost_appIntentsInfoTracker;
  v7 = type metadata accessor for AppIntentsAssetViewControllerInfoTracker(0);
  v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  swift_unknownObjectWeakInit(v8 + 16);
  v18 = 0;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009E91D0);
  Published.init(initialValue:)(&v18, v9);
  *(_QWORD *)(v8 + OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker_task) = 0;
  swift_unknownObjectWeakAssign(v8 + 16, 0);
  *(_QWORD *)&v1[v6] = v8;
  *(_QWORD *)&v1[OBJC_IVAR___REBookReaderModuleHost_appIntentsInfoChangeObserver] = 0;
  v10 = OBJC_IVAR___REBookReaderModuleHost_appIntentsInfo;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone((Class)BCAppIntentsAssetViewControllerInfo), "init");
  v11 = &v1[OBJC_IVAR___REBookReaderModuleHost_readerModuleViewController];
  *v11 = 0;
  v11[1] = 0;
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000020, 0x80000001007B2590);
  v12 = (uint64_t *)&v1[OBJC_IVAR___REBookReaderModuleHost_hostID];
  v13 = _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  v14 = UUID.uuidString.getter(v13);
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *v12 = v14;
  v12[1] = v16;
  *(_QWORD *)&v1[OBJC_IVAR___REBookReaderModuleHost_methodCalls] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___REBookReaderModuleHost_bookPositionProcessor] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___REBookReaderModuleHost_subscribers] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___REBookReaderModuleHost_readerHostViewConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___REBookReaderModuleHost_fixedSizeConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR___REBookReaderModuleHost_snapshotView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___REBookReaderModuleHost_blurView] = 0;
  v1[OBJC_IVAR___REBookReaderModuleHost_inBackground] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/BookReaderModuleHost.swift", 32, 2, 451, 0);
  __break(1u);
}

uint64_t sub_10050E2AC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10050E2D0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10050E2F4(void **a1)
{
  uint64_t v1;

  sub_10050BF68(a1, v1);
}

void sub_10050E2FC(uint64_t a1)
{
  uint64_t v1;

  sub_10050C388(a1, v1);
}

void sub_10050E304(uint64_t a1)
{
  uint64_t v1;

  sub_10050C55C(a1, v1);
}

unint64_t sub_10050E30C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9210;
  if (!qword_1009E9210)
  {
    v1 = sub_100009E04(255, &qword_1009E9208, &off_1008E5398);
    result = swift_getWitnessTable(&protocol conformance descriptor for BKStoreController, v1);
    atomic_store(result, (unint64_t *)&qword_1009E9210);
  }
  return result;
}

uint64_t sub_10050E364()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));

  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

uint64_t (**sub_10050E3C8@<X0>(uint64_t (***a1)(uint64_t, uint64_t)@<X8>))(uint64_t, uint64_t)
{
  uint64_t v1;

  return sub_100489764(*(_QWORD *)(v1 + 24), *(objc_class **)(v1 + 32), *(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64), *(void **)(v1 + 72), a1, *(_QWORD *)(v1 + 80), *(char **)(v1 + 88));
}

uint64_t *sub_10050E40C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for SearchPassage(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)v4 + v8) = v10;
    v11 = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + v9) = v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)v4 + v12) = v14;
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    swift_retain(v10);
    swift_retain(v11);
  }
  swift_retain(v14);
  return v4;
}

uint64_t sub_10050E4C0(uint64_t a1, int *a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SearchPassage(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_release(*(_QWORD *)(a1 + a2[5]));
  swift_release(*(_QWORD *)(a1 + a2[6]));
  return swift_release(*(_QWORD *)(a1 + a2[7]));
}

uint64_t sub_10050E51C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = type metadata accessor for SearchPassage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v13);
  return a1;
}

uint64_t sub_10050E5A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for SearchPassage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = a3[6];
  v11 = *(_QWORD *)(a2 + v10);
  v12 = *(_QWORD *)(a1 + v10);
  *(_QWORD *)(a1 + v10) = v11;
  swift_retain(v11);
  swift_release(v12);
  v13 = a3[7];
  v14 = *(_QWORD *)(a2 + v13);
  v15 = *(_QWORD *)(a1 + v13);
  *(_QWORD *)(a1 + v13) = v14;
  swift_retain(v14);
  swift_release(v15);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10050E658(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for SearchPassage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_10050E6D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for SearchPassage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release(v8);
  v9 = a3[6];
  v10 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  swift_release(v10);
  v11 = a3[7];
  v12 = *(_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_release(v12);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10050E768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10050E774);
}

uint64_t sub_10050E774(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for SearchPassage(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10050E7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10050E7FC);
}

uint64_t sub_10050E7FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for SearchPassage(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SearchResultText(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E9288;
  if (!qword_1009E9288)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SearchResultText);
  return result;
}

uint64_t sub_10050E8B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  result = type metadata accessor for SearchPassage(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_10050E938(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100875274, 1);
}

uint64_t sub_10050E948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __n128 v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  double v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  uint64_t v82;
  unsigned int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v97 = SearchPassage.prefixText.getter();
  v98 = v2;
  v95 = sub_1001F2108();
  v4 = Text.init<A>(_:)(&v97, &type metadata for String, v95, v3);
  v6 = v5;
  v8 = v7;
  v10 = v9 & 1;
  v11 = (int *)type metadata accessor for SearchResultText(0);
  v92 = *(_QWORD *)(v1 + v11[5]);
  v12 = Text.font(_:)(v92, v4, v6, v10, v8);
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  sub_1001F5B28(v4, v6, v10);
  swift_bridgeObjectRelease(v8);
  v82 = *(_QWORD *)(v1 + v11[7]);
  v19 = Text.foregroundColor(_:)(v82, v12, v14, v18, v16);
  v84 = v20;
  v85 = v19;
  v86 = v21;
  v83 = v22 & 1;
  sub_1001F5B28(v12, v14, v18);
  v23 = swift_bridgeObjectRelease(v16);
  v97 = SearchPassage.boldText.getter(v23);
  v98 = v24;
  v26 = Text.init<A>(_:)(&v97, &type metadata for String, v95, v25);
  v28 = v27;
  v30 = v29;
  v32 = v31 & 1;
  v33 = Text.font(_:)(*(_QWORD *)(v1 + v11[6]), v26, v27, v32, v29);
  v35 = v34;
  v37 = v36;
  v39 = v38 & 1;
  sub_1001F5B28(v26, v28, v32);
  swift_bridgeObjectRelease(v30);
  v40 = Text.foregroundColor(_:)(v82, v33, v35, v39, v37);
  v42 = v41;
  v44 = v43;
  v46 = v45 & 1;
  sub_1001F5B28(v33, v35, v39);
  *(_QWORD *)&v47 = swift_bridgeObjectRelease(v37).n128_u64[0];
  v48 = static Text.+ infix(_:_:)(v85, v84, v83, v86, v40, v42, v46, v44, v47);
  v89 = v49;
  v90 = v48;
  v91 = v50;
  v88 = v51 & 1;
  sub_1001F5B28(v40, v42, v46);
  swift_bridgeObjectRelease(v44);
  sub_1001F5B28(v85, v84, v83);
  v52 = swift_bridgeObjectRelease(v86);
  v97 = SearchPassage.postfixText.getter(v52);
  v98 = v53;
  v55 = Text.init<A>(_:)(&v97, &type metadata for String, v95, v54);
  v57 = v56;
  v59 = v58;
  v61 = v60 & 1;
  v62 = Text.font(_:)(v92, v55, v56, v61, v58);
  v64 = v63;
  v66 = v65;
  v68 = v67 & 1;
  sub_1001F5B28(v55, v57, v61);
  swift_bridgeObjectRelease(v59);
  v69 = Text.foregroundColor(_:)(v82, v62, v64, v68, v66);
  v71 = v70;
  v73 = v72;
  v75 = v74 & 1;
  sub_1001F5B28(v62, v64, v68);
  *(_QWORD *)&v76 = swift_bridgeObjectRelease(v66).n128_u64[0];
  v93 = static Text.+ infix(_:_:)(v90, v89, v88, v91, v69, v71, v75, v73, v76);
  v87 = v77;
  LOBYTE(v66) = v78;
  v96 = v79;
  sub_1001F5B28(v69, v71, v75);
  swift_bridgeObjectRelease(v73);
  sub_1001F5B28(v90, v89, v88);
  swift_bridgeObjectRelease(v91);
  v80 = *(_QWORD *)(v1 + v11[8]);
  result = swift_getKeyPath(&unk_10072ADD8);
  *(_QWORD *)a1 = v93;
  *(_QWORD *)(a1 + 8) = v87;
  *(_BYTE *)(a1 + 16) = v66 & 1;
  *(_QWORD *)(a1 + 24) = v96;
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = v80;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

void sub_10050ECEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22[2];
  int64_t v23;

  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v23 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  v8 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v7 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v7 >= v23)
      goto LABEL_31;
    v12 = *(_QWORD *)(v3 + 8 * v7);
    if (!v12)
      break;
LABEL_16:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_17:
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v15 = v14[1];
    v22[0] = *v14;
    v22[1] = v15;
    swift_bridgeObjectRetain(v15);
    sub_100514BD8(v22, (uint64_t)&v20);
    if (v1)
    {
      swift_bridgeObjectRelease(v8);
      swift_release(a1);
      swift_bridgeObjectRelease(v15);
      return;
    }
    swift_bridgeObjectRelease(v15);
    if ((v21 & 1) == 0)
    {
      v16 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        v8 = sub_1005B1FE0(0, v8[2] + 1, 1, v8);
      v18 = v8[2];
      v17 = v8[3];
      if (v18 >= v17 >> 1)
        v8 = sub_1005B1FE0((_QWORD *)(v17 > 1), v18 + 1, 1, v8);
      v8[2] = v18 + 1;
      v8[v18 + 4] = v16;
    }
  }
  v13 = v7 + 1;
  if (v7 + 1 >= v23)
    goto LABEL_31;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
    goto LABEL_15;
  v13 = v7 + 2;
  if (v7 + 2 >= v23)
    goto LABEL_31;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
    goto LABEL_15;
  v13 = v7 + 3;
  if (v7 + 3 >= v23)
    goto LABEL_31;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
LABEL_15:
    v7 = v13;
    goto LABEL_16;
  }
  v19 = v7 + 4;
  if (v7 + 4 >= v23)
  {
LABEL_31:
    swift_release(a1);
    return;
  }
  v12 = *(_QWORD *)(v3 + 8 * v19);
  v7 += 4;
  if (v12)
    goto LABEL_16;
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v23)
      goto LABEL_31;
    v12 = *(_QWORD *)(v3 + 8 * v7);
    ++v19;
    if (v12)
      goto LABEL_16;
  }
LABEL_33:
  __break(1u);
}

_QWORD *sub_10050EF34(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v10;
  _BYTE v11[32];
  _QWORD *v12;

  v12 = _swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v2);
  if (!v2)
    return v12;
  for (i = a1 + 32; ; i += 32)
  {
    sub_10004CD0C(i, (uint64_t)v11);
    v4 = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
    v5 = swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v4, 6);
    if (!(_DWORD)v5)
      break;
    v6 = v10;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    v7 = v12[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
    v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
    specialized ContiguousArray._endMutation()(v8);
    if (!--v2)
      return v12;
  }
  v10 = 0;
  swift_release(v12);

  return 0;
}

char *sub_10050F04C(uint64_t a1)
{
  return sub_10050F084(a1, &qword_1009D6FE8, (uint64_t (*)(_QWORD, double))&type metadata accessor for LibraryBookInfo, (void (*)(BOOL, uint64_t, uint64_t))sub_100366B3C);
}

char *sub_10050F068(uint64_t a1)
{
  return sub_10050F084(a1, &qword_1009D6FF8, (uint64_t (*)(_QWORD, double))&type metadata accessor for LibraryAudiobookInfo, (void (*)(BOOL, uint64_t, uint64_t))sub_100366B68);
}

char *sub_10050F084(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD, double), void (*a4)(BOOL, uint64_t, uint64_t))
{
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t *v30;
  void (*v31)(BOOL, uint64_t, uint64_t);
  char *v32;
  _BYTE v33[40];
  char *v34;

  v30 = a2;
  v7 = sub_10004CFD4(a2);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a3(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v29 - v17;
  v19 = *(_QWORD *)(a1 + 16);
  v34 = (char *)_swiftEmptyArrayStorage;
  v31 = a4;
  ((void (*)(_QWORD, uint64_t, _QWORD, double))a4)(0, v19, 0, v16);
  if (!v19)
    return v34;
  v20 = a1 + 32;
  v32 = v14;
  while (1)
  {
    sub_10002E418(v20, (uint64_t)v33);
    v21 = sub_10004CFD4(&qword_1009EF310);
    v22 = swift_dynamicCast(v10, v33, v21, v11, 6);
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    if (!v22)
      break;
    v23(v10, 0, 1, v11);
    v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v24(v18, v10, v11);
    v24(v14, v18, v11);
    v25 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
    {
      v31(0, *((_QWORD *)v25 + 2) + 1, 1);
      v25 = v34;
    }
    v27 = *((_QWORD *)v25 + 2);
    v26 = *((_QWORD *)v25 + 3);
    if (v27 >= v26 >> 1)
    {
      v31(v26 > 1, v27 + 1, 1);
      v25 = v34;
    }
    *((_QWORD *)v25 + 2) = v27 + 1;
    v14 = v32;
    v24(&v25[((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v27], v32, v11);
    v34 = v25;
    v20 += 40;
    if (!--v19)
      return v25;
  }
  v23(v10, 1, 1, v11);
  swift_release(v34);
  sub_100010960((uint64_t)v10, v30);
  return 0;
}

_QWORD *sub_10050F2DC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
        v5 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v6 = v4;
        v7 = type metadata accessor for SinglePageViewController();
        v8 = swift_dynamicCastClass(v6, v7);
        if (!v8)
        {
          swift_unknownObjectRelease(v6);
          goto LABEL_15;
        }
        v9 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v10 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
        v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
        specialized ContiguousArray._endMutation()(v11);
        if (v5 == v2)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v12 = 0;
      v13 = v1 + 32;
      while (1)
      {
        v14 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        v15 = *(void **)(v13 + 8 * v12);
        v16 = type metadata accessor for SinglePageViewController();
        v17 = swift_dynamicCastClass(v15, v16);
        if (!v17)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v1 = v17;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v18 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
        v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v1);
        specialized ContiguousArray._endMutation()(v19);
        ++v12;
        if (v14 == v2)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v1 < 0)
      v21 = v1;
    else
      v21 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v1);
    specialized ContiguousArray.reserveCapacity(_:)(v22);
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v1);
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_10050F4B8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
        v5 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v6 = v4;
        v7 = type metadata accessor for SwiftUIDragItem(0);
        v8 = swift_dynamicCastClass(v6, v7);
        if (!v8)
        {
          swift_unknownObjectRelease(v6);
          goto LABEL_15;
        }
        v9 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v10 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
        v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
        specialized ContiguousArray._endMutation()(v11);
        if (v5 == v2)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v12 = 0;
      v13 = v1 + 32;
      while (1)
      {
        v14 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        v15 = *(_QWORD *)(v13 + 8 * v12);
        v16 = type metadata accessor for SwiftUIDragItem(0);
        v17 = swift_dynamicCastClass(v15, v16);
        if (!v17)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v1 = v17;
        v18 = swift_unknownObjectRetain(v15);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v19 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
        v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v1);
        specialized ContiguousArray._endMutation()(v20);
        ++v12;
        if (v14 == v2)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v1 < 0)
      v22 = v1;
    else
      v22 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v1);
    specialized ContiguousArray.reserveCapacity(_:)(v23);
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10050F698()
{
  uint64_t v0;

  sub_100010960(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_purchaseDate, &qword_1009D7440);
  sub_100010960(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_creationDate, &qword_1009D7440);
  sub_100010960(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo, &qword_1009E9668);
  sub_100010960(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo, &qword_1009E9668);
  sub_100010960(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo, &qword_1009E9668);
  sub_100010960(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_lastEngagedDate, &qword_1009D7440);
  sub_100010960(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_dateFinished, &qword_1009D7440);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10050F764()
{
  return type metadata accessor for ProtoStoreBook(0);
}

uint64_t type metadata accessor for ProtoStoreBook(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E9340;
  if (!qword_1009E9340)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ProtoStoreBook);
  return result;
}

void sub_10050F7A8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[5];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;

  v7[0] = "\t";
  v7[1] = &unk_10072AE50;
  sub_10000AB68(319, (unint64_t *)&qword_1009D5E30, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    v7[2] = v4;
    v7[3] = v4;
    v7[4] = "\t";
    sub_10000AB68(319, (unint64_t *)&unk_1009E9350, (uint64_t (*)(uint64_t))&type metadata accessor for CollectionMembershipInfo);
    if (v6 <= 0x3F)
    {
      v8 = *(_QWORD *)(v5 - 8) + 64;
      v9 = v8;
      v10 = v8;
      v11 = &unk_10072AE50;
      v12 = v4;
      v13 = v4;
      swift_updateClassMetadata2(a1, 256, 11, v7, a1 + 80);
    }
  }
}

uint64_t sub_10050F874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v0 + 16) = 0;
  *(_WORD *)(v0 + 24) = 513;
  v1 = v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_purchaseDate;
  v2 = type metadata accessor for Date(0);
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_creationDate, 1, 1, v2);
  v4 = v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_highWaterMarkReadingProgress;
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo;
  v6 = type metadata accessor for CollectionMembershipInfo(0);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo, 1, 1, v6);
  v7(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo, 1, 1, v6);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_isSample) = 2;
  v3(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_lastEngagedDate, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_dateFinished, 1, 1, v2);
  return v0;
}

uint64_t sub_10050F9C8()
{
  uint64_t result;

  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  result = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000011, 0x800000010072AE50);
  qword_100A1EBC0 = result;
  return result;
}

uint64_t sub_10050FA3C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1EBC8);
  sub_100048F64(v0, (uint64_t)qword_100A1EBC8);
  if (qword_1009CE798 != -1)
    swift_once(&qword_1009CE798, sub_10050F9C8);
  return Logger.init(_:)((id)qword_100A1EBC0);
}

uint64_t sub_10050FABC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  v3 = type metadata accessor for TaskPriority(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10050FB24, 0, 0);
}

uint64_t sub_10050FB24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  static TaskPriority.userInitiated.getter(a1);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1009DAC70 + dword_1009DAC70);
  v2 = (_QWORD *)swift_task_alloc(unk_1009DAC74);
  *(_QWORD *)(v1 + 72) = v2;
  *v2 = v1;
  v2[1] = sub_10050FB94;
  return v4(*(_QWORD *)(v1 + 64));
}

uint64_t sub_10050FB94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  *(_QWORD *)(*(_QWORD *)v2 + 80) = v1;
  swift_task_dealloc(v5);
  v7 = v4[7];
  v6 = v4[8];
  v8 = v4[6];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_10050FE54;
  }
  else
  {
    v4[11] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_10050FC20;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_10050FC20()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = (void *)v0[11];
  v2 = v0[5];
  v3 = v0[3];
  v4 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "predicateForPersonalizationAffinityAssets");
  v0[12] = v4;
  v5 = objc_msgSend(v1, "assetIDsOfStoreAssetsWithPredicate:", v4);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String);
  v0[13] = v6;

  v7 = (_QWORD *)swift_task_alloc(48);
  v0[14] = v7;
  v7[2] = v1;
  v7[3] = v6;
  v7[4] = v3;
  v7[5] = v2;
  v8 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[15] = v8;
  v9 = sub_10004CFD4(&qword_1009E9660);
  *v8 = v0;
  v8[1] = sub_10050FD40;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000015, 0x80000001007D0900, sub_10051746C, v7, v9);
}

uint64_t sub_10050FD40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_10050FDA8, 0, 0);
}

uint64_t sub_10050FDA8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(void **)(v0 + 88);
  v1 = *(void **)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = swift_task_alloc(32);
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v4;
  sub_1003A2F84((void (*)(uint64_t *))sub_100517478, v7, v5);
  v9 = v8;

  swift_bridgeObjectRelease(v5);
  swift_task_dealloc(v7);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v9);
}

uint64_t sub_10050FE54()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10050FE88(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[5];
  uint64_t v34;

  v31 = a3;
  v32 = a5;
  v28 = a2;
  v30 = a1;
  v7 = sub_10004CFD4(qword_1009E9680);
  v8 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StoreBookCollectionOptions(0, v10);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = __chkstk_darwin(v12);
  v16 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a4, v12, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v30, v7);
  v17 = *(unsigned __int8 *)(v13 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = *(unsigned __int8 *)(v8 + 80);
  v20 = (v14 + v19 + v18) & ~v19;
  v21 = (v9 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v22 = swift_allocObject(&unk_10090CA10, v21 + 8, v17 | v19 | 7);
  *(_QWORD *)(v22 + 16) = a2;
  v23 = v31;
  *(_QWORD *)(v22 + 24) = v31;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v22 + v18, v16, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v22 + v20, v11, v29);
  *(_QWORD *)(v22 + v21) = v32;
  aBlock[4] = sub_100517564;
  v34 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_10090CA28;
  v24 = _Block_copy(aBlock);
  v25 = v34;
  v26 = v28;
  swift_bridgeObjectRetain(v23);
  objc_msgSend(v26, "performBackgroundReadOnlyBlock:", v24, swift_release(v25).n128_f64[0]);
  _Block_release(v24);
}

void sub_10051007C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  _QWORD *v18;
  Class isa;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t (*v24)(char *, uint64_t);
  id v25;
  char v26;
  id v27;
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  Class v39;
  double v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t i;
  id v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  double v58;
  id v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  unint64_t v70;
  Swift::Int v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __n128 v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  unint64_t v98;
  Swift::Int v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  unint64_t v125;
  Swift::Int v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  BOOL v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  BOOL v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  id v143;
  int v144;
  NSObject *v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  void *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  void *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  char *v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  char *v190;
  __n128 v191;
  _QWORD *v192;
  void *v193;
  uint64_t v194;
  id v195;
  id v196;
  id v197;
  uint64_t aBlock[5];
  uint64_t v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;

  v181 = a5;
  v187 = type metadata accessor for DispatchWorkItemFlags(0);
  v186 = *(_QWORD *)(v187 - 8);
  __chkstk_darwin(v187);
  v185 = (char *)&v175 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = type metadata accessor for DispatchQoS(0);
  v183 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v182 = (char *)&v175 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = sub_10004CFD4(qword_1009E9680);
  v179 = *(_QWORD *)(v180 - 8);
  v10 = __chkstk_darwin(v180);
  v177 = v11;
  v178 = (char *)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StoreBookCollectionOptions(0, v10);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v175 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = objc_msgSend(a2, "storeAssetIDsOfWantToReadWithLimit:inMoc:", 1000, a1, v14);
  v196 = objc_msgSend(a2, "storeAssetIDsOfSamplesCollectionWithLimit:inMoc:", 1000, a1);
  v193 = a2;
  v194 = a1;
  v195 = objc_msgSend(a2, "storeAssetIDsOfFinishedCollectionWithLimit:inMoc:", 1000, a1);
  v17 = objc_msgSend(objc_allocWithZone((Class)NSMutableOrderedSet), "init");
  v18 = sub_100366218(a3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v20 = swift_bridgeObjectRelease(v18).n128_u64[0];
  v189 = v17;
  objc_msgSend(v17, "addObjectsFromArray:", isa, v20);

  static StoreBookCollectionOptions.wantToRead.getter(v21);
  v22 = sub_100008DB0(&qword_1009E9678, (uint64_t (*)(uint64_t))&type metadata accessor for StoreBookCollectionOptions, (uint64_t)&protocol conformance descriptor for StoreBookCollectionOptions);
  v23 = dispatch thunk of SetAlgebra.isSuperset(of:)(v16, v12, v22);
  v24 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  v25 = (id)v24(v16, v12);
  if ((v23 & 1) != 0)
    v25 = objc_msgSend(v189, "unionOrderedSet:", v197);
  static StoreBookCollectionOptions.sampled.getter(v25);
  v26 = dispatch thunk of SetAlgebra.isSuperset(of:)(v16, v12, v22);
  v27 = (id)v24(v16, v12);
  if ((v26 & 1) != 0)
    v27 = objc_msgSend(v189, "unionOrderedSet:", v196);
  static StoreBookCollectionOptions.finished.getter(v27);
  v28 = dispatch thunk of SetAlgebra.isSuperset(of:)(v16, v12, v22);
  v24(v16, v12);
  if ((v28 & 1) != 0)
    objc_msgSend(v189, "unionOrderedSet:", v195);
  v29 = objc_msgSend(v189, "array");
  v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, (char *)&type metadata for Any + 8);

  v31 = *(_QWORD *)(v30 + 16);
  if (v31)
  {
    v32 = v30 + 32;
    swift_bridgeObjectRetain(v30);
    v33 = _swiftEmptyArrayStorage;
    do
    {
      sub_10004CD0C(v32, (uint64_t)aBlock);
      sub_10004CD0C((uint64_t)aBlock, (uint64_t)&v200);
      if ((swift_dynamicCast(&v201, &v200, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
      {
        v201 = 0;
        v202 = 0;
      }
      _s5Books15CurrentPageViewVwxx_0(aBlock);
      v35 = v202;
      if (v202)
      {
        v36 = v201;
        if ((swift_isUniquelyReferenced_nonNull_native(v33) & 1) == 0)
          v33 = sub_100043ED0(0, v33[2] + 1, 1, v33);
        v38 = v33[2];
        v37 = v33[3];
        if (v38 >= v37 >> 1)
          v33 = sub_100043ED0((_QWORD *)(v37 > 1), v38 + 1, 1, v33);
        v33[2] = v38 + 1;
        v34 = &v33[2 * v38];
        v34[4] = v36;
        v34[5] = v35;
      }
      v32 += 32;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease_n(v30, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v30);
    v33 = _swiftEmptyArrayStorage;
  }
  v39 = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v40 = swift_bridgeObjectRelease(v33).n128_u64[0];
  v41 = objc_msgSend(v193, "libraryAssetsWithAssetIDs:inManagedObjectContext:", v39, v194, v40);

  v42 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  v43 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v41, v42);

  if ((unint64_t)v43 >> 62)
    goto LABEL_136;
  v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v43);
  while (2)
  {
    v45 = _swiftEmptyArrayStorage;
    if (v44)
    {
      if (v44 < 1)
      {
        __break(1u);
        swift_bridgeObjectRelease(v194);

        swift_bridgeObjectRelease(aBlock[0]);
        __break(1u);
        return;
      }
      for (i = 0; i != v44; ++i)
      {
        if ((v43 & 0xC000000000000001) != 0)
          v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v43);
        else
          v47 = *(id *)(v43 + 8 * i + 32);
        v48 = v47;
        v49 = objc_msgSend(v47, "assetID");
        if (v49)
        {
          v50 = v49;
          v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
          v53 = v52;

          if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) == 0)
            v45 = sub_100043ED0(0, v45[2] + 1, 1, v45);
          v55 = v45[2];
          v54 = v45[3];
          if (v55 >= v54 >> 1)
            v45 = sub_100043ED0((_QWORD *)(v54 > 1), v55 + 1, 1, v45);
          v45[2] = v55 + 1;
          v56 = &v45[2 * v55];
          v56[4] = v51;
          v56[5] = v53;
        }
        else
        {

        }
      }
    }
    swift_bridgeObjectRelease(v43);
    v57 = sub_10003455C((uint64_t)v45);
    *(_QWORD *)&v58 = swift_bridgeObjectRelease(v45).n128_u64[0];
    v59 = objc_msgSend(v197, "array", v58);
    v60 = (char *)&type metadata for Any + 8;
    v61 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v59, (char *)&type metadata for Any + 8);

    v62 = sub_100015520(v61);
    v63 = swift_bridgeObjectRelease(v61).n128_u64[0];
    v194 = v43;
    v188 = v44;
    if (!v62)
      goto LABEL_64;
    v64 = v62[2];
    if (!v64)
      goto LABEL_63;
    v176 = (char *)&type metadata for Any + 8;
    v192 = v62 + 4;
    v65 = v57 + 56;
    v175 = v62;
    v66 = swift_bridgeObjectRetain(v62);
    v67 = 0;
    v66.n128_u64[0] = 136315138;
    v191 = v66;
    v190 = (char *)&type metadata for Any + 8;
    do
    {
      v68 = &v192[2 * v67];
      v69 = *v68;
      v70 = v68[1];
      if (*(_QWORD *)(v57 + 16))
      {
        Hasher.init(_seed:)(aBlock, *(_QWORD *)(v57 + 40));
        swift_bridgeObjectRetain(v70);
        String.hash(into:)(aBlock, v69, v70);
        v71 = Hasher._finalize()();
        v72 = -1 << *(_BYTE *)(v57 + 32);
        v73 = v71 & ~v72;
        if (((*(_QWORD *)(v65 + ((v73 >> 3) & 0xFFFFFFFFFFFFF8)) >> v73) & 1) != 0)
        {
          v74 = *(_QWORD *)(v57 + 48);
          v75 = (_QWORD *)(v74 + 16 * v73);
          v76 = v75[1];
          v77 = *v75 == v69 && v76 == v70;
          if (v77 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v75, v76, v69, v70, 0) & 1) != 0)
          {
LABEL_39:
            swift_bridgeObjectRelease(v70);
            goto LABEL_40;
          }
          v78 = ~v72;
          while (1)
          {
            v73 = (v73 + 1) & v78;
            if (((*(_QWORD *)(v65 + ((v73 >> 3) & 0xFFFFFFFFFFFFF8)) >> v73) & 1) == 0)
              break;
            v79 = (_QWORD *)(v74 + 16 * v73);
            v80 = v79[1];
            v81 = *v79 == v69 && v80 == v70;
            if (v81 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v79, v80, v69, v70, 0) & 1) != 0)
              goto LABEL_39;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain(v70);
      }
      if (qword_1009CE7A0 != -1)
        swift_once(&qword_1009CE7A0, sub_10050FA3C);
      v82 = type metadata accessor for Logger(0);
      sub_100048F64(v82, (uint64_t)qword_100A1EBC8);
      v83 = swift_bridgeObjectRetain_n(v70, 2);
      v84 = Logger.logObject.getter(v83);
      v85 = static os_log_type_t.error.getter(v84);
      if (os_log_type_enabled(v84, v85))
      {
        v86 = swift_slowAlloc(12, -1);
        v87 = swift_slowAlloc(32, -1);
        aBlock[0] = v87;
        *(_DWORD *)v86 = v191.n128_u32[0];
        swift_bridgeObjectRetain(v70);
        *(_QWORD *)(v86 + 4) = sub_100040F58(v69, v70, aBlock);
        swift_bridgeObjectRelease_n(v70, 3);
        _os_log_impl((void *)&_mh_execute_header, v84, v85, "failed to find asset for %s in Want to Read", (uint8_t *)v86, 0xCu);
        swift_arrayDestroy(v87, 1, v190);
        swift_slowDealloc(v87, -1, -1);
        swift_slowDealloc(v86, -1, -1);
        swift_bridgeObjectRelease(v70);

      }
      else
      {

        swift_bridgeObjectRelease_n(v70, 3);
      }
LABEL_40:
      ++v67;
    }
    while (v67 != v64);
    v62 = v175;
    swift_bridgeObjectRelease(v175);
    v43 = v194;
    v60 = v176;
LABEL_63:
    v63 = swift_bridgeObjectRelease(v62).n128_u64[0];
LABEL_64:
    v88 = objc_msgSend(v196, "array", *(double *)&v63);
    v89 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v88, v60);

    v90 = sub_100015520(v89);
    v91 = swift_bridgeObjectRelease(v89).n128_u64[0];
    if (!v90)
      goto LABEL_92;
    v92 = v90[2];
    if (!v92)
      goto LABEL_91;
    v192 = v90 + 4;
    v93 = v57 + 56;
    v176 = (char *)v90;
    v94 = swift_bridgeObjectRetain(v90);
    v95 = 0;
    v94.n128_u64[0] = 136315138;
    v191 = v94;
    v190 = (char *)&type metadata for Any + 8;
    while (2)
    {
      v96 = &v192[2 * v95];
      v97 = *v96;
      v98 = v96[1];
      if (!*(_QWORD *)(v57 + 16))
      {
        swift_bridgeObjectRetain(v98);
        goto LABEL_85;
      }
      Hasher.init(_seed:)(aBlock, *(_QWORD *)(v57 + 40));
      swift_bridgeObjectRetain(v98);
      String.hash(into:)(aBlock, v97, v98);
      v99 = Hasher._finalize()();
      v100 = -1 << *(_BYTE *)(v57 + 32);
      v101 = v99 & ~v100;
      if (((*(_QWORD *)(v93 + ((v101 >> 3) & 0xFFFFFFFFFFFFF8)) >> v101) & 1) == 0)
        goto LABEL_85;
      v102 = *(_QWORD *)(v57 + 48);
      v103 = (_QWORD *)(v102 + 16 * v101);
      v104 = v103[1];
      v105 = *v103 == v97 && v104 == v98;
      if (v105 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v103, v104, v97, v98, 0) & 1) != 0)
      {
LABEL_67:
        swift_bridgeObjectRelease(v98);
      }
      else
      {
        v106 = ~v100;
        while (1)
        {
          v101 = (v101 + 1) & v106;
          if (((*(_QWORD *)(v93 + ((v101 >> 3) & 0xFFFFFFFFFFFFF8)) >> v101) & 1) == 0)
            break;
          v107 = (_QWORD *)(v102 + 16 * v101);
          v108 = v107[1];
          v109 = *v107 == v97 && v108 == v98;
          if (v109 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v107, v108, v97, v98, 0) & 1) != 0)
            goto LABEL_67;
        }
LABEL_85:
        if (qword_1009CE7A0 != -1)
          swift_once(&qword_1009CE7A0, sub_10050FA3C);
        v110 = type metadata accessor for Logger(0);
        sub_100048F64(v110, (uint64_t)qword_100A1EBC8);
        v111 = swift_bridgeObjectRetain_n(v98, 2);
        v112 = Logger.logObject.getter(v111);
        v113 = static os_log_type_t.error.getter(v112);
        if (os_log_type_enabled(v112, v113))
        {
          v114 = swift_slowAlloc(12, -1);
          v115 = swift_slowAlloc(32, -1);
          aBlock[0] = v115;
          *(_DWORD *)v114 = v191.n128_u32[0];
          swift_bridgeObjectRetain(v98);
          *(_QWORD *)(v114 + 4) = sub_100040F58(v97, v98, aBlock);
          swift_bridgeObjectRelease_n(v98, 3);
          _os_log_impl((void *)&_mh_execute_header, v112, v113, "failed to find asset for %s in Sampled", (uint8_t *)v114, 0xCu);
          swift_arrayDestroy(v115, 1, v190);
          swift_slowDealloc(v115, -1, -1);
          swift_slowDealloc(v114, -1, -1);
          swift_bridgeObjectRelease(v98);

        }
        else
        {

          swift_bridgeObjectRelease_n(v98, 3);
        }
      }
      if (++v95 != v92)
        continue;
      break;
    }
    v90 = v176;
    swift_bridgeObjectRelease(v176);
    v43 = v194;
LABEL_91:
    v91 = swift_bridgeObjectRelease(v90).n128_u64[0];
LABEL_92:
    v116 = objc_msgSend(v195, "array", *(double *)&v91);
    v117 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v116, (char *)&type metadata for Any + 8);

    v118 = sub_100015520(v117);
    swift_bridgeObjectRelease(v117);
    if (v118)
    {
      v119 = v118[2];
      if (v119)
      {
        v192 = v118 + 4;
        v120 = v57 + 56;
        v176 = (char *)v118;
        v121 = swift_bridgeObjectRetain(v118);
        v122 = 0;
        v121.n128_u64[0] = 136315138;
        v191 = v121;
        v190 = (char *)&type metadata for Any + 8;
        while (1)
        {
          v123 = &v192[2 * v122];
          v124 = *v123;
          v125 = v123[1];
          if (!*(_QWORD *)(v57 + 16))
            break;
          Hasher.init(_seed:)(aBlock, *(_QWORD *)(v57 + 40));
          swift_bridgeObjectRetain(v125);
          String.hash(into:)(aBlock, v124, v125);
          v126 = Hasher._finalize()();
          v127 = -1 << *(_BYTE *)(v57 + 32);
          v128 = v126 & ~v127;
          if (((*(_QWORD *)(v120 + ((v128 >> 3) & 0xFFFFFFFFFFFFF8)) >> v128) & 1) == 0)
            goto LABEL_113;
          v129 = *(_QWORD *)(v57 + 48);
          v130 = (_QWORD *)(v129 + 16 * v128);
          v131 = v130[1];
          v132 = *v130 == v124 && v131 == v125;
          if (!v132 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v130, v131, v124, v125, 0) & 1) == 0)
          {
            v133 = ~v127;
            do
            {
              v128 = (v128 + 1) & v133;
              if (((*(_QWORD *)(v120 + ((v128 >> 3) & 0xFFFFFFFFFFFFF8)) >> v128) & 1) == 0)
                goto LABEL_113;
              v134 = (_QWORD *)(v129 + 16 * v128);
              v135 = v134[1];
              v136 = *v134 == v124 && v135 == v125;
            }
            while (!v136 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v134, v135, v124, v125, 0) & 1) == 0);
          }
          swift_bridgeObjectRelease(v125);
LABEL_96:
          if (++v122 == v119)
          {
            swift_bridgeObjectRelease(v57);
            swift_bridgeObjectRelease_n(v176, 2);
            v43 = v194;
            goto LABEL_121;
          }
        }
        swift_bridgeObjectRetain(v125);
LABEL_113:
        if (qword_1009CE7A0 != -1)
          swift_once(&qword_1009CE7A0, sub_10050FA3C);
        v137 = type metadata accessor for Logger(0);
        sub_100048F64(v137, (uint64_t)qword_100A1EBC8);
        v138 = swift_bridgeObjectRetain_n(v125, 2);
        v139 = Logger.logObject.getter(v138);
        v140 = static os_log_type_t.error.getter(v139);
        if (os_log_type_enabled(v139, v140))
        {
          v141 = swift_slowAlloc(12, -1);
          v142 = swift_slowAlloc(32, -1);
          aBlock[0] = v142;
          *(_DWORD *)v141 = v191.n128_u32[0];
          swift_bridgeObjectRetain(v125);
          *(_QWORD *)(v141 + 4) = sub_100040F58(v124, v125, aBlock);
          swift_bridgeObjectRelease_n(v125, 3);
          _os_log_impl((void *)&_mh_execute_header, v139, v140, "failed to find asset for %s in Finished", (uint8_t *)v141, 0xCu);
          swift_arrayDestroy(v142, 1, v190);
          swift_slowDealloc(v142, -1, -1);
          swift_slowDealloc(v141, -1, -1);
          swift_bridgeObjectRelease(v125);

        }
        else
        {

          swift_bridgeObjectRelease_n(v125, 3);
        }
        goto LABEL_96;
      }
      swift_bridgeObjectRelease(v118);
    }
    swift_bridgeObjectRelease(v57);
LABEL_121:
    v143 = objc_msgSend((id)objc_opt_self(BURestrictionsProvider), "sharedInstance");
    v144 = objc_msgSend(v143, "isExplicitContentAllowed");
    swift_unknownObjectRelease(v143);
    v145 = dispatch_group_create();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    if (v188)
    {
      v146 = v43 & 0xC000000000000001;
      swift_bridgeObjectRetain(v43);
      v147 = 4;
      v148 = v188;
      while (1)
      {
        v150 = v146
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v147 - 4, v43)
             : *(id *)(v43 + 8 * v147);
        v151 = v150;
        v43 = v147 - 3;
        if (__OFADD__(v147 - 4, 1))
          break;
        v200 = v150;
        sub_10051133C((id *)&v200, v144, v197, v196, v195, v145, v193, &v201);

        v153 = v201;
        if (v201)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v152);
          v155 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
          v154 = *(_QWORD *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v155 >= v154 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v154 > 1, v155 + 1, 1);
          v149 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v155, v153);
          specialized Array._endMutation()(v149);
        }
        ++v147;
        v77 = v43 == v148;
        v43 = v194;
        if (v77)
        {
          swift_bridgeObjectRelease(v194);
          v156 = (_QWORD *)aBlock[0];
          goto LABEL_134;
        }
      }
      __break(1u);
LABEL_136:
      if (v43 < 0)
        v174 = v43;
      else
        v174 = v43 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v43);
      v44 = _CocoaArrayWrapper.endIndex.getter(v174);
      continue;
    }
    break;
  }
  v156 = _swiftEmptyArrayStorage;
LABEL_134:
  swift_bridgeObjectRelease(v43);
  v157 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v158 = (void *)static OS_dispatch_queue.main.getter(v157);
  v159 = v179;
  v160 = v178;
  v161 = v180;
  (*(void (**)(char *, uint64_t, uint64_t))(v179 + 16))(v178, v181, v180);
  v162 = *(unsigned __int8 *)(v159 + 80);
  v163 = (v162 + 16) & ~v162;
  v164 = (v177 + v163 + 7) & 0xFFFFFFFFFFFFFFF8;
  v165 = swift_allocObject(&unk_10090CA60, v164 + 8, v162 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v159 + 32))(v165 + v163, v160, v161);
  *(_QWORD *)(v165 + v164) = v156;
  aBlock[4] = (uint64_t)sub_100517660;
  v199 = v165;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000147F0;
  aBlock[3] = (uint64_t)&unk_10090CA78;
  v166 = _Block_copy(aBlock);
  v167 = v182;
  static DispatchQoS.unspecified.getter(v166);
  v200 = _swiftEmptyArrayStorage;
  v168 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v169 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v170 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  v171 = v185;
  v172 = v169;
  v173 = v187;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v200, v172, v170, v187, v168);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v167, v171, v158, v166);

  _Block_release(v166);
  (*(void (**)(char *, uint64_t))(v186 + 8))(v171, v173);
  (*(void (**)(char *, uint64_t))(v183 + 8))(v167, v184);
  swift_release(v199);
}

void sub_10051133C(id *a1@<X0>, int a2@<W1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, NSObject *a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  char *v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  unint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  unsigned __int8 v47;
  BOOL v48;
  unint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  unsigned int v52;
  double v53;
  id v54;
  void *v55;
  unsigned __int8 v56;
  uint64_t *v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  void *v72;
  void (*v73)(_QWORD, _QWORD, _QWORD, _QWORD);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned __int8 v93;
  id v94;
  void *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  dispatch_group_t v102;
  _QWORD *v103;
  void *v104;
  void *v105;
  _QWORD *v106;
  id v107;
  NSObject *v108;
  uint64_t v109;
  unsigned __int8 *v110;
  unsigned int v111;
  unsigned __int8 v112;
  unint64_t v113;
  uint64_t v114;
  unsigned __int8 *v115;
  unsigned int v116;
  char v117;
  uint64_t v118;
  id v119;
  id v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  void *v128;
  dispatch_group_t v129;
  void (*v130)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v131;
  id v132;
  id v133;
  uint64_t v134;
  uint64_t *v135;
  __int128 aBlock;
  uint64_t (*v137)(uint64_t, uint64_t, void *);
  void *v138;
  void (*v139)(void *, uint64_t);
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;

  v128 = a7;
  v129 = a6;
  v132 = a4;
  v133 = a5;
  v131 = a3;
  LODWORD(v130) = a2;
  v135 = a8;
  v125 = type metadata accessor for Date(0);
  v134 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v122 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009E9668);
  __chkstk_darwin(v11);
  v127 = (char *)&v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v126 = (char *)&v118 - v14;
  v15 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v15);
  v123 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v118 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v118 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v118 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v118 - v27;
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v118 - v31;
  v33 = *a1;
  v34 = objc_msgSend(*a1, "assetID", v30);
  if (!v34)
  {
    v46 = 0;
LABEL_44:
    v57 = v135;
LABEL_75:
    *v57 = v46;
    return;
  }
  v35 = v34;
  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
  v38 = v37;
  v39 = HIBYTE(v37) & 0xF;
  v40 = v36 & 0xFFFFFFFFFFFFLL;
  if ((v38 & 0x2000000000000000) != 0)
    v41 = v39;
  else
    v41 = v36 & 0xFFFFFFFFFFFFLL;
  if (!v41)
  {

    swift_bridgeObjectRelease(v38);
    v46 = 0;
    goto LABEL_44;
  }
  v121 = v19;
  if ((v38 & 0x1000000000000000) != 0)
  {
    v124 = v8;
    v43 = sub_1003277FC(v36, v38, 10);
    v45 = v117;
    goto LABEL_39;
  }
  if ((v38 & 0x2000000000000000) == 0)
  {
    if ((v36 & 0x1000000000000000) != 0)
      v42 = (unsigned __int8 *)((v38 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v42 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v36, v38);
    v43 = (unint64_t)sub_1003276EC(v42, v40, 10);
    v124 = v8;
    v45 = v44 & 1;
LABEL_39:
    *(_QWORD *)&v53 = swift_bridgeObjectRelease(v38).n128_u64[0];
    if ((v45 & 1) != 0
      || (v130 & 1) == 0
      && (v54 = objc_msgSend(v33, "isExplicit", v53)) != 0
      && (v55 = v54, v56 = objc_msgSend(v54, "BOOLValue"), v55, (v56 & 1) != 0))
    {

      v46 = 0;
      goto LABEL_44;
    }
    v58 = objc_msgSend(v33, "bookHighWaterMarkProgress", v53);
    if (v58)
    {
      v59 = v58;
      objc_msgSend(v58, "doubleValue");
      v61 = v60;

      v141 = v61;
      aBlock = xmmword_100719AB0;
      Comparable.clamped(_:)(&v142, &aBlock, &type metadata for Double, &protocol witness table for Double);
      v118 = v142;
    }
    else
    {
      v118 = 0;
    }
    v120 = objc_msgSend(v131, "indexOfObject:", v35, v118);
    v62 = objc_msgSend(v132, "indexOfObject:", v35);
    v119 = objc_msgSend(v133, "indexOfObject:", v35);

    v63 = type metadata accessor for ProtoStoreBook(0);
    swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
    v46 = sub_10050F874();
    *(_QWORD *)(v46 + 16) = v43;
    *(_BYTE *)(v46 + 24) = 0;
    v64 = objc_msgSend(v33, "isStoreOrSeriesItem");
    v65 = v125;
    v66 = (uint64_t)v121;
    if ((v64 & 1) == 0)
    {
      v130 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v62;
      v67 = objc_msgSend(v33, "purchaseDate");
      if (v67)
      {
        v68 = v67;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v67);

        v69 = 0;
      }
      else
      {
        v69 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v134 + 56))(v32, v69, 1, v65);
      sub_100025B3C((uint64_t)v32, (uint64_t)v28, &qword_1009D7440);
      v70 = v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_purchaseDate;
      swift_beginAccess(v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_purchaseDate, &aBlock, 33, 0);
      sub_10000B558((uint64_t)v28, v70, &qword_1009D7440);
      swift_endAccess(&aBlock);
      v62 = v130;
    }
    v71 = objc_msgSend(v33, "creationDate");
    if (v71)
    {
      v72 = v71;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v71);

      v73 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v134 + 56);
      v74 = v25;
      v75 = 0;
    }
    else
    {
      v73 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v134 + 56);
      v74 = v25;
      v75 = 1;
    }
    v130 = v73;
    v73(v74, v75, 1, v65);
    sub_100025B3C((uint64_t)v25, (uint64_t)v28, &qword_1009D7440);
    v76 = v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_creationDate;
    swift_beginAccess(v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_creationDate, &aBlock, 33, 0);
    sub_10000B558((uint64_t)v28, v76, &qword_1009D7440);
    swift_endAccess(&aBlock);
    v77 = v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_highWaterMarkReadingProgress;
    *(_QWORD *)v77 = v118;
    *(_BYTE *)(v77 + 8) = 0;
    v78 = objc_msgSend(v33, "lastEngagedDate");
    if (v78)
    {
      v79 = v78;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v78);

      v80 = 0;
    }
    else
    {
      v80 = 1;
    }
    v81 = 1;
    v130(v22, v80, 1, v65);
    sub_100025B3C((uint64_t)v22, (uint64_t)v28, &qword_1009D7440);
    v82 = v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_lastEngagedDate;
    swift_beginAccess(v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_lastEngagedDate, &aBlock, 33, 0);
    sub_10000B558((uint64_t)v28, v82, &qword_1009D7440);
    swift_endAccess(&aBlock);
    v83 = objc_msgSend(v33, "dateFinished");
    if (v83)
    {
      v84 = v83;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v83);

      v81 = 0;
    }
    v57 = v135;
    v130(v66, v81, 1, v65);
    sub_100025B3C(v66, (uint64_t)v28, &qword_1009D7440);
    v85 = v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_dateFinished;
    swift_beginAccess(v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_dateFinished, &aBlock, 33, 0);
    sub_10000B558((uint64_t)v28, v85, &qword_1009D7440);
    swift_endAccess(&aBlock);
    v86 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
    v88 = (uint64_t)v126;
    v87 = (uint64_t)v127;
    if (v120 != (id)v86)
    {
      CollectionMembershipInfo.init(index:count:)(v120, objc_msgSend(v131, "count"));
      v89 = type metadata accessor for CollectionMembershipInfo(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v88, 0, 1, v89);
      sub_100025B3C(v88, v87, &qword_1009E9668);
      v90 = v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo;
      swift_beginAccess(v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo, &aBlock, 33, 0);
      sub_10000B558(v87, v90, &qword_1009E9668);
      swift_endAccess(&aBlock);
    }
    if (v62 != (id)_s5Books17REActionMenuStateC9pageCountSivpfi_0())
    {
      CollectionMembershipInfo.init(index:count:)(v62, objc_msgSend(v132, "count"));
      v91 = type metadata accessor for CollectionMembershipInfo(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v88, 0, 1, v91);
      sub_100025B3C(v88, v87, &qword_1009E9668);
      v92 = v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo;
      swift_beginAccess(v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo, &aBlock, 33, 0);
      sub_10000B558(v87, v92, &qword_1009E9668);
      swift_endAccess(&aBlock);
    }
    if ((objc_msgSend(v33, "isSample") & 1) != 0)
    {
      v93 = 1;
LABEL_72:
      v99 = v119;
      *(_BYTE *)(v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_isSample) = v93;
      if (v99 != (id)_s5Books17REActionMenuStateC9pageCountSivpfi_0())
      {
        CollectionMembershipInfo.init(index:count:)(v99, objc_msgSend(v133, "count"));
        v100 = type metadata accessor for CollectionMembershipInfo(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v88, 0, 1, v100);
        sub_100025B3C(v88, v87, &qword_1009E9668);
        v101 = v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo;
        swift_beginAccess(v46 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo, &aBlock, 33, 0);
        sub_10000B558(v87, v101, &qword_1009E9668);
        swift_endAccess(&aBlock);
      }
      v102 = v129;
      dispatch_group_enter(v129);
      v103 = (_QWORD *)swift_allocObject(&unk_10090CAB0, 40, 7);
      v104 = v128;
      v103[2] = v46;
      v103[3] = v104;
      v103[4] = v102;
      v139 = sub_1005176D8;
      v140 = v103;
      *(_QWORD *)&aBlock = _NSConcreteStackBlock;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      v137 = sub_10034502C;
      v138 = &unk_10090CAC8;
      v105 = _Block_copy(&aBlock);
      v106 = v140;
      swift_retain(v46);
      v107 = v104;
      v108 = v102;
      objc_msgSend(v107, "assetAccountIdentifiersForAsset:completion:", v33, v105, swift_release(v106).n128_f64[0]);
      _Block_release(v105);
      goto LABEL_75;
    }
    v94 = objc_msgSend(v33, "purchaseDate");
    if (v94)
    {
      v95 = v94;
      v96 = v122;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v94);

      v97 = v134;
      v98 = (uint64_t)v123;
      (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v123, v96, v65);
      v130(v98, 0, 1, v65);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v98, 1, v65) != 1)
      {
        sub_100010960(v98, &qword_1009D7440);
        v93 = 0;
        goto LABEL_72;
      }
    }
    else
    {
      v98 = (uint64_t)v123;
      v130(v123, 1, 1, v65);
    }
    sub_100010960(v98, &qword_1009D7440);
    v93 = objc_msgSend(v33, "isNonLocalSample");
    goto LABEL_72;
  }
  *(_QWORD *)&aBlock = v36;
  *((_QWORD *)&aBlock + 1) = v38 & 0xFFFFFFFFFFFFFFLL;
  v124 = v8;
  if (v36 == 43)
  {
    if (v39)
    {
      if (v39 != 1 && (BYTE1(v36) - 48) <= 9u)
      {
        v43 = (BYTE1(v36) - 48);
        if (v39 == 2)
          goto LABEL_38;
        if ((BYTE2(v36) - 48) <= 9u)
        {
          v43 = 10 * (BYTE1(v36) - 48) + (BYTE2(v36) - 48);
          v50 = v39 - 3;
          if (v50)
          {
            v51 = (unsigned __int8 *)&aBlock + 3;
            while (1)
            {
              v52 = *v51 - 48;
              if (v52 > 9)
                goto LABEL_35;
              if (!is_mul_ok(v43, 0xAuLL))
                goto LABEL_35;
              v48 = __CFADD__(10 * v43, v52);
              v43 = 10 * v43 + v52;
              if (v48)
                goto LABEL_35;
              v45 = 0;
              ++v51;
              if (!--v50)
                goto LABEL_39;
            }
          }
          goto LABEL_38;
        }
      }
      goto LABEL_35;
    }
  }
  else
  {
    if (v36 != 45)
    {
      if (v39 && (v36 - 48) <= 9u)
      {
        v43 = (v36 - 48);
        if (v39 == 1)
          goto LABEL_38;
        if ((BYTE1(v36) - 48) <= 9u)
        {
          v43 = 10 * (v36 - 48) + (BYTE1(v36) - 48);
          v109 = v39 - 2;
          if (v109)
          {
            v110 = (unsigned __int8 *)&aBlock + 2;
            while (1)
            {
              v111 = *v110 - 48;
              if (v111 > 9)
                goto LABEL_35;
              if (!is_mul_ok(v43, 0xAuLL))
                goto LABEL_35;
              v48 = __CFADD__(10 * v43, v111);
              v43 = 10 * v43 + v111;
              if (v48)
                goto LABEL_35;
              v45 = 0;
              ++v110;
              if (!--v109)
                goto LABEL_39;
            }
          }
          goto LABEL_38;
        }
      }
LABEL_35:
      v43 = 0;
LABEL_36:
      v45 = 1;
      goto LABEL_39;
    }
    if (v39)
    {
      if (v39 != 1)
      {
        v47 = BYTE1(v36) - 48;
        if ((BYTE1(v36) - 48) <= 9u)
        {
          v43 = 0;
          v48 = v47 == 0;
          v49 = -(uint64_t)v47;
          if (!v48)
            goto LABEL_36;
          if (v39 == 2)
          {
            v45 = 0;
            v43 = v49;
            goto LABEL_39;
          }
          v112 = BYTE2(v36) - 48;
          if ((BYTE2(v36) - 48) <= 9u && is_mul_ok(v49, 0xAuLL))
          {
            v113 = 10 * v49;
            v43 = v113 - v112;
            if (v113 >= v112)
            {
              v114 = v39 - 3;
              if (v114)
              {
                v115 = (unsigned __int8 *)&aBlock + 3;
                while (1)
                {
                  v116 = *v115 - 48;
                  if (v116 > 9)
                    goto LABEL_35;
                  if (!is_mul_ok(v43, 0xAuLL))
                    goto LABEL_35;
                  v48 = 10 * v43 >= v116;
                  v43 = 10 * v43 - v116;
                  if (!v48)
                    goto LABEL_35;
                  v45 = 0;
                  ++v115;
                  if (!--v114)
                    goto LABEL_39;
                }
              }
LABEL_38:
              v45 = 0;
              goto LABEL_39;
            }
          }
        }
      }
      goto LABEL_35;
    }
    __break(1u);
  }
  __break(1u);
}

void sub_100511FCC(id a1, uint64_t a2, uint64_t a3, void *a4, NSObject *a5)
{
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;

  v8 = a1;
  if (a1)
  {
    v9 = objc_msgSend(a1, "familyID");
    v10 = v9;
    if (v9)
    {
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v13 = v12;

      v24 = v11;
      v25 = v13;
      v10 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(&v24, &type metadata for String);
      sub_1005176E4((uint64_t)&v24);
    }
    v14 = objc_msgSend(v8, "purchasedDSID");
    v15 = v14;
    if (v14)
    {
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
      v18 = v17;

      v24 = v16;
      v25 = v18;
      v15 = (void *)_bridgeAnythingToObjectiveC<A>(_:)(&v24, &type metadata for String);
      sub_1005176E4((uint64_t)&v24);
    }
    v19 = objc_msgSend(v8, "downloadedDSID");
    v8 = v19;
    if (v19)
    {
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v22 = v21;

      v24 = v20;
      v25 = v22;
      v8 = (id)_bridgeAnythingToObjectiveC<A>(_:)(&v24, &type metadata for String);
      sub_1005176E4((uint64_t)&v24);
    }
  }
  else
  {
    v15 = 0;
    v10 = 0;
  }
  v23 = objc_msgSend(a4, "isFamilyPurchaseWithFamilyID:purchaserDSID:downloaderDSID:", v10, v15, v8);
  swift_unknownObjectRelease(v10);
  swift_unknownObjectRelease(v15);
  swift_unknownObjectRelease(v8);
  *(_BYTE *)(a3 + 25) = v23;
  dispatch_group_leave(a5);
}

uint64_t sub_100512164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a2;
  swift_bridgeObjectRetain(a2);
  v2 = sub_10004CFD4(qword_1009E9680);
  return CheckedContinuation.resume(returning:)(&v4, v2);
}

uint64_t sub_1005121AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  double v67;
  void (*v68)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  void (*v82)(_BYTE *, uint64_t);
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  _BYTE *v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  const char *v114;
  _BYTE *v115;
  uint64_t v116;
  char v117;
  double v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  _BYTE *v128;
  uint64_t v129;
  char v130;
  double v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  uint64_t v139;
  _BYTE *v140;
  _BYTE *v141;
  uint64_t v142;
  _BYTE *v143;
  double v144;
  uint64_t v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  NSObject *v151;
  os_log_type_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  unint64_t v158;
  const char *v159;
  uint64_t v160;
  uint64_t v161;
  _BYTE *v162;
  _BYTE *v163;
  uint64_t v164;
  char v165;
  double v166;
  _BYTE *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _BYTE *v171;
  uint64_t v172;
  _BYTE *v173;
  _BYTE *v174;
  double v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  _BYTE *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  void (*v189)(_BYTE *, uint64_t);
  uint64_t v190;
  _BYTE *v191;
  int v192;
  void (*v193)(void);
  _BYTE *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  NSObject *v199;
  os_log_type_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  char v207;
  uint64_t v208;
  _BYTE *v209;
  _BYTE *v210;
  uint64_t v211;
  uint64_t v212;
  char v213;
  double v214;
  uint64_t v215;
  _BYTE *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  _BYTE *v225;
  _BYTE *v226;
  uint64_t v227;
  _BYTE *v228;
  double v229;
  uint64_t v230;
  _BYTE v231[4];
  int v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  void (*v236)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v237;
  uint64_t v238;
  _BYTE *v239;
  _BYTE *v240;
  _BYTE *v241;
  _BYTE *v242;
  _BYTE *v243;
  _BYTE *v244;
  _BYTE *v245;
  _BYTE *v246;
  unsigned int (*v247)(uint64_t, uint64_t, uint64_t);
  _BYTE *v248;
  _BYTE *v249;
  _BYTE *v250;
  _BYTE *v251;
  uint64_t v252;
  _BYTE *v253;
  uint64_t v254;
  _BYTE *v255;
  _BYTE *v256;
  uint64_t v257;
  _BYTE *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  _BYTE *v262;
  char v263[12];
  uint64_t v264;
  char v265[8];
  uint64_t v266;
  char v267[8];
  uint64_t v268;
  char v269[8];
  uint64_t v270;
  char v271[8];
  uint64_t v272;
  char v273[8];
  uint64_t v274;
  char v275[8];
  char v276[8];

  v257 = a2;
  v261 = a3;
  v4 = sub_10004CFD4(&qword_1009E9668);
  __chkstk_darwin(v4);
  v239 = &v231[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v241 = &v231[-v7];
  __chkstk_darwin(v8);
  v242 = &v231[-v9];
  __chkstk_darwin(v10);
  v240 = &v231[-v11];
  __chkstk_darwin(v12);
  v243 = &v231[-v13];
  __chkstk_darwin(v14);
  v246 = &v231[-v15];
  __chkstk_darwin(v16);
  v248 = &v231[-v17];
  __chkstk_darwin(v18);
  v250 = &v231[-v19];
  v21 = __chkstk_darwin(v20);
  v249 = &v231[-v22];
  v259 = type metadata accessor for StoreBookCollectionOptions(0, v21);
  v254 = *(_QWORD *)(v259 - 8);
  __chkstk_darwin(v259);
  v245 = &v231[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v24);
  v244 = &v231[-v25];
  __chkstk_darwin(v26);
  v255 = &v231[-v27];
  v28 = sub_10004CFD4(&qword_1009DF0D0);
  __chkstk_darwin(v28);
  v251 = &v231[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v30);
  v262 = &v231[-v31];
  v32 = sub_10004CFD4(&qword_1009E9670);
  __chkstk_darwin(v32);
  v34 = &v231[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = type metadata accessor for Date(0);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v256 = &v231[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v38);
  v253 = &v231[-v39];
  v40 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v40);
  __chkstk_darwin(v41);
  __chkstk_darwin(v42);
  v44 = &v231[-v43];
  __chkstk_darwin(v45);
  __chkstk_darwin(v46);
  v48 = &v231[-v47];
  __chkstk_darwin(v49);
  v51 = &v231[-v50];
  __chkstk_darwin(v52);
  v258 = &v231[-v53];
  v58 = __chkstk_darwin(v54);
  v60 = &v231[-v59];
  v61 = *a1;
  if (*(_BYTE *)(*a1 + 24) == 1)
  {
    v62 = type metadata accessor for StoreBook(0, v58);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v261, 1, 1, v62);
  }
  v237 = v57;
  v235 = v56;
  v234 = v55;
  v238 = *(_QWORD *)(v61 + 16);
  v260 = v61;
  v64 = v61 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_lastEngagedDate;
  swift_beginAccess(v61 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_lastEngagedDate, v276, 0, 0);
  sub_10000B5E4(v64, (uint64_t)v60, &qword_1009D7440);
  v247 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  v65 = v247((uint64_t)v60, 1, v35);
  v66 = v36;
  v252 = v36;
  if (v65)
  {
    sub_100010960((uint64_t)v60, &qword_1009D7440);
    v67 = -1.0;
  }
  else
  {
    v68 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v36 + 16);
    v69 = v253;
    v68(v253, v60, v35);
    v70 = sub_100010960((uint64_t)v60, &qword_1009D7440);
    v71 = Date.timeIntervalSinceReferenceDate.getter(v70);
    v66 = v252;
    v67 = v71;
    (*(void (**)(_BYTE *, uint64_t))(v252 + 8))(v69, v35);
  }
  v72 = v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_dateFinished;
  swift_beginAccess(v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_dateFinished, v275, 0, 0);
  v73 = sub_10000B5E4(v72, (uint64_t)v51, &qword_1009D7440);
  static Date.distantPast.getter(v73);
  v236 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v66 + 56);
  v236(v48, 0, 1, v35);
  v74 = (uint64_t)&v34[*(int *)(v32 + 48)];
  sub_10000B5E4((uint64_t)v51, (uint64_t)v34, &qword_1009D7440);
  sub_10000B5E4((uint64_t)v48, v74, &qword_1009D7440);
  v75 = v247;
  if (v247((uint64_t)v34, 1, v35) == 1)
  {
    sub_100010960((uint64_t)v48, &qword_1009D7440);
    sub_100010960((uint64_t)v51, &qword_1009D7440);
    if (v75(v74, 1, v35) == 1)
    {
      sub_100010960((uint64_t)v34, &qword_1009D7440);
      v76 = (uint64_t)v258;
      v77 = v259;
LABEL_13:
      v236((_BYTE *)v76, 1, 1, v35);
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  v233 = v72;
  v78 = v237;
  sub_10000B5E4((uint64_t)v34, v237, &qword_1009D7440);
  if (v75(v74, 1, v35) == 1)
  {
    sub_100010960((uint64_t)v48, &qword_1009D7440);
    sub_100010960((uint64_t)v51, &qword_1009D7440);
    (*(void (**)(uint64_t, uint64_t))(v252 + 8))(v78, v35);
    v72 = v233;
LABEL_11:
    sub_100010960((uint64_t)v34, &qword_1009E9670);
    v76 = (uint64_t)v258;
    v77 = v259;
    goto LABEL_14;
  }
  v79 = v252;
  v80 = v253;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v252 + 32))(v253, v74, v35);
  v81 = sub_100008DB0(&qword_1009D7AE0, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  v232 = dispatch thunk of static Equatable.== infix(_:_:)(v78, v80, v35, v81);
  v82 = *(void (**)(_BYTE *, uint64_t))(v79 + 8);
  v82(v80, v35);
  sub_100010960((uint64_t)v48, &qword_1009D7440);
  sub_100010960((uint64_t)v51, &qword_1009D7440);
  v82((_BYTE *)v78, v35);
  v75 = v247;
  sub_100010960((uint64_t)v34, &qword_1009D7440);
  v76 = (uint64_t)v258;
  v77 = v259;
  v72 = v233;
  if ((v232 & 1) != 0)
    goto LABEL_13;
LABEL_14:
  sub_10000B5E4(v72, v76, &qword_1009D7440);
LABEL_15:
  v83 = v256;
  sub_10000B5E4(v76, (uint64_t)v44, &qword_1009D7440);
  v84 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v75)(v44, 1, v35);
  if ((_DWORD)v84 == 1)
  {
    v85 = sub_100010960((uint64_t)v44, &qword_1009D7440);
    v86 = -1.0;
  }
  else
  {
    v86 = Date.timeIntervalSinceReferenceDate.getter(v84);
    v85 = (*(uint64_t (**)(_BYTE *, uint64_t))(v252 + 8))(v44, v35);
  }
  v87 = v260;
  v88 = v254;
  if ((*(_BYTE *)(v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_isSample) & 1) == 0)
  {
    if ((*(_BYTE *)(v260 + 25) & 1) == 0)
    {
      v89 = v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_purchaseDate;
      swift_beginAccess(v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_purchaseDate, &v274, 0, 0);
      v90 = v89;
      v91 = v235;
      sub_10000B5E4(v90, v235, &qword_1009D7440);
      if (v75(v91, 1, v35) == 1)
      {
        sub_100010960(v91, &qword_1009D7440);
        v92 = v87 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo;
        swift_beginAccess(v87 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo, &v272, 0, 0);
        v93 = v246;
        sub_10000B5E4(v92, (uint64_t)v246, &qword_1009E9668);
        v94 = type metadata accessor for CollectionMembershipInfo(0);
        v95 = *(_BYTE **)(*(_QWORD *)(v94 - 8) + 48);
        v96 = v87;
        v97 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v95)(v93, 1, v94);
        v98 = sub_100010960((uint64_t)v93, &qword_1009E9668);
        if (v97 == 1)
        {
          v99 = v96 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo;
          swift_beginAccess(v96 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo, &v270, 0, 0);
          v100 = v243;
          sub_10000B5E4(v99, (uint64_t)v243, &qword_1009E9668);
          LODWORD(v99) = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v95)(v100, 1, v94);
          v98 = sub_100010960((uint64_t)v100, &qword_1009E9668);
          if ((_DWORD)v99 == 1)
          {
            v101 = v96 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo;
            swift_beginAccess(v96 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo, v269, 0, 0);
            v102 = v240;
            sub_10000B5E4(v101, (uint64_t)v240, &qword_1009E9668);
            LODWORD(v101) = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v95)(v102, 1, v94);
            v98 = sub_100010960((uint64_t)v102, &qword_1009E9668);
            if ((_DWORD)v101 == 1)
            {
              v104 = type metadata accessor for StoreBook(0, v103);
              (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v262, 1, 1, v104);
              if (qword_1009CE7A0 != -1)
                swift_once(&qword_1009CE7A0, sub_10050FA3C);
              v105 = type metadata accessor for Logger(0);
              v106 = sub_100048F64(v105, (uint64_t)qword_100A1EBC8);
              v107 = Logger.logObject.getter(v106);
              v108 = static os_log_type_t.info.getter(v107);
              if (!os_log_type_enabled(v107, v108))
                goto LABEL_65;
              v109 = swift_slowAlloc(22, -1);
              v110 = swift_slowAlloc(32, -1);
              v268 = v110;
              *(_DWORD *)v109 = 141558275;
              v266 = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v266, v267, v109 + 4, v109 + 12);
              *(_WORD *)(v109 + 12) = 2081;
              v266 = v238;
              v111 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
              v113 = v112;
              v266 = sub_100040F58(v111, v112, &v268);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v266, v267, v109 + 14, v109 + 22);
              swift_bridgeObjectRelease(v113);
              v114 = "ignoring book with store ID %{private,mask.hash}s";
LABEL_64:
              _os_log_impl((void *)&_mh_execute_header, v107, v108, v114, (uint8_t *)v109, 0x16u);
              swift_arrayDestroy(v110, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v110, -1, -1);
              swift_slowDealloc(v109, -1, -1);
LABEL_65:

              v183 = (uint64_t)v258;
              goto LABEL_66;
            }
          }
        }
        v256 = v95;
        v184 = v255;
        static StoreBookCollectionOptions.wantToRead.getter(v98);
        v185 = sub_100008DB0(&qword_1009E9678, (uint64_t (*)(uint64_t))&type metadata accessor for StoreBookCollectionOptions, (uint64_t)&protocol conformance descriptor for StoreBookCollectionOptions);
        v186 = v257;
        v187 = v259;
        v188 = dispatch thunk of SetAlgebra.isSuperset(of:)(v184, v259, v185);
        v189 = *(void (**)(_BYTE *, uint64_t))(v88 + 8);
        v189(v184, v187);
        v253 = (_BYTE *)v92;
        if ((v188 & 1) != 0)
        {
          v190 = v92;
          v191 = v242;
          sub_10000B5E4(v190, (uint64_t)v242, &qword_1009E9668);
          v192 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v256)(v191, 1, v94);
          sub_100010960((uint64_t)v191, &qword_1009E9668);
          v193 = *(void (**)(void))(v88 + 16);
          v194 = v244;
          v195 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v193)(v244, v186, v187);
          if (v192 != 1)
          {
            v189(v194, v187);
            v210 = v245;
            v193();
            v212 = (uint64_t)v253;
LABEL_69:
            v189(v210, v187);
LABEL_70:
            v223 = v260;
            v224 = v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo;
            swift_beginAccess(v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo, &v266, 0, 0);
            v225 = v249;
            sub_10000B5E4(v224, (uint64_t)v249, &qword_1009E9668);
            v226 = v250;
            sub_10000B5E4(v212, (uint64_t)v250, &qword_1009E9668);
            v227 = v223 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo;
            swift_beginAccess(v223 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo, &v264, 0, 0);
            v228 = v248;
            sub_10000B5E4(v227, (uint64_t)v248, &qword_1009E9668);
            v126 = v251;
            StoreBook.init(storeID:finishedInfo:wantToReadInfo:samplesInfo:finishedIntervalSinceReferenceDate:)(v238, v225, v226, v228, v86);
            v127 = (uint64_t)v258;
            goto LABEL_71;
          }
          v184 = v255;
        }
        else
        {
          v193 = *(void (**)(void))(v88 + 16);
          v194 = v244;
          v195 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v193)(v244, v186, v187);
        }
        static StoreBookCollectionOptions.finished.getter(v195);
        v207 = dispatch thunk of SetAlgebra.isSuperset(of:)(v184, v187, v185);
        v189(v184, v187);
        v189(v194, v187);
        if ((v207 & 1) != 0)
        {
          v208 = v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo;
          swift_beginAccess(v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo, v263, 0, 0);
          v209 = v241;
          sub_10000B5E4(v208, (uint64_t)v241, &qword_1009E9668);
          LODWORD(v208) = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v256)(v209, 1, v94);
          v187 = v259;
          sub_100010960((uint64_t)v209, &qword_1009E9668);
          v210 = v245;
          v211 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v193)(v245, v257, v187);
          v212 = (uint64_t)v253;
          if ((_DWORD)v208 != 1)
            goto LABEL_69;
        }
        else
        {
          v210 = v245;
          v211 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v193)(v245, v257, v187);
          v212 = (uint64_t)v253;
        }
        static StoreBookCollectionOptions.sampled.getter(v211);
        v213 = dispatch thunk of SetAlgebra.isSuperset(of:)(v184, v187, v185);
        v189(v184, v187);
        v189(v210, v187);
        if ((v213 & 1) == 0
          || (v215 = v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo,
              swift_beginAccess(v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo, &v268, 0, 0), v216 = v239, sub_10000B5E4(v215, (uint64_t)v239, &qword_1009E9668), LODWORD(v215) = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v256)(v216, 1, v94), sub_100010960((uint64_t)v216, &qword_1009E9668), (_DWORD)v215 == 1))
        {
          v217 = type metadata accessor for StoreBook(0, v214);
          (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v217 - 8) + 56))(v262, 1, 1, v217);
          if (qword_1009CE7A0 != -1)
            swift_once(&qword_1009CE7A0, sub_10050FA3C);
          v218 = type metadata accessor for Logger(0);
          v219 = sub_100048F64(v218, (uint64_t)qword_100A1EBC8);
          v107 = Logger.logObject.getter(v219);
          v108 = static os_log_type_t.info.getter(v107);
          if (!os_log_type_enabled(v107, v108))
            goto LABEL_65;
          v109 = swift_slowAlloc(22, -1);
          v110 = swift_slowAlloc(32, -1);
          v266 = v110;
          *(_DWORD *)v109 = 141558275;
          v264 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v264, v265, v109 + 4, v109 + 12);
          *(_WORD *)(v109 + 12) = 2081;
          v264 = v238;
          v220 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
          v222 = v221;
          v264 = sub_100040F58(v220, v221, &v266);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v264, v265, v109 + 14, v109 + 22);
          swift_bridgeObjectRelease(v222);
          v114 = "ignoring unrequested Want To Read or Finished book with store ID %{private,mask.hash}s";
          goto LABEL_64;
        }
        goto LABEL_70;
      }
      v160 = v252;
      v161 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v252 + 32))(v83, v91, v35);
      v162 = v83;
      v163 = v255;
      static StoreBookCollectionOptions.purchased.getter(v161);
      v164 = sub_100008DB0(&qword_1009E9678, (uint64_t (*)(uint64_t))&type metadata accessor for StoreBookCollectionOptions, (uint64_t)&protocol conformance descriptor for StoreBookCollectionOptions);
      v165 = dispatch thunk of SetAlgebra.isSuperset(of:)(v163, v77, v164);
      (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v163, v77);
      if ((v165 & 1) != 0)
      {
        v167 = v253;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v160 + 16))(v253, v162, v35);
        v259 = v35;
        v168 = v260;
        v258 = *(_BYTE **)(v260
                         + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_highWaterMarkReadingProgress);
        v169 = *(unsigned __int8 *)(v260
                                  + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_highWaterMarkReadingProgress
                                  + 8);
        v170 = v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo;
        swift_beginAccess(v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo, &v272, 0, 0);
        v171 = v249;
        sub_10000B5E4(v170, (uint64_t)v249, &qword_1009E9668);
        v172 = v168 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo;
        swift_beginAccess(v168 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo, &v270, 0, 0);
        v173 = v250;
        sub_10000B5E4(v172, (uint64_t)v250, &qword_1009E9668);
        v174 = v251;
        StoreBook.init(storeID:purchaseDate:highWaterMarkReadingProgress:finishedInfo:wantToReadInfo:lastEngagedIntervalSinceReferenceDate:finishedIntervalSinceReferenceDate:)(v238, v167, v258, v169, v171, v173, v67, v86);
        (*(void (**)(_BYTE *, uint64_t))(v160 + 8))(v162, v259);
        sub_100010960(v76, &qword_1009D7440);
        v176 = type metadata accessor for StoreBook(0, v175);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v176 - 8) + 56))(v174, 0, 1, v176);
        v146 = (uint64_t)v174;
LABEL_72:
        v147 = v262;
        goto LABEL_73;
      }
      v196 = type metadata accessor for StoreBook(0, v166);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v196 - 8) + 56))(v262, 1, 1, v196);
      if (qword_1009CE7A0 != -1)
        swift_once(&qword_1009CE7A0, sub_10050FA3C);
      v197 = type metadata accessor for Logger(0);
      v198 = sub_100048F64(v197, (uint64_t)qword_100A1EBC8);
      v199 = Logger.logObject.getter(v198);
      v200 = static os_log_type_t.info.getter(v199);
      if (os_log_type_enabled(v199, v200))
      {
        v201 = swift_slowAlloc(22, -1);
        v202 = v35;
        v203 = swift_slowAlloc(32, -1);
        v272 = v203;
        *(_DWORD *)v201 = 141558275;
        v270 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v270, v271, v201 + 4, v201 + 12);
        *(_WORD *)(v201 + 12) = 2081;
        v155 = v76;
        v270 = v238;
        v204 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
        v206 = v205;
        v270 = sub_100040F58(v204, v205, &v272);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v270, v271, v201 + 14, v201 + 22);
        swift_bridgeObjectRelease(v206);
        _os_log_impl((void *)&_mh_execute_header, v199, v200, "ignoring unrequested purchased book with store ID %{private,mask.hash}s", (uint8_t *)v201, 0x16u);
        swift_arrayDestroy(v203, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v203, -1, -1);
        swift_slowDealloc(v201, -1, -1);

        (*(void (**)(_BYTE *, uint64_t))(v252 + 8))(v256, v202);
        goto LABEL_43;
      }

      (*(void (**)(_BYTE *, uint64_t))(v252 + 8))(v256, v35);
LABEL_45:
      v183 = v76;
      goto LABEL_66;
    }
    v128 = v255;
    static StoreBookCollectionOptions.downloadedViaFamilySharing.getter(v85);
    v129 = sub_100008DB0(&qword_1009E9678, (uint64_t (*)(uint64_t))&type metadata accessor for StoreBookCollectionOptions, (uint64_t)&protocol conformance descriptor for StoreBookCollectionOptions);
    v130 = dispatch thunk of SetAlgebra.isSuperset(of:)(v128, v77, v129);
    (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v128, v77);
    if ((v130 & 1) != 0)
    {
      v132 = v260;
      v133 = v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_creationDate;
      swift_beginAccess(v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_creationDate, &v274, 0, 0);
      v134 = v234;
      sub_10000B5E4(v133, v234, &qword_1009D7440);
      v135 = *(_QWORD *)(v132
                       + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_highWaterMarkReadingProgress);
      v136 = *(unsigned __int8 *)(v132
                                + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_highWaterMarkReadingProgress
                                + 8);
      v137 = v132 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo;
      swift_beginAccess(v132 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo, &v272, 0, 0);
      v138 = v249;
      sub_10000B5E4(v137, (uint64_t)v249, &qword_1009E9668);
      v139 = v132 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo;
      swift_beginAccess(v132 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo, &v270, 0, 0);
      v140 = v250;
      sub_10000B5E4(v139, (uint64_t)v250, &qword_1009E9668);
      v141 = v251;
      v142 = v135;
      v143 = v262;
      StoreBook.init(storeID:creationDate:highWaterMarkReadingProgress:finishedInfo:wantToReadInfo:lastEngagedIntervalSinceReferenceDate:finishedIntervalSinceReferenceDate:)(v238, v134, v142, v136, v138, v140, v67, v86);
      sub_100010960(v76, &qword_1009D7440);
      v145 = type metadata accessor for StoreBook(0, v144);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v141, 0, 1, v145);
      v146 = (uint64_t)v141;
      v147 = v143;
LABEL_73:
      sub_100025B3C(v146, (uint64_t)v147, &qword_1009DF0D0);
      return sub_100025B3C((uint64_t)v262, v261, &qword_1009DF0D0);
    }
    v177 = type metadata accessor for StoreBook(0, v131);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 56))(v262, 1, 1, v177);
    if (qword_1009CE7A0 != -1)
      swift_once(&qword_1009CE7A0, sub_10050FA3C);
    v178 = type metadata accessor for Logger(0);
    v179 = sub_100048F64(v178, (uint64_t)qword_100A1EBC8);
    v151 = Logger.logObject.getter(v179);
    v152 = static os_log_type_t.info.getter(v151);
    if (os_log_type_enabled(v151, v152))
    {
      v153 = swift_slowAlloc(22, -1);
      v154 = swift_slowAlloc(32, -1);
      v274 = v154;
      *(_DWORD *)v153 = 141558275;
      v272 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v272, v273, v153 + 4, v153 + 12);
      *(_WORD *)(v153 + 12) = 2081;
      v155 = v76;
      v272 = v238;
      v180 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v182 = v181;
      v272 = sub_100040F58(v180, v181, &v274);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v272, v273, v153 + 14, v153 + 22);
      swift_bridgeObjectRelease(v182);
      v159 = "ignoring unrequested family purchase book with store ID %{private,mask.hash}s";
      goto LABEL_42;
    }
LABEL_44:

    goto LABEL_45;
  }
  v115 = v255;
  static StoreBookCollectionOptions.sampled.getter(v85);
  v116 = sub_100008DB0(&qword_1009E9678, (uint64_t (*)(uint64_t))&type metadata accessor for StoreBookCollectionOptions, (uint64_t)&protocol conformance descriptor for StoreBookCollectionOptions);
  v117 = dispatch thunk of SetAlgebra.isSuperset(of:)(v115, v77, v116);
  (*(void (**)(_BYTE *, uint64_t))(v88 + 8))(v115, v77);
  if ((v117 & 1) != 0)
  {
    v119 = v260;
    v120 = v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo;
    swift_beginAccess(v260 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_finishedInfo, &v274, 0, 0);
    v121 = v249;
    sub_10000B5E4(v120, (uint64_t)v249, &qword_1009E9668);
    v122 = v119 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo;
    swift_beginAccess(v119 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_wantToReadInfo, &v272, 0, 0);
    v123 = v250;
    sub_10000B5E4(v122, (uint64_t)v250, &qword_1009E9668);
    v124 = v119 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo;
    swift_beginAccess(v119 + OBJC_IVAR____TtC5BooksP33_02696A047B96C3DDDA2E2D16AEDFA8F114ProtoStoreBook_samplesInfo, &v270, 0, 0);
    v125 = v248;
    sub_10000B5E4(v124, (uint64_t)v248, &qword_1009E9668);
    v126 = v251;
    StoreBook.init(storeID:finishedInfo:wantToReadInfo:samplesInfo:lastEngagedIntervalSinceReferenceDate:)(v238, v121, v123, v125, v67);
    v127 = v76;
LABEL_71:
    sub_100010960(v127, &qword_1009D7440);
    v230 = type metadata accessor for StoreBook(0, v229);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v230 - 8) + 56))(v126, 0, 1, v230);
    v146 = (uint64_t)v126;
    goto LABEL_72;
  }
  v148 = type metadata accessor for StoreBook(0, v118);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v262, 1, 1, v148);
  if (qword_1009CE7A0 != -1)
    swift_once(&qword_1009CE7A0, sub_10050FA3C);
  v149 = type metadata accessor for Logger(0);
  v150 = sub_100048F64(v149, (uint64_t)qword_100A1EBC8);
  v151 = Logger.logObject.getter(v150);
  v152 = static os_log_type_t.info.getter(v151);
  if (!os_log_type_enabled(v151, v152))
    goto LABEL_44;
  v153 = swift_slowAlloc(22, -1);
  v154 = swift_slowAlloc(32, -1);
  v274 = v154;
  *(_DWORD *)v153 = 141558275;
  v272 = 1752392040;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v272, v273, v153 + 4, v153 + 12);
  *(_WORD *)(v153 + 12) = 2081;
  v155 = v76;
  v272 = v238;
  v156 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
  v158 = v157;
  v272 = sub_100040F58(v156, v157, &v274);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v272, v273, v153 + 14, v153 + 22);
  swift_bridgeObjectRelease(v158);
  v159 = "ignoring unrequested sample book with store ID %{private,mask.hash}s";
LABEL_42:
  _os_log_impl((void *)&_mh_execute_header, v151, v152, v159, (uint8_t *)v153, 0x16u);
  swift_arrayDestroy(v154, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v154, -1, -1);
  swift_slowDealloc(v153, -1, -1);

LABEL_43:
  v183 = v155;
LABEL_66:
  sub_100010960(v183, &qword_1009D7440);
  return sub_100025B3C((uint64_t)v262, v261, &qword_1009DF0D0);
}

uint64_t sub_100513D50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = v0;
  v2 = type metadata accessor for TaskPriority(0);
  v1[4] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[5] = v3;
  v1[6] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100513DB0, 0, 0);
}

uint64_t sub_100513DB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  static TaskPriority.userInitiated.getter(a1);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1009DAC70 + dword_1009DAC70);
  v2 = (_QWORD *)swift_task_alloc(unk_1009DAC74);
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_100513E20;
  return v4(*(_QWORD *)(v1 + 48));
}

uint64_t sub_100513E20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 56);
  *(_QWORD *)(*(_QWORD *)v2 + 64) = v1;
  swift_task_dealloc(v5);
  v7 = v4[5];
  v6 = v4[6];
  v8 = v4[4];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_100514158;
  }
  else
  {
    v4[9] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_100513EAC;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_100513EAC()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  Class isa;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;

  v1 = (void *)v0[9];
  v2 = objc_msgSend(v1, "predicateForPurchasedBooksAssets");
  v0[10] = v2;
  v3 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "predicateFor_All_Finished_LibraryAssets");
  v0[11] = v3;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v5 = swift_allocObject(v4, 48, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1007118C0;
  *(_QWORD *)(v5 + 32) = v2;
  *(_QWORD *)(v5 + 40) = v3;
  v16 = v5;
  specialized Array._endMutation()(v5);
  sub_100009E04(0, &qword_1009E3A10, NSPredicate_ptr);
  v6 = v2;
  v7 = v3;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v16);
  v9 = objc_msgSend((id)objc_opt_self(NSCompoundPredicate), "orPredicateWithSubpredicates:", isa);
  v0[12] = v9;

  v10 = objc_msgSend(v1, "assetIDsOfStoreAssetsWithPredicate:", v9);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, &type metadata for String);
  v0[13] = v11;

  v12 = swift_task_alloc(32);
  v0[14] = v12;
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[15] = v13;
  v14 = sub_10004CFD4(&qword_1009E9638);
  *v13 = v0;
  v13[1] = sub_100514090;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000021, 0x80000001007D08B0, sub_1005173C4, v12, v14);
}

uint64_t sub_100514090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_1005140F8, 0, 0);
}

uint64_t sub_1005140F8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void **)(v0 + 88);
  v1 = *(void **)(v0 + 96);
  v3 = *(void **)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);

  v5 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_100514158()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10051418C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  Class isa;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  unsigned __int8 v39;
  BOOL v40;
  unint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  double v45;
  char *v46;
  id v47;
  void *v48;
  uint64_t v49;
  void *v50;
  unint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  unsigned __int8 *v67;
  unsigned int v68;
  unsigned __int8 v69;
  unint64_t v70;
  uint64_t v71;
  unsigned __int8 *v72;
  unsigned int v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  char *v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  id v88;
  char *v89;
  _QWORD v90[3];

  v80 = a4;
  v6 = sub_10004CFD4(&qword_1009E9648);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StoreBookForDeduplication(0, v7);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v84 = (char *)&v78 - v15;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v17 = objc_msgSend(a2, "libraryAssetsWithAssetIDs:inManagedObjectContext:", isa, a1);

  v18 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

  v20 = v19;
  if (v19 >> 62)
    goto LABEL_86;
  v21 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v20);
  while (v21)
  {
    v22 = 0;
    v86 = 0;
    v87 = v20 & 0xC000000000000001;
    v82 = v20 + 32;
    v78 = (char *)v90 + 2;
    v79 = (char *)v90 + 3;
    v89 = (char *)_swiftEmptyArrayStorage;
    v83 = v20;
    v85 = v21;
    while (1)
    {
      v23 = v87 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v20) : *(id *)(v82 + 8 * v22);
      v24 = v23;
      if (__OFADD__(v22++, 1))
        break;
      v26 = objc_msgSend(v23, "assetID");
      if (!v26)
        goto LABEL_50;
      v27 = v26;
      v88 = v24;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v30 = v29;

      v31 = HIBYTE(v30) & 0xF;
      v32 = v28 & 0xFFFFFFFFFFFFLL;
      if ((v30 & 0x2000000000000000) != 0)
        v33 = HIBYTE(v30) & 0xF;
      else
        v33 = v28 & 0xFFFFFFFFFFFFLL;
      if (!v33)
        goto LABEL_53;
      if ((v30 & 0x1000000000000000) != 0)
      {
        v36 = sub_1003277FC(v28, v30, 10);
        v38 = v74;
      }
      else if ((v30 & 0x2000000000000000) != 0)
      {
        v90[0] = v28;
        v90[1] = v30 & 0xFFFFFFFFFFFFFFLL;
        if (v28 == 43)
        {
          if (!v31)
            goto LABEL_85;
          if (v31 == 1 || (BYTE1(v28) - 48) > 9u)
            goto LABEL_42;
          v36 = (BYTE1(v28) - 48);
          if (v31 != 2)
          {
            if ((BYTE2(v28) - 48) > 9u)
              goto LABEL_42;
            v36 = 10 * (BYTE1(v28) - 48) + (BYTE2(v28) - 48);
            v42 = v31 - 3;
            if (v42)
            {
              v43 = (unsigned __int8 *)v79;
              while (1)
              {
                v44 = *v43 - 48;
                if (v44 > 9)
                  goto LABEL_42;
                if (!is_mul_ok(v36, 0xAuLL))
                  goto LABEL_42;
                v40 = __CFADD__(10 * v36, v44);
                v36 = 10 * v36 + v44;
                if (v40)
                  goto LABEL_42;
                v38 = 0;
                ++v43;
                if (!--v42)
                  goto LABEL_46;
              }
            }
          }
        }
        else if (v28 == 45)
        {
          if (!v31)
            goto LABEL_84;
          if (v31 == 1)
            goto LABEL_42;
          v39 = BYTE1(v28) - 48;
          if ((BYTE1(v28) - 48) > 9u)
            goto LABEL_42;
          v36 = 0;
          v40 = v39 == 0;
          v41 = -(uint64_t)v39;
          if (!v40)
            goto LABEL_43;
          if (v31 == 2)
          {
            v38 = 0;
            v36 = v41;
            goto LABEL_46;
          }
          v69 = BYTE2(v28) - 48;
          if ((BYTE2(v28) - 48) > 9u)
            goto LABEL_42;
          if (!is_mul_ok(v41, 0xAuLL))
            goto LABEL_42;
          v70 = 10 * v41;
          v36 = v70 - v69;
          if (v70 < v69)
            goto LABEL_42;
          v71 = v31 - 3;
          if (v71)
          {
            v72 = (unsigned __int8 *)v79;
            while (1)
            {
              v73 = *v72 - 48;
              if (v73 > 9)
                break;
              if (!is_mul_ok(v36, 0xAuLL))
                break;
              v40 = 10 * v36 >= v73;
              v36 = 10 * v36 - v73;
              if (!v40)
                break;
              v38 = 0;
              ++v72;
              if (!--v71)
                goto LABEL_46;
            }
LABEL_42:
            v36 = 0;
LABEL_43:
            v38 = 1;
            goto LABEL_46;
          }
        }
        else
        {
          if (!v31 || (v28 - 48) > 9u)
            goto LABEL_42;
          v36 = (v28 - 48);
          if (v31 != 1)
          {
            if ((BYTE1(v28) - 48) > 9u)
              goto LABEL_42;
            v36 = 10 * (v28 - 48) + (BYTE1(v28) - 48);
            v66 = v31 - 2;
            if (v66)
            {
              v67 = (unsigned __int8 *)v78;
              while (1)
              {
                v68 = *v67 - 48;
                if (v68 > 9)
                  goto LABEL_42;
                if (!is_mul_ok(v36, 0xAuLL))
                  goto LABEL_42;
                v40 = __CFADD__(10 * v36, v68);
                v36 = 10 * v36 + v68;
                if (v40)
                  goto LABEL_42;
                v38 = 0;
                ++v67;
                if (!--v66)
                  goto LABEL_46;
              }
            }
          }
        }
        v38 = 0;
      }
      else
      {
        if ((v28 & 0x1000000000000000) != 0)
          v34 = (unsigned __int8 *)((v30 & 0xFFFFFFFFFFFFFFFLL) + 32);
        else
          v34 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v28, v30);
        v35 = v86;
        v36 = (unint64_t)sub_1003276EC(v34, v32, 10);
        v86 = v35;
        v38 = v37 & 1;
        v20 = v83;
      }
LABEL_46:
      *(_QWORD *)&v45 = swift_bridgeObjectRelease(v30).n128_u64[0];
      v24 = v88;
      if ((v38 & 1) != 0)
      {
LABEL_50:
        v60 = 1;
        goto LABEL_55;
      }
      v46 = v13;
      v47 = objc_msgSend(v88, "title", v45);
      if (v47)
      {
        v48 = v47;
        v81 = v36;
        v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
        v50 = v24;
        v30 = v51;

        v52 = objc_msgSend(v50, "author");
        if (v52)
        {
          v53 = v52;
          v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
          v55 = v10;
          v56 = v11;
          v58 = v57;

          v59 = v58;
          v11 = v56;
          v10 = v55;
          v21 = v85;
          StoreBookForDeduplication.init(storeID:title:author:)(v81, v49, v30, v54, v59);
          v60 = 0;
          v13 = v46;
          v20 = v83;
        }
        else
        {
          v13 = v46;
          v20 = v83;
LABEL_53:
          swift_bridgeObjectRelease(v30);
          v60 = 1;
        }
        v24 = v88;
        goto LABEL_55;
      }
      v60 = 1;
LABEL_55:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v60, 1, v10);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        sub_100010960((uint64_t)v9, &qword_1009E9648);
        if (v22 == v21)
          goto LABEL_91;
      }
      else
      {
        v61 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
        v62 = v84;
        v61(v84, v9, v10);
        v61(v13, v62, v10);
        if ((swift_isUniquelyReferenced_nonNull_native(v89) & 1) == 0)
          v89 = (char *)sub_1005B1FCC(0, *((_QWORD *)v89 + 2) + 1, 1, (unint64_t)v89);
        v64 = *((_QWORD *)v89 + 2);
        v63 = *((_QWORD *)v89 + 3);
        if (v64 >= v63 >> 1)
          v89 = (char *)sub_1005B1FCC(v63 > 1, v64 + 1, 1, (unint64_t)v89);
        v65 = v89;
        *((_QWORD *)v89 + 2) = v64 + 1;
        v61(&v65[((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v64], v13, v10);
        v21 = v85;
        if (v22 == v85)
          goto LABEL_91;
      }
    }
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    if (v20 < 0)
      v75 = v20;
    else
      v75 = v20 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v20, 2);
    v21 = _CocoaArrayWrapper.endIndex.getter(v75);
    swift_bridgeObjectRelease(v20);
  }
  v89 = (char *)_swiftEmptyArrayStorage;
LABEL_91:
  swift_bridgeObjectRelease_n(v20, 2);
  v90[0] = v89;
  v76 = sub_10004CFD4(&qword_1009E9640);
  return CheckedContinuation.resume(returning:)(v90, v76);
}

uint64_t sub_100514894()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[17] = v0;
  v2 = type metadata accessor for TaskPriority(0);
  v1[18] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[19] = v3;
  v1[20] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005148F4, 0, 0);
}

uint64_t sub_1005148F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  static TaskPriority.userInitiated.getter(a1);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1009DAC70 + dword_1009DAC70);
  v2 = (_QWORD *)swift_task_alloc(unk_1009DAC74);
  *(_QWORD *)(v1 + 168) = v2;
  *v2 = v1;
  v2[1] = sub_100514964;
  return v4(*(_QWORD *)(v1 + 160));
}

uint64_t sub_100514964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 168);
  *(_QWORD *)(*(_QWORD *)v2 + 176) = v1;
  swift_task_dealloc(v5);
  v7 = v4[19];
  v6 = v4[20];
  v8 = v4[18];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_100514B54;
  }
  else
  {
    v4[23] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_1005149F0;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_1005149F0()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)v0[23];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_100514A84;
  v3 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_100514B88;
  v4[3] = &unk_10090C980;
  v4[4] = v3;
  objc_msgSend(v2, "hiddenAssetStoreIDsWithCompletion:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_100514A84()
{
  return swift_task_switch(sub_100514AD0, 0, 0);
}

uint64_t sub_100514AD0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 120);
  swift_errorRelease(*(_QWORD *)(v0 + 128));
  sub_10050ECEC(v3);
  v5 = v4;
  swift_bridgeObjectRelease(v3);
  v6 = sub_1003ACD10(v5);
  swift_bridgeObjectRelease(v5);

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_100514B54()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 160));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100514B88(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  id v7;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a2, &type metadata for String, &protocol witness table for String);
  v6 = *(uint64_t **)(*(_QWORD *)(v4 + 64) + 40);
  *v6 = v5;
  v6[1] = (uint64_t)a3;
  v7 = a3;
  return swift_continuation_resume(v4);
}

void sub_100514BD8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unint64_t v9;
  char v10;
  char v11;
  unsigned __int8 v12;
  BOOL v13;
  unint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  unsigned __int8 v22;
  unint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  char v27;
  _QWORD v28[2];

  v3 = *a1;
  v4 = a1[1];
  v5 = HIBYTE(v4) & 0xF;
  v6 = *a1 & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v4) & 0xF;
  else
    v7 = *a1 & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    v18 = 1;
LABEL_40:
    *(_QWORD *)a2 = v7;
    *(_BYTE *)(a2 + 8) = v18 & 1;
    return;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain(a1[1]);
    v9 = sub_1003277FC(v3, v4, 10);
    v11 = v27;
    swift_bridgeObjectRelease(v4);
LABEL_37:
    v18 = v11 & 1;
    if ((v11 & 1) != 0)
      v7 = 0;
    else
      v7 = v9;
    goto LABEL_40;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(*a1, v4);
    v9 = (unint64_t)sub_1003276EC(v8, v6, 10);
    v11 = v10 & 1;
    goto LABEL_37;
  }
  v28[0] = *a1;
  v28[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (!v5)
      goto LABEL_64;
    if (v5 == 1 || (BYTE1(v3) - 48) > 9u)
      goto LABEL_33;
    v9 = (BYTE1(v3) - 48);
    if (v5 != 2)
    {
      if ((BYTE2(v3) - 48) > 9u)
        goto LABEL_33;
      v9 = 10 * (BYTE1(v3) - 48) + (BYTE2(v3) - 48);
      v15 = v5 - 3;
      if (v15)
      {
        v16 = (unsigned __int8 *)v28 + 3;
        while (1)
        {
          v17 = *v16 - 48;
          if (v17 > 9)
            goto LABEL_33;
          if (!is_mul_ok(v9, 0xAuLL))
            goto LABEL_33;
          v13 = __CFADD__(10 * v9, v17);
          v9 = 10 * v9 + v17;
          if (v13)
            goto LABEL_33;
          v11 = 0;
          ++v16;
          if (!--v15)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v11 = 0;
    goto LABEL_37;
  }
  if (v3 != 45)
  {
    if (!v5 || (v3 - 48) > 9u)
      goto LABEL_33;
    v9 = (v3 - 48);
    if (v5 != 1)
    {
      if ((BYTE1(v3) - 48) > 9u)
        goto LABEL_33;
      v9 = 10 * (v3 - 48) + (BYTE1(v3) - 48);
      v19 = v5 - 2;
      if (v19)
      {
        v20 = (unsigned __int8 *)v28 + 2;
        while (1)
        {
          v21 = *v20 - 48;
          if (v21 > 9)
            goto LABEL_33;
          if (!is_mul_ok(v9, 0xAuLL))
            goto LABEL_33;
          v13 = __CFADD__(10 * v9, v21);
          v9 = 10 * v9 + v21;
          if (v13)
            goto LABEL_33;
          v11 = 0;
          ++v20;
          if (!--v19)
            goto LABEL_37;
        }
      }
    }
    goto LABEL_36;
  }
  if (v5)
  {
    if (v5 != 1)
    {
      v12 = BYTE1(v3) - 48;
      if ((BYTE1(v3) - 48) <= 9u)
      {
        v9 = 0;
        v13 = v12 == 0;
        v14 = -(uint64_t)v12;
        if (!v13)
          goto LABEL_34;
        if (v5 == 2)
        {
          v11 = 0;
          v9 = v14;
          goto LABEL_37;
        }
        v22 = BYTE2(v3) - 48;
        if ((BYTE2(v3) - 48) <= 9u && is_mul_ok(v14, 0xAuLL))
        {
          v23 = 10 * v14;
          v9 = v23 - v22;
          if (v23 >= v22)
          {
            v24 = v5 - 3;
            if (v24)
            {
              v25 = (unsigned __int8 *)v28 + 3;
              while (1)
              {
                v26 = *v25 - 48;
                if (v26 > 9)
                  goto LABEL_33;
                if (!is_mul_ok(v9, 0xAuLL))
                  goto LABEL_33;
                v13 = 10 * v9 >= v26;
                v9 = 10 * v9 - v26;
                if (!v13)
                  goto LABEL_33;
                v11 = 0;
                ++v25;
                if (!--v24)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
        }
      }
    }
LABEL_33:
    v9 = 0;
LABEL_34:
    v11 = 1;
    goto LABEL_37;
  }
  __break(1u);
LABEL_64:
  __break(1u);
}

uint64_t sub_100514EE4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[15] = a1;
  v2[16] = v1;
  v3 = type metadata accessor for TaskPriority(0);
  v2[17] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[18] = v4;
  v2[19] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100514F44, 0, 0);
}

uint64_t sub_100514F44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  static TaskPriority.userInitiated.getter(a1);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1009DAC70 + dword_1009DAC70);
  v2 = (_QWORD *)swift_task_alloc(unk_1009DAC74);
  *(_QWORD *)(v1 + 160) = v2;
  *v2 = v1;
  v2[1] = sub_100514FB4;
  return v4(*(_QWORD *)(v1 + 152));
}

uint64_t sub_100514FB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 160);
  *(_QWORD *)(*(_QWORD *)v2 + 168) = v1;
  swift_task_dealloc(v5);
  v7 = v4[18];
  v6 = v4[19];
  v8 = v4[17];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_100515160;
  }
  else
  {
    v4[22] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_100515040;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_100515040()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)v0[22];
  v0[7] = v0[15];
  v0[2] = v0;
  v0[3] = sub_1005150D4;
  v3 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_100515194;
  v4[3] = &unk_10090C9E8;
  v4[4] = v3;
  objc_msgSend(v2, "earliestPurchaseTimestampWithCompletion:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_1005150D4()
{
  return swift_task_switch(sub_100515120, 0, 0);
}

uint64_t sub_100515120()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);

  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100515160()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100515194(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v4 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - v8;
  v10 = *(_QWORD *)(a1 + 32);
  if (a2)
  {
    static Date._unconditionallyBridgeFromObjectiveC(_:)(a2);
    v11 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 0, 1, v11);
  }
  else
  {
    v12 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  }
  sub_100025B3C((uint64_t)v6, (uint64_t)v9, &qword_1009D7440);
  sub_100025B3C((uint64_t)v9, *(_QWORD *)(*(_QWORD *)(v10 + 64) + 40), &qword_1009D7440);
  return swift_continuation_resume(v10);
}

uint64_t sub_1005152A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for TaskPriority(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v2[11] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100515300, 0, 0);
}

uint64_t sub_100515300(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  static TaskPriority.userInitiated.getter(a1);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1009DAC70 + dword_1009DAC70);
  v2 = (_QWORD *)swift_task_alloc(unk_1009DAC74);
  *(_QWORD *)(v1 + 96) = v2;
  *v2 = v1;
  v2[1] = sub_100515370;
  return v4(*(_QWORD *)(v1 + 88));
}

uint64_t sub_100515370(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v3 = (_QWORD *)*v2;
  v3[2] = v2;
  v3[3] = a1;
  v3[4] = v1;
  v5 = v3[11];
  v4 = v3[12];
  v6 = v3[9];
  v7 = v3[10];
  v3[13] = v1;
  swift_task_dealloc(v4);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  if (v1)
    v8 = sub_1005156CC;
  else
    v8 = sub_1005153F8;
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_1005153F8()
{
  _QWORD *v0;
  uint64_t v1;
  int64_t v2;
  _QWORD *v3;
  uint64_t result;
  int64_t v5;
  int v6;
  int v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  v1 = v0[7];
  v2 = *(_QWORD *)(v1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_100045E44(0, v2, 0);
    result = sub_1005171E4(v1);
    v5 = result;
    v7 = v6;
    v9 = v8 & 1;
    v24 = v1;
    v25 = v1 + 56;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(v1 + 32))
    {
      if (((*(_QWORD *)(v25 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(v1 + 36) != v7)
        goto LABEL_14;
      v0[5] = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v5);
      v10 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v12 = v11;
      v14 = v27[2];
      v13 = v27[3];
      if (v14 >= v13 >> 1)
        sub_100045E44(v13 > 1, v14 + 1, 1);
      v15 = v26[7];
      v27[2] = v14 + 1;
      v16 = &v27[2 * v14];
      v16[4] = v10;
      v16[5] = v12;
      result = sub_100517288(v5, v7, v9 & 1, v15);
      v5 = result;
      v7 = v17;
      v9 = v18 & 1;
      --v2;
      v1 = v24;
      if (!v2)
      {
        v3 = v27;
        sub_10030A650(result, v17, v18 & 1);
        v0 = v26;
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    v19 = v0[3];
    v20 = v3;
    v0[14] = v3;
    v0[15] = v19;
    v21 = swift_task_alloc(32);
    v0[16] = v21;
    *(_QWORD *)(v21 + 16) = v19;
    *(_QWORD *)(v21 + 24) = v20;
    v22 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    v0[17] = v22;
    v23 = sub_10004CFD4(&qword_1009E9600);
    *v22 = v0;
    v22[1] = sub_10051561C;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 6, 0, 0, 0xD00000000000002DLL, 0x80000001007D0860, sub_10051736C, v21, v23);
  }
  return result;
}

uint64_t sub_10051561C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_bridgeObjectRelease(v2);
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100515684, 0, 0);
}

uint64_t sub_100515684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 88);

  v2 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

uint64_t sub_1005156CC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100515700(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v13 = sub_10004CFD4(a4);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = __chkstk_darwin(v13);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))((char *)aBlock - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13, v16);
  v17 = *(unsigned __int8 *)(v14 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = swift_allocObject(a5, v18 + v15, v17 | 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v19 + v18, (char *)aBlock - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  aBlock[4] = a6;
  v24 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = a7;
  v20 = _Block_copy(aBlock);
  v21 = v24;
  v22 = a2;
  swift_bridgeObjectRetain(a3);
  objc_msgSend(v22, "performBackgroundReadOnlyBlock:", v20, swift_release(v21).n128_f64[0]);
  _Block_release(v20);
}

void sub_100515848(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  id v41;

  v7 = sub_10004CFD4(&qword_1009E9610);
  v8.n128_f64[0] = __chkstk_darwin(v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for NextInSeriesProcessorMetadata(0, v8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v38 = (char *)&v35 - v16;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v18 = objc_msgSend(a2, "libraryAssetsWithAssetIDs:inManagedObjectContext:", isa, a1);

  v19 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v19);

  if (!((unint64_t)v20 >> 62))
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v20);
    v36 = a4;
    if (v21)
      goto LABEL_3;
LABEL_20:
    v23 = _swiftEmptyArrayStorage;
LABEL_21:
    swift_bridgeObjectRelease_n(v20, 2);
    v41 = v23;
    v34 = sub_10004CFD4(&qword_1009E9608);
    CheckedContinuation.resume(returning:)(&v41, v34);
    return;
  }
  if (v20 < 0)
    v33 = v20;
  else
    v33 = v20 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v20);
  v21 = _CocoaArrayWrapper.endIndex.getter(v33);
  v36 = a4;
  if (!v21)
    goto LABEL_20;
LABEL_3:
  v39 = v21;
  if (v21 >= 1)
  {
    v22 = 0;
    v40 = v20 & 0xC000000000000001;
    v23 = _swiftEmptyArrayStorage;
    v37 = v14;
    v24 = v39;
    do
    {
      if (v40)
        v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v20);
      else
        v25 = *(id *)(v20 + 8 * v22 + 32);
      v26 = v25;
      v41 = v25;
      sub_100515B74(&v41, (uint64_t)v10);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
      {
        sub_100010960((uint64_t)v10, &qword_1009E9610);
      }
      else
      {
        v27 = v20;
        v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
        v29 = v38;
        v28(v38, v10, v11);
        v28(v14, v29, v11);
        if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
          v23 = (_QWORD *)sub_1005B20F4(0, v23[2] + 1, 1, (unint64_t)v23);
        v31 = v23[2];
        v30 = v23[3];
        if (v31 >= v30 >> 1)
          v23 = (_QWORD *)sub_1005B20F4(v30 > 1, v31 + 1, 1, (unint64_t)v23);
        v23[2] = v31 + 1;
        v32 = (unint64_t)v23
            + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
            + *(_QWORD *)(v12 + 72) * v31;
        v14 = v37;
        v28((char *)v32, v37, v11);
        v20 = v27;
        v24 = v39;
      }
      ++v22;
    }
    while (v24 != v22);
    goto LABEL_21;
  }
  __break(1u);
}

void sub_100515B74(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  __n128 v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unint64_t v14;
  char v15;
  char v16;
  unsigned __int8 v17;
  BOOL v18;
  unint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned int v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  unsigned int v37;
  unsigned __int8 v38;
  unint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  uint64_t v43;
  char v44;
  _QWORD v45[3];

  v3 = *a1;
  v4 = objc_msgSend(*a1, "assetID");
  if (!v4)
    goto LABEL_67;
  v6 = v4;
  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v9 = v8;

  v10 = HIBYTE(v9) & 0xF;
  v11 = v7 & 0xFFFFFFFFFFFFLL;
  if ((v9 & 0x2000000000000000) != 0)
    v12 = HIBYTE(v9) & 0xF;
  else
    v12 = v7 & 0xFFFFFFFFFFFFLL;
  if (!v12)
  {
    v5 = swift_bridgeObjectRelease(v9);
LABEL_67:
    v43 = type metadata accessor for NextInSeriesProcessorMetadata(0, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(a2, 1, 1, v43);
    return;
  }
  if ((v9 & 0x1000000000000000) != 0)
  {
    v14 = sub_1003277FC(v7, v9, 10);
    v16 = v44;
    goto LABEL_38;
  }
  if ((v9 & 0x2000000000000000) != 0)
  {
    v45[0] = v7;
    v45[1] = v9 & 0xFFFFFFFFFFFFFFLL;
    if (v7 == 43)
    {
      if (v10)
      {
        if (v10 != 1 && (BYTE1(v7) - 48) <= 9u)
        {
          v14 = (BYTE1(v7) - 48);
          if (v10 == 2)
            goto LABEL_37;
          if ((BYTE2(v7) - 48) <= 9u)
          {
            v14 = 10 * (BYTE1(v7) - 48) + (BYTE2(v7) - 48);
            v20 = v10 - 3;
            if (v20)
            {
              v21 = (unsigned __int8 *)v45 + 3;
              while (1)
              {
                v22 = *v21 - 48;
                if (v22 > 9)
                  goto LABEL_34;
                if (!is_mul_ok(v14, 0xAuLL))
                  goto LABEL_34;
                v18 = __CFADD__(10 * v14, v22);
                v14 = 10 * v14 + v22;
                if (v18)
                  goto LABEL_34;
                v16 = 0;
                ++v21;
                if (!--v20)
                  goto LABEL_38;
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_34;
      }
    }
    else
    {
      if (v7 != 45)
      {
        if (v10 && (v7 - 48) <= 9u)
        {
          v14 = (v7 - 48);
          if (v10 == 1)
            goto LABEL_37;
          if ((BYTE1(v7) - 48) <= 9u)
          {
            v14 = 10 * (v7 - 48) + (BYTE1(v7) - 48);
            v35 = v10 - 2;
            if (v35)
            {
              v36 = (unsigned __int8 *)v45 + 2;
              while (1)
              {
                v37 = *v36 - 48;
                if (v37 > 9)
                  goto LABEL_34;
                if (!is_mul_ok(v14, 0xAuLL))
                  goto LABEL_34;
                v18 = __CFADD__(10 * v14, v37);
                v14 = 10 * v14 + v37;
                if (v18)
                  goto LABEL_34;
                v16 = 0;
                ++v36;
                if (!--v35)
                  goto LABEL_38;
              }
            }
            goto LABEL_37;
          }
        }
LABEL_34:
        v14 = 0;
LABEL_35:
        v16 = 1;
        goto LABEL_38;
      }
      if (v10)
      {
        if (v10 != 1)
        {
          v17 = BYTE1(v7) - 48;
          if ((BYTE1(v7) - 48) <= 9u)
          {
            v14 = 0;
            v18 = v17 == 0;
            v19 = -(uint64_t)v17;
            if (!v18)
              goto LABEL_35;
            if (v10 == 2)
            {
              v16 = 0;
              v14 = v19;
              goto LABEL_38;
            }
            v38 = BYTE2(v7) - 48;
            if ((BYTE2(v7) - 48) <= 9u && is_mul_ok(v19, 0xAuLL))
            {
              v39 = 10 * v19;
              v14 = v39 - v38;
              if (v39 >= v38)
              {
                v40 = v10 - 3;
                if (v40)
                {
                  v41 = (unsigned __int8 *)v45 + 3;
                  while (1)
                  {
                    v42 = *v41 - 48;
                    if (v42 > 9)
                      goto LABEL_34;
                    if (!is_mul_ok(v14, 0xAuLL))
                      goto LABEL_34;
                    v18 = 10 * v14 >= v42;
                    v14 = 10 * v14 - v42;
                    if (!v18)
                      goto LABEL_34;
                    v16 = 0;
                    ++v41;
                    if (!--v40)
                      goto LABEL_38;
                  }
                }
LABEL_37:
                v16 = 0;
                goto LABEL_38;
              }
            }
          }
        }
        goto LABEL_34;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  if ((v7 & 0x1000000000000000) != 0)
    v13 = (unsigned __int8 *)((v9 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v13 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v7, v9);
  v14 = (unint64_t)sub_1003276EC(v13, v11, 10);
  v16 = v15 & 1;
LABEL_38:
  v5 = swift_bridgeObjectRelease(v9);
  if ((v16 & 1) != 0 || objc_msgSend(v3, "seriesType", v5.n128_f64[0]) != 2)
    goto LABEL_67;
  v23 = objc_msgSend(v3, "seriesID");
  v24 = v23;
  if (v23)
  {
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v27 = v26;

    v24 = (void *)sub_1003248D4(v25, v27);
    v29 = v28 & 1;
  }
  else
  {
    v29 = 1;
  }
  v30 = objc_msgSend(v3, "seriesSortKey");
  v31 = v30;
  if (v30)
  {
    v32 = objc_msgSend(v30, "longLongValue");

  }
  else
  {
    v32 = 0;
  }
  NextInSeriesProcessorMetadata.init(storeID:seriesID:seriesSortKey:isOwned:)(v14, v24, v29, v32, v31 == 0, objc_msgSend(v3, "isOwned"));
  v34 = type metadata accessor for NextInSeriesProcessorMetadata(0, v33);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a2, 0, 1, v34);
}

uint64_t sub_100515FC4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *v1;
  v3 = type metadata accessor for TaskPriority(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10051602C, 0, 0);
}

uint64_t sub_10051602C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t);

  static TaskPriority.userInitiated.getter(a1);
  v4 = (uint64_t (*)(uint64_t))((char *)&dword_1009DAC70 + dword_1009DAC70);
  v2 = (_QWORD *)swift_task_alloc(unk_1009DAC74);
  *(_QWORD *)(v1 + 72) = v2;
  *v2 = v1;
  v2[1] = sub_10051609C;
  return v4(*(_QWORD *)(v1 + 64));
}

uint64_t sub_10051609C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 72);
  *(_QWORD *)(*(_QWORD *)v2 + 80) = v1;
  swift_task_dealloc(v5);
  v7 = v4[7];
  v6 = v4[8];
  v8 = v4[6];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_10050FE54;
  }
  else
  {
    v4[11] = a1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = sub_100516128;
  }
  return swift_task_switch(v9, 0, 0);
}

uint64_t sub_100516128()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[11];
  v2 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc(48);
  v0[12] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[13] = v5;
  v6 = sub_10004CFD4(&qword_1009E9600);
  *v5 = v0;
  v5[1] = sub_1005161EC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000002ELL, 0x80000001007D0830, sub_1005170F8, v4, v6);
}

uint64_t sub_1005161EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 104));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100516248, 0, 0);
}

uint64_t sub_100516248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);

  v2 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v2);
}

void sub_100516290(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD aBlock[5];
  uint64_t v20;

  v8 = sub_10004CFD4(&qword_1009E9608);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = __chkstk_darwin(v8);
  v12 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v11);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = (v13 + 24) & ~v13;
  v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject(&unk_10090C8F0, v15 + 8, v13 | 7);
  *(_QWORD *)(v16 + 16) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16 + v14, v12, v8);
  *(_QWORD *)(v16 + v15) = a4;
  aBlock[4] = sub_100517188;
  v20 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_10090C908;
  v17 = _Block_copy(aBlock);
  v18 = v20;
  swift_bridgeObjectRetain(a3);
  objc_msgSend(a2, "performBackgroundReadOnlyBlock:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);
}

void sub_1005163F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  _QWORD *v18;
  int64_t v19;
  int v20;
  int v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  char v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;
  void *v54;
  id v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 *v64;
  unint64_t v65;
  char v66;
  char v67;
  unsigned __int8 v68;
  BOOL v69;
  unint64_t v70;
  uint64_t v71;
  unsigned __int8 *v72;
  unsigned int v73;
  double v74;
  id v75;
  void *v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  char v81;
  uint64_t v82;
  id v83;
  void *v84;
  id v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned __int8 *v93;
  unsigned int v94;
  unsigned __int8 v95;
  unint64_t v96;
  uint64_t v97;
  unsigned __int8 *v98;
  unsigned int v99;
  char v100;
  char v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  char *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  unint64_t v121;
  uint64_t v122[2];
  _QWORD v123[3];
  char v124[16];
  uint64_t v125;
  uint64_t v126;

  v112 = a3;
  v5 = sub_10004CFD4(&qword_1009E9610);
  v6.n128_f64[0] = __chkstk_darwin(v5);
  v120 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for NextInSeriesProcessorMetadata(0, v6);
  v117 = *(_QWORD *)(v8 - 8);
  v118 = v8;
  __chkstk_darwin(v8);
  v119 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v115 = (char *)&v109 - v11;
  v12 = objc_allocWithZone((Class)NSFetchRequest);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "initWithEntityName:", v13);

  v114 = v14;
  objc_msgSend(v14, "setReturnsObjectsAsFaults:", 0);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v16 = swift_allocObject(v15, 112, 7);
  *(_OWORD *)(v16 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  *(_QWORD *)(v16 + 64) = sub_10002BE50();
  *(_QWORD *)(v16 + 32) = 0x4449736569726573;
  *(_QWORD *)(v16 + 40) = 0xE800000000000000;
  v17 = *(_QWORD *)(a2 + 16);
  v18 = _swiftEmptyArrayStorage;
  if (!v17)
  {
LABEL_11:
    sub_100009E04(0, &qword_1009E3A10, NSPredicate_ptr);
    *(_QWORD *)(v16 + 96) = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    *(_QWORD *)(v16 + 104) = sub_100030B34(&qword_1009E9618, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
    *(_QWORD *)(v16 + 72) = v18;
    v35 = (void *)NSPredicate.init(format:_:)(0x4025204E49204B25, 0xE800000000000000, v16);
    v36 = v114;
    objc_msgSend(v114, "setPredicate:", v35);

    v37 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    a2 = 0;
    v38 = NSManagedObjectContext.fetch<A>(_:)(v36, v37);
    v39 = (uint64_t)v120;
    v49 = v38;
    if ((unint64_t)v38 >> 62)
    {
      if (v38 < 0)
        v108 = v38;
      else
        v108 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v38, 3);
      v50 = _CocoaArrayWrapper.endIndex.getter(v108);
      swift_bridgeObjectRelease(v49);
      if (v50)
        goto LABEL_16;
    }
    else
    {
      v50 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v38, 2);
      if (v50)
      {
LABEL_16:
        v51 = 0;
        v121 = v49 & 0xC000000000000001;
        v113 = v49 + 32;
        v110 = (char *)v122 + 2;
        v111 = (char *)v122 + 3;
        v52 = (char *)_swiftEmptyArrayStorage;
        v116 = v50;
        while (1)
        {
          if (v121)
            v53 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v51, v49);
          else
            v53 = *(id *)(v113 + 8 * v51);
          v54 = v53;
          if (__OFADD__(v51++, 1))
            goto LABEL_106;
          v56 = objc_msgSend(v53, "assetID");
          if (!v56)
            goto LABEL_90;
          v57 = v56;
          v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
          v60 = v59;

          v61 = HIBYTE(v60) & 0xF;
          v62 = v58 & 0xFFFFFFFFFFFFLL;
          if ((v60 & 0x2000000000000000) != 0)
            v63 = HIBYTE(v60) & 0xF;
          else
            v63 = v58 & 0xFFFFFFFFFFFFLL;
          if (!v63)
          {
            swift_bridgeObjectRelease(v60);
LABEL_89:
            v39 = (uint64_t)v120;
            goto LABEL_90;
          }
          if ((v60 & 0x1000000000000000) != 0)
          {
            v65 = sub_1003277FC(v58, v60, 10);
            v101 = v100;
            *(_QWORD *)&v74 = swift_bridgeObjectRelease(v60).n128_u64[0];
            if ((v101 & 1) == 0)
            {
LABEL_61:
              v75 = objc_msgSend(v54, "seriesID", v74);
              if (v75)
              {
                v76 = v75;
                v77 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
                v79 = v78;

                v80 = sub_1003248D4(v77, v79);
                v82 = v81 & 1;
              }
              else
              {
                v80 = 0;
                v82 = 1;
              }
              v83 = objc_msgSend(v54, "seriesSortKey");
              v84 = v83;
              if (v83)
              {
                v85 = objc_msgSend(v83, "longLongValue");

              }
              else
              {
                v85 = 0;
              }
              v86 = objc_msgSend(v54, "isOwned");
              v87 = v82;
              v39 = (uint64_t)v120;
              NextInSeriesProcessorMetadata.init(storeID:seriesID:seriesSortKey:isOwned:)(v65, v80, v87, v85, v84 == 0, v86);
              v88 = v117;
              v89 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56);
              v90 = v39;
              v91 = 0;
              goto LABEL_91;
            }
            goto LABEL_89;
          }
          if ((v60 & 0x2000000000000000) != 0)
          {
            v122[0] = v58;
            v122[1] = v60 & 0xFFFFFFFFFFFFFFLL;
            if (v58 == 43)
            {
              if (!v61)
                goto LABEL_108;
              if (v61 == 1 || (BYTE1(v58) - 48) > 9u)
                goto LABEL_56;
              v65 = (BYTE1(v58) - 48);
              if (v61 != 2)
              {
                if ((BYTE2(v58) - 48) > 9u)
                  goto LABEL_56;
                v65 = 10 * (BYTE1(v58) - 48) + (BYTE2(v58) - 48);
                v71 = v61 - 3;
                if (v71)
                {
                  v72 = (unsigned __int8 *)v111;
                  while (1)
                  {
                    v73 = *v72 - 48;
                    if (v73 > 9)
                      goto LABEL_56;
                    if (!is_mul_ok(v65, 0xAuLL))
                      goto LABEL_56;
                    v69 = __CFADD__(10 * v65, v73);
                    v65 = 10 * v65 + v73;
                    if (v69)
                      goto LABEL_56;
                    v67 = 0;
                    ++v72;
                    if (!--v71)
                      goto LABEL_60;
                  }
                }
              }
            }
            else if (v58 == 45)
            {
              if (!v61)
                goto LABEL_107;
              if (v61 == 1)
                goto LABEL_56;
              v68 = BYTE1(v58) - 48;
              if ((BYTE1(v58) - 48) > 9u)
                goto LABEL_56;
              v65 = 0;
              v69 = v68 == 0;
              v70 = -(uint64_t)v68;
              if (!v69)
                goto LABEL_57;
              if (v61 == 2)
              {
                v67 = 0;
                v65 = v70;
                goto LABEL_60;
              }
              v95 = BYTE2(v58) - 48;
              if ((BYTE2(v58) - 48) > 9u)
                goto LABEL_56;
              if (!is_mul_ok(v70, 0xAuLL))
                goto LABEL_56;
              v96 = 10 * v70;
              v65 = v96 - v95;
              if (v96 < v95)
                goto LABEL_56;
              v97 = v61 - 3;
              if (v97)
              {
                v98 = (unsigned __int8 *)v111;
                while (1)
                {
                  v99 = *v98 - 48;
                  if (v99 > 9)
                    break;
                  if (!is_mul_ok(v65, 0xAuLL))
                    break;
                  v69 = 10 * v65 >= v99;
                  v65 = 10 * v65 - v99;
                  if (!v69)
                    break;
                  v67 = 0;
                  ++v98;
                  if (!--v97)
                    goto LABEL_60;
                }
LABEL_56:
                v65 = 0;
LABEL_57:
                v67 = 1;
                goto LABEL_60;
              }
            }
            else
            {
              if (!v61 || (v58 - 48) > 9u)
                goto LABEL_56;
              v65 = (v58 - 48);
              if (v61 != 1)
              {
                if ((BYTE1(v58) - 48) > 9u)
                  goto LABEL_56;
                v65 = 10 * (v58 - 48) + (BYTE1(v58) - 48);
                v92 = v61 - 2;
                if (v92)
                {
                  v93 = (unsigned __int8 *)v110;
                  while (1)
                  {
                    v94 = *v93 - 48;
                    if (v94 > 9)
                      goto LABEL_56;
                    if (!is_mul_ok(v65, 0xAuLL))
                      goto LABEL_56;
                    v69 = __CFADD__(10 * v65, v94);
                    v65 = 10 * v65 + v94;
                    if (v69)
                      goto LABEL_56;
                    v67 = 0;
                    ++v93;
                    if (!--v92)
                      goto LABEL_60;
                  }
                }
              }
            }
            v67 = 0;
          }
          else
          {
            if ((v58 & 0x1000000000000000) != 0)
              v64 = (unsigned __int8 *)((v60 & 0xFFFFFFFFFFFFFFFLL) + 32);
            else
              v64 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v58, v60);
            v65 = (unint64_t)sub_1003276EC(v64, v62, 10);
            v67 = v66 & 1;
          }
LABEL_60:
          *(_QWORD *)&v74 = swift_bridgeObjectRelease(v60).n128_u64[0];
          v39 = (uint64_t)v120;
          if ((v67 & 1) == 0)
            goto LABEL_61;
LABEL_90:
          v88 = v117;
          v89 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56);
          v90 = v39;
          v91 = 1;
LABEL_91:
          v102 = v118;
          v89(v90, v91, 1, v118);

          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v39, 1, v102) == 1)
          {
            sub_100010960(v39, &qword_1009E9610);
          }
          else
          {
            v103 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 32);
            v104 = v115;
            v103(v115, v39, v102);
            v103(v119, (uint64_t)v104, v102);
            if ((swift_isUniquelyReferenced_nonNull_native(v52) & 1) == 0)
              v52 = (char *)sub_1005B20F4(0, *((_QWORD *)v52 + 2) + 1, 1, (unint64_t)v52);
            v106 = *((_QWORD *)v52 + 2);
            v105 = *((_QWORD *)v52 + 3);
            if (v106 >= v105 >> 1)
              v52 = (char *)sub_1005B20F4(v105 > 1, v106 + 1, 1, (unint64_t)v52);
            *((_QWORD *)v52 + 2) = v106 + 1;
            v103(&v52[((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80))+ *(_QWORD *)(v88 + 72) * v106], (uint64_t)v119, v102);
          }
          if (v51 == v116)
          {
            swift_bridgeObjectRelease_n(v49, 2);
            goto LABEL_102;
          }
        }
      }
    }
    swift_bridgeObjectRelease_n(v49, 2);
    goto LABEL_100;
  }
  v113 = v16;
  v116 = a1;
  v122[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100045E44(0, v17, 0);
  v18 = (_QWORD *)v122[0];
  v19 = sub_1005171E4(a2);
  v21 = v20;
  v23 = v22 & 1;
  v121 = a2 + 56;
  while ((v19 & 0x8000000000000000) == 0 && v19 < 1 << *(_BYTE *)(a2 + 32))
  {
    if (((*(_QWORD *)(v121 + (((unint64_t)v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      goto LABEL_104;
    if (*(_DWORD *)(a2 + 36) != v21)
      goto LABEL_105;
    v125 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v19);
    v24 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
    v26 = v25;
    v122[0] = (uint64_t)v18;
    v27 = a2;
    v29 = v18[2];
    v28 = v18[3];
    v30 = (uint64_t)v18;
    if (v29 >= v28 >> 1)
    {
      sub_100045E44(v28 > 1, v29 + 1, 1);
      v30 = v122[0];
    }
    *(_QWORD *)(v30 + 16) = v29 + 1;
    v31 = v30 + 16 * v29;
    *(_QWORD *)(v31 + 32) = v24;
    *(_QWORD *)(v31 + 40) = v26;
    v32 = sub_100517288(v19, v21, v23 & 1, v27);
    v19 = v32;
    v21 = v33;
    v23 = v34 & 1;
    --v17;
    a2 = v27;
    v18 = (_QWORD *)v30;
    if (!v17)
    {
      sub_10030A650(v32, v33, v34 & 1);
      v16 = v113;
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
  swift_once(&qword_1009CE7A0, sub_10050FA3C);
  v40 = type metadata accessor for Logger(0);
  sub_100048F64(v40, (uint64_t)qword_100A1EBC8);
  swift_errorRetain(a2);
  v41 = swift_errorRetain(a2);
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.error.getter(v42);
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(12, -1);
    v45 = swift_slowAlloc(32, -1);
    v122[0] = v45;
    *(_DWORD *)v44 = 136315138;
    swift_getErrorValue(a2, v124, v123);
    v46 = Error.localizedDescription.getter(v123[1], v123[2]);
    v48 = v47;
    v125 = sub_100040F58(v46, v47, v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v125, &v126, v44 + 4, v44 + 12);
    swift_bridgeObjectRelease(v48);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Failed query for books by seriesID: %s", v44, 0xCu);
    swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v44, -1, -1);

    swift_errorRelease(a2);
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    swift_errorRelease(a2);

  }
  v49 = 0;
LABEL_100:
  v52 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
  v122[0] = (uint64_t)v52;
  v107 = sub_10004CFD4(&qword_1009E9608);
  CheckedContinuation.resume(returning:)(v122, v107);
  swift_bridgeObjectRelease(v49);

}

uint64_t sub_100516F24(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009E965C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100326424;
  return sub_10050FABC(a1);
}

uint64_t sub_100516F74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009E9654);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000AE34;
  return sub_100514EE4(a1);
}

uint64_t sub_100516FC8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009E9634);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100329468;
  return sub_100513D50();
}

uint64_t sub_100517010()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009E962C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100329468;
  return sub_100514894();
}

uint64_t sub_100517058(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009E9624);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100329468;
  return sub_1005152A0(a1);
}

uint64_t sub_1005170A8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009E95FC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100329468;
  return sub_100515FC4(a1);
}

void sub_1005170F8(uint64_t a1)
{
  uint64_t v1;

  sub_100516290(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_100517104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 v7;

  v1 = sub_10004CFD4(&qword_1009E9608);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = ((*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v7 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v6, v5);
}

void sub_100517188(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(&qword_1009E9608) - 8) + 80);
  sub_1005163F0(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1005171E4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_100517288(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_10051736C(uint64_t a1)
{
  uint64_t v1;

  sub_100515700(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), &qword_1009E9608, (uint64_t)&unk_10090C940, (uint64_t)sub_1005173B0, (uint64_t)&unk_10090C958);
}

uint64_t sub_1005173A4()
{
  return sub_1000152E0(&qword_1009E9608);
}

uint64_t sub_1005173B0(uint64_t a1)
{
  return sub_10051741C(a1, &qword_1009E9608, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_100515848);
}

void sub_1005173C4(uint64_t a1)
{
  uint64_t v1;

  sub_100515700(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), &qword_1009E9640, (uint64_t)&unk_10090C9A8, (uint64_t)sub_100517408, (uint64_t)&unk_10090C9C0);
}

uint64_t sub_1005173FC()
{
  return sub_1000152E0(&qword_1009E9640);
}

uint64_t sub_100517408(uint64_t a1)
{
  return sub_10051741C(a1, &qword_1009E9640, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_10051418C);
}

uint64_t sub_10051741C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(a2) - 8) + 80);
  return a3(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), v3 + ((v5 + 32) & ~v5));
}

void sub_10051746C(uint64_t a1)
{
  uint64_t v1;

  sub_10050FE88(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100517478@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1005121AC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_100517490(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;

  v2 = type metadata accessor for StoreBookCollectionOptions(0, a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = sub_10004CFD4(qword_1009E9680);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v6 + v9) & ~v9;
  v11 = v4 | v9 | 7;
  v12 = ((*(_QWORD *)(v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  v13 = swift_bridgeObjectRelease(*(_QWORD *)(v1 + 24));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1 + v5, v2, v13);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1 + v10, v7);
  return swift_deallocObject(v1, v12, v11);
}

void sub_100517564(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(type metadata accessor for StoreBookCollectionOptions(0, a2) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v5 + *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(qword_1009E9680) - 8) + 80);
  sub_10051007C(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + v5, v2 + ((v6 + v7) & ~v7));
}

uint64_t sub_1005175E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_10004CFD4(qword_1009E9680);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100517660()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_10004CFD4(qword_1009E9680) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100512164(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1005176A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1005176D8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_100511FCC(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t sub_1005176E4(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for String - 1) + 8))();
  return a1;
}

uint64_t sub_100517740(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 0, 1, &v4, a1 + 32);
    return 0;
  }
  return result;
}

uint64_t sub_1005177AC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_10051785C + 4 * byte_10072AEE0[(v7 - 1)]))();
}

void sub_1005178AC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = &dword_100000004;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = &_mh_execute_header.magic + 1;
    }
  }
  else
  {
    v11 = 0;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for PopoverListFooter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10000D3D4(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PopoverListFooter);
}

uint64_t sub_100517A68(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 16);
  return swift_getOpaqueTypeConformance2(&v3, &unk_10087546C, 1);
}

uint64_t sub_100517A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t WitnessTable;
  uint64_t OpaqueTypeMetadata2;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char v26;
  char v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[16];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;

  v32 = a3;
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = type metadata accessor for PopoverListItem(0, v4, v3, a2);
  v30 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (_QWORD *)((char *)v28 - v6);
  v8 = type metadata accessor for ModifiedContent(0, v5, &type metadata for _FlexFrameLayout);
  v31 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)v28 - v9;
  WitnessTable = swift_getWitnessTable(&unk_100717448, v5);
  v39 = WitnessTable;
  v40 = &protocol witness table for _FlexFrameLayout;
  v28[0] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
  v37 = v8;
  v38 = v28[0];
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2(0, &v37, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 0);
  v29 = *(_QWORD *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)v28 - v16;
  v34 = v4;
  v35 = v3;
  v36 = v28[1];
  v18 = sub_1002B3B70(0, 0, (uint64_t (*)(void))sub_100517DD4, (uint64_t)v33, v4, v3, v7);
  v19 = static Alignment.center.getter(v18);
  v27 = 1;
  v26 = 1;
  View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(0, 1, 0, 1, 0, 1, 0x4049000000000000, 0, 0, v26, 0, v27, v19, v20, v5, WitnessTable);
  v21 = (*(uint64_t (**)(_QWORD *, uint64_t))(v30 + 8))(v7, v5);
  v22 = static VerticalEdge.Set.bottom.getter(v21);
  v23 = v28[0];
  View.listRowSeparator(_:edges:)(2, v22, v8, v28[0]);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v8);
  v37 = v8;
  v38 = v23;
  swift_getOpaqueTypeConformance2(&v37, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
  sub_100344038((uint64_t)v14, OpaqueTypeMetadata2, (uint64_t)v17);
  v24 = *(void (**)(char *, uint64_t))(v29 + 8);
  v24(v14, OpaqueTypeMetadata2);
  sub_100341C00((uint64_t)v17, OpaqueTypeMetadata2, v32);
  return ((uint64_t (*)(char *, uint64_t))v24)(v17, OpaqueTypeMetadata2);
}

uint64_t sub_100517D40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  __chkstk_darwin(a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100344038(v8, v9, (uint64_t)v7);
  sub_100341C00((uint64_t)v7, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, a2);
}

uint64_t sub_100517DD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100517D40(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_100517DE0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v4 = type metadata accessor for PopoverListItem(255, *a1, a1[1], a4);
  v5 = type metadata accessor for ModifiedContent(255, v4, &type metadata for _FlexFrameLayout);
  v7[2] = swift_getWitnessTable(&unk_100717448, v4);
  v7[3] = &protocol witness table for _FlexFrameLayout;
  v7[0] = v5;
  v7[1] = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  return swift_getOpaqueTypeConformance2(v7, &opaque type descriptor for <<opaque return type of View.listRowSeparator(_:edges:)>>, 1);
}

uint64_t sub_100517E70(uint64_t a1, unint64_t a2, Swift::UInt a3, char a4)
{
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v7 = a2 >> 8;
  v8 = a2 >> 16;
  v9 = a4 & 1;
  v10 = PageNavigationStyle.rawValue.getter(a2);
  v12 = v11;
  String.hash(into:)(a1, v10, v11);
  swift_bridgeObjectRelease(v12);
  v13 = ThemeAppearance.rawValue.getter(v7);
  v15 = v14;
  String.hash(into:)(a1, v13, v14);
  swift_bridgeObjectRelease(v15);
  v16 = BookThemeType.rawValue.getter(v8);
  v18 = v17;
  String.hash(into:)(a1, v16, v17);
  swift_bridgeObjectRelease(v18);
  v19 = BookThemeVariant.rawValue.getter(BYTE3(a2) & 1);
  v21 = v20;
  String.hash(into:)(a1, v19, v20);
  swift_bridgeObjectRelease(v21);
  Hasher._combine(_:)(BYTE4(a2) & 1);
  Hasher._combine(_:)(a3);
  v22 = PageProgressDirection.rawValue.getter(v9);
  v24 = v23;
  String.hash(into:)(a1, v22, v23);
  return swift_bridgeObjectRelease(v24);
}

Swift::Int sub_100517F8C(unint64_t a1, Swift::UInt a2, char a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[9];

  v5 = a1 >> 8;
  v6 = a1 >> 16;
  v7 = a3 & 1;
  Hasher.init(_seed:)(v24, 0);
  v8 = PageNavigationStyle.rawValue.getter(a1);
  v10 = v9;
  String.hash(into:)(v24, v8, v9);
  swift_bridgeObjectRelease(v10);
  v11 = ThemeAppearance.rawValue.getter(v5);
  v13 = v12;
  String.hash(into:)(v24, v11, v12);
  swift_bridgeObjectRelease(v13);
  v14 = BookThemeType.rawValue.getter(v6);
  v16 = v15;
  String.hash(into:)(v24, v14, v15);
  swift_bridgeObjectRelease(v16);
  v17 = BookThemeVariant.rawValue.getter(BYTE3(a1) & 1);
  v19 = v18;
  String.hash(into:)(v24, v17, v18);
  swift_bridgeObjectRelease(v19);
  Hasher._combine(_:)(BYTE4(a1) & 1);
  Hasher._combine(_:)(a2);
  v20 = PageProgressDirection.rawValue.getter(v7);
  v22 = v21;
  String.hash(into:)(v24, v20, v21);
  swift_bridgeObjectRelease(v22);
  return Hasher._finalize()();
}

Swift::Int sub_1005180C4()
{
  unsigned __int16 *v0;
  uint64_t v1;
  unint64_t v2;
  const mach_header_64 *v3;

  v1 = 0x1000000;
  if (!*((_BYTE *)v0 + 3))
    v1 = 0;
  v2 = *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 2) << 16) | v1;
  v3 = &_mh_execute_header;
  if (!*((_BYTE *)v0 + 4))
    v3 = 0;
  return sub_100517F8C(v2 | (unint64_t)v3, *((_QWORD *)v0 + 1), *((_BYTE *)v0 + 16));
}

uint64_t sub_100518104(uint64_t a1)
{
  unsigned __int16 *v1;
  uint64_t v2;
  unint64_t v3;
  const mach_header_64 *v4;

  v2 = 0x1000000;
  if (!*((_BYTE *)v1 + 3))
    v2 = 0;
  v3 = *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 2) << 16) | v2;
  v4 = &_mh_execute_header;
  if (!*((_BYTE *)v1 + 4))
    v4 = 0;
  return sub_100517E70(a1, v3 | (unint64_t)v4, *((_QWORD *)v1 + 1), *((_BYTE *)v1 + 16));
}

Swift::Int sub_100518144(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  Swift::UInt8 v3;
  Swift::UInt v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[9];

  v2 = v1[3];
  v3 = v1[4];
  v4 = *((_QWORD *)v1 + 1);
  v5 = v1[16];
  v6 = *v1;
  v7 = v1[1];
  v8 = v1[2];
  Hasher.init(_seed:)(v25, a1);
  v9 = PageNavigationStyle.rawValue.getter(v6);
  v11 = v10;
  String.hash(into:)(v25, v9, v10);
  swift_bridgeObjectRelease(v11);
  v12 = ThemeAppearance.rawValue.getter(v7);
  v14 = v13;
  String.hash(into:)(v25, v12, v13);
  swift_bridgeObjectRelease(v14);
  v15 = BookThemeType.rawValue.getter(v8);
  v17 = v16;
  String.hash(into:)(v25, v15, v16);
  swift_bridgeObjectRelease(v17);
  v18 = BookThemeVariant.rawValue.getter(v2);
  v20 = v19;
  String.hash(into:)(v25, v18, v19);
  swift_bridgeObjectRelease(v20);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  v21 = PageProgressDirection.rawValue.getter(v5);
  v23 = v22;
  String.hash(into:)(v25, v21, v22);
  swift_bridgeObjectRelease(v23);
  return Hasher._finalize()();
}

uint64_t sub_100518288(unsigned __int16 *a1, unsigned __int16 *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  const mach_header_64 *v7;
  unint64_t v8;
  unint64_t v9;
  const mach_header_64 *v10;

  v2 = *((_QWORD *)a1 + 1);
  v3 = *((_BYTE *)a1 + 16);
  v4 = 0x1000000;
  if (*((_BYTE *)a1 + 3))
    v5 = 0x1000000;
  else
    v5 = 0;
  v6 = *a1 | ((unint64_t)*((unsigned __int8 *)a1 + 2) << 16) | v5;
  if (*((_BYTE *)a1 + 4))
    v7 = &_mh_execute_header;
  else
    v7 = 0;
  v8 = v6 | (unint64_t)v7;
  if (!*((_BYTE *)a2 + 3))
    v4 = 0;
  v9 = *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 2) << 16) | v4;
  if (*((_BYTE *)a2 + 4))
    v10 = &_mh_execute_header;
  else
    v10 = 0;
  return sub_100518C20(v8, v2, v3, v9 | (unint64_t)v10, *((_QWORD *)a2 + 1), *((_BYTE *)a2 + 16));
}

void sub_100518300(unsigned __int8 *a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t Strong;
  int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned __int8 *v24;
  uint64_t v25;
  void (*v26)(char *, unsigned __int8 *, uint64_t);
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 *v31;
  void (*v32)(unsigned __int8 *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  void *v43;
  int v44;
  int v45;
  _BYTE v46[8];
  uint64_t v47;
  char v48;
  char v49[24];

  v6 = type metadata accessor for BookThemeEntity(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009E9790);
  __chkstk_darwin(v10);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v41 - v17;
  a2 += 16;
  swift_beginAccess(a2, v49, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v20 = a3 & 1;
    v21 = *(int *)(v10 + 48);
    v22 = &v18[v21];
    v42 = v12;
    v43 = (void *)Strong;
    v23 = *(int *)(v10 + 64);
    v24 = &a1[v21];
    LODWORD(v21) = *a1;
    v44 = v20;
    v45 = v21;
    *v18 = v21;
    v25 = v7;
    v26 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v7 + 16);
    v27 = v15;
    v28 = v6;
    v29 = v25;
    v26(v22, v24, v28);
    v30 = a1[v23];
    v18[v23] = v30;
    LOBYTE(v23) = v30;
    v31 = &v27[*(int *)(v10 + 48)];
    *v27 = v45;
    v32 = *(void (**)(unsigned __int8 *, char *, uint64_t))(v29 + 32);
    v32(v31, v22, v28);
    v27[*(int *)(v10 + 64)] = v23;
    v33 = &v42[*(int *)(v10 + 48)];
    v26(v33, v31, v28);
    v34 = ((uint64_t (*)(char *, char *, uint64_t))v32)(v9, v33, v28);
    v35 = BookThemeEntity.themeType.getter(v34);
    LOBYTE(v31) = v35;
    LOBYTE(v32) = BookThemeEntity.variant.getter(v35) & 1;
    v37 = BookThemeEntity.hasDarkBackground.getter(v36);
    LOBYTE(v33) = v37;
    sub_10063B820(v37);
    v39 = v38;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
    sub_100010960((uint64_t)v27, (uint64_t *)&unk_1009E9790);
    v40 = v43;
    v46[0] = v23;
    v46[1] = v45;
    v46[2] = (_BYTE)v31;
    v46[3] = (_BYTE)v32;
    v46[4] = v33 & 1;
    v47 = v39;
    v48 = v44;
    CurrentValueSubject.value.setter(v46);

  }
}

double sub_100518548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t ObjectType;
  id (*v12)();
  void *v13;
  double result;
  void *v15;
  id (*v16)();
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD aBlock[3];
  void *v35;
  id (*v36)();
  uint64_t v37;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v1 - 8);
  v32 = v1;
  __chkstk_darwin(v1);
  v30 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS.QoSClass(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books21BookReaderDataManager_bookProviderService + 8);
  ObjectType = swift_getObjectType();
  dispatch thunk of BookProviding.bookEntity.getter(aBlock, ObjectType, v10);
  v13 = v35;
  v12 = v36;
  sub_10003F198(aBlock, (uint64_t)v35);
  LOBYTE(v12) = dispatch thunk of BookEntityType.isStoreBook.getter(v13, v12);
  _s5Books15CurrentPageViewVwxx_0(aBlock);
  if ((v12 & 1) != 0)
  {
    dispatch thunk of BookProviding.bookEntity.getter(aBlock, ObjectType, v10);
    v15 = v35;
    v16 = v36;
    sub_10003F198(aBlock, (uint64_t)v35);
    v17 = dispatch thunk of BookEntityType.storeID.getter(v15, v16);
    v19 = v18;
    _s5Books15CurrentPageViewVwxx_0(aBlock);
    sub_100059BB4();
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchQoS.QoSClass.utility(_:), v6);
    v20 = (void *)static OS_dispatch_queue.global(qos:)(v9);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v21 = swift_allocObject(&unk_10090CD00, 32, 7);
    *(_QWORD *)(v21 + 16) = v17;
    *(_QWORD *)(v21 + 24) = v19;
    v36 = sub_100518EF0;
    v37 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    v35 = &unk_10090CD18;
    v22 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter(v22);
    v33 = _swiftEmptyArrayStorage;
    v23 = sub_100008E8C();
    v24 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v25 = sub_100065324();
    v26 = v30;
    v27 = v32;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v33, v24, v25, v32, v23);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v5, v26, v22);
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v29);
    *(_QWORD *)&result = swift_release(v37).n128_u64[0];
  }
  return result;
}

id sub_10051881C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id result;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - v4;
  v6 = (void *)objc_opt_self(AEUserPublishing);
  result = objc_msgSend(v6, "sharedInstance");
  if (!result)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v8 = result;
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "storeShortURLForStoreId:dataSource:", v9, 0);

  if (v10)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v10);

    v11 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 0, 1, v11);
  }
  else
  {
    v12 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
  }
  sub_100010960((uint64_t)v5, (uint64_t *)&unk_1009D23D0);
  result = objc_msgSend(v6, "sharedInstance");
  if (!result)
    goto LABEL_11;
  v13 = result;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "storeURLForStoreId:dataSource:", v14, 0);

  if (v15)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v15);

    v16 = type metadata accessor for URL(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v2, 0, 1, v16);
  }
  else
  {
    v17 = type metadata accessor for URL(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v2, 1, 1, v17);
  }
  return (id)sub_100010960((uint64_t)v2, (uint64_t *)&unk_1009D23D0);
}

uint64_t type metadata accessor for BookReaderDataManager()
{
  return objc_opt_self(_TtC5Books21BookReaderDataManager);
}

uint64_t getEnumTagSinglePayload for _BookReaderDataManagerState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 3);
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for _BookReaderDataManagerState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 3) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for _BookReaderDataManagerState()
{
  return &type metadata for _BookReaderDataManagerState;
}

unint64_t sub_100518BDC()
{
  unint64_t result;

  result = qword_1009E9780;
  if (!qword_1009E9780)
  {
    result = swift_getWitnessTable(&unk_10072AFCC, &type metadata for _BookReaderDataManagerState);
    atomic_store(result, (unint64_t *)&qword_1009E9780);
  }
  return result;
}

uint64_t sub_100518C20(unint64_t a1, uint64_t a2, char a3, unint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v12 = PageNavigationStyle.rawValue.getter(a1);
  v14 = v13;
  v16 = PageNavigationStyle.rawValue.getter(a4);
  v17 = v15;
  if (v12 == v16 && v14 == v15)
  {
    swift_bridgeObjectRelease_n(v14, 2);
  }
  else
  {
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v16, v15, 0);
    swift_bridgeObjectRelease(v14);
    swift_bridgeObjectRelease(v17);
    v19 = 0;
    if ((v18 & 1) == 0)
      return v19 & 1;
  }
  v20 = ThemeAppearance.rawValue.getter(a1 >> 8);
  v22 = v21;
  v24 = ThemeAppearance.rawValue.getter(a4 >> 8);
  v25 = v23;
  if (v20 == v24 && v22 == v23)
  {
    swift_bridgeObjectRelease_n(v22, 2);
  }
  else
  {
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v24, v23, 0);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v25);
    v19 = 0;
    if ((v26 & 1) == 0)
      return v19 & 1;
  }
  v27 = BookThemeType.rawValue.getter(a1 >> 16);
  v29 = v28;
  v31 = BookThemeType.rawValue.getter(a4 >> 16);
  v32 = v30;
  if (v27 == v31 && v29 == v30)
  {
    swift_bridgeObjectRelease_n(v29, 2);
  }
  else
  {
    v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v29, v31, v30, 0);
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease(v32);
    v19 = 0;
    if ((v33 & 1) == 0)
      return v19 & 1;
  }
  v34 = BookThemeVariant.rawValue.getter(BYTE3(a1) & 1);
  v36 = v35;
  v38 = BookThemeVariant.rawValue.getter(BYTE3(a4) & 1);
  v39 = v37;
  if (v34 == v38 && v36 == v37)
  {
    swift_bridgeObjectRelease_n(v36, 2);
    v19 = 0;
    if ((BYTE4(a1) & 1) != (BYTE4(a4) & 1))
      return v19 & 1;
  }
  else
  {
    v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v36, v38, v37, 0);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v39);
    v19 = 0;
    if ((v40 & 1) == 0 || (BYTE4(a1) & 1) != (BYTE4(a4) & 1))
      return v19 & 1;
  }
  if (a2 == a5)
  {
    v41 = a3 & 1;
    v42 = a6 & 1;
    v43 = PageProgressDirection.rawValue.getter(v41);
    v45 = v44;
    v47 = PageProgressDirection.rawValue.getter(v42);
    v48 = v46;
    if (v43 == v47 && v45 == v46)
    {
      v19 = 1;
      v48 = v45;
    }
    else
    {
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v45, v47, v46, 0);
    }
    swift_bridgeObjectRelease(v45);
    swift_bridgeObjectRelease(v48);
  }
  return v19 & 1;
}

uint64_t sub_100518ECC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_100518EF0()
{
  return sub_10051881C();
}

ValueMetadata *type metadata accessor for RERootContainerRenderMode()
{
  return &type metadata for RERootContainerRenderMode;
}

uint64_t sub_100518F08(char a1)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  Class isa;
  NSString v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  Swift::String v30;
  Swift::String v31;

  if ((a1 & 1) == 0)
  {
    v2 = _swiftEmptyArrayStorage;
    if ((a1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v2 = sub_100043ED0(0, 1, 1, _swiftEmptyArrayStorage);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_100043ED0((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v5 = &v2[2 * v4];
  v5[4] = 0x656C746974;
  v5[5] = 0xE500000000000000;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      v2 = sub_100043ED0(0, v2[2] + 1, 1, v2);
    v7 = v2[2];
    v6 = v2[3];
    if (v7 >= v6 >> 1)
      v2 = sub_100043ED0((_QWORD *)(v6 > 1), v7 + 1, 1, v2);
    v2[2] = v7 + 1;
    v8 = &v2[2 * v7];
    v8[4] = 0x726564616568;
    v8[5] = 0xE600000000000000;
  }
LABEL_12:
  if ((a1 & 0x40) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      v2 = sub_100043ED0(0, v2[2] + 1, 1, v2);
    v10 = v2[2];
    v9 = v2[3];
    if (v10 >= v9 >> 1)
      v2 = sub_100043ED0((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
    v2[2] = v10 + 1;
    v11 = &v2[2 * v10];
    v11[4] = 0x6165487974706D65;
    v11[5] = 0xEB00000000726564;
    if ((a1 & 4) == 0)
    {
LABEL_14:
      if ((a1 & 8) == 0)
        goto LABEL_15;
      goto LABEL_28;
    }
  }
  else if ((a1 & 4) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100043ED0(0, v2[2] + 1, 1, v2);
  v13 = v2[2];
  v12 = v2[3];
  if (v13 >= v12 >> 1)
    v2 = sub_100043ED0((_QWORD *)(v12 > 1), v13 + 1, 1, v2);
  v2[2] = v13 + 1;
  v14 = &v2[2 * v13];
  v14[4] = 0x79726F74736968;
  v14[5] = 0xE700000000000000;
  if ((a1 & 8) == 0)
  {
LABEL_15:
    if ((a1 & 0x10) == 0)
      goto LABEL_16;
    goto LABEL_33;
  }
LABEL_28:
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100043ED0(0, v2[2] + 1, 1, v2);
  v16 = v2[2];
  v15 = v2[3];
  if (v16 >= v15 >> 1)
    v2 = sub_100043ED0((_QWORD *)(v15 > 1), v16 + 1, 1, v2);
  v2[2] = v16 + 1;
  v17 = &v2[2 * v16];
  v17[4] = 0x65736F6C63;
  v17[5] = 0xE500000000000000;
  if ((a1 & 0x10) == 0)
  {
LABEL_16:
    if ((a1 & 0x20) == 0)
      goto LABEL_43;
    goto LABEL_38;
  }
LABEL_33:
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100043ED0(0, v2[2] + 1, 1, v2);
  v19 = v2[2];
  v18 = v2[3];
  if (v19 >= v18 >> 1)
    v2 = sub_100043ED0((_QWORD *)(v18 > 1), v19 + 1, 1, v2);
  v2[2] = v19 + 1;
  v20 = &v2[2 * v19];
  v20[4] = 1970169197;
  v20[5] = 0xE400000000000000;
  if ((a1 & 0x20) != 0)
  {
LABEL_38:
    if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      v2 = sub_100043ED0(0, v2[2] + 1, 1, v2);
    v22 = v2[2];
    v21 = v2[3];
    if (v22 >= v21 >> 1)
      v2 = sub_100043ED0((_QWORD *)(v21 > 1), v22 + 1, 1, v2);
    v2[2] = v22 + 1;
    v23 = &v2[2 * v22];
    v23[4] = 0x6E657A6F7266;
    v23[5] = 0xE600000000000000;
  }
LABEL_43:
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v2);
  v25 = String._bridgeToObjectiveC()();
  v26 = -[objc_class componentsJoinedByString:](isa, "componentsJoinedByString:", v25);

  v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v30._countAndFlagsBits = v27;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v29);
  v31._countAndFlagsBits = 93;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  return 91;
}

uint64_t sub_100519358()
{
  _QWORD *v0;

  return sub_100518F08(*v0);
}

uint64_t sub_100519360@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1001DFDD8(a1);
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

unint64_t sub_1005193A0()
{
  unint64_t result;

  result = qword_1009E97A0;
  if (!qword_1009E97A0)
  {
    result = swift_getWitnessTable(&unk_10072B0BC, &type metadata for RERootContainerRenderMode);
    atomic_store(result, (unint64_t *)&qword_1009E97A0);
  }
  return result;
}

unint64_t sub_1005193E8()
{
  unint64_t result;

  result = qword_1009E97A8;
  if (!qword_1009E97A8)
  {
    result = swift_getWitnessTable(&unk_10072B08C, &type metadata for RERootContainerRenderMode);
    atomic_store(result, (unint64_t *)&qword_1009E97A8);
  }
  return result;
}

unint64_t sub_100519430()
{
  unint64_t result;

  result = qword_1009E97B0;
  if (!qword_1009E97B0)
  {
    result = swift_getWitnessTable(&unk_10072B0E4, &type metadata for RERootContainerRenderMode);
    atomic_store(result, (unint64_t *)&qword_1009E97B0);
  }
  return result;
}

unint64_t sub_100519478()
{
  unint64_t result;

  result = qword_1009E97B8;
  if (!qword_1009E97B8)
  {
    result = swift_getWitnessTable(&unk_10072B11C, &type metadata for RERootContainerRenderMode);
    atomic_store(result, (unint64_t *)&qword_1009E97B8);
  }
  return result;
}

uint64_t sub_1005194BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[24];

  objc_msgSend((id)objc_opt_self(JSAStoreHTTPRequest), "incrementPostLaunchCacheCount");
  objc_msgSend((id)objc_opt_self(TUIResourceLoader), "incrementPostLaunchCacheCount");
  v3 = type metadata accessor for OfflineCache(0);
  result = static OfflineCache.runFromCache.getter(v3);
  if ((result & 1) != 0)
  {
    v5 = a2 + 16;
    swift_beginAccess(v5, v9, 0, 0);
    result = swift_unknownObjectWeakLoadStrong(v5);
    if (result)
    {
      v6 = (char *)result;
      v7 = OBJC_IVAR___BKOfflineCacheLoadingController_cancellable;
      v8 = *(_QWORD *)(result + OBJC_IVAR___BKOfflineCacheLoadingController_cancellable);
      if (v8)
      {
        swift_retain(*(_QWORD *)(result + OBJC_IVAR___BKOfflineCacheLoadingController_cancellable));
        AnyCancellable.cancel()();
        swift_release(v8);
        v8 = *(_QWORD *)&v6[v7];
      }
      *(_QWORD *)&v6[v7] = 0;

      return swift_release(v8);
    }
  }
  return result;
}

id OfflineCacheLoadingController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OfflineCacheLoadingController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

NSString sub_1005195CC()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100A1EBE0 = (uint64_t)result;
  return result;
}

uint64_t sub_100519600()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100519624(uint64_t a1)
{
  uint64_t v1;

  return sub_1005194BC(a1, v1);
}

void sub_10051962C()
{
  qword_1009E9820 = 0x4024000000000000;
}

void sub_10051963C()
{
  qword_1009E9828 = 0x4038000000000000;
}

void sub_10051964C()
{
  qword_1009E9830 = 0x4040000000000000;
}

id sub_10051965C()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;
  id v7;
  id v8;

  v0 = type metadata accessor for ArtworkShadowView();
  v1 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v0)), "init");
  v2 = objc_msgSend(v1, "layer");
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v4 = objc_msgSend(v3, "CGColor");

  objc_msgSend(v2, "setShadowColor:", v4);
  v5 = objc_msgSend(v1, "layer");
  LODWORD(v6) = 1036831949;
  objc_msgSend(v5, "setShadowOpacity:", v6);

  v7 = objc_msgSend(v1, "layer");
  objc_msgSend(v7, "shadowOffset");
  objc_msgSend(v7, "setShadowOffset:");

  v8 = objc_msgSend(v1, "layer");
  objc_msgSend(v8, "setShadowRadius:", 5.0);

  return v1;
}

id sub_1005197B8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView____lazy_storage___artworkImageView;
  v2 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView____lazy_storage___artworkImageView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView____lazy_storage___artworkImageView);
  }
  else
  {
    v4 = sub_10051E7B0();
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_100519814()
{
  id v0;
  id v1;
  id v2;
  double v3;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = sub_1005D55EC((uint64_t)UIFontTextStyleSubheadline, (uint64_t)UIContentSizeCategoryAccessibilityLarge);
  objc_msgSend(v0, "setFont:", v1);

  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryAccessibilityExtraExtraLarge);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksLabelColor");
  objc_msgSend(v0, "setTextColor:", v2);

  objc_msgSend(v0, "setLineBreakMode:", 2);
  LODWORD(v3) = 1132068864;
  objc_msgSend(v0, "setContentHuggingPriority:forAxis:", 0, v3);
  return v0;
}

id sub_10051992C()
{
  id v0;
  id v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v1 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v0, "setFont:", v1);

  objc_msgSend(v0, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v0, "setMaximumContentSizeCategory:", UIContentSizeCategoryLarge);
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksSecondaryLabelColor");
  objc_msgSend(v0, "setTextColor:", v2);

  objc_msgSend(v0, "setLineBreakMode:", 2);
  return v0;
}

char *sub_100519A2C()
{
  uint64_t v0;
  char *v1;
  id v2;
  double v3;
  void *v4;
  id v5;
  char *result;
  void *v7;
  char *v8;
  char *v9;
  NSString v10;

  v0 = type metadata accessor for NowPlayingTransportButton();
  v1 = (char *)objc_msgSend((id)swift_getObjCClassFromMetadata(v0), "buttonWithType:", 0);
  v2 = objc_msgSend(v1, "imageView");
  if (v2)
  {
    v4 = v2;
    v5 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksLabelColor");
    objc_msgSend(v4, "setTintColor:", v5);

  }
  LODWORD(v3) = 1148846080;
  objc_msgSend(v1, "setContentHuggingPriority:forAxis:", 0, v3);
  if (qword_1009CE7C0 != -1)
    swift_once(&qword_1009CE7C0, sub_10051964C);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidth] = qword_1009E9830;
  result = *(char **)&v1[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
  if (result)
  {
    objc_msgSend(result, "setConstant:");
    objc_msgSend(v1, "invalidateIntrinsicContentSize");
    v7 = (void *)objc_opt_self(MPButton);
    v8 = v1;
    objc_msgSend(v7, "easyTouchDefaultHitRectInsets");
    objc_msgSend(v8, "setHitRectInsets:");

    v9 = v8;
    v10 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setAccessibilityIdentifier:", v10);

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_100519BE0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  char *v6;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  id v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  id v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  id v40;
  id v41;
  objc_class *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  id v88;
  uint64_t v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  void *v105;
  char *v106;
  id v107;
  id v108;
  id v109;
  uint64_t v110;
  void *v111;
  char *v112;
  id v113;
  uint64_t v114;
  void *v115;
  char *v116;
  id v117;
  void *v118;
  char *v119;
  id v120;
  void *v121;
  char *v122;
  id v123;
  void *v124;
  char *v125;
  id v126;
  char *v127;
  char *v128;
  char *result;
  char *v130;
  uint64_t v131;
  id v132;
  char *v133;
  uint64_t v134;
  id v135;
  void *v136;
  uint64_t v137;
  Class isa;
  void *v139;
  void *v140;
  void *v141;
  char *v142;
  NSString v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  uint64_t v154;
  uint64_t v155;
  objc_super v156;
  uint64_t v157;

  v6 = v5;
  v11 = &v5[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonView]);
  v12 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_artworkWrapperView;
  v13 = v5;
  v155 = v12;
  *(_QWORD *)&v5[v12] = sub_10051965C();
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView____lazy_storage___artworkImageView] = 0;
  v14 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleContainer;
  if (qword_1009CE7B0 != -1)
    swift_once(&qword_1009CE7B0, sub_10051962C);
  v15 = *(double *)&qword_1009E9820;
  v16 = objc_msgSend(objc_allocWithZone((Class)MPUMarqueeView), "init");
  objc_msgSend(v16, "setFadeEdgeInsets:", 0.0, v15, 0.0, v15);
  if (qword_1009CE7B8 != -1)
    swift_once(&qword_1009CE7B8, sub_10051963C);
  v17 = *(double *)&qword_1009E9828;
  objc_msgSend(v16, "setContentGap:", *(double *)&qword_1009E9828);
  objc_msgSend(v16, "setUserInteractionEnabled:", 0);
  LODWORD(v18) = 1132068864;
  objc_msgSend(v16, "setContentCompressionResistancePriority:forAxis:", 0, v18);
  v149 = v14;
  *(_QWORD *)&v13[v14] = v16;
  v19 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleLabel;
  *(_QWORD *)&v13[v19] = sub_100519814();
  v20 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleContainer;
  v148 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleContainer;
  v21 = *(double *)&qword_1009E9820;
  v22 = objc_msgSend(objc_allocWithZone((Class)MPUMarqueeView), "init");
  objc_msgSend(v22, "setFadeEdgeInsets:", 0.0, v21, 0.0, v21);
  objc_msgSend(v22, "setContentGap:", v17);
  objc_msgSend(v22, "setUserInteractionEnabled:", 0);
  LODWORD(v23) = 1132068864;
  objc_msgSend(v22, "setContentCompressionResistancePriority:forAxis:", 0, v23);
  *(_QWORD *)&v13[v20] = v22;
  v24 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleLabel;
  *(_QWORD *)&v13[v24] = sub_10051992C();
  v25 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardButton;
  v26 = sub_100519A2C();
  *(_QWORD *)&v13[v25] = v26;
  v27 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingButton;
  v28 = sub_100519A2C();
  *(_QWORD *)&v13[v27] = v28;
  v29 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardButton;
  v30 = sub_100519A2C();
  *(_QWORD *)&v13[v29] = v30;
  v31 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonGuide;
  *(_QWORD *)&v13[v31] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v32 = v31;
  v147 = v31;
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_cachedGroupedLabelsAXElement] = 0;
  v33 = &v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  v34 = *(_OWORD *)(a1 + 48);
  v36 = *(_OWORD *)a1;
  v35 = *(_OWORD *)(a1 + 16);
  *((_OWORD *)v33 + 2) = *(_OWORD *)(a1 + 32);
  *((_OWORD *)v33 + 3) = v34;
  *(_OWORD *)v33 = v36;
  *((_OWORD *)v33 + 1) = v35;
  v38 = *(_OWORD *)(a1 + 80);
  v37 = *(_OWORD *)(a1 + 96);
  v39 = *(_OWORD *)(a1 + 64);
  v33[112] = *(_BYTE *)(a1 + 112);
  *((_OWORD *)v33 + 5) = v38;
  *((_OWORD *)v33 + 6) = v37;
  *((_OWORD *)v33 + 4) = v39;
  v40 = objc_allocWithZone((Class)UILayoutGuide);
  sub_10033FD38(a1);
  v41 = objc_msgSend(v40, "init");
  v152 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v42 = (objc_class *)type metadata accessor for NowPlayingVibrancyEffectView();
  v43 = objc_allocWithZone(v42);
  v44 = sub_10055C90C(v26, 0);
  v151 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardVibrancyContainerView;
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardVibrancyContainerView] = v44;
  v45 = objc_allocWithZone(v42);
  v46 = sub_10055C90C(v28, 0);
  v154 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingVibrancyContainerView;
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingVibrancyContainerView] = v46;
  v47 = objc_allocWithZone(v42);
  v48 = sub_10055C90C(v30, 0);
  v150 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardVibrancyContainerView;
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardVibrancyContainerView] = v48;
  v49 = objc_msgSend(v41, "leadingAnchor");
  v50 = objc_msgSend(*(id *)&v6[v155], "trailingAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_contentLeadingConstraint] = v51;
  v52 = objc_msgSend(*(id *)&v13[v32], "leadingAnchor");
  v53 = objc_msgSend(v41, "trailingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_contentTrailingConstraint] = v54;
  v55 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v56 = swift_allocObject(v55, 40, 7);
  *(_OWORD *)(v56 + 16) = xmmword_1007118F0;
  v57 = objc_msgSend(*(id *)&v13[v149], "bottomAnchor");
  v58 = objc_msgSend(*(id *)&v13[v148], "topAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v56 + 32) = v59;
  v157 = v56;
  specialized Array._endMutation()(v60);
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleVisibleConstraints] = v56;
  v61 = swift_allocObject(v55, 40, 7);
  *(_OWORD *)(v61 + 16) = xmmword_1007118F0;
  v62 = objc_msgSend(*(id *)&v13[v149], "bottomAnchor");
  v63 = objc_msgSend(v41, "bottomAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v61 + 32) = v64;
  v157 = v61;
  specialized Array._endMutation()(v65);
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleHiddenConstraints] = v61;
  v66 = swift_allocObject(v55, 40, 7);
  *(_OWORD *)(v66 + 16) = xmmword_1007118F0;
  v67 = objc_msgSend(*(id *)&v13[v147], "widthAnchor");
  v68 = objc_msgSend(v67, "constraintEqualToConstant:", 0.0);

  *(_QWORD *)(v66 + 32) = v68;
  v157 = v66;
  specialized Array._endMutation()(v69);
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonHiddenConstraints] = v66;
  v70 = objc_msgSend(*(id *)&v13[v147], "heightAnchor");
  v71 = objc_msgSend(v70, "constraintEqualToConstant:", 0.0);

  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonHeightConstraint] = v71;
  v72 = objc_msgSend(v152, "leadingAnchor");
  v73 = objc_msgSend(*(id *)&v13[v147], "trailingAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonTrailingConstraint] = v74;
  v75 = objc_msgSend(v152, "heightAnchor");
  v76 = objc_msgSend(v75, "constraintEqualToConstant:", 0.0);

  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_controlHeightConstraint] = v76;
  v77 = objc_msgSend(*(id *)&v13[v150], "leadingAnchor");
  v78 = objc_msgSend(*(id *)&v13[v154], "trailingAnchor");
  v79 = objc_msgSend(v77, "constraintEqualToAnchor:", v78);

  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardLeadingConstraint] = v79;
  v80 = swift_allocObject(v55, 40, 7);
  *(_OWORD *)(v80 + 16) = xmmword_1007118F0;
  v81 = objc_msgSend(v152, "trailingAnchor");
  v82 = objc_msgSend(*(id *)&v13[v150], "trailingAnchor");
  v83 = objc_msgSend(v81, "constraintEqualToAnchor:", v82);

  *(_QWORD *)(v80 + 32) = v83;
  v157 = v80;
  specialized Array._endMutation()(v84);
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardVisibleConstraints] = v80;
  v85 = swift_allocObject(v55, 40, 7);
  *(_OWORD *)(v85 + 16) = xmmword_1007118F0;
  v86 = objc_msgSend(v152, "trailingAnchor");
  v87 = objc_msgSend(*(id *)&v13[v154], "trailingAnchor");
  v88 = objc_msgSend(v86, "constraintEqualToAnchor:", v87);

  *(_QWORD *)(v85 + 32) = v88;
  v157 = v85;
  specialized Array._endMutation()(v89);
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardHiddenConstraints] = v85;
  v90 = objc_msgSend(*(id *)&v13[v154], "leadingAnchor");
  v91 = objc_msgSend(*(id *)&v13[v151], "trailingAnchor");
  v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardTrailingConstraint] = v92;
  v93 = swift_allocObject(v55, 40, 7);
  *(_OWORD *)(v93 + 16) = xmmword_1007118F0;
  v94 = objc_msgSend(v152, "leadingAnchor");
  v95 = objc_msgSend(*(id *)&v13[v151], "leadingAnchor");
  v96 = objc_msgSend(v94, "constraintEqualToAnchor:", v95);

  *(_QWORD *)(v93 + 32) = v96;
  v157 = v93;
  specialized Array._endMutation()(v97);
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardVisibleConstraints] = v93;
  v98 = swift_allocObject(v55, 40, 7);
  *(_OWORD *)(v98 + 16) = xmmword_1007118F0;
  v99 = objc_msgSend(v152, "leadingAnchor");
  v100 = objc_msgSend(*(id *)&v13[v154], "leadingAnchor");
  v101 = objc_msgSend(v99, "constraintEqualToAnchor:", v100);

  *(_QWORD *)(v98 + 32) = v101;
  v157 = v98;
  specialized Array._endMutation()(v102);
  *(_QWORD *)&v13[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardHiddenConstraints] = v98;

  v156.receiver = v13;
  v156.super_class = (Class)type metadata accessor for AudiobookNowPlayingMiniTouchView();
  v103 = (char *)objc_msgSendSuper2(&v156, "initWithFrame:", a2, a3, a4, a5);
  v104 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_artworkWrapperView;
  v105 = *(void **)&v103[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_artworkWrapperView];
  v106 = v103;
  v107 = v105;
  objc_msgSend(v107, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v106, "addSubview:", v107);

  v108 = *(id *)&v103[v104];
  v109 = sub_1005197B8();
  objc_msgSend(v109, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v108, "addSubview:", v109);

  objc_msgSend(v106, "addLayoutGuide:", v41);
  v110 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleContainer;
  v111 = *(void **)&v106[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleContainer];
  v112 = v106;
  v113 = v111;
  objc_msgSend(v113, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v112, "addSubview:", v113);

  v114 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleContainer;
  v115 = *(void **)&v112[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleContainer];
  v116 = v112;
  v117 = v115;
  objc_msgSend(v117, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v116, "addSubview:", v117);

  objc_msgSend(v116, "addLayoutGuide:", *(_QWORD *)&v116[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonGuide]);
  objc_msgSend(v116, "addLayoutGuide:", v152);
  v118 = *(void **)&v116[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardVibrancyContainerView];
  v119 = v116;
  v120 = v118;
  objc_msgSend(v120, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v119, "addSubview:", v120);

  v121 = *(void **)&v119[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingVibrancyContainerView];
  v122 = v119;
  v123 = v121;
  objc_msgSend(v123, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v122, "addSubview:", v123);

  v124 = *(void **)&v122[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardVibrancyContainerView];
  v125 = v122;
  v126 = v124;
  objc_msgSend(v126, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v125, "addSubview:", v126);

  v127 = v125;
  objc_msgSend(v127, "layoutMargins");
  objc_msgSend(v127, "setLayoutMargins:", 8.0);

  v128 = v127;
  objc_msgSend(v128, "layoutMargins");
  objc_msgSend(v128, "setLayoutMargins:");

  result = (char *)objc_msgSend(*(id *)&v106[v110], "contentView");
  if (result)
  {
    v130 = result;
    v131 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleLabel;
    v132 = *(id *)&v128[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleLabel];
    objc_msgSend(v132, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v130, "addSubview:", v132);

    objc_msgSend(*(id *)&v106[v110], "setViewForContentSize:", *(_QWORD *)&v128[v131]);
    result = (char *)objc_msgSend(*(id *)&v112[v114], "contentView");
    if (result)
    {
      v133 = result;
      v134 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleLabel;
      v135 = *(id *)&v128[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleLabel];
      objc_msgSend(v135, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      objc_msgSend(v133, "addSubview:", v135);

      objc_msgSend(*(id *)&v112[v114], "setViewForContentSize:", *(_QWORD *)&v128[v134]);
      v136 = (void *)objc_opt_self(NSLayoutConstraint);
      v137 = sub_10051AF8C(v41, (uint64_t)v152);
      sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v136, "activateConstraints:", isa, swift_bridgeObjectRelease(v137).n128_f64[0]);

      v139 = *(void **)&v128[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardButton];
      objc_msgSend(v139, "addTarget:action:forControlEvents:", v128, "skipBackwardStart", 17);
      objc_msgSend(v139, "addTarget:action:forControlEvents:", v128, "skipBackwardEnd", 352);
      objc_msgSend(v139, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v140 = *(void **)&v128[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingButton];
      objc_msgSend(v140, "addTarget:action:forControlEvents:", v128, "togglePlaying", 64);
      objc_msgSend(v140, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v141 = *(void **)&v128[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardButton];
      objc_msgSend(v141, "addTarget:action:forControlEvents:", v128, "skipForwardStart", 17);
      objc_msgSend(v141, "addTarget:action:forControlEvents:", v128, "skipForwardEnd", 352);
      objc_msgSend(v141, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      sub_10051C18C();
      objc_msgSend(v128, "setAccessibilityContainerType:", 4);
      v142 = v128;
      v143 = String._bridgeToObjectiveC()();
      objc_msgSend(v142, "setAccessibilityIdentifier:", v143);

      sub_100009E04(0, &qword_1009E7710, UITraitCollection_ptr);
      v144 = v142;
      v145 = static UITraitCollection.bc_allAPITraits.getter();
      v146 = UIView.registerForTraitChanges(_:action:)(v145, "_traitCollectionDidChangeWithSender:previousTraitCollection:");
      sub_10033FD8C(a1);

      swift_unknownObjectRelease(v146);
      swift_bridgeObjectRelease(v145);

      return v144;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10051ADE0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(char *, _QWORD, uint64_t);
  char v6;
  void (*v7)(char *, uint64_t);
  char v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v15;

  v1 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v5(v4, enum case for BooksUIKitFeatureFlag.floatingTabBar(_:), v1);
  v6 = isFeatureEnabled(_:)(v4);
  v7 = *(void (**)(char *, uint64_t))(v2 + 8);
  v7(v4, v1);
  if ((v6 & 1) != 0
    || (v5(v4, enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:), v1),
        v8 = isFeatureEnabled(_:)(v4),
        v7(v4, v1),
        (v8 & 1) != 0))
  {
    v9 = objc_msgSend(*(id *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_artworkWrapperView], "leadingAnchor");
    v10 = objc_msgSend(v0, "leadingAnchor");
    v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, 10.0);
  }
  else
  {
    v9 = objc_msgSend(*(id *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_artworkWrapperView], "leadingAnchor");
    v12 = objc_msgSend(v0, "layoutMarginsGuide");
    v10 = objc_msgSend(v12, "leadingAnchor");

    v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);
  }
  v13 = v11;

  return v13;
}

uint64_t sub_10051AF8C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  void *v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  void *v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  uint64_t v125;
  id v128;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v5 = swift_allocObject(v4, 336, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10072B270;
  v6 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_artworkWrapperView];
  v7 = objc_msgSend(v6, "topAnchor");
  v8 = objc_msgSend(v2, "layoutMarginsGuide");
  v9 = objc_msgSend(v8, "topAnchor");

  v10 = objc_msgSend(v7, "constraintGreaterThanOrEqualToAnchor:", v9);
  *(_QWORD *)(v5 + 32) = v10;
  v11 = objc_msgSend(v6, "bottomAnchor");
  v12 = objc_msgSend(v2, "layoutMarginsGuide");
  v13 = objc_msgSend(v12, "bottomAnchor");

  v14 = objc_msgSend(v11, "constraintLessThanOrEqualToAnchor:", v13);
  *(_QWORD *)(v5 + 40) = v14;
  *(_QWORD *)(v5 + 48) = sub_10051ADE0();
  v15 = objc_msgSend(v6, "centerYAnchor");
  v16 = objc_msgSend(v2, "centerYAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  v18 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_contentLeadingConstraint];
  *(_QWORD *)(v5 + 56) = v17;
  *(_QWORD *)(v5 + 64) = v18;
  v19 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_contentTrailingConstraint];
  *(_QWORD *)(v5 + 72) = v19;
  v20 = v18;
  v21 = v19;
  v22 = sub_1005197B8();
  v23 = objc_msgSend(v22, "leadingAnchor");

  v24 = objc_msgSend(v6, "leadingAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v5 + 80) = v25;
  v26 = sub_1005197B8();
  v27 = objc_msgSend(v26, "topAnchor");

  v28 = objc_msgSend(v6, "topAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v5 + 88) = v29;
  v30 = sub_1005197B8();
  v31 = objc_msgSend(v30, "bottomAnchor");

  v32 = objc_msgSend(v6, "bottomAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v5 + 96) = v33;
  v34 = sub_1005197B8();
  v35 = objc_msgSend(v34, "trailingAnchor");

  v36 = objc_msgSend(v6, "trailingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v5 + 104) = v37;
  v38 = objc_msgSend(a1, "centerYAnchor");
  v39 = objc_msgSend(v2, "centerYAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v5 + 112) = v40;
  v41 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleContainer];
  v42 = objc_msgSend(v41, "topAnchor");
  v43 = objc_msgSend(a1, "topAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  *(_QWORD *)(v5 + 120) = v44;
  v45 = objc_msgSend(v41, "leadingAnchor");
  v46 = objc_msgSend(a1, "leadingAnchor");
  if (qword_1009CE7B0 != -1)
    swift_once(&qword_1009CE7B0, sub_10051962C);
  v47 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, -*(double *)&qword_1009E9820, a2);

  *(_QWORD *)(v5 + 128) = v47;
  v48 = objc_msgSend(v41, "trailingAnchor");
  v49 = objc_msgSend(a1, "trailingAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

  *(_QWORD *)(v5 + 136) = v50;
  v51 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleLabel];
  v52 = objc_msgSend(v51, "leadingAnchor");
  v53 = objc_msgSend(a1, "leadingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v5 + 144) = v54;
  v55 = objc_msgSend(v51, "centerYAnchor");
  v56 = objc_msgSend(v41, "centerYAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v5 + 152) = v57;
  v58 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleContainer];
  v59 = objc_msgSend(v58, "leadingAnchor");
  v60 = objc_msgSend(a1, "leadingAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:constant:", v60, -*(double *)&qword_1009E9820);

  *(_QWORD *)(v5 + 160) = v61;
  v62 = objc_msgSend(v58, "trailingAnchor");
  v63 = objc_msgSend(a1, "trailingAnchor");
  v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

  *(_QWORD *)(v5 + 168) = v64;
  v65 = objc_msgSend(v58, "bottomAnchor");
  v66 = objc_msgSend(a1, "bottomAnchor");
  v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

  *(_QWORD *)(v5 + 176) = v67;
  v68 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleLabel];
  v69 = objc_msgSend(v68, "leadingAnchor");
  v70 = objc_msgSend(a1, "leadingAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

  *(_QWORD *)(v5 + 184) = v71;
  v72 = objc_msgSend(v68, "centerYAnchor");
  v73 = objc_msgSend(v58, "centerYAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:", v73);

  *(_QWORD *)(v5 + 192) = v74;
  v75 = objc_msgSend(*(id *)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonGuide], "centerYAnchor");
  v76 = objc_msgSend(v2, "centerYAnchor");
  v77 = objc_msgSend(v75, "constraintEqualToAnchor:", v76);

  v78 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonHeightConstraint];
  *(_QWORD *)(v5 + 200) = v77;
  *(_QWORD *)(v5 + 208) = v78;
  v79 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonTrailingConstraint];
  *(_QWORD *)(v5 + 216) = v79;
  v80 = v78;
  v81 = v79;
  v82 = objc_msgSend(v128, "centerYAnchor");
  v83 = objc_msgSend(v2, "centerYAnchor");
  v84 = objc_msgSend(v82, "constraintEqualToAnchor:", v83);

  v85 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_controlHeightConstraint];
  *(_QWORD *)(v5 + 224) = v84;
  *(_QWORD *)(v5 + 232) = v85;
  v86 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardVibrancyContainerView];
  v87 = v85;
  v88 = objc_msgSend(v86, "centerYAnchor");
  v89 = objc_msgSend(v128, "centerYAnchor");
  v90 = objc_msgSend(v88, "constraintEqualToAnchor:", v89);

  *(_QWORD *)(v5 + 240) = v90;
  v91 = objc_msgSend(v86, "heightAnchor");
  v92 = objc_msgSend(v128, "heightAnchor");
  v93 = objc_msgSend(v91, "constraintEqualToAnchor:", v92);

  *(_QWORD *)(v5 + 248) = v93;
  v94 = objc_msgSend(v86, "widthAnchor");
  v95 = objc_msgSend(*(id *)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardButton], "heightAnchor");
  v96 = objc_msgSend(v94, "constraintEqualToAnchor:", v95);

  v97 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardTrailingConstraint];
  *(_QWORD *)(v5 + 256) = v96;
  *(_QWORD *)(v5 + 264) = v97;
  v98 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingVibrancyContainerView];
  v99 = v97;
  v100 = objc_msgSend(v98, "centerYAnchor");
  v101 = objc_msgSend(v128, "centerYAnchor");
  v102 = objc_msgSend(v100, "constraintEqualToAnchor:", v101);

  *(_QWORD *)(v5 + 272) = v102;
  v103 = objc_msgSend(v98, "heightAnchor");
  v104 = objc_msgSend(v128, "heightAnchor");
  v105 = objc_msgSend(v103, "constraintEqualToAnchor:", v104);

  *(_QWORD *)(v5 + 280) = v105;
  v106 = objc_msgSend(v98, "widthAnchor");
  v107 = objc_msgSend(*(id *)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingButton], "heightAnchor");
  v108 = objc_msgSend(v106, "constraintEqualToAnchor:", v107);

  v109 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardLeadingConstraint];
  *(_QWORD *)(v5 + 288) = v108;
  *(_QWORD *)(v5 + 296) = v109;
  v110 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardVibrancyContainerView];
  v111 = v109;
  v112 = objc_msgSend(v110, "centerYAnchor");
  v113 = objc_msgSend(v128, "centerYAnchor");
  v114 = objc_msgSend(v112, "constraintEqualToAnchor:", v113);

  *(_QWORD *)(v5 + 304) = v114;
  v115 = objc_msgSend(v110, "heightAnchor");
  v116 = objc_msgSend(v128, "heightAnchor");
  v117 = objc_msgSend(v115, "constraintEqualToAnchor:", v116);

  *(_QWORD *)(v5 + 312) = v117;
  v118 = objc_msgSend(v110, "widthAnchor");
  v119 = objc_msgSend(*(id *)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardButton], "heightAnchor");
  v120 = objc_msgSend(v118, "constraintEqualToAnchor:", v119);

  *(_QWORD *)(v5 + 320) = v120;
  v121 = objc_msgSend(v2, "layoutMarginsGuide");
  v122 = objc_msgSend(v121, "trailingAnchor");

  v123 = objc_msgSend(v128, "trailingAnchor");
  v124 = objc_msgSend(v122, "constraintEqualToAnchor:", v123);

  *(_QWORD *)(v5 + 328) = v124;
  specialized Array._endMutation()(v125);
  return v5;
}

uint64_t sub_10051BCDC(char *a1, uint64_t a2, SEL *a3)
{
  uint64_t result;
  uint64_t v6;
  void *v7;
  char *v8;

  result = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_delegate]);
  if (result)
  {
    v6 = result;
    v7 = *(void **)(result + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler);
    v8 = a1;
    objc_msgSend(v7, *a3, 1);

    return swift_unknownObjectRelease(v6);
  }
  return result;
}

uint64_t sub_10051BD68(char *a1, uint64_t a2, SEL *a3)
{
  uint64_t result;
  uint64_t v6;
  void *v7;
  char *v8;

  result = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_delegate]);
  if (result)
  {
    v6 = result;
    v7 = *(void **)(result + OBJC_IVAR___BKAudiobookNowPlayingTouchViewController_eventHandler);
    v8 = a1;
    objc_msgSend(v7, *a3);

    return swift_unknownObjectRelease(v6);
  }
  return result;
}

void sub_10051BDE4(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;
  Class v20;
  double v21;
  void *v22;
  Class v23;
  double v24;

  v2 = v1;
  v3 = a1;
  if (a1)
  {
    v3 = a1;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v1, "addSubview:", v3);
    v4 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v3, "setBackgroundColor:", v4);

    v5 = (void *)objc_opt_self(NSLayoutConstraint);
    v6 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v7 = swift_allocObject(v6, 56, 7);
    *(_OWORD *)(v7 + 16) = xmmword_1007118D0;
    v8 = objc_msgSend(v3, "leadingAnchor");
    v9 = *(void **)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonGuide];
    v10 = objc_msgSend(v9, "leadingAnchor");
    v11 = objc_msgSend(v8, "constraintGreaterThanOrEqualToAnchor:", v10);

    *(_QWORD *)(v7 + 32) = v11;
    v12 = objc_msgSend(v3, "trailingAnchor");
    v13 = objc_msgSend(v9, "trailingAnchor");
    v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

    *(_QWORD *)(v7 + 40) = v14;
    v15 = objc_msgSend(v3, "centerYAnchor");
    v16 = objc_msgSend(v9, "centerYAnchor");
    v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

    *(_QWORD *)(v7 + 48) = v17;
    specialized Array._endMutation()(v18);
    sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

    v20 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v5, "deactivateConstraints:", v20);

    v21 = 24.0;
    if (v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 56])
      v21 = 10.0;
    objc_msgSend(*(id *)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonTrailingConstraint], "setConstant:", v21);

  }
  else
  {
    v22 = (void *)objc_opt_self(NSLayoutConstraint);
    sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
    v23 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v22, "activateConstraints:", v23);

    objc_msgSend(*(id *)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonTrailingConstraint], "setConstant:", 0.0);
  }
  v24 = 50.0;
  if (v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 56])
    v24 = 44.0;
  objc_msgSend(*(id *)&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonHeightConstraint], "setConstant:", v24);
  swift_unknownObjectWeakAssign(&v2[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonView], v3);
  sub_10051D2C4();
}

void sub_10051C18C()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSString v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t *v23;
  uint64_t v24;
  id v25;
  double v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t *v34;
  uint64_t v35;
  id v36;
  double v37;
  void *v38;
  uint64_t v39;
  NSString v40;
  void *v41;
  uint64_t v42;
  NSString v43;
  uint64_t v44;
  NSString v45;
  void *v46;
  Class isa;
  Class v48;
  double v49;
  double v50;
  double v51;
  void *v52;
  void *v53;
  Class v54;
  Class v55;
  void *v56;
  void *v57;
  Class v58;
  Class v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int16 v64;
  __int16 v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  NSString v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  void *v75;
  unint64_t v76;
  NSString v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int16 v86;
  __int16 v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  NSString v91;
  id v92;
  id v93;
  id v94;
  void *v95;

  v1 = &v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state];
  if ((v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 56] & 1) == 0)
  {
    v2 = *((_QWORD *)v1 + 2);
    v3 = *((_QWORD *)v1 + 4);
    v4 = *((_QWORD *)v1 + 6);
    v5 = qword_1009CEB28;
    v6 = *(id *)v1;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRetain(v3);
    swift_bridgeObjectRetain(v4);
    if (v5 != -1)
      swift_once(&qword_1009CEB28, sub_100665038);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v3);
    swift_bridgeObjectRelease(v2);

  }
  objc_msgSend(v0, "directionalLayoutMargins");
  objc_msgSend(v0, "setDirectionalLayoutMargins:");
  objc_msgSend(v0, "directionalLayoutMargins");
  objc_msgSend(v0, "setDirectionalLayoutMargins:");
  v7 = sub_1005197B8();
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 4);
  v10 = *((_QWORD *)v1 + 6);
  if (*(_QWORD *)v1)
  {
    v11 = *(id *)v1;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
  }
  else
  {
    swift_bridgeObjectRetain(*((_QWORD *)v1 + 2));
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v10);
    v12 = String._bridgeToObjectiveC()();
    v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v12);

    if (!v11)
    {
LABEL_71:
      __break(1u);
      return;
    }
  }
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v9);
  objc_msgSend(v7, "setImage:", v11, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v13 = sub_1005197B8();
  v14 = v13;
  if (*(_QWORD *)v1)
    v15 = 2;
  else
    v15 = 4;
  objc_msgSend(v13, "setContentMode:", v15);

  v16 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_contentLeadingConstraint];
  v17 = *(id *)v1;
  v18 = *((_QWORD *)v1 + 2);
  v19 = *((_QWORD *)v1 + 4);
  v20 = *((_QWORD *)v1 + 6);
  if (v1[56] == 1)
  {
    v21 = qword_1009CEB18;
    v22 = v17;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    if (v21 != -1)
      swift_once(&qword_1009CEB18, sub_100665018);
    v23 = &qword_1009F3130;
  }
  else
  {
    v24 = qword_1009CEB20;
    v25 = v17;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v20);
    if (v24 != -1)
      swift_once(&qword_1009CEB20, sub_100665028);
    v23 = &qword_1009F3138;
  }
  v26 = *(double *)v23;
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v18);

  objc_msgSend(v16, "setConstant:", v26);
  v27 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_contentTrailingConstraint];
  v28 = *(id *)v1;
  v29 = *((_QWORD *)v1 + 2);
  v30 = *((_QWORD *)v1 + 4);
  v31 = *((_QWORD *)v1 + 6);
  if (v1[56] == 1)
  {
    v32 = qword_1009CEB18;
    v33 = v28;
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v31);
    if (v32 != -1)
      swift_once(&qword_1009CEB18, sub_100665018);
    v34 = &qword_1009F3130;
  }
  else
  {
    v35 = qword_1009CEB20;
    v36 = v28;
    swift_bridgeObjectRetain(v29);
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v31);
    if (v35 != -1)
      swift_once(&qword_1009CEB20, sub_100665028);
    v34 = &qword_1009F3138;
  }
  v37 = *(double *)v34;
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v30);
  swift_bridgeObjectRelease(v29);

  objc_msgSend(v27, "setConstant:", v37);
  v38 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleLabel];
  v39 = *((_QWORD *)v1 + 2);
  swift_bridgeObjectRetain(v39);
  v40 = String._bridgeToObjectiveC()();
  objc_msgSend(v38, "setText:", v40, swift_bridgeObjectRelease(v39).n128_f64[0]);

  v41 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleLabel];
  v42 = *((_QWORD *)v1 + 4);
  swift_bridgeObjectRetain(v42);
  v43 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "setText:", v43, swift_bridgeObjectRelease(v42).n128_f64[0]);

  v44 = *((_QWORD *)v1 + 6);
  swift_bridgeObjectRetain(v44);
  v45 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "setAccessibilityLabel:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

  objc_msgSend(*(id *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleContainer], "setHidden:", v1[57]);
  v46 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v46, "deactivateConstraints:", isa);

  v48 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v46, "activateConstraints:", v48);

  v49 = 50.0;
  if (v1[56])
    v49 = 44.0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_controlHeightConstraint], "setConstant:", v49);
  if (v1[56])
    v50 = 0.0;
  else
    v50 = 8.0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardTrailingConstraint], "setConstant:", v50);
  if (v1[56])
    v51 = 0.0;
  else
    v51 = 8.0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardLeadingConstraint], "setConstant:", v51);
  v52 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardButton];
  if (v1[88] == 1)
    objc_msgSend(v52, "setHidden:", 1);
  else
    objc_msgSend(v52, "setHidden:", 0);
  v53 = (void *)objc_opt_self(NSLayoutConstraint);
  v54 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v53, "deactivateConstraints:", v54);

  v55 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v53, "activateConstraints:", v55);

  v56 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardButton];
  if (v1[64] == 1)
    objc_msgSend(v56, "setHidden:", 1);
  else
    objc_msgSend(v56, "setHidden:", 0);
  v57 = (void *)objc_opt_self(NSLayoutConstraint);
  v58 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v57, "deactivateConstraints:", v58);

  v59 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v57, "activateConstraints:", v59);

  v60 = *((_QWORD *)v1 + 2);
  v61 = *((_QWORD *)v1 + 4);
  v62 = *((_QWORD *)v1 + 6);
  v63 = *((_QWORD *)v1 + 13);
  if (v1[97])
    v64 = 256;
  else
    v64 = 0;
  v65 = v64 | v1[96];
  v66 = *(id *)v1;
  swift_bridgeObjectRetain(v60);
  swift_bridgeObjectRetain(v61);
  swift_bridgeObjectRetain(v62);
  sub_1003A1914(v65, v63);
  if (!v67)
  {
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v68 = v67;
  swift_bridgeObjectRelease(v62);
  swift_bridgeObjectRelease(v61);
  swift_bridgeObjectRelease(v60);

  v69 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v68);
  v70 = (void *)objc_opt_self(UIImage);
  v71 = objc_msgSend(v70, "systemImageNamed:", v69);

  if (v71)
  {
    if (v1[56] == 1)
      v72 = sub_100665688();
    else
      v72 = sub_100665694();
    v74 = v72;
    v73 = objc_msgSend(v71, "imageWithConfiguration:", v72);

  }
  else
  {
    v73 = 0;
  }
  objc_msgSend(v52, "setImage:forState:", v73, 0);

  v75 = *(void **)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingButton];
  if (v1[112])
    v76 = 0xEA00000000006C6CLL;
  else
    v76 = 0xE90000000000006CLL;
  v77 = String._bridgeToObjectiveC()();
  v78 = objc_msgSend(v70, "systemImageNamed:", v77, swift_bridgeObjectRelease(v76).n128_f64[0]);

  if (v78)
  {
    if (v1[56] == 1)
      v79 = sub_100665688();
    else
      v79 = sub_1006656A0();
    v81 = v79;
    v80 = objc_msgSend(v78, "imageWithConfiguration:", v79);

  }
  else
  {
    v80 = 0;
  }
  objc_msgSend(v75, "setImage:forState:", v80, 0);

  v82 = *((_QWORD *)v1 + 2);
  v83 = *((_QWORD *)v1 + 4);
  v84 = *((_QWORD *)v1 + 6);
  v85 = *((_QWORD *)v1 + 10);
  if (v1[73])
    v86 = 256;
  else
    v86 = 0;
  v87 = v86 | v1[72];
  v88 = *(id *)v1;
  swift_bridgeObjectRetain(v82);
  swift_bridgeObjectRetain(v83);
  swift_bridgeObjectRetain(v84);
  sub_1003A1914(v87, v85);
  if (!v89)
    goto LABEL_70;
  v90 = v89;
  swift_bridgeObjectRelease(v84);
  swift_bridgeObjectRelease(v83);
  swift_bridgeObjectRelease(v82);

  v91 = String._bridgeToObjectiveC()();
  v92 = objc_msgSend(v70, "systemImageNamed:", v91, swift_bridgeObjectRelease(v90).n128_f64[0]);

  if (v92)
  {
    if (v1[56] == 1)
      v93 = sub_100665688();
    else
      v93 = sub_100665694();
    v95 = v93;
    v94 = objc_msgSend(v92, "imageWithConfiguration:", v93);

  }
  else
  {
    v94 = 0;
  }
  objc_msgSend(v56, "setImage:forState:", v94, 0);

  sub_10051D2C4();
}

uint64_t sub_10051CCCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjCClassFromMetadata;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _BYTE v22[16];

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v22[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v22[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v22[-v12];
  v14 = String.LocalizationValue.init(stringLiteral:)(0x616C5020696E694DLL, 0xEB00000000726579);
  static Locale.current.getter(v14);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
  v15 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v15);
  v17 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
  v18 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v17, v3, "Accessibility string for a collapsed audiobook playback UI.", 59, 2);
  v20 = v19;
  (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
  qword_1009E9838 = v18;
  unk_1009E9840 = v20;
  return result;
}

void sub_10051D058()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  id Strong;
  id v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  __int128 v20;
  uint64_t v21;

  v1 = sub_10004CFD4(&qword_1009D4B80);
  v2 = (_QWORD *)swift_allocObject(v1, 64, 7);
  *((_OWORD *)v2 + 1) = xmmword_10070CCA0;
  sub_10051D2C4();
  v3 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_cachedGroupedLabelsAXElement);
  if (v3)
  {
    v2[7] = sub_100009E04(0, (unint64_t *)&unk_1009EB660, UIAccessibilityElement_ptr);
    v2[4] = v3;
    Strong = (id)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonView);
    v5 = v3;
    if (Strong)
    {
      if ((objc_msgSend(Strong, "isHidden") & 1) == 0)
      {
        v21 = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
        *(_QWORD *)&v20 = Strong;
        Strong = Strong;
        v2 = sub_1005B0474((_QWORD *)1, 2, 1, v2);
        v2[2] = 2;
        sub_10004CFC4(&v20, (_OWORD *)v2 + 4);
      }

    }
    v6 = v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state;
    if ((*(_BYTE *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 88) & 1) == 0)
    {
      v7 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardButton);
      v21 = type metadata accessor for NowPlayingTransportButton();
      *(_QWORD *)&v20 = v7;
      v8 = v2[2];
      v9 = v2[3];
      v10 = v7;
      if (v8 >= v9 >> 1)
        v2 = sub_1005B0474((_QWORD *)(v9 > 1), v8 + 1, 1, v2);
      v2[2] = v8 + 1;
      sub_10004CFC4(&v20, &v2[4 * v8 + 4]);
    }
    v11 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingButton);
    v12 = type metadata accessor for NowPlayingTransportButton();
    v21 = v12;
    *(_QWORD *)&v20 = v11;
    v13 = v2[2];
    v14 = v2[3];
    v15 = v11;
    if (v13 >= v14 >> 1)
      v2 = sub_1005B0474((_QWORD *)(v14 > 1), v13 + 1, 1, v2);
    v2[2] = v13 + 1;
    sub_10004CFC4(&v20, &v2[4 * v13 + 4]);
    if ((*(_BYTE *)(v6 + 64) & 1) == 0)
    {
      v16 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardButton);
      v21 = v12;
      *(_QWORD *)&v20 = v16;
      v17 = v2[2];
      v18 = v2[3];
      v19 = v16;
      if (v17 >= v18 >> 1)
        v2 = sub_1005B0474((_QWORD *)(v18 > 1), v17 + 1, 1, v2);
      v2[2] = v17 + 1;
      sub_10004CFC4(&v20, &v2[4 * v17 + 4]);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10051D2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t ObjCClassFromMetadata;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  NSString v33;
  double v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD *v50;
  void *v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSString v57;
  unint64_t v58;
  double v59;
  id v60;
  double v61;
  CGFloat v62;
  double v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  id v77;
  double v78;
  CGFloat v79;
  double v80;
  CGFloat v81;
  double v82;
  CGFloat v83;
  double v84;
  CGFloat v85;
  double v86;
  double v87;
  CGFloat v88;
  CGFloat v89;
  double MinX;
  double v91;
  void *Strong;
  void *v93;
  double v94;
  double v95;
  double v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  void *v100;
  id v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  _QWORD *v108;
  void *v109;
  uint64_t v110;
  id v111;
  Class isa;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  NSString v128;
  void *v129;
  id v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  id v136;
  id v137;
  Class v138;
  char *v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  unint64_t *v147;
  _QWORD aBlock[5];
  uint64_t v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;
  CGRect v153;
  CGRect v154;
  CGRect v155;
  CGRect v156;
  CGRect v157;
  CGRect v158;
  CGRect v159;

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  v146 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v139 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v145 = (char *)&v139 - v6;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v143 = *(_QWORD *)(v7 - 8);
  v144 = v7;
  __chkstk_darwin(v7);
  v140 = (char *)&v139 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v142 = (char *)&v139 - v10;
  v11 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_cachedGroupedLabelsAXElement;
  v12 = *(_QWORD *)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_cachedGroupedLabelsAXElement);
  v141 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_cachedGroupedLabelsAXElement;
  if (!v12)
  {
    v13 = objc_msgSend(objc_allocWithZone((Class)UIAccessibilityElement), "initWithAccessibilityContainer:", v0);
    v14 = *(void **)(v0 + v11);
    *(_QWORD *)(v0 + v11) = v13;

    v15 = *(void **)(v0 + v11);
    if (v15)
    {
      v147 = v15;
      v16 = v2;
      v17 = v142;
      v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x80000001007D0EB0);
      v19 = v4;
      v20 = v145;
      static Locale.current.getter(v18);
      v21 = v143;
      v22 = v144;
      v23 = v140;
      (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v140, v17, v144);
      v24 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v24);
      v26 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v27 = v146;
      (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v19, v20, v16);
      String.init(localized:table:bundle:locale:comment:)(v23, 0, 0, v26, v19, "Accessibility hint informing the user how to switch to the full player from the mini player.", 92, 2);
      v29 = v28;
      v30 = v20;
      v4 = v19;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v16);
      v31 = *(void (**)(char *, uint64_t))(v21 + 8);
      v11 = v141;
      v32 = v17;
      v2 = v16;
      v31(v32, v22);
      v33 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v34 = swift_bridgeObjectRelease(v29).n128_u64[0];
      v35 = v147;
      objc_msgSend(v147, "setAccessibilityHint:", v33, v34);

    }
  }
  v36 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 8);
  v37 = *(_QWORD *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state + 16);
  v147 = (unint64_t *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_state);
  swift_bridgeObjectRetain(v37);
  v38 = sub_100043ED0(0, 1, 1, _swiftEmptyArrayStorage);
  v40 = v38[2];
  v39 = v38[3];
  v41 = v40 + 1;
  if (v40 >= v39 >> 1)
    v38 = sub_100043ED0((_QWORD *)(v39 > 1), v40 + 1, 1, v38);
  v38[2] = v41;
  v42 = &v38[2 * v40];
  v42[4] = v36;
  v42[5] = v37;
  v43 = v147[3];
  v44 = v147[4];
  v45 = HIBYTE(v44) & 0xF;
  if ((v44 & 0x2000000000000000) == 0)
    v45 = v43 & 0xFFFFFFFFFFFFLL;
  if (v45)
  {
    v139 = v4;
    v46 = v1;
    v47 = v11;
    v48 = v2;
    v49 = v38[3];
    swift_bridgeObjectRetain(v44);
    if (v41 >= v49 >> 1)
      v38 = sub_100043ED0((_QWORD *)(v49 > 1), v40 + 2, 1, v38);
    v38[2] = v40 + 2;
    v50 = &v38[2 * v41];
    v50[4] = v43;
    v50[5] = v44;
    v2 = v48;
    v11 = v47;
    v1 = v46;
    v4 = v139;
  }
  v51 = *(void **)(v1 + v11);
  if (v51)
  {
    if (v38[2])
    {
      aBlock[0] = v38;
      v52 = v51;
      v53 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
      v54 = sub_100044F44();
      BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v53, v54);
      v56 = v55;
      swift_bridgeObjectRelease(v38);
      v57 = String._bridgeToObjectiveC()();
      v58 = swift_bridgeObjectRelease(v56).n128_u64[0];
    }
    else
    {
      v60 = v51;
      v58 = swift_bridgeObjectRelease(v38).n128_u64[0];
      v57 = 0;
    }
    objc_msgSend(v51, "setAccessibilityLabel:", v57, *(double *)&v58);

  }
  else
  {
    *(_QWORD *)&v59 = swift_bridgeObjectRelease(v38).n128_u64[0];
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleLabel), "accessibilityFrame", v59);
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v67;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleLabel), "accessibilityFrame");
  v158.origin.x = v69;
  v158.origin.y = v70;
  v158.size.width = v71;
  v158.size.height = v72;
  v150.origin.x = v62;
  v150.origin.y = v64;
  v150.size.width = v66;
  v150.size.height = v68;
  v151 = CGRectUnion(v150, v158);
  x = v151.origin.x;
  y = v151.origin.y;
  width = v151.size.width;
  height = v151.size.height;
  v77 = sub_1005197B8();
  objc_msgSend(v77, "accessibilityFrame");
  v79 = v78;
  v81 = v80;
  v83 = v82;
  v85 = v84;

  v152.origin.x = x;
  v152.origin.y = y;
  v152.size.width = width;
  v152.size.height = height;
  v159.origin.x = v79;
  v159.origin.y = v81;
  v159.size.width = v83;
  v159.size.height = v85;
  v153 = CGRectUnion(v152, v159);
  v86 = v153.origin.x;
  v87 = v153.origin.y;
  v88 = v153.size.width;
  v89 = v153.size.height;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingButton), "accessibilityFrame");
  MinX = CGRectGetMinX(v154);
  if ((v147[11] & 1) == 0)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardButton), "accessibilityFrame");
    v91 = CGRectGetMinX(v155);
    if (v91 < MinX)
      MinX = v91;
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonView);
  if (Strong)
  {
    v93 = Strong;
    if ((objc_msgSend(Strong, "isHidden") & 1) != 0)
    {

    }
    else
    {
      objc_msgSend(v93, "accessibilityFrame");
      v94 = CGRectGetMinX(v156);

      if (v94 < MinX)
        MinX = v94;
    }
  }
  v95 = MinX - v86;
  v157.origin.x = v86;
  v157.origin.y = v87;
  v157.size.width = v88;
  v157.size.height = v89;
  v96 = CGRectGetHeight(v157);
  objc_msgSend(*(id *)(v1 + v11), "setAccessibilityFrame:", v86, v87, v95, v96);
  v97 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v98 = (_QWORD *)swift_allocObject(v97, 48, 7);
  *((_OWORD *)v98 + 1) = xmmword_10070CCA0;
  if (qword_1009CE7C8 != -1)
    swift_once(&qword_1009CE7C8, sub_10051CCCC);
  v99 = unk_1009E9840;
  v98[4] = qword_1009E9838;
  v98[5] = v99;
  v100 = *(void **)(v1 + v11);
  if (v100)
  {
    v101 = objc_msgSend(v100, "accessibilityLabel", swift_bridgeObjectRetain(v99).n128_f64[0]);
    if (v101)
    {
      v102 = v101;
      v103 = static String._unconditionallyBridgeFromObjectiveC(_:)(v101);
      v105 = v104;

      v107 = v98[2];
      v106 = v98[3];
      if (v107 >= v106 >> 1)
        v98 = sub_100043ED0((_QWORD *)(v106 > 1), v107 + 1, 1, v98);
      v98[2] = v107 + 1;
      v108 = &v98[2 * v107];
      v108[4] = v103;
      v108[5] = v105;
    }
    v109 = *(void **)(v1 + v11);
    if (v109)
    {
      v110 = v2;
      v111 = v109;
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v111, "setAccessibilityUserInputLabels:", isa, swift_bridgeObjectRelease(v98).n128_f64[0]);

      goto LABEL_38;
    }
    v110 = v2;
  }
  else
  {
    v110 = v2;
    swift_bridgeObjectRetain(v99);
  }
  swift_bridgeObjectRelease(v98);
LABEL_38:
  v113 = v142;
  v114 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007D0E20);
  v115 = v145;
  static Locale.current.getter(v114);
  v117 = v143;
  v116 = v144;
  v118 = v140;
  (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v140, v113, v144);
  v119 = type metadata accessor for BundleFinder();
  v120 = swift_getObjCClassFromMetadata(v119);
  v121 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v120);
  v122 = v146;
  (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v4, v115, v110);
  String.init(localized:table:bundle:locale:comment:)(v118, 0, 0, v121, v4, "Accessibility string for an action that shows a context menu", 60, 2);
  v124 = v123;
  (*(void (**)(char *, uint64_t))(v122 + 8))(v115, v110);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v113, v116);
  v125 = swift_allocObject(&unk_10090CF18, 24, 7);
  swift_unknownObjectWeakInit(v125 + 16);
  v126 = swift_allocObject(&unk_10090CF40, 56, 7);
  *(_QWORD *)(v126 + 16) = v125;
  *(double *)(v126 + 24) = v86;
  *(double *)(v126 + 32) = v87;
  *(double *)(v126 + 40) = v95;
  *(double *)(v126 + 48) = v96;
  v127 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain(v125);
  v128 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v124);
  aBlock[4] = sub_10051E7A0;
  v149 = v126;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10051E708;
  aBlock[3] = &unk_10090CF58;
  v129 = _Block_copy(aBlock);
  v130 = objc_msgSend(v127, "initWithName:actionHandler:", v128, v129);

  _Block_release(v129);
  v131 = v149;
  swift_release(v125);
  swift_release(v131);
  v132 = *(void **)(v1 + v141);
  if (v132)
  {
    v133 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    v134 = swift_allocObject(v133, 40, 7);
    *(_OWORD *)(v134 + 16) = xmmword_1007118F0;
    *(_QWORD *)(v134 + 32) = v130;
    aBlock[0] = v134;
    specialized Array._endMutation()(v134);
    v135 = aBlock[0];
    sub_100009E04(0, &qword_1009E9998, UIAccessibilityCustomAction_ptr);
    v136 = v132;
    v137 = v130;
    v138 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v136, "setAccessibilityCustomActions:", v138, swift_bridgeObjectRelease(v135).n128_f64[0]);

  }
}

id sub_10051DC98(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t Strong;
  void *v12;
  double MidX;
  id v14;
  _BYTE v16[24];
  CGRect v17;
  CGRect v18;

  v10 = a6 + 16;
  swift_beginAccess(a6 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (!Strong)
    return 0;
  v12 = (void *)Strong;
  v17.origin.x = a1;
  v17.origin.y = a2;
  v17.size.width = a3;
  v17.size.height = a4;
  MidX = CGRectGetMidX(v17);
  v18.origin.x = a1;
  v18.origin.y = a2;
  v18.size.width = a3;
  v18.size.height = a4;
  v14 = objc_msgSend(v12, "bkaxAccessibilityShowContextMenuAtPoint:", MidX, CGRectGetMidY(v18));

  return v14;
}

id sub_10051DD8C(uint64_t a1)
{
  return sub_10025965C(a1, type metadata accessor for AudiobookNowPlayingMiniTouchView);
}

uint64_t type metadata accessor for AudiobookNowPlayingMiniTouchView()
{
  return objc_opt_self(BKAudiobookNowPlayingMiniTouchView);
}

uint64_t sub_10051E0FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;

  v1 = sub_10004CFD4(&qword_1009D4B80);
  v2 = swift_allocObject(v1, 128, 7);
  *(_OWORD *)(v2 + 16) = xmmword_100712B60;
  v3 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardButton);
  v4 = type metadata accessor for NowPlayingTransportButton();
  *(_QWORD *)(v2 + 32) = v3;
  v5 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingButton);
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 64) = v5;
  v6 = *(void **)(v0 + OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardButton);
  *(_QWORD *)(v2 + 120) = v4;
  *(_QWORD *)(v2 + 88) = v4;
  *(_QWORD *)(v2 + 96) = v6;
  v7 = v3;
  v8 = v5;
  v9 = v6;
  return v2;
}

void sub_10051E428()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;

  v1 = objc_msgSend(v0, "subviews");
  v2 = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(v3);
    v8 = 0.0;
    goto LABEL_12;
  }
  if (v3 < 0)
    v9 = v3;
  else
    v9 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v10 = _CocoaArrayWrapper.endIndex.getter(v9);
  swift_bridgeObjectRelease(v3);
  if (!v10)
    goto LABEL_11;
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v3);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v3 + 32);
LABEL_6:
    v5 = v4;
    v6 = objc_msgSend(v4, "layer", swift_bridgeObjectRelease(v3).n128_f64[0]);

    objc_msgSend(v6, "cornerRadius");
    v8 = v7;

LABEL_12:
    v11 = objc_msgSend(v0, "layer");
    objc_msgSend(v0, "bounds");
    v16 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v12, v13, v14, v15, v8);
    v17 = objc_msgSend(v16, "CGPath");

    objc_msgSend(v11, "setShadowPath:", v17);
    return;
  }
  __break(1u);
}

id sub_10051E6D8()
{
  return sub_10025965C(0, type metadata accessor for ArtworkShadowView);
}

uint64_t type metadata accessor for ArtworkShadowView()
{
  return objc_opt_self(_TtC5BooksP33_12E437AC0882FE18A400AEA3D6DAFFF617ArtworkShadowView);
}

uint64_t sub_10051E708(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t (*v4)(void);
  id v5;

  v4 = *(uint64_t (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  LOBYTE(v4) = v4();
  swift_release(v3);

  return v4 & 1;
}

uint64_t sub_10051E758()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10051E77C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

id sub_10051E7A0(uint64_t a1)
{
  uint64_t v1;

  return sub_10051DC98(*(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40), *(CGFloat *)(v1 + 48), a1, *(_QWORD *)(v1 + 16));
}

id sub_10051E7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void (*v9)(char *, _QWORD, uint64_t);
  char v10;
  void (*v11)(char *, uint64_t);
  double v12;
  char v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  NSString *v20;
  NSString *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  Class isa;
  uint64_t v38;
  uint64_t v39;

  v0 = type metadata accessor for BooksUIKitFeatureFlag(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v5 = (void *)objc_opt_self(UIColor);
  v6 = v4;
  v7 = objc_msgSend(v5, "tertiarySystemGroupedBackgroundColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = objc_msgSend(v6, "layer");
  v9 = *(void (**)(char *, _QWORD, uint64_t))(v1 + 104);
  v9(v3, enum case for BooksUIKitFeatureFlag.floatingTabBar(_:), v0);
  v10 = isFeatureEnabled(_:)(v3);
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v3, v0);
  v12 = 8.0;
  if ((v10 & 1) == 0)
  {
    ((void (*)(char *, _QWORD, uint64_t, double))v9)(v3, enum case for BooksUIKitFeatureFlag.floatingTabBarOnly(_:), v0, 8.0);
    v13 = isFeatureEnabled(_:)(v3);
    v11(v3, v0);
    v12 = 4.0;
    if ((v13 & 1) != 0)
      v12 = 8.0;
  }
  objc_msgSend(v8, "setCornerRadius:", v12);

  v14 = objc_msgSend(v6, "layer");
  objc_msgSend(v14, "setCornerCurve:", kCACornerCurveContinuous);

  objc_msgSend(v6, "setClipsToBounds:", 1);
  v15 = objc_msgSend(v6, "layer");
  v16 = objc_msgSend(v5, "blackColor");
  v17 = objc_msgSend(v16, "colorWithAlphaComponent:", 0.08);

  v18 = objc_msgSend(v17, "CGColor");
  objc_msgSend(v15, "setBorderColor:", v18);

  v19 = (void *)objc_opt_self(UITraitCollection);
  v20 = UIFontTextStyleBody;
  v21 = UIContentSizeCategoryLarge;
  v22 = objc_msgSend(v19, "traitCollectionWithPreferredContentSizeCategory:", v21);
  v23 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:compatibleWithTraitCollection:", v20, v22);
  v24 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  objc_msgSend(v23, "pointSize");
  v25 = objc_msgSend(v24, "configurationWithPointSize:weight:scale:", 6, 2);

  objc_msgSend(v6, "setPreferredSymbolConfiguration:", v25);
  v26 = objc_msgSend(v5, "bc_booksTertiaryLabelColor");
  objc_msgSend(v6, "setTintColor:", v26);

  v27 = (void *)objc_opt_self(NSLayoutConstraint);
  v28 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v29 = swift_allocObject(v28, 48, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1007118C0;
  v30 = objc_msgSend(v6, "heightAnchor");
  v31 = objc_msgSend(v30, "constraintEqualToConstant:", 48.0);

  *(_QWORD *)(v29 + 32) = v31;
  v32 = objc_msgSend(v6, "widthAnchor");
  v33 = objc_msgSend(v32, "constraintEqualToConstant:", 48.0);

  *(_QWORD *)(v29 + 40) = v33;
  v39 = v29;
  specialized Array._endMutation()(v34);
  v35 = v39;
  sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v27, "activateConstraints:", isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

  return v6;
}

void sub_10051EC64()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  id v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  id v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = &v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  swift_unknownObjectWeakInit(&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonView]);
  v2 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_artworkWrapperView;
  *(_QWORD *)&v0[v2] = sub_10051965C();
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView____lazy_storage___artworkImageView] = 0;
  v3 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleContainer;
  if (qword_1009CE7B0 != -1)
    swift_once(&qword_1009CE7B0, sub_10051962C);
  v4 = *(double *)&qword_1009E9820;
  v5 = objc_msgSend(objc_allocWithZone((Class)MPUMarqueeView), "init");
  objc_msgSend(v5, "setFadeEdgeInsets:", 0.0, v4, 0.0, v4);
  if (qword_1009CE7B8 != -1)
    swift_once(&qword_1009CE7B8, sub_10051963C);
  v6 = *(double *)&qword_1009E9828;
  objc_msgSend(v5, "setContentGap:", *(double *)&qword_1009E9828);
  objc_msgSend(v5, "setUserInteractionEnabled:", 0);
  LODWORD(v7) = 1132068864;
  objc_msgSend(v5, "setContentCompressionResistancePriority:forAxis:", 0, v7);
  *(_QWORD *)&v0[v3] = v5;
  v8 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_titleLabel;
  *(_QWORD *)&v0[v8] = sub_100519814();
  v9 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleContainer;
  v10 = *(double *)&qword_1009E9820;
  v11 = objc_msgSend(objc_allocWithZone((Class)MPUMarqueeView), "init");
  objc_msgSend(v11, "setFadeEdgeInsets:", 0.0, v10, 0.0, v10);
  objc_msgSend(v11, "setContentGap:", v6);
  objc_msgSend(v11, "setUserInteractionEnabled:", 0);
  LODWORD(v12) = 1132068864;
  objc_msgSend(v11, "setContentCompressionResistancePriority:forAxis:", 0, v12);
  *(_QWORD *)&v0[v9] = v11;
  v13 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_subtitleLabel;
  *(_QWORD *)&v0[v13] = sub_10051992C();
  v14 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipBackwardButton;
  *(_QWORD *)&v0[v14] = sub_100519A2C();
  v15 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_togglePlayingButton;
  *(_QWORD *)&v0[v15] = sub_100519A2C();
  v16 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_skipForwardButton;
  *(_QWORD *)&v0[v16] = sub_100519A2C();
  v17 = OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_buyButtonGuide;
  *(_QWORD *)&v0[v17] = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  *(_QWORD *)&v0[OBJC_IVAR___BKAudiobookNowPlayingMiniTouchView_cachedGroupedLabelsAXElement] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/AudiobookNowPlayingMiniTouchView.swift", 44, 2, 377, 0);
  __break(1u);
}

char *sub_10051EF3C(char *a1, char **a2, int *a3)
{
  int v4;
  char *v5;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
  }
  else
  {
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v5;
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v10, v12) == 1)
    {
      v13 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
      v14 = 1;
    }
    else
    {
      v15 = *v10;
      *(_QWORD *)v9 = *v10;
      swift_retain(v15);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v12, v14);
    v16 = a3[7];
    a1[a3[6]] = *((_BYTE *)a2 + a3[6]);
    v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)&a1[v16 + 24] = v17;
    (**(void (***)(void))(v17 - 8))();
    v18 = a3[8];
    v19 = &a1[v18];
    v20 = (char **)((char *)a2 + v18);
    v5 = (char *)v20[1];
    *(_QWORD *)v19 = *v20;
    *((_QWORD *)v19 + 1) = v5;
  }
  swift_retain(v5);
  return a1;
}

double sub_10051F060(id *a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  v4 = (id *)((char *)a1 + a2[5]);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  _s5Books15CurrentPageViewVwxx_0((id *)((char *)a1 + a2[7]));
  *(_QWORD *)&result = swift_release(*(id *)((char *)a1 + a2[8] + 8)).n128_u64[0];
  return result;
}

_QWORD *sub_10051F0F8(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = v6;
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v10, v12) == 1)
  {
    v13 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
    v14 = 1;
  }
  else
  {
    v15 = *v10;
    *v9 = *v10;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v12, v14);
  v16 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  v17 = *(_OWORD *)(a2 + v16 + 24);
  *(_OWORD *)((char *)a1 + v16 + 24) = v17;
  (**(void (***)(void))(v17 - 8))();
  v18 = a3[8];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_retain(v21);
  return a1;
}

uint64_t sub_10051F1F4(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (a1 != a2)
  {
    v9 = a3[5];
    v10 = (uint64_t *)(a1 + v9);
    v11 = (uint64_t *)(a2 + v9);
    sub_100010960(a1 + v9, (uint64_t *)&unk_1009D8200);
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      v15 = *v11;
      *v10 = *v11;
      swift_retain(v15);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
  }
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  sub_1001EAB00((_QWORD *)(a1 + a3[7]), (_QWORD *)(a2 + a3[7]));
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_retain(v19);
  swift_release(v20);
  return a1;
}

_OWORD *sub_10051F31C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_QWORD *sub_10051F404(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = (void *)*a1;
  *a1 = *a2;

  a1[1] = a2[1];
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_100010960((uint64_t)a1 + v7, (uint64_t *)&unk_1009D8200);
    v10 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)((char *)a1 + v12));
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  v21 = v17[1];
  *v17 = v20;
  v17[1] = v19;
  swift_release(v21);
  return a1;
}

uint64_t sub_10051F52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10051F538);
}

uint64_t sub_10051F538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_10051F5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10051F5CC);
}

uint64_t sub_10051F5CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 24) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ThemeOptionsContainerViewModifier(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E99F8;
  if (!qword_1009E99F8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ThemeOptionsContainerViewModifier);
  return result;
}

void sub_10051F68C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_10072B338;
  sub_100288A64(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(v2 - 8) + 64;
    v4[2] = &unk_10072B350;
    v4[3] = &unk_10072B368;
    v4[4] = &unk_10072B380;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

uint64_t sub_10051F71C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008757C8, 1);
}

uint64_t sub_10051F72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t ObjCClassFromMetadata;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void **v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  __n128 v79;
  char v80;
  void **v81;
  void *v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t);
  id v90;
  uint64_t result;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t OpaqueTypeConformance2;
  void **v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char v129[8];
  void **v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v3 = v2;
  v114 = a1;
  v127 = a2;
  v119 = type metadata accessor for Locale(0);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v116 = (char *)&v97 - v6;
  v115 = type metadata accessor for String.LocalizationValue(0);
  v113 = *(_QWORD *)(v115 - 8);
  __chkstk_darwin(v115);
  v112 = (char *)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v111 = (char *)&v97 - v9;
  v10 = type metadata accessor for ThemeOptionsContainerViewModifier(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  OpaqueTypeConformance2 = (uint64_t)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v97 - v14;
  v16 = sub_10004CFD4(&qword_1009E9A40);
  __chkstk_darwin(v16);
  v98 = (uint64_t *)((char *)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_10004CFD4(&qword_1009E9A48);
  v19 = *(_QWORD *)(v18 - 8);
  v121 = v18;
  v122 = v19;
  __chkstk_darwin(v18);
  v128 = (char *)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004CFD4(&qword_1009E9A50);
  v125 = *(_QWORD *)(v21 - 8);
  v126 = v21;
  __chkstk_darwin(v21);
  v120 = (char *)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_10004CFD4(&qword_1009E9A58);
  __chkstk_darwin(v123);
  v124 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(v2, (uint64_t)v15, type metadata accessor for ThemeOptionsContainerViewModifier);
  v108 = type metadata accessor for MainActor(0);
  v24 = static MainActor.shared.getter(v108);
  v25 = *(unsigned __int8 *)(v11 + 80);
  v110 = ((v25 + 32) & ~v25) + v12;
  v109 = (v25 + 32) & ~v25;
  v26 = v25 | 7;
  v27 = swift_allocObject(&unk_10090CF90, v110, v25 | 7);
  *(_QWORD *)(v27 + 16) = v24;
  *(_QWORD *)(v27 + 24) = &protocol witness table for MainActor;
  v28 = sub_10052165C((uint64_t)v15, v27 + ((v25 + 32) & ~v25));
  v29 = static MainActor.shared.getter(v28);
  v30 = swift_allocObject(&unk_10090CFB8, 32, 7);
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = &protocol witness table for MainActor;
  v31 = sub_10004CFD4(&qword_1009E9A60);
  v32 = v98;
  Binding.init(get:set:)(v98, sub_1005216A0, v27, BKAppDelegate.enableMetricsInspectorOnDebugMode(), v30, v31);
  v105 = (void **)v3;
  v107 = v15;
  sub_10002CD84(v3, (uint64_t)v15, type metadata accessor for ThemeOptionsContainerViewModifier);
  v33 = (v25 + 16) & ~v25;
  v106 = v26;
  v34 = swift_allocObject(&unk_10090CFE0, v33 + v12, v26);
  sub_10052165C((uint64_t)v15, v34 + v33);
  v35 = OpaqueTypeConformance2;
  sub_10002CD84(v3, OpaqueTypeConformance2, type metadata accessor for ThemeOptionsContainerViewModifier);
  v36 = swift_allocObject(&unk_10090D008, v33 + v12, v26);
  sub_10052165C(v35, v36 + v33);
  v37 = sub_10004CFD4(&qword_1009E9A68);
  v101 = v37;
  v38 = sub_10004CFD4(&qword_1009E3630);
  v100 = v38;
  v39 = sub_10004CFD4(&qword_1009E9A70);
  v99 = v39;
  v40 = sub_100030B34(&qword_1009E9A78, &qword_1009E9A68, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
  v102 = (void *)v40;
  v41 = sub_100030B34(&qword_1009E9A80, &qword_1009E3630, (uint64_t)&protocol conformance descriptor for ThemeOptionsModule<A>);
  v103 = v41;
  v42 = sub_100030B74(&qword_1009E9A88);
  v43 = type metadata accessor for PagePresentationSizing(255);
  v44 = sub_100521740();
  v131 = v42;
  v132 = v43;
  v133 = v44;
  v134 = &protocol witness table for PagePresentationSizing;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v131, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
  View.sheet<A, B>(item:onDismiss:content:)(v32, sub_1005216E4, v34, sub_1005216F4, v36, v37, v38, v39, v40, v41, OpaqueTypeConformance2);
  swift_release(v34);
  swift_release(v36);
  sub_100010960((uint64_t)v32, &qword_1009E9A40);
  v45 = v111;
  v46 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001007D1090);
  v47 = v116;
  static Locale.current.getter(v46);
  v48 = v113;
  v49 = v112;
  v50 = v115;
  (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v112, v45, v115);
  v51 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v51);
  v53 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v54 = v118;
  v55 = v117;
  v56 = v119;
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v117, v47, v119);
  v57 = String.init(localized:table:bundle:locale:comment:)(v49, 0, 0, v53, v55, "Discard theme unsaved changes Title", 35, 2);
  v59 = v58;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v47, v56);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v50);
  v137 = v57;
  v138 = v59;
  v60 = v105;
  v61 = (uint64_t)v107;
  v62 = sub_10002CD84((uint64_t)v105, (uint64_t)v107, type metadata accessor for ThemeOptionsContainerViewModifier);
  v63 = static MainActor.shared.getter(v62);
  v64 = swift_allocObject(&unk_10090D030, v110, v106);
  *(_QWORD *)(v64 + 16) = v63;
  *(_QWORD *)(v64 + 24) = &protocol witness table for MainActor;
  v65 = sub_10052165C(v61, v64 + v109);
  v66 = static MainActor.shared.getter(v65);
  v67 = swift_allocObject(&unk_10090D058, 32, 7);
  *(_QWORD *)(v67 + 16) = v66;
  *(_QWORD *)(v67 + 24) = &protocol witness table for MainActor;
  Binding.init(get:set:)(&v131, sub_1005218D0, v64, BKAppDelegate.enableMetricsInspectorOnDebugMode(), v67, &type metadata for Bool);
  v68 = v131;
  v69 = v132;
  v70 = v133;
  v130 = v60;
  v71 = sub_10004CFD4(&qword_1009D8388);
  v131 = v101;
  v132 = v100;
  v133 = v99;
  v134 = v102;
  v135 = v103;
  v136 = OpaqueTypeConformance2;
  v72 = swift_getOpaqueTypeConformance2(&v131, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:onDismiss:content:)>>, 1);
  v73 = sub_1001F2108();
  v74 = v120;
  v75 = sub_100030B34(&qword_1009D83B0, &qword_1009D8388, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v96 = v72;
  v76 = v70;
  v77 = v121;
  v78 = v128;
  View.alert<A, B>(_:isPresented:actions:)(&v137, v68, v69, v76, sub_100521934, v129, v121, &type metadata for String, v71, v96, v73, v75);
  swift_release(v69);
  swift_release(v68);
  v79 = swift_bridgeObjectRelease(v138);
  (*(void (**)(char *, uint64_t, __n128))(v122 + 8))(v78, v77, v79);
  v80 = sub_100520FF0();
  v81 = v60;
  v82 = *v60;
  if (v82)
  {
    v83 = v80;
    v84 = swift_allocObject(&unk_10090D080, 24, 7);
    *(_QWORD *)(v84 + 16) = v82;
    v86 = (uint64_t)v124;
    v85 = v125;
    v87 = v126;
    (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v124, v74, v126);
    v88 = v86 + *(int *)(v123 + 36);
    *(_BYTE *)v88 = v83 & 1;
    *(_QWORD *)(v88 + 8) = sub_1002E6704;
    *(_QWORD *)(v88 + 16) = v84;
    v89 = *(void (**)(char *, uint64_t))(v85 + 8);
    v90 = v82;
    v89(v74, v87);
    return sub_100521960(v86, v127);
  }
  else
  {
    v92 = v81[1];
    v93 = type metadata accessor for ChromeStyle(0);
    v94 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v92, v93, v94, v95);
    __break(1u);
  }
  return result;
}

uint64_t sub_100520050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  __n128 v25;
  _QWORD v26[4];

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009E9A60);
  __chkstk_darwin(v5);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009E3630);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100521174((uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_100010960((uint64_t)v7, &qword_1009E9A60);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v13 = ThemeOptionsModule.isDirty.getter(v8);
  v14 = type metadata accessor for ThemeOptionsContainerViewModifier(0);
  if ((v13 & 1) != 0)
  {
    v15 = *(_QWORD *)(v1 + *(int *)(v14 + 32) + 8);
    swift_retain(v15);
    v16 = sub_1005AB12C(v26);
    v18 = v17;
    v19 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
      *(_BYTE *)(v18 + *(int *)(v19 + 20)) = 1;
    ((void (*)(_QWORD *, _QWORD))v16)(v26, 0);
  }
  else
  {
    v20 = *sub_10003F198((_QWORD *)(v1 + *(int *)(v14 + 28)), *(_QWORD *)(v1 + *(int *)(v14 + 28) + 24));
    v21 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
    type metadata accessor for MainActor(0);
    swift_retain(v20);
    v23 = static MainActor.shared.getter(v22);
    v24 = (_QWORD *)swift_allocObject(&unk_10090D120, 40, 7);
    v24[2] = v23;
    v24[3] = &protocol witness table for MainActor;
    v24[4] = v20;
    v15 = sub_10030C02C((uint64_t)v4, (uint64_t)&unk_1009E9AC0, (uint64_t)v24);
  }
  v25 = swift_release(v15);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v25);
}

uint64_t sub_1005202B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a2;
  v3 = type metadata accessor for PagePresentationSizing(0);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  __chkstk_darwin(v3);
  v44 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009EFEC0);
  __chkstk_darwin(v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ThemeOptionsView(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_10004CFD4(&qword_1009E9AB0);
  __chkstk_darwin(v39);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10004CFD4(&qword_1009E9AA0);
  __chkstk_darwin(v40);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_10004CFD4(&qword_1009E9A88);
  __chkstk_darwin(v41);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009E9A70);
  v42 = *(_QWORD *)(v17 - 8);
  v43 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4(&qword_1009E3630);
  ThemeOptionsModule.view.getter(v20);
  v21 = *(void **)a1;
  if (*(_QWORD *)a1)
  {
    v22 = type metadata accessor for ChromeStyle(0);
    v23 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v24 = v21;
    v25 = static ObservableObject.environmentStore.getter(v22, v23);
    sub_10002CD84((uint64_t)v10, (uint64_t)v12, type metadata accessor for ThemeOptionsView);
    v26 = (uint64_t *)&v12[*(int *)(v39 + 36)];
    *v26 = v25;
    v26[1] = (uint64_t)v21;
    sub_10002C8F0((uint64_t)v10, type metadata accessor for ThemeOptionsView);
    type metadata accessor for ThemeOptionsContainerViewModifier(0);
    sub_10066848C((uint64_t)v7);
    v27 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v7, 0, 1, v27);
    sub_10000B5E4((uint64_t)v7, (uint64_t)&v14[*(int *)(v40 + 36)], &qword_1009EFEC0);
    sub_10000B5E4((uint64_t)v12, (uint64_t)v14, &qword_1009E9AB0);
    sub_100010960((uint64_t)v7, &qword_1009EFEC0);
    sub_100010960((uint64_t)v12, &qword_1009E9AB0);
    sub_10000B5E4((uint64_t)v14, (uint64_t)v16, &qword_1009E9AA0);
    v28 = v41;
    v16[*(int *)(v41 + 36)] = 1;
    v29 = sub_100010960((uint64_t)v14, &qword_1009E9AA0);
    v30 = v44;
    static PresentationSizing<>.page.getter(v29);
    v31 = sub_100521740();
    v32 = v46;
    View.presentationSizing<A>(_:)(v30, v28, v46, v31, &protocol witness table for PagePresentationSizing);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v32);
    sub_100010960((uint64_t)v16, &qword_1009E9A88);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v47, v19, v43);
  }
  else
  {
    v34 = *(_QWORD *)(a1 + 8);
    v35 = type metadata accessor for ChromeStyle(0);
    v36 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v34, v35, v36, v37);
    __break(1u);
  }
  return result;
}

uint64_t sub_10052069C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t ObjCClassFromMetadata;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  uint64_t v66;
  unint64_t v67;
  char *v68;
  void (*v69)(char *, _QWORD, uint64_t, uint64_t);
  double (*v70)(char *, uint64_t);
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, char *, uint64_t);
  id v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v86 = a1;
  v82 = a2;
  v2 = type metadata accessor for ThemeOptionsContainerViewModifier(0);
  v3 = *(_QWORD *)(*(_QWORD *)(v2 - 8) + 64);
  v76 = *(_QWORD *)(v2 - 8);
  v77 = v3;
  __chkstk_darwin(v2);
  v84 = (uint64_t)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D8458);
  __chkstk_darwin(v5);
  v83 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v66 - v12;
  v14 = type metadata accessor for String.LocalizationValue(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v66 - v19;
  v21 = sub_10004CFD4(&qword_1009D8460);
  v80 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v81 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v79 = (char *)&v66 - v24;
  __chkstk_darwin(v25);
  v78 = (char *)&v66 - v26;
  __chkstk_darwin(v27);
  v85 = (char *)&v66 - v28;
  v29 = String.LocalizationValue.init(stringLiteral:)(0x2064726163736944, 0xEF7365676E616843);
  static Locale.current.getter(v29);
  v75 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v30 = v14;
  v75(v17, v20, v14);
  v31 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v31);
  v74 = ObjCClassFromMetadata;
  v73 = (id)objc_opt_self(NSBundle);
  v33 = objc_msgSend(v73, "bundleForClass:", ObjCClassFromMetadata);
  v72 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v68 = v10;
  v66 = v7;
  v72(v10, v13, v7);
  v34 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v33, v10, "Cancel editing Theme button", 27, 2);
  v36 = v35;
  v71 = *(void (**)(char *, uint64_t))(v8 + 8);
  v71(v13, v7);
  v70 = *(double (**)(char *, uint64_t))(v15 + 8);
  v37 = v30;
  v38 = v70(v20, v30);
  v87 = v34;
  v88 = v36;
  v39 = v83;
  static ButtonRole.destructive.getter(v38);
  v40 = type metadata accessor for ButtonRole(0);
  v69 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
  v69(v39, 0, 1, v40);
  v41 = v84;
  sub_10002CD84(v86, v84, type metadata accessor for ThemeOptionsContainerViewModifier);
  v42 = *(unsigned __int8 *)(v76 + 80);
  v43 = (v42 + 16) & ~v42;
  v76 = v42 | 7;
  v77 += v43;
  v44 = swift_allocObject(&unk_10090D0A8, v77, v42 | 7);
  sub_10052165C(v41, v44 + v43);
  v67 = sub_1001F2108();
  Button<>.init<A>(_:role:action:)(&v87, v39, sub_1005219B4, v44, &type metadata for String, v67);
  v45 = String.LocalizationValue.init(stringLiteral:)(0x696445207065654BLL, 0xEC000000676E6974);
  static Locale.current.getter(v45);
  v75(v17, v20, v37);
  v46 = objc_msgSend(v73, "bundleForClass:", v74);
  v47 = v68;
  v48 = v66;
  v72(v68, v13, v66);
  v49 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v46, v47, "Continue editing Theme with unsaved changes Button", 50, 2);
  v51 = v50;
  v71(v13, v48);
  v52 = ((uint64_t (*)(char *, uint64_t))v70)(v20, v37);
  v87 = v49;
  v88 = v51;
  v53 = v83;
  static ButtonRole.cancel.getter(v52);
  v69(v53, 0, 1, v40);
  v54 = v84;
  sub_10002CD84(v86, v84, type metadata accessor for ThemeOptionsContainerViewModifier);
  v55 = swift_allocObject(&unk_10090D0D0, v77, v76);
  sub_10052165C(v54, v55 + v43);
  v56 = v78;
  Button<>.init<A>(_:role:action:)(&v87, v53, sub_100521AA0, v55, &type metadata for String, v67);
  v57 = v79;
  v58 = v80;
  v59 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
  v60 = v85;
  v59(v79, v85, v21);
  v61 = v81;
  v59(v81, v56, v21);
  v62 = v82;
  v59(v82, v57, v21);
  v63 = sub_10004CFD4(&qword_1009D8468);
  v59(&v62[*(int *)(v63 + 48)], v61, v21);
  v64 = *(void (**)(char *, uint64_t))(v58 + 8);
  v64(v56, v21);
  v64(v60, v21);
  v64(v61, v21);
  return ((uint64_t (*)(char *, uint64_t))v64)(v57, v21);
}

double sub_100520C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v1 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for ThemeOptionsContainerViewModifier(0);
  v8 = *(_QWORD *)(v0 + *(int *)(v7 + 32) + 8);
  KeyPath = swift_getKeyPath(&unk_10072B3E8);
  v10 = swift_getKeyPath(&unk_10072B410);
  swift_retain(v8);
  static Published.subscript.getter(v6, v11, KeyPath);
  swift_release(KeyPath);
  swift_release(v10);
  v12 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v6, 1, v12))
  {
    sub_100010960((uint64_t)v6, &qword_1009E3608);
  }
  else
  {
    v13 = *((unsigned __int8 *)v6 + *(int *)(v12 + 20));
    sub_100010960((uint64_t)v6, &qword_1009E3608);
    *(_QWORD *)&result = swift_release(v8).n128_u64[0];
    if (v13 != 1)
      return result;
    v15 = *sub_10003F198((_QWORD *)(v0 + *(int *)(v7 + 28)), *(_QWORD *)(v0 + *(int *)(v7 + 28) + 24));
    v16 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v3, 1, 1, v16);
    type metadata accessor for MainActor(0);
    swift_retain(v15);
    v18 = static MainActor.shared.getter(v17);
    v19 = (_QWORD *)swift_allocObject(&unk_10090D0F8, 40, 7);
    v19[2] = v18;
    v19[3] = &protocol witness table for MainActor;
    v19[4] = v15;
    v8 = sub_10030C02C((uint64_t)v3, (uint64_t)&unk_1009E3618, (uint64_t)v19);
  }
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

double sub_100520E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  int v10;
  double result;
  void (*v12)(_QWORD *);
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[4];

  v1 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v1);
  v3 = (_QWORD *)((char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ThemeOptionsContainerViewModifier(0) + 32) + 8);
  KeyPath = swift_getKeyPath(&unk_10072B3E8);
  v6 = swift_getKeyPath(&unk_10072B410);
  swift_retain(v4);
  static Published.subscript.getter(v3, v7, KeyPath);
  swift_release(KeyPath);
  swift_release(v6);
  v8 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  if (v9((uint64_t)v3, 1, v8))
  {
    sub_100010960((uint64_t)v3, &qword_1009E3608);
  }
  else
  {
    v10 = *((unsigned __int8 *)v3 + *(int *)(v8 + 20));
    sub_100010960((uint64_t)v3, &qword_1009E3608);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
    if (v10 != 1)
      return result;
    swift_retain(v4);
    v12 = sub_1005AB12C(v15);
    v14 = v13;
    if (!v9(v13, 1, v8))
      *(_BYTE *)(v14 + *(int *)(v8 + 20)) = 0;
    ((void (*)(_QWORD *, _QWORD))v12)(v15, 0);
  }
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

uint64_t sub_100520FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ThemeOptionsContainerViewModifier(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(unsigned __int8 *)(v1 + *(int *)(v8 + 24));
  sub_10002CD84(v1, (uint64_t)v7, v10);
  if (v9 == 1)
  {
    v11 = *(_QWORD *)&v7[*(int *)(v5 + 32) + 8];
    KeyPath = swift_getKeyPath(&unk_10072B3E8);
    v13 = swift_getKeyPath(&unk_10072B410);
    swift_retain(v11);
    static Published.subscript.getter(v4, v14, KeyPath);
    swift_release(KeyPath);
    swift_release(v13);
    v15 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v4, 1, v15))
      v16 = 0;
    else
      v16 = *((unsigned __int8 *)v4 + *(int *)(v15 + 20));
    sub_100010960((uint64_t)v4, &qword_1009E3608);
    swift_release(v11);
  }
  else
  {
    v16 = 0;
  }
  sub_10002C8F0((uint64_t)v7, type metadata accessor for ThemeOptionsContainerViewModifier);
  return v16;
}

uint64_t sub_100521174@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ThemeOptionsContainerViewModifier(0) + 32) + 8);
  KeyPath = swift_getKeyPath(&unk_10072B3E8);
  v8 = swift_getKeyPath(&unk_10072B410);
  swift_retain(v6);
  static Published.subscript.getter(v5, v9, KeyPath);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v8);
  v10 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v5, 1, v10) == 1)
  {
    sub_100010960((uint64_t)v5, &qword_1009E3608);
    v11 = sub_10004CFD4(&qword_1009E3630);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    v13 = sub_10004CFD4(&qword_1009E3630);
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, _QWORD *, uint64_t))(v14 + 16))(a1, v5, v13);
    sub_10002C8F0((uint64_t)v5, type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
  }
}

uint64_t sub_1005212F0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;

  v4 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for ThemeOptionsContainerViewModifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(a1 + *(int *)(v10 + 24));
  sub_10002CD84(a1, (uint64_t)v9, v12);
  if (v11 != 1)
    goto LABEL_4;
  v13 = *(_QWORD *)&v9[*(int *)(v7 + 32) + 8];
  KeyPath = swift_getKeyPath(&unk_10072B3E8);
  v15 = swift_getKeyPath(&unk_10072B410);
  swift_retain(v13);
  static Published.subscript.getter(v6, v16, KeyPath);
  swift_release(KeyPath);
  swift_release(v15);
  v17 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17))
  {
    sub_100010960((uint64_t)v6, &qword_1009E3608);
    swift_release(v13);
LABEL_4:
    sub_10002C8F0((uint64_t)v9, type metadata accessor for ThemeOptionsContainerViewModifier);
    goto LABEL_5;
  }
  v20 = *((_BYTE *)v6 + *(int *)(v17 + 20));
  sub_100010960((uint64_t)v6, &qword_1009E3608);
  swift_release(v13);
  sub_10002C8F0((uint64_t)v9, type metadata accessor for ThemeOptionsContainerViewModifier);
  if ((v20 & 1) == 0)
    return sub_100521174(a2);
LABEL_5:
  v18 = sub_10004CFD4(&qword_1009E3630);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
}

uint64_t sub_1005214CC@<X0>(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t result;
  uint64_t v20;

  v4 = sub_10004CFD4(&qword_1009E3608);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for ThemeOptionsContainerViewModifier(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(unsigned __int8 *)(a1 + *(int *)(v10 + 24));
  sub_10002CD84(a1, (uint64_t)v9, v12);
  if (v11 == 1)
  {
    v13 = *(_QWORD *)&v9[*(int *)(v7 + 32) + 8];
    KeyPath = swift_getKeyPath(&unk_10072B3E8);
    v15 = swift_getKeyPath(&unk_10072B410);
    swift_retain(v13);
    static Published.subscript.getter(v6, v16, KeyPath);
    swift_release(KeyPath);
    swift_release(v15);
    v17 = type metadata accessor for ThemeOptionsContainerViewModel.ThemeOptions(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v6, 1, v17))
      v18 = 0;
    else
      v18 = *((_BYTE *)v6 + *(int *)(v17 + 20));
    sub_100010960((uint64_t)v6, &qword_1009E3608);
    swift_release(v13);
  }
  else
  {
    v18 = 0;
  }
  result = sub_10002C8F0((uint64_t)v9, type metadata accessor for ThemeOptionsContainerViewModifier);
  *a2 = v18;
  return result;
}

uint64_t sub_10052165C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThemeOptionsContainerViewModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005216A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsContainerViewModifier(0) - 8) + 80);
  return sub_1005212F0(v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t sub_1005216E4()
{
  return sub_100521AAC(sub_100520050);
}

uint64_t sub_1005216F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsContainerViewModifier(0) - 8) + 80);
  return sub_1005202B0(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_100521740()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9A90;
  if (!qword_1009E9A90)
  {
    v1 = sub_100030B74(&qword_1009E9A88);
    sub_1005217AC();
    sub_1002D1198();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E9A90);
  }
  return result;
}

unint64_t sub_1005217AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9A98;
  if (!qword_1009E9A98)
  {
    v1 = sub_100030B74(&qword_1009E9AA0);
    sub_100521830();
    sub_100030B34((unint64_t *)&unk_1009F1DF0, &qword_1009D3828, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E9A98);
  }
  return result;
}

unint64_t sub_100521830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9AA8;
  if (!qword_1009E9AA8)
  {
    v1 = sub_100030B74(&qword_1009E9AB0);
    sub_100008DB0(&qword_1009E9AB8, type metadata accessor for ThemeOptionsView, (uint64_t)&unk_1007181E0);
    sub_100030B34((unint64_t *)&qword_1009D3818, &qword_1009D3820, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E9AA8);
  }
  return result;
}

uint64_t sub_1005218D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ThemeOptionsContainerViewModifier(0) - 8) + 80);
  return sub_1005214CC(v1 + ((v3 + 32) & ~v3), a1);
}

uint64_t sub_100521910()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100521934@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_10052069C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_10052193C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100521960(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E9A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005219B4()
{
  return sub_100521AAC((uint64_t (*)(void))sub_100520C80);
}

uint64_t sub_1005219C4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = (int *)type metadata accessor for ThemeOptionsContainerViewModifier(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;

  v7 = (_QWORD *)(v0 + v4 + v1[5]);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v6 + v1[7]));
  swift_release(*(_QWORD *)(v6 + v1[8] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_100521AA0()
{
  return sub_100521AAC((uint64_t (*)(void))sub_100520E80);
}

uint64_t sub_100521AAC(uint64_t (*a1)(void))
{
  type metadata accessor for ThemeOptionsContainerViewModifier(0);
  return a1();
}

unint64_t sub_100521AF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t OpaqueTypeConformance2;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;

  result = qword_1009E9AC8;
  if (!qword_1009E9AC8)
  {
    v12 = sub_100030B74(&qword_1009E9A58);
    v1 = sub_100030B74(&qword_1009E9A48);
    v2 = sub_100030B74(&qword_1009D8388);
    v3 = sub_100030B74(&qword_1009E9A68);
    v4 = sub_100030B74(&qword_1009E3630);
    v5 = sub_100030B74(&qword_1009E9A70);
    v6 = sub_100030B34(&qword_1009E9A78, &qword_1009E9A68, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    v7 = sub_100030B34(&qword_1009E9A80, &qword_1009E3630, (uint64_t)&protocol conformance descriptor for ThemeOptionsModule<A>);
    v13 = sub_100030B74(&qword_1009E9A88);
    v14 = (_QWORD *)type metadata accessor for PagePresentationSizing(255);
    v15 = sub_100521740();
    v16 = &protocol witness table for PagePresentationSizing;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.presentationSizing<A>(_:)>>, 1);
    v13 = v3;
    v14 = (_QWORD *)v4;
    v15 = v5;
    v16 = (void *)v6;
    v17 = v7;
    v18 = OpaqueTypeConformance2;
    v9 = swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.sheet<A, B>(item:onDismiss:content:)>>, 1);
    v10 = sub_1001F2108();
    v11 = sub_100030B34(&qword_1009D83B0, &qword_1009D8388, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v13 = v1;
    v14 = &type metadata for String;
    v15 = v2;
    v16 = (void *)v9;
    v17 = v10;
    v18 = v11;
    swift_getOpaqueTypeConformance2(&v13, &opaque type descriptor for <<opaque return type of View.alert<A, B>(_:isPresented:actions:)>>, 1);
    sub_100030B34(&qword_1009D83B8, &qword_1009D83C0, (uint64_t)&protocol conformance descriptor for _ValueActionModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v12);
    atomic_store(result, (unint64_t *)&qword_1009E9AC8);
  }
  return result;
}

double sub_100521CDC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072B4A0);
  v4 = v0;
  v2 = sub_100008DB0(&qword_1009E12D0, type metadata accessor for BrightnessController, (uint64_t)&unk_10072B480);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v4, KeyPath, v2);
  swift_release(KeyPath);
  return *(double *)(v0 + 32);
}

id sub_100521D60(double a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  double v4;
  double v5;
  void *v6;
  id result;
  double v8;
  uint64_t v9;
  uint64_t v10;

  *(double *)(v1 + 32) = a1;
  KeyPath = swift_getKeyPath(&unk_10072B4A0);
  v10 = v1;
  v3 = sub_100008DB0(&qword_1009E12D0, type metadata accessor for BrightnessController, (uint64_t)&unk_10072B480);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, KeyPath, v3);
  *(_QWORD *)&v4 = swift_release(KeyPath).n128_u64[0];
  v5 = *(double *)(v1 + 32);
  v6 = *(void **)(v1 + 16);
  result = objc_msgSend(v6, "brightness", v4);
  if (v5 != v8)
  {
    v9 = swift_getKeyPath(&unk_10072B4A0);
    v10 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v10, v9, v3);
    swift_release(v9);
    return objc_msgSend(v6, "setBrightness:", *(double *)(v1 + 32));
  }
  return result;
}

id sub_100521E58(double a1)
{
  return sub_100521D60(a1);
}

_QWORD *sub_100521E80(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009E9BA0);
  v23 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[3] = 0;
  _s5Books17REActionMenuStateC22__observationRegistrar33_32ABA65274D463EF405FFF160E47F6ACLL11Observation0nF0Vvpfi_0();
  v2[2] = a1;
  v11 = a1;
  objc_msgSend(v11, "brightness");
  v2[4] = v12;
  v13 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v14 = v11;
  NSNotificationCenter.publisher(for:object:)(UIScreenBrightnessDidChangeNotification, v11);

  v15 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  Publisher.compactMap<A>(_:)(sub_100522090, 0, v4, &type metadata for CGFloat, v15);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v16 = swift_allocObject(&unk_10090D190, 24, 7);
  swift_weakInit(v16 + 16, v2);
  v17 = sub_100522410();
  v18 = Publisher<>.sink(receiveValue:)(sub_100522408, v16, v8, v17);

  v19 = swift_release(v16);
  (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v10, v8, v19);
  v20 = v2[3];
  v2[3] = v18;
  swift_release(v20);
  return v2;
}

void sub_100522090(uint64_t a1@<X8>)
{
  unint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;
  _QWORD v8[4];

  Notification.object.getter(v8);
  if (!v8[3])
  {
    sub_10004A7B8((uint64_t)v8);
    goto LABEL_5;
  }
  v2 = sub_10052248C();
  if ((swift_dynamicCast(&v7, v8, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_5:
    v6 = 1;
    v5 = 0;
    goto LABEL_6;
  }
  v3 = v7;
  objc_msgSend(v7, "brightness");
  v5 = v4;

  v6 = 0;
LABEL_6:
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
}

void sub_100522138(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  _QWORD v8[6];
  uint64_t v9;
  char v10[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    KeyPath = swift_getKeyPath(&unk_10072B4A0);
    __chkstk_darwin(KeyPath);
    v8[2] = v5;
    v8[3] = v2;
    v9 = v5;
    v7 = sub_100008DB0(&qword_1009E12D0, type metadata accessor for BrightnessController, (uint64_t)&unk_10072B480);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_10052245C, v8, (char *)&type metadata for () + 8, v7);
    swift_release(v5);
    swift_release(KeyPath);
  }
}

uint64_t sub_100522240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC5Books20BrightnessController___observationRegistrar;
  v2 = type metadata accessor for ObservationRegistrar(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005222A0()
{
  return type metadata accessor for BrightnessController(0);
}

uint64_t type metadata accessor for BrightnessController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009E9B00;
  if (!qword_1009E9B00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BrightnessController);
  return result;
}

uint64_t sub_1005222E4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = "\b";
  v4[2] = (char *)&value witness table for Builtin.Int64 + 64;
  result = type metadata accessor for ObservationRegistrar(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_100522380()
{
  id v0;
  uint64_t v1;
  _QWORD *result;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v1 = type metadata accessor for BrightnessController(0);
  swift_allocObject(v1, *(unsigned int *)(v1 + 48), *(unsigned __int16 *)(v1 + 52));
  result = sub_100521E80(v0);
  qword_100A1EBE8 = (uint64_t)result;
  return result;
}

uint64_t sub_1005223E4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100522408(uint64_t *a1)
{
  uint64_t v1;

  sub_100522138(a1, v1);
}

unint64_t sub_100522410()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9BA8;
  if (!qword_1009E9BA8)
  {
    v1 = sub_100030B74(&qword_1009E9BA0);
    result = swift_getWitnessTable(&protocol conformance descriptor for Publishers.CompactMap<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E9BA8);
  }
  return result;
}

id sub_10052245C()
{
  uint64_t v0;

  return sub_100521D60(*(double *)(v0 + 24));
}

unint64_t sub_10052248C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9BB0;
  if (!qword_1009E9BB0)
  {
    v1 = objc_opt_self(UIScreen);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009E9BB0);
  }
  return result;
}

uint64_t sub_1005224C8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0 + 16) + 112);
}

double sub_1005224D4()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0 + 16) + 120);
}

uint64_t sub_1005224E0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

double sub_1005224E8(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[3];
  char v8;
  uint64_t v9;

  *(_BYTE *)(v1 + 56) = a1;
  if (a1 != 3)
  {
    v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 48);
    KeyPath = swift_getKeyPath(&unk_10072B5E8);
    __chkstk_darwin(KeyPath);
    v7[2] = v3;
    v8 = a1;
    v9 = v3;
    v5 = sub_100008DB0((unint64_t *)&qword_1009D6380, type metadata accessor for PageTurnViewModel, (uint64_t)&unk_10071D2E0);
    swift_retain(v3);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v9, KeyPath, sub_1003612B4, v7, (char *)&type metadata for () + 8, v5);
    swift_release(v3);
    *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
  }
  return result;
}

void sub_1005225E4()
{
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for SpreadPaginationEntity(0);
  __chkstk_darwin(v1);
  v2 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v2);
  __asm { BR              X10 }
}

uint64_t sub_100522690()
{
  uint64_t v0;

  return sub_1003B4D44(v0) & 1;
}

BOOL sub_1005227B4(char *a1, unsigned __int8 *a2)
{
  return sub_1005231AC(*a1, *a2);
}

uint64_t sub_1005227C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _BYTE v8[24];

  v4 = type metadata accessor for PageMovementState(0);
  __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  a3 += 16;
  swift_beginAccess(a3, v8, 0, 0);
  result = swift_weakLoadStrong(a3);
  if (result)
    __asm { BR              X10 }
  return result;
}

void sub_100522A34()
{
  __asm { BR              X10 }
}

uint64_t sub_100522A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD))
{
  uint64_t v4;
  char v5;

  return a4(v4, v5 & 1);
}

void sub_100522AD0(double a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  v4 = *(_QWORD *)(v2 + 24);
  Strong = swift_unknownObjectWeakLoadStrong(v4 + 32);
  if (Strong)
  {
    v6 = Strong;
    v7 = *(_QWORD *)(v4 + 40);
    ObjectType = swift_getObjectType();
    v9 = (void *)dispatch thunk of ContentScrollContainerHosting.contentScrollContainer.getter(ObjectType, v7);
    swift_unknownObjectRelease(v6);
    objc_msgSend(v9, "contentOffset");
    v11 = v10;
    v13 = v12;

    v14 = swift_unknownObjectWeakLoadStrong(v4 + 32);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)(v4 + 40);
      v17 = swift_getObjectType();
      v21 = (id)dispatch thunk of ContentScrollContainerHosting.contentScrollContainer.getter(v17, v16);
      v19 = v18;
      swift_unknownObjectRelease(v15);
      v20 = swift_getObjectType();
      dispatch thunk of ContentScrollSupport.setContentOffset(_:animated:userInitiated:)(0, 0, v20, v19, v11, v13 + a2);

    }
  }
}

void sub_100522BD8(char a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;

  v6 = *(_QWORD *)(v3 + 24);
  Strong = swift_unknownObjectWeakLoadStrong(v6 + 32);
  if (Strong)
  {
    v8 = Strong;
    v9 = *(_QWORD *)(v6 + 40);
    ObjectType = swift_getObjectType();
    v11 = (void *)dispatch thunk of ContentScrollContainerHosting.contentScrollContainer.getter(ObjectType, v9);
    swift_unknownObjectRelease(v8);
    objc_msgSend(v11, "contentOffset");
    v13 = v12;
    v15 = v14;

    v16 = swift_unknownObjectWeakLoadStrong(v6 + 32);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)(v6 + 40);
      v19 = swift_getObjectType();
      v23 = (id)dispatch thunk of ContentScrollContainerHosting.contentScrollContainer.getter(v19, v18);
      v21 = v20;
      swift_unknownObjectRelease(v17);
      v22 = swift_getObjectType();
      dispatch thunk of ContentScrollSupport.setContentOffset(_:animated:userInitiated:)(a1 & 1, 0, v22, v21, v13, v15 + a3);

    }
  }
}

uint64_t sub_100522CF0()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  sub_1001FE9A0((uint64_t)(v0 + 5));
  swift_release(v0[8]);
  return swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for PageMovementController()
{
  return objc_opt_self(_TtC5Books22PageMovementController);
}

uint64_t getEnumTagSinglePayload for PageMovementController.Mode(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_100522DA4 + 4 * byte_10072B4DC[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for PageMovementController.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100522E4C + 4 * byte_10072B4E6[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100522E80 + 4 * byte_10072B4E1[v5]))();
}

uint64_t sub_100522E80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100522E88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100522E90);
  return result;
}

uint64_t sub_100522E9C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100522EA4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100522EA8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100522EB0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100522EBC(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_100522ED0(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for PageMovementController.Mode()
{
  return &type metadata for PageMovementController.Mode;
}

uint64_t sub_100522EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  *(_QWORD *)(v3 + 40) = a2;
  return swift_unknownObjectWeakAssign(v3 + 32, a1);
}

_QWORD *sub_100522F0C@<X0>(_QWORD *a1@<X8>)
{
  return CurrentValueSubject.value.getter(a1);
}

uint64_t sub_100522F30()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_10004CFD4(&qword_1009E3438);
  v1 = sub_100523160();
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_100522F80()
{
  char v0;

  sub_1005225E4();
  return v0 & 1;
}

void sub_100522FA4()
{
  sub_100522A34();
}

void sub_100522FDC()
{
  sub_100522A34();
}

void sub_100523014(double a1, double a2)
{
  sub_100522AD0(a1, a2);
}

void sub_100523034(char a1, double a2, double a3)
{
  sub_100522BD8(a1, a2, a3);
}

uint64_t sub_100523054(double a1, double a2, double a3, double a4)
{
  return sub_1003B5CF4(a1, a2, a3, a4);
}

uint64_t sub_100523078(double a1, double a2, double a3, double a4)
{
  return sub_1003B684C(a1, a2, a3, a4);
}

uint64_t sub_10052309C(int a1, double a2, double a3, double a4, double a5)
{
  return sub_1003B7030(a1, a2, a3, a4, a5);
}

void sub_1005230C0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v4 = *(void (**)(uint64_t))(v1 + 88);
  v2 = (_QWORD *)(v1 + 88);
  v3 = v4;
  if (v4)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 96);
    *v2 = 0;
    v2[1] = 0;
    swift_retain(v5);
    v6 = sub_10002AD00((uint64_t)v3, v5);
    v3(v6);
    sub_10002AD00((uint64_t)v3, v5);
  }
}

uint64_t sub_100523120(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100523160()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E3440;
  if (!qword_1009E3440)
  {
    v1 = sub_100030B74(&qword_1009E3438);
    result = swift_getWitnessTable(&protocol conformance descriptor for CurrentValueSubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E3440);
  }
  return result;
}

BOOL sub_1005231AC(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  if (a1 == 3)
    return a2 == 3;
  if (a2 == 3)
    return 0;
  v4 = ((uint64_t (*)(void))PageTurnStyle.rawValue.getter)();
  v6 = v5;
  v8 = PageTurnStyle.rawValue.getter(a2);
  v9 = v7;
  if (v4 == v8 && v6 == v7)
  {
    swift_bridgeObjectRelease_n(v6, 2);
    return 1;
  }
  else
  {
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v8, v7, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v9);
    return v10 & 1;
  }
}

unint64_t sub_10052327C()
{
  unint64_t result;

  result = qword_1009E9C80;
  if (!qword_1009E9C80)
  {
    result = swift_getWitnessTable(&unk_10072B6AC, &type metadata for OpenTableOfContentsIntent);
    atomic_store(result, (unint64_t *)&qword_1009E9C80);
  }
  return result;
}

unint64_t sub_1005232C4()
{
  unint64_t result;

  result = qword_1009E9C88;
  if (!qword_1009E9C88)
  {
    result = swift_getWitnessTable(&unk_10072B6D4, &type metadata for OpenTableOfContentsIntent);
    atomic_store(result, (unint64_t *)&qword_1009E9C88);
  }
  return result;
}

uint64_t sub_100523308(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008758D4, 1);
}

uint64_t sub_100523318(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008758AC, 1);
}

uint64_t sub_100523328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1EBF0);
  sub_100048F64(v10, (uint64_t)qword_100A1EBF0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007D12A0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Open Table of Contents AppIntent Title", 38, 2);
}

uint64_t sub_10052349C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  Swift::String v10;
  uint64_t v12;

  v0 = sub_10004CFD4(&qword_1009E9CC0);
  __chkstk_darwin(v0);
  v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009E9CC8);
  __chkstk_darwin(v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100524108();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for OpenTableOfContentsIntent, v6);
  v7._object = (void *)0x80000001007D1280;
  v7._countAndFlagsBits = 0xD00000000000001ALL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_10072B710);
  v9 = sub_10004CFD4(&qword_1009E9CD0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v3, v9);
  swift_release(KeyPath);
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  ParameterSummaryString.init(stringInterpolation:)(v5, &type metadata for OpenTableOfContentsIntent, v6);
  return IntentParameterSummary.init(_:table:)(v2, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for OpenTableOfContentsIntent, v6);
}

uint64_t sub_100523614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[28] = a2;
  v3[29] = a3;
  v3[27] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[30] = v4;
  v3[31] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[32] = v5;
  v3[33] = v6;
  return swift_task_switch(sub_100523688, v5, v6);
}

uint64_t sub_100523688()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;

  AppDependency.wrappedValue.getter(v0 + 14);
  v1 = IntentParameter.wrappedValue.getter(v0 + 2);
  v0[34] = static MainActor.shared.getter(v1);
  v2 = (_QWORD *)swift_task_alloc(dword_1009E5084);
  v0[35] = v2;
  *v2 = v0;
  v2[1] = sub_100523714;
  return sub_10047105C((uint64_t)(v0 + 2));
}

uint64_t sub_100523714()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 280);
  *(_QWORD *)(*v1 + 288) = v0;
  swift_task_dealloc(v3);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(*(_QWORD *)(v2 + 240), &protocol witness table for MainActor);
  if (v0)
    v6 = sub_100523940;
  else
    v6 = sub_10052379C;
  return swift_task_switch(v6, v5, v4);
}

uint64_t sub_10052379C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 272));
  sub_100279C98((_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 120));
  *(_QWORD *)(v0 + 208) = *(_QWORD *)(v0 + 136);
  sub_1001FC120((_QWORD *)(v0 + 208));
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v0 + 144);
  sub_1001FC120((_QWORD *)(v0 + 192));
  return swift_task_switch(sub_100523818, *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
}

uint64_t sub_100523818()
{
  _QWORD *v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  unint64_t v9;
  uint64_t v10;

  swift_release(v0[31]);
  v1 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v2 = objc_msgSend(v1, "menuController");

  v3 = (void *)sub_1005273B0();
  if (!v3)
    goto LABEL_5;
  v4 = v0[28];
  v0[19] = v4;
  v5 = v0[29];
  v0[22] = &type metadata for OpenTableOfContentsIntent;
  v0[20] = v5;
  swift_retain(v4);
  swift_retain(v5);
  v6 = sub_1005D3008((uint64_t)"books_showTableOfContents:", (uint64_t)(v0 + 19));
  v7 = sub_10004A7B8((uint64_t)(v0 + 19));
  if ((v6 & 1) == 0)
  {

LABEL_5:
    v9 = sub_10052414C();
    v10 = swift_allocError(&type metadata for OpenTableOfContentsIntent.IntentError, v9, 0, 0);
    swift_willThrow(v10);
    v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  static IntentResult.result<>()(v7);

  v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100523940()
{
  _QWORD *v0;

  swift_release(v0[34]);
  return swift_task_switch(sub_100523978, v0[32], v0[33]);
}

uint64_t sub_100523978()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 248));
  sub_100279C98((_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 120));
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 136);
  sub_1001FC120((_QWORD *)(v0 + 200));
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 144);
  sub_1001FC120((_QWORD *)(v0 + 184));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005239F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE v12[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x80000001007D12F0);
  static Locale.current.getter(v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Error message when attempting to show TOC there is no book open.", 64, 2);
}

uint64_t sub_100523B34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CE7D8 != -1)
    swift_once(&qword_1009CE7D8, sub_100523328);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1EBF0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100523BA8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v1;
  v4 = v1[1];
  v6 = (_QWORD *)swift_task_alloc(dword_1009E9CB4);
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_10000AE34;
  return sub_100523614(a1, v5, v4);
}

uint64_t sub_100523C0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_100523C94();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100523C30(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100524108();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenTableOfContentsIntent()
{
  return &type metadata for OpenTableOfContentsIntent;
}

uint64_t sub_100523C68()
{
  return sub_100030B34(&qword_1009E9C98, &qword_1009E9CA0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_100523C94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v51 = *(_QWORD *)(v0 - 8);
  v52 = v0;
  __chkstk_darwin(v0);
  v50 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v2);
  v49 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v48 = (char *)&v42 - v5;
  v6 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v6);
  v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for LocalizedStringResource(0);
  v18 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v44 = (char *)&v42 - v22;
  sub_10004CFD4(&qword_1009D2100);
  v23 = type metadata accessor for AppDependencyManager(0);
  v53 = 0u;
  v54 = 0u;
  *(_QWORD *)&v55 = 0;
  v28 = static AppDependencyManager.shared.getter(v23, v24, v25, v26, v27);
  v47 = AppDependency.__allocating_init(key:manager:)(&v53, v28);
  v46 = sub_10004CFD4(&qword_1009D91F8);
  v29 = String.LocalizationValue.init(stringLiteral:)(1802465090, 0xE400000000000000);
  static Locale.current.getter(v29);
  v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v31(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Book' parameter that specifies which book to act on. in an intent", 66, 2);
  v32 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000003CLL, 0x80000001007D1240);
  static Locale.current.getter(v32);
  v31(v11, v30, v8);
  v33 = v45;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Description of the parameter of the specific book title to act on in a book related Intent", 90, 2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v33, 0, 1, v43);
  v57 = 0u;
  v58 = 0u;
  v55 = 0u;
  v56 = 0u;
  v53 = 0u;
  v54 = 0u;
  v34 = String.LocalizationValue.init(stringLiteral:)(0x6F62206863696857, 0xEB000000003F6B6FLL);
  static Locale.current.getter(v34);
  v31(v11, v30, v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Book' prompt when running a Book specific intent with no book selected.", 72, 2);
  v35 = v48;
  IntentDialog.init(_:)(v20);
  v36 = type metadata accessor for IntentDialog(0);
  v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
  v37(v35, 0, 1, v36);
  v38 = v49;
  v37(v49, 1, 1, v36);
  v39 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v50, enum case for InputConnectionBehavior.default(_:), v52);
  v40 = sub_1001F8840();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v44, v33, &v53, v35, v38, v39, v40);
  return v47;
}

unint64_t sub_100524108()
{
  unint64_t result;

  result = qword_1009E9CA8;
  if (!qword_1009E9CA8)
  {
    result = swift_getWitnessTable(&unk_10072B61C, &type metadata for OpenTableOfContentsIntent);
    atomic_store(result, &qword_1009E9CA8);
  }
  return result;
}

unint64_t sub_10052414C()
{
  unint64_t result;

  result = qword_1009E9CB8;
  if (!qword_1009E9CB8)
  {
    result = swift_getWitnessTable(&unk_10072B7D0, &type metadata for OpenTableOfContentsIntent.IntentError);
    atomic_store(result, (unint64_t *)&qword_1009E9CB8);
  }
  return result;
}

uint64_t sub_100524190@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t storeEnumTagSinglePayload for OpenTableOfContentsIntent.IntentError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1005241F8 + 4 * byte_10072B610[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_100524218 + 4 * byte_10072B615[v4]))();
}

_BYTE *sub_1005241F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_100524218(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100524220(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100524228(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_100524230(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_100524238(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OpenTableOfContentsIntent.IntentError()
{
  return &type metadata for OpenTableOfContentsIntent.IntentError;
}

unint64_t sub_100524258()
{
  unint64_t result;

  result = qword_1009E9CD8;
  if (!qword_1009E9CD8)
  {
    result = swift_getWitnessTable(&unk_10072B7A8, &type metadata for OpenTableOfContentsIntent.IntentError);
    atomic_store(result, (unint64_t *)&qword_1009E9CD8);
  }
  return result;
}

uint64_t sub_10052429C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_task_switch(sub_1005242B4, 0, 0);
}

uint64_t sub_1005242B4()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  NSString v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = (void *)v0[16];
  v3 = String._bridgeToObjectiveC()();
  v0[17] = v3;
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_10052437C;
  v4 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_10021A6F4;
  v5[3] = &unk_10090D5E8;
  v5[4] = v4;
  objc_msgSend(v2, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 1, v3, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_10052437C()
{
  return swift_task_switch(sub_1005243C8, 0, 0);
}

uint64_t sub_1005243C8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = *(_QWORD **)(v0 + 120);

  *v1 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100524424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_task_switch(sub_10052443C, 0, 0);
}

uint64_t sub_10052443C()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  NSString v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = (void *)v0[16];
  v3 = String._bridgeToObjectiveC()();
  v0[17] = v3;
  v0[7] = v0 + 24;
  v0[2] = v0;
  v0[3] = sub_100524504;
  v4 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_10021A6F4;
  v5[3] = &unk_10090D5A8;
  v5[4] = v4;
  objc_msgSend(v2, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 1024, v3, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_100524504()
{
  return swift_task_switch(sub_100524550, 0, 0);
}

uint64_t sub_100524550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 144) = objc_opt_self(BKAppDelegate);
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 152) = v1;
  *(_QWORD *)(v0 + 160) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005245D4, v2, v3);
}

uint64_t sub_1005245D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = objc_msgSend(*(id *)(v0 + 144), "delegate", swift_release(*(_QWORD *)(v0 + 160)).n128_f64[0]);
  return swift_task_switch(sub_100524630, 0, 0);
}

uint64_t sub_100524630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v1 + 176) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100524690, v3, v4);
}

uint64_t sub_100524690()
{
  _QWORD *v0;
  void *v1;
  char *v2;
  uint64_t v3;

  v1 = (void *)v0[21];
  v2 = (char *)objc_msgSend(v1, "objectGraphHost", swift_release(v0[22]).n128_f64[0]);
  v3 = *(_QWORD *)&v2[OBJC_IVAR___BKObjectGraphHost_objectGraph];
  v0[23] = v3;
  swift_retain(v3);

  return swift_task_switch(sub_100524704, 0, 0);
}

uint64_t sub_100524704()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 120) = *(_QWORD *)(v0 + 184);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10052471C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_task_switch(sub_100524734, 0, 0);
}

uint64_t sub_100524734()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  NSString v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = (void *)v0[16];
  v3 = String._bridgeToObjectiveC()();
  v0[17] = v3;
  v0[7] = v0 + 18;
  v0[2] = v0;
  v0[3] = sub_1005247FC;
  v4 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_10021A6F4;
  v5[3] = &unk_10090D568;
  v5[4] = v4;
  objc_msgSend(v2, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 1024, v3, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_1005247FC()
{
  return swift_task_switch(sub_100524848, 0, 0);
}

uint64_t sub_100524848()
{
  uint64_t v0;
  unint64_t *v1;

  v1 = *(unint64_t **)(v0 + 120);

  *v1 = sub_100524CB8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10052488C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = a2;
  return swift_task_switch(sub_1005248A4, 0, 0);
}

uint64_t sub_1005248A4()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  NSString v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = (void *)v0[16];
  v3 = String._bridgeToObjectiveC()();
  v0[17] = v3;
  v0[7] = v0 + 24;
  v0[2] = v0;
  v0[3] = sub_10052496C;
  v4 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_10021A6F4;
  v5[3] = &unk_10090D528;
  v5[4] = v4;
  objc_msgSend(v2, "appLaunchCoordinatorOnConditionMask:blockID:performBlock:", 1, v3, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_10052496C()
{
  return swift_task_switch(sub_1005249B8, 0, 0);
}

uint64_t sub_1005249B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 144) = objc_opt_self(BKAppDelegate);
  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 152) = v1;
  *(_QWORD *)(v0 + 160) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100524A3C, v2, v3);
}

uint64_t sub_100524A3C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = objc_msgSend(*(id *)(v0 + 144), "delegate", swift_release(*(_QWORD *)(v0 + 160)).n128_f64[0]);
  return swift_task_switch(sub_100524A98, 0, 0);
}

uint64_t sub_100524A98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(v1 + 176) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100524AF8, v3, v4);
}

uint64_t sub_100524AF8()
{
  _QWORD *v0;
  void *v1;

  v1 = (void *)v0[21];
  v0[23] = objc_msgSend(v1, "engagementManager", swift_release(v0[22]).n128_f64[0]);

  return swift_task_switch(sub_100524B54, 0, 0);
}

void sub_100524B54()
{
  uint64_t v0;
  char *v1;
  _QWORD *v2;
  id v3;

  v1 = *(char **)(v0 + 184);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 120);
    v3 = *(id *)&v1[OBJC_IVAR___BKEngagementManager_manager];

    v2[3] = type metadata accessor for Manager(0);
    v2[4] = &off_1009197C8;
    *v2 = v3;
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100524BCC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100524BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009E9D9C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  v5[15] = a1;
  v5[16] = v4;
  return swift_task_switch(sub_1005248A4, 0, 0);
}

uint64_t sub_100524C54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009E9DAC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  v5[15] = a1;
  v5[16] = v4;
  return swift_task_switch(sub_100524734, 0, 0);
}

unint64_t sub_100524CB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9DB8;
  if (!qword_1009E9DB8)
  {
    v1 = objc_opt_self(JSAApplication);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, &qword_1009E9DB8);
  }
  return result;
}

uint64_t sub_100524CF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009E9DC4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AE34;
  v5[15] = a1;
  v5[16] = v4;
  return swift_task_switch(sub_10052443C, 0, 0);
}

uint64_t sub_100524D58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009E9DD4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  v5[15] = a1;
  v5[16] = v4;
  return swift_task_switch(sub_1005242B4, 0, 0);
}

uint64_t sub_100524DCC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E9DE0);
  sub_100048F64(v0, (uint64_t)qword_1009E9DE0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000001CLL, 0x800000010072B830);
}

uint64_t sub_100524E48()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  id v19;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v0);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009E9E90);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1009CE8E0 != -1)
    swift_once(&qword_1009CE8E0, sub_1005AF0F0);
  NSNotificationCenter.publisher(for:object:)(static NSNotificationName.achievementNotification, 0);

  v12 = sub_100008DB0((unint64_t *)&qword_1009E8840, (uint64_t (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher, (uint64_t)&protocol conformance descriptor for NSNotificationCenter.Publisher);
  Publisher.compactMap<A>(_:)(sub_1005250A0, 0, v3, &type metadata for String, v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = sub_100059BB4();
  v19 = (id)static OS_dispatch_queue.main.getter(v13);
  v14 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v2, 1, 1, v14);
  v15 = sub_1005253A8();
  v16 = sub_100008DB0((unint64_t *)&qword_1009D4E00, (uint64_t (*)(uint64_t))sub_100059BB4, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(&v19, v2, v7, v13, v15, v16);
  sub_100010960((uint64_t)v2, (uint64_t *)&unk_1009D4AE0);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1005250A0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint8_t *v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30[5];
  __int128 v31;
  __int128 v32;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = Notification.userInfo.getter(v6);
  if (v9)
  {
    v10 = v9;
    v28 = 0x656C746974;
    v29 = 0xE500000000000000;
    AnyHashable.init<A>(_:)(&v28, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v10 + 16) && (v11 = sub_1000561E8((uint64_t)v30), (v12 & 1) != 0))
    {
      sub_10004CD0C(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&v31);
    }
    else
    {
      v31 = 0u;
      v32 = 0u;
    }
    swift_bridgeObjectRelease(v10);
    sub_1000569AC((uint64_t)v30);
    if (*((_QWORD *)&v32 + 1))
    {
      if ((swift_dynamicCast(&v28, &v31, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      {
        v13 = v29;
        *a2 = v28;
        a2[1] = v13;
        return;
      }
    }
    else
    {
      sub_100010960((uint64_t)&v31, (uint64_t *)&unk_1009D04E0);
    }
  }
  if (qword_1009CE7E0 != -1)
    swift_once(&qword_1009CE7E0, sub_100524DCC);
  v14 = type metadata accessor for Logger(0);
  sub_100048F64(v14, (uint64_t)qword_1009E9DE0);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.error.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(12, -1);
    v27 = a2;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc(32, -1);
    v30[0] = v20;
    *(_DWORD *)v19 = 136315138;
    v21 = sub_100008DB0((unint64_t *)&unk_1009E9EA0, (uint64_t (*)(uint64_t))&type metadata accessor for Notification, (uint64_t)&protocol conformance descriptor for Notification);
    v22 = dispatch thunk of CustomStringConvertible.description.getter(v4, v21);
    v24 = v23;
    *(_QWORD *)&v31 = sub_100040F58(v22, v23, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, (char *)&v31 + 8, v19 + 4, v19 + 12);
    v25 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v8, v4, v25);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Unable to extract achievement title from notification %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    v26 = v19;
    a2 = v27;
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }

  *a2 = 0;
  a2[1] = 0;
}

uint64_t type metadata accessor for BookReaderAchievementManager()
{
  return objc_opt_self(_TtC5Books28BookReaderAchievementManager);
}

unint64_t sub_1005253A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9E98;
  if (!qword_1009E9E98)
  {
    v1 = sub_100030B74(&qword_1009E9E90);
    result = swift_getWitnessTable(&protocol conformance descriptor for Publishers.CompactMap<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009E9E98);
  }
  return result;
}

id UIColor.isDark.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v1 = (void *)objc_opt_self(BKImageColorAnalyzer);
  v2 = objc_msgSend(v0, "CGColor");
  v3 = objc_msgSend(v1, "isDarkColor:", v2);

  return v3;
}

uint64_t sub_1005254D0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009E9EB0);
  sub_100048F64(v0, (uint64_t)qword_1009E9EB0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x746E6F43756E654DLL, 0xEE0072656C6C6F72);
}

void sub_100525550(unsigned __int8 a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v2 = OBJC_IVAR___BKMenuController_keyWindowType;
  if (v1[OBJC_IVAR___BKMenuController_keyWindowType] != a1)
  {
    v3 = v1;
    if (qword_1009CE7E8 != -1)
      swift_once(&qword_1009CE7E8, sub_1005254D0);
    v4 = type metadata accessor for Logger(0);
    sub_100048F64(v4, (uint64_t)qword_1009E9EB0);
    v5 = v1;
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      *(_DWORD *)v8 = 136315138;
      v15 = v9;
      LOBYTE(v14) = v3[v2];
      v10 = String.init<A>(describing:)(&v14, &type metadata for MenuController.BooksWindowType);
      v12 = v11;
      v14 = sub_100040F58(v10, v11, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15, v8 + 4, v8 + 12);
      swift_bridgeObjectRelease(v12);

      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);
    }
    else
    {

    }
    v13 = objc_msgSend((id)objc_opt_self(UIMenuSystem), "mainSystem");
    objc_msgSend(v13, "setNeedsRebuild");

  }
}

void sub_100525750(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v3 = OBJC_IVAR___BKMenuController_recentlyOpenedAssets;
  if ((sub_1000653D4(a1, *(_QWORD **)&v1[OBJC_IVAR___BKMenuController_recentlyOpenedAssets]) & 1) == 0)
  {
    if (qword_1009CE7E8 != -1)
      swift_once(&qword_1009CE7E8, sub_1005254D0);
    v4 = type metadata accessor for Logger(0);
    sub_100048F64(v4, (uint64_t)qword_1009E9EB0);
    v5 = v1;
    v6 = Logger.logObject.getter(v5);
    v10 = static os_log_type_t.debug.getter(v6, v7, v8, v9);
    if (os_log_type_enabled(v6, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(32, -1);
      v20 = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = *(_QWORD *)&v2[v3];
      swift_bridgeObjectRetain(v13);
      v15 = Array.description.getter(v14, &type metadata for MenuController.RecentlyOpenedAsset);
      v17 = v16;
      swift_bridgeObjectRelease(v13);
      v19 = sub_100040F58(v15, v17, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20, v11 + 4, v11 + 12);
      swift_bridgeObjectRelease(v17);

      swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v12, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {

    }
    v18 = objc_msgSend((id)objc_opt_self(UIMenuSystem), "mainSystem");
    objc_msgSend(v18, "setNeedsRebuild");

  }
}

Swift::Int sub_100525954()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  Hasher.init(_seed:)(v6, 0);
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v6, v1, v2);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v6, v4, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1005259D8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(a1, v3, v4);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v6, v5);
  return swift_bridgeObjectRelease(v5);
}

Swift::Int sub_100525A48(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v4 = v1[3];
  Hasher.init(_seed:)(v7, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v7, v2, v3);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRetain(v4);
  String.hash(into:)(v7, v5, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

void sub_100525AC8(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v3 = OBJC_IVAR___BKMenuController_userCollections;
  if ((sub_1000653D4(a1, *(_QWORD **)&v1[OBJC_IVAR___BKMenuController_userCollections]) & 1) == 0)
  {
    if (qword_1009CE7E8 != -1)
      swift_once(&qword_1009CE7E8, sub_1005254D0);
    v4 = type metadata accessor for Logger(0);
    sub_100048F64(v4, (uint64_t)qword_1009E9EB0);
    v5 = v1;
    v6 = Logger.logObject.getter(v5);
    v10 = static os_log_type_t.debug.getter(v6, v7, v8, v9);
    if (os_log_type_enabled(v6, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v11 = 134217984;
      v13 = *(_QWORD *)(*(_QWORD *)&v2[v3] + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v11 + 4, v11 + 12);

      swift_slowDealloc(v11, -1, -1);

    }
    else
    {

    }
    v12 = objc_msgSend((id)objc_opt_self(UIMenuSystem), "mainSystem");
    objc_msgSend(v12, "setNeedsRebuild");

  }
}

Swift::Int sub_100525C40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  v2 = *v0;
  v1 = v0[1];
  Hasher.init(_seed:)(v4, 0);
  if (v1)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v1);
    String.hash(into:)(v4, v2, v1);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

void sub_100525CBC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[1];
  if (v3)
  {
    v4 = *v1;
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v3);
    String.hash(into:)(a1, v4, v3);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

Swift::Int sub_100525D30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  v3 = *v1;
  v2 = v1[1];
  Hasher.init(_seed:)(v5, a1);
  if (v2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v2);
    String.hash(into:)(v5, v3, v2);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

uint64_t sub_100525DA8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      v5 = *a1;
      v6 = v5 == *a2 && v3 == v4;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)(v5, v3, *a2, v4, 0) & 1) != 0)
        return 1;
    }
  }
  else if (!v4)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_100525E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_100525E6C, v6, v7);
}

uint64_t sub_100525E6C()
{
  uint64_t v0;
  double v1;

  swift_release(*(_QWORD *)(v0 + 24));
  v1 = sub_10002F93C();
  return (*(uint64_t (**)(double))(v0 + 8))(v1);
}

id sub_100525EA0(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  int v17;
  _BOOL4 v18;
  uint64_t v19;
  void *Strong;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint8_t *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t ObjCClassFromMetadata;
  id v67;
  void *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  Class isa;
  _OWORD *v83;
  uint64_t v84;
  int v85;
  os_log_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t inited;
  uint64_t v91;
  uint64_t ObjectType;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  _QWORD *v98;
  _OWORD v99[3];
  char v100[48];

  v3 = type metadata accessor for Locale(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v83 - v8;
  v10 = type metadata accessor for String.LocalizationValue(0);
  v95 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v93 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v94 = (char *)&v83 - v13;
  if (qword_1009CE7E8 != -1)
    swift_once(&qword_1009CE7E8, sub_1005254D0);
  v14 = type metadata accessor for Logger(0);
  sub_100048F64(v14, (uint64_t)qword_1009E9EB0);
  v15 = v1;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  v18 = os_log_type_enabled(v16, (os_log_type_t)v17);
  v96 = v3;
  v97 = v15;
  if (v18)
  {
    v85 = v17;
    v86 = v16;
    v87 = v6;
    inited = v4;
    v91 = (uint64_t)a1;
    v19 = swift_slowAlloc(52, -1);
    v84 = swift_slowAlloc(160, -1);
    *(_QWORD *)&v99[0] = v84;
    *(_DWORD *)v19 = 136316162;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v15[OBJC_IVAR___BKMenuController_keyWindow]);

    if (Strong)
      v21 = 0x3E776F646E69773CLL;
    else
      v21 = 7104878;
    if (Strong)
      v22 = 0xE800000000000000;
    else
      v22 = 0xE300000000000000;
    v98 = (_QWORD *)sub_100040F58(v21, v22, (uint64_t *)v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v19 + 4, v19 + 12);
    swift_bridgeObjectRelease(v22);

    *(_WORD *)(v19 + 12) = 2080;
    LOBYTE(v98) = v15[OBJC_IVAR___BKMenuController_keyWindowType];
    v23 = String.init<A>(describing:)(&v98, &type metadata for MenuController.BooksWindowType);
    v25 = v24;
    v98 = (_QWORD *)sub_100040F58(v23, v24, (uint64_t *)v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v19 + 14, v19 + 22);
    swift_bridgeObjectRelease(v25);

    *(_WORD *)(v19 + 22) = 2080;
    LOBYTE(v98) = v15[OBJC_IVAR___BKMenuController_bookshelfType];
    v26 = sub_10004CFD4(&qword_1009EA028);
    v27 = String.init<A>(describing:)(&v98, v26);
    v29 = v28;
    v98 = (_QWORD *)sub_100040F58(v27, v28, (uint64_t *)v99);
    v83 = v99;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v19 + 24, v19 + 32);
    swift_bridgeObjectRelease(v29);

    ObjectType = v19;
    *(_WORD *)(v19 + 32) = 2080;
    v30 = *(_QWORD *)&v15[OBJC_IVAR___BKMenuController_recentlyOpenedAssets];
    v31 = *(_QWORD *)(v30 + 16);
    v32 = _swiftEmptyArrayStorage;
    v89 = v9;
    v88 = v10;
    if (v31)
    {
      v98 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v30);
      sub_100045E44(0, v31, 0);
      v33 = 0;
      v32 = v98;
      v34 = v98[2];
      v35 = 2 * v34;
      do
      {
        v36 = *(_QWORD *)(v30 + v33 + 48);
        v37 = *(_QWORD *)(v30 + v33 + 56);
        v98 = v32;
        v38 = v32[3];
        swift_bridgeObjectRetain(v37);
        if (v34 >= v38 >> 1)
        {
          sub_100045E44(v38 > 1, v34 + 1, 1);
          v32 = v98;
        }
        v32[2] = v34 + 1;
        v39 = &v32[v35];
        v39[4] = v36;
        v39[5] = v37;
        v35 += 2;
        v33 += 32;
        ++v34;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease(v30);
      v9 = v89;
      v10 = v88;
      v15 = v97;
    }
    v40 = ObjectType;
    v41 = Array.description.getter(v32, &type metadata for String);
    v43 = v42;
    swift_bridgeObjectRelease(v32);
    v98 = (_QWORD *)sub_100040F58(v41, v43, (uint64_t *)v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v83, v40 + 34, v40 + 42);
    swift_bridgeObjectRelease(v43);

    *(_WORD *)(v40 + 42) = 2080;
    v44 = *(_QWORD *)&v15[OBJC_IVAR___BKMenuController_userCollections];
    v45 = *(_QWORD *)(v44 + 16);
    v46 = _swiftEmptyArrayStorage;
    if (v45)
    {
      v98 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v44);
      sub_100045E44(0, v45, 0);
      v47 = 0;
      v46 = v98;
      v48 = v98[2];
      v49 = 2 * v48;
      do
      {
        v50 = *(_QWORD *)(v44 + v47 + 48);
        v51 = *(_QWORD *)(v44 + v47 + 56);
        v98 = v46;
        v52 = v46[3];
        swift_bridgeObjectRetain(v51);
        if (v48 >= v52 >> 1)
        {
          sub_100045E44(v52 > 1, v48 + 1, 1);
          v46 = v98;
        }
        v46[2] = v48 + 1;
        v53 = &v46[v49];
        v53[4] = v50;
        v53[5] = v51;
        v49 += 2;
        v47 += 32;
        ++v48;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease(v44);
      v9 = v89;
      v10 = v88;
      v15 = v97;
    }
    v54 = (uint8_t *)ObjectType;
    v55 = Array.description.getter(v46, &type metadata for String);
    v57 = v56;
    swift_bridgeObjectRelease(v46);
    v98 = (_QWORD *)sub_100040F58(v55, v57, (uint64_t *)v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v98, v99, v54 + 44, v54 + 52);
    swift_bridgeObjectRelease(v57);

    v58 = v86;
    _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v85, "Building menu with keyWindow: %s, keyWindowType: %s, bookshelfType: %s, recentlyOpenedAssets: %s, userCollections: %s", v54, 0x34u);
    v59 = v84;
    swift_arrayDestroy(v84, 5, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v59, -1, -1);
    swift_slowDealloc(v54, -1, -1);

    v4 = inited;
    a1 = (void *)v91;
    v6 = v87;
  }
  else
  {

  }
  ObjectType = swift_getObjectType();
  v60 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  inited = swift_initStackObject(v60, v100);
  *(_OWORD *)(inited + 16) = xmmword_1007118F0;
  v91 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v61 = v94;
  v62 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000016, 0x80000001007D1720);
  static Locale.current.getter(v62);
  v63 = v95;
  v64 = v93;
  (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v93, v61, v10);
  v65 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v65);
  v67 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v68 = a1;
  v69 = v4;
  v70 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v71 = v96;
  v70(v6, v9, v96);
  v72 = String.init(localized:table:bundle:locale:comment:)(v64, 0, 0, v67, v6, "Books -> Provide Books Fedback", 30, 2);
  v74 = v73;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v9, v71);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v10);
  memset(v99, 0, 32);
  v75 = UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v72, v74, 0, 0, 0, 0, "books_provideFeedback:", v99, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v76 = inited;
  *(_QWORD *)(inited + 32) = v75;
  *(_QWORD *)&v99[0] = v76;
  specialized Array._endMutation()(v75);
  v77 = *(_QWORD *)&v99[0];
  sub_1001F5F14(*(uint64_t *)&v99[0], (uint64_t)UIMenuPreferences);
  swift_bridgeObjectRelease(v77);
  v78 = *(_QWORD *)&v97[OBJC_IVAR___BKMenuController_recentlyOpenedAssets];
  v79 = *(_QWORD *)&v97[OBJC_IVAR___BKMenuController_userCollections];
  swift_bridgeObjectRetain(v78);
  swift_bridgeObjectRetain(v79);
  sub_10029F4D4(v68, v78, v79);
  swift_bridgeObjectRelease(v79);
  swift_bridgeObjectRelease(v78);
  sub_100200408(v68);
  if (qword_1009CE7F0 != -1)
    swift_once(&qword_1009CE7F0, sub_1005288E4);
  v80 = qword_1009E9EC8;
  sub_1003C2724(v68, (void *)qword_1009E9EC8);
  isa = sub_100685FA4().super.super.isa;
  objc_msgSend(v68, "insertSiblingMenu:afterMenuForIdentifier:", isa, v80);

  sub_10041086C(v68);
  return objc_msgSend(v68, "removeMenuForIdentifier:", UIMenuFormat, sub_1005A8570(v68));
}

void sub_1005267E4(void *a1)
{
  char *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  void *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int64_t v57;
  _QWORD *v58;
  unint64_t *v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  NSObject *log;
  char *v74;
  void *v75;
  _QWORD *v76;
  void *v77;
  uint64_t v78[2];
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;

  v3 = objc_msgSend(*(id *)&v1[OBJC_IVAR___BKMenuController_legacyAccountStore], "ams_iTunesAccounts");
  v4 = sub_100009E04(0, &qword_1009D44D8, ACAccount_ptr);
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v19 = v5;
    else
      v19 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v5);
    v75 = v1;
    v77 = a1;
    if (v6)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(v5);
    v8 = _swiftEmptyArrayStorage;
    goto LABEL_20;
  }
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v75 = v1;
  v77 = a1;
  if (!v6)
    goto LABEL_19;
LABEL_3:
  v78[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100366DE8(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0)
  {
    __break(1u);
    return;
  }
  v7 = 0;
  v8 = (_QWORD *)v78[0];
  do
  {
    if ((v5 & 0xC000000000000001) != 0)
      v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, v5);
    else
      v9 = *(id *)(v5 + 8 * v7 + 32);
    v10 = v9;
    v11 = objc_msgSend(v9, "username");
    if (v11)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v15 = v14;

    }
    else
    {

      v13 = 0;
      v15 = 0;
    }
    v78[0] = (uint64_t)v8;
    v17 = v8[2];
    v16 = v8[3];
    if (v17 >= v16 >> 1)
    {
      sub_100366DE8(v16 > 1, v17 + 1, 1);
      v8 = (_QWORD *)v78[0];
    }
    ++v7;
    v8[2] = v17 + 1;
    v18 = &v8[2 * v17];
    v18[4] = v13;
    v18[5] = v15;
  }
  while (v6 != v7);
  swift_bridgeObjectRelease(v5);
LABEL_20:
  v80 = &_swiftEmptySetSingleton;
  v20 = v8[2];
  swift_bridgeObjectRetain(v8);
  if (v20)
  {
    v21 = 0;
    v22 = v8 + 5;
    v23 = _swiftEmptyArrayStorage;
    do
    {
      if (v21 <= v20)
        v24 = v20;
      else
        v24 = v21;
      v25 = &v22[2 * v21];
      v26 = v21;
      while (1)
      {
        if (v24 == v26)
        {
          __break(1u);
          goto LABEL_58;
        }
        v27 = *(v25 - 1);
        v28 = *v25;
        v21 = v26 + 1;
        swift_bridgeObjectRetain_n(*v25, 2);
        v29 = sub_10060C12C(v78, v27, v28);
        swift_bridgeObjectRelease(v78[1]);
        if ((v29 & 1) != 0)
          break;
        swift_bridgeObjectRelease(v28);
        v25 += 2;
        ++v26;
        if (v20 == v21)
          goto LABEL_37;
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v23);
      v79 = v23;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100366DE8(0, v23[2] + 1, 1);
        v23 = v79;
      }
      v32 = v23[2];
      v31 = v23[3];
      if (v32 >= v31 >> 1)
      {
        sub_100366DE8(v31 > 1, v32 + 1, 1);
        v23 = v79;
      }
      v23[2] = v32 + 1;
      v33 = &v23[2 * v32];
      v33[4] = v27;
      v33[5] = v28;
      v22 = v8 + 5;
    }
    while (v20 - 1 != v26);
  }
  else
  {
    v23 = _swiftEmptyArrayStorage;
  }
LABEL_37:
  swift_bridgeObjectRelease(v8);
  v34 = v80;
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v34);
  v21 = type metadata accessor for SidebarViewModel(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v26 = sub_10059FD04();
  if (qword_1009CE7E8 != -1)
LABEL_58:
    swift_once(&qword_1009CE7E8, sub_1005254D0);
  v35 = type metadata accessor for Logger(0);
  sub_100048F64(v35, (uint64_t)qword_1009E9EB0);
  swift_retain_n(v26, 2);
  v36 = v75;
  swift_retain_n(v23, 2);
  v37 = (char *)v36;
  v38 = Logger.logObject.getter(v37);
  v39 = static os_log_type_t.default.getter(v38);
  if (os_log_type_enabled(v38, v39))
  {
    v72 = v39;
    log = v38;
    v76 = v23;
    v40 = swift_slowAlloc(32, -1);
    v71 = swift_slowAlloc(96, -1);
    v78[0] = v71;
    *(_DWORD *)v40 = 136315650;
    v80 = (_QWORD *)v26;
    swift_retain(v26);
    v41 = String.init<A>(describing:)(&v80, v21);
    v43 = v42;
    v80 = (_QWORD *)sub_100040F58(v41, v42, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v40 + 4, v40 + 12);
    swift_release_n(v26, 2);
    swift_bridgeObjectRelease(v43);
    *(_WORD *)(v40 + 12) = 2080;
    v74 = v37;
    v44 = *(_QWORD *)&v37[OBJC_IVAR___BKMenuController_userCollections];
    v45 = *(_QWORD *)(v44 + 16);
    v46 = _swiftEmptyArrayStorage;
    if (v45)
    {
      v70 = v26;
      v80 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v44);
      sub_100045E44(0, v45, 0);
      v46 = v80;
      v47 = (uint64_t *)(v44 + 56);
      do
      {
        v48 = *(v47 - 1);
        v49 = *v47;
        v80 = v46;
        v51 = v46[2];
        v50 = v46[3];
        swift_bridgeObjectRetain(v49);
        if (v51 >= v50 >> 1)
        {
          sub_100045E44(v50 > 1, v51 + 1, 1);
          v46 = v80;
        }
        v46[2] = v51 + 1;
        v52 = &v46[2 * v51];
        v52[4] = v48;
        v52[5] = v49;
        v47 += 4;
        --v45;
      }
      while (v45);
      swift_bridgeObjectRelease(v44);
      v26 = v70;
    }
    v54 = Array.description.getter(v46, &type metadata for String);
    v56 = v55;
    swift_bridgeObjectRelease(v46);
    v80 = (_QWORD *)sub_100040F58(v54, v56, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v40 + 14, v40 + 22);
    v37 = v74;

    swift_bridgeObjectRelease(v56);
    *(_WORD *)(v40 + 22) = 2080;
    v23 = v76;
    v57 = v76[2];
    v58 = _swiftEmptyArrayStorage;
    if (v57)
    {
      v80 = _swiftEmptyArrayStorage;
      sub_100045E44(0, v57, 0);
      v58 = v80;
      v59 = v76 + 5;
      do
      {
        v60 = *v59;
        if (*v59)
        {
          v61 = *(v59 - 1);
          v62 = *v59;
        }
        else
        {
          v61 = 0;
          v62 = 0xE000000000000000;
        }
        v80 = v58;
        v64 = v58[2];
        v63 = v58[3];
        swift_bridgeObjectRetain(v60);
        if (v64 >= v63 >> 1)
        {
          sub_100045E44(v63 > 1, v64 + 1, 1);
          v58 = v80;
        }
        v58[2] = v64 + 1;
        v65 = &v58[2 * v64];
        v65[4] = v61;
        v65[5] = v62;
        v59 += 2;
        --v57;
      }
      while (v57);
      v37 = v74;
      v23 = v76;
    }
    v66 = Array.description.getter(v58, &type metadata for String);
    v68 = v67;
    swift_bridgeObjectRelease(v58);
    v80 = (_QWORD *)sub_100040F58(v66, v68, v78);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v80, &v81, v40 + 24, v40 + 32);
    swift_release_n(v23, 2);
    swift_bridgeObjectRelease(v68);
    _os_log_impl((void *)&_mh_execute_header, log, v72, "Building internal menu with sidebarModel: %s, userCollections: %s, legacyAccounts: %s", (uint8_t *)v40, 0x20u);
    swift_arrayDestroy(v71, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v71, -1, -1);
    swift_slowDealloc(v40, -1, -1);

    v53 = v77;
  }
  else
  {

    swift_release_n(v23, 2);
    swift_release_n(v26, 2);
    v53 = v77;
  }
  v69 = *(_QWORD *)&v37[OBJC_IVAR___BKMenuController_userCollections];
  swift_bridgeObjectRetain(v69);
  sub_10042EA0C(v53, v26, v69, (uint64_t)v23);
  swift_release(v23);
  swift_release(v26);
  swift_bridgeObjectRelease(v69);
}

uint64_t sub_100526F68(void (*a1)(uint64_t *__return_ptr, _QWORD *, __n128), uint64_t a2, uint64_t (*a3)(__n128), uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23[2];
  void *v24;

  v24 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain(a5);
  sub_100528B58(a5, (uint64_t)&v24, a1);
  v9 = v8;
  v10 = swift_bridgeObjectRelease(a5);
  if (*(_QWORD *)(v9 + 16) != *(_QWORD *)(a5 + 16))
  {
    v11 = a3(v10);
    if (v12)
    {
      v13 = v11;
      v14 = v12;
      if (qword_1009CE7E8 != -1)
        swift_once(&qword_1009CE7E8, sub_1005254D0);
      v15 = type metadata accessor for Logger(0);
      sub_100048F64(v15, (uint64_t)qword_1009E9EB0);
      swift_bridgeObjectRetain(v14);
      v17 = Logger.logObject.getter(v16);
      v18 = static os_log_type_t.fault.getter(v17);
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc(12, -1);
        v20 = swift_slowAlloc(32, -1);
        v23[0] = v20;
        *(_DWORD *)v19 = 136315138;
        swift_bridgeObjectRetain(v14);
        v22 = sub_100040F58(v13, v14, v23);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v19 + 4, v19 + 12);
        swift_bridgeObjectRelease_n(v14, 3);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "%s", v19, 0xCu);
        swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v20, -1, -1);
        swift_slowDealloc(v19, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v14, 2);
      }
    }
  }
  swift_bridgeObjectRelease(v24);
  return v9;
}

uint64_t sub_1005271CC(uint64_t a1)
{
  Swift::String v2;
  Swift::String v3;
  void *object;
  Swift::String v5;

  _StringGuts.grow(_:)(99);
  v2._object = (void *)0x80000001007D16F0;
  v2._countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v2);
  v3._countAndFlagsBits = Array.description.getter(a1, &type metadata for MenuController.UserCollection);
  object = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(object);
  v5._object = (void *)0x80000001007D1640;
  v5._countAndFlagsBits = 0x100000000000003DLL;
  String.append(_:)(v5);
  return 0;
}

double sub_100527274(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double result;
  void *v6;
  _QWORD *v7;
  _BYTE v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD **)(Strong + OBJC_IVAR___BKMenuController_userCollections);
    *(_QWORD *)(Strong + OBJC_IVAR___BKMenuController_userCollections) = v2;
    swift_bridgeObjectRetain(v2);
    sub_100525AC8(v7);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

void sub_1005272F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  uint64_t v5;
  id v6;
  char *v7;
  void *v8;
  char v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = *(_QWORD *)(Strong + OBJC_IVAR___BKMenuController_appKitBundle);
    if (v5)
      v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(v5), "frontMostUIWindow");
    else
      v6 = 0;
    v7 = &v4[OBJC_IVAR___BKMenuController_keyWindow];
    v8 = (void *)swift_unknownObjectWeakLoadStrong(&v4[OBJC_IVAR___BKMenuController_keyWindow]);
    swift_unknownObjectWeakAssign(v7, v6);
    sub_10004F054(v8);

  }
}

uint64_t sub_1005273B0()
{
  uint64_t v0;
  id Strong;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;

  Strong = (id)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___BKMenuController_keyWindow);
  if (Strong
    || (v10 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___BKMenuController_sceneManager), "currentSceneController")) != 0
    && (v11 = v10,
        Strong = objc_msgSend(v10, "bk_window"),
        swift_unknownObjectRelease(v11),
        Strong))
  {
    sub_1005275E0();
    v3 = v2;
    if (!v2
      || (v18[0] = v2,
          v4 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr),
          v5 = v3,
          v6 = sub_10004CFD4(&qword_1009EA008),
          (swift_dynamicCast(v21, v18, v4, v6, 6) & 1) == 0))
    {
      v22 = 0;
      memset(v21, 0, sizeof(v21));
    }
    sub_100528EDC((uint64_t)v21, (uint64_t)v18);
    v7 = v19;
    if (v19)
    {
      v8 = v20;
      sub_10003F198(v18, v19);
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);

      _s5Books15CurrentPageViewVwxx_0(v18);
    }
    else
    {

      sub_100010960((uint64_t)v18, &qword_1009EA000);
      v9 = 0;
    }
    sub_100010960((uint64_t)v21, &qword_1009EA000);
  }
  else
  {
    if (qword_1009CE7E8 != -1)
      swift_once(&qword_1009CE7E8, sub_1005254D0);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100048F64(v12, (uint64_t)qword_1009E9EB0);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Cannot find window for actionTarget)", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    return 0;
  }
  return v9;
}

uint64_t sub_1005275E0()
{
  void *v0;
  NSObject *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  objc_class *ObjCClassFromMetadata;
  NSString *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  id v47;
  os_log_type_t v48;
  uint8_t *v49;
  id v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;

  v1 = objc_msgSend(v0, "rootViewController");
  if (!v1)
  {
    if (qword_1009CE7E8 != -1)
      swift_once(&qword_1009CE7E8, sub_1005254D0);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100048F64(v5, (uint64_t)qword_1009E9EB0);
    v2 = Logger.logObject.getter(v6);
    v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v2, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v7, "no root VC", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }
    goto LABEL_8;
  }
  v2 = v1;
  v3 = type metadata accessor for MainToolbarController();
  if (swift_dynamicCastClass(v2, v3))
  {

    return 1;
  }
  v9 = -[NSObject childViewControllers](v2, "childViewControllers");
  v10 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  if (!((unint64_t)v11 >> 62))
  {
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_12;
LABEL_26:
    swift_bridgeObjectRelease(v11);
    sub_100528918();
    if (!v15)
      goto LABEL_18;
    goto LABEL_27;
  }
  if (v11 < 0)
    v21 = v11;
  else
    v21 = v11 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v11);
  v22 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v11);
  if (!v22)
    goto LABEL_26;
LABEL_12:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v11);
  }
  else
  {
    if (!*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_58;
    }
    v12 = *(id *)(v11 + 32);
  }
  v13 = v12;
  swift_bridgeObjectRelease(v11);
  v14 = type metadata accessor for SplitViewController(0);
  if (swift_dynamicCastClass(v13, v14))
  {

    return 2;
  }

  sub_100528918();
  if (!v15)
  {
LABEL_18:
    if (qword_1009CE7E8 == -1)
    {
LABEL_19:
      v16 = type metadata accessor for Logger(0);
      v17 = sub_100048F64(v16, (uint64_t)qword_1009E9EB0);
      v18 = Logger.logObject.getter(v17);
      v19 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "no transitioning VC", v20, 2u);
        swift_slowDealloc(v20, -1, -1);

        return 0;
      }

LABEL_8:
      return 0;
    }
LABEL_58:
    swift_once(&qword_1009CE7E8, sub_1005254D0);
    goto LABEL_19;
  }
LABEL_27:
  v23 = v15;
  v24 = objc_msgSend(v15, "contentViewController");
  if (!v24)
  {
    if (qword_1009CE7E8 != -1)
      swift_once(&qword_1009CE7E8, sub_1005254D0);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100048F64(v32, (uint64_t)qword_1009E9EB0);
    v29 = Logger.logObject.getter(v33);
    v34 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v29, v34))
    {

      goto LABEL_8;
    }
    v35 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v34, "no content VC", v35, 2u);
    swift_slowDealloc(v35, -1, -1);

    goto LABEL_37;
  }
  v25 = v24;
  v26 = objc_opt_self(BKLibraryBookCoverViewController);
  if (swift_dynamicCastObjCClass(v25, v26))
  {
    if (qword_1009CE7E8 != -1)
      swift_once(&qword_1009CE7E8, sub_1005254D0);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100048F64(v27, (uint64_t)qword_1009E9EB0);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v29, v30))
    {

      goto LABEL_8;
    }
    v31 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v31 = 0;
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "content VC is book cover", v31, 2u);
    swift_slowDealloc(v31, -1, -1);

LABEL_37:
    return 0;
  }
  v36 = type metadata accessor for BookReaderModuleHost(0);
  if (swift_dynamicCastClass(v25, v36))
  {

    return 4;
  }
  else
  {
    v37 = objc_opt_self(BKThumbnailBookViewController);
    if (swift_dynamicCastObjCClass(v25, v37))
    {

      return 3;
    }
    else
    {
      ObjectType = swift_getObjectType();
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(ObjectType);
      v40 = NSStringFromClass(ObjCClassFromMetadata);
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
      v43 = v42;

      if (v41 == 0xD000000000000014 && v43 == 0x80000001007D1680)
      {
        swift_bridgeObjectRelease(0x80000001007D1680);
      }
      else
      {
        v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, 0xD000000000000014, 0x80000001007D1680, 0);
        swift_bridgeObjectRelease(v43);
        if ((v44 & 1) == 0)
        {
          if (qword_1009CE7E8 != -1)
            swift_once(&qword_1009CE7E8, sub_1005254D0);
          v46 = type metadata accessor for Logger(0);
          sub_100048F64(v46, (uint64_t)qword_1009E9EB0);
          v47 = v25;
          v29 = Logger.logObject.getter(v47);
          v48 = static os_log_type_t.error.getter();
          if (!os_log_type_enabled(v29, v48))
          {

            goto LABEL_8;
          }
          v49 = (uint8_t *)swift_slowAlloc(12, -1);
          v52 = (_QWORD *)swift_slowAlloc(8, -1);
          v53 = v47;
          *(_DWORD *)v49 = 138412290;
          v50 = v47;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, &v54, v49 + 4, v49 + 12);
          *v52 = v25;

          _os_log_impl((void *)&_mh_execute_header, v29, v48, "Unrecognized (book?) content view controller: %@", v49, 0xCu);
          v51 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
          swift_arrayDestroy(v52, 1, v51);
          swift_slowDealloc(v52, -1, -1);
          swift_slowDealloc(v49, -1, -1);

          goto LABEL_37;
        }
      }
      v45 = sub_100528A68();

      if ((v45 & 1) != 0)
        return 5;
      else
        return 6;
    }
  }
}

uint64_t sub_100527D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t Strong;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void **aBlock;
  _QWORD v53[4];
  uint64_t v54;

  v1 = v0;
  v2 = type metadata accessor for DispatchTime(0);
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v48 - v6;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR___BKMenuController_keyWindow);
  if (Strong && (v12 = (void *)Strong, v13 = sub_1005275E0(), v15 = v14, v12, v15 != (void *)1))

  else
    v13 = 1;
  v16 = OBJC_IVAR___BKMenuController_keyWindowType;
  v17 = *(_BYTE *)(v1 + OBJC_IVAR___BKMenuController_keyWindowType);
  *(_BYTE *)(v1 + OBJC_IVAR___BKMenuController_keyWindowType) = v13;
  sub_100525550(v17);
  v18 = OBJC_IVAR___BKMenuController_keyWindowTypeRetryCount;
  v19 = *(_QWORD *)(v1 + OBJC_IVAR___BKMenuController_keyWindowTypeRetryCount);
  v20 = v19 + 1;
  if (__OFADD__(v19, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (!*(_BYTE *)(v1 + v16) && v19 < 0)
  {
    v48 = OBJC_IVAR___BKMenuController_keyWindowTypeRetryCount;
    if (qword_1009CE7E8 == -1)
    {
LABEL_9:
      v21 = type metadata accessor for Logger(0);
      v22 = sub_100048F64(v21, (uint64_t)qword_1009E9EB0);
      v23 = Logger.logObject.getter(v22);
      v24 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc(22, -1);
        *(_DWORD *)v25 = 134218240;
        aBlock = (void **)v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v53, v25 + 4, v25 + 12);
        *(_WORD *)(v25 + 12) = 2048;
        aBlock = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v53, v25 + 14, v25 + 22);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unable to determine the window type right now (attempt %ld of %ld). Will try again in a moment...", (uint8_t *)v25, 0x16u);
        swift_slowDealloc(v25, -1, -1);
      }

      v18 = swift_allocObject(&unk_10090D840, 24, 7);
      swift_unknownObjectWeakInit(v18 + 16, v1);
      v53[3] = sub_100528ED0;
      v54 = v18;
      aBlock = _NSConcreteStackBlock;
      v53[0] = 1107296256;
      v53[1] = sub_1000147F0;
      v53[2] = &unk_10090D858;
      v26 = _Block_copy(&aBlock);
      v51 = _swiftEmptyArrayStorage;
      v20 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      swift_retain(v18);
      v27 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
      v28 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
      dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v27, v28, v8, v20);
      v29 = type metadata accessor for DispatchWorkItem(0);
      swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
      v30 = DispatchWorkItem.init(flags:block:)(v10, v26);
      swift_release(v54);
      swift_release(v18);
      sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
      v31 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)(v5, 0.5);
      v32 = *(void (**)(char *, uint64_t))(v49 + 8);
      v33 = v5;
      v34 = v50;
      v32(v33, v50);
      OS_dispatch_queue.asyncAfter(deadline:execute:)(v7, v30);

      v32(v7, v34);
      v35 = type metadata accessor for AnyCancellable(0);
      swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
      swift_retain(v30);
      v36 = AnyCancellable.init(_:)(&j___s8Dispatch0A8WorkItemC6cancelyyFTj, v30);
      v37 = *(_QWORD *)(v1 + OBJC_IVAR___BKMenuController_retryKeyWindowTypeTask);
      *(_QWORD *)(v1 + OBJC_IVAR___BKMenuController_retryKeyWindowTypeTask) = v36;
      swift_release(v37);
      v38 = *(_QWORD *)(v1 + v48);
      v39 = __OFADD__(v38, 1);
      v40 = v38 + 1;
      if (!v39)
      {
        *(_QWORD *)(v1 + v48) = v40;
        return swift_release(v30);
      }
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    swift_once(&qword_1009CE7E8, sub_1005254D0);
    goto LABEL_9;
  }
  if (qword_1009CE7E8 != -1)
LABEL_20:
    swift_once(&qword_1009CE7E8, sub_1005254D0);
  v42 = type metadata accessor for Logger(0);
  v43 = sub_100048F64(v42, (uint64_t)qword_1009E9EB0);
  v44 = Logger.logObject.getter(v43);
  v45 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v46 = 134217984;
    aBlock = (void **)v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v53, v46 + 4, v46 + 12);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "Determined the window type on attempt %ld.", v46, 0xCu);
    swift_slowDealloc(v46, -1, -1);
  }

  v47 = *(_QWORD *)(v1 + OBJC_IVAR___BKMenuController_retryKeyWindowTypeTask);
  *(_QWORD *)(v1 + OBJC_IVAR___BKMenuController_retryKeyWindowTypeTask) = 0;
  result = swift_release(v47);
  *(_QWORD *)(v1 + v18) = 0;
  return result;
}

void sub_100528230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t Strong;
  void *v8;
  _BYTE v9[24];

  v1 = a1 + 16;
  if (qword_1009CE7E8 != -1)
    swift_once(&qword_1009CE7E8, sub_1005254D0);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_1009E9EB0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Timer fired; attempting to determine active window type", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  swift_beginAccess(v1, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v8 = (void *)Strong;
    sub_100527D0C();

  }
}

uint64_t sub_100528334(uint64_t a1)
{
  Swift::String v2;
  uint64_t v3;
  Swift::String v4;
  void *object;
  Swift::String v6;

  _StringGuts.grow(_:)(105);
  v2._object = (void *)0x80000001007D1610;
  v2._countAndFlagsBits = 0xD00000000000002ALL;
  String.append(_:)(v2);
  v3 = sub_100009E04(0, (unint64_t *)&unk_1009DB330, BSUIAsset_ptr);
  v4._countAndFlagsBits = Array.description.getter(a1, v3);
  object = v4._object;
  String.append(_:)(v4);
  swift_bridgeObjectRelease(object);
  v6._object = (void *)0x80000001007D1640;
  v6._countAndFlagsBits = 0x100000000000003DLL;
  String.append(_:)(v6);
  return 0;
}

void sub_1005283F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _QWORD *v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(_QWORD **)(Strong + OBJC_IVAR___BKMenuController_recentlyOpenedAssets);
    *(_QWORD *)(Strong + OBJC_IVAR___BKMenuController_recentlyOpenedAssets) = v2;
    swift_bridgeObjectRetain(v2);
    sub_100525750(v6);
    swift_bridgeObjectRelease(v6);

  }
}

id sub_10052849C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MenuController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t storeEnumTagSinglePayload for MenuController.BookshelfType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100528608 + 4 * byte_10072B885[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10052863C + 4 * asc_10072B880[v4]))();
}

uint64_t sub_10052863C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100528644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10052864CLL);
  return result;
}

uint64_t sub_100528658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100528660);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100528664(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10052866C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MenuController.BookshelfType()
{
  return &type metadata for MenuController.BookshelfType;
}

uint64_t getEnumTagSinglePayload for MenuController.BooksWindowType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MenuController.BooksWindowType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_100528764 + 4 * byte_10072B88F[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_100528798 + 4 * byte_10072B88A[v4]))();
}

uint64_t sub_100528798(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005287A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1005287A8);
  return result;
}

uint64_t sub_1005287B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1005287BCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1005287C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1005287C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MenuController.BooksWindowType()
{
  return &type metadata for MenuController.BooksWindowType;
}

unint64_t sub_1005287E8()
{
  unint64_t result;

  result = qword_1009E9F80;
  if (!qword_1009E9F80)
  {
    result = swift_getWitnessTable(&unk_10072B934, &type metadata for MenuController.BooksWindowType);
    atomic_store(result, (unint64_t *)&qword_1009E9F80);
  }
  return result;
}

unint64_t sub_100528830()
{
  unint64_t result;

  result = qword_1009E9F88;
  if (!qword_1009E9F88)
  {
    result = swift_getWitnessTable(&unk_10072B99C, &type metadata for MenuController.BookshelfType);
    atomic_store(result, (unint64_t *)&qword_1009E9F88);
  }
  return result;
}

unint64_t sub_100528878()
{
  unint64_t result;

  result = qword_1009E9F90;
  if (!qword_1009E9F90)
  {
    result = swift_getWitnessTable(&unk_10072B9C4, &type metadata for MenuController.RecentlyOpenedAsset);
    atomic_store(result, (unint64_t *)&qword_1009E9F90);
  }
  return result;
}

uint64_t sub_1005288C0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

NSString sub_1005288E4()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1009E9EC8 = (uint64_t)result;
  return result;
}

void sub_100528918()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, "rootViewController");
  if (!v1)
    return;
  v2 = v1;
  v3 = objc_msgSend(v1, "presentedViewController");

  if (!v3)
    return;
  v4 = objc_msgSend(v3, "childViewControllers");

  v5 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
  v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

  if ((unint64_t)v6 >> 62)
  {
    if (v6 < 0)
      v10 = v6;
    else
      v10 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v6);
    if (v11)
      goto LABEL_5;
LABEL_14:
    swift_bridgeObjectRelease(v6);
    return;
  }
  if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_14;
LABEL_5:
  if ((v6 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v6);
  }
  else
  {
    if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v7 = *(id *)(v6 + 32);
  }
  v8 = v7;
  swift_bridgeObjectRelease(v6);
  v9 = objc_opt_self(BKTransitioningViewController);
  if (!swift_dynamicCastObjCClass(v8, v9))

}

uint64_t sub_100528A68()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t result;
  unsigned __int8 v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "valueForKeyPath:", v1);

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)(v2);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10004C7B4((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    result = swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for Bool, 6);
    if ((_DWORD)result)
      return v4;
  }
  else
  {
    sub_100010960((uint64_t)v6, (uint64_t *)&unk_1009D04E0);
    return 0;
  }
  return result;
}

uint64_t sub_100528B50()
{
  uint64_t v0;

  return sub_100528334(*(_QWORD *)(v0 + 16));
}

void sub_100528B58(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, _QWORD *, __n128))
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  char v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v26[2];
  uint64_t v27[2];
  _QWORD v28[4];
  _QWORD *v29;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = a1 + 56;
    v6 = -(uint64_t)v3;
    v7 = _swiftEmptyArrayStorage;
    v22 = a1 + 56;
    v23 = *(_QWORD *)(a1 + 16);
    do
    {
      v24 = v7;
      if (v4 <= v3)
        v8 = v3;
      else
        v8 = v4;
      v9 = -(uint64_t)v8;
      for (i = (uint64_t *)(v5 + 32 * v4++); ; i += 4)
      {
        if (v9 + v4 == 1)
        {
          __break(1u);
          return;
        }
        v11 = *(i - 3);
        v12 = *(i - 2);
        v13 = *(i - 1);
        v14 = *i;
        v28[0] = v11;
        v28[1] = v12;
        v28[2] = v13;
        v28[3] = v14;
        swift_bridgeObjectRetain(v12);
        v15 = swift_bridgeObjectRetain(v14);
        a3(v26, v28, v15);
        v16 = sub_1000345F0(v27, v26[0], v26[1]);
        swift_bridgeObjectRelease(v27[1]);
        if ((v16 & 1) != 0)
          break;
        swift_bridgeObjectRelease(v14);
        swift_bridgeObjectRelease(v12);
        ++v4;
        if (v6 + v4 == 1)
          return;
      }
      v7 = v24;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v24);
      v29 = v24;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100366E04(0, v24[2] + 1, 1);
        v7 = v29;
      }
      v5 = v22;
      v19 = v7[2];
      v18 = v7[3];
      v20 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
        sub_100366E04(v18 > 1, v19 + 1, 1);
        v20 = v19 + 1;
        v7 = v29;
      }
      v7[2] = v20;
      v21 = &v7[4 * v19];
      v21[4] = v11;
      v21[5] = v12;
      v21[6] = v13;
      v21[7] = v14;
      v3 = v23;
    }
    while (v6 + v4);
  }
}

uint64_t sub_100528D08(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, _QWORD *, __n128))
{
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v28[2];
  uint64_t v29[2];
  _QWORD v30[4];
  _QWORD *v31;

  v5 = a3 >> 1;
  if (a3 >> 1 == a2)
    return (uint64_t)_swiftEmptyArrayStorage;
  v22 = v5 - 1;
  v7 = result + 16;
  v6 = _swiftEmptyArrayStorage;
  v8 = a2;
  v25 = a3 >> 1;
  v26 = a2;
  v21 = result + 16;
  do
  {
    v23 = v6;
    v24 = v8;
    v9 = (uint64_t *)(v7 + 32 * v8);
    v10 = v8;
    while (1)
    {
      if (v8 < a2 || v10 >= v5)
      {
        __break(1u);
        return result;
      }
      v11 = *(v9 - 2);
      v12 = *(v9 - 1);
      v13 = *v9;
      v14 = v9[1];
      v15 = v10 + 1;
      v30[0] = v11;
      v30[1] = v12;
      v30[2] = v13;
      v30[3] = v14;
      swift_bridgeObjectRetain(v12);
      v16 = swift_bridgeObjectRetain(v14);
      a5(v28, v30, v16);
      v17 = sub_1000345F0(v29, v28[0], v28[1]);
      swift_bridgeObjectRelease(v29[1]);
      if ((v17 & 1) != 0)
        break;
      swift_bridgeObjectRelease(v14);
      result = swift_bridgeObjectRelease(v12);
      v9 += 4;
      ++v10;
      v5 = v25;
      a2 = v26;
      v8 = v24;
      if (v25 == v15)
        return (uint64_t)v23;
    }
    result = swift_isUniquelyReferenced_nonNull_native(v23);
    v6 = v23;
    v31 = v23;
    if ((result & 1) == 0)
    {
      result = sub_100366E30(0, v23[2] + 1, 1);
      v6 = v31;
    }
    v19 = v6[2];
    v18 = v6[3];
    if (v19 >= v18 >> 1)
    {
      result = sub_100366E30(v18 > 1, v19 + 1, 1);
      v6 = v31;
    }
    v6[2] = v19 + 1;
    v20 = &v6[4 * v19];
    v20[4] = v11;
    v20[5] = v12;
    v20[6] = v13;
    v20[7] = v14;
    v8 = v10 + 1;
    v5 = v25;
    a2 = v26;
    v7 = v21;
  }
  while (v22 != v10);
  return (uint64_t)v6;
}

void sub_100528ED0()
{
  uint64_t v0;

  sub_100528230(v0);
}

uint64_t sub_100528EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EA000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100528F24(uint64_t a1)
{
  uint64_t v1;

  sub_1005272F4(a1, v1);
}

uint64_t sub_100528F2C()
{
  uint64_t v0;

  return sub_1005271CC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100528F34()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100528F60(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EA08C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return sub_100525E00(a1, v4, v5, v6);
}

ValueMetadata *type metadata accessor for MenuController.LegacyAccount()
{
  return &type metadata for MenuController.LegacyAccount;
}

unint64_t sub_100528FE0()
{
  unint64_t result;

  result = qword_1009EA098;
  if (!qword_1009EA098)
  {
    result = swift_getWitnessTable(&unk_10072BB14, &type metadata for MenuController.LegacyAccount);
    atomic_store(result, (unint64_t *)&qword_1009EA098);
  }
  return result;
}

_QWORD *sub_10052903C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_100045E44(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    v14 = v1 & 0xC000000000000001;
    v5 = v1;
    while (v2 != v4)
    {
      if (v14)
      {
        v6 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
      }
      else
      {
        v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
        swift_retain(v6);
      }
      v7 = _s8BookEPUB25HighlightAnnotationEntityC5BooksE14annotationUuidSSvg_0();
      v9 = v8;
      swift_release(v6);
      v11 = _swiftEmptyArrayStorage[2];
      v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1)
        sub_100045E44(v10 > 1, v11 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      v12 = &_swiftEmptyArrayStorage[2 * v11];
      v12[4] = v7;
      v12[5] = v9;
      v1 = v5;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (v1 < 0)
      v13 = v1;
    else
      v13 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v13);
    swift_bridgeObjectRelease(v1);
  }
  __break(1u);
  return result;
}

double sub_1005291AC(uint64_t a1, uint64_t a2, void *a3, void *aBlock)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, void *, void *, uint64_t);
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  double result;

  v6 = a2;
  v8 = *(void (**)(uint64_t, void *, void *, uint64_t))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v9 = sub_100009E04(0, &qword_1009E6E28, AEAnnotation_ptr);
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v9);
  }
  v10 = _Block_copy(aBlock);
  if (v10)
  {
    v11 = swift_allocObject(&unk_10090DE78, 24, 7);
    *(_QWORD *)(v11 + 16) = v10;
    v10 = sub_10004DE24;
  }
  else
  {
    v11 = 0;
  }
  swift_retain(v7);
  v12 = a3;
  v8(v6, a3, v10, v11);
  sub_10002AD00((uint64_t)v10, v11);
  swift_release(v7);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  return result;
}

uint64_t sub_100529294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EA0A0);
  sub_100048F64(v0, (uint64_t)qword_1009EA0A0);
  v5 = type metadata accessor for AnnotationProviderService(0);
  v1 = sub_10004CFD4(&qword_1009EA318);
  v2 = String.init<A>(describing:)(&v5, v1);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v2, v3);
}

uint64_t property wrapper backing initializer of AnnotationProviderService.bookAnnotationEntity(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = type metadata accessor for BookAnnotationEntity(0);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t AnnotationProviderService.bookAnnotationEntity.getter()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072BBA0);
  v2 = swift_getKeyPath(&unk_10072BBC8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_1005293DC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_10072BBA0);
  v5 = swift_getKeyPath(&unk_10072BBC8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_10052945C(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_10072BBA0);
  v5 = swift_getKeyPath(&unk_10072BBC8);
  v7 = v2;
  swift_retain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t AnnotationProviderService.bookAnnotationEntity.setter(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_10072BBA0);
  v4 = swift_getKeyPath(&unk_10072BBC8);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

void (*AnnotationProviderService.bookAnnotationEntity.modify(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_10072BBA0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_10072BBC8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_1002B51E0;
}

uint64_t AnnotationProviderService.$bookAnnotationEntity.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books25AnnotationProviderService__bookAnnotationEntity, v3, 33, 0);
  v1 = sub_10004CFD4(&qword_1009EA0C0);
  Published.projectedValue.getter(v1);
  return swift_endAccess(v3);
}

uint64_t AnnotationProviderService.$bookAnnotationEntity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v11[24];

  v3 = sub_10004CFD4(&qword_1009EA0C8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, double))(v4 + 16))(v7, a1, v3, v5);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books25AnnotationProviderService__bookAnnotationEntity, v11, 33, 0);
  v8 = sub_10004CFD4(&qword_1009EA0C0);
  Published.projectedValue.setter(v7, v8);
  swift_endAccess(v11);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*AnnotationProviderService.$bookAnnotationEntity.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_10004CFD4(&qword_1009EA0C8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC5Books25AnnotationProviderService__bookAnnotationEntity;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_10004CFD4(&qword_1009EA0C0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_1002B5428;
}

double sub_1005297B0(unsigned __int8 *a1, _QWORD *a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  double result;
  _BYTE v14[24];

  v2 = (_BYTE *)(*a2 + OBJC_IVAR____TtC5Books25AnnotationProviderService_currentHighlightStyle);
  v3 = *a1;
  swift_beginAccess(v2, v14, 1, 0);
  v4 = *v2;
  *v2 = v3;
  v5 = AnnotationStyle.rawValue.getter(v4);
  v7 = v6;
  v8 = AnnotationStyle.rawValue.getter(v3);
  if (v5 == v8 && v7 == v9)
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease_n(v7, 2).n128_u64[0];
  }
  else
  {
    v11 = v9;
    v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
    swift_bridgeObjectRelease(v7);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
    if ((v12 & 1) == 0)
      sub_10052AF90();
  }
  return result;
}

uint64_t AnnotationProviderService.currentHighlightStyle.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Books25AnnotationProviderService_currentHighlightStyle);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books25AnnotationProviderService_currentHighlightStyle, v3, 0, 0);
  return *v1;
}

uint64_t AnnotationProviderService.annotationsChangePublisher.getter()
{
  return sub_1005298EC((uint64_t)&OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationsChangeSubject, &qword_1009CEEB8, &qword_1009EA0E0);
}

uint64_t AnnotationProviderService.bookmarkChangePublisher.getter()
{
  return sub_1005298EC((uint64_t)&OBJC_IVAR____TtC5Books25AnnotationProviderService_bookmarkChangeSubject, &qword_1009CEEC0, &qword_1009EA0F8);
}

uint64_t sub_1005298EC(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_10004CFD4(a2);
  v6 = sub_100030B34(a3, a2, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v5, v6);
}

uint64_t AnnotationProviderService.highlightChangePublisher.getter()
{
  return sub_1005298EC((uint64_t)&OBJC_IVAR____TtC5Books25AnnotationProviderService_highlightChangeSubject, &qword_1009CEEC8, &qword_1009EA110);
}

uint64_t AnnotationProviderService.AnnotationUpgradeEntity.userData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + 32;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10004CD0C(v3, a1);
}

uint64_t AnnotationProviderService.AnnotationUpgradeEntity.userData.setter(_OWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + 32);
  swift_beginAccess(v3, v5, 33, 0);
  _s5Books15CurrentPageViewVwxx_0(v3);
  sub_10004CFC4(a1, v3);
  return swift_endAccess(v5);
}

uint64_t (*AnnotationProviderService.AnnotationUpgradeEntity.userData.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + 32, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t AnnotationProviderService.AnnotationUpgradeEntity.__allocating_init(uniqueID:userData:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = swift_allocObject(v3, 64, 7);
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  sub_10004CFC4(a3, (_OWORD *)(v7 + 32));
  return v7;
}

uint64_t AnnotationProviderService.AnnotationUpgradeEntity.init(uniqueID:userData:)(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  sub_10004CFC4(a3, (_OWORD *)(v3 + 32));
  return v3;
}

uint64_t AnnotationProviderService.AnnotationUpgradeEntity.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 32));
  return v0;
}

uint64_t AnnotationProviderService.AnnotationUpgradeEntity.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 64, 7);
}

id AnnotationProviderService.__allocating_init(annotationMOCHost:bookProvider:annotationModifier:engagementManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char *v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;

  v10 = (char *)objc_allocWithZone((Class)type metadata accessor for AnnotationProviderService(0));
  ObjectType = swift_getObjectType();
  v12 = swift_getObjectType();
  v13 = swift_getObjectType();
  return sub_100532DBC(a1, a2, a4, a5, 0, v10, ObjectType, v13, v12, a3);
}

uint64_t type metadata accessor for AnnotationProviderService(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EA1B8;
  if (!qword_1009EA1B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AnnotationProviderService);
  return result;
}

id AnnotationProviderService.highlightAnnotationDetail(for:)()
{
  uint64_t v0;
  void *Strong;
  void *v2;
  NSObject *v3;
  void *v4;
  NSString v5;
  id v6;
  NSString v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v17;
  __int128 v18;
  __int128 v19;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationMOCHost);
  if (!Strong
    || (v2 = Strong,
        v3 = objc_msgSend(Strong, "uiManagedObjectContext"),
        swift_unknownObjectRelease(v2),
        !v3))
  {
    if (qword_1009CE800 != -1)
      swift_once(&qword_1009CE800, sub_100529294);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100048F64(v12, (uint64_t)qword_1009EA0A0);
    v3 = Logger.logObject.getter(v13);
    v14 = static os_log_type_t.error.getter(v3);
    if (os_log_type_enabled(v3, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v14, "nil annotationProvider", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }
LABEL_13:

    return 0;
  }
  v4 = (void *)objc_opt_self(AEAnnotation);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "predicateForAnnotationWithUUID:", v5);

  v7 = String._bridgeToObjectiveC()();
  v8 = -[NSObject entity:withPredicate:](v3, "entity:withPredicate:", v7, v6);

  if (v8)
  {
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, (char *)&type metadata for Any + 8);

    if (*(_QWORD *)(v9 + 16))
    {
      sub_10004CD0C(v9 + 32, (uint64_t)&v18);
      swift_bridgeObjectRelease(v9);
      if (*((_QWORD *)&v19 + 1))
      {
        v10 = sub_100009E04(0, &qword_1009E6E28, AEAnnotation_ptr);
        if ((swift_dynamicCast(&v17, &v18, (char *)&type metadata for Any + 8, v10, 6) & 1) != 0)
        {
          v11 = v17;
          v8 = sub_100529E78();

          goto LABEL_8;
        }

        goto LABEL_13;
      }
    }
    else
    {
      v18 = 0u;
      v19 = 0u;
      swift_bridgeObjectRelease(v9);
    }

    sub_100010960((uint64_t)&v18, (uint64_t *)&unk_1009D04E0);
    return 0;
  }
LABEL_8:

  return v8;
}

id sub_100529E78()
{
  void *v0;
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  void (*v26)(char *, char *, uint64_t);
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  id v28;
  void *v29;
  id result;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v51;
  uint64_t v52;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v47 - v11;
  v13 = objc_msgSend(v0, "annotationUuid", v10);
  if (!v13)
  {
    __break(1u);
    goto LABEL_22;
  }
  v14 = v13;
  v1 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = objc_msgSend(v0, "plLocationRangeStart");
  if (!v17)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v18 = v17;
  v52 = v16;
  v51 = objc_msgSend(v17, "integerValue");

  v19 = objc_msgSend(v0, "annotationLocation");
  if (!v19)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v20 = v19;
  v50 = v1;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
  v48 = v22;
  v49 = v21;

  v23 = AEAnnotation.normalizedStyle.getter();
  v24 = objc_msgSend(v0, "annotationCreationDate");
  if (!v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
    goto LABEL_25;
  }
  v25 = v24;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v24);

  v26 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v26(v12, v5, v2);
  v1 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v3 + 56);
  v1(v12, 0, 1, v2);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v27(v12, 1, v2) == 1)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v28 = objc_msgSend(v0, "annotationModificationDate");
  if (!v28)
  {
LABEL_26:
    result = (id)((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v1)(v8, 1, 1, v2);
    goto LABEL_27;
  }
  v29 = v28;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v28);

  v26(v8, v5, v2);
  v1(v8, 0, 1, v2);
  result = (id)((uint64_t (*)(char *, uint64_t, uint64_t))v27)(v8, 1, v2);
  if ((_DWORD)result == 1)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v31 = objc_msgSend(v0, "annotationSelectedText");
  if (v31)
  {

    result = objc_msgSend(v0, "annotationSelectedText");
    if (result)
    {
      v32 = result;
      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
      v35 = v34;

      goto LABEL_12;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v33 = 0;
  v35 = 0xE000000000000000;
LABEL_12:
  v36 = objc_msgSend(v0, "annotationRepresentativeText");
  if (!v36)
  {
    v38 = 0;
    v40 = 0xE000000000000000;
    goto LABEL_16;
  }

  result = objc_msgSend(v0, "annotationRepresentativeText");
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v37 = result;
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v40 = v39;

LABEL_16:
  v41 = objc_msgSend(v0, "annotationNote");
  if (!v41)
  {
    v43 = 0;
    v45 = 0xE000000000000000;
    goto LABEL_20;
  }

  result = objc_msgSend(v0, "annotationNote");
  if (result)
  {
    v42 = result;
    v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v45 = v44;

LABEL_20:
    v46 = type metadata accessor for HighlightAnnotationDetailEntity(0);
    swift_allocObject(v46, *(unsigned int *)(v46 + 48), *(unsigned __int16 *)(v46 + 52));
    return (id)HighlightAnnotationDetailEntity.init(uniqueID:documentOrdinal:location:style:creationDate:modificationDate:selectedText:representativeText:noteText:)(v50, v52, v51, v49, v48, v23, v12, v8, v33, v35, v38, v40, v43, v45);
  }
LABEL_30:
  __break(1u);
  return result;
}

Swift::Void __swiftcall AnnotationProviderService.start()()
{
  char *v0;
  void *Strong;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *oslog;
  _QWORD aBlock[5];
  uint64_t v15;

  Strong = (void *)swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationMOCHost]);
  if (Strong
    && (v2 = Strong,
        v3 = objc_msgSend(Strong, "privateUserEditMOC"),
        swift_unknownObjectRelease(v2),
        v3))
  {
    v4 = swift_allocObject(&unk_10090D9E0, 32, 7);
    *(_QWORD *)(v4 + 16) = v0;
    *(_QWORD *)(v4 + 24) = v3;
    aBlock[4] = sub_100533270;
    v15 = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_10090D9F8;
    v5 = _Block_copy(aBlock);
    v6 = v15;
    v7 = v0;
    v8 = v3;
    objc_msgSend(v8, "performBlock:", v5, swift_release(v6).n128_f64[0]);
    _Block_release(v5);

  }
  else
  {
    if (qword_1009CE800 != -1)
      swift_once(&qword_1009CE800, sub_100529294);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100048F64(v9, (uint64_t)qword_1009EA0A0);
    oslog = Logger.logObject.getter(v10);
    v11 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Unable to start AnnotationProviderService - nil annotationProvider", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

  }
}

void sub_10052A418(NSObject *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  NSString v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSString v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  double v25;
  id v26;
  objc_class *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  double v58;
  void *v59;
  unsigned __int8 v60;
  id v61;
  void *v62;
  _QWORD *v63;
  id v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;
  uint8_t *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  uint8_t *v83;
  _QWORD *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t KeyPath;
  uint64_t v89;
  __n128 v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  int64_t v97;
  uint64_t v98;
  int64_t v99;
  uint64_t v100;
  uint64_t i;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  int64_t v105;
  NSObject *v106;
  uint64_t v107;
  uint64_t v108;
  id v109;
  void *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  NSObject *v120;
  uint64_t v121;
  _QWORD v122[3];
  char v123[16];
  _QWORD *v124;
  _QWORD v125[3];
  uint64_t v126;
  uint64_t v127;

  v4 = sub_10004CFD4(&qword_1009EA298);
  v118 = *(_QWORD *)(v4 - 8);
  v119 = v4;
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = objc_allocWithZone((Class)NSFetchRequest);
  v8 = String._bridgeToObjectiveC()();
  v116 = objc_msgSend(v7, "initWithEntityName:", v8);

  v9 = (void *)objc_opt_self(AEAnnotation);
  v10 = (Class *)((char *)&a1->isa + OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity);
  v11 = *(uint64_t *)((char *)&a1[3].isa + OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity);
  v12 = *(uint64_t *)((char *)&a1[4].isa + OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity);
  sub_10003F198((Class *)((char *)&a1->isa + OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity), v11);
  dispatch thunk of BookEntityType.assetID.getter(v11, v12);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  v16 = objc_msgSend(v9, "predicateForUserAnnotationsWithAssetID:includingDeleted:", v15, 0, swift_bridgeObjectRelease(v14).n128_f64[0]);

  objc_msgSend(v116, "setPredicate:", v16);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v18 = swift_allocObject(v17, 40, 7);
  *(_OWORD *)(v18 + 16) = xmmword_1007118F0;
  v19 = objc_allocWithZone((Class)NSSortDescriptor);
  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v19, "initWithKey:ascending:", v20, 1);

  *(_QWORD *)(v18 + 32) = v21;
  v125[0] = v18;
  specialized Array._endMutation()(v22);
  v23 = v125[0];
  sub_100009E04(0, (unint64_t *)&unk_1009E2850, NSSortDescriptor_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v25 = swift_bridgeObjectRelease(v23).n128_u64[0];
  objc_msgSend(v116, "setSortDescriptors:", isa, v25);

  objc_msgSend(v116, "setFetchBatchSize:", 32);
  v26 = objc_allocWithZone((Class)NSFetchedResultsController);
  v27 = (objc_class *)objc_msgSend(v26, "initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:", v116, a2, 0, 0);
  v28 = OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationFRC;
  v29 = *(Class *)((char *)&a1->isa + OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationFRC);
  *(Class *)((char *)&a1->isa + OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationFRC) = v27;

  if (!*(Class *)((char *)&a1->isa + v28))
  {
    if (qword_1009CE800 != -1)
      goto LABEL_71;
    goto LABEL_31;
  }
  v30 = v10[3];
  v31 = v10[4];
  sub_10003F198(v10, v30);
  v32 = dispatch thunk of BookEntityType.documents.getter(v30, v31);
  v33 = (_QWORD *)sub_1001DFC8C(_swiftEmptyArrayStorage);
  v34 = *(_QWORD *)(v32 + 16);
  v120 = a1;
  v115 = v28;
  if (v34)
  {
    v35 = v32 + 32;
    v117 = v32;
    swift_bridgeObjectRetain(v32);
    while (1)
    {
      sub_10002E418(v35, (uint64_t)v125);
      v37 = v126;
      v38 = v127;
      sub_10003F198(v125, v126);
      v39 = dispatch thunk of DocumentEntityType.ordinal.getter(v37, v38);
      v40 = v126;
      v41 = v127;
      sub_10003F198(v125, v126);
      v42 = dispatch thunk of DocumentEntityType.ordinal.getter(v40, v41);
      v43 = type metadata accessor for DocumentAnnotationsEntity(0);
      swift_allocObject(v43, *(unsigned int *)(v43 + 48), *(unsigned __int16 *)(v43 + 52));
      v44 = DocumentAnnotationsEntity.init(documentOrdinal:)(v42);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v33);
      v124 = v33;
      v47 = sub_1002BB7F4(v39);
      v48 = v33[2];
      v49 = (v46 & 1) == 0;
      v50 = v48 + v49;
      if (__OFADD__(v48, v49))
      {
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      v51 = v46;
      if (v33[3] >= v50)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v46 & 1) == 0)
            goto LABEL_13;
        }
        else
        {
          sub_1002C16D0();
          v33 = v124;
          if ((v51 & 1) == 0)
            goto LABEL_13;
        }
      }
      else
      {
        sub_10037CAD4(v50, isUniquelyReferenced_nonNull_native);
        v33 = v124;
        v52 = sub_1002BB7F4(v39);
        if ((v51 & 1) != (v53 & 1))
        {
          KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for Int);
          __break(1u);
          return;
        }
        v47 = v52;
        if ((v51 & 1) == 0)
        {
LABEL_13:
          v33[(v47 >> 6) + 8] |= 1 << v47;
          v54 = 8 * v47;
          *(_QWORD *)(v33[6] + v54) = v39;
          *(_QWORD *)(v33[7] + v54) = v44;
          v55 = v33[2];
          v56 = __OFADD__(v55, 1);
          v57 = v55 + 1;
          if (v56)
            goto LABEL_69;
          v33[2] = v57;
          goto LABEL_5;
        }
      }
      v36 = v33[7];
      swift_release(*(_QWORD *)(v36 + 8 * v47));
      *(_QWORD *)(v36 + 8 * v47) = v44;
LABEL_5:
      swift_bridgeObjectRelease(0x8000000000000000);
      _s5Books15CurrentPageViewVwxx_0(v125);
      v35 += 40;
      if (!--v34)
      {
        v32 = v117;
        swift_bridgeObjectRelease(v117);
        a1 = v120;
        v28 = v115;
        break;
      }
    }
  }
  *(_QWORD *)&v58 = swift_bridgeObjectRelease(v32).n128_u64[0];
  v125[0] = &_swiftEmptySetSingleton;
  v59 = *(Class *)((char *)&a1->isa + v28);
  if (v59)
  {
    v124 = 0;
    v60 = objc_msgSend(v59, "performFetch:", &v124, v58);
    v61 = v124;
    if ((v60 & 1) == 0)
    {
      v76 = v124;
      v77 = _convertNSErrorToError(_:)(v61);

      swift_willThrow(v78);
      if (qword_1009CE800 != -1)
        swift_once(&qword_1009CE800, sub_100529294);
      v79 = type metadata accessor for Logger(0);
      sub_100048F64(v79, (uint64_t)qword_1009EA0A0);
      swift_errorRetain(v77);
      v80 = swift_errorRetain(v77);
      v81 = Logger.logObject.getter(v80);
      v82 = static os_log_type_t.error.getter(v81);
      if (os_log_type_enabled(v81, v82))
      {
        v83 = (uint8_t *)swift_slowAlloc(12, -1);
        v84 = (_QWORD *)swift_slowAlloc(32, -1);
        v124 = v84;
        *(_DWORD *)v83 = 136315138;
        swift_getErrorValue(v77, v123, v122);
        v85 = Error.localizedDescription.getter(v122[1], v122[2]);
        v87 = v86;
        v121 = sub_100040F58(v85, v86, (uint64_t *)&v124);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v121, v122, v83 + 4, v83 + 12);
        swift_bridgeObjectRelease(v87);
        swift_errorRelease(v77);
        swift_errorRelease(v77);
        _os_log_impl((void *)&_mh_execute_header, v81, v82, "Unable to fetch annotations: %s", v83, 0xCu);
        swift_arrayDestroy(v84, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v84, -1, -1);
        swift_slowDealloc(v83, -1, -1);

        swift_errorRelease(v77);
      }
      else
      {
        swift_errorRelease(v77);
        swift_errorRelease(v77);
        swift_errorRelease(v77);

      }
      goto LABEL_41;
    }
    v62 = *(Class *)((char *)&a1->isa + v28);
    v63 = v124;
    if (v62)
    {
      v64 = objc_msgSend(v62, "fetchedObjects");
      if (v64)
      {
        v65 = v64;
        v66 = sub_100009E04(0, &qword_1009E6E28, AEAnnotation_ptr);
        v67 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v65, v66);

        if ((unint64_t)v67 >> 62)
        {
          if (v67 < 0)
            v112 = v67;
          else
            v112 = v67 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v67);
          v68 = _CocoaArrayWrapper.endIndex.getter(v112);
          if (v68)
            goto LABEL_24;
        }
        else
        {
          v68 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v67);
          if (v68)
          {
LABEL_24:
            if (v68 < 1)
              __break(1u);
            v69 = 0;
            do
            {
              if ((v67 & 0xC000000000000001) != 0)
                v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v69, v67);
              else
                v70 = *(id *)(v67 + 8 * v69 + 32);
              v71 = v70;
              ++v69;
              sub_10060B614((uint64_t *)&v124, (uint64_t)objc_msgSend(v70, "ordinal"));
              sub_10052B184(v71, (uint64_t)v33, 0);

            }
            while (v68 != v69);
            swift_bridgeObjectRelease_n(v67, 2);
LABEL_41:
            v114 = 0;
            a1 = v120;
            goto LABEL_42;
          }
        }
        swift_bridgeObjectRelease_n(v67, 2);
        v114 = 0;
        goto LABEL_42;
      }
    }
  }
  v114 = 0;
LABEL_42:
  KeyPath = swift_getKeyPath(&unk_10072BBA0);
  v89 = swift_getKeyPath(&unk_10072BBC8);
  static Published.subscript.getter(&v124, a1, KeyPath);
  swift_release(v89);
  v90 = swift_release(KeyPath);
  v91 = v124;
  dispatch thunk of BookAnnotationEntity.documentAnnotations.setter(v33, v90);
  swift_release(v91);
  v92 = v125[0];
  v93 = *(_QWORD *)(v125[0] + 56);
  v117 = v125[0] + 56;
  v94 = 1 << *(_BYTE *)(v125[0] + 32);
  v95 = -1;
  if (v94 < 64)
    v95 = ~(-1 << v94);
  v96 = v95 & v93;
  v97 = (unint64_t)(v94 + 63) >> 6;
  v98 = enum case for AnnotationChange.updates<A>(_:);
  swift_bridgeObjectRetain(v125[0]);
  v99 = 0;
  v100 = v118;
  for (i = v119; ; (*(void (**)(_QWORD *, uint64_t))(v100 + 8))(v6, i))
  {
    if (v96)
    {
      v102 = __clz(__rbit64(v96));
      v96 &= v96 - 1;
      v103 = v102 | (v99 << 6);
      goto LABEL_46;
    }
    v56 = __OFADD__(v99++, 1);
    if (v56)
      goto LABEL_68;
    if (v99 >= v97)
    {
LABEL_63:
      swift_release(v92);
      v106 = v120;
      v107 = swift_getKeyPath(&unk_10072BBA0);
      v108 = swift_getKeyPath(&unk_10072BBC8);
      static Published.subscript.getter(&v124, v106, v107);
      swift_release(v108);
      swift_release(v107);
      v109 = v124;
      PassthroughSubject.send(_:)(&v124);
      swift_release(v109);
      v110 = *(Class *)((char *)&v106->isa + v115);
      if (v110)
      {
        v111 = v110;
        objc_msgSend(v111, "setDelegate:", v106);

      }
      else
      {

      }
      swift_bridgeObjectRelease(v92);
      return;
    }
    v104 = *(_QWORD *)(v117 + 8 * v99);
    if (!v104)
      break;
LABEL_58:
    v96 = (v104 - 1) & v104;
    v103 = __clz(__rbit64(v104)) + (v99 << 6);
LABEL_46:
    *v6 = *(_QWORD *)(*(_QWORD *)(v92 + 48) + 8 * v103);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v100 + 104))(v6, v98, i);
    PassthroughSubject.send(_:)(v6);
  }
  v105 = v99 + 1;
  if (v99 + 1 >= v97)
    goto LABEL_63;
  v104 = *(_QWORD *)(v117 + 8 * v105);
  if (v104)
    goto LABEL_57;
  v105 = v99 + 2;
  if (v99 + 2 >= v97)
    goto LABEL_63;
  v104 = *(_QWORD *)(v117 + 8 * v105);
  if (v104)
    goto LABEL_57;
  v105 = v99 + 3;
  if (v99 + 3 >= v97)
    goto LABEL_63;
  v104 = *(_QWORD *)(v117 + 8 * v105);
  if (v104)
  {
LABEL_57:
    v99 = v105;
    goto LABEL_58;
  }
  while (1)
  {
    v99 = v105 + 1;
    if (__OFADD__(v105, 1))
      break;
    if (v99 >= v97)
      goto LABEL_63;
    v104 = *(_QWORD *)(v117 + 8 * v99);
    ++v105;
    if (v104)
      goto LABEL_58;
  }
LABEL_70:
  __break(1u);
LABEL_71:
  swift_once(&qword_1009CE800, sub_100529294);
LABEL_31:
  v72 = type metadata accessor for Logger(0);
  v73 = sub_100048F64(v72, (uint64_t)qword_1009EA0A0);
  v120 = Logger.logObject.getter(v73);
  v74 = static os_log_type_t.error.getter(v120);
  if (os_log_type_enabled(v120, v74))
  {
    v75 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v75 = 0;
    _os_log_impl((void *)&_mh_execute_header, v120, v74, "Unable to initialize annotation FRC", v75, 2u);
    swift_slowDealloc(v75, -1, -1);

  }
  else
  {

  }
}

void sub_10052AF90()
{
  uint64_t v0;
  unsigned __int8 *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  Class v12;
  NSString v13;
  NSString v14;
  Class isa;
  NSString v16;
  _BYTE v17[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Books25AnnotationProviderService_currentHighlightStyle);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books25AnnotationProviderService_currentHighlightStyle, v17, 0, 0);
  v2 = *v1;
  v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v4 = AnnotationStyle.rawValue.getter(v2);
  v6 = v5;
  v7 = AnnotationStyle.rawValue.getter(5);
  if (v4 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
    goto LABEL_8;
  }
  v10 = v8;
  v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v6, v7, v8, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v10);
  if ((v11 & 1) != 0)
  {
LABEL_8:
    isa = Int32._bridgeToObjectiveC()().super.super.isa;
    v16 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setObject:forKey:", isa, v16);

    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setBool:forKey:", 1, v14);
    goto LABEL_9;
  }
  v12 = Int32._bridgeToObjectiveC()().super.super.isa;
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setObject:forKey:", v12, v13);

  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setBool:forKey:", 0, v14);
LABEL_9:

}

void sub_10052B184(void *a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unsigned int v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(uint64_t *, _QWORD, __n128);
  uint64_t *v29;
  uint64_t *v30;
  char v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  void (*v58)(uint64_t *, _QWORD, __n128);
  uint64_t *v59;
  uint64_t *v60;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  id v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  uint64_t KeyPath;
  uint64_t v89;
  uint64_t v90;
  os_log_t v91;
  int v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96[4];

  LODWORD(v93) = a3;
  v5 = sub_10004CFD4(&qword_1009EA298);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_10004CFD4(&qword_1009EA2A0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = objc_msgSend(a1, "plLocationRangeStart", v11);
  if (!v14)
  {
    __break(1u);
    goto LABEL_31;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "integerValue");

  if (*(_QWORD *)(a2 + 16))
  {
    v17 = sub_1002BB7F4((uint64_t)v16);
    if ((v18 & 1) != 0)
    {
      v19 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v17);
      swift_retain(v19);
      if ((sub_10052BE48(a1) & 1) != 0)
        goto LABEL_13;
      v20 = objc_msgSend(a1, "annotationType");
      if (v20 == 2)
      {
        v51 = (id)sub_10052BC08();
        v52 = objc_msgSend(a1, "annotationUuid");
        if (v52)
        {
          v53 = v52;
          v54 = static String._unconditionallyBridgeFromObjectiveC(_:)(v52);
          v56 = v55;

          v57 = swift_retain(v51);
          v58 = (void (*)(uint64_t *, _QWORD, __n128))dispatch thunk of DocumentAnnotationsEntity.highlights.modify(v96, v57);
          v60 = v59;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v59);
          v95 = *v60;
          *v60 = 0x8000000000000000;
          sub_1002C4A88((uint64_t)v51, v54, v56, isUniquelyReferenced_nonNull_native);
          v62 = *v60;
          *v60 = v95;
          swift_bridgeObjectRelease(v62);
          v63 = swift_bridgeObjectRelease(v56);
          v58(v96, 0, v63);
          if ((v93 & 1) != 0)
          {
            if (qword_1009CE800 != -1)
              swift_once(&qword_1009CE800, sub_100529294);
            v64 = type metadata accessor for Logger(0);
            sub_100048F64(v64, (uint64_t)qword_1009EA0A0);
            v65 = v94;
            swift_retain_n(v51, 2);
            v66 = (char *)v65;
            v67 = Logger.logObject.getter(v66);
            v68 = static os_log_type_t.info.getter(v67);
            v69 = v68;
            if (os_log_type_enabled(v67, v68))
            {
              v70 = swift_slowAlloc(22, -1);
              v94 = v51;
              v71 = v70;
              v93 = swift_slowAlloc(64, -1);
              v96[0] = v93;
              *(_DWORD *)v71 = 136315394;
              v92 = v69;
              v91 = v67;
              v72 = dispatch thunk of AnnotationEntity.debugDescription.getter();
              v74 = v73;
              v95 = sub_100040F58(v72, v73, v96);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v71 + 4, v71 + 12);
              swift_bridgeObjectRelease(v74);
              swift_release_n(v94, 2);
              *(_WORD *)(v71 + 12) = 2080;
              v90 = v71 + 14;
              v76 = *(_QWORD *)&v66[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
              v75 = *(_QWORD *)&v66[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
              sub_10003F198(&v66[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v76);
              v77 = dispatch thunk of BookEntityType.assetID.getter(v76, v75);
              v79 = v78;
              v95 = sub_100040F58(v77, v78, v96);
              UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v90, v71 + 22);
              swift_bridgeObjectRelease(v79);

              v67 = v91;
              _os_log_impl((void *)&_mh_execute_header, v91, (os_log_type_t)v92, "Creating highlight for annotation:%s in book:%s", (uint8_t *)v71, 0x16u);
              v80 = v93;
              swift_arrayDestroy(v93, 2, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v80, -1, -1);
              v81 = v71;
              v51 = v94;
              swift_slowDealloc(v81, -1, -1);
            }
            else
            {
              swift_release_n(v51, 2);

            }
            *v8 = v51;
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for AnnotationChange.insert<A>(_:), v5);
            swift_retain(v51);
            PassthroughSubject.send(_:)(v8);
            (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
            KeyPath = swift_getKeyPath(&unk_10072BBA0);
            v89 = swift_getKeyPath(&unk_10072BBC8);
            static Published.subscript.getter(v96, v66, KeyPath);
            swift_release(v89);
            swift_release(KeyPath);
            v86 = v96[0];
            PassthroughSubject.send(_:)(v96);
            swift_release(v19);
            v87 = v51;
            goto LABEL_27;
          }
          v82 = v51;
LABEL_22:
          swift_release(v82);
          v83 = v19;
LABEL_28:
          swift_release(v83);
          return;
        }
LABEL_32:
        __break(1u);
        return;
      }
      if (v20 != 1)
      {
LABEL_13:
        swift_release(v19);
        return;
      }
      v21 = (id)sub_10052B9EC();
      v22 = objc_msgSend(a1, "annotationUuid");
      if (v22)
      {
        v23 = v22;
        v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
        v26 = v25;

        v27 = swift_retain(v21);
        v28 = (void (*)(uint64_t *, _QWORD, __n128))dispatch thunk of DocumentAnnotationsEntity.bookmarks.modify(v96, v27);
        v30 = v29;
        v31 = swift_isUniquelyReferenced_nonNull_native(*v29);
        v95 = *v30;
        *v30 = 0x8000000000000000;
        sub_1002C4AA4((uint64_t)v21, v24, v26, v31);
        v32 = *v30;
        *v30 = v95;
        swift_bridgeObjectRelease(v32);
        v33 = swift_bridgeObjectRelease(v26);
        v28(v96, 0, v33);
        if ((v93 & 1) != 0)
        {
          if (qword_1009CE800 != -1)
            swift_once(&qword_1009CE800, sub_100529294);
          v34 = type metadata accessor for Logger(0);
          sub_100048F64(v34, (uint64_t)qword_1009EA0A0);
          swift_retain_n(v21, 2);
          v35 = (char *)v94;
          v36 = Logger.logObject.getter(v35);
          v37 = static os_log_type_t.info.getter(v36);
          v38 = v37;
          if (os_log_type_enabled(v36, v37))
          {
            v39 = swift_slowAlloc(22, -1);
            v94 = v21;
            v40 = v39;
            v93 = swift_slowAlloc(64, -1);
            v96[0] = v93;
            *(_DWORD *)v40 = 136315394;
            v92 = v38;
            v91 = v36;
            v41 = dispatch thunk of AnnotationEntity.debugDescription.getter();
            v43 = v42;
            v95 = sub_100040F58(v41, v42, v96);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v40 + 4, v40 + 12);
            swift_bridgeObjectRelease(v43);
            swift_release_n(v94, 2);
            *(_WORD *)(v40 + 12) = 2080;
            v90 = v40 + 14;
            v45 = *(_QWORD *)&v35[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
            v44 = *(_QWORD *)&v35[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
            sub_10003F198(&v35[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v45);
            v46 = dispatch thunk of BookEntityType.assetID.getter(v45, v44);
            v48 = v47;
            v95 = sub_100040F58(v46, v47, v96);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v95, v96, v90, v40 + 22);
            swift_bridgeObjectRelease(v48);

            v36 = v91;
            _os_log_impl((void *)&_mh_execute_header, v91, (os_log_type_t)v92, "Creating bookmark for annotation:%s in book:%s", (uint8_t *)v40, 0x16u);
            v49 = v93;
            swift_arrayDestroy(v93, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v49, -1, -1);
            v50 = v40;
            v21 = v94;
            swift_slowDealloc(v50, -1, -1);
          }
          else
          {
            swift_release_n(v21, 2);

          }
          *v13 = v21;
          (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for AnnotationChange.insert<A>(_:), v9);
          swift_retain(v21);
          PassthroughSubject.send(_:)(v13);
          (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
          v84 = swift_getKeyPath(&unk_10072BBA0);
          v85 = swift_getKeyPath(&unk_10072BBC8);
          static Published.subscript.getter(v96, v35, v84);
          swift_release(v85);
          swift_release(v84);
          v86 = v96[0];
          PassthroughSubject.send(_:)(v96);
          swift_release(v19);
          v87 = v21;
LABEL_27:
          swift_release(v87);
          v83 = v86;
          goto LABEL_28;
        }
        v82 = v21;
        goto LABEL_22;
      }
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
}

uint64_t sub_10052B9EC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D7440);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(v1, "annotationUuid", v7);
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  v11 = v10;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v14 = v13;

  v15 = objc_msgSend(v1, "plLocationRangeStart");
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = v15;
  v28 = v14;
  v17 = objc_msgSend(v15, "integerValue");

  v18 = objc_msgSend(v1, "annotationLocation");
  if (!v18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v19 = v18;
  v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
  v22 = v21;

  v23 = objc_msgSend(v1, "userModificationDate");
  if (!v23)
  {
LABEL_10:
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
    goto LABEL_11;
  }
  v24 = v23;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v23);

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v9, v5, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v9, 0, 1, v2);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2);
  if ((_DWORD)result != 1)
  {
    v26 = type metadata accessor for AnnotationEntity(0);
    swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
    return AnnotationEntity.init(uniqueID:documentOrdinal:location:modificationDate:)(v12, v28, v17, v20, v22, v9);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10052BC08()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t result;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = type metadata accessor for Date(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D7440);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(v0, "annotationUuid", v6);
  if (!v9)
  {
    __break(1u);
    goto LABEL_8;
  }
  v10 = v9;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
  v13 = v12;

  v14 = objc_msgSend(v0, "plLocationRangeStart");
  if (!v14)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v15 = v14;
  v29 = v13;
  v16 = objc_msgSend(v14, "integerValue");

  v17 = objc_msgSend(v0, "annotationLocation");
  if (!v17)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v18 = v17;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;

  v22 = objc_msgSend(v0, "userModificationDate");
  if (!v22)
  {
LABEL_10:
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v8, 1, 1, v1);
    goto LABEL_11;
  }
  v23 = v22;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v22);

  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v8, v4, v1);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v8, 0, 1, v1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1);
  if ((_DWORD)result != 1)
  {
    v25 = AEAnnotation.normalizedStyle.getter();
    v26 = objc_msgSend(v0, "annotationHasNote");
    v27 = type metadata accessor for HighlightAnnotationEntity(0);
    swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
    return HighlightAnnotationEntity.init(uniqueID:documentOrdinal:location:modificationDate:style:hasNoteText:)(v11, v29, v16, v19, v21, v8, v25, v26);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10052BE48(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, _QWORD, __n128);
  uint64_t *v17;
  uint64_t *v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37[4];

  v2 = objc_msgSend(a1, "annotationLocation");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

    v7 = HIBYTE(v6) & 0xF;
    if ((v6 & 0x2000000000000000) == 0)
      v7 = v4 & 0xFFFFFFFFFFFFLL;
    if (v7)
    {
      v8 = String.isUnknownLocation.getter(v4, v6);
      swift_bridgeObjectRelease(v6);
      if ((v8 & 1) == 0)
        return 0;
    }
    else
    {
      swift_bridgeObjectRelease(v6);
    }
  }
  v10 = sub_10052C20C();
  if (v10)
  {
    v11 = v10;
    v12 = sub_10052FBF8((uint64_t)v10);
    if (v12)
    {
      v13 = v12;
      v14 = v11[2];
      v15 = v11[3];
      swift_bridgeObjectRetain(v15);
      v16 = (void (*)(uint64_t *, _QWORD, __n128))dispatch thunk of DocumentAnnotationsEntity.serializedUpgradeAnnotations.modify(v37);
      v18 = v17;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v17);
      v36 = *v18;
      *v18 = 0x8000000000000000;
      sub_1002C4A6C(v13, v14, v15, isUniquelyReferenced_nonNull_native);
      v20 = *v18;
      *v18 = v36;
      swift_bridgeObjectRelease(v20);
      v21 = swift_bridgeObjectRelease(v15);
      v16(v37, 0, v21);
      if (qword_1009CE800 != -1)
        swift_once(&qword_1009CE800, sub_100529294);
      v22 = type metadata accessor for Logger(0);
      sub_100048F64(v22, (uint64_t)qword_1009EA0A0);
      v23 = v1;
      swift_retain(v11);
      v25 = Logger.logObject.getter(v24);
      v26 = static os_log_type_t.info.getter(v25);
      if (!os_log_type_enabled(v25, v26))
      {
        swift_release_n(v11, 2);

        return 1;
      }
      v27 = swift_slowAlloc(22, -1);
      v35 = swift_slowAlloc(64, -1);
      v37[0] = v35;
      *(_DWORD *)v27 = 136315394;
      v28 = v11[2];
      v29 = v11[3];
      swift_bridgeObjectRetain(v29);
      v36 = sub_100040F58(v28, v29, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v27 + 4, v27 + 12);
      swift_bridgeObjectRelease(v29);
      swift_release(v11);
      *(_WORD *)(v27 + 12) = 2080;
      v31 = *(_QWORD *)&v23[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
      v30 = *(_QWORD *)&v23[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
      sub_10003F198(&v23[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v31);
      v32 = dispatch thunk of BookEntityType.assetID.getter(v31, v30);
      v34 = v33;
      v36 = sub_100040F58(v32, v33, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, v37, v27 + 14, v27 + 22);
      swift_bridgeObjectRelease(v34);

      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Creating upgrade request for annotation:%s in book:%s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy(v35, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v27, -1, -1);

    }
    swift_release(v11);
  }
  return 1;
}

uint64_t sub_10052C178()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v1 = objc_msgSend(v0, "annotationLocation");
  if (!v1)
    goto LABEL_7;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease(v5);
LABEL_7:
    v8 = 0;
    return v8 & 1;
  }
  v7 = String.isUnknownLocation.getter(v3, v5);
  swift_bridgeObjectRelease(v5);
  v8 = v7 ^ 1;
  return v8 & 1;
}

id sub_10052C20C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  Class isa;
  id v8;
  id v9;
  id result;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD v29[3];
  _BYTE v30[16];
  _OWORD v31[2];
  _OWORD v32[2];

  v1 = objc_msgSend(v0, "plUserData");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  v6 = (void *)objc_opt_self(NSPropertyListSerialization);
  isa = Data._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v31[0] = 0;
  v8 = objc_msgSend(v6, "propertyListWithData:options:format:error:", isa, 0, 0, v31);

  v9 = *(id *)&v31[0];
  if (!v8)
  {
    v17 = v9;
    v18 = _convertNSErrorToError(_:)(v9);

    swift_willThrow(v19);
    if (qword_1009CE800 != -1)
      swift_once(&qword_1009CE800, sub_100529294);
    v20 = type metadata accessor for Logger(0);
    sub_100048F64(v20, (uint64_t)qword_1009EA0A0);
    swift_errorRetain(v18);
    v21 = swift_errorRetain(v18);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v32[0] = v25;
      *(_DWORD *)v24 = 136315138;
      swift_getErrorValue(v18, v30, v29);
      v26 = Error.localizedDescription.getter(v29[1], v29[2]);
      v28 = v27;
      *(_QWORD *)&v31[0] = sub_100040F58(v26, v27, (uint64_t *)v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v31, (char *)v31 + 8, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease(v28);
      swift_errorRelease(v18);
      swift_errorRelease(v18);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Unable to deserialize user data: %s", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
      sub_10005EE1C(v3, v5);

      swift_errorRelease(v18);
    }
    else
    {
      sub_10005EE1C(v3, v5);
      swift_errorRelease(v18);
      swift_errorRelease(v18);
      swift_errorRelease(v18);

    }
    return 0;
  }
  _bridgeAnyObjectToAny(_:)(v8);
  result = objc_msgSend(v0, "annotationUuid", swift_unknownObjectRelease(v8).n128_f64[0]);
  if (result)
  {
    v11 = result;
    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v14 = v13;
    sub_10005EE1C(v3, v5);

    sub_10004CFC4(v32, v31);
    v15 = type metadata accessor for AnnotationProviderService.AnnotationUpgradeEntity();
    v16 = swift_allocObject(v15, 64, 7);
    *(_QWORD *)(v16 + 16) = v12;
    *(_QWORD *)(v16 + 24) = v14;
    sub_10004CFC4(v31, (_OWORD *)(v16 + 32));
    return (id)v16;
  }
  __break(1u);
  return result;
}

void sub_10052C558(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t KeyPath;
  uint64_t v11;
  double v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  __n128 v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  char *v34;
  NSObject *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  char *v57;
  NSObject *v58;
  int v59;
  uint64_t v60;
  id v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  os_log_t v75;
  uint64_t v76;
  id v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  void (*v83)(uint64_t *, _QWORD, __n128);
  uint64_t v84;
  __n128 v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  os_log_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  os_log_t v104;
  uint64_t v105;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  void (*v112)(uint64_t *, _QWORD, __n128);
  uint64_t v113;
  __n128 v114;
  id v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  os_log_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  os_log_t v128;
  char *v129;
  os_log_t v130;
  uint64_t v131;
  uint64_t v132[4];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009EA298);
  v128 = *(os_log_t *)(v4 - 8);
  v129 = (char *)v4;
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v124 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10004CFD4(&qword_1009EA2A0);
  v130 = *(os_log_t *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_10072BBA0);
  v11 = swift_getKeyPath(&unk_10072BBC8);
  static Published.subscript.getter(v132, v2, KeyPath);
  swift_release(v11);
  *(_QWORD *)&v12 = swift_release(KeyPath).n128_u64[0];
  v13 = v132[0];
  v14 = objc_msgSend(a1, "annotationUuid", v12);
  if (!v14)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v15 = v14;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
  v18 = v17;

  v19 = dispatch thunk of BookAnnotationEntity.documentAnnotationsEntity(containing:)(v16, v18);
  swift_bridgeObjectRelease(v18);
  v20 = swift_release(v13);
  if (!v19)
    return;
  v21 = dispatch thunk of DocumentAnnotationsEntity.bookmarks.getter(v20);
  v22 = objc_msgSend(a1, "annotationUuid");
  if (!v22)
    goto LABEL_38;
  v23 = v22;
  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
  v26 = v25;

  if (*(_QWORD *)(v21 + 16))
  {
    sub_10004CE80(v24, v26);
    v28 = v27;
    swift_bridgeObjectRelease(v26);
    v29 = swift_bridgeObjectRelease(v21);
    if ((v28 & 1) != 0)
    {
      if (qword_1009CE800 != -1)
        swift_once(&qword_1009CE800, sub_100529294);
      v30 = type metadata accessor for Logger(0);
      sub_100048F64(v30, (uint64_t)qword_1009EA0A0);
      v31 = a1;
      v32 = v2;
      v33 = v31;
      v34 = (char *)v32;
      v35 = Logger.logObject.getter(v34);
      v36 = static os_log_type_t.info.getter(v35);
      if (os_log_type_enabled(v35, (os_log_type_t)v36))
      {
        v129 = v34;
        v37 = swift_slowAlloc(22, -1);
        v38 = swift_slowAlloc(64, -1);
        v132[0] = v38;
        *(_DWORD *)v37 = 136315394;
        v39 = objc_msgSend(v33, "annotationUuid");
        v128 = v35;
        v127 = v36;
        v126 = v38;
        if (v39)
        {
          v40 = v39;
          v41 = v33;
          v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
          v44 = v43;

        }
        else
        {
          v41 = v33;
          v42 = 0;
          v44 = 0;
        }
        v67 = Optional<A>.description.getter(v42, v44);
        v69 = v68;
        swift_bridgeObjectRelease(v44);
        v131 = sub_100040F58(v67, v69, v132);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132, v37 + 4, v37 + 12);
        swift_bridgeObjectRelease(v69);

        *(_WORD *)(v37 + 12) = 2080;
        v125 = v37 + 14;
        v34 = v129;
        v71 = *(_QWORD *)&v129[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
        v70 = *(_QWORD *)&v129[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
        sub_10003F198(&v129[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v71);
        v72 = dispatch thunk of BookEntityType.assetID.getter(v71, v70);
        v74 = v73;
        v131 = sub_100040F58(v72, v73, v132);
        v33 = v41;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132, v125, v37 + 22);
        swift_bridgeObjectRelease(v74);

        v75 = v128;
        _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v127, "Removing bookmark for annotation:%s in book:%s", (uint8_t *)v37, 0x16u);
        v76 = v126;
        swift_arrayDestroy(v126, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v76, -1, -1);
        swift_slowDealloc(v37, -1, -1);

      }
      else
      {

      }
      v77 = objc_msgSend(v33, "annotationUuid");
      if (v77)
      {
        v78 = v77;
        v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
        v81 = v80;

        v83 = (void (*)(uint64_t *, _QWORD, __n128))dispatch thunk of DocumentAnnotationsEntity.bookmarks.modify(v132, v82);
        v84 = sub_1002BE074(v79, v81);
        swift_bridgeObjectRelease(v81);
        v85 = swift_release(v84);
        v83(v132, 0, v85);
        v86 = objc_msgSend(v33, "annotationUuid");
        if (v86)
        {
          v87 = v86;
          v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v86);
          v90 = v89;

          v91 = DocumentAnnotationsEntity.documentOrdinal.getter();
          *v9 = v88;
          v9[1] = v90;
          v9[2] = v91;
          v92 = v130;
          ((void (*)(uint64_t *, _QWORD, uint64_t))v130[13].isa)(v9, enum case for AnnotationChange.delete<A>(_:), v7);
          PassthroughSubject.send(_:)(v9);
          ((void (*)(uint64_t *, uint64_t))v92[1].isa)(v9, v7);
          v93 = swift_getKeyPath(&unk_10072BBA0);
          v94 = swift_getKeyPath(&unk_10072BBC8);
          v95 = v34;
LABEL_34:
          static Published.subscript.getter(v132, v95, v93);
          swift_release(v94);
          swift_release(v93);
          v123 = v132[0];
          PassthroughSubject.send(_:)(v132);
          swift_release(v19);
          v66 = v123;
          goto LABEL_35;
        }
        goto LABEL_41;
      }
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v26);
    v29 = swift_bridgeObjectRelease(v21);
  }
  v45 = dispatch thunk of DocumentAnnotationsEntity.highlights.getter(v29);
  v46 = objc_msgSend(a1, "annotationUuid");
  if (!v46)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v47 = v46;
  v48 = static String._unconditionallyBridgeFromObjectiveC(_:)(v46);
  v50 = v49;

  if (*(_QWORD *)(v45 + 16))
  {
    sub_10004CE80(v48, v50);
    v52 = v51;
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(v45);
    if ((v52 & 1) != 0)
    {
      if (qword_1009CE800 != -1)
        swift_once(&qword_1009CE800, sub_100529294);
      v53 = type metadata accessor for Logger(0);
      sub_100048F64(v53, (uint64_t)qword_1009EA0A0);
      v54 = a1;
      v55 = v2;
      v56 = v54;
      v57 = (char *)v55;
      v58 = Logger.logObject.getter(v57);
      v59 = static os_log_type_t.info.getter(v58);
      if (os_log_type_enabled(v58, (os_log_type_t)v59))
      {
        v60 = swift_slowAlloc(22, -1);
        v126 = swift_slowAlloc(64, -1);
        v132[0] = v126;
        *(_DWORD *)v60 = 136315394;
        v61 = objc_msgSend(v56, "annotationUuid");
        v130 = v58;
        v127 = v59;
        if (v61)
        {
          v62 = v61;
          v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
          v65 = v64;

        }
        else
        {
          v63 = 0;
          v65 = 0;
        }
        v96 = Optional<A>.description.getter(v63, v65);
        v98 = v97;
        swift_bridgeObjectRelease(v65);
        v131 = sub_100040F58(v96, v98, v132);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132, v60 + 4, v60 + 12);
        swift_bridgeObjectRelease(v98);

        *(_WORD *)(v60 + 12) = 2080;
        v100 = *(_QWORD *)&v57[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
        v99 = *(_QWORD *)&v57[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
        sub_10003F198(&v57[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v100);
        v101 = dispatch thunk of BookEntityType.assetID.getter(v100, v99);
        v103 = v102;
        v131 = sub_100040F58(v101, v102, v132);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v131, v132, v60 + 14, v60 + 22);
        swift_bridgeObjectRelease(v103);

        v104 = v130;
        _os_log_impl((void *)&_mh_execute_header, v130, (os_log_type_t)v127, "Removing highlight for annotation:%s in book:%s", (uint8_t *)v60, 0x16u);
        v105 = v126;
        swift_arrayDestroy(v126, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v105, -1, -1);
        swift_slowDealloc(v60, -1, -1);

      }
      else
      {

      }
      v106 = objc_msgSend(v56, "annotationUuid");
      if (v106)
      {
        v107 = v106;
        v108 = static String._unconditionallyBridgeFromObjectiveC(_:)(v106);
        v110 = v109;

        v112 = (void (*)(uint64_t *, _QWORD, __n128))dispatch thunk of DocumentAnnotationsEntity.highlights.modify(v132, v111);
        v113 = sub_1002BE060(v108, v110);
        swift_bridgeObjectRelease(v110);
        v114 = swift_release(v113);
        v112(v132, 0, v114);
        v115 = objc_msgSend(v56, "annotationUuid");
        if (v115)
        {
          v116 = v115;
          v117 = static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
          v119 = v118;

          v120 = DocumentAnnotationsEntity.documentOrdinal.getter();
          *v6 = v117;
          v6[1] = v119;
          v6[2] = v120;
          v122 = v128;
          v121 = v129;
          ((void (*)(uint64_t *, _QWORD, char *))v128[13].isa)(v6, enum case for AnnotationChange.delete<A>(_:), v129);
          PassthroughSubject.send(_:)(v6);
          ((void (*)(uint64_t *, char *))v122[1].isa)(v6, v121);
          v93 = swift_getKeyPath(&unk_10072BBA0);
          v94 = swift_getKeyPath(&unk_10072BBC8);
          v95 = v57;
          goto LABEL_34;
        }
LABEL_43:
        __break(1u);
        return;
      }
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v50);
    swift_bridgeObjectRelease(v45);
  }
  v66 = v19;
LABEL_35:
  swift_release(v66);
}

void sub_10052CEEC(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t KeyPath;
  uint64_t v12;
  double v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  __n128 v18;
  uint64_t v19;
  double v20;
  unsigned int v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void (**v31)(_QWORD *, _QWORD, uint64_t);
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  char *v37;
  NSObject *v38;
  int v39;
  _BOOL4 v40;
  uint64_t v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  id v56;
  uint64_t v57;
  id v58;
  id v59;
  NSObject *v60;
  char *v61;
  NSObject *v62;
  int v63;
  _BOOL4 v64;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __n128 v90;
  void (*v91)(uint64_t *, _QWORD, __n128);
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  char v95;
  uint64_t v96;
  __n128 v97;
  char *v98;
  id v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  NSObject *v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  __n128 v126;
  void (*v127)(uint64_t *, _QWORD, __n128);
  uint64_t v128;
  uint64_t *v129;
  uint64_t *v130;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v132;
  __n128 v133;
  char *v134;
  id v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (**v141)(_QWORD *, _QWORD, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t v147;
  int v148;
  NSObject *v149;
  id v150;
  char *v151;
  void (**v152)(_QWORD *, _QWORD, uint64_t);
  uint64_t v153;
  uint64_t v154[4];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009EA298);
  v152 = *(void (***)(_QWORD *, _QWORD, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = sub_10004CFD4(&qword_1009EA2A0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (uint64_t *)((char *)&v144 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  KeyPath = swift_getKeyPath(&unk_10072BBA0);
  v12 = swift_getKeyPath(&unk_10072BBC8);
  static Published.subscript.getter(v154, v2, KeyPath);
  swift_release(v12);
  *(_QWORD *)&v13 = swift_release(KeyPath).n128_u64[0];
  v14 = v154[0];
  v15 = objc_msgSend(a1, "plLocationRangeStart", v13);
  if (!v15)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "integerValue");

  v19 = dispatch thunk of BookAnnotationEntity.documentAnnotationsEntity(for:)(v17, v18);
  *(_QWORD *)&v20 = swift_release(v14).n128_u64[0];
  if (!v19)
    return;
  v21 = objc_msgSend(a1, "annotationType", v20);
  if (v21 == 2)
  {
    v47 = objc_msgSend(a1, "annotationUuid");
    if (v47)
    {
      v48 = v47;
      v49 = static String._unconditionallyBridgeFromObjectiveC(_:)(v47);
      v51 = v50;

      v53 = dispatch thunk of DocumentAnnotationsEntity.highlights.getter(v52);
      if (*(_QWORD *)(v53 + 16))
      {
        v54 = sub_10004CE80(v49, v51);
        if ((v55 & 1) != 0)
        {
          v56 = *(id *)(*(_QWORD *)(v53 + 56) + 8 * v54);
          swift_retain(v56);
          swift_bridgeObjectRelease(v53);
          swift_bridgeObjectRelease(v51);
          if (qword_1009CE800 != -1)
            swift_once(&qword_1009CE800, sub_100529294);
          v57 = type metadata accessor for Logger(0);
          sub_100048F64(v57, (uint64_t)qword_1009EA0A0);
          v58 = a1;
          v59 = v2;
          v60 = v58;
          v61 = (char *)v59;
          v62 = Logger.logObject.getter(v61);
          v63 = static os_log_type_t.info.getter(v62);
          v64 = os_log_type_enabled(v62, (os_log_type_t)v63);
          v150 = v56;
          v151 = v61;
          if (v64)
          {
            v148 = v63;
            v149 = v62;
            v65 = swift_slowAlloc(22, -1);
            v147 = swift_slowAlloc(64, -1);
            v154[0] = v147;
            *(_DWORD *)v65 = 136315394;
            v66 = -[NSObject annotationUuid](v60, "annotationUuid");
            if (v66)
            {
              v67 = v66;
              v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
              v70 = v69;

            }
            else
            {
              v68 = 0;
              v70 = 0;
            }
            v109 = Optional<A>.description.getter(v68, v70);
            v111 = v110;
            swift_bridgeObjectRelease(v70);
            v153 = sub_100040F58(v109, v111, v154);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, v154, v65 + 4, v65 + 12);
            swift_bridgeObjectRelease(v111);

            *(_WORD *)(v65 + 12) = 2080;
            v146 = (uint64_t *)(v65 + 14);
            v112 = v151;
            v114 = *(_QWORD *)&v151[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
            v113 = *(_QWORD *)&v151[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
            sub_10003F198(&v151[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v114);
            v115 = dispatch thunk of BookEntityType.assetID.getter(v114, v113);
            v117 = v116;
            v153 = sub_100040F58(v115, v116, v154);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, v154, v146, v65 + 22);
            swift_bridgeObjectRelease(v117);

            v118 = v149;
            _os_log_impl((void *)&_mh_execute_header, v149, (os_log_type_t)v148, "Updating highlight for annotation:%s in book:%s", (uint8_t *)v65, 0x16u);
            v119 = v147;
            swift_arrayDestroy(v147, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v119, -1, -1);
            swift_slowDealloc(v65, -1, -1);

            v56 = v150;
          }
          else
          {

          }
          v120 = sub_10052BC08();
          dispatch thunk of HighlightAnnotationEntity.updateFrom(highlightAnnotationEntity:)();
          v121 = -[NSObject annotationUuid](v60, "annotationUuid", swift_release(v120).n128_f64[0]);
          v149 = v60;
          if (v121)
          {
            v122 = v121;
            v123 = static String._unconditionallyBridgeFromObjectiveC(_:)(v121);
            v125 = v124;

            v126 = swift_retain(v56);
            v127 = (void (*)(uint64_t *, _QWORD, __n128))dispatch thunk of DocumentAnnotationsEntity.highlights.modify(v154, v126);
            v128 = (uint64_t)v56;
            v130 = v129;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v129);
            v153 = *v130;
            *v130 = 0x8000000000000000;
            sub_1002C4A88(v128, v123, v125, isUniquelyReferenced_nonNull_native);
            v132 = *v130;
            *v130 = v153;
            swift_bridgeObjectRelease(v132);
            v133 = swift_bridgeObjectRelease(v125);
            v127(v154, 0, v133);
            v134 = v151;
            v135 = -[NSObject annotationUuid](v149, "annotationUuid");
            if (v135)
            {
              v136 = v135;
              v137 = static String._unconditionallyBridgeFromObjectiveC(_:)(v135);
              v139 = v138;

              v140 = DocumentAnnotationsEntity.documentOrdinal.getter();
              *v6 = v137;
              v6[1] = v139;
              v6[2] = v140;
              v141 = v152;
              v152[13](v6, enum case for AnnotationChange.update<A>(_:), v4);
              PassthroughSubject.send(_:)(v6);
              ((void (*)(uint64_t *, uint64_t))v141[1])(v6, v4);
              v142 = swift_getKeyPath(&unk_10072BBA0);
              v143 = swift_getKeyPath(&unk_10072BBC8);
              static Published.subscript.getter(v154, v134, v142);
              swift_release(v143);
              swift_release(v142);
              v107 = v154[0];
              PassthroughSubject.send(_:)(v154);
              swift_release(v19);
              v108 = v150;
              goto LABEL_37;
            }
LABEL_46:
            __break(1u);
            return;
          }
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
      }
      swift_bridgeObjectRelease(v53);
      v71 = v51;
LABEL_23:
      swift_bridgeObjectRelease(v71);
      goto LABEL_24;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v21 == 1)
  {
    v22 = objc_msgSend(a1, "annotationUuid");
    if (v22)
    {
      v23 = v22;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v26 = v25;

      v28 = dispatch thunk of DocumentAnnotationsEntity.bookmarks.getter(v27);
      if (*(_QWORD *)(v28 + 16))
      {
        v29 = sub_10004CE80(v24, v26);
        if ((v30 & 1) != 0)
        {
          v31 = *(void (***)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v28 + 56) + 8 * v29);
          swift_retain(v31);
          swift_bridgeObjectRelease(v28);
          swift_bridgeObjectRelease(v26);
          v32 = sub_10052B9EC();
          v152 = v31;
          dispatch thunk of AnnotationEntity.updateFrom(annotationEntity:)();
          swift_release(v32);
          if (qword_1009CE800 != -1)
            swift_once(&qword_1009CE800, sub_100529294);
          v33 = type metadata accessor for Logger(0);
          sub_100048F64(v33, (uint64_t)qword_1009EA0A0);
          v34 = a1;
          v35 = v2;
          v36 = v34;
          v37 = (char *)v35;
          v38 = Logger.logObject.getter(v37);
          v39 = static os_log_type_t.info.getter(v38);
          v40 = os_log_type_enabled(v38, (os_log_type_t)v39);
          v151 = v37;
          if (v40)
          {
            v148 = v39;
            v149 = v38;
            v41 = swift_slowAlloc(22, -1);
            v147 = swift_slowAlloc(64, -1);
            v154[0] = v147;
            *(_DWORD *)v41 = 136315394;
            v42 = objc_msgSend(v36, "annotationUuid");
            if (v42)
            {
              v43 = v42;
              v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v42);
              v46 = v45;

            }
            else
            {
              v44 = 0;
              v46 = 0;
            }
            v73 = Optional<A>.description.getter(v44, v46);
            v75 = v74;
            swift_bridgeObjectRelease(v46);
            v153 = sub_100040F58(v73, v75, v154);
            v146 = v154;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, v154, v41 + 4, v41 + 12);
            swift_bridgeObjectRelease(v75);
            v76 = v36;

            *(_WORD *)(v41 + 12) = 2080;
            v145 = v41 + 14;
            v77 = v151;
            v79 = *(_QWORD *)&v151[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
            v78 = *(_QWORD *)&v151[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
            sub_10003F198(&v151[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v79);
            v80 = dispatch thunk of BookEntityType.assetID.getter(v79, v78);
            v82 = v81;
            v153 = sub_100040F58(v80, v81, v154);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v153, v146, v145, v41 + 22);
            swift_bridgeObjectRelease(v82);

            v36 = v76;
            v38 = v149;
            _os_log_impl((void *)&_mh_execute_header, v149, (os_log_type_t)v148, "Updating bookmark for annotation:%s in book:%s", (uint8_t *)v41, 0x16u);
            v83 = v147;
            swift_arrayDestroy(v147, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v83, -1, -1);
            swift_slowDealloc(v41, -1, -1);
          }
          else
          {

          }
          v84 = (uint64_t)v152;
          v150 = v36;
          v85 = objc_msgSend(v36, "annotationUuid");
          if (v85)
          {
            v86 = v85;
            v87 = static String._unconditionallyBridgeFromObjectiveC(_:)(v85);
            v89 = v88;

            v90 = swift_retain(v84);
            v91 = (void (*)(uint64_t *, _QWORD, __n128))dispatch thunk of DocumentAnnotationsEntity.bookmarks.modify(v154, v90);
            v92 = v84;
            v94 = v93;
            v95 = swift_isUniquelyReferenced_nonNull_native(*v93);
            v153 = *v94;
            *v94 = 0x8000000000000000;
            sub_1002C4AA4(v92, v87, v89, v95);
            v96 = *v94;
            *v94 = v153;
            swift_bridgeObjectRelease(v96);
            v97 = swift_bridgeObjectRelease(v89);
            v91(v154, 0, v97);
            v98 = v151;
            v99 = objc_msgSend(v150, "annotationUuid");
            if (v99)
            {
              v100 = v99;
              v101 = static String._unconditionallyBridgeFromObjectiveC(_:)(v99);
              v103 = v102;

              v104 = DocumentAnnotationsEntity.documentOrdinal.getter();
              *v10 = v101;
              v10[1] = v103;
              v10[2] = v104;
              (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for AnnotationChange.update<A>(_:), v7);
              PassthroughSubject.send(_:)(v10);
              (*(void (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
              v105 = swift_getKeyPath(&unk_10072BBA0);
              v106 = swift_getKeyPath(&unk_10072BBC8);
              static Published.subscript.getter(v154, v98, v105);
              swift_release(v106);
              swift_release(v105);
              v107 = v154[0];
              PassthroughSubject.send(_:)(v154);
              swift_release(v19);
              v108 = v152;
LABEL_37:
              swift_release(v108);
              v72 = v107;
              goto LABEL_38;
            }
            goto LABEL_44;
          }
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
      }
      swift_bridgeObjectRelease(v28);
      v71 = v26;
      goto LABEL_23;
    }
    goto LABEL_41;
  }
LABEL_24:
  v72 = v19;
LABEL_38:
  swift_release(v72);
}

Swift::Void __swiftcall AnnotationProviderService.upgrade(annotationCFILocations:)(Swift::OpaquePointer annotationCFILocations)
{
  char *v1;
  uint64_t v3;
  _QWORD *v4;
  void *Strong;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  Class isa;
  Swift::OpaquePointer *v14;
  void *v15;
  uint64_t v16;
  char *v17;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;

  swift_bridgeObjectRetain(annotationCFILocations._rawValue);
  v4 = sub_100427624(v3);
  swift_bridgeObjectRelease(annotationCFILocations._rawValue);
  if (v4[2])
  {
    Strong = (void *)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationMOCHost]);
    if (!Strong)
    {
LABEL_5:
      v12 = *(void **)&v1[OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationModifier];
      isa = Array._bridgeToObjectiveC()().super.isa;
      swift_release(v4);
      v14 = (Swift::OpaquePointer *)swift_allocObject(&unk_10090DA80, 32, 7);
      v14[2]._rawValue = annotationCFILocations._rawValue;
      v14[3]._rawValue = v1;
      v22 = sub_1005332AC;
      v23 = (uint64_t)v14;
      v18 = _NSConcreteStackBlock;
      v19 = 1107296256;
      v20 = sub_1005291AC;
      v21 = &unk_10090DA98;
      v15 = _Block_copy(&v18);
      v16 = v23;
      swift_bridgeObjectRetain(annotationCFILocations._rawValue);
      v17 = v1;
      objc_msgSend(v12, "modifyAnnotationsWithUUIDs:type:performBlock:", isa, 1, v15, swift_release(v16).n128_f64[0]);
      _Block_release(v15);

      return;
    }
    v6 = Strong;
    v7 = objc_msgSend(Strong, "privateUserEditMOC");
    swift_unknownObjectRelease(v6);
    if (v7)
    {
      v8 = swift_allocObject(&unk_10090DA30, 24, 7);
      *(_QWORD *)(v8 + 16) = v1;
      v22 = sub_100533278;
      v23 = v8;
      v18 = _NSConcreteStackBlock;
      v19 = 1107296256;
      v20 = sub_1000147F0;
      v21 = &unk_10090DA48;
      v9 = _Block_copy(&v18);
      v10 = v23;
      v11 = v1;
      objc_msgSend(v7, "performBlock:", v9, swift_release(v10).n128_f64[0]);
      _Block_release(v9);

      goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
    swift_release(v4);
  }
}

uint64_t sub_10052DBA0(uint64_t a1)
{
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t (*v14)(_QWORD *, _QWORD);
  _QWORD *v15;
  _QWORD *v16;
  int64_t v17;
  uint64_t v18;
  int64_t v19;
  _QWORD v20[4];

  KeyPath = swift_getKeyPath(&unk_10072BBA0);
  v3 = swift_getKeyPath(&unk_10072BBC8);
  static Published.subscript.getter(v20, a1, KeyPath, v3);
  swift_release(v3);
  v4 = swift_release(KeyPath);
  v5 = v20[0];
  v6 = dispatch thunk of BookAnnotationEntity.documentAnnotations.getter(v4);
  swift_release(v5);
  v7 = v6 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v6 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain(v6);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v10 &= v10 - 1;
      goto LABEL_5;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v11)
      goto LABEL_25;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v11)
        goto LABEL_25;
      v18 = *(_QWORD *)(v7 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v11)
          goto LABEL_25;
        v18 = *(_QWORD *)(v7 + 8 * v13);
        if (!v18)
        {
          v13 = v17 + 3;
          if (v17 + 3 >= v11)
            goto LABEL_25;
          v18 = *(_QWORD *)(v7 + 8 * v13);
          if (!v18)
          {
            v13 = v17 + 4;
            if (v17 + 4 >= v11)
              goto LABEL_25;
            v18 = *(_QWORD *)(v7 + 8 * v13);
            if (!v18)
              break;
          }
        }
      }
    }
LABEL_24:
    v10 = (v18 - 1) & v18;
LABEL_5:
    v14 = (uint64_t (*)(_QWORD *, _QWORD))dispatch thunk of DocumentAnnotationsEntity.serializedUpgradeAnnotations.modify(v20);
    v16 = v15;
    swift_bridgeObjectRelease(*v15);
    *v16 = &_swiftEmptyDictionarySingleton;
    result = v14(v20, 0);
  }
  v19 = v17 + 5;
  if (v19 >= v11)
  {
LABEL_25:
    swift_release(v6);
    return swift_bridgeObjectRelease(v6);
  }
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v11)
      goto LABEL_25;
    v18 = *(_QWORD *)(v7 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_10052DD98(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;

  if (!a1)
    goto LABEL_15;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v14 = a1;
    swift_bridgeObjectRetain_n(a1, 2);
    v10 = _CocoaArrayWrapper.endIndex.getter(v14);
    if (v10)
      goto LABEL_4;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(a1, 2);
    if (v10)
    {
LABEL_4:
      if (v10 < 1)
      {
        __break(1u);
        return;
      }
      v11 = 0;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, a1);
        else
          v12 = *(id *)(a1 + 8 * v11 + 32);
        v13 = v12;
        ++v11;
        v15 = v12;
        sub_10052DEAC(&v15, a5, a6);

      }
      while (v10 != v11);
    }
  }
  swift_bridgeObjectRelease_n(a1, 2);
LABEL_15:
  if (a3)
    a3();
}

void sub_10052DEAC(id *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  NSString v37;
  uint64_t v38;
  os_log_type_t v39;
  char *v40;
  NSObject *log;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v5 = *a1;
  v6 = objc_msgSend(*a1, "annotationUuid");
  if (v6)
  {
    v7 = v6;
    v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v10 = v9;

    if (*(_QWORD *)(a2 + 16) && (v11 = sub_10004CE80(v8, v10), (v12 & 1) != 0))
    {
      v13 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 16 * v11);
      v15 = *v13;
      v14 = v13[1];
      swift_bridgeObjectRetain(v14);
      swift_bridgeObjectRelease(v10);
      if ((sub_10052C178() & 1) != 0)
      {
        if (qword_1009CE800 != -1)
          swift_once(&qword_1009CE800, sub_100529294);
        v16 = type metadata accessor for Logger(0);
        sub_100048F64(v16, (uint64_t)qword_1009EA0A0);
        swift_bridgeObjectRetain_n(v14, 2);
        v17 = v5;
        v18 = a3;
        v19 = v17;
        v20 = (char *)v18;
        v21 = Logger.logObject.getter(v20);
        v22 = static os_log_type_t.error.getter(v21);
        if (os_log_type_enabled(v21, v22))
        {
          v39 = v22;
          v40 = v20;
          log = v21;
          v23 = swift_slowAlloc(32, -1);
          v38 = swift_slowAlloc(96, -1);
          v45 = v38;
          *(_DWORD *)v23 = 136315650;
          v24 = objc_msgSend(v19, "annotationLocation");
          v42 = v15;
          if (v24)
          {
            v25 = v24;
            v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
            v28 = v27;

          }
          else
          {
            v26 = 0;
            v28 = 0;
          }
          v29 = Optional<A>.description.getter(v26, v28);
          v31 = v30;
          swift_bridgeObjectRelease(v28);
          v43 = sub_100040F58(v29, v31, &v45);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v23 + 4, v23 + 12);
          swift_bridgeObjectRelease(v31);

          *(_WORD *)(v23 + 12) = 2080;
          swift_bridgeObjectRetain(v14);
          v43 = sub_100040F58(v42, v14, &v45);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v23 + 14, v23 + 22);
          swift_bridgeObjectRelease_n(v14, 3);
          *(_WORD *)(v23 + 22) = 2080;
          v32 = *(_QWORD *)&v40[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
          v33 = *(_QWORD *)&v40[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
          sub_10003F198(&v40[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v32);
          v34 = dispatch thunk of BookEntityType.assetID.getter(v32, v33);
          v36 = v35;
          v43 = sub_100040F58(v34, v35, &v45);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v43, &v44, v23 + 24, v23 + 32);
          swift_bridgeObjectRelease(v36);

          v21 = log;
          _os_log_impl((void *)&_mh_execute_header, log, v39, "Updating non-empty annotation cfiLocation:%s to:%s in:%s", (uint8_t *)v23, 0x20u);
          swift_arrayDestroy(v38, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v38, -1, -1);
          swift_slowDealloc(v23, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease_n(v14, 2);
        }

      }
      v37 = String._bridgeToObjectiveC()();
      objc_msgSend(v5, "setAnnotationLocation:", v37, swift_bridgeObjectRelease(v14).n128_f64[0]);

    }
    else
    {
      swift_bridgeObjectRelease(v10);
    }
  }
}

void AnnotationProviderService.bookmark(location:documentOrdinal:pageOffset:eventType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char *v5;
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*__ptr32 *v14)();
  char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t Strong;
  void *v31;
  uint64_t v32;
  uint64_t inited;
  id v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Class isa;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[80];
  char v55[80];
  _QWORD aBlock[5];
  _QWORD *v57;

  v6 = v5;
  v52 = a3;
  v53 = a1;
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &off_10070C000;
  if (!a5)
    goto LABEL_14;
  if (a5 != 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC5Books25AnnotationProviderService_engagementManager]);
    if (!Strong)
      goto LABEL_14;
    v25 = (void *)Strong;
    v31 = *(void **)(Strong + OBJC_IVAR___BKEngagementManager_eventController);
    v32 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    inited = swift_initStackObject(v32, v55);
    *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
    *(_QWORD *)(inited + 32) = 0x7463617265746E69;
    *(_QWORD *)(inited + 40) = 0xEB000000006E6F69;
    *(_QWORD *)(inited + 72) = &type metadata for String;
    *(_QWORD *)(inited + 48) = 1970169197;
    *(_QWORD *)(inited + 56) = 0xE400000000000000;
    v34 = v31;
    v35 = sub_10003FB0C(inited);
    dispatch thunk of EngagementEventController.submitEvent(_:_:)(0xD000000000000012, 0x80000001007BE9F0, v35);
    v36 = v35;
    v14 = &off_10070C000;
    swift_bridgeObjectRelease(v36);

    goto LABEL_13;
  }
  v51 = a4;
  v15 = &v6[OBJC_IVAR____TtC5Books25AnnotationProviderService_engagementManager];
  v16 = swift_unknownObjectWeakLoadStrong(&v6[OBJC_IVAR____TtC5Books25AnnotationProviderService_engagementManager]);
  if (v16)
  {
    v17 = (void *)v16;
    v18 = *(void **)(v16 + OBJC_IVAR___BKEngagementManager_eventController);
    v19 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
    v20 = swift_initStackObject(v19, v54);
    *(_OWORD *)(v20 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v20 + 32) = 0x7463617265746E69;
    *(_QWORD *)(v20 + 40) = 0xEB000000006E6F69;
    *(_QWORD *)(v20 + 72) = &type metadata for String;
    *(_QWORD *)(v20 + 48) = 0x6154656C62756F64;
    *(_QWORD *)(v20 + 56) = 0xE900000000000070;
    v21 = v18;
    v22 = sub_10003FB0C(v20);
    dispatch thunk of EngagementEventController.submitEvent(_:_:)(0xD000000000000012, 0x80000001007BE9F0, v22);
    v23 = v22;
    v14 = &off_10070C000;
    swift_bridgeObjectRelease(v23);

  }
  v24 = swift_unknownObjectWeakLoadStrong(v15);
  a4 = v51;
  if (v24)
  {
    v25 = (void *)v24;
    v26 = *(id *)(v24 + OBJC_IVAR___BKEngagementManager_manager);
    v27 = Manager.donor(type:)(0x2D6E6F6973736573, 0xED0000726F6E6F64);

    if (v27)
    {
      v28 = type metadata accessor for SessionDonor(0);
      v29 = (_BYTE *)swift_dynamicCastClass(v27, v28);

      if (v29 && (v29[OBJC_IVAR___BKSessionDonor_everUsedDoubleTapToBookmark] & 1) == 0)
      {
        v29[OBJC_IVAR___BKSessionDonor_everUsedDoubleTapToBookmark] = 1;
        objc_msgSend(v29, "propertyDidChange:propertyConfiguration:", v29, *(_QWORD *)&v29[OBJC_IVAR___BKSessionDonor_everUsedDoubleTapToBookmarkAppConfig]);
      }
      swift_unknownObjectRelease(v27);
      a4 = v51;
      goto LABEL_14;
    }
LABEL_13:

  }
LABEL_14:
  v37 = *(void **)&v6[OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationModifier];
  v38 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v39 = swift_allocObject(v38, 48, 7);
  *(_OWORD *)(v39 + 16) = *((_OWORD *)v14 + 202);
  v40 = _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  v41 = UUID.uuidString.getter(v40);
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  *(_QWORD *)(v39 + 32) = v41;
  *(_QWORD *)(v39 + 40) = v43;
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v39);
  v45 = (_QWORD *)swift_allocObject(&unk_10090DAD0, 56, 7);
  v46 = v52;
  v45[2] = v6;
  v45[3] = v46;
  v47 = v53;
  v45[4] = a4;
  v45[5] = v47;
  v45[6] = a2;
  aBlock[4] = sub_1005332E0;
  v57 = v45;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1005291AC;
  aBlock[3] = &unk_10090DAE8;
  v48 = _Block_copy(aBlock);
  v49 = v57;
  v50 = v6;
  swift_bridgeObjectRetain(a2);
  objc_msgSend(v37, "modifyAnnotationsWithUUIDs:type:performBlock:", isa, 1, v48, swift_release(v49).n128_f64[0]);
  _Block_release(v48);

}

void sub_10052E6B8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, char *a5, uint64_t a6, uint64_t a7, void (*a8)(void), uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(void);
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Class isa;
  Class v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSString v51;
  id v52;
  id v53;
  NSString v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(void);
  uint64_t v64;
  uint64_t v65;

  v62 = a7;
  v63 = a8;
  v14 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v14);
  v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v21);
  v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v61 = a5;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v24 = a3;
      v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_5:
      v26 = v25;
      objc_msgSend(v25, "setAnnotationType:", 1, a9);
      v27 = objc_msgSend(v26, "annotationCreationDate");
      if (v27)
      {
        v28 = v27;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v27);

        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v20, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v23, 0, 1, v17);
        a3 = v24;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17) != 1)
        {
          v29 = sub_100010960((uint64_t)v23, &qword_1009D7440);
          goto LABEL_14;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v23, 1, 1, v17);
        a3 = v24;
      }
      v43 = sub_100010960((uint64_t)v23, &qword_1009D7440);
      Date.init()(v43);
      isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      objc_msgSend(v26, "setAnnotationCreationDate:", isa);

LABEL_14:
      Date.init()(v29);
      v45 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      objc_msgSend(v26, "setUserModificationDate:", v45);

      objc_msgSend(v26, "setAnnotationCreatorIdentifier:", kAEAnnotationCreatorIdentifier_iBooks);
      v46 = v61;
      v47 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
      v48 = *(_QWORD *)&v61[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
      sub_10003F198(&v61[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v47);
      dispatch thunk of BookEntityType.assetID.getter(v47, v48);
      v50 = v49;
      v51 = String._bridgeToObjectiveC()();
      objc_msgSend(v26, "setAnnotationAssetID:", v51, swift_bridgeObjectRelease(v50).n128_f64[0]);

      objc_msgSend(v26, "setOrdinal:", a6);
      v52 = objc_allocWithZone((Class)BKPageLocation);
      v53 = objc_msgSend(v52, "initWithOrdinal:andOffset:", a6, v62);
      objc_msgSend(v26, "setLocation:", v53);

      v54 = String._bridgeToObjectiveC()();
      objc_msgSend(v26, "setAnnotationLocation:", v54);

      v55 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v16, 1, 1, v55);
      type metadata accessor for MainActor(0);
      v56 = v46;
      v57 = static MainActor.shared.getter(v56);
      v58 = (_QWORD *)swift_allocObject(&unk_10090DE50, 40, 7);
      v58[2] = v57;
      v58[3] = &protocol witness table for MainActor;
      v58[4] = v56;
      v59 = sub_10030C178((uint64_t)v16, (uint64_t)&unk_1009EA310, (uint64_t)v58);
      swift_release(v59);

      if (!a3)
        return;
      goto LABEL_15;
    }
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v24 = a3;
      v25 = *(id *)(a1 + 32);
      goto LABEL_5;
    }
    __break(1u);
  }
  else if (qword_1009CE800 == -1)
  {
    goto LABEL_9;
  }
  swift_once(&qword_1009CE800, sub_100529294);
LABEL_9:
  v30 = type metadata accessor for Logger(0);
  sub_100048F64(v30, (uint64_t)qword_1009EA0A0);
  v31 = a5;
  v32 = Logger.logObject.getter(v31);
  v33 = static os_log_type_t.error.getter(v32);
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = swift_slowAlloc(32, -1);
    v63 = a3;
    v36 = v35;
    v65 = v35;
    *(_DWORD *)v34 = 136315138;
    v62 = a4;
    v37 = *(_QWORD *)&v31[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
    v38 = *(_QWORD *)&v31[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
    sub_10003F198(&v31[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v37);
    v39 = dispatch thunk of BookEntityType.assetID.getter(v37, v38);
    v41 = v40;
    v64 = sub_100040F58(v39, v40, &v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v34 + 4, v34 + 12);
    swift_bridgeObjectRelease(v41);

    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Failed to fetch or create annotation for %s", v34, 0xCu);
    swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
    v42 = v36;
    a3 = v63;
    swift_slowDealloc(v42, -1, -1);
    swift_slowDealloc(v34, -1, -1);

    if (!a3)
      return;
    goto LABEL_15;
  }

  if (a3)
LABEL_15:
    a3();
}

uint64_t sub_10052EC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for AnalyticsEvent.ReadingEvent(0);
  v4[4] = v5;
  v4[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10052ECE4, v7, v8);
}

uint64_t sub_10052ECE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 48));
  Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC5Books25AnnotationProviderService_analyticsProvider);
  if (Strong)
  {
    v4 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    v5 = enum case for ViewType.bookmark(_:);
    v6 = type metadata accessor for ViewType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v3, v5, v6);
    swift_storeEnumTagMultiPayload(v3, v4, 0);
    sub_100277ECC(v3);
    swift_release(Strong);
    sub_100459E48(v3);
  }
  v7 = *(_QWORD *)(v0 + 40);
  **(_BYTE **)(v0 + 16) = Strong == 0;
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall AnnotationProviderService.delete(annotations:)(Swift::OpaquePointer annotations)
{
  char *v1;
  _QWORD *v2;
  void *v3;
  Class isa;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[5];
  uint64_t v10;

  v2 = sub_10052903C((unint64_t)annotations._rawValue);
  v3 = *(void **)&v1[OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationModifier];
  isa = Array._bridgeToObjectiveC()().super.isa;
  v5 = swift_allocObject(&unk_10090DB20, 24, 7);
  *(_QWORD *)(v5 + 16) = v1;
  v9[4] = sub_100533330;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1005291AC;
  v9[3] = &unk_10090DB38;
  v6 = _Block_copy(v9);
  v7 = v10;
  v8 = v1;
  objc_msgSend(v3, "modifyAnnotationsWithUUIDs:type:performBlock:", isa, 1, v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);

  swift_bridgeObjectRelease(v2);
}

Swift::Void __swiftcall AnnotationProviderService.deleteAnnotationsWithUUIDs(_:)(Swift::OpaquePointer a1)
{
  char *v1;
  void *v2;
  Class isa;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  _QWORD v8[5];
  uint64_t v9;

  v2 = *(void **)&v1[OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationModifier];
  isa = Array._bridgeToObjectiveC()().super.isa;
  v4 = swift_allocObject(&unk_10090DB70, 24, 7);
  *(_QWORD *)(v4 + 16) = v1;
  v8[4] = sub_100533B00;
  v9 = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1005291AC;
  v8[3] = &unk_10090DB88;
  v5 = _Block_copy(v8);
  v6 = v9;
  v7 = v1;
  objc_msgSend(v2, "modifyAnnotationsWithUUIDs:type:performBlock:", isa, 1, v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);

}

void sub_10052EF80(uint64_t a1, uint64_t a2, void (*a3)(__n128), uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ObjectType;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(__n128);
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  _QWORD v61[4];
  _QWORD v62[4];

  v60 = a5;
  v8 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v8);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.n128_f64[0] = __chkstk_darwin(v11);
  v14 = (char *)&v55 - v13;
  if (!a1)
    goto LABEL_34;
  v55 = a4;
  v56 = a3;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v54 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v54 = a1;
    swift_bridgeObjectRetain_n(a1, 2);
    v15 = _CocoaArrayWrapper.endIndex.getter(v54);
    if (v15)
      goto LABEL_4;
    goto LABEL_33;
  }
  v15 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n(a1, 2);
  if (!v15)
  {
LABEL_33:
    v12 = swift_bridgeObjectRelease_n(a1, 2);
    a3 = v56;
LABEL_34:
    if (a3)
      a3(v12);
    return;
  }
LABEL_4:
  if (v15 >= 1)
  {
    v16 = 0;
    v57 = a1 & 0xC000000000000001;
    v58 = v15;
    v59 = a1;
    while (1)
    {
      if (v57)
        v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, a1);
      else
        v22 = *(id *)(a1 + 8 * v16 + 32);
      v23 = v22;
      v24 = objc_msgSend(v22, "annotationType", v55);
      v25 = type metadata accessor for TaskPriority(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
      if (v24 != 1)
      {
        v27(v10, 1, 1, v25);
        type metadata accessor for MainActor(0);
        v39 = v60;
        v40 = static MainActor.shared.getter(v39);
        v41 = (_QWORD *)swift_allocObject(&unk_10090DDB0, 40, 7);
        v41[2] = v40;
        v41[3] = &protocol witness table for MainActor;
        v41[4] = v39;
        v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v25);
        if ((_DWORD)v42 == 1)
        {
          sub_100010960((uint64_t)v10, &qword_1009D3150);
          v43 = 0;
          v44 = v41[2];
          if (v44)
            goto LABEL_18;
LABEL_24:
          v47 = 0;
          v49 = 0;
        }
        else
        {
          v53 = TaskPriority.rawValue.getter(v42);
          (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v25);
          v43 = v53;
          v44 = v41[2];
          if (!v44)
            goto LABEL_24;
LABEL_18:
          v45 = v41[3];
          ObjectType = swift_getObjectType();
          swift_unknownObjectRetain(v44);
          v47 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v45);
          v49 = v48;
          swift_unknownObjectRelease(v44);
        }
        v51 = swift_allocObject(&unk_10090DDD8, 32, 7);
        *(_QWORD *)(v51 + 16) = &unk_1009EA2E8;
        *(_QWORD *)(v51 + 24) = v41;
        v52 = sub_10004CFD4(&qword_1009DA1E8);
        if (v49 | v47)
        {
          v62[0] = 0;
          v62[1] = 0;
          v17 = v62;
          v62[2] = v47;
          v62[3] = v49;
        }
        else
        {
          v17 = 0;
        }
        v18 = v58;
        v19 = v43 | 0x1C00;
        v20 = &unk_1009DA1E0;
        goto LABEL_8;
      }
      v27(v14, 1, 1, v25);
      type metadata accessor for MainActor(0);
      v28 = v60;
      v29 = static MainActor.shared.getter(v28);
      v30 = (_QWORD *)swift_allocObject(&unk_10090DE00, 40, 7);
      v30[2] = v29;
      v30[3] = &protocol witness table for MainActor;
      v30[4] = v28;
      v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v25);
      if ((_DWORD)v31 == 1)
      {
        sub_100010960((uint64_t)v14, &qword_1009D3150);
        v32 = 0;
        v33 = v30[2];
        if (!v33)
          goto LABEL_20;
      }
      else
      {
        v50 = TaskPriority.rawValue.getter(v31);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v25);
        v32 = v50;
        v33 = v30[2];
        if (!v33)
        {
LABEL_20:
          v36 = 0;
          v38 = 0;
          goto LABEL_21;
        }
      }
      v34 = v30[3];
      v35 = swift_getObjectType();
      swift_unknownObjectRetain(v33);
      v36 = dispatch thunk of Actor.unownedExecutor.getter(v35, v34);
      v38 = v37;
      swift_unknownObjectRelease(v33);
LABEL_21:
      v51 = swift_allocObject(&unk_10090DE28, 32, 7);
      *(_QWORD *)(v51 + 16) = &unk_1009EA2F8;
      *(_QWORD *)(v51 + 24) = v30;
      v52 = sub_10004CFD4(&qword_1009DA1E8);
      if (v38 | v36)
      {
        v61[0] = 0;
        v61[1] = 0;
        v17 = v61;
        v61[2] = v36;
        v61[3] = v38;
      }
      else
      {
        v17 = 0;
      }
      v18 = v58;
      v19 = v32 | 0x1C00;
      v20 = &unk_1009EA300;
LABEL_8:
      v21 = swift_task_create(v19, v17, v52, v20, v51);
      ++v16;
      objc_msgSend(v23, "setAnnotationDeleted:", 1, swift_release(v21).n128_f64[0]);

      a1 = v59;
      if (v18 == v16)
        goto LABEL_33;
    }
  }
  __break(1u);
}

uint64_t sub_10052F3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for AnalyticsEvent.ReadingEvent(0);
  v4[4] = v5;
  v4[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10052F484, v7, v8);
}

uint64_t sub_10052F484()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 48));
  Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC5Books25AnnotationProviderService_analyticsProvider);
  if (Strong)
  {
    v4 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    v5 = enum case for ViewType.bookmark(_:);
    v6 = type metadata accessor for ViewType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v3, v5, v6);
    swift_storeEnumTagMultiPayload(v3, v4, 1);
    sub_100277ECC(v3);
    swift_release(Strong);
    sub_100459E48(v3);
  }
  v7 = *(_QWORD *)(v0 + 40);
  **(_BYTE **)(v0 + 16) = Strong == 0;
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10052F548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for AnalyticsEvent.ReadingEvent(0);
  v4[4] = v5;
  v4[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10052F5D8, v7, v8);
}

uint64_t sub_10052F5D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 48));
  Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC5Books25AnnotationProviderService_analyticsProvider);
  if (Strong)
  {
    v4 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    v5 = enum case for ViewType.highlights(_:);
    v6 = type metadata accessor for ViewType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v3, v5, v6);
    swift_storeEnumTagMultiPayload(v3, v4, 1);
    sub_100277ECC(v3);
    swift_release(Strong);
    sub_100459E48(v3);
  }
  v7 = *(_QWORD *)(v0 + 40);
  **(_BYTE **)(v0 + 16) = Strong == 0;
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t AnnotationProviderService.deleteAssociatedNotesFromAnnotationsWithUUIDs(_:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = v3;
  v2[5] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[6] = v4;
  v2[7] = v5;
  return swift_task_switch(sub_10052F70C, v4, v5);
}

uint64_t sub_10052F70C()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)v0[3];
  v1 = v0[4];
  v3 = swift_allocObject(&unk_10090DBC0, 24, 7);
  v0[8] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  v0[9] = static MainActor.shared.getter(v2);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  v0[10] = v4;
  v0[11] = v5;
  return swift_task_switch(sub_10052F78C, v4, v5);
}

uint64_t sub_10052F78C(uint64_t a1)
{
  int8x16_t *v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t *v4;
  int8x16_t **v5;
  int8x16_t v7;

  v2 = v1[4].i64[0];
  v7 = v1[1];
  v3 = static MainActor.shared.getter(a1);
  v1[6].i64[0] = v3;
  v4 = (int8x16_t *)swift_task_alloc(64);
  v1[6].i64[1] = (uint64_t)v4;
  v4[1] = vextq_s8(v7, v7, 8uLL);
  v4[2].i32[0] = 1;
  v4[2].i64[1] = (uint64_t)sub_100533338;
  v4[3].i64[0] = v2;
  v5 = (int8x16_t **)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[7].i64[0] = (uint64_t)v5;
  *v5 = v1;
  v5[1] = (int8x16_t *)sub_10052F864;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v3, &protocol witness table for MainActor, 0xD000000000000027, 0x80000001007D17F0, sub_100533340, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_10052F864()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 104);
  v3 = *(_QWORD *)(*v0 + 96);
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10052F8CC, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_10052F8CC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[8];
  swift_release(v0[9]);
  swift_release(v1);
  return swift_task_switch(sub_10020DB80, v0[6], v0[7]);
}

void sub_10052F90C(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v7)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease(a1);
    v12 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    type metadata accessor for MainActor(0);
    v13 = a2;
    v14 = static MainActor.shared.getter(v13);
    v15 = (_QWORD *)swift_allocObject(&unk_10090DD88, 40, 7);
    v15[2] = v14;
    v15[3] = &protocol witness table for MainActor;
    v15[4] = v13;
    v16 = sub_10030C178((uint64_t)v6, (uint64_t)&unk_1009EA2D8, (uint64_t)v15);
    swift_release(v16);
    return;
  }
  if (a1 < 0)
    v11 = a1;
  else
    v11 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v7 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v7)
    goto LABEL_13;
LABEL_3:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v9 = *(id *)(a1 + 8 * i + 32);
      v10 = v9;
      objc_msgSend(v9, "setAnnotationNote:", 0);

    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_10052FAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for AnalyticsEvent.ReadingEvent(0);
  v4[4] = v5;
  v4[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_10052FB34, v7, v8);
}

uint64_t sub_10052FB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 48));
  Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC5Books25AnnotationProviderService_analyticsProvider);
  if (Strong)
  {
    v4 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    v5 = enum case for ViewType.notes(_:);
    v6 = type metadata accessor for ViewType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v3, v5, v6);
    swift_storeEnumTagMultiPayload(v3, v4, 1);
    sub_100277ECC(v3);
    swift_release(Strong);
    sub_100459E48(v3);
  }
  v7 = *(_QWORD *)(v0 + 40);
  **(_BYTE **)(v0 + 16) = Strong == 0;
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_10052FBF8(uint64_t a1)
{
  void *v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  Class isa;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  _OWORD v42[2];
  _BYTE v43[24];
  uint64_t v44[4];

  v3 = sub_1000560A8((uint64_t)_swiftEmptyArrayStorage);
  swift_beginAccess(a1 + 32, v43, 0, 0);
  sub_10004CD0C(a1 + 32, (uint64_t)v44);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009CEC70);
  if ((swift_dynamicCast(v42, v44, (char *)&type metadata for Any + 8, v4, 6) & 1) != 0)
  {
    swift_bridgeObjectRelease(v3);
    v5 = *(_QWORD *)&v42[0];
    v6 = (void *)objc_opt_self(BKEpubLocation);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v8 = objc_msgSend(v6, "deserializeLocationFromDictionary:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

    if (v8)
    {
      _bridgeAnyObjectToAny(_:)(v8);
      swift_unknownObjectRelease(v8);
    }
    else
    {
      memset(v42, 0, sizeof(v42));
    }
    sub_100025B3C((uint64_t)v42, (uint64_t)v44, (uint64_t *)&unk_1009D04E0);
    if (v44[3])
    {
      v9 = sub_100009E04(0, &qword_1009EA290, BKEpubLocation_ptr);
      if ((swift_dynamicCast(&v41, v44, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
      {
        v10 = v41;
        v11 = objc_msgSend(v41, "jsonObject");
        if (v11)
        {
          v12 = v11;
          v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v11, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

          return v3;
        }
        if (qword_1009CE800 != -1)
          swift_once(&qword_1009CE800, sub_100529294);
        v28 = type metadata accessor for Logger(0);
        sub_100048F64(v28, (uint64_t)qword_1009EA0A0);
        swift_retain_n(a1, 2);
        v29 = v1;
        v30 = Logger.logObject.getter(v29);
        v31 = static os_log_type_t.error.getter(v30);
        if (os_log_type_enabled(v30, v31))
        {
          v32 = swift_slowAlloc(22, -1);
          v40 = swift_slowAlloc(64, -1);
          v44[0] = v40;
          *(_DWORD *)v32 = 136315394;
          v33 = *(_QWORD *)(a1 + 16);
          v34 = *(_QWORD *)(a1 + 24);
          swift_bridgeObjectRetain(v34);
          *(_QWORD *)&v42[0] = sub_100040F58(v33, v34, v44);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v42, (char *)v42 + 8, v32 + 4, v32 + 12);
          swift_bridgeObjectRelease(v34);
          swift_release_n(a1, 2);
          *(_WORD *)(v32 + 12) = 2080;
          v36 = *(_QWORD *)&v29[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
          v35 = *(_QWORD *)&v29[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
          sub_10003F198(&v29[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v36);
          v37 = dispatch thunk of BookEntityType.assetID.getter(v36, v35);
          v39 = v38;
          *(_QWORD *)&v42[0] = sub_100040F58(v37, v38, v44);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v42, (char *)v42 + 8, v32 + 14, v32 + 22);
          swift_bridgeObjectRelease(v39);

          _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to json Encode annotation:%s in book: %s", (uint8_t *)v32, 0x16u);
          swift_arrayDestroy(v40, 2, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v40, -1, -1);
          swift_slowDealloc(v32, -1, -1);

        }
        else
        {

          swift_release_n(a1, 2);
        }

        return 0;
      }
    }
    else
    {
      sub_100010960((uint64_t)v44, (uint64_t *)&unk_1009D04E0);
    }
    if (qword_1009CE800 != -1)
      swift_once(&qword_1009CE800, sub_100529294);
    v13 = type metadata accessor for Logger(0);
    sub_100048F64(v13, (uint64_t)qword_1009EA0A0);
    v14 = v1;
    swift_retain(a1);
    v15 = (char *)v14;
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc(22, -1);
      v19 = swift_slowAlloc(64, -1);
      v44[0] = v19;
      *(_DWORD *)v18 = 136315394;
      v20 = *(_QWORD *)(a1 + 16);
      v21 = *(_QWORD *)(a1 + 24);
      swift_bridgeObjectRetain(v21);
      *(_QWORD *)&v42[0] = sub_100040F58(v20, v21, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v42, (char *)v42 + 8, v18 + 4, v18 + 12);
      swift_bridgeObjectRelease(v21);
      swift_release(a1);
      *(_WORD *)(v18 + 12) = 2080;
      v22 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24];
      v23 = *(_QWORD *)&v15[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32];
      sub_10003F198(&v15[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity], v22);
      v24 = dispatch thunk of BookEntityType.assetID.getter(v22, v23);
      v26 = v25;
      *(_QWORD *)&v42[0] = sub_100040F58(v24, v25, v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v42, (char *)v42 + 8, v18 + 14, v18 + 22);
      swift_bridgeObjectRelease(v26);

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to deserialize BKEpubLocation from plUserData for annotation:%s in book: %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy(v19, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v19, -1, -1);
      swift_slowDealloc(v18, -1, -1);
    }
    else
    {
      swift_release(a1);

    }
    return 0;
  }
  return v3;
}

void AnnotationProviderService.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.AnnotationProviderService", 31, "init()", 6, 0);
  __break(1u);
}

id AnnotationProviderService.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnnotationProviderService(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100530310()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_10072BBA0);
  v2 = swift_getKeyPath(&unk_10072BBC8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t sub_100530380(uint64_t a1, uint64_t a2)
{
  return sub_1005303B8(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationsChangeSubject, &qword_1009CEEB8, &qword_1009EA0E0);
}

uint64_t sub_10053039C(uint64_t a1, uint64_t a2)
{
  return sub_1005303B8(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books25AnnotationProviderService_bookmarkChangeSubject, &qword_1009CEEC0, &qword_1009EA0F8);
}

uint64_t sub_1005303B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;

  v7 = sub_10004CFD4(a4);
  v8 = sub_100030B34(a5, a4, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v7, v8);
}

uint64_t sub_100530424(uint64_t a1, uint64_t a2)
{
  return sub_1005303B8(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books25AnnotationProviderService_highlightChangeSubject, &qword_1009CEEC8, &qword_1009EA110);
}

uint64_t sub_100530448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc(dword_1009EA14C);
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_1005304FC;
  return AnnotationProviderService.highlight(location:selectedText:representativeText:style:mergeWithExisting:updateCurrentHighlightStyle:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1005304FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc(*(_QWORD *)(*v2 + 16));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t AnnotationProviderService.highlight(location:selectedText:representativeText:style:mergeWithExisting:updateCurrentHighlightStyle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;

  *(_QWORD *)(v9 + 136) = a6;
  *(_QWORD *)(v9 + 144) = v8;
  *(_BYTE *)(v9 + 322) = v19;
  *(_BYTE *)(v9 + 321) = a8;
  *(_BYTE *)(v9 + 320) = a7;
  *(_QWORD *)(v9 + 120) = a4;
  *(_QWORD *)(v9 + 128) = a5;
  *(_QWORD *)(v9 + 104) = a2;
  *(_QWORD *)(v9 + 112) = a3;
  *(_QWORD *)(v9 + 96) = a1;
  v10 = type metadata accessor for UUID(0);
  *(_QWORD *)(v9 + 152) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v9 + 160) = v11;
  *(_QWORD *)(v9 + 168) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009EA150);
  *(_QWORD *)(v9 + 176) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for _AnnotationProvidingOverlap(0);
  *(_QWORD *)(v9 + 184) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v9 + 192) = v14;
  *(_QWORD *)(v9 + 200) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v9 + 208) = v15;
  *(_QWORD *)(v9 + 216) = static MainActor.shared.getter(v15);
  v16 = dispatch thunk of Actor.unownedExecutor.getter(v15, &protocol witness table for MainActor);
  *(_QWORD *)(v9 + 224) = v16;
  *(_QWORD *)(v9 + 232) = v17;
  return swift_task_switch(sub_100530658, v16, v17);
}

uint64_t sub_100530658()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void *v3;
  int v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  unint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void *v56;
  uint64_t v57;

  v1 = String.cfiSpineIndex.getter(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  if ((v2 & 1) == 0)
  {
    v3 = (void *)v1;
    v4 = *(unsigned __int8 *)(v0 + 320);
    if (v4 == 6)
    {
      v5 = (_BYTE *)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC5Books25AnnotationProviderService_currentHighlightStyle);
      swift_beginAccess(v5, v0 + 16, 0, 0);
      LOBYTE(v4) = *v5;
    }
    v55 = v4;
    *(_BYTE *)(v0 + 323) = v4;
    v56 = v3;
    if (*(_BYTE *)(v0 + 321) == 1)
    {
      v7 = *(_QWORD *)(v0 + 184);
      v6 = *(_QWORD *)(v0 + 192);
      v8 = *(_QWORD *)(v0 + 176);
      sub_100530E2C(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), v3, v8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1)
      {
        sub_100010960(*(_QWORD *)(v0 + 176), (uint64_t *)&unk_1009EA150);
      }
      else
      {
        v22 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 32))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
        v23 = _AnnotationProvidingOverlap.intersectingAnnotations.getter(v22);
        *(_QWORD *)(v0 + 88) = v23;
        v24 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
        v25 = sub_100030B34((unint64_t *)&qword_1009D2B40, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
        v26 = Collection.isNotEmpty.getter(v24, v25);
        v27 = swift_bridgeObjectRelease(v23);
        v29 = *(_QWORD *)(v0 + 192);
        v28 = *(_QWORD *)(v0 + 200);
        v30 = *(_QWORD *)(v0 + 184);
        if ((v26 & 1) != 0)
        {
          v31 = _AnnotationProvidingOverlap.mergedCFI.getter(v27);
          v33 = v32;
          v34 = _AnnotationProvidingOverlap.intersectingAnnotations.getter(v31);
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
LABEL_17:
          *(_QWORD *)(v0 + 240) = v34;
          v44 = *(_QWORD *)(v0 + 208);
          v45 = *(_QWORD *)(v0 + 136);
          v46 = *(void **)(v0 + 144);
          v48 = *(_QWORD *)(v0 + 120);
          v47 = *(_QWORD *)(v0 + 128);
          v49 = *(_QWORD *)(v0 + 112);
          v50 = swift_allocObject(&unk_10090DBE8, 96, 7);
          *(_QWORD *)(v0 + 248) = v50;
          *(_QWORD *)(v50 + 16) = v34;
          *(_QWORD *)(v50 + 24) = v46;
          *(_QWORD *)(v50 + 32) = v31;
          *(_QWORD *)(v50 + 40) = v33;
          *(_QWORD *)(v50 + 48) = v49;
          *(_QWORD *)(v50 + 56) = v48;
          *(_QWORD *)(v50 + 64) = v47;
          *(_QWORD *)(v50 + 72) = v45;
          *(_BYTE *)(v50 + 80) = v55;
          *(_QWORD *)(v50 + 88) = v56;
          v51 = v46;
          swift_bridgeObjectRetain(v48);
          swift_bridgeObjectRetain(v45);
          swift_bridgeObjectRetain(v34);
          *(_QWORD *)(v0 + 256) = static MainActor.shared.getter(v52);
          v53 = dispatch thunk of Actor.unownedExecutor.getter(v44, &protocol witness table for MainActor);
          *(_QWORD *)(v0 + 264) = v53;
          *(_QWORD *)(v0 + 272) = v54;
          return swift_task_switch(sub_100530AB8, v53, v54);
        }
        (*(void (**)(_QWORD, _QWORD, __n128))(v29 + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184), v27);
      }
    }
    v36 = *(_QWORD *)(v0 + 160);
    v35 = *(_QWORD *)(v0 + 168);
    v37 = *(_QWORD *)(v0 + 152);
    v38 = *(_QWORD *)(v0 + 104);
    v39 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
    v34 = swift_allocObject(v39, 48, 7);
    *(_OWORD *)(v34 + 16) = xmmword_10070CCA0;
    swift_bridgeObjectRetain(v38);
    v40 = _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
    v41 = UUID.uuidString.getter(v40);
    v43 = v42;
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    *(_QWORD *)(v34 + 32) = v41;
    *(_QWORD *)(v34 + 40) = v43;
    v31 = *(_QWORD *)(v0 + 96);
    v33 = *(_QWORD *)(v0 + 104);
    goto LABEL_17;
  }
  swift_release(*(_QWORD *)(v0 + 216));
  if (qword_1009CE800 != -1)
    swift_once(&qword_1009CE800, sub_100529294);
  v9 = *(_QWORD *)(v0 + 104);
  v10 = type metadata accessor for Logger(0);
  sub_100048F64(v10, (uint64_t)qword_1009EA0A0);
  v11 = swift_bridgeObjectRetain_n(v9, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.error.getter(v12);
  v14 = os_log_type_enabled(v12, v13);
  v15 = *(_QWORD *)(v0 + 104);
  if (v14)
  {
    v16 = *(_QWORD *)(v0 + 96);
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v57 = v18;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain(v15);
    *(_QWORD *)(v0 + 80) = sub_100040F58(v16, v15, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88, v17 + 4, v17 + 12);
    swift_bridgeObjectRelease_n(v15, 3);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to create highlight: cannot determine document ordinal for cfi '%s'", v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 104), 2);
  }

  v19 = *(_QWORD *)(v0 + 168);
  v20 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v20);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
}

uint64_t sub_100530AB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v3 = v1[30];
  v2 = v1[31];
  v4 = v1[18];
  v5 = static MainActor.shared.getter(a1);
  v1[35] = v5;
  v6 = swift_task_alloc(64);
  v1[36] = v6;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_DWORD *)(v6 + 32) = 1;
  *(_QWORD *)(v6 + 40) = sub_1005333A8;
  *(_QWORD *)(v6 + 48) = v2;
  v7 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v1[37] = v7;
  v8 = sub_10004CFD4(&qword_1009D2A80);
  *v7 = v1;
  v7[1] = sub_100530B9C;
  return withCheckedContinuation<A>(isolation:function:_:)(v1 + 8, v5, &protocol witness table for MainActor, 0xD000000000000027, 0x80000001007D17F0, sub_1005333E8, v6, v8);
}

uint64_t sub_100530B9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 288);
  v3 = *(_QWORD *)(*v0 + 280);
  swift_task_dealloc(*(_QWORD *)(*v0 + 296));
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100530C04, *(_QWORD *)(v1 + 264), *(_QWORD *)(v1 + 272));
}

uint64_t sub_100530C04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 240);
  swift_release(*(_QWORD *)(v0 + 256));
  swift_bridgeObjectRelease(v2);
  swift_release(v1);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)(v0 + 64);
  return swift_task_switch(sub_100530C58, *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232));
}

uint64_t sub_100530C58()
{
  uint64_t v0;
  int v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(unsigned __int8 *)(v0 + 322);
  swift_release(*(_QWORD *)(v0 + 216));
  if (v1 == 1)
  {
    v2 = (_BYTE *)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC5Books25AnnotationProviderService_currentHighlightStyle);
    v3 = *(unsigned __int8 *)(v0 + 323);
    swift_beginAccess(v2, v0 + 40, 1, 0);
    v4 = *v2;
    *v2 = v3;
    v5 = AnnotationStyle.rawValue.getter(v4);
    v7 = v6;
    v8 = AnnotationStyle.rawValue.getter(v3);
    if (v5 == v8 && v7 == v9)
    {
      swift_bridgeObjectRelease_n(v7, 2);
    }
    else
    {
      v11 = v9;
      v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v7, v8, v9, 0);
      swift_bridgeObjectRelease(v11);
      swift_bridgeObjectRelease(v7);
      if ((v12 & 1) == 0)
        sub_10052AF90();
    }
  }
  v13 = *(_QWORD *)(v0 + 304);
  v14 = *(_QWORD *)(v0 + 312);
  v16 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 176);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v13, v14);
}

uint64_t AnnotationProviderService.determineOverlap(cfi:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  char v7;
  uint64_t v9;

  v6 = (void *)String.cfiSpineIndex.getter(a1, a2);
  if ((v7 & 1) == 0)
    return sub_100530E2C(a1, a2, v6, a3);
  v9 = type metadata accessor for _AnnotationProvidingOverlap(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 1, 1, v9);
}

uint64_t sub_100530DDC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009EA144);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001FC2C4;
  return AnnotationProviderService.deleteAssociatedNotesFromAnnotationsWithUUIDs(_:)(a1);
}

uint64_t sub_100530E2C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  id v9;
  NSString v10;
  id v11;
  id v12;
  uint64_t KeyPath;
  uint64_t v14;
  id v15;
  id v16;
  __n128 v17;
  id v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;

  v9 = objc_allocWithZone((Class)BKEpubCFILocation);
  swift_bridgeObjectRetain(a2);
  v10 = String._bridgeToObjectiveC()();
  v44 = 0;
  v11 = objc_msgSend(v9, "initWithCFI:error:", v10, &v44, swift_bridgeObjectRelease(a2).n128_f64[0]);

  v12 = v44;
  if (v11)
  {
    KeyPath = swift_getKeyPath(&unk_10072BBA0);
    v14 = swift_getKeyPath(&unk_10072BBC8);
    v15 = v11;
    v16 = v12;
    static Published.subscript.getter(&v44, v4, KeyPath);
    swift_release(KeyPath);
    v17 = swift_release(v14);
    v18 = v44;
    v19 = dispatch thunk of BookAnnotationEntity.documentAnnotationsEntity(for:)(a3, v17);
    v20 = swift_release(v18);
    if (v19)
    {
      v21 = dispatch thunk of DocumentAnnotationsEntity.highlights.getter(v20);
      swift_release(v19);
      swift_bridgeObjectRetain(v21);
      sub_100531EA4(v15, (uint64_t)a3, v21);
      swift_bridgeObjectRelease(v21);

      v22 = type metadata accessor for _AnnotationProvidingOverlap(0);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a4, 0, 1, v22);
    }

    if (qword_1009CE800 != -1)
      swift_once(&qword_1009CE800, sub_100529294);
    v36 = type metadata accessor for Logger(0);
    v37 = sub_100048F64(v36, (uint64_t)qword_1009EA0A0);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.error.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v40 = 134217984;
      v44 = a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45, v40 + 4, v40 + 12);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Unable to determine highlight overlap: no document for ordinal %ld", v40, 0xCu);
      swift_slowDealloc(v40, -1, -1);
    }

  }
  else
  {
    v24 = v44;
    v25 = _convertNSErrorToError(_:)(v12);

    swift_willThrow(v26);
    if (qword_1009CE800 != -1)
      swift_once(&qword_1009CE800, sub_100529294);
    v27 = type metadata accessor for Logger(0);
    sub_100048F64(v27, (uint64_t)qword_1009EA0A0);
    swift_bridgeObjectRetain(a2);
    swift_errorRetain(v25);
    swift_bridgeObjectRetain(a2);
    v28 = swift_errorRetain(v25);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc(22, -1);
      v32 = (uint64_t *)swift_slowAlloc(8, -1);
      v33 = (void *)swift_slowAlloc(32, -1);
      v44 = v33;
      *(_DWORD *)v31 = 136315394;
      swift_bridgeObjectRetain(a2);
      v42 = sub_100040F58(a1, a2, (uint64_t *)&v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v31 + 4, v31 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      *(_WORD *)(v31 + 12) = 2112;
      v34 = _convertErrorToNSError(_:)(v25);
      v42 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43, v31 + 14, v31 + 22);
      *v32 = v34;
      swift_errorRelease(v25);
      swift_errorRelease(v25);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unable to determine highlight overlap: Failed to convert cfi (%s) into BKEpubCFILocation. %@", (uint8_t *)v31, 0x16u);
      v35 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v32, 1, v35);
      swift_slowDealloc(v32, -1, -1);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v31, -1, -1);

      swift_errorRelease(v25);
    }
    else
    {
      swift_errorRelease(v25);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_errorRelease(v25);
      swift_errorRelease(v25);

    }
  }
  v41 = type metadata accessor for _AnnotationProvidingOverlap(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(a4, 1, 1, v41);
}

void sub_1005312FC(uint64_t a1@<X0>, void *a2@<X2>, void *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>, uint64_t a9, unsigned __int8 a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a6;
  v29 = a7;
  v27 = a5;
  v16 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v16);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  type metadata accessor for MainActor(0);
  v20 = a2;
  v21 = static MainActor.shared.getter(v20);
  v22 = (_QWORD *)swift_allocObject(&unk_10090DCC0, 40, 7);
  v22[2] = v21;
  v22[3] = &protocol witness table for MainActor;
  v22[4] = v20;
  v23 = sub_10030C178((uint64_t)v18, (uint64_t)&unk_1009EA2C0, (uint64_t)v22);
  swift_release(v23);
  sub_10053159C(a1, a3, a4, v27, v28, v29, a9, a10, a11);
  *a8 = v24;
  a8[1] = v25;
}

uint64_t sub_100531448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for AnalyticsEvent.ReadingEvent(0);
  v4[4] = v5;
  v4[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005314D8, v7, v8);
}

uint64_t sub_1005314D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 48));
  Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC5Books25AnnotationProviderService_analyticsProvider);
  if (Strong)
  {
    v4 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 40);
    v5 = enum case for ViewType.highlights(_:);
    v6 = type metadata accessor for ViewType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v3, v5, v6);
    swift_storeEnumTagMultiPayload(v3, v4, 0);
    sub_100277ECC(v3);
    swift_release(Strong);
    sub_100459E48(v3);
  }
  v7 = *(_QWORD *)(v0 + 40);
  **(_BYTE **)(v0 + 16) = Strong == 0;
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10053159C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  NSString v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  id v33;
  void *v34;
  uint64_t v35;
  Class isa;
  id v37;
  void *v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  NSString v46;
  NSString v47;
  NSString v48;
  Class v49;
  double v50;
  id v51;
  unint64_t v52;
  char **v53;
  id *v54;
  char **v55;
  double v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  void *v61;
  void *v62;
  unint64_t v63;
  id v64;
  void *v65;
  void *v66;
  uint64_t v67;
  void *v68;
  void *v69;
  Swift::String v70;
  Swift::String v71;
  void *v72;
  NSString v73;
  NSString v74;
  id v75;
  void *v76;
  char *v77;
  unint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  void *v87;
  _QWORD v88[5];
  id v89[6];

  v82 = a5;
  v83 = a6;
  v81 = a4;
  v84 = a3;
  v85 = a2;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v16);
  v18 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain(a1);
  sub_100531CC0(v19, v88);
  swift_bridgeObjectRelease(a1);
  sub_100025B3C((uint64_t)v88, (uint64_t)v89, &qword_1009EA2C8);
  v20 = v89[0];
  if (!v89[0])
  {
    if (qword_1009CE800 != -1)
      swift_once(&qword_1009CE800, sub_100529294);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100048F64(v28, (uint64_t)qword_1009EA0A0);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.error.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Failed to merge highlight: We didn't get any annotations back", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    return;
  }
  v21 = v89[1];
  v79 = v89[3];
  v80 = a8;
  v77 = (char *)v89[2];
  v78 = (unint64_t)v89[4];
  if (!objc_msgSend(v89[0], "annotationType"))
    objc_msgSend(v20, "setAnnotationType:", 2);
  v22 = objc_msgSend(v20, "annotationAssetID");
  if (!v22)
  {
    v23 = *(_QWORD *)(v9 + OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 24);
    v24 = *(_QWORD *)(v9 + OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity + 32);
    sub_10003F198((_QWORD *)(v9 + OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity), v23);
    dispatch thunk of BookEntityType.assetID.getter(v23, v24);
    v26 = v25;
    v22 = String._bridgeToObjectiveC()();
    objc_msgSend(v20, "setAnnotationAssetID:", v22, swift_bridgeObjectRelease(v26).n128_f64[0]);
  }

  v27 = objc_msgSend(v20, "annotationCreatorIdentifier");
  if (v27)

  else
    objc_msgSend(v20, "setAnnotationCreatorIdentifier:", kAEAnnotationCreatorIdentifier_iBooks);
  v33 = objc_msgSend(v20, "annotationCreationDate");
  if (v33)
  {
    v34 = v33;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v33);

    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v15, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) != 1)
    {
      sub_100010960((uint64_t)v18, &qword_1009D7440);
      goto LABEL_19;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, 1, 1, v12);
  }
  v35 = sub_100010960((uint64_t)v18, &qword_1009D7440);
  Date.init()(v35);
  isa = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  objc_msgSend(v20, "setAnnotationCreationDate:", isa);

LABEL_19:
  v37 = objc_msgSend(v20, "annotationLocation");
  v38 = v20;
  if (!v37)
    goto LABEL_24;
  v39 = v37;
  v40 = v20;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
  v43 = v42;

  if ((id)v41 != v85 || v43 != v84)
  {
    v45 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v43, v85, v84, 0);
    v44 = swift_bridgeObjectRelease(v43).n128_u64[0];
    v38 = v40;
    if ((v45 & 1) != 0)
      goto LABEL_25;
LABEL_24:
    objc_msgSend(v38, "setOrdinal:", a9);
    v46 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "setAnnotationLocation:", v46);

    v47 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "setAnnotationSelectedText:", v47);

    v48 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "setAnnotationRepresentativeText:", v48);

    goto LABEL_25;
  }
  v44 = swift_bridgeObjectRelease(v84).n128_u64[0];
  v38 = v20;
LABEL_25:
  Date.init()(objc_msgSend(v38, "setAnnotationStyle:", dword_10072BD5C[(char)v80], *(double *)&v44));
  v49 = Date._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  objc_msgSend(v38, "setUserModificationDate:", v49);

  v51 = v79;
  v52 = (v78 >> 1) - (_QWORD)v79;
  if ((id)(v78 >> 1) == v79)
    goto LABEL_38;
  if ((uint64_t)(v78 >> 1) <= (uint64_t)v79)
  {
    __break(1u);
    return;
  }
  v85 = v21;
  swift_unknownObjectRetain(v21);
  v53 = &selRef__mediaLibraryDidChange_;
  v54 = (id *)&v77[8 * (_QWORD)v51];
  v55 = &selRef_setAttribute_forKey_error_;
  do
  {
    v57 = *v54;
    v58 = objc_msgSend(v57, v53[166]);
    if (!v58)
      goto LABEL_29;
    v59 = v58;
    v60 = static String._unconditionallyBridgeFromObjectiveC(_:)(v58);
    v62 = v61;

    v86 = v60;
    v87 = v62;
    v63 = sub_1001F15BC();
    if ((Collection.isNotEmpty.getter(&type metadata for String, v63) & 1) == 0)
    {
      *(_QWORD *)&v56 = swift_bridgeObjectRelease(v62).n128_u64[0];
      goto LABEL_29;
    }
    v64 = objc_msgSend(v38, v53[166]);
    if (v64)
    {
      v65 = v64;
      v66 = v38;
      v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v64);
      v69 = v68;

      v86 = v67;
      v87 = v69;
      if ((Collection.isNotEmpty.getter(&type metadata for String, v63) & 1) != 0)
      {
        v86 = v67;
        v87 = v69;
        v70._countAndFlagsBits = 2570;
        v70._object = (void *)0xE200000000000000;
        String.append(_:)(v70);
        v71._countAndFlagsBits = v60;
        v71._object = v62;
        String.append(_:)(v71);
        v72 = v87;
        v73 = String._bridgeToObjectiveC()();
        v38 = v66;
        objc_msgSend(v66, "setAnnotationNote:", v73, swift_bridgeObjectRelease(v72).n128_f64[0]);
        swift_bridgeObjectRelease(v62);

        v53 = &selRef__mediaLibraryDidChange_;
        v55 = &selRef_setAttribute_forKey_error_;
        goto LABEL_29;
      }
      swift_bridgeObjectRelease(v69);
      v38 = v66;
      v53 = &selRef__mediaLibraryDidChange_;
      v55 = &selRef_setAttribute_forKey_error_;
    }
    v74 = String._bridgeToObjectiveC()();
    objc_msgSend(v38, "setAnnotationNote:", v74);
    swift_bridgeObjectRelease(v62);

LABEL_29:
    objc_msgSend(v57, v55[236], 1, v56);

    ++v54;
    --v52;
  }
  while (v52);
  v21 = v85;
  *(_QWORD *)&v50 = swift_unknownObjectRelease(v85).n128_u64[0];
LABEL_38:
  v75 = objc_msgSend(v38, "annotationUuid", v50);
  if (v75)
  {
    v76 = v75;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v75);

  }
  swift_unknownObjectRelease(v21);
}

void sub_100531CC0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_3;
LABEL_29:
    v6 = 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
LABEL_30:
    *a2 = v6;
    a2[1] = v11;
    a2[2] = v12;
    a2[3] = v13;
    a2[4] = v5;
    return;
  }
  if (a1 < 0)
    v19 = a1;
  else
    v19 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(a1);
  if (!v5)
    goto LABEL_29;
LABEL_3:
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v6 = *(id *)(a1 + 32);
    if ((v5 & 0x8000000000000000) == 0)
      goto LABEL_6;
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  if (v5 < 0)
    goto LABEL_32;
LABEL_6:
  if (v4)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    if (_CocoaArrayWrapper.endIndex.getter(v8) < 1)
      goto LABEL_34;
    swift_bridgeObjectRetain(a1);
    v7 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (!v7)
      goto LABEL_34;
  }
  if (v7 >= v5)
  {
    if ((a1 & 0xC000000000000001) != 0 && v5 != 1)
    {
      sub_100009E04(0, &qword_1009E6E28, AEAnnotation_ptr);
      v9 = 1;
      do
      {
        v10 = v9 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v9);
        v9 = v10;
      }
      while (v5 != v10);
    }
    if (v4)
    {
      if (a1 < 0)
        v14 = a1;
      else
        v14 = a1 & 0xFFFFFFFFFFFFFF8;
      v15 = swift_bridgeObjectRetain(a1);
      v11 = _CocoaArrayWrapper.subscript.getter(1, v5, v14, v15);
      v12 = v16;
      v13 = v17;
      v5 = v18;
      swift_bridgeObjectRelease_n(a1, 2);
    }
    else
    {
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
      v12 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
      v13 = 1;
      v5 = (2 * v5) | 1;
    }
    goto LABEL_30;
  }
LABEL_35:
  __break(1u);
}

void sub_100531EA4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  int64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  NSString v24;
  double v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  _QWORD *v49;
  int64_t v50;
  id v51;

  v4 = a3 + 64;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 64);
  v50 = (unint64_t)(v5 + 63) >> 6;
  v8 = a1;
  swift_bridgeObjectRetain(a3);
  v46 = 0;
  v47 = 0;
  v9 = 0;
  v48 = v8;
  v49 = _swiftEmptyArrayStorage;
LABEL_4:
  v10 = v8;
  while (1)
  {
    if (v7)
    {
      v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_22;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v9 >= v50)
      goto LABEL_37;
    v17 = *(_QWORD *)(v4 + 8 * v9);
    if (!v17)
      break;
LABEL_21:
    v7 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_22:
    v19 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v15);
    v20 = swift_retain(v19);
    dispatch thunk of AnnotationEntity.location.getter(v20);
    v22 = v21;
    v23 = objc_allocWithZone((Class)BKEpubCFILocation);
    v24 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v25 = swift_bridgeObjectRelease(v22).n128_u64[0];
    v51 = 0;
    v26 = objc_msgSend(v23, "initWithCFI:error:", v24, &v51, v25);

    v27 = v51;
    if (v26)
    {
      v28 = v51;
      v29 = objc_msgSend(v10, "intersectWithRangeFromHeadOf:toTailOf:", v26, v26);
      if (v29)
      {
        v30 = v29;
        v31 = objc_msgSend(v10, "unionWithCFI:", v26);
        if (v31)
        {
          v8 = v31;

          swift_retain(v19);
          v32 = _s8BookEPUB25HighlightAnnotationEntityC5BooksE14annotationUuidSSvg_0();
          v44 = v33;
          v45 = v32;
          swift_release(v19);
          if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
            v49 = sub_100043ED0(0, v49[2] + 1, 1, v49);
          v35 = v49[2];
          v34 = v49[3];
          if (v35 >= v34 >> 1)
            v49 = sub_100043ED0((_QWORD *)(v34 > 1), v35 + 1, 1, v49);
          v49[2] = v35 + 1;
          v36 = &v49[2 * v35];
          v36[4] = v45;
          v36[5] = v44;
          sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
          if ((static NSObject.== infix(_:_:)(v30, v48) & 1) != 0)
          {
            swift_retain(v19);
            v46 = _s8BookEPUB25HighlightAnnotationEntityC5BooksE14annotationUuidSSvg_0();
            v38 = v37;

            swift_release_n(v19, 2);
            swift_bridgeObjectRelease(v47);
            v47 = v38;
          }
          else
          {

            swift_release(v19);
          }
          goto LABEL_4;
        }
LABEL_41:
        swift_bridgeObjectRelease(v47);
        __break(1u);
LABEL_42:
        swift_bridgeObjectRelease(v47);
        __break(1u);
      }

    }
    else
    {
      v11 = v51;
      v12 = _convertNSErrorToError(_:)(v27);

      swift_willThrow(v13);
      swift_errorRelease(v12);
    }
    swift_release(v19);
  }
  v18 = v9 + 1;
  if (v9 + 1 >= v50)
    goto LABEL_37;
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
    goto LABEL_20;
  v18 = v9 + 2;
  if (v9 + 2 >= v50)
    goto LABEL_37;
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
    goto LABEL_20;
  v18 = v9 + 3;
  if (v9 + 3 >= v50)
    goto LABEL_37;
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
LABEL_20:
    v9 = v18;
    goto LABEL_21;
  }
  v18 = v9 + 4;
  if (v9 + 4 < v50)
  {
    v17 = *(_QWORD *)(v4 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        v9 = v18 + 1;
        if (__OFADD__(v18, 1))
          goto LABEL_40;
        if (v9 >= v50)
          goto LABEL_37;
        v17 = *(_QWORD *)(v4 + 8 * v9);
        ++v18;
        if (v17)
          goto LABEL_21;
      }
    }
    goto LABEL_20;
  }
LABEL_37:
  v39 = objc_msgSend(v10, "cfiString", swift_release(a3).n128_f64[0]);
  if (!v39)
    goto LABEL_42;
  v40 = v39;
  v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
  v43 = v42;

  _AnnotationProvidingOverlap.init(mergedCFI:intersectingAnnotations:containingAnnotation:)(v41, v43, v49, v46, v47);
  swift_bridgeObjectRelease(a3);

}

void sub_1005322E8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  Class isa;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v29 = a4;
  v27 = a9;
  v28 = a10;
  v15 = sub_10004CFD4(a7);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = *(void **)(a2 + OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationModifier);
  isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v15);
  v20 = *(unsigned __int8 *)(v16 + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = swift_allocObject(a8, v21 + v17, v20 | 7);
  *(_QWORD *)(v22 + 16) = a5;
  *(_QWORD *)(v22 + 24) = a6;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v22 + v21, (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  aBlock[4] = v27;
  v31 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1005291AC;
  aBlock[3] = v28;
  v23 = _Block_copy(aBlock);
  v24 = v31;
  swift_retain(a6);
  *(_QWORD *)&v25 = swift_release(v24).n128_u64[0];
  objc_msgSend(v18, "modifyAnnotationsWithUUIDs:type:performBlock:", isa, v29, v23, v25);
  _Block_release(v23);

}

double sub_10053246C(_QWORD *a1, uint64_t a2, void (*a3)(__n128), uint64_t a4, void (*a5)(uint64_t *__return_ptr, _QWORD *, __n128), uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  __n128 v20;
  __n128 v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double result;
  uint64_t v36;
  void (*v37)(uint64_t *__return_ptr, _QWORD *, __n128);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD aBlock[5];
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;

  v37 = a5;
  v38 = a7;
  v36 = a4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v12 - 8);
  v40 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009EA2A8);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
    v19 = a1;
  else
    v19 = _swiftEmptyArrayStorage;
  v20 = swift_bridgeObjectRetain(a1);
  v37(&v47, v19, v20);
  v21 = swift_bridgeObjectRelease(v19);
  if (a3)
    a3(v21);
  v22 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v38, v15);
  v24 = v48;
  v46[0] = v47;
  v46[1] = v48;
  v25 = *(unsigned __int8 *)(v16 + 80);
  v26 = (v25 + 16) & ~v25;
  v27 = (v17 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject(&unk_10090DC70, v27 + 16, v25 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v28 + v26, v18, v15);
  sub_100025B3C((uint64_t)v46, v28 + v27, &qword_1009D2A80);
  aBlock[4] = sub_100533668;
  v45 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_10090DC88;
  v29 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(v24);
  static DispatchQoS.unspecified.getter(v30);
  v43 = _swiftEmptyArrayStorage;
  v31 = sub_100008E8C();
  v32 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v33 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  v34 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v43, v32, v33, v42, v31);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v34);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v40);
  swift_bridgeObjectRelease(v48);
  *(_QWORD *)&result = swift_release(v45).n128_u64[0];
  return result;
}

double sub_100532750(_QWORD *a1, uint64_t a2, void (*a3)(__n128), uint64_t a4, void (*a5)(_QWORD *, __n128), uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  __n128 v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  uint64_t v32;
  void (*v33)(_QWORD *, __n128);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD aBlock[5];
  uint64_t v41;

  v33 = a5;
  v34 = a7;
  v32 = a4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  if (a1)
    v18 = a1;
  else
    v18 = _swiftEmptyArrayStorage;
  v19 = swift_bridgeObjectRetain(a1);
  v33(v18, v19);
  v20 = swift_bridgeObjectRelease(v18);
  if (a3)
    a3(v20);
  v21 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v22 = (void *)static OS_dispatch_queue.main.getter(v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v15);
  v23 = *(unsigned __int8 *)(v16 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = swift_allocObject(&unk_10090DD38, v24 + v17, v23 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v25 + v24, (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
  aBlock[4] = sub_100478298;
  v41 = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_10090DD50;
  v26 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v26);
  v39 = _swiftEmptyArrayStorage;
  v27 = sub_100008E8C();
  v28 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v29 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  v30 = v38;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v28, v29, v38, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v30);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
  *(_QWORD *)&result = swift_release(v41).n128_u64[0];
  return result;
}

void AnnotationProviderService.controller(_:didChange:at:for:newIndexPath:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD v20[4];

  v5 = v4;
  v6 = *(void **)(v4 + OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationFRC);
  if (v6)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr);
    v10 = v6;
    v11 = a1;
    LOBYTE(a1) = static NSObject.== infix(_:_:)(v11, v10);

    if ((a1 & 1) != 0)
    {
      sub_10004CD0C(a2, (uint64_t)v20);
      v12 = sub_100009E04(0, &qword_1009E6E28, AEAnnotation_ptr);
      if (swift_dynamicCast(&v19, v20, (char *)&type metadata for Any + 8, v12, 6))
      {
        v13 = v19;
        if ((unint64_t)(a4 - 3) < 2)
        {
          sub_10052CEEC(v19);
        }
        else if (a4 == 2)
        {
          sub_10052C558(v19);
        }
        else if (a4 == 1)
        {
          KeyPath = swift_getKeyPath(&unk_10072BBA0);
          v15 = swift_getKeyPath(&unk_10072BBC8);
          static Published.subscript.getter(v20, v5, KeyPath);
          swift_release(KeyPath);
          swift_release(v15);
          v16 = v20[0];
          v18 = dispatch thunk of BookAnnotationEntity.documentAnnotations.getter(v17);
          swift_release(v16);
          sub_10052B184(v13, v18, 1);

          swift_bridgeObjectRelease(v18);
          return;
        }

      }
    }
  }
}

uint64_t sub_100532D74(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];

  v2 = a2[1];
  v5[0] = *a2;
  v5[1] = v2;
  swift_bridgeObjectRetain(v2);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009EA2A8);
  return CheckedContinuation.resume(returning:)(v5, v3);
}

id sub_100532DBC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  id v29;
  NSString v30;
  unsigned int v31;
  NSString v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t inited;
  unint64_t v44;
  Class isa;
  id v46;
  char *v48;
  objc_super v50;
  char v51[128];
  uint64_t v52;
  __int128 v53[3];

  v15 = &a6[OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationMOCHost];
  swift_unknownObjectWeakInit(&a6[OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationMOCHost]);
  *(_QWORD *)&a6[OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationFRC] = 0;
  v48 = &a6[OBJC_IVAR____TtC5Books25AnnotationProviderService_engagementManager];
  swift_unknownObjectWeakInit(&a6[OBJC_IVAR____TtC5Books25AnnotationProviderService_engagementManager]);
  v16 = &a6[OBJC_IVAR____TtC5Books25AnnotationProviderService_analyticsProvider];
  swift_weakInit(&a6[OBJC_IVAR____TtC5Books25AnnotationProviderService_analyticsProvider], 0);
  v17 = OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationsChangeSubject;
  v18 = sub_10004CFD4(&qword_1009CEEB8);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = a6;
  *(_QWORD *)&a6[v17] = PassthroughSubject.init()(v19);
  v20 = a5;
  v21 = OBJC_IVAR____TtC5Books25AnnotationProviderService_bookmarkChangeSubject;
  v22 = sub_10004CFD4(&qword_1009CEEC0);
  v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  *(_QWORD *)&v19[v21] = PassthroughSubject.init()(v23);
  v24 = OBJC_IVAR____TtC5Books25AnnotationProviderService_highlightChangeSubject;
  v25 = sub_10004CFD4(&qword_1009CEEC8);
  v26 = swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  *(_QWORD *)&v19[v24] = PassthroughSubject.init()(v26);
  swift_unknownObjectWeakAssign(v15, a1);
  dispatch thunk of BookProviding.bookEntity.getter(v53, a9, a10);
  v27 = &v19[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity];
  sub_100022840(v53, (uint64_t)&v19[OBJC_IVAR____TtC5Books25AnnotationProviderService_bookEntity]);
  *(_QWORD *)&v19[OBJC_IVAR____TtC5Books25AnnotationProviderService_annotationModifier] = a3;
  swift_unknownObjectWeakAssign(v48, a4);
  swift_weakAssign(v16);
  v28 = (void *)objc_opt_self(NSUserDefaults);
  swift_unknownObjectRetain(a3);
  v29 = objc_msgSend(v28, "standardUserDefaults");
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v29, "BOOLForKey:", v30);

  v32 = String._bridgeToObjectiveC()();
  v33 = (uint64_t)objc_msgSend(v29, "integerForKey:", v32);

  if (v33 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v33 > 0x7FFFFFFF)
  {
LABEL_14:
    __break(1u);
    JUMPOUT(0x100533228);
  }
  v34 = 1;
  switch((int)v33)
  {
    case 0:
      if (v31)
        v34 = 5;
      else
        v34 = 0;
      break;
    case 1:
      break;
    case 2:
      v34 = 2;
      break;
    case 4:
      v34 = 3;
      break;
    case 5:
      v34 = 4;
      break;
    case 6:
      v34 = 5;
      break;
    default:
      v34 = 0;
      break;
  }
  v19[OBJC_IVAR____TtC5Books25AnnotationProviderService_currentHighlightStyle] = v34;
  v35 = *((_QWORD *)v27 + 3);
  v36 = *((_QWORD *)v27 + 4);
  sub_10003F198(v27, v35);
  v37 = dispatch thunk of BookEntityType.assetID.getter(v35, v36);
  v39 = v38;
  v40 = type metadata accessor for BookAnnotationEntity(0);
  swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
  v41 = BookAnnotationEntity.init(assetID:)(v37, v39);
  swift_beginAccess(&v19[OBJC_IVAR____TtC5Books25AnnotationProviderService__bookAnnotationEntity], v53, 33, 0);
  v52 = v41;
  Published.init(initialValue:)(&v52, v40);
  swift_endAccess(v53);

  v42 = sub_10004CFD4((uint64_t *)&unk_1009D30D0);
  inited = swift_initStackObject(v42, v51);
  *(_OWORD *)(inited + 16) = xmmword_10070FC00;
  *(_QWORD *)(inited + 32) = 0xD000000000000017;
  *(_QWORD *)(inited + 40) = 0x80000001007CC5F0;
  *(_DWORD *)(inited + 48) = 3;
  *(_QWORD *)(inited + 72) = &type metadata for Int32;
  *(_QWORD *)(inited + 80) = 0xD000000000000017;
  *(_QWORD *)(inited + 88) = 0x80000001007CC5D0;
  *(_QWORD *)(inited + 120) = &type metadata for Bool;
  *(_BYTE *)(inited + 96) = 0;
  v44 = sub_10003FB0C(inited);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "registerDefaults:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

  v50.receiver = v19;
  v50.super_class = (Class)type metadata accessor for AnnotationProviderService(0);
  v46 = objc_msgSendSuper2(&v50, "init");

  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a2);
  swift_unknownObjectRelease(a3);

  swift_release(v20);
  return v46;
}

uint64_t sub_100533244()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100533270()
{
  uint64_t v0;

  sub_10052A418(*(NSObject **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100533278()
{
  uint64_t v0;

  return sub_10052DBA0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100533280()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_1005332AC(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_10052DD98(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24));
}

uint64_t sub_1005332B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1005332E0(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v4;

  sub_10052E6B8(a1, a2, a3, a4, *(char **)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(void (**)(void))(v4 + 40), *(_QWORD *)(v4 + 48));
}

uint64_t sub_10053330C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100533330(uint64_t a1, uint64_t a2, void (*a3)(__n128), uint64_t a4)
{
  uint64_t v4;

  sub_10052EF80(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_100533338(uint64_t a1)
{
  uint64_t v1;

  sub_10052F90C(a1, *(void **)(v1 + 16));
}

void sub_100533340(uint64_t a1)
{
  sub_10053340C(a1, (uint64_t *)&unk_1009D6DC0, (uint64_t)&unk_10090DCE8, (uint64_t)sub_100533798, (uint64_t)&unk_10090DD00);
}

uint64_t sub_100533364()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 96, 7);
}

void sub_1005333A8(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1005312FC(a1, *(void **)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), a2, *(_QWORD *)(v2 + 72), *(_BYTE *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

void sub_1005333E8(uint64_t a1)
{
  sub_10053340C(a1, (uint64_t *)&unk_1009EA2A8, (uint64_t)&unk_10090DC20, (uint64_t)sub_1005335D8, (uint64_t)&unk_10090DC38);
}

void sub_10053340C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_1005322E8(a1, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_DWORD *)(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), a2, a3, a4, a5);
}

uint64_t sub_100533448@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC5Books25AnnotationProviderService_currentHighlightStyle);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

uint64_t sub_10053349C()
{
  return type metadata accessor for AnnotationProviderService(0);
}

void sub_1005334A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = "\b";
  v4[1] = &unk_10072BCB8;
  v4[2] = &unk_10072BCD0;
  v4[3] = &unk_10072BCE8;
  v4[4] = "\b";
  v4[5] = "\b";
  sub_100533558(319);
  if (v3 <= 0x3F)
  {
    v4[6] = *(_QWORD *)(v2 - 8) + 64;
    v4[7] = &unk_10072BD00;
    v4[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[9] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[10] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
  }
}

void sub_100533558(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009EA1C8)
  {
    v2 = type metadata accessor for BookAnnotationEntity(255);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009EA1C8);
  }
}

uint64_t type metadata accessor for AnnotationProviderService.AnnotationUpgradeEntity()
{
  return objc_opt_self(_TtCC5Books25AnnotationProviderService23AnnotationUpgradeEntity);
}

uint64_t sub_1005335CC()
{
  return sub_100533728((uint64_t *)&unk_1009EA2A8);
}

uint64_t sub_1005335D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005337AC(a1, a2, a3, a4, (uint64_t *)&unk_1009EA2A8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))sub_10053246C);
}

uint64_t sub_1005335EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009EA2A8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_100533668()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009EA2A8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100532D74(v0 + v2, (_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1005336B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EA2BC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_100531448(a1, v4, v5, v6);
}

uint64_t sub_10053371C()
{
  return sub_100533728((uint64_t *)&unk_1009D6DC0);
}

uint64_t sub_100533728(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v2 = sub_10004CFD4(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  v8 = swift_release(*(_QWORD *)(v1 + 24));
  (*(void (**)(uint64_t, uint64_t, __n128))(v3 + 8))(v1 + v5, v2, v8);
  return swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100533798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005337AC(a1, a2, a3, a4, (uint64_t *)&unk_1009D6DC0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))sub_100532750);
}

uint64_t sub_1005337AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v6;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4(a5) - 8) + 80);
  return a6(a1, a2, a3, a4, *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), v6 + ((v11 + 32) & ~v11));
}

uint64_t sub_100533824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10053388C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EA2D4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_10052FAA4(a1, v4, v5, v6);
}

uint64_t sub_1005338FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EA2E4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return sub_10052F548(a1, v4, v5, v6);
}

uint64_t sub_100533968()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100533990(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EA2F4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_10052F3F4(a1, v4, v5, v6);
}

uint64_t sub_1005339FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_1009DA1DC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AE34;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1009DA1D8 + dword_1009DA1D8))(a1, v4);
}

uint64_t sub_100533A70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EA30C);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_10052EC54(a1, v4, v5, v6);
}

uint64_t sub_100533ADC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100533B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100533B58);
}

uint64_t sub_100533B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_100533BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100533BE0);
}

uint64_t sub_100533BE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

id sub_100533C54@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  id v10;
  id result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  id v16;
  ValueMetadata *v17;
  _UNKNOWN **v18;
  __int128 v19[2];
  __int128 v20[2];
  __int128 v21[2];

  sub_10002E418((uint64_t)a1, (uint64_t)v21);
  sub_10002E418((uint64_t)a2, (uint64_t)v20);
  sub_10002E418((uint64_t)a4, (uint64_t)v19);
  v10 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (result)
  {
    v17 = &type metadata for MenuAssetDownloadManager;
    v18 = &off_1008F8478;
    *(_QWORD *)&v15 = v10;
    *((_QWORD *)&v15 + 1) = result;
    v16 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(a2);
    _s5Books15CurrentPageViewVwxx_0(a1);
    v12 = a5 + *(int *)(type metadata accessor for CancelDownloadActionItem(0) + 36);
    v13 = enum case for ContextActionType.cancelDownload(_:);
    v14 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
    sub_100022840(v21, a5);
    sub_100022840(v20, a5 + 40);
    *(_QWORD *)(a5 + 80) = a3;
    sub_100022840(v19, a5 + 88);
    return (id)sub_100022840(&v15, a5 + 128);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100533DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  sub_10023ADE8(&v23);
  if (v24)
  {
    sub_1001EB834(&v23, &v26);
    v0 = v27;
    v1 = v28;
    sub_10003F198(&v26, v27);
    v2 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v0, v1);
    LOBYTE(v0) = static ContextActionAssetType.== infix(_:_:)(v2, 4);
    sub_1001EB84C((uint64_t)&v26, (uint64_t)&v23);
    if ((v0 & 1) != 0)
    {
      _s5Books15CurrentPageViewVwxx_0(&v23);
      sub_1001EB84C((uint64_t)&v26, (uint64_t)v20);
    }
    else
    {
      v4 = v24;
      v5 = v25;
      sub_10003F198(&v23, v24);
      v6 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v4, v5);
      LOBYTE(v4) = static ContextActionAssetType.== infix(_:_:)(v6, 5);
      _s5Books15CurrentPageViewVwxx_0(&v23);
      sub_1001EB84C((uint64_t)&v26, (uint64_t)v20);
      if ((v4 & 1) == 0)
      {
        v8 = v21;
        v9 = v22;
        sub_10003F198(v20, v21);
        LOBYTE(v8) = dispatch thunk of ContextAssetInfoProtocol.isDownloading.getter(v8, v9);
        _s5Books15CurrentPageViewVwxx_0(v20);
        sub_1001EB84C((uint64_t)&v26, (uint64_t)v17);
        if ((v8 & 1) != 0)
        {
          v10 = v18;
          v11 = v19;
          sub_10003F198(v17, v18);
          LOBYTE(v10) = dispatch thunk of ContextAssetInfoProtocol.isSideloaded.getter(v10, v11);
          _s5Books15CurrentPageViewVwxx_0(v17);
          sub_1001EB84C((uint64_t)&v26, (uint64_t)v14);
          if ((v10 & 1) == 0)
          {
            v12 = v15;
            v13 = v16;
            sub_10003F198(v14, v15);
            v3 = dispatch thunk of ContextAssetInfoProtocol.isPurchased.getter(v12, v13);
            goto LABEL_9;
          }
LABEL_8:
          v3 = 0;
LABEL_9:
          _s5Books15CurrentPageViewVwxx_0(v14);
          _s5Books15CurrentPageViewVwxx_0(&v26);
          return v3 & 1;
        }
LABEL_7:
        _s5Books15CurrentPageViewVwxx_0(v17);
        sub_1001EB84C((uint64_t)&v26, (uint64_t)v14);
        goto LABEL_8;
      }
    }
    _s5Books15CurrentPageViewVwxx_0(v20);
    sub_1001EB84C((uint64_t)&v26, (uint64_t)v17);
    goto LABEL_7;
  }
  sub_1001EB7F4((uint64_t)&v23);
  v3 = 0;
  return v3 & 1;
}

uint64_t sub_100533FA0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[13] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[14] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[15] = v3;
  v1[16] = v4;
  return swift_task_switch(sub_10053400C, v3, v4);
}

uint64_t sub_10053400C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;

  v1 = *(_QWORD **)(v0 + 104);
  v2 = v1[3];
  v3 = v1[4];
  sub_10003F198(v1, v2);
  ContextActionDataProtocol.selectionMode.getter((_QWORD *)(v0 + 16), v2, v3);
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    swift_release(*(_QWORD *)(v0 + 112));
    sub_1001EB7C0(v0 + 16);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 104);
    sub_100022840((__int128 *)(v0 + 16), v0 + 64);
    sub_10003F198((_QWORD *)(v5 + 128), *(_QWORD *)(v5 + 152));
    v6 = *(_QWORD *)(v0 + 88);
    v7 = *(_QWORD *)(v0 + 96);
    sub_10003F198((_QWORD *)(v0 + 64), v6);
    v8 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v6, v7);
    v10 = v9;
    *(_QWORD *)(v0 + 136) = v9;
    v12 = (char *)&dword_1009D6D78 + dword_1009D6D78;
    v11 = (_QWORD *)swift_task_alloc(unk_1009D6D7C);
    *(_QWORD *)(v0 + 144) = v11;
    *v11 = v0;
    v11[1] = sub_10053413C;
    return ((uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **))v12)(v8, v10, &type metadata for MenuAssetDownloadManager, &off_1008F8478);
  }
}

uint64_t sub_10053413C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 136);
  swift_task_dealloc(*(_QWORD *)(*v0 + 144));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_100440364, *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
}

uint64_t sub_100534194()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009EA3D4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_100533FA0();
}

id MainContentViewController.childForScreenEdgesDeferringSystemGestures.getter()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "contentNavigationController");
}

void MainContentViewController.contentNavigationController.setter(char *a1)
{
  char *v1;
  objc_class *ObjectType;
  id v4;
  char **v5;
  void *v6;
  void *v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  unsigned __int8 v20;
  objc_super v21;
  objc_super v22;
  objc_super v23;

  ObjectType = (objc_class *)swift_getObjectType();
  v23.receiver = v1;
  v23.super_class = ObjectType;
  v4 = objc_msgSendSuper2(&v23, "contentNavigationController");
  v5 = &selRef_dateFromString_;
  if (v4)
  {
    v6 = v4;
    objc_msgSend(v4, "additionalSafeAreaInsets");
    objc_msgSend(v6, "setAdditionalSafeAreaInsets:");

  }
  v22.receiver = v1;
  v22.super_class = ObjectType;
  objc_msgSendSuper2(&v22, "setContentNavigationController:", a1);
  v7 = *(void **)&v1[OBJC_IVAR___BKMainContentViewController_paletteContainerViewIfLoaded];
  if (!v7)
  {
    v17 = a1;
LABEL_17:

    return;
  }
  v8 = v7;
  v9 = objc_msgSend(v1, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "bringSubviewToFront:", v8);

    if (a1)
    {
      v11 = objc_msgSend(a1, "navigationBar");
      v12 = objc_msgSend(v11, "_backdropViewLayerGroupName");

      if (v12)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
        v14 = v13;

        v15 = *(void **)&v8[OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView];
        v12 = String._bridgeToObjectiveC()();
        v16 = v14;
        v5 = &selRef_dateFromString_;
        swift_bridgeObjectRelease(v16);
LABEL_11:
        objc_msgSend(v15, "_setGroupName:", v12);

        v21.receiver = v1;
        v21.super_class = ObjectType;
        v18 = (char *)objc_msgSendSuper2(&v21, "contentNavigationController");
        if (v18)
        {
          v17 = v18;
          v19 = sub_100534AB4();
          v20 = objc_msgSend(v19, "isHidden");

          if ((v20 & 1) == 0)
          objc_msgSend(v17, v5[461]);
          objc_msgSend(v17, "setAdditionalSafeAreaInsets:");

          v8 = a1;
        }
        else
        {
          v17 = a1;
        }

        goto LABEL_17;
      }
    }
    else
    {
      v12 = 0;
    }
    v15 = *(void **)&v8[OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView];
    goto LABEL_11;
  }
  __break(1u);
}

uint64_t MainContentViewController.toolbarHeightPublisher.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR___BKMainContentViewController_toolbarHeightPublisher);
  swift_beginAccess(v0 + OBJC_IVAR___BKMainContentViewController_toolbarHeightPublisher, v3, 0, 0);
  return swift_retain(*v1);
}

uint64_t MainContentViewController.toolbarHeightPublisher.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR___BKMainContentViewController_toolbarHeightPublisher);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_release(v4);
}

uint64_t (*MainContentViewController.toolbarHeightPublisher.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKMainContentViewController_toolbarHeightPublisher, a1, 33, 0);
  return j__swift_endAccess;
}

void (*MainContentViewController.contentNavigationController.modify(objc_super *a1))(uint64_t a1, char a2)
{
  objc_class *v1;
  uint64_t ObjectType;

  a1[1].super_class = v1;
  ObjectType = swift_getObjectType();
  a1->receiver = v1;
  a1->super_class = (Class)ObjectType;
  a1[1].receiver = -[objc_super contentNavigationController](a1, "contentNavigationController");
  return sub_100534618;
}

void sub_100534618(uint64_t a1, char a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    MainContentViewController.contentNavigationController.setter((char *)v2);

  }
  else
  {
    MainContentViewController.contentNavigationController.setter(*(char **)(a1 + 16));
  }
}

void *MainContentViewController.miniPlayerViewController.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;
  _BYTE v5[24];

  v1 = (void **)(v0 + OBJC_IVAR___BKMainContentViewController_miniPlayerViewController);
  swift_beginAccess(v0 + OBJC_IVAR___BKMainContentViewController_miniPlayerViewController, v5, 0, 0);
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_100534780(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___BKMainContentViewController_miniPlayerViewController);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  v5 = v2;
  sub_1005347F4(v4);

}

void sub_1005347F4(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  void **v4;
  double v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  char *v18;
  id v19;
  void *v20;
  char *v21;
  unsigned __int8 v22;
  objc_super v23;
  char v24[24];

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = (void **)&v1[OBJC_IVAR___BKMainContentViewController_miniPlayerViewController];
  *(_QWORD *)&v5 = swift_beginAccess(&v1[OBJC_IVAR___BKMainContentViewController_miniPlayerViewController], v24, 0, 0).n128_u64[0];
  v6 = *v4;
  if (*v4)
  {
    if (a1 && v6 == a1)
      return;
    if (!a1)
      goto LABEL_10;
  }
  else if (!a1)
  {
    return;
  }
  objc_msgSend(a1, "willMoveToParentViewController:", 0, v5);
  v7 = objc_msgSend(a1, "view");
  if (!v7)
  {
    __break(1u);
    goto LABEL_19;
  }
  v8 = v7;
  objc_msgSend(v7, "removeFromSuperview");

  v9 = objc_msgSend(a1, "view");
  if (!v9)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v10 = v9;
  objc_msgSend(v9, "setInsetsLayoutMarginsFromSafeArea:", 1);

  objc_msgSend(a1, "removeFromParentViewController");
  v6 = *v4;
  if (!*v4)
    goto LABEL_13;
LABEL_10:
  v11 = v6;
  objc_msgSend(v1, "addChildViewController:", v11);
  v12 = objc_msgSend(v11, "view");
  if (!v12)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v13 = v12;
  objc_msgSend(v12, "setInsetsLayoutMarginsFromSafeArea:", 0);

  v14 = sub_100534AB4();
  v15 = objc_msgSend(v11, "view");
  if (!v15)
  {
LABEL_21:
    __break(1u);
    return;
  }
  v16 = v15;
  v17 = *(void **)&v14[OBJC_IVAR____TtC5Books20PaletteContainerView_containerView];
  objc_msgSend(v17, "bounds");
  objc_msgSend(v16, "setFrame:");
  objc_msgSend(v16, "setAutoresizingMask:", 18);
  objc_msgSend(v17, "addSubview:", v16);

  objc_msgSend(v11, "didMoveToParentViewController:", v1);
LABEL_13:
  v18 = sub_100534AB4();
  objc_msgSend(v18, "setHidden:", *v4 == 0);

  v23.receiver = v1;
  v23.super_class = ObjectType;
  v19 = objc_msgSendSuper2(&v23, "contentNavigationController");
  if (v19)
  {
    v20 = v19;
    v21 = sub_100534AB4();
    v22 = objc_msgSend(v21, "isHidden");

    if ((v22 & 1) == 0)
    objc_msgSend(v20, "additionalSafeAreaInsets");
    objc_msgSend(v20, "setAdditionalSafeAreaInsets:");

  }
}

char *sub_100534AB4()
{
  char *v0;
  char *v1;
  uint64_t ObjectType;
  uint64_t v3;
  void *v4;
  char *v5;
  objc_class *v6;
  void *v7;
  id v8;
  char *v9;
  void *v10;
  __int128 v11;
  char *result;
  char *v13;
  __int128 v14;
  float64x2_t v15;
  float64x2_t v16;
  int64x2_t v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  id v29;
  id v30;
  id v31;
  char *v32;
  id v33;
  id v34;
  id v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  Class isa;
  id v47;
  __int128 v48;
  objc_super v49;
  double v50;
  __int128 v51;
  __int128 v52;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = OBJC_IVAR___BKMainContentViewController_paletteContainerViewIfLoaded;
  v4 = *(void **)&v0[OBJC_IVAR___BKMainContentViewController_paletteContainerViewIfLoaded];
  if (v4)
  {
    v5 = *(char **)&v0[OBJC_IVAR___BKMainContentViewController_paletteContainerViewIfLoaded];
LABEL_18:
    v47 = v4;
    return v5;
  }
  v6 = (objc_class *)ObjectType;
  if (qword_1009CDD38 != -1)
    swift_once(&qword_1009CDD38, sub_100009C98);
  v7 = (void *)qword_100A1E3D8;
  v8 = objc_allocWithZone((Class)type metadata accessor for PaletteContainerView());
  v9 = sub_10001B0D4(v7);
  v10 = *(void **)&v0[v3];
  *(_QWORD *)&v1[v3] = v9;
  v5 = v9;

  objc_msgSend(v5, "setHidden:", 1);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  LOBYTE(v50) = v5[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration];
  v11 = *(_OWORD *)&v5[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration + 24];
  v51 = *(_OWORD *)&v5[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration + 8];
  v52 = v11;
  v5[OBJC_IVAR____TtC5Books20PaletteContainerView_separatorConfiguration] = 0;
  sub_1002590C8(&v50);
  result = (char *)objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v13 = result;
  objc_msgSend(result, "safeAreaInsets");
  v48 = v14;

  v15 = *(float64x2_t *)&v5[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets];
  v16 = *(float64x2_t *)&v5[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets + 16];
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets + 16] = v48;
  *(int16x4_t *)&v15.f64[0] = vmovn_s32(vuzp1q_s32((int32x4_t)vorrq_s8((int8x16_t)vcgtq_f64(v15, (float64x2_t)0), (int8x16_t)vcgeq_f64((float64x2_t)0, v15)), (int32x4_t)vorrq_s8((int8x16_t)vcgtq_f64(v16, (float64x2_t)(unint64_t)v48), (int8x16_t)vcgeq_f64((float64x2_t)(unint64_t)v48, v16))));
  v17 = vceqq_f64((float64x2_t)(unint64_t)v48, v16);
  WORD2(v15.f64[0]) = vmovn_s32(vmovn_hight_s64(*(int32x2_t *)&v17, v17)).i16[2];
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(*(int16x4_t *)&v15.f64[0], 0xFuLL))) & 1) == 0)
    objc_msgSend(v5, "setNeedsLayout");
  v49.receiver = v1;
  v49.super_class = v6;
  v18 = objc_msgSendSuper2(&v49, "contentNavigationController", v48);
  v19 = v18;
  if (v18
    && (v20 = objc_msgSend(v18, "navigationBar"),
        v19,
        v19 = objc_msgSend(v20, "_backdropViewLayerGroupName"),
        v20,
        v19))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    v22 = v21;

    v23 = *(void **)&v5[OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView];
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
  }
  else
  {
    v23 = *(void **)&v5[OBJC_IVAR____TtC5Books20PaletteContainerView_backgroundView];
  }
  objc_msgSend(v23, "_setGroupName:", v19);

  result = (char *)objc_msgSend(v1, "view");
  if (!result)
    goto LABEL_20;
  v24 = result;
  objc_msgSend(result, "addSubview:", v5);

  v25 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v26 = swift_allocObject(v25, 64, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1007143B0;
  v27 = objc_msgSend(v5, "leadingAnchor");
  result = (char *)objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v28 = result;
  v29 = objc_msgSend(result, "leadingAnchor");

  v30 = objc_msgSend(v27, "constraintEqualToAnchor:", v29);
  *(_QWORD *)(v26 + 32) = v30;
  v31 = objc_msgSend(v5, "trailingAnchor");
  result = (char *)objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v32 = result;
  v33 = objc_msgSend(result, "trailingAnchor");

  v34 = objc_msgSend(v31, "constraintEqualToAnchor:", v33);
  *(_QWORD *)(v26 + 40) = v34;
  v35 = objc_msgSend(v5, "topAnchor");
  result = (char *)objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v36 = result;
  v37 = objc_msgSend(result, "safeAreaLayoutGuide");

  v38 = objc_msgSend(v37, "bottomAnchor");
  v39 = objc_msgSend(v35, "constraintEqualToAnchor:constant:", v38, -*(double *)&v5[OBJC_IVAR____TtC5Books20PaletteContainerView_defaultHeight]);

  *(_QWORD *)(v26 + 48) = v39;
  v40 = objc_msgSend(v5, "bottomAnchor");
  result = (char *)objc_msgSend(v1, "view");
  if (result)
  {
    v41 = result;
    v42 = (void *)objc_opt_self(NSLayoutConstraint);
    v43 = objc_msgSend(v41, "bottomAnchor");

    v44 = objc_msgSend(v40, "constraintEqualToAnchor:", v43);
    *(_QWORD *)(v26 + 56) = v44;
    specialized Array._endMutation()(v45);
    sub_10034132C();
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v26);
    objc_msgSend(v42, "activateConstraints:", isa);

    v4 = 0;
    goto LABEL_18;
  }
LABEL_24:
  __break(1u);
  return result;
}

id MainContentViewController.__allocating_init(contentNavigationController:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithContentNavigationController:", a1);

  return v3;
}

char *MainContentViewController.init(contentNavigationController:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  id v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  objc_super v26;
  uint64_t v27;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR___BKMainContentViewController_toolbarHeightPublisher;
  v27 = 0;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009CEED0);
  swift_allocObject(v5, *(unsigned int *)(v5 + 48), *(unsigned __int16 *)(v5 + 52));
  v6 = v1;
  *(_QWORD *)&v1[v4] = CurrentValueSubject.init(_:)(&v27);
  v7 = &v6[OBJC_IVAR___BKMainContentViewController_keyboardObserver];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *(_QWORD *)&v6[OBJC_IVAR___BKMainContentViewController_miniPlayerViewController] = 0;
  *(_QWORD *)&v6[OBJC_IVAR___BKMainContentViewController_paletteContainerViewIfLoaded] = 0;

  v26.receiver = v6;
  v26.super_class = ObjectType;
  v8 = objc_msgSendSuper2(&v26, "initWithContentNavigationController:", a1);
  v9 = sub_1001E122C((uint64_t)&off_1008F0ED8);
  v10 = swift_allocObject(&unk_10090DF98, 24, 7);
  swift_unknownObjectWeakInit(v10 + 16);
  v11 = (char *)v8;
  swift_retain(v10);
  _s5Books16KeyboardObserverV7options6updateACShyAC6OptionOG_yAG_AA0B9AvoidanceVtctcfC_0(v9, (uint64_t)sub_100535E7C, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_release(v10);

  v20 = &v11[OBJC_IVAR___BKMainContentViewController_keyboardObserver];
  v21 = *(_QWORD *)&v11[OBJC_IVAR___BKMainContentViewController_keyboardObserver];
  v22 = *(_QWORD *)&v11[OBJC_IVAR___BKMainContentViewController_keyboardObserver + 8];
  v23 = *(_QWORD *)&v11[OBJC_IVAR___BKMainContentViewController_keyboardObserver + 16];
  v24 = *(_QWORD *)&v11[OBJC_IVAR___BKMainContentViewController_keyboardObserver + 24];
  *(_QWORD *)v20 = v13;
  *((_QWORD *)v20 + 1) = v15;
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = v19;
  sub_100535E84(v21, v22, v23, v24);
  return v11;
}

void sub_100535248(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    sub_1005352A0(a2);

  }
}

void sub_1005352A0(double *a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  double v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  double MinY;
  char *v31;
  char *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  _QWORD *v49;
  id v50;
  void *v51;
  uint64_t v52;
  void *v53;
  _QWORD *v54;
  id v55;
  void *v56;
  uint64_t v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  double v64;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  void **aBlock;
  uint64_t v69;
  void *v70;
  void *v71;
  void *v72;
  _QWORD *v73;
  _BYTE v74[40];
  _QWORD v75[4];
  char v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;

  v2 = v1;
  v4 = objc_msgSend(v1, "presentedViewController");

  if (v4
    || (KeyboardAvoidance.additionalSafeAreaInsets(for:)(v2, (uint64_t)v74),
        sub_100535F44((uint64_t)v74, (uint64_t)v75),
        (v76 & 1) != 0))
  {
    v5 = swift_allocObject(&unk_10090DFE0, 24, 7);
    *(_QWORD *)(v5 + 16) = v2;
    v6 = (_QWORD *)swift_allocObject(&unk_10090E008, 40, 7);
    v6[2] = sub_100535F30;
    v6[3] = v5;
    v6[4] = v2;
    v7 = objc_msgSend(v2, "transitionCoordinator", swift_retain(v5).n128_f64[0]);
    if (v7)
    {
      v8 = v7;
      v9 = swift_allocObject(&unk_10090E058, 32, 7);
      *(_QWORD *)(v9 + 16) = sub_100535F38;
      *(_QWORD *)(v9 + 24) = v6;
      v72 = sub_10004DE04;
      v73 = (_QWORD *)v9;
      aBlock = _NSConcreteStackBlock;
      v69 = 1107296256;
      v70 = sub_1004D7C0C;
      v71 = &unk_10090E070;
      v10 = _Block_copy(&aBlock);
      v11 = v73;
      swift_retain(v6);
      LODWORD(v11) = objc_msgSend(v8, "animateAlongsideTransition:completion:", v10, 0, swift_release(v11).n128_f64[0]);
      _Block_release(v10);
      swift_unknownObjectRelease(v8);
      if ((_DWORD)v11)
      {
LABEL_5:
        swift_release(v5);
LABEL_9:
        swift_release(v6);
        return;
      }
    }
    v12 = *((_QWORD *)a1 + 9) << 16;
    if ((v12 & 0x8000000000000000) == 0)
    {
      v13 = v12 | 4;
      v14 = (void *)objc_opt_self(UIView);
      v15 = a1[8];
      v72 = sub_100535F38;
      v73 = v6;
      aBlock = _NSConcreteStackBlock;
      v69 = 1107296256;
      v16 = &unk_10090E020;
LABEL_8:
      v70 = sub_1000147F0;
      v71 = v16;
      v17 = _Block_copy(&aBlock);
      v18 = v73;
      swift_retain(v6);
      swift_release(v18);
      objc_msgSend(v14, "animateWithDuration:delay:options:animations:completion:", v13, v17, 0, v15, 0.0);
      swift_release(v6);
      _Block_release(v17);
      v6 = (_QWORD *)v5;
      goto LABEL_9;
    }
  }
  else
  {
    v19 = v75[0];
    v20 = v75[1];
    v22 = v75[2];
    v21 = v75[3];
    v23 = objc_msgSend(v2, "view");
    if (!v23)
    {
      __break(1u);
      goto LABEL_25;
    }
    v24 = v23;
    v25 = objc_msgSend(v23, "window");

    if (v25)
    {
      v67 = v19;
      v26 = a1[4];
      v27 = a1[5];
      v28 = a1[6];
      v29 = a1[7];
      v77.origin.x = v26;
      v77.origin.y = v27;
      v77.size.width = v28;
      v77.size.height = v29;
      if (CGRectGetHeight(v77) > 0.0)
      {
        v78.origin.x = v26;
        v78.origin.y = v27;
        v78.size.width = v28;
        v78.size.height = v29;
        MinY = CGRectGetMinY(v78);
        v31 = sub_100534AB4();
        v32 = sub_100534AB4();
        objc_msgSend(v32, "bounds");
        v34 = v33;
        v36 = v35;
        v38 = v37;
        v40 = v39;

        objc_msgSend(v31, "convertRect:toCoordinateSpace:", v25, v34, v36, v38, v40);
        v42 = v41;
        v44 = v43;
        v46 = v45;
        v48 = v47;

        v79.origin.x = v42;
        v79.origin.y = v44;
        v79.size.width = v46;
        v79.size.height = v48;
        if (CGRectGetMinY(v79) < MinY)
        {
          v49 = (_QWORD *)swift_allocObject(&unk_10090E170, 56, 7);
          v49[2] = v2;
          v49[3] = v67;
          v49[4] = v20;
          v49[5] = v22;
          v49[6] = v21;
          v6 = (_QWORD *)swift_allocObject(&unk_10090E198, 40, 7);
          v6[2] = sub_100536038;
          v6[3] = v49;
          v6[4] = v2;
          v50 = objc_msgSend(v2, "transitionCoordinator", swift_retain(v49).n128_f64[0]);
          if (v50)
          {
            v51 = v50;
            v52 = swift_allocObject(&unk_10090E1E8, 32, 7);
            *(_QWORD *)(v52 + 16) = sub_1005360B0;
            *(_QWORD *)(v52 + 24) = v6;
            v72 = sub_100258E34;
            v73 = (_QWORD *)v52;
            aBlock = _NSConcreteStackBlock;
            v69 = 1107296256;
            v70 = sub_1004D7C0C;
            v71 = &unk_10090E200;
            v53 = _Block_copy(&aBlock);
            v54 = v73;
            swift_retain(v6);
            LODWORD(v54) = objc_msgSend(v51, "animateAlongsideTransition:completion:", v53, 0, swift_release(v54).n128_f64[0]);
            _Block_release(v53);
            swift_unknownObjectRelease(v51);
            if ((_DWORD)v54)
            {

              swift_release(v49);
              goto LABEL_9;
            }
          }
          v61 = *((_QWORD *)a1 + 9) << 16;
          if ((v61 & 0x8000000000000000) == 0)
          {
            v62 = v61 | 4;
            v63 = (void *)objc_opt_self(UIView);
            v64 = a1[8];
            v72 = sub_1005360B0;
            v73 = v6;
            aBlock = _NSConcreteStackBlock;
            v69 = 1107296256;
            v70 = sub_1000147F0;
            v71 = &unk_10090E1B0;
            v65 = _Block_copy(&aBlock);
            v66 = v73;
            swift_retain(v6);
            swift_release(v66);
            objc_msgSend(v63, "animateWithDuration:delay:options:animations:completion:", v62, v65, 0, v64, 0.0);
            swift_release(v6);
            _Block_release(v65);

            v6 = v49;
            goto LABEL_9;
          }
          goto LABEL_25;
        }
      }

    }
    v5 = swift_allocObject(&unk_10090E0A8, 24, 7);
    *(_QWORD *)(v5 + 16) = v2;
    v6 = (_QWORD *)swift_allocObject(&unk_10090E0D0, 40, 7);
    v6[2] = sub_100535F30;
    v6[3] = v5;
    v6[4] = v2;
    v55 = objc_msgSend(v2, "transitionCoordinator", swift_retain(v5).n128_f64[0]);
    if (v55)
    {
      v56 = v55;
      v57 = swift_allocObject(&unk_10090E120, 32, 7);
      *(_QWORD *)(v57 + 16) = sub_1005360B0;
      *(_QWORD *)(v57 + 24) = v6;
      v72 = sub_100258E34;
      v73 = (_QWORD *)v57;
      aBlock = _NSConcreteStackBlock;
      v69 = 1107296256;
      v70 = sub_1004D7C0C;
      v71 = &unk_10090E138;
      v58 = _Block_copy(&aBlock);
      v59 = v73;
      swift_retain(v6);
      LODWORD(v59) = objc_msgSend(v56, "animateAlongsideTransition:completion:", v58, 0, swift_release(v59).n128_f64[0]);
      _Block_release(v58);
      swift_unknownObjectRelease(v56);
      if ((_DWORD)v59)
        goto LABEL_5;
    }
    v60 = *((_QWORD *)a1 + 9) << 16;
    if ((v60 & 0x8000000000000000) == 0)
    {
      v13 = v60 | 4;
      v14 = (void *)objc_opt_self(UIView);
      v15 = a1[8];
      v72 = sub_1005360B0;
      v73 = v6;
      aBlock = _NSConcreteStackBlock;
      v69 = 1107296256;
      v16 = &unk_10090E0E8;
      goto LABEL_8;
    }
  }
LABEL_25:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
  __break(1u);
}

Swift::Void __swiftcall MainContentViewController.viewSafeAreaInsetsDidChange()()
{
  char *v0;
  void *v1;
  char *v2;
  id v3;
  void *v4;
  unint64_t v5;
  float64x2_t v6;
  float64x2_t v7;
  int64x2_t v8;
  unint64_t v9;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v10, "viewSafeAreaInsetsDidChange");
  v1 = *(void **)&v0[OBJC_IVAR___BKMainContentViewController_paletteContainerViewIfLoaded];
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "view");
    if (v3)
    {
      v4 = v3;
      objc_msgSend(v3, "safeAreaInsets");
      v9 = v5;

      v6 = *(float64x2_t *)&v2[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets];
      v7 = *(float64x2_t *)&v2[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets + 16];
      *(_QWORD *)&v2[OBJC_IVAR____TtC5Books20PaletteContainerView_contentInsets + 16] = v9;
      *(int16x4_t *)&v6.f64[0] = vmovn_s32(vuzp1q_s32((int32x4_t)vorrq_s8((int8x16_t)vcgtq_f64(v6, (float64x2_t)0), (int8x16_t)vcgeq_f64((float64x2_t)0, v6)), (int32x4_t)vorrq_s8((int8x16_t)vcgtq_f64(v7, (float64x2_t)v9), (int8x16_t)vcgeq_f64((float64x2_t)v9, v7))));
      v8 = vceqq_f64((float64x2_t)v9, v7);
      WORD2(v6.f64[0]) = vmovn_s32(vmovn_hight_s64(*(int32x2_t *)&v8, v8)).i16[2];
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(*(int16x4_t *)&v6.f64[0], 0xFuLL))) & 1) == 0)
        objc_msgSend(v2, "setNeedsLayout");

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_100535B54(void (*a1)(void), uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;

  a1();
  v4 = objc_msgSend(a3, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "setNeedsLayout");

    v6 = objc_msgSend(a3, "view");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100535C4C()
{
  _QWORD *v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(*v0 + OBJC_IVAR___BKMainContentViewController_toolbarHeightPublisher);
  swift_beginAccess(v1, v3, 0, 0);
  return swift_retain(*v1);
}

void MainContentViewController.dockMiniPlayer(_:)(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  _BYTE v6[24];

  v3 = (void **)(v1 + OBJC_IVAR___BKMainContentViewController_miniPlayerViewController);
  swift_beginAccess(v1 + OBJC_IVAR___BKMainContentViewController_miniPlayerViewController, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  sub_1005347F4(v4);

}

Swift::Void __swiftcall MainContentViewController.undockMiniPlayer()()
{
  uint64_t v0;
  void **v1;
  void *v2;
  _BYTE v3[24];

  v1 = (void **)(v0 + OBJC_IVAR___BKMainContentViewController_miniPlayerViewController);
  swift_beginAccess(v0 + OBJC_IVAR___BKMainContentViewController_miniPlayerViewController, v3, 1, 0);
  v2 = *v1;
  *v1 = 0;
  sub_1005347F4(v2);

}

uint64_t sub_100535E58()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100535E7C(uint64_t a1, double *a2)
{
  uint64_t v2;

  sub_100535248(a1, a2, v2);
}

uint64_t sub_100535E84(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_release(a3);
    return swift_bridgeObjectRelease(a4);
  }
  return result;
}

id sub_100535EBC@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;
  _BYTE v6[24];

  v3 = (void **)(*a1 + OBJC_IVAR___BKMainContentViewController_miniPlayerViewController);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t type metadata accessor for MainContentViewController()
{
  return objc_opt_self(BKMainContentViewController);
}

void sub_100535F38()
{
  uint64_t v0;

  sub_100535B54(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100535F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009DBF30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100535F8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100535FB0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "additionalSafeAreaInsets");
  return objc_msgSend(v1, "setAdditionalSafeAreaInsets:");
}

uint64_t sub_100535FF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100536014()
{
  uint64_t v0;

  return swift_deallocObject(v0, 56, 7);
}

id sub_100536038()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, "additionalSafeAreaInsets");
  return objc_msgSend(v1, "setAdditionalSafeAreaInsets:");
}

uint64_t sub_1005360B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  id v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  double v45;
  char *v46;
  char *v47;
  char *v48;
  id v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  id v66;
  _QWORD v67[5];
  _OWORD v68[2];
  uint64_t v69;

  v60 = a1;
  v61 = a3;
  v59 = type metadata accessor for LibraryBookInfo.BookType(0);
  v57 = *(_QWORD *)(v59 - 8);
  v4 = __chkstk_darwin(v59);
  v58 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CommonLibraryAssetInfo(0, v4);
  v7 = __chkstk_darwin(v6);
  v56 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ContentKind(0, v7);
  v62 = *(_QWORD *)(v9 - 8);
  v63 = v9;
  __chkstk_darwin(v9);
  v64 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_10004CFD4(&qword_1009DEFB8);
  v54 = *(_QWORD *)(v55 - 8);
  __chkstk_darwin(v55);
  v52 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v53 = (uint64_t)&v50 - v13;
  v14 = type metadata accessor for ContentInfoBuildOptions(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v51 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v50 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v50 - v21;
  __chkstk_darwin(v23);
  v25 = (char *)&v50 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v50 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v50 - v30;
  v69 = 0;
  memset(v68, 0, sizeof(v68));
  static ContentInfoBuildOptions.seriesInfo.getter();
  v32 = sub_100008DB0((unint64_t *)&qword_1009EF2F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentInfoBuildOptions, (uint64_t)&protocol conformance descriptor for ContentInfoBuildOptions);
  v65 = a2;
  v33 = dispatch thunk of SetAlgebra.isSuperset(of:)(v31, v14, v32);
  v34 = *(void (**)(char *, uint64_t))(v15 + 8);
  v34(v31, v14);
  if ((v33 & 1) != 0)
  {
    v35 = objc_msgSend(v66, "seriesContainer");
    if (v35)
    {
      v50 = v35;
      static ContentInfoBuildOptions.seriesInfo.getter();
      v36 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
      v37 = v65;
      v36(v25, v65, v14);
      v36(v19, v37, v14);
      v38 = v51;
      v36(v51, (uint64_t)v28, v14);
      dispatch thunk of SetAlgebra.symmetricDifference(_:)(v38, v14, v32);
      dispatch thunk of SetAlgebra.intersection(_:)(v22, v14, v32);
      v34(v22, v14);
      v34(v28, v14);
      v39 = v53;
      v40 = v50;
      sub_1003A5880((uint64_t)v31, v53);
      v34(v31, v14);
      v41 = v54;
      v42 = v52;
      v43 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v52, v39, v55);
      v44 = v64;
      v45 = (*(double (**)(char *, _QWORD, uint64_t))(v62 + 104))(v64, enum case for ContentKind.regularBook(_:), v63);
      v67[3] = type metadata accessor for LibraryBookSeriesInfo(0, v45);
      v67[4] = sub_100008DB0(&qword_1009EA428, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryBookSeriesInfo, (uint64_t)&protocol conformance descriptor for LibraryBookSeriesInfo);
      sub_1000257F8(v67);
      LibraryBookSeriesInfo.init(commonInfo:kind:)(v42, v44);

      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v43);
      sub_100010960((uint64_t)v68, &qword_1009EA420);
      sub_100536A94((uint64_t)v67, (uint64_t)v68);
    }
  }
  v46 = v56;
  sub_1003A4C78(v65);
  sub_100536A4C((uint64_t)v68, (uint64_t)v67);
  v47 = v64;
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v64, enum case for ContentKind.regularBook(_:), v63);
  v48 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v58, v60, v59);
  LibraryBookInfo.init(commonInfo:seriesInfo:kind:type:)(v46, v67, v47, v48);
  return sub_100010960((uint64_t)v68, &qword_1009EA420);
}

uint64_t sub_100536570@<X0>(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t);
  id v30;
  void (*v31)(char *, void *, uint64_t);
  void *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  double v39;
  void *v40;
  char v41;
  id v42;
  void *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  char *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  void *v64;
  id v65;
  _QWORD v66[5];
  _OWORD v67[2];
  uint64_t v68;

  v62 = a2;
  v4 = type metadata accessor for CommonLibraryAssetInfo(0, a3);
  __chkstk_darwin(v4);
  v63 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009DEFB0);
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  __chkstk_darwin(v6);
  v58 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v59 = (uint64_t)&v56 - v9;
  v10 = type metadata accessor for ContentInfoBuildOptions(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v57 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v56 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - v20;
  __chkstk_darwin(v22);
  v24 = (char *)&v56 - v23;
  __chkstk_darwin(v25);
  v27 = (char *)&v56 - v26;
  v68 = 0;
  memset(v67, 0, sizeof(v67));
  static ContentInfoBuildOptions.seriesInfo.getter();
  v28 = sub_100008DB0((unint64_t *)&qword_1009EF2F0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentInfoBuildOptions, (uint64_t)&protocol conformance descriptor for ContentInfoBuildOptions);
  v64 = a1;
  LOBYTE(a1) = dispatch thunk of SetAlgebra.isSuperset(of:)(v27, v10, v28);
  v29 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v30 = (id)v29(v27, v10);
  if ((a1 & 1) != 0)
  {
    v30 = objc_msgSend(v65, "seriesContainer");
    if (v30)
    {
      v56 = v30;
      static ContentInfoBuildOptions.seriesInfo.getter();
      v31 = *(void (**)(char *, void *, uint64_t))(v11 + 16);
      v32 = v64;
      v31(v21, v64, v10);
      v31(v15, v32, v10);
      v33 = v57;
      v31(v57, v24, v10);
      dispatch thunk of SetAlgebra.symmetricDifference(_:)(v33, v10, v28);
      dispatch thunk of SetAlgebra.intersection(_:)(v18, v10, v28);
      v29(v18, v10);
      v29(v24, v10);
      v34 = v59;
      v35 = v56;
      sub_1003A58AC((uint64_t)v27, v59);
      v29(v27, v10);
      v36 = v60;
      v37 = v61;
      v38 = v58;
      v39 = (*(double (**)(char *, uint64_t, uint64_t))(v60 + 16))(v58, v34, v61);
      v66[3] = type metadata accessor for LibraryAudiobookSeriesInfo(0, v39);
      v66[4] = sub_100008DB0(&qword_1009EA430, (uint64_t (*)(uint64_t))&type metadata accessor for LibraryAudiobookSeriesInfo, (uint64_t)&protocol conformance descriptor for LibraryAudiobookSeriesInfo);
      sub_1000257F8(v66);
      LibraryAudiobookSeriesInfo.init(commonInfo:)(v38);

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v37);
      sub_100010960((uint64_t)v67, &qword_1009EA420);
      v30 = (id)sub_100536A94((uint64_t)v66, (uint64_t)v67);
    }
  }
  static ContentInfoBuildOptions.supplementalContents.getter(v30);
  v40 = v64;
  v41 = dispatch thunk of SetAlgebra.isSuperset(of:)(v27, v10, v28);
  v29(v27, v10);
  if ((v41 & 1) != 0)
  {
    v42 = objc_msgSend(v65, "supplementalContentAssets");
    if (v42)
    {
      v43 = v42;
      v44 = sub_100033F5C();
      v45 = sub_100008DB0((unint64_t *)&qword_1009D6DB0, (uint64_t (*)(uint64_t))sub_100033F5C, (uint64_t)&protocol conformance descriptor for NSObject);
      v46 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v43, v44, v45);

      __chkstk_darwin(v47);
      *(&v56 - 2) = v40;
      sub_1003A2730((void (*)(id *))sub_100536DB4, (uint64_t)(&v56 - 4), v46);
      v49 = v48;
      swift_bridgeObjectRelease(v46);
    }
    else
    {
      v49 = _swiftEmptyArrayStorage;
    }
  }
  else
  {
    v49 = 0;
  }
  v50 = v63;
  v51 = v65;
  sub_1003A4C78(v40);
  sub_100536A4C((uint64_t)v67, (uint64_t)v66);
  v52 = objc_msgSend(v51, "hasRACSupport");
  if (v52)
  {
    v53 = v52;
    v54 = objc_msgSend(v52, "BOOLValue");

  }
  else
  {
    v54 = 0;
  }
  LibraryAudiobookInfo.init(commonInfo:seriesInfo:isSG:supplementalContents:)(v50, v66, v54, v49);
  return sub_100010960((uint64_t)v67, &qword_1009EA420);
}

uint64_t sub_100536A4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EA420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100536A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EA420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100536ADC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, _QWORD, uint64_t, uint64_t);
  _BYTE v14[24];
  uint64_t v15;

  v4 = sub_10004CFD4(&qword_1009D7000);
  __chkstk_darwin(v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  BKLibraryAsset.contentInfo(options:)(a1);
  if (v15)
  {
    v7 = sub_10004CFD4(&qword_1009EF310);
    v8 = type metadata accessor for LibraryPDFInfo(0);
    v9 = swift_dynamicCast(v6, v14, v7, v8, 6);
    v10 = *(_QWORD *)(v8 - 8);
    v11 = *(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56);
    v11((uint64_t)v6, v9 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v8) != 1)
    {
      (*(void (**)(uint64_t, _BYTE *, uint64_t))(v10 + 32))(a2, v6, v8);
      return v11(a2, 0, 1, v8);
    }
  }
  else
  {
    sub_100010960((uint64_t)v14, &qword_1009E8A20);
    v8 = type metadata accessor for LibraryPDFInfo(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  }
  sub_100010960((uint64_t)v6, &qword_1009D7000);
  type metadata accessor for LibraryPDFInfo(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a2, 1, 1, v8);
}

uint64_t sub_100536C74(uint64_t a1, uint64_t a2)
{
  return BKLibraryAsset.contentInfo(options:)(a2);
}

uint64_t sub_100536CA0()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double v10;
  unsigned int v11;

  v1 = objc_msgSend(v0, "seriesIsOrdered");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, "BOOLValue");

  }
  else
  {
    v4 = objc_msgSend(v0, "seriesBooks");
    if (v4
      && (v5 = v4,
          v6 = sub_100033F5C(),
          v7 = sub_100008DB0((unint64_t *)&qword_1009D6DB0, (uint64_t (*)(uint64_t))sub_100033F5C, (uint64_t)&protocol conformance descriptor for NSObject), v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v5, v6, v7), v5, v9 = (void *)sub_1003A3498(v8), *(_QWORD *)&v10 = swift_bridgeObjectRelease(v8).n128_u64[0], v9))
    {
      v11 = objc_msgSend(v9, "seriesType", v10);

      if (v11 <= 3)
        return 0x10202u >> (8 * v11);
      else
        return 2;
    }
    else
    {
      return 2;
    }
  }
  return (uint64_t)v3;
}

uint64_t sub_100536DB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100536ADC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100536DD0()
{
  unint64_t result;

  result = qword_1009EA438;
  if (!qword_1009EA438)
  {
    result = swift_getWitnessTable(&unk_10072BF88, &type metadata for PlaySpecificAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009EA438);
  }
  return result;
}

unint64_t sub_100536E18()
{
  unint64_t result;

  result = qword_1009EA440;
  if (!qword_1009EA440)
  {
    result = swift_getWitnessTable(&unk_10072BFB0, &type metadata for PlaySpecificAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009EA440);
  }
  return result;
}

uint64_t sub_100536E5C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100875E88, 1);
}

uint64_t sub_100536E6C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100875E60, 1);
}

uint64_t sub_100536E7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1EC10);
  sub_100048F64(v10, (uint64_t)qword_100A1EC10);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000001007D1BE0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for 'Play Specific Audiobook' AppIntent.", 46, 2);
}

__n128 sub_100536FF0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __n128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  char v14;

  IntentParameter.wrappedValue.getter(&v8);
  v2 = v12;
  v3 = v14;
  result = v9;
  v5 = v10;
  v6 = v11;
  v7 = v13;
  *(_QWORD *)a1 = v8;
  *(__n128 *)(a1 + 8) = result;
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 56) = v2;
  *(_OWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 80) = v3;
  return result;
}

uint64_t sub_100537054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  return swift_task_switch(sub_100537070, 0, 0);
}

uint64_t sub_100537070()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[21] = objc_opt_self(UIApplication);
  v1 = type metadata accessor for MainActor(0);
  v0[22] = v1;
  v0[23] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005370EC, v2, v3);
}

uint64_t sub_1005370EC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = objc_msgSend(*(id *)(v0 + 168), "sharedApplication", swift_release(*(_QWORD *)(v0 + 184)).n128_f64[0]);
  return swift_task_switch(sub_100537148, 0, 0);
}

uint64_t sub_100537148()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  __int128 v6;

  v1 = *(void **)(v0 + 192);
  v2 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v0 + 200) = objc_msgSend(v1, "beginBackgroundTaskWithName:expirationHandler:", v2, 0);

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 104));
  v6 = *(_OWORD *)(v0 + 120);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v0 + 224) = v6;
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v0 + 136);
  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 16));
  v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1009E5078 + dword_1009E5078);
  v3 = (_QWORD *)swift_task_alloc(unk_1009E507C);
  *(_QWORD *)(v0 + 248) = v3;
  *v3 = v0;
  v3[1] = sub_10053724C;
  return v5(v0 + 16, v6);
}

uint64_t sub_10053724C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 248);
  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100537404;
  }
  else
  {
    v5 = v2 + 2;
    v6 = v2[29];
    v7 = v2[30];
    v8 = v2[27];
    v9 = (void *)v2[28];
    v10 = (void *)v2[26];
    sub_100478038(v5);

    swift_unknownObjectRelease(v8);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v7);
    v4 = sub_1005372F4;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_1005372F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 176);
  *(_QWORD *)(v1 + 264) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100537354, v3, v4);
}

uint64_t sub_100537354()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = objc_msgSend(*(id *)(v0 + 168), "sharedApplication", swift_release(*(_QWORD *)(v0 + 264)).n128_f64[0]);
  return swift_task_switch(sub_1005373B0, 0, 0);
}

uint64_t sub_1005373B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 272);
  objc_msgSend(v1, "endBackgroundTask:", *(_QWORD *)(v0 + 200));

  static IntentResult.result<>()(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100537404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 216);
  v4 = *(void **)(v0 + 224);
  v5 = *(void **)(v0 + 208);
  sub_100478038((_QWORD *)(v0 + 16));

  swift_unknownObjectRelease(v3);
  swift_bridgeObjectRelease(v1);
  v6 = swift_bridgeObjectRelease(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_100537474@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CE808 != -1)
    swift_once(&qword_1009CE808, sub_100536E7C);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1EC10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1005374E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  Swift::String v13;
  uint64_t v15;

  v4 = sub_10004CFD4(&qword_1009EA488);
  __chkstk_darwin(v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EA490);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, a1, a2);
  v10._countAndFlagsBits = 0x2079616C50;
  v10._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_10072C020);
  v12 = sub_10004CFD4(&qword_1009EA498);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v7, v12);
  swift_release(KeyPath);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v13);
  ParameterSummaryString.init(stringInterpolation:)(v9, a1, a2);
  return IntentParameterSummary.init(_:table:)(v6, 0x6E65746E49707041, 0xEA00000000007374, a1, a2);
}

uint64_t sub_10053764C(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = swift_task_alloc(dword_1009EA484);
  *(_QWORD *)(v2 + 16) = v4;
  *(_QWORD *)v4 = v2;
  *(_QWORD *)(v4 + 8) = sub_10000AE34;
  *(_OWORD *)(v4 + 152) = *v1;
  *(_QWORD *)(v4 + 144) = a1;
  return swift_task_switch(sub_100537070, 0, 0);
}

uint64_t sub_1005376B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1005377CC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1005376DC()
{
  unint64_t result;

  result = qword_1009EA450;
  if (!qword_1009EA450)
  {
    result = swift_getWitnessTable(&unk_10072BFCC, &type metadata for PlaySpecificAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009EA450);
  }
  return result;
}

uint64_t sub_100537720(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053774C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10053774C()
{
  unint64_t result;

  result = qword_1009EA458;
  if (!qword_1009EA458)
  {
    result = swift_getWitnessTable(&unk_10072BED0, &type metadata for PlaySpecificAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009EA458);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaySpecificAudiobookIntent()
{
  return &type metadata for PlaySpecificAudiobookIntent;
}

uint64_t sub_1005377A0()
{
  return sub_100030B34(&qword_1009EA460, &qword_1009EA468, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

uint64_t sub_1005377CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  char v59;

  v0 = type metadata accessor for InputConnectionBehavior(0);
  v52 = *(_QWORD *)(v0 - 8);
  v53 = v0;
  __chkstk_darwin(v0);
  v51 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v2);
  v50 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v49 = (char *)&v45 - v5;
  v6 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v6);
  v47 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for LocalizedStringResource(0);
  v18 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v46 = (char *)&v45 - v22;
  v48 = sub_10004CFD4(&qword_1009EA470);
  v23 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007D1AB0);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v25(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Play Audiobook' parameter that specifies the audiobook to play.", 64, 2);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007D1AB0);
  static Locale.current.getter(v26);
  v25(v11, v24, v8);
  v27 = v47;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Description of the target parameter of the Play Specific Audiobook AppIntent", 76, 2);
  v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  v29 = v27;
  v28(v27, 0, 1, v45);
  v59 = 0;
  v57 = 0u;
  v58 = 0u;
  v55 = 0u;
  v56 = 0u;
  v54 = 0u;
  v30 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x80000001007D1B70);
  static Locale.current.getter(v30);
  v25(v11, v24, v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Play Specific Audiobook' prompt with no audiobook selected.", 60, 2);
  v31 = v49;
  IntentDialog.init(_:)(v20);
  v32 = type metadata accessor for IntentDialog(0);
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56);
  v33(v31, 0, 1, v32);
  v34 = v50;
  v33(v50, 1, 1, v32);
  v35 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v52 + 104))(v51, enum case for InputConnectionBehavior.default(_:), v53);
  v36 = sub_100537C34();
  v37 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v46, v29, &v54, v31, v34, v35, v36);
  sub_10004CFD4(&qword_1009D2100);
  v38 = type metadata accessor for AppDependencyManager(0);
  v54 = 0u;
  v55 = 0u;
  *(_QWORD *)&v56 = 0;
  v43 = static AppDependencyManager.shared.getter(v38, v39, v40, v41, v42);
  AppDependency.__allocating_init(key:manager:)(&v54, v43);
  return v37;
}

unint64_t sub_100537C34()
{
  unint64_t result;

  result = qword_1009EA478;
  if (!qword_1009EA478)
  {
    result = swift_getWitnessTable(&unk_1007357A0, &type metadata for AudiobookAppEntity);
    atomic_store(result, &qword_1009EA478);
  }
  return result;
}

uint64_t sub_100537C78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ReportIssue()
{
  return &type metadata for ReportIssue;
}

uint64_t sub_100537DF8(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD *v14;

  v4[2] = a2;
  v4[3] = a3;
  v4[4] = _Block_copy(aBlock);
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v10 = v9;
  objc_allocWithZone((Class)sub_10004CFD4(&qword_1009D1440));
  v11 = dword_1009EA55C;
  v12 = a2;
  v13 = a3;
  v14 = (_QWORD *)swift_task_alloc(v11);
  v4[5] = v14;
  *v14 = v4;
  v14[1] = sub_100537EB0;
  return sub_1005384F8(v8, v10, (uint64_t)a2, (uint64_t)v13);
}

uint64_t sub_100537EB0(void *a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  void *v5;
  uint64_t v7;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 32);
  v5 = *(void **)(*v1 + 16);
  v4 = *(void **)(*v1 + 24);
  v7 = *v1;
  swift_task_dealloc(*(_QWORD *)(*v1 + 40));

  ((void (**)(_QWORD, void *))v3)[2](v3, a1);
  _Block_release(v3);

  return (*(uint64_t (**)(void))(v7 + 8))();
}

void sub_100537F2C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1005390DC();
}

void sub_100537F50()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.ReportIssueHostingController", 34, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_100537F7C()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.ReportIssueHostingController", 34, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_100537FA8()
{
  char *v0;
  uint64_t v1;

  v1 = swift_isaMask & *(_QWORD *)v0;
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + qword_1009EA4C8) - 8) + 8))(&v0[*(_QWORD *)(v1 + qword_1009EA4C8 + 64)]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(qword_1009EA4C8 + v1 + 16) - 8) + 8))(&v0[*(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *(_QWORD *)v0) + 72)]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(qword_1009EA4C8 + v1 + 8) - 8) + 8))(&v0[*(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *(_QWORD *)v0) + 80)]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(qword_1009EA4C8 + v1 + 24) - 8) + 8))(&v0[*(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *(_QWORD *)v0) + 88)]);
  return swift_bridgeObjectRelease(*(_QWORD *)&v0[*(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *(_QWORD *)v0) + 96)]);
}

uint64_t sub_1005380AC(char *a1)
{
  uint64_t v2;

  v2 = swift_isaMask & *(_QWORD *)a1;
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v2 + qword_1009EA4C8) - 8) + 8))(&a1[*(_QWORD *)(v2 + qword_1009EA4C8 + 64)]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(qword_1009EA4C8 + v2 + 16) - 8) + 8))(&a1[*(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *(_QWORD *)a1) + 72)]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(qword_1009EA4C8 + v2 + 8) - 8) + 8))(&a1[*(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *(_QWORD *)a1) + 80)]);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(qword_1009EA4C8 + v2 + 24) - 8) + 8))(&a1[*(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *(_QWORD *)a1) + 88)]);
  return swift_bridgeObjectRelease(*(_QWORD *)&a1[*(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *(_QWORD *)a1) + 96)]);
}

uint64_t type metadata accessor for ReportIssueModuleFactory()
{
  return objc_opt_self(BKReportIssueModuleFactory);
}

uint64_t sub_100538210(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD v9[5];

  v2 = qword_1009EA4C8;
  v3 = a1 + qword_1009EA4C8 + 64;
  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + qword_1009EA4C8));
  if (v5 <= 0x3F)
  {
    v9[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(v2 + a1 + 16));
    if (v6 <= 0x3F)
    {
      v9[1] = *(_QWORD *)(result - 8) + 64;
      result = swift_checkMetadataState(319, *(_QWORD *)(v2 + a1 + 8));
      if (v7 <= 0x3F)
      {
        v9[2] = *(_QWORD *)(result - 8) + 64;
        result = swift_checkMetadataState(319, *(_QWORD *)(v2 + a1 + 24));
        if (v8 <= 0x3F)
        {
          v9[3] = *(_QWORD *)(result - 8) + 64;
          v9[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
          return swift_initClassMetadata2(a1, 0, 5, v9, v3);
        }
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for ReportIssueModuleFactory.ReportIssueHostingController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for ReportIssueModuleFactory.ReportIssueHostingController);
}

uint64_t sub_100538310()
{
  return EnvironmentValues.presentationMode.getter();
}

uint64_t sub_100538330(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  _QWORD *v23;

  *(_QWORD *)(v6 + 88) = a6;
  v12 = type metadata accessor for ReportIssueDataManager();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 40) = v12;
  *(_QWORD *)(v6 + 48) = &off_10091B248;
  swift_defaultActor_initialize(a6);
  if (qword_1009CEB10 != -1)
    swift_once(&qword_1009CEB10, sub_100656984);
  v14 = qword_100A1F0A0;
  v13 = qword_100A1F0A8;
  v15 = qword_100A1F0B0;
  v16 = byte_100A1F0B8;
  *(_QWORD *)(v6 + 56) = qword_100A1F0A0;
  *(_QWORD *)(v6 + 64) = v13;
  *(_QWORD *)(v6 + 72) = v15;
  *(_BYTE *)(v6 + 80) = v16;
  v17 = sub_10004CFD4(&qword_1009EA5A0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v14);
  a6[14] = CurrentValueSubject.init(_:)(v6 + 56);
  v18 = sub_10004CFD4(&qword_1009D7DA0);
  v19 = swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  a6[15] = PassthroughSubject.init()(v19);
  a6[16] = 0;
  sub_10002E418(v6 + 16, (uint64_t)(a6 + 17));
  a6[22] = a2;
  a6[23] = a3;
  a6[24] = a4;
  a6[25] = a5;
  v20 = dword_1009F2BD4;
  v21 = a4;
  v22 = a5;
  v23 = (_QWORD *)swift_task_alloc(v20);
  *(_QWORD *)(v6 + 96) = v23;
  *v23 = v6;
  v23[1] = sub_1005384A4;
  return sub_1006569A4();
}

uint64_t sub_1005384A4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0;
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v1 + 16));
  return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(_QWORD *)(v1 + 88));
}

uint64_t sub_1005384F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[39] = a4;
  v5[40] = v4;
  v5[37] = a2;
  v5[38] = a3;
  v5[36] = a1;
  v6 = sub_10004CFD4(&qword_1009EA560);
  v5[41] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ReportIssueView(0);
  v5[42] = v7;
  v5[43] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v5[44] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v5[45] = v9;
  v5[46] = v10;
  return swift_task_switch(sub_1005385B4, v9, v10);
}

uint64_t sub_1005385B4()
{
  _QWORD *v0;
  _QWORD *v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v38;
  void *v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t, void *, void *, _QWORD *);

  v2 = (int *)v0[42];
  v1 = (_QWORD *)v0[43];
  v3 = (_QWORD *)v0[40];
  v4 = (_QWORD *)v0[41];
  v38 = (void *)v0[38];
  v39 = (void *)v0[39];
  v5 = *(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *v3) + 96);
  v0[47] = v5;
  *(_QWORD *)((char *)v3 + v5) = &_swiftEmptySetSingleton;
  v6 = type metadata accessor for ReportIssuePresenter();
  swift_allocObject(v6, 64, 7);
  v7 = v3;
  v8 = sub_1002C8348();
  v9 = *(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *v7) + 72);
  v0[48] = v9;
  *(_QWORD *)((char *)v7 + v9) = v8;
  v10 = v8[2];
  *v4 = swift_getKeyPath(&unk_10072C0C8);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009F3ED0);
  swift_storeEnumTagMultiPayload(v4, v11, 0);
  v12 = sub_10004CFD4(&qword_1009D7DA8);
  v0[49] = v12;
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = swift_retain(v10);
  *v1 = PassthroughSubject.init()(v13);
  v14 = type metadata accessor for ReportIssueViewModel(0);
  v15 = sub_100538FA4();
  v1[1] = ObservedObject.init(wrappedValue:)(v10, v14, v15);
  v1[2] = v16;
  v17 = (_QWORD *)((char *)v1 + v2[6]);
  *v17 = swift_getKeyPath(&unk_10072C0F8);
  v18 = sub_10004CFD4(&qword_1009EA570);
  swift_storeEnumTagMultiPayload(v17, v18, 0);
  sub_10053900C((uint64_t)v4, (uint64_t)v1 + v2[7]);
  v19 = (char *)v1 + v2[8];
  v0[30] = 0;
  v0[31] = 0xE000000000000000;
  State.init(wrappedValue:)(v0 + 16, v0 + 30, &type metadata for String);
  v20 = v0[18];
  *(_OWORD *)v19 = *((_OWORD *)v0 + 8);
  *((_QWORD *)v19 + 2) = v20;
  v21 = (char *)v1 + v2[9];
  v0[28] = 0;
  v0[29] = 0xE000000000000000;
  State.init(wrappedValue:)(v0 + 10, v0 + 28, &type metadata for String);
  v22 = v0[12];
  *(_OWORD *)v21 = *((_OWORD *)v0 + 5);
  *((_QWORD *)v21 + 2) = v22;
  v23 = *(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *v7) + 64);
  v0[50] = v23;
  sub_100539054((uint64_t)v1, (uint64_t)v7 + v23);
  v24 = objc_allocWithZone((Class)BSUIReportIssueNetworkManager);
  v25 = v38;
  v26 = v39;
  v27 = objc_msgSend(v24, "init");
  v28 = type metadata accessor for ReportIssueDataManager();
  v29 = swift_allocObject(v28, 24, 7);
  v0[51] = v29;
  *(_QWORD *)(v29 + 16) = v27;
  v0[5] = v28;
  v0[6] = &off_10091B248;
  v0[2] = v29;
  v30 = type metadata accessor for ReportIssueInteractor();
  v31 = (_QWORD *)swift_allocObject(v30, 208, 15);
  sub_100063750((uint64_t)(v0 + 2), v28);
  v32 = *(_QWORD *)(v28 - 8);
  v33 = (uint64_t *)swift_task_alloc((*(_QWORD *)(v32 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[52] = v33;
  (*(void (**)(void))(v32 + 16))();
  v34 = *v33;
  v35 = unk_1009EA57C;
  v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void *, void *, _QWORD *))((char *)&dword_1009EA578
                                                                                    + dword_1009EA578);
  swift_retain(v29);
  v36 = (_QWORD *)swift_task_alloc(v35);
  v0[53] = v36;
  *v36 = v0;
  v36[1] = sub_100538908;
  return v40(v34, v0[36], v0[37], (void *)v0[38], (void *)v0[39], v31);
}

uint64_t sub_100538908(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v2 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 416);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 424);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 408);
  v7 = *(void **)(*(_QWORD *)v1 + 304);
  v6 = *(void **)(*(_QWORD *)v1 + 312);
  *(_QWORD *)(*(_QWORD *)v1 + 432) = a1;
  swift_task_dealloc(v3);

  _s5Books15CurrentPageViewVwxx_0(v2 + 2);
  swift_release(v5);
  swift_task_dealloc(v4);
  return swift_task_switch(sub_10053899C, v2[45], v2[46]);
}

uint64_t sub_10053899C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v1 = v0[54];
  v3 = v0[49];
  v2 = v0[50];
  v4 = v0[48];
  v5 = (_QWORD *)v0[40];
  v6 = (char *)v5 + v0[47];
  v26 = *(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *v5) + 80);
  v0[55] = v26;
  *(_QWORD *)((char *)v5 + v26) = v1;
  v7 = type metadata accessor for ReportIssueRouter();
  swift_allocObject(v7, 32, 7);
  v8 = sub_1001ED8A0();
  v9 = *(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *v5) + 88);
  *(_QWORD *)((char *)v5 + v9) = v8;
  v10 = *(_QWORD *)((char *)v5 + v2);
  v0[32] = v10;
  v11 = *(_QWORD *)(*(_QWORD *)((char *)v5 + v4) + 40);
  v12 = sub_100030B34(&qword_1009D7DB8, &qword_1009D7DA8, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v13 = sub_100030B34(&qword_1009EA580, &qword_1009D7DA8, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  swift_retain(v10);
  v14 = swift_retain(v11);
  v15 = Publisher.subscribe<A>(_:)(v14, v3, v3, v12, v13);
  swift_release(v11);
  swift_release(v10);
  swift_beginAccess(v6, v0 + 22, 33, 0);
  AnyCancellable.store(in:)(v6);
  swift_endAccess(v0 + 22);
  swift_release(v15);
  v16 = v4;
  v17 = *(_QWORD *)(*(_QWORD *)((char *)v5 + v4) + 32);
  v0[35] = v17;
  v18 = *(_QWORD *)(*(_QWORD *)((char *)v5 + v9) + 16);
  swift_retain(v17);
  swift_retain(v18);
  v19 = sub_10004CFD4(&qword_1009D1668);
  v20 = sub_100030B34(&qword_1009D1670, &qword_1009D1668, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v21 = sub_100030B34(&qword_1009EA588, &qword_1009D1668, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v22 = Publisher.subscribe<A>(_:)(v18, v19, v19, v20, v21);
  swift_release(v18);
  swift_release(v17);
  swift_beginAccess(v6, v0 + 19, 33, 0);
  AnyCancellable.store(in:)(v6);
  swift_endAccess(v0 + 19);
  swift_release(v22);
  v23 = *(_QWORD *)(*(_QWORD *)((char *)v5 + v16) + 24);
  v0[33] = v23;
  v24 = *(_QWORD *)((char *)v5 + v26);
  v0[56] = v24;
  swift_retain(v23);
  return swift_task_switch(sub_100538C2C, v24, 0);
}

uint64_t sub_100538C2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[56] + 120);
  v0[57] = v1;
  v2 = v0[45];
  v3 = v0[46];
  swift_retain(v1);
  return swift_task_switch(sub_100538C74, v2, v3);
}

uint64_t sub_100538C74()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[57];
  v2 = v0[55];
  v3 = v0[40];
  v4 = v3 + v0[47];
  v5 = sub_10004CFD4(&qword_1009D7DA0);
  v6 = sub_100030B34(&qword_1009EA590, &qword_1009D7DA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v7 = sub_100030B34(&qword_1009EA598, &qword_1009D7DA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v8 = Publisher.subscribe<A>(_:)(v1, v5, v5, v6, v7);
  swift_release(v1);
  swift_release(v0[33]);
  swift_beginAccess(v4, v0 + 13, 33, 0);
  AnyCancellable.store(in:)(v4);
  swift_endAccess(v0 + 13);
  swift_release(v8);
  v9 = *(_QWORD *)(v3 + v2);
  v0[58] = v9;
  return swift_task_switch(sub_100538D88, v9, 0);
}

uint64_t sub_100538D88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[58] + 112);
  v0[59] = v1;
  v2 = v0[45];
  v3 = v0[46];
  swift_retain(v1);
  return swift_task_switch(sub_100538DD0, v2, v3);
}

uint64_t sub_100538DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 384);
  v16 = v4;
  v5 = *(char **)(v0 + 320);
  v18 = *(_QWORD *)(v0 + 344);
  v19 = *(_QWORD *)(v0 + 328);
  swift_release(*(_QWORD *)(v0 + 352));
  v17 = (uint64_t)&v5[v2];
  v6 = &v5[v3];
  *(_QWORD *)(v0 + 272) = v1;
  v7 = *(_QWORD *)(*(_QWORD *)&v5[v4] + 48);
  swift_retain(v7);
  v8 = sub_10004CFD4(&qword_1009EA5A0);
  v9 = sub_10004CFD4(&qword_1009D7DB0);
  v10 = sub_100030B34(&qword_1009EA5A8, &qword_1009EA5A0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
  v11 = sub_100030B34(&qword_1009EA5B0, &qword_1009D7DB0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v12 = Publisher.subscribe<A>(_:)(v7, v8, v9, v10, v11);
  swift_release(v7);
  swift_release(v1);
  swift_beginAccess(v6, v0 + 56, 33, 0);
  AnyCancellable.store(in:)(v6);
  swift_endAccess(v0 + 56);
  swift_release(v12);
  v13 = *(_QWORD *)&v5[v16];
  *(_QWORD *)(v0 + 208) = 0;
  *(_QWORD *)(v0 + 200) = 0;
  *(_BYTE *)(v0 + 216) = 2;
  swift_retain(v13);
  PassthroughSubject.send(_:)(v0 + 200);

  swift_release(v13);
  sub_100539098(v17, v18);
  v14 = UIHostingController.init(rootView:)(v18);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v14);
}

uint64_t sub_100538F84()
{
  return EnvironmentValues.presentationMode.getter();
}

unint64_t sub_100538FA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EA568;
  if (!qword_1009EA568)
  {
    v1 = type metadata accessor for ReportIssueViewModel(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ReportIssueViewModel, v1);
    atomic_store(result, (unint64_t *)&qword_1009EA568);
  }
  return result;
}

uint64_t sub_100538FEC()
{
  return EnvironmentValues.sizes.getter();
}

uint64_t sub_10053900C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EA560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100539054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReportIssueView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100539098(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReportIssueView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1005390DC()
{
  _QWORD *v0;

  *(_QWORD *)((char *)v0 + *(_QWORD *)(qword_1009EA4C8 + (swift_isaMask & *v0) + 96)) = &_swiftEmptySetSingleton;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/ReportIssueModuleFactory.swift", 36, 2, 58, 0);
  __break(1u);
}

uint64_t sub_100539168()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 40));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005391A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc(dword_1009EA5BC);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_10000AE34;
  return ((uint64_t (*)(uint64_t, void *, void *, void *))((char *)&dword_1009EA5B8 + dword_1009EA5B8))(v2, v3, v4, v5);
}

uint64_t sub_100539230(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return _s5Books7SidebarO9DataModelV12StandardItemV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t *)v5, (uint64_t)v7) & 1;
}

uint64_t static Sidebar.DataModel.Account.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    if (a5 && (a1 == a4 && a2 == a5 || (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0) & 1) != 0))
      goto LABEL_6;
  }
  else if (!a5)
  {
LABEL_6:
    sub_10000A5D8();
    return static NSObject.== infix(_:_:)(a3, a6) & 1;
  }
  return 0;
}

uint64_t sub_100539300(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a2[1];
  v6 = a2[2];
  if (v3)
  {
    if (v5)
    {
      v7 = *a1;
      v8 = v7 == *a2 && v3 == v5;
      if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)(v7, v3, *a2, v5, 0) & 1) != 0)
        goto LABEL_8;
    }
  }
  else if (!v5)
  {
LABEL_8:
    sub_10000A5D8();
    return static NSObject.== infix(_:_:)(v4, v6) & 1;
  }
  return 0;
}

uint64_t sub_10053937C(uint64_t a1, uint64_t a2)
{
  return _s5Books7SidebarO9DataModelV12AccountStateO21__derived_enum_equalsySbAG_AGtFZ_0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_BYTE *)(a2 + 24));
}

uint64_t sub_1005393A4(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  char v6;
  _OWORD v7[2];
  char v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_BYTE *)(a2 + 32);
  return _s5Books7SidebarO9DataModelV14SelectionStateV23__derived_struct_equalsySbAG_AGtFZ_0((uint64_t *)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1005393EC(__int128 *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  _BYTE v5[24];
  __int128 v6[3];

  sub_10053AEB0(a1, v6);
  a2 += 16;
  swift_beginAccess(a2, v5, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v4 = result;
    sub_100539450(v6);
    return swift_release(v4);
  }
  return result;
}

void sub_100539450(__int128 *a1)
{
  _OWORD v2[3];
  __int128 v3;

  sub_10053AEB0(a1, v2);
  sub_10053AEB0(a1, &v3);
  __asm { BR              X10 }
}

uint64_t sub_1005394A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[8];
  v2 = v0[9];
  sub_10003F198(v0 + 5, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, v5, v1, v2);
}

uint64_t sub_100539638(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _BYTE v15[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  result = swift_weakLoadStrong(v4);
  if (result)
  {
    v6 = result;
    v7[0] = v2;
    v7[1] = v3;
    v8 = 0u;
    v9 = 0u;
    v10 = 0u;
    v11 = -1;
    v12 = 0u;
    v13 = 0u;
    v14 = 0;
    swift_bridgeObjectRetain(v3);
    PassthroughSubject.send(_:)(v7);
    swift_release(v6);
    sub_10053AE9C(v2, v3);
    swift_bridgeObjectRelease_n(0, 3);
    sub_100408DB0(0, 0, 0, 255);
    return swift_bridgeObjectRelease(0);
  }
  return result;
}

uint64_t sub_100539700(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _BYTE v15[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = xmmword_100720B80;
    v7 = v2;
    v8 = 0u;
    v9 = 0u;
    v10 = 0;
    v11 = -1;
    v12 = 0u;
    v13 = 0u;
    v14 = 0;
    swift_bridgeObjectRetain(v2);
    PassthroughSubject.send(_:)(&v6);
    swift_release(v5);
    sub_10053AE9C(0, 1);
    swift_bridgeObjectRelease_n(0, 2);
    swift_bridgeObjectRelease(v2);
    sub_100408DB0(0, 0, 0, 255);
    return swift_bridgeObjectRelease(0);
  }
  return result;
}

uint64_t sub_1005397E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  char v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _BYTE v15[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v15, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = xmmword_100720B80;
    v7 = 0;
    v8 = v2;
    v9 = 0u;
    v10 = 0u;
    v11 = -1;
    v12 = 0u;
    v13 = 0u;
    v14 = 0;
    swift_bridgeObjectRetain(v2);
    PassthroughSubject.send(_:)(&v6);
    swift_release(v5);
    sub_10053AE9C(0, 1);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease_n(0, 2);
    sub_100408DB0(0, 0, 0, 255);
    return swift_bridgeObjectRelease(0);
  }
  return result;
}

uint64_t sub_1005398B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;
  char v16;
  _BYTE v17[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v17, 0, 0);
  result = swift_weakLoadStrong(v3);
  if (result)
  {
    v5 = result;
    v6 = xmmword_100720B80;
    v7 = 0;
    v8 = 0;
    v9 = v2;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = -1;
    v14 = 0u;
    v15 = 0u;
    v16 = 0;
    swift_bridgeObjectRetain(v2);
    PassthroughSubject.send(_:)(&v6);
    swift_release(v5);
    sub_10053AE9C(0, 1);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease_n(0, 2);
    sub_100408DB0(0, 0, 0, 255);
    return swift_bridgeObjectRelease(0);
  }
  return result;
}

uint64_t sub_100539994(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char v16;
  __int128 v17;
  __int128 v18;
  char v19;
  _BYTE v20[24];

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v20, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (result)
  {
    v8 = result;
    v9 = xmmword_100720B80;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v13 = v2;
    v14 = v3;
    v15 = v4;
    v16 = v5;
    v17 = 0u;
    v18 = 0u;
    v19 = 0;
    sub_100408D78(v2, v3, v4, v5);
    PassthroughSubject.send(_:)(&v9);
    swift_release(v8);
    sub_10053AE9C(0, 1);
    swift_bridgeObjectRelease_n(0, 3);
    sub_100408DB0(v2, v3, v4, v5);
    return swift_bridgeObjectRelease(0);
  }
  return result;
}

uint64_t sub_100539A80(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  _OWORD v10[4];
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE v17[24];

  v3 = *a1;
  v2 = a1[1];
  v4 = *((unsigned __int8 *)a1 + 16);
  v5 = a1[3];
  v6 = a2 + 16;
  v7 = *((_BYTE *)a1 + 32);
  swift_beginAccess(a2 + 16, v17, 0, 0);
  result = swift_weakLoadStrong(v6);
  if (result)
  {
    v9 = result;
    v10[0] = xmmword_100720B80;
    memset(&v10[1], 0, 48);
    v11 = -1;
    v12 = v3;
    v13 = v2;
    v14 = v4;
    v15 = v5;
    v16 = v7;
    swift_bridgeObjectRetain(v2);
    PassthroughSubject.send(_:)(v10);
    swift_release(v9);
    sub_10053AE9C(0, 1);
    swift_bridgeObjectRelease_n(0, 3);
    sub_100408DB0(0, 0, 0, 255);
    return swift_bridgeObjectRelease(v2);
  }
  return result;
}

uint64_t sub_100539B68()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  _s5Books15CurrentPageViewVwxx_0(v0 + 5);
  return swift_deallocClassInstance(v0, 80, 7);
}

uint64_t _s5Books7SidebarO9DataModelV12AccountStateO21__derived_enum_equalsySbAG_AGtFZ_0(uint64_t a1, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, unint64_t a7, char a8)
{
  char v12;
  id v13;
  id v14;
  char v15;

  if (a4)
  {
    if (a4 == 1)
    {
      if (a8 == 1)
      {
        if (a2)
        {
          if (!a6
            || (a1 != a5 || a2 != a6) && (_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a5, a6, 0) & 1) == 0)
          {
            goto LABEL_18;
          }
        }
        else if (a6)
        {
          goto LABEL_18;
        }
        sub_10000A5D8();
        swift_bridgeObjectRetain(a6);
        v13 = (id)a7;
        swift_bridgeObjectRetain(a2);
        v14 = a3;
        v15 = static NSObject.== infix(_:_:)(v14, v13);

        swift_bridgeObjectRelease(a2);
        swift_bridgeObjectRelease(a6);
        if ((v15 & 1) != 0)
        {
LABEL_17:
          v12 = 1;
          return v12 & 1;
        }
      }
    }
    else if (a8 == 2 && !(a6 | a5 | a7))
    {
      goto LABEL_17;
    }
LABEL_18:
    v12 = 0;
    return v12 & 1;
  }
  if (a8)
    goto LABEL_18;
  v12 = ((a1 & 1) == 0) ^ a5;
  return v12 & 1;
}

uint64_t _s5Books7SidebarO9DataModelV12StandardItemV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    if (*((unsigned __int8 *)a1 + 16) == *(unsigned __int8 *)(a2 + 16))
    {
      v10 = a1[3];
      v11 = a1[4];
      v12 = *(_QWORD *)(a2 + 24);
      v13 = *(_QWORD *)(a2 + 32);
      v14 = v10 == v12 && v11 == v13;
      if (v14
        || (v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0), result = 0, (v15 & 1) != 0))
      {
        v16 = a1[5];
        v17 = a1[6];
        v18 = *(_QWORD *)(a2 + 40);
        v19 = *(_QWORD *)(a2 + 48);
        if (v16 == v18 && v17 == v19)
          return 1;
        else
          return _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0);
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t _s5Books7SidebarO9DataModelV14SelectionStateV23__derived_struct_equalsySbAG_AGtFZ_0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  char v9;

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0), v9 = 0, (v8 & 1) != 0))
  {
    if (*((unsigned __int8 *)a1 + 16) == *(unsigned __int8 *)(a2 + 16) && a1[3] == *(_QWORD *)(a2 + 24))
      v9 = ((a1[4] & 1) == 0) ^ *(_BYTE *)(a2 + 32);
    else
      v9 = 0;
  }
  return v9 & 1;
}

double _s9DataModelVwxx_0(uint64_t a1)
{
  uint64_t v2;
  int v3;
  double result;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2 != 1)
    swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255)
    sub_100408DC4(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(void **)(a1 + 56), v3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80)).n128_u64[0];
  return result;
}

uint64_t _s9DataModelVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    swift_bridgeObjectRetain(v4);
  }
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(unsigned __int8 *)(a2 + 64);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    v11 = *(void **)(a2 + 56);
    sub_100408D78(v9, v10, v11, v8);
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_BYTE *)(a1 + 64) = v8;
  }
  v12 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v12;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  swift_bridgeObjectRetain(v12);
  return a1;
}

uint64_t _s9DataModelVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    if (v5 != 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v6;
      swift_bridgeObjectRetain(v6);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 == 1)
  {
    sub_100210D88(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v4);
LABEL_8:
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v8);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v10);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v12);
  v14 = (__int128 *)(a1 + 40);
  v15 = (__int128 *)(a2 + 40);
  v16 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v16 == 255)
    {
      v28 = *v15;
      *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
      *v14 = v28;
    }
    else
    {
      v24 = *(_QWORD *)(a2 + 40);
      v25 = *(_QWORD *)(a2 + 48);
      v26 = *(void **)(a2 + 56);
      sub_100408D78(v24, v25, v26, *(_BYTE *)(a2 + 64));
      *(_QWORD *)(a1 + 40) = v24;
      *(_QWORD *)(a1 + 48) = v25;
      *(_QWORD *)(a1 + 56) = v26;
      *(_BYTE *)(a1 + 64) = v16;
    }
  }
  else if (v16 == 255)
  {
    sub_10053A134(a1 + 40);
    v27 = *(_OWORD *)(a2 + 49);
    *v14 = *v15;
    *(_OWORD *)(a1 + 49) = v27;
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 40);
    v18 = *(_QWORD *)(a2 + 48);
    v19 = *(void **)(a2 + 56);
    sub_100408D78(v17, v18, v19, *(_BYTE *)(a2 + 64));
    v20 = *(_QWORD *)(a1 + 40);
    v21 = *(_QWORD *)(a1 + 48);
    v22 = *(void **)(a1 + 56);
    *(_QWORD *)(a1 + 40) = v17;
    *(_QWORD *)(a1 + 48) = v18;
    *(_QWORD *)(a1 + 56) = v19;
    v23 = *(_BYTE *)(a1 + 64);
    *(_BYTE *)(a1 + 64) = v16;
    sub_100408DC4(v20, v21, v22, v23);
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v29 = *(_QWORD *)(a2 + 80);
  v30 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t sub_10053A134(uint64_t a1)
{
  sub_100408DC4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
  return a1;
}

__n128 _s9DataModelVwtk(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s9DataModelVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 == 1)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 == 1)
  {
    sub_100210D88(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
LABEL_6:
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v8);
  v9 = *(unsigned __int8 *)(a1 + 64);
  if (v9 == 255)
  {
LABEL_10:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
    goto LABEL_11;
  }
  v10 = *(unsigned __int8 *)(a2 + 64);
  if (v10 == 255)
  {
    sub_10053A134(a1 + 40);
    goto LABEL_10;
  }
  v11 = *(_QWORD *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v10;
  sub_100408DC4(v12, v13, v14, v9);
LABEL_11:
  v15 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v15;
  swift_bridgeObjectRelease(v16);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t _s9DataModelVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 105))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s9DataModelVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 105) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Sidebar.DataModel()
{
  return &type metadata for Sidebar.DataModel;
}

ValueMetadata *type metadata accessor for Sidebar.DataModel.SearchBar()
{
  return &type metadata for Sidebar.DataModel.SearchBar;
}

uint64_t _s9DataModelV12StandardItemVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  return swift_bridgeObjectRelease(a1[6]);
}

uint64_t _s9DataModelV12StandardItemVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t _s9DataModelV12StandardItemVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t _s9DataModelV12StandardItemVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t _s9DataModelV12StandardItemVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s9DataModelV12StandardItemVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Sidebar.DataModel.StandardItem()
{
  return &type metadata for Sidebar.DataModel.StandardItem;
}

uint64_t _s9DataModelV17DefaultCollectionVwCP(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t _s9DataModelV17DefaultCollectionVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t _s9DataModelV17DefaultCollectionVwta(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for Sidebar.DataModel.DefaultCollection()
{
  return &type metadata for Sidebar.DataModel.DefaultCollection;
}

ValueMetadata *type metadata accessor for Sidebar.DataModel.UserCollection()
{
  return &type metadata for Sidebar.DataModel.UserCollection;
}

void _s9DataModelV7AccountVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));

}

_QWORD *_s9DataModelV7AccountVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain(v3);
  v5 = v4;
  return a1;
}

_QWORD *_s9DataModelV7AccountVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  return a1;
}

_QWORD *_s9DataModelV7AccountVwta(_QWORD *a1, uint64_t a2)
{
  void *v4;

  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(a1[1]);
  v4 = (void *)a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for Sidebar.DataModel.Account()
{
  return &type metadata for Sidebar.DataModel.Account;
}

uint64_t _s9DataModelV12AccountStateOwxx(uint64_t a1)
{
  return sub_100408DC4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t _s9DataModelV12AccountStateOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_100408D78(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s9DataModelV12AccountStateOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_100408D78(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_100408DC4(v7, v8, v9, v10);
  return a1;
}

uint64_t _s9DataModelV12AccountStateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_100408DC4(v5, v7, v6, v8);
  return a1;
}

uint64_t _s9DataModelV12AccountStateOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s9DataModelV12AccountStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_10053A95C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_10053A974(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Sidebar.DataModel.AccountState()
{
  return &type metadata for Sidebar.DataModel.AccountState;
}

uint64_t _s9DataModelV14SelectionStateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t _s9DataModelV14SelectionStateVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t _s9DataModelV14SelectionStateVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for SidebarViewModel.AccountInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SidebarViewModel.AccountInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Sidebar.DataModel.SelectionState()
{
  return &type metadata for Sidebar.DataModel.SelectionState;
}

uint64_t type metadata accessor for SidebarInteractor()
{
  return objc_opt_self(_TtC5Books17SidebarInteractor);
}

id sub_10053AB50(id result, void *a2, uint64_t a3, void *a4, void *a5, char a6)
{
  switch(a6)
  {
    case 0:
      return result;
    case 1:
    case 6:
      result = a2;
      goto LABEL_5;
    case 2:
    case 3:
      swift_bridgeObjectRetain(a2);
      result = a4;
      goto LABEL_5;
    case 4:
      goto LABEL_5;
    case 5:
    case 7:
      swift_bridgeObjectRetain(result);
      swift_bridgeObjectRetain(a3);
      result = a5;
LABEL_5:
      result = (id)swift_bridgeObjectRetain(result);
      break;
    default:
      return result;
  }
  return result;
}

void _s17InteractingActionOwxx_0(uint64_t a1)
{
  sub_10053AC04(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(_BYTE *)(a1 + 40));
}

void sub_10053AC04(void *a1, void *a2, uint64_t a3, void *a4, void *a5, char a6)
{
  switch(a6)
  {
    case 0:

      return;
    case 1:
    case 6:
      a1 = a2;
      goto LABEL_5;
    case 2:
    case 3:
      swift_bridgeObjectRelease(a2);
      a1 = a4;
      goto LABEL_5;
    case 4:
      goto LABEL_5;
    case 5:
    case 7:
      swift_bridgeObjectRelease(a1);
      swift_bridgeObjectRelease(a3);
      a1 = a5;
LABEL_5:
      swift_bridgeObjectRelease(a1);
      break;
    default:
      return;
  }
}

uint64_t _s17InteractingActionOwcp(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(void **)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_10053AB50(*(id *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t _s17InteractingActionOwca_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char v14;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(void **)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_10053AB50(*(id *)a2, v4, v5, v6, v7, v8);
  v9 = *(void **)a1;
  v10 = *(void **)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(void **)(a1 + 24);
  v13 = *(void **)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_10053AC04(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t _s17InteractingActionOwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(void **)(a1 + 24);
  v9 = *(void **)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_10053AC04(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t _s17InteractingActionOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 249);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 7)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s17InteractingActionOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_10053AE84(uint64_t result, char a2)
{
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *_s17InteractingActionOMa_0()
{
  return &_s17InteractingActionON_0;
}

uint64_t sub_10053AE9C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

_OWORD *sub_10053AEB0(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_10053AEC8(uint64_t a1)
{
  sub_10053AC04(*(void **)a1, *(void **)(a1 + 8), *(_QWORD *)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

uint64_t initializeWithCopy for CurrentPageView(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

_QWORD *assignWithCopy for CurrentPageView(_QWORD *a1, _QWORD *a2)
{
  sub_1001EAB00(a1, a2);
  return a1;
}

uint64_t assignWithTake for CurrentPageView(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for CurrentPageView()
{
  return &type metadata for CurrentPageView;
}

uint64_t sub_10053AFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10053B0B8();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10053AFFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_10053B0B8();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10053B04C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10053B0B8();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

unint64_t sub_10053B074()
{
  unint64_t result;

  result = qword_1009EA6A8;
  if (!qword_1009EA6A8)
  {
    result = swift_getWitnessTable(&unk_10072C318, &type metadata for CurrentPageView);
    atomic_store(result, (unint64_t *)&qword_1009EA6A8);
  }
  return result;
}

unint64_t sub_10053B0B8()
{
  unint64_t result;

  result = qword_1009EA6B0;
  if (!qword_1009EA6B0)
  {
    result = swift_getWitnessTable(&unk_10072C368, &type metadata for CurrentPageView);
    atomic_store(result, (unint64_t *)&qword_1009EA6B0);
  }
  return result;
}

id sub_10053B1DC(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  objc_super v16;

  v9 = &v4[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item];
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *(_DWORD *)(v9 + 63) = 0;
  v10 = &v4[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingDelegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingLeadingConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingLeadingAXConstraint] = 0;
  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for SidebarLabelListCell();
  v11 = objc_msgSendSuper2(&v16, "initWithFrame:", a1, a2, a3, a4);
  sub_100009E04(0, &qword_1009E7710, UITraitCollection_ptr);
  v12 = v11;
  v13 = static UITraitCollection.bc_allAPITraits.getter();
  v14 = UIView.registerForTraitChanges(_:action:)(v13, "_traitCollectionDidChangeWithSender:previousTraitCollection:");

  swift_unknownObjectRelease(v14);
  swift_bridgeObjectRelease(v13);
  return v12;
}

id sub_10053B320(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v3 = &v1[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *(_DWORD *)(v3 + 63) = 0;
  v4 = &v1[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingDelegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4);
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingLeadingConstraint] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingLeadingAXConstraint] = 0;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for SidebarLabelListCell();
  v5 = objc_msgSendSuper2(&v10, "initWithCoder:", a1);
  if (v5)
  {
    sub_100009E04(0, &qword_1009E7710, UITraitCollection_ptr);
    v6 = v5;
    v7 = static UITraitCollection.bc_allAPITraits.getter();
    v8 = UIView.registerForTraitChanges(_:action:)(v7, "_traitCollectionDidChangeWithSender:previousTraitCollection:");

    swift_unknownObjectRelease(v8);
    swift_bridgeObjectRelease(v7);
  }
  else
  {

  }
  return v5;
}

uint64_t sub_10053B458()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  Class isa;
  objc_class *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(__int128 *, _QWORD);
  _QWORD *v23;
  __int128 v25;
  __int128 v26;
  void *v27;
  objc_super v28;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009EA710);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - v6;
  isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v9 = (objc_class *)type metadata accessor for SidebarLabelListCell();
  v28.receiver = v1;
  v28.super_class = v9;
  objc_msgSendSuper2(&v28, "_bridgedUpdateConfigurationUsingState:", isa);

  v11 = (void *)UICellConfigurationState.traitCollection.getter(v10);
  sub_10053C0AC(v11);

  UICollectionViewCell.contentConfiguration.getter(&v25);
  if (*((_QWORD *)&v26 + 1))
  {
    v12 = sub_10004CFD4(&qword_1009EA720);
    v13 = type metadata accessor for UIListContentConfiguration(0);
    v14 = swift_dynamicCast(v7, &v25, v12, v13, 6);
    v15 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, v14 ^ 1u, 1, v13);
  }
  else
  {
    sub_100010960((uint64_t)&v25, &qword_1009EA718);
    v13 = type metadata accessor for UIListContentConfiguration(0);
    v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  }
  v16 = (void *)UICellConfigurationState.traitCollection.getter(v15);
  v17 = objc_msgSend(v16, "preferredContentSizeCategory");

  v18 = UIContentSizeCategory.isAccessibilityCategory.getter(v17);
  type metadata accessor for UIListContentConfiguration(0);
  v19 = *(_QWORD *)(v13 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (!v20(v7, 1, v13))
  {
    if ((v18 & 1) != 0)
      v21 = 3;
    else
      v21 = 2;
    v22 = (void (*)(__int128 *, _QWORD))UIListContentConfiguration.textProperties.modify(&v25);
    UIListContentConfiguration.TextProperties.numberOfLines.setter(v21);
    v22(&v25, 0);
  }
  sub_10053CDA4((uint64_t)v7, (uint64_t)v4);
  if (v20(v4, 1, v13) == 1)
  {
    sub_100010960((uint64_t)v4, &qword_1009EA710);
    v25 = 0u;
    v26 = 0u;
    v27 = 0;
  }
  else
  {
    *((_QWORD *)&v26 + 1) = v13;
    v27 = &protocol witness table for UIListContentConfiguration;
    v23 = sub_1000257F8(&v25);
    (*(void (**)(_QWORD *, char *, uint64_t))(v19 + 32))(v23, v4, v13);
  }
  UICollectionViewCell.contentConfiguration.setter(&v25);
  return sub_100010960((uint64_t)v7, &qword_1009EA710);
}

uint64_t sub_10053B778(char a1, char a2)
{
  char *v2;
  uint64_t result;
  uint64_t v6;
  void *v7;
  const char *v8;
  char *v9;

  result = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingDelegate]);
  if (result)
  {
    if ((objc_msgSend(v2, "isEditing", swift_unknownObjectRelease(result).n128_f64[0]) & 1) == 0
      && (a1 & 1) != 0)
    {
      sub_10053BAF4(1);
      sub_10053C32C(1);
    }
    result = (uint64_t)objc_msgSend(v2, "isEditing");
    if ((result & 1) != 0 || (a1 & 1) != 0)
    {
      sub_10053BAF4(0);
      v6 = OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField;
      v7 = *(void **)&v2[OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField];
      if (v7)
        objc_msgSend(v7, "becomeFirstResponder");
      sub_10053BAF4(0);
      result = *(_QWORD *)&v2[v6];
      if ((a2 & 1) != 0)
      {
        if (result)
          objc_msgSend((id)result, "setText:", 0);
        sub_10053BAF4(0);
        result = *(_QWORD *)&v2[v6];
        if (!result)
          return result;
        v8 = "setPlaceholder:";
        v9 = 0;
      }
      else
      {
        if (!result)
          return result;
        v8 = "selectAll:";
        v9 = v2;
      }
      return (uint64_t)objc_msgSend((id)result, v8, v9);
    }
  }
  return result;
}

void sub_10053B87C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  int v10;
  char *v11;
  void *v12;
  id v13;
  uint64_t v14;
  objc_super v15;

  v15.receiver = v0;
  v15.super_class = (Class)type metadata accessor for SidebarLabelListCell();
  objc_msgSendSuper2(&v15, "prepareForReuse");
  v1 = &v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item];
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item];
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item + 8];
  v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item + 16];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item + 24];
  v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item + 32];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item + 40];
  v8 = *(void **)&v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item + 48];
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item + 56];
  v10 = *(unsigned __int16 *)&v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item + 64] | (v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_item + 66] << 16);
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((_OWORD *)v1 + 2) = 0u;
  *((_OWORD *)v1 + 3) = 0u;
  *(_DWORD *)(v1 + 63) = 0;
  LODWORD(v14) = v10;
  sub_10049EEF0(v2, v3, v4, v5, v6, v7, v8, v9);
  v11 = &v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingDelegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakAssign(v11, 0);
  objc_msgSend(v0, "setEditing:", 0, v14);
  sub_10053BAF4(0);
  v12 = *(void **)&v0[OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField];
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v13, "setHidden:", 1);
    objc_msgSend(v13, "setUserInteractionEnabled:", 0);
    objc_msgSend(v13, "setText:", 0);
    objc_msgSend(v13, "setPlaceholder:", 0);

  }
}

void sub_10053BA40(void *a1)
{
  void *v1;
  id v2;
  char v3;
  id v4;
  id v5;

  if (a1)
  {
    v2 = objc_msgSend(a1, "preferredContentSizeCategory");
    v3 = UIContentSizeCategory.isAccessibilityCategory.getter(v2);

  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  LODWORD(v4) = UIContentSizeCategory.isAccessibilityCategory.getter(v5) & 1;
  if ((v3 & 1) != (_DWORD)v4)
    sub_10053C0AC(0);
}

void sub_10053BAF4(char a1)
{
  char *v1;
  char *v2;
  uint64_t Strong;
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  Class isa;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;

  v2 = v1;
  Strong = swift_unknownObjectWeakLoadStrong(&v2[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingDelegate]);
  if (Strong)
  {
    *(_QWORD *)&v5 = swift_unknownObjectRelease(Strong).n128_u64[0];
    v6 = OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField;
    if (!*(_QWORD *)&v2[OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField]
      && ((objc_msgSend(v2, "isEditing", v5) & 1) != 0 || (a1 & 1) != 0))
    {
      v48 = objc_msgSend(v2, "contentView");
      v7 = objc_opt_self(UIListContentView);
      v8 = (void *)swift_dynamicCastObjCClass(v48, v7);
      if (v8 && (v9 = v8, (v10 = objc_msgSend(v8, "textLayoutGuide")) != 0))
      {
        v11 = v10;
        v12 = objc_msgSend(v9, "imageLayoutGuide");
        if (v12)
        {
          v13 = v12;
          v14 = objc_msgSend(objc_allocWithZone((Class)UITextField), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
          objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
          objc_msgSend(v9, "addSubview:", v14);
          v15 = objc_msgSend(v14, "leadingAnchor");
          v16 = objc_msgSend(v11, "leadingAnchor");
          v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

          v18 = *(void **)&v2[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingLeadingConstraint];
          *(_QWORD *)&v2[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingLeadingConstraint] = v17;

          v19 = objc_msgSend(v14, "leadingAnchor");
          v20 = objc_msgSend(v13, "trailingAnchor");
          v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

          v22 = *(void **)&v2[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingLeadingAXConstraint];
          *(_QWORD *)&v2[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingLeadingAXConstraint] = v21;

          sub_10053C0AC(0);
          v23 = (void *)objc_opt_self(NSLayoutConstraint);
          v24 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
          v25 = swift_allocObject(v24, 56, 7);
          *(_OWORD *)(v25 + 16) = xmmword_1007118D0;
          v26 = objc_msgSend(v14, "trailingAnchor");
          v27 = objc_msgSend(v2, "contentView");
          v47 = v13;
          v28 = objc_msgSend(v27, "layoutMarginsGuide");

          v29 = objc_msgSend(v28, "trailingAnchor");
          v30 = objc_msgSend(v26, "constraintEqualToAnchor:", v29);

          *(_QWORD *)(v25 + 32) = v30;
          v31 = objc_msgSend(v14, "topAnchor");
          v32 = objc_msgSend(v11, "topAnchor");
          v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

          *(_QWORD *)(v25 + 40) = v33;
          v34 = objc_msgSend(v14, "bottomAnchor");
          v35 = objc_msgSend(v11, "bottomAnchor");
          v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

          *(_QWORD *)(v25 + 48) = v36;
          specialized Array._endMutation()(v37);
          sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend(v23, "activateConstraints:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

          objc_msgSend(v14, "setEnablesReturnKeyAutomatically:", 1);
          objc_msgSend(v14, "setKeyboardType:", 0);
          objc_msgSend(v14, "setReturnKeyType:", 9);
          objc_msgSend(v14, "setDelegate:", v2);
          objc_msgSend(v14, "setAdjustsFontForContentSizeCategory:", 1);
          v39 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
          objc_msgSend(v14, "setFont:", v39);

          v40 = *(void **)&v2[v6];
          *(_QWORD *)&v2[v6] = v14;
          v41 = v14;

          sub_10053BAF4(0);
          v42 = *(void **)&v2[v6];
          if (v42)
          {
            v43 = v42;
            objc_msgSend(v43, "setHidden:", 1);
            objc_msgSend(v43, "setUserInteractionEnabled:", 0);
            objc_msgSend(v43, "setText:", 0);
            objc_msgSend(v43, "setPlaceholder:", 0);

            v44 = v11;
            v11 = v47;
            v45 = v41;
            v41 = v43;
          }
          else
          {
            v45 = v47;
            v44 = v48;
          }

          v46 = v45;
          v11 = v41;
        }
        else
        {
          v46 = v48;
        }

      }
      else
      {

      }
    }
  }
}

void sub_10053C0AC(void *a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  id v18;
  id v19;
  id v20;
  int v21;
  _QWORD v23[5];

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009EA710);
  __chkstk_darwin(v4);
  v6 = (char *)&v23[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)&v1[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingLeadingConstraint];
  if (!v7)
    return;
  v8 = *(void **)&v1[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingLeadingAXConstraint];
  if (!v8)
    return;
  v9 = v7;
  v10 = v8;
  UICollectionViewCell.contentConfiguration.getter(v23);
  if (v23[3])
  {
    v11 = sub_10004CFD4(&qword_1009EA720);
    v12 = type metadata accessor for UIListContentConfiguration(0);
    v13 = swift_dynamicCast(v6, v23, v11, v12, 6);
    v14 = *(_QWORD *)(v12 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v6, v13 ^ 1u, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v12) != 1)
    {
      v15 = UIListContentConfiguration.imageToTextPadding.getter();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v12);
      goto LABEL_8;
    }
  }
  else
  {
    sub_100010960((uint64_t)v23, &qword_1009EA718);
    v16 = type metadata accessor for UIListContentConfiguration(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  }
  sub_100010960((uint64_t)v6, &qword_1009EA710);
  v15 = 0.0;
LABEL_8:
  objc_msgSend(v10, "constant");
  if (v17 != v15)
  {
    objc_msgSend(v10, "setConstant:", v15);
    if (a1)
      goto LABEL_10;
LABEL_12:
    v18 = objc_msgSend(v2, "traitCollection");
    goto LABEL_13;
  }
  if (!a1)
    goto LABEL_12;
LABEL_10:
  v18 = a1;
LABEL_13:
  v19 = a1;
  v20 = objc_msgSend(v18, "preferredContentSizeCategory");
  v21 = UIContentSizeCategory.isAccessibilityCategory.getter();

  if (((v21 ^ objc_msgSend(v9, "isActive")) & 1) == 0)
    objc_msgSend(v9, "setActive:", (v21 & 1) == 0);
  if ((v21 & 1) != objc_msgSend(v10, "isActive"))
    objc_msgSend(v10, "setActive:");

}

void sub_10053C32C(int a1)
{
  char *v1;
  uint64_t Strong;
  void *v4;
  char v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  char *v13;
  char isEscapingClosureAtFileLocation;
  id v15;
  _QWORD aBlock[5];
  uint64_t v17;

  Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC5Books20SidebarLabelListCell_inlineEditingDelegate]);
  if (Strong)
  {
    swift_unknownObjectRelease(Strong);
    sub_10053BAF4(0);
    v4 = *(void **)&v1[OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField];
    if (v4)
    {
      v15 = v4;
      if (((objc_msgSend(v15, "isHidden") ^ a1) & 1) != 0)
      {

      }
      else
      {
        v5 = a1 ^ 1;
        v6 = a1 & 1;
        objc_msgSend(v15, "setUserInteractionEnabled:", a1 & 1);
        v7 = (void *)objc_opt_self(UIView);
        v8 = swift_allocObject(&unk_10090EB18, 41, 7);
        *(_QWORD *)(v8 + 16) = v15;
        *(_BYTE *)(v8 + 24) = v5 & 1;
        *(_QWORD *)(v8 + 32) = v1;
        *(_BYTE *)(v8 + 40) = v6;
        v9 = swift_allocObject(&unk_10090EB40, 32, 7);
        *(_QWORD *)(v9 + 16) = sub_10053CD80;
        *(_QWORD *)(v9 + 24) = v8;
        aBlock[4] = sub_100238D90;
        v17 = v9;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100605AE4;
        aBlock[3] = &unk_10090EB58;
        v10 = _Block_copy(aBlock);
        v11 = v17;
        v12 = v15;
        v13 = v1;
        swift_retain(v9);
        objc_msgSend(v7, "performWithoutAnimation:", v10, swift_release(v11).n128_f64[0]);

        _Block_release(v10);
        isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v9, "", 106, 198, 40, 1);
        swift_release(v8);
        swift_release(v9);
        if ((isEscapingClosureAtFileLocation & 1) != 0)
          __break(1u);
      }
    }
  }
}

uint64_t sub_10053C518(void *a1, char a2, void *a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  NSString v22;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  NSString v33;
  _QWORD *v34;
  id v35;
  _QWORD v37[3];
  uint64_t v38;
  void *v39;

  v8 = sub_10004CFD4(&qword_1009EA710);
  __chkstk_darwin(v8);
  v10 = (char *)&v37[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UIListContentConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v37[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, "setHidden:", a2 & 1, v13);
  UICollectionViewCell.contentConfiguration.getter(v37);
  if (!v38)
  {
    sub_100010960((uint64_t)v37, &qword_1009EA718);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    return sub_100010960((uint64_t)v10, &qword_1009EA710);
  }
  v16 = sub_10004CFD4(&qword_1009EA720);
  v17 = swift_dynamicCast(v10, v37, v16, v11, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, v17 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_100010960((uint64_t)v10, &qword_1009EA710);
  v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
  if ((a4 & 1) != 0)
  {
    UIListContentConfiguration.text.getter(v18);
    if (v19)
    {
      v21 = v19;
      v22 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v20 = swift_bridgeObjectRelease(v21).n128_u64[0];
    }
    else
    {
      v22 = 0;
    }
    objc_msgSend(a1, "setText:", v22, v20);

    UIListContentConfiguration.text.getter(v29);
    if (v30)
    {
      v32 = v30;
      v33 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v31 = swift_bridgeObjectRelease(v32).n128_u64[0];
    }
    else
    {
      v33 = 0;
    }
    objc_msgSend(a1, "setPlaceholder:", v33, v31);

    UIListContentConfiguration.text.setter(32, 0xE100000000000000);
  }
  else
  {
    v24 = objc_msgSend(a1, "text");
    if (v24)
    {
      v25 = v24;
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v24);
      v28 = v27;

    }
    else
    {
      v26 = 0;
      v28 = 0;
    }
    UIListContentConfiguration.text.setter(v26, v28);
    objc_msgSend(a1, "setText:", 0);
    objc_msgSend(a1, "setPlaceholder:", 0);
  }
  v38 = v11;
  v39 = &protocol witness table for UIListContentConfiguration;
  v34 = sub_1000257F8(v37);
  (*(void (**)(_QWORD *, char *, uint64_t))(v12 + 16))(v34, v15, v11);
  UICollectionViewCell.contentConfiguration.setter(v37);
  v35 = objc_msgSend(a3, "contentView");
  objc_msgSend(v35, "layoutBelowIfNeeded");

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
}

id sub_10053C818()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SidebarLabelListCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SidebarLabelListCell()
{
  return objc_opt_self(_TtC5Books20SidebarLabelListCell);
}

uint64_t sub_10053CA28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v22[5];

  v1 = sub_10004CFD4(&qword_1009EA710);
  __chkstk_darwin(v1);
  v3 = (char *)&v22[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10053BAF4(0);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField);
  if (v4 && (objc_msgSend(v4, "isEditing") & 1) != 0)
    return 0;
  v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Books20SidebarLabelListCell_item);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books20SidebarLabelListCell_item + 8);
  if (!v6)
  {
    UICollectionViewCell.contentConfiguration.getter(v22);
    if (v22[3])
    {
      v14 = sub_10004CFD4(&qword_1009EA720);
      v15 = type metadata accessor for UIListContentConfiguration(0);
      v16 = swift_dynamicCast(v3, v22, v14, v15, 6);
      v17 = *(_QWORD *)(v15 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v3, v16 ^ 1u, 1, v15);
      v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v3, 1, v15);
      if ((_DWORD)v18 != 1)
      {
        v11 = UIListContentConfiguration.text.getter(v18);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v15);
        return v11;
      }
    }
    else
    {
      sub_100010960((uint64_t)v22, &qword_1009EA718);
      v19 = type metadata accessor for UIListContentConfiguration(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 1, 1, v19);
    }
    sub_100010960((uint64_t)v3, &qword_1009EA710);
    return 0;
  }
  v8 = (void *)v5[6];
  v7 = v5[7];
  v10 = v5[4];
  v9 = v5[5];
  v11 = v5[2];
  v12 = v5[3];
  v13 = *v5;
  sub_10053CCFC(*v5, v6, v11, v12, v10, v9, v8, v7);
  swift_bridgeObjectRetain(v12);
  sub_10049EEF0(v13, v6, v11, v12, v10, v9, v8, v7);
  return v11;
}

uint64_t sub_10053CC60()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;

  sub_10053BAF4(0);
  v1 = OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC5Books20SidebarLabelListCell__inlineEditingTextField);
  if (!v2)
    return 0;
  if (!objc_msgSend(v2, "isEditing"))
    return 0;
  sub_10053BAF4(0);
  v3 = *(void **)(v0 + v1);
  if (!v3)
    return 0;
  v4 = objc_msgSend(v3, "text");
  if (!v4)
    return 0;
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);

  return v6;
}

uint64_t sub_10053CCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  id v12;
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRetain(a6);
    v12 = a7;
    return swift_bridgeObjectRetain(a8);
  }
  return result;
}

uint64_t sub_10053CD54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10053CD80()
{
  uint64_t v0;

  return sub_10053C518(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_10053CD94()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10053CDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EA710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053CDEC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EA728);
  sub_100048F64(v0, (uint64_t)qword_1009EA728);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000002CLL, 0x80000001007D1F90);
}

void sub_10053CE68(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];
  __int128 v8;
  uint64_t v9;
  _BYTE v10[24];

  v3 = v1 + OBJC_IVAR___BKMediaTypeRecommendationProvider____lazy_storage___recommendationService;
  swift_beginAccess(v1 + OBJC_IVAR___BKMediaTypeRecommendationProvider____lazy_storage___recommendationService, v10, 0, 0);
  sub_10000B5E4(v3, (uint64_t)&v8, &qword_1009EA770);
  if (v9)
  {
    sub_100022840(&v8, a1);
  }
  else
  {
    sub_100010960((uint64_t)&v8, &qword_1009EA770);
    v4 = sub_100059BB4();
    v5 = (void *)static OS_dispatch_queue.main.getter(v4);
    v6 = sub_10004CFD4(&qword_1009EA778);
    OS_dispatch_queue.syncValue<A>(_:)(&v8, sub_10053CF78, 0, v6);

    if (v9)
    {
      sub_100022840(&v8, a1);
      sub_10002E418(a1, (uint64_t)&v8);
      swift_beginAccess(v3, v7, 33, 0);
      sub_10053D790((uint64_t)&v8, v3);
      swift_endAccess(v7);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10053CF78()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  v0 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v1 = objc_msgSend(v0, "containerHost");
  sub_1000145A0(v6);

  v2 = v7;
  v3 = v8;
  sub_10003F198(v6, v7);
  v4 = sub_10004CFD4(&qword_1009EA778);
  dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);

  return _s5Books15CurrentPageViewVwxx_0(v6);
}

uint64_t sub_10053D034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  unint64_t v6;

  v5[8] = a4;
  v5[9] = a5;
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009E02F0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[10] = swift_task_alloc(v6);
  v5[11] = swift_task_alloc(v6);
  return swift_task_switch(sub_10053D0A0, 0, 0);
}

uint64_t sub_10053D0A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  sub_10053CE68((uint64_t)(v0 + 2));
  v1 = v0[5];
  v2 = v0[6];
  sub_10003F198(v0 + 2, v1);
  v3 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of MediaTypeRecommendationServiceType.fetchRecommendedMediaType()[1]);
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_10053D124;
  return dispatch thunk of MediaTypeRecommendationServiceType.fetchRecommendedMediaType()(v0[10], v1, v2);
}

uint64_t sub_10053D124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc(v2);
  if (v0)
    v3 = sub_10053D264;
  else
    v3 = sub_10053D188;
  return swift_task_switch(v3, 0, 0);
}

uint64_t sub_10053D188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  JSValue v3;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::Int v7;
  Swift::OpaquePointer_optional v9;

  sub_10053D884(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3.super.isa = *(Class *)(v0 + 72);
  v4 = (void *)sub_10053D4F0(v2);
  v5 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v6._countAndFlagsBits = 0x80000001007D1F10;
  v9.value._rawValue = v4;
  v9.is_nil = 113;
  v6._object = (void *)52;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v3, v9, v6, v7);

  swift_bridgeObjectRelease(v4);
  sub_100010960(v2, &qword_1009E02F0);
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053D264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  JSValue v16;
  void *v17;
  id v18;
  Swift::String v19;
  Swift::Int v20;
  Swift::OpaquePointer_optional v22;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  if (qword_1009CE810 != -1)
    swift_once(&qword_1009CE810, sub_10053CDEC);
  v1 = *(_QWORD *)(v0 + 104);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009EA728);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 104);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    swift_errorRetain(v7);
    v10 = _swift_stdlib_bridgeErrorToNSError(v7);
    *(_QWORD *)(v0 + 56) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to fetch recommended media type: %@", v8, 0xCu);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 104));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  v12 = *(_QWORD *)(v0 + 88);
  v13 = type metadata accessor for Book.MediaType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = *(_QWORD *)(v0 + 80);
  v15 = *(_QWORD *)(v0 + 88);
  v16.super.isa = *(Class *)(v0 + 72);
  v17 = (void *)sub_10053D4F0(v15);
  v18 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v19._countAndFlagsBits = 0x80000001007D1F10;
  v22.value._rawValue = v17;
  v22.is_nil = 113;
  v19._object = (void *)52;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v16, v22, v19, v20);

  swift_bridgeObjectRelease(v17);
  sub_100010960(v15, &qword_1009E02F0);
  swift_task_dealloc(v15);
  swift_task_dealloc(v14);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053D4F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = sub_10004CFD4(&qword_1009E02F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Book.MediaType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v4, &qword_1009E02F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100010960((uint64_t)v4, &qword_1009E02F0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = sub_10004CFD4(&qword_1009D4B80);
    v9 = swift_allocObject(v10, 64, 7);
    *(_OWORD *)(v9 + 16) = xmmword_10070CCA0;
    v11 = Book.MediaType.rawValue.getter(v9);
    *(_QWORD *)(v9 + 56) = &type metadata for String;
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

id sub_10053D738()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaTypeRecommendationProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10053D790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EA770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053D7D8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10053D80C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009EA784);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000AE34;
  return sub_10053D034(a1, v4, v5, v7, v6);
}

uint64_t sub_10053D884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E02F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Swift::Void __swiftcall LibraryCollectionTitleView.contentDidChange()()
{
  char *v0;
  double v1;
  uint64_t Strong;
  void *v3;
  double v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for LibraryCollectionTitleView();
  objc_msgSendSuper2(&v5, "contentDidChange");
  objc_msgSend(v0, "largeTitleHeight");
  if (v1 >= 0.0)
  {
    Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR___BKLibraryCollectionTitleView_delegate]);
    if (Strong)
    {
      v3 = (void *)Strong;
      objc_msgSend(v0, "largeTitleHeight");
      objc_msgSend(v3, "largeTitleVisibilityDidChangeWithIsVisible:", v4 > 20.0);
      swift_unknownObjectRelease(v3);
    }
  }
}

uint64_t type metadata accessor for LibraryCollectionTitleView()
{
  return objc_opt_self(BKLibraryCollectionTitleView);
}

id LibraryCollectionTitleView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_super v10;

  *(_QWORD *)&v4[OBJC_IVAR___BKLibraryCollectionTitleView_minHeightThatCountsAsVisible] = 0x4034000000000000;
  swift_unknownObjectWeakInit(&v4[OBJC_IVAR___BKLibraryCollectionTitleView_delegate]);
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for LibraryCollectionTitleView();
  return objc_msgSendSuper2(&v10, "initWithFrame:", a1, a2, a3, a4);
}

id LibraryCollectionTitleView.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___BKLibraryCollectionTitleView_minHeightThatCountsAsVisible] = 0x4034000000000000;
  swift_unknownObjectWeakInit(&v1[OBJC_IVAR___BKLibraryCollectionTitleView_delegate]);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LibraryCollectionTitleView();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id LibraryCollectionTitleView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LibraryCollectionTitleView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10053DC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD v22[4];

  v6 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000B5E4(a1, (uint64_t)v8, &qword_1009D3150);
  v9 = type metadata accessor for TaskPriority(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100010960((uint64_t)v8, &qword_1009D3150);
    v11 = 4096;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
    {
LABEL_3:
      v13 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v12);
      v15 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v13);
      v17 = v16;
      swift_unknownObjectRelease(v12);
      goto LABEL_6;
    }
  }
  else
  {
    v18 = TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    v11 = v18 | 0x1000;
    v12 = *(_QWORD *)(a3 + 16);
    if (v12)
      goto LABEL_3;
  }
  v15 = 0;
  v17 = 0;
LABEL_6:
  v19 = swift_allocObject(&unk_10090EC18, 32, 7);
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  if (v17 | v15)
  {
    v22[0] = 0;
    v22[1] = 0;
    v20 = v22;
    v22[2] = v15;
    v22[3] = v17;
  }
  else
  {
    v20 = 0;
  }
  return swift_task_create(v11, v20, (char *)&type metadata for () + 8, &unk_1009DF3C0, v19);
}

uint64_t sub_10053DDB8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1005422FC(a1, a2);
  *a3 = result;
  return result;
}

void sub_10053DDDC(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_10053DDE8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10002CDDC();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10053DE10(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10002CDDC();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10053DE38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = sub_10004CFD4(&qword_1009EAA00);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10003F198(a1, v9);
  v11 = sub_10002CDDC();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for YearInReview.RemoteConfiguration.DateRange.CodingKeys, &type metadata for YearInReview.RemoteConfiguration.DateRange.CodingKeys, v11, v9, v10);
  v23 = 0;
  v12 = sub_10004CFD4(&qword_1009E0B78);
  v13 = sub_100542244();
  KeyedEncodingContainer.encode<A>(_:forKey:)(v3, &v23, v5, v12, v13);
  if (!v2)
  {
    v14 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
    v15 = v3 + *(int *)(v14 + 20);
    v22 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)(v15, &v22, v5, v12, v13);
    v16 = (uint64_t *)(v3 + *(int *)(v14 + 24));
    v17 = *v16;
    v18 = *((unsigned __int8 *)v16 + 8);
    v21 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v17, v18, &v21, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10053DFBC(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  char v20;
  char v21;
  char v22;

  v3 = v1;
  v5 = sub_10004CFD4(&qword_1009EA9C8);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_10003F198(a1, v9);
  v11 = sub_10006BF00();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for YearInReview.RemoteConfiguration.CodingKeys, &type metadata for YearInReview.RemoteConfiguration.CodingKeys, v11, v9, v10);
  v12 = *v3;
  v22 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v12, &v22, v5);
  if (!v2)
  {
    v13 = type metadata accessor for YearInReview.RemoteConfiguration(0);
    v14 = (char *)v3 + *(int *)(v13 + 20);
    v21 = 1;
    v15 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
    v16 = sub_100008DB0(&qword_1009EA9D0, type metadata accessor for YearInReview.RemoteConfiguration.DateRange, (uint64_t)&unk_10072C5A8);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v14, &v21, v5, v15, v16);
    v17 = (char *)v3 + *(int *)(v13 + 24);
    v20 = 2;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v17, &v20, v5, v15, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10053E150(_QWORD *a1)
{
  return sub_10053DE38(a1);
}

uint64_t sub_10053E164@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_100542480(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10053E188(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10006BF00();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10053E1B0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10006BF00();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10053E1D8(_QWORD *a1)
{
  return sub_10053DFBC(a1);
}

uint64_t sub_10053E1EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008DB0((unint64_t *)&qword_1009D32E8, type metadata accessor for YearInReview.RemoteConfiguration, (uint64_t)&unk_10072C620);
  return ReflectedStringConvertible.description.getter(a1, v2);
}

unint64_t sub_10053E22C(uint64_t a1, void *a2)
{
  unint64_t v2;
  Swift::String v5;

  v2 = 0xD000000000000012;
  if (!a2)
    return 0xD000000000000026;
  if (a2 == (void *)1)
    return 0xD000000000000021;
  if (a2 != (void *)2)
  {
    _StringGuts.grow(_:)(32);
    swift_bridgeObjectRelease(0xE000000000000000);
    v5._countAndFlagsBits = a1;
    v5._object = a2;
    String.append(_:)(v5);
    return 0xD00000000000001ELL;
  }
  return v2;
}

unint64_t sub_10053E2F8()
{
  uint64_t v0;

  return sub_10053E22C(*(_QWORD *)v0, *(void **)(v0 + 8));
}

id YearInReviewEligibilityService.__deallocating_deinit()
{
  void *v0;
  objc_class *ObjectType;
  id v2;
  id v3;
  void *v4;
  objc_super v6;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v3 = v0;
  v4 = (void *)static NSNotificationName.rcDataContainerConfigDidChange.getter(v3);
  objc_msgSend(v2, "removeObserver:name:object:", v3, v4, 0);

  v6.receiver = v3;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "dealloc");
}

void sub_10053E4CC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  void **v37;
  void *v38;
  id v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43[3];

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009E3A20);
  __chkstk_darwin(v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - v9;
  __chkstk_darwin(v11);
  v13 = (char *)&v40 - v12;
  sub_100017CBC((uint64_t)&v40 - v12);
  if (qword_1009CE818 != -1)
    swift_once(&qword_1009CE818, sub_1000086FC);
  v14 = type metadata accessor for Logger(0);
  sub_100048F64(v14, (uint64_t)qword_1009EA7C8);
  v15 = sub_10000B5E4((uint64_t)v13, (uint64_t)v10, &qword_1009E3A20);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.info.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v41 = v0;
    v18 = (uint8_t *)swift_slowAlloc(12, -1);
    v40 = swift_slowAlloc(32, -1);
    v43[0] = v40;
    *(_DWORD *)v18 = 136315138;
    sub_10000B5E4((uint64_t)v10, (uint64_t)v7, &qword_1009E3A20);
    v19 = type metadata accessor for YearInReview.RemoteConfiguration(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v7, 1, v19) == 1)
    {
      sub_100010960((uint64_t)v7, &qword_1009E3A20);
      v20 = 0;
      v21 = 0;
    }
    else
    {
      v22 = sub_100008DB0((unint64_t *)&qword_1009D32E8, type metadata accessor for YearInReview.RemoteConfiguration, (uint64_t)&unk_10072C620);
      v20 = ReflectedStringConvertible.description.getter(v19, v22);
      v21 = v23;
      sub_10002C8F0((uint64_t)v7, type metadata accessor for YearInReview.RemoteConfiguration);
    }
    v24 = Optional<A>.description.getter(v20, v21);
    v26 = v25;
    swift_bridgeObjectRelease(v21);
    v42 = sub_100040F58(v24, v26, v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43, v18 + 4, v18 + 12);
    swift_bridgeObjectRelease(v26);
    sub_100010960((uint64_t)v10, &qword_1009E3A20);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "RemoteConfiguration did change: %s", v18, 0xCu);
    v27 = v40;
    swift_arrayDestroy(v40, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v1 = v41;
  }
  else
  {
    sub_100010960((uint64_t)v10, &qword_1009E3A20);

  }
  v28 = *(_QWORD *)&v1[OBJC_IVAR___BKYearInReviewEligibilityService_eligibilityProvider];
  if (!v28)
  {
    __break(1u);
    goto LABEL_15;
  }
  v29 = v28 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider_config;
  swift_beginAccess(v28 + OBJC_IVAR____TtC5Books36YearInReviewEntryEligibilityProvider_config, v43, 33, 0);
  swift_retain(v28);
  sub_100542D04((uint64_t)v13, v29);
  swift_endAccess(v43);
  swift_release(v28);
  v30 = *(_QWORD *)&v1[OBJC_IVAR___BKYearInReviewEligibilityService_notificationScheduler];
  if (!v30)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v31 = v30 + OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_config;
  swift_beginAccess(v30 + OBJC_IVAR____TtC5Books33YearInReviewNotificationScheduler_config, v43, 33, 0);
  swift_retain(v30);
  sub_100542D04((uint64_t)v13, v31);
  swift_endAccess(v43);
  swift_release(v30);
  static TaskPriority.low.getter(v32);
  v33 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v4, 0, 1, v33);
  v34 = (_QWORD *)swift_allocObject(&unk_10090ED70, 40, 7);
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = v1;
  v35 = v1;
  v36 = sub_10053DC20((uint64_t)v4, (uint64_t)&unk_1009EAA68, (uint64_t)v34);
  swift_release(v36);
  sub_100010960((uint64_t)v4, &qword_1009D3150);
  v37 = (void **)&v35[OBJC_IVAR___BKYearInReviewEligibilityService_topPicksObserver];
  swift_beginAccess(&v35[OBJC_IVAR___BKYearInReviewEligibilityService_topPicksObserver], v43, 32, 0);
  v38 = *v37;
  if (v38)
  {
    swift_endAccess(v43);
    v39 = v38;
    sub_1000217BC();

    sub_100010960((uint64_t)v13, &qword_1009E3A20);
  }
  else
  {
    sub_100010960((uint64_t)v13, &qword_1009E3A20);
    swift_endAccess(v43);
  }
}

uint64_t sub_10053EA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 64) = a4;
  return swift_task_switch(sub_10053EA38, 0, 0);
}

void sub_10053EA38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0[8] + OBJC_IVAR___BKYearInReviewEligibilityService_notificationScheduler);
  v0[9] = v1;
  if (v1)
  {
    v2 = dword_1009E0B6C;
    swift_retain(v1);
    v3 = (_QWORD *)swift_task_alloc(v2);
    v0[10] = v3;
    *v3 = v0;
    v3[1] = sub_10053EAA4;
    sub_10001F358();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10053EAA4(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 80);
  *(_BYTE *)(v3 + 96) = a1;
  *(_QWORD *)(v3 + 88) = v1;
  swift_task_dealloc(v4);
  if (v1)
  {
    v5 = sub_10053ED38;
  }
  else
  {
    swift_release(*(_QWORD *)(v3 + 72));
    v5 = sub_10053EB1C;
  }
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10053EB1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  _DWORD *v6;

  if (qword_1009CE818 != -1)
    swift_once(&qword_1009CE818, sub_1000086FC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048F64(v1, (uint64_t)qword_1009EA7C8);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.info.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(unsigned __int8 *)(v0 + 96);
    v6 = (_DWORD *)swift_slowAlloc(12, -1);
    swift_slowAlloc(32, -1);
    *v6 = 136315138;
    __asm { BR              X9 }
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053ED38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  swift_release(*(_QWORD *)(v0 + 72));
  if (qword_1009CE818 != -1)
    swift_once(&qword_1009CE818, sub_1000086FC);
  v1 = *(_QWORD *)(v0 + 88);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009EA7C8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 88);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v0 + 40, v0 + 16);
    v10 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    v12 = v11;
    *(_QWORD *)(v0 + 48) = sub_100040F58(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Notification scheduling failed with error: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 88));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053EF30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch(sub_10053EF48, 0, 0);
}

uint64_t sub_10053EF48()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = *(void **)(v0[16] + OBJC_IVAR___BKYearInReviewEligibilityService_setupPromise);
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_10053EFE8;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_10021A668;
  v4[3] = &unk_10090ECD0;
  v4[4] = v3;
  objc_msgSend(v2, "resultWithCompletion:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_10053EFE8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 136) = v1;
  if (v1)
    v2 = sub_10053F078;
  else
    v2 = sub_10053F048;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10053F048()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053F078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 136);
  swift_willThrow(a1);
  swift_errorRelease(v2);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t YearInReviewEligibilityService.setupState.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR___BKYearInReviewEligibilityService__setupState));
}

void sub_10053F160()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;

  v1 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v2 = objc_msgSend(v1, "environment");

  v3 = objc_msgSend(v2, "context");
  v4 = swift_allocObject(&unk_10090ECF8, 24, 7);
  *(_QWORD *)(v4 + 16) = v0;
  v9[4] = sub_100542BF8;
  v10 = v4;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_10000B7BC;
  v9[3] = &unk_10090ED10;
  v5 = _Block_copy(v9);
  v6 = v10;
  v7 = v0;
  swift_release(v6);
  v8 = objc_msgSend((id)objc_opt_self(JSValue), "valueWithNewPromiseInContext:fromExecutor:", v3, v5);

  _Block_release(v5);
  if (!v8)
    __break(1u);
}

void sub_10053F298(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v5 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v13 = a1;
    if ((JSValue.isFunction.getter() & 1) != 0)
    {
      v8 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
      v9 = (_QWORD *)swift_allocObject(&unk_10090ED48, 48, 7);
      v9[2] = 0;
      v9[3] = 0;
      v9[4] = a3;
      v9[5] = v13;
      v10 = a3;
      v11 = sub_10030C02C((uint64_t)v7, (uint64_t)&unk_1009EAA58, (uint64_t)v9);
      swift_release(v11);
    }
    else
    {

    }
  }
}

uint64_t sub_10053F398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;

  v5[5] = a4;
  v5[6] = a5;
  v7 = (_QWORD *)swift_task_alloc(dword_1009EAA3C);
  v5[7] = v7;
  *v7 = v5;
  v7[1] = sub_10053F3FC;
  v7[16] = a4;
  return swift_task_switch(sub_10053EF48, 0, 0);
}

uint64_t sub_10053F3FC()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 56));
  return swift_task_switch(sub_10053F450, 0, 0);
}

uint64_t sub_10053F450()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  JSValue v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  Swift::Int v12;
  Swift::String v13;
  Swift::Int v14;
  Swift::OpaquePointer_optional v16;
  Swift::OpaquePointer_optional v17;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR___BKYearInReviewEligibilityService_topPicksObserver);
  swift_beginAccess(v1, v0 + 16, 0, 0);
  v2 = *v1;
  v3.super.isa = *(Class *)(v0 + 48);
  if (v2)
  {
    v4 = *(void **)(v2 + OBJC_IVAR____TtC5Books29TopPicksCardConditionObserver_isEligible);
    v5 = (void *)objc_opt_self(JSABridge);
    v6 = v4;
    v7 = objc_msgSend(v5, "sharedInstance");
    v8 = sub_10004CFD4(&qword_1009D4B80);
    v9 = swift_allocObject(v8, 64, 7);
    *(_OWORD *)(v9 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v9 + 56) = sub_100542CC8();
    *(_QWORD *)(v9 + 32) = v6;
    v10 = v6;
    v11._countAndFlagsBits = 0x80000001007D21E0;
    v16.value._rawValue = (void *)v9;
    v16.is_nil = 124;
    v11._object = (void *)237;
    JSABridge.enqueueValueCall(_:arguments:f:l:)(v3, v16, v11, v12);
    swift_bridgeObjectRelease(v9);

  }
  else
  {
    v10 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
    v13._countAndFlagsBits = 0x80000001007D21E0;
    v17.value._rawValue = _swiftEmptyArrayStorage;
    v17.is_nil = 124;
    v13._object = (void *)234;
    JSABridge.enqueueValueCall(_:arguments:f:l:)(v3, v17, v13, v14);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10053F640(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  char v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSString v15;
  id v16;

  if (!objc_msgSend(a1, "isNumber"))
    goto LABEL_11;
  v3 = objc_msgSend(a1, "toNumber");
  if (!v3)
    goto LABEL_11;
  v4 = v3;
  v5 = objc_msgSend(v3, "integerValue");
  if (v5)
  {
    if (v5 == (id)1)
    {
      v6 = 1;
      goto LABEL_7;
    }

LABEL_11:
    v11 = sub_100542B90();
    Error.localizedDescription.getter(&type metadata for YearInReviewEligibilityService.ServiceError, v11);
    v13 = v12;
    v14 = objc_msgSend(a1, "context", 0, 2);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    v16 = objc_msgSend((id)objc_opt_self(JSValue), "valueWithNewErrorFromMessage:inContext:", v15, v14);

    if (v16)
      return;
    __break(1u);
    goto LABEL_13;
  }
  v6 = 0;
LABEL_7:
  v7 = *(_QWORD *)(v1 + OBJC_IVAR___BKYearInReviewEligibilityService_eligibilityProvider);
  if (v7)
  {
    swift_retain(v7);
    v8 = sub_10002BF4C(v6);
    v9 = objc_msgSend(a1, "context", swift_release(v7).n128_f64[0]);
    v10 = objc_msgSend((id)objc_opt_self(JSValue), "valueWithBool:inContext:", v8 & 1, v9);

    if (v10)
    {

      return;
    }
    goto LABEL_14;
  }
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

void sub_10053F83C(void *a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;

  v3 = objc_msgSend(a1, "context");
  v4 = swift_allocObject(&unk_10090EC40, 32, 7);
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v1;
  v10[4] = sub_1005422F4;
  v11 = v4;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10000B7BC;
  v10[3] = &unk_10090EC58;
  v5 = _Block_copy(v10);
  v6 = v11;
  v7 = a1;
  v8 = v1;
  swift_release(v6);
  v9 = objc_msgSend((id)objc_opt_self(JSValue), "valueWithNewPromiseInContext:fromExecutor:", v3, v5);

  _Block_release(v5);
  if (!v9)
    __break(1u);
}

void sub_10053F93C(void *a1, void *a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  char v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  JSValue v25;
  uint64_t v26;
  id v27;

  v8 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v27 = a1;
    if ((JSValue.isFunction.getter(v27, v11) & 1) != 0)
    {
      if (objc_msgSend(a3, "isNumber"))
      {
        v12 = objc_msgSend(a3, "toNumber");
        if (v12)
        {
          v13 = v12;
          v14 = objc_msgSend(v12, "integerValue");
          if ((unint64_t)v14 < 3)
          {
            v15 = (char)v14;
            v16 = (_QWORD *)swift_allocObject(&unk_10090EC90, 40, 7);
            v16[2] = a4;
            v16[3] = a2;
            v16[4] = v27;
            v17 = type metadata accessor for TaskPriority(0);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
            v18 = swift_allocObject(&unk_10090ECB8, 72, 7);
            *(_QWORD *)(v18 + 16) = 0;
            *(_QWORD *)(v18 + 24) = 0;
            *(_QWORD *)(v18 + 32) = a4;
            *(_BYTE *)(v18 + 40) = v15;
            *(_QWORD *)(v18 + 48) = v27;
            *(_QWORD *)(v18 + 56) = sub_100542810;
            *(_QWORD *)(v18 + 64) = v16;
            v19 = a2;
            swift_retain(v16);
            v20 = v27;
            v21 = a4;
            v22 = v20;
            v23 = v21;
            v24 = sub_100488750((uint64_t)v10, (uint64_t)&unk_1009EAA30, v18);
            swift_release(v24);
            swift_release(v16);

            return;
          }

        }
      }
      v25.super.isa = (Class)v27;
      sub_1005425F4(0, 1uLL, a2, v25);
    }

  }
}

uint64_t sub_10053FB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v10;

  *(_QWORD *)(v8 + 136) = a7;
  *(_QWORD *)(v8 + 144) = a8;
  *(_BYTE *)(v8 + 184) = a5;
  *(_QWORD *)(v8 + 120) = a4;
  *(_QWORD *)(v8 + 128) = a6;
  v10 = (_QWORD *)swift_task_alloc(dword_1009EAA3C);
  *(_QWORD *)(v8 + 152) = v10;
  *v10 = v8;
  v10[1] = sub_10053FB98;
  v10[16] = a4;
  return swift_task_switch(sub_10053EF48, 0, 0);
}

uint64_t sub_10053FB98()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_task_switch(sub_10053FBEC, 0, 0);
}

void sub_10053FBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 120) + OBJC_IVAR___BKYearInReviewEligibilityService_eligibilityProvider);
  *(_QWORD *)(v0 + 160) = v1;
  if (v1)
  {
    v2 = dword_1009E3A2C;
    swift_retain(v1);
    v3 = (_QWORD *)swift_task_alloc(v2);
    *(_QWORD *)(v0 + 168) = v3;
    *v3 = v0;
    v3[1] = sub_10053FC60;
    sub_100444458(*(_BYTE *)(v0 + 184));
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10053FC60(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 168);
  *(_QWORD *)(*v2 + 176) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_10053FDB0;
  }
  else
  {
    swift_release(*(_QWORD *)(v4 + 160));
    *(_BYTE *)(v4 + 185) = a1 & 1;
    v6 = sub_10053FCE0;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10053FCE0()
{
  uint64_t v0;
  char v1;
  JSValue v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  Swift::Int v7;
  Swift::OpaquePointer_optional v9;

  v1 = *(_BYTE *)(v0 + 185);
  v2.super.isa = *(Class *)(v0 + 128);
  v3 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v4 = sub_10004CFD4(&qword_1009D4B80);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v5 + 56) = &type metadata for Bool;
  *(_BYTE *)(v5 + 32) = v1;
  v6._countAndFlagsBits = 0x80000001007D21E0;
  v9.value._rawValue = (void *)v5;
  v9.is_nil = 124;
  v6._object = (void *)286;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(v2, v9, v6, v7);
  swift_bridgeObjectRelease(v5);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10053FDB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD *);
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = v0[22];
  swift_release(v0[20]);
  v0[14] = v1;
  swift_errorRetain(v1);
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
  if ((swift_dynamicCast(v0 + 12, v0 + 14, v2, &_s16EligibilityErrorON, 0) & 1) != 0)
  {
    swift_errorRelease(v0[22]);
    v3 = v0[13];
    v4 = (void (*)(_QWORD *))v0[17];
    if (v3)
    {
      v5 = v0 + 2;
      v6 = v0[12];
      v0[5] = &type metadata for YearInReviewEligibilityService.ServiceError;
      v0[6] = sub_100542938();
      v0[2] = v6;
      v0[3] = v3;
    }
    else
    {
      v0[10] = &type metadata for YearInReviewEligibilityService.ServiceError;
      v0[11] = sub_100542938();
      v0[7] = 0;
      v0[8] = 0;
      v5 = v0 + 7;
    }
    v4(v5);
    _s5Books15CurrentPageViewVwxx_0(v5);
    swift_errorRelease(v0[14]);
    v7 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    swift_errorRelease(v0[14]);
    v7 = (uint64_t (*)(void))v0[1];
  }
  return v7();
}

ValueMetadata *type metadata accessor for YearInReview()
{
  return &type metadata for YearInReview;
}

uint64_t *sub_10053FF10(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      v13 = sub_10004CFD4(&qword_1009E3A40);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v44 = v11;
      v15 = type metadata accessor for Date(0);
      v16 = *(_QWORD *)(v15 - 8);
      v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v42 = v16;
      if (v43(v9, 1, v15))
      {
        v17 = sub_10004CFD4(&qword_1009D7440);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v9, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
      }
      v18 = *(int *)(v10 + 20);
      v19 = &v8[v18];
      v20 = &v9[v18];
      if (v43(&v9[v18], 1, v15))
      {
        v21 = sub_10004CFD4(&qword_1009D7440);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v19, v20, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v19, 0, 1, v15);
      }
      v22 = *(int *)(v10 + 24);
      v23 = &v8[v22];
      v24 = &v9[v22];
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v11 = v44;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v8, 0, 1, v10);
    }
    v25 = *(int *)(a3 + 24);
    v26 = (char *)v4 + v25;
    v27 = (char *)a2 + v25;
    if (v12(v27, 1, v10))
    {
      v28 = sub_10004CFD4(&qword_1009E3A40);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = type metadata accessor for Date(0);
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      v32 = v11;
      if (v31(v27, 1, v29))
      {
        v33 = sub_10004CFD4(&qword_1009D7440);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v26, v27, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
      }
      v34 = *(int *)(v10 + 20);
      v35 = &v26[v34];
      v36 = &v27[v34];
      if (v31(&v27[v34], 1, v29))
      {
        v37 = sub_10004CFD4(&qword_1009D7440);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v35, v36, v29);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v35, 0, 1, v29);
      }
      v38 = *(int *)(v10 + 24);
      v39 = &v26[v38];
      v40 = &v27[v38];
      *(_QWORD *)v39 = *(_QWORD *)v40;
      v39[8] = v40[8];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v26, 0, 1, v10);
    }
  }
  return v4;
}

uint64_t sub_100540288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    if (!v9(v4, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v7);
    v10 = v4 + *(int *)(v5 + 20);
    if (!v9(v10, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  }
  v11 = a1 + *(int *)(a2 + 24);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v11, 1, v5);
  if (!(_DWORD)result)
  {
    v13 = type metadata accessor for Date(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(v11, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v11, v13);
    v16 = v11 + *(int *)(v5 + 20);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(v16, 1, v13);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v16, v13);
  }
  return result;
}

_QWORD *sub_1005403E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = sub_10004CFD4(&qword_1009E3A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v42 = v10;
    v13 = type metadata accessor for Date(0);
    v14 = *(_QWORD *)(v13 - 8);
    v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v40 = v14;
    if (v41(v8, 1, v13))
    {
      v15 = sub_10004CFD4(&qword_1009D7440);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v7, v8, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    }
    v16 = *(int *)(v9 + 20);
    v17 = &v7[v16];
    v18 = &v8[v16];
    if (v41(&v8[v16], 1, v13))
    {
      v19 = sub_10004CFD4(&qword_1009D7440);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v17, v18, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v17, 0, 1, v13);
    }
    v20 = *(int *)(v9 + 24);
    v21 = &v7[v20];
    v22 = &v8[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v10 = v42;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v7, 0, 1, v9);
  }
  v23 = *(int *)(a3 + 24);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  if (v11(v25, 1, v9))
  {
    v26 = sub_10004CFD4(&qword_1009E3A40);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for Date(0);
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    v30 = v10;
    if (v29(v25, 1, v27))
    {
      v31 = sub_10004CFD4(&qword_1009D7440);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v24, v25, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
    }
    v32 = *(int *)(v9 + 20);
    v33 = &v24[v32];
    v34 = &v25[v32];
    if (v29(&v25[v32], 1, v27))
    {
      v35 = sub_10004CFD4(&qword_1009D7440);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v33, v34, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v33, 0, 1, v27);
    }
    v36 = *(int *)(v9 + 24);
    v37 = &v24[v36];
    v38 = &v25[v36];
    *(_QWORD *)v37 = *(_QWORD *)v38;
    v37[8] = v38[8];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_100540734(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;

  v3 = a3;
  v5 = a1;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_10002C8F0((uint64_t)v7, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
      goto LABEL_7;
    }
    v79 = v3;
    v81 = v10;
    v19 = type metadata accessor for Date(0);
    v77 = *(_QWORD *)(v19 - 8);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    v21 = v20(v7, 1, v19);
    v22 = v20(v8, 1, v19);
    v83 = v5;
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v7, v8, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v7, 0, 1, v19);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 24))(v7, v8, v19);
LABEL_19:
        v32 = *(int *)(v9 + 20);
        v33 = &v7[v32];
        v34 = &v8[v32];
        v35 = v20(&v7[v32], 1, v19);
        v36 = v20(v34, 1, v19);
        if (v35)
        {
          v10 = v81;
          if (!v36)
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v33, v34, v19);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v33, 0, 1, v19);
LABEL_25:
            v5 = v83;
            v3 = v79;
            v38 = *(int *)(v9 + 24);
            v39 = &v7[v38];
            v40 = &v8[v38];
            v41 = *(_QWORD *)v40;
            v39[8] = v40[8];
            *(_QWORD *)v39 = v41;
            goto LABEL_26;
          }
        }
        else
        {
          v10 = v81;
          if (!v36)
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 24))(v33, v34, v19);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v77 + 8))(v33, v19);
        }
        v37 = sub_10004CFD4(&qword_1009D7440);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v77 + 8))(v7, v19);
    }
    v31 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    v18 = sub_10004CFD4(&qword_1009E3A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_26;
  }
  v78 = v3;
  v82 = v5;
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v80 = v10;
  if (v16(v8, 1, v14))
  {
    v17 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v23 = *(int *)(v9 + 20);
  v24 = &v7[v23];
  v25 = &v8[v23];
  if (v16(&v8[v23], 1, v14))
  {
    v26 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v24, v25, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
  }
  v10 = v80;
  v5 = v82;
  v3 = v78;
  v27 = *(int *)(v9 + 24);
  v28 = &v7[v27];
  v29 = &v8[v27];
  v30 = *(_QWORD *)v29;
  v28[8] = v29[8];
  *(_QWORD *)v28 = v30;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v7, 0, 1, v9);
LABEL_26:
  v42 = *(int *)(v3 + 24);
  v43 = (char *)v5 + v42;
  v44 = (char *)a2 + v42;
  v45 = v11((char *)v5 + v42, 1, v9);
  v46 = v11(v44, 1, v9);
  if (!v45)
  {
    if (v46)
    {
      sub_10002C8F0((uint64_t)v43, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
      goto LABEL_32;
    }
    v52 = type metadata accessor for Date(0);
    v53 = *(_QWORD *)(v52 - 8);
    v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
    v55 = v54(v43, 1, v52);
    v56 = v54(v44, 1, v52);
    if (v55)
    {
      if (!v56)
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v43, v44, v52);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v43, 0, 1, v52);
        goto LABEL_44;
      }
    }
    else
    {
      if (!v56)
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v43, v44, v52);
LABEL_44:
        v66 = *(int *)(v9 + 20);
        v67 = &v43[v66];
        v68 = &v44[v66];
        v69 = v54(&v43[v66], 1, v52);
        v70 = v54(v68, 1, v52);
        if (v69)
        {
          if (!v70)
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v67, v68, v52);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v67, 0, 1, v52);
LABEL_50:
            v72 = *(int *)(v9 + 24);
            v73 = &v43[v72];
            v74 = &v44[v72];
            v75 = *(_QWORD *)v74;
            v73[8] = v74[8];
            *(_QWORD *)v73 = v75;
            return v5;
          }
        }
        else
        {
          if (!v70)
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v67, v68, v52);
            goto LABEL_50;
          }
          (*(void (**)(char *, uint64_t))(v53 + 8))(v67, v52);
        }
        v71 = sub_10004CFD4(&qword_1009D7440);
        memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        goto LABEL_50;
      }
      (*(void (**)(char *, uint64_t))(v53 + 8))(v43, v52);
    }
    v65 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    goto LABEL_44;
  }
  if (v46)
  {
LABEL_32:
    v51 = sub_10004CFD4(&qword_1009E3A40);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    return v5;
  }
  v47 = type metadata accessor for Date(0);
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  if (v49(v44, 1, v47))
  {
    v50 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v43, v44, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v43, 0, 1, v47);
  }
  v57 = *(int *)(v9 + 20);
  v58 = &v43[v57];
  v59 = &v44[v57];
  if (v49(&v44[v57], 1, v47))
  {
    v60 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v58, v59, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v58, 0, 1, v47);
  }
  v61 = *(int *)(v9 + 24);
  v62 = &v43[v61];
  v63 = &v44[v61];
  v64 = *(_QWORD *)v63;
  v62[8] = v63[8];
  *(_QWORD *)v62 = v64;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v43, 0, 1, v9);
  return v5;
}

_QWORD *sub_100540E1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = sub_10004CFD4(&qword_1009E3A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v42 = v10;
    v13 = type metadata accessor for Date(0);
    v14 = *(_QWORD *)(v13 - 8);
    v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    v40 = v14;
    if (v41(v8, 1, v13))
    {
      v15 = sub_10004CFD4(&qword_1009D7440);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v7, v8, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
    }
    v16 = *(int *)(v9 + 20);
    v17 = &v7[v16];
    v18 = &v8[v16];
    if (v41(&v8[v16], 1, v13))
    {
      v19 = sub_10004CFD4(&qword_1009D7440);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v17, v18, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v17, 0, 1, v13);
    }
    v20 = *(int *)(v9 + 24);
    v21 = &v7[v20];
    v22 = &v8[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v10 = v42;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v7, 0, 1, v9);
  }
  v23 = *(int *)(a3 + 24);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  if (v11(v25, 1, v9))
  {
    v26 = sub_10004CFD4(&qword_1009E3A40);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = type metadata accessor for Date(0);
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    v30 = v10;
    if (v29(v25, 1, v27))
    {
      v31 = sub_10004CFD4(&qword_1009D7440);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v24, v25, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v24, 0, 1, v27);
    }
    v32 = *(int *)(v9 + 20);
    v33 = &v24[v32];
    v34 = &v25[v32];
    if (v29(&v25[v32], 1, v27))
    {
      v35 = sub_10004CFD4(&qword_1009D7440);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v33, v34, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v33, 0, 1, v27);
    }
    v36 = *(int *)(v9 + 24);
    v37 = &v24[v36];
    v38 = &v25[v36];
    *(_QWORD *)v37 = *(_QWORD *)v38;
    v37[8] = v38[8];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_100541168(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;

  v3 = a3;
  v5 = a1;
  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for YearInReview.RemoteConfiguration.DateRange(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_10002C8F0((uint64_t)v7, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
      goto LABEL_7;
    }
    v75 = v3;
    v77 = v10;
    v19 = type metadata accessor for Date(0);
    v73 = *(_QWORD *)(v19 - 8);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
    v21 = v20(v7, 1, v19);
    v22 = v20(v8, 1, v19);
    v79 = v5;
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v7, v8, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v7, 0, 1, v19);
        goto LABEL_19;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v7, v8, v19);
LABEL_19:
        v31 = *(int *)(v9 + 20);
        v32 = &v7[v31];
        v33 = &v8[v31];
        v34 = v20(&v7[v31], 1, v19);
        v35 = v20(v33, 1, v19);
        if (v34)
        {
          v10 = v77;
          if (!v35)
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v32, v33, v19);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v32, 0, 1, v19);
LABEL_25:
            v5 = v79;
            v3 = v75;
            v37 = *(int *)(v9 + 24);
            v38 = &v7[v37];
            v39 = &v8[v37];
            *(_QWORD *)v38 = *(_QWORD *)v39;
            v38[8] = v39[8];
            goto LABEL_26;
          }
        }
        else
        {
          v10 = v77;
          if (!v35)
          {
            (*(void (**)(char *, char *, uint64_t))(v73 + 40))(v32, v33, v19);
            goto LABEL_25;
          }
          (*(void (**)(char *, uint64_t))(v73 + 8))(v32, v19);
        }
        v36 = sub_10004CFD4(&qword_1009D7440);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v7, v19);
    }
    v30 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  if (v13)
  {
LABEL_7:
    v18 = sub_10004CFD4(&qword_1009E3A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_26;
  }
  v74 = v3;
  v78 = v5;
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v76 = v10;
  if (v16(v8, 1, v14))
  {
    v17 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, v8, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v23 = *(int *)(v9 + 20);
  v24 = &v7[v23];
  v25 = &v8[v23];
  if (v16(&v8[v23], 1, v14))
  {
    v26 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v24, v25, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
  }
  v10 = v76;
  v5 = v78;
  v3 = v74;
  v27 = *(int *)(v9 + 24);
  v28 = &v7[v27];
  v29 = &v8[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v29[8];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v7, 0, 1, v9);
LABEL_26:
  v40 = *(int *)(v3 + 24);
  v41 = (char *)v5 + v40;
  v42 = (char *)a2 + v40;
  v43 = v11((char *)v5 + v40, 1, v9);
  v44 = v11(v42, 1, v9);
  if (!v43)
  {
    if (v44)
    {
      sub_10002C8F0((uint64_t)v41, type metadata accessor for YearInReview.RemoteConfiguration.DateRange);
      goto LABEL_32;
    }
    v50 = type metadata accessor for Date(0);
    v51 = *(_QWORD *)(v50 - 8);
    v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
    v53 = v52(v41, 1, v50);
    v54 = v52(v42, 1, v50);
    if (v53)
    {
      if (!v54)
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v41, v42, v50);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v41, 0, 1, v50);
        goto LABEL_44;
      }
    }
    else
    {
      if (!v54)
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v41, v42, v50);
LABEL_44:
        v63 = *(int *)(v9 + 20);
        v64 = &v41[v63];
        v65 = &v42[v63];
        v66 = v52(&v41[v63], 1, v50);
        v67 = v52(v65, 1, v50);
        if (v66)
        {
          if (!v67)
          {
            (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v64, v65, v50);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v64, 0, 1, v50);
LABEL_50:
            v69 = *(int *)(v9 + 24);
            v70 = &v41[v69];
            v71 = &v42[v69];
            *(_QWORD *)v70 = *(_QWORD *)v71;
            v70[8] = v71[8];
            return v5;
          }
        }
        else
        {
          if (!v67)
          {
            (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v64, v65, v50);
            goto LABEL_50;
          }
          (*(void (**)(char *, uint64_t))(v51 + 8))(v64, v50);
        }
        v68 = sub_10004CFD4(&qword_1009D7440);
        memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        goto LABEL_50;
      }
      (*(void (**)(char *, uint64_t))(v51 + 8))(v41, v50);
    }
    v62 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_44;
  }
  if (v44)
  {
LABEL_32:
    v49 = sub_10004CFD4(&qword_1009E3A40);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    return v5;
  }
  v45 = type metadata accessor for Date(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
  if (v47(v42, 1, v45))
  {
    v48 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v41, v42, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v41, 0, 1, v45);
  }
  v55 = *(int *)(v9 + 20);
  v56 = &v41[v55];
  v57 = &v42[v55];
  if (v47(&v42[v55], 1, v45))
  {
    v58 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v56, v57, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v56, 0, 1, v45);
  }
  v59 = *(int *)(v9 + 24);
  v60 = &v41[v59];
  v61 = &v42[v59];
  *(_QWORD *)v60 = *(_QWORD *)v61;
  v60[8] = v61[8];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
  return v5;
}

uint64_t sub_100541850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_10004CFD4(&qword_1009E3A40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v6);
}

uint64_t sub_1005418A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = sub_10004CFD4(&qword_1009E3A40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, v7);
}

uint64_t *sub_1005418F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v11);
  }
  else
  {
    v7 = type metadata accessor for Date(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = sub_10004CFD4(&qword_1009D7440);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v12 = *(int *)(a3 + 20);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      v15 = sub_10004CFD4(&qword_1009D7440);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    v16 = *(int *)(a3 + 24);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
  }
  return a1;
}

uint64_t sub_100541A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v4);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  return result;
}

char *sub_100541B08(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = sub_10004CFD4(&qword_1009D7440);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  return a1;
}

char *sub_100541C4C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_10004CFD4(&qword_1009D7440);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  v18 = *(int *)(a3 + 24);
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *(_QWORD *)v20;
  v19[8] = v20[8];
  *(_QWORD *)v19 = v21;
  return a1;
}

char *sub_100541E20(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = sub_10004CFD4(&qword_1009D7440);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v10 = *(int *)(a3 + 20);
  v11 = &a1[v10];
  v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    v13 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 24);
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  return a1;
}

char *sub_100541F64(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = sub_10004CFD4(&qword_1009D7440);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v8(&a1[v12], 1, v6);
  v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    v17 = sub_10004CFD4(&qword_1009D7440);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  v18 = *(int *)(a3 + 24);
  v19 = &a1[v18];
  v20 = &a2[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  return a1;
}

uint64_t sub_100542138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E0B78);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100542178(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E0B78);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1005421C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1009EA97C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1001FC2C4;
  v3[8] = v2;
  return swift_task_switch(sub_10053EA38, 0, 0);
}

uint64_t sub_100542220()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

unint64_t sub_100542244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EAA08;
  if (!qword_1009EAA08)
  {
    v1 = sub_100030B74(&qword_1009E0B78);
    sub_10006CD04(&qword_1009EAA10, &qword_1009EAA18, (uint64_t)&protocol conformance descriptor for Date, (uint64_t)&protocol conformance descriptor for <A> A?);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> DiscardOnError<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EAA08);
  }
  return result;
}

uint64_t sub_1005422C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1005422F4(void *a1, void *a2)
{
  uint64_t v2;

  sub_10053F93C(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1005422FC(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065)
  {
    v5 = 0xE900000000000065;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x7461447472617473, 0xE900000000000065, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000)
  {
    v7 = 0xE700000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x65746144646E65, 0xE700000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x4F65676E61526E69 && a2 == 0xED00007465736666)
  {
    swift_bridgeObjectRelease(0xED00007465736666);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x4F65676E61526E69, 0xED00007465736666, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_100542480(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 1918985593 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1918985593, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x6163696669746F6ELL && a2 == 0xEC0000006E6F6974)
  {
    v7 = 0xEC0000006E6F6974;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6163696669746F6ELL, 0xEC0000006E6F6974, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x736B636950706F74 && a2 == 0xEC00000064726143)
  {
    swift_bridgeObjectRelease(0xEC00000064726143);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x736B636950706F74, 0xEC00000064726143, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1005425F4(uint64_t a1, unint64_t a2, void *a3, JSValue a4)
{
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  Swift::Int v17;
  id v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  Swift::Int v23;
  Swift::OpaquePointer_optional v26;
  Swift::OpaquePointer_optional v27;

  if (a3)
  {
    sub_100542B68(a1, a2);
    v8 = a3;
    if ((JSValue.isFunction.getter(v8, v9) & 1) != 0)
    {
      v10 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance", a1, a2);
      v11 = sub_10004CFD4(&qword_1009D4B80);
      v12 = swift_allocObject(v11, 64, 7);
      *(_OWORD *)(v12 + 16) = xmmword_10070CCA0;
      v13 = sub_100542B90();
      v14 = Error.localizedDescription.getter(&type metadata for YearInReviewEligibilityService.ServiceError, v13);
      *(_QWORD *)(v12 + 56) = &type metadata for String;
      *(_QWORD *)(v12 + 32) = v14;
      *(_QWORD *)(v12 + 40) = v15;
      v16._countAndFlagsBits = 0x80000001007D21E0;
      v26.value._rawValue = (void *)v12;
      v26.is_nil = 124;
      v16._object = (void *)303;
      JSABridge.enqueueValueCall(_:arguments:f:l:)((JSValue)v8, v26, v16, v17);

      swift_bridgeObjectRelease(v12);
      return sub_100542B7C(a1, a2);
    }

  }
  else
  {
    sub_100542B68(a1, a2);
  }
  v19 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance", a1, a2);
  v20 = sub_10004CFD4(&qword_1009D4B80);
  v21 = swift_allocObject(v20, 64, 7);
  *(_OWORD *)(v21 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v21 + 56) = &type metadata for Bool;
  *(_BYTE *)(v21 + 32) = 0;
  v22._countAndFlagsBits = 0x80000001007D21E0;
  v27.value._rawValue = (void *)v21;
  v27.is_nil = 124;
  v22._object = (void *)300;
  JSABridge.enqueueValueCall(_:arguments:f:l:)(a4, v27, v22, v23);

  swift_bridgeObjectRelease(v21);
  return sub_100542B7C(a1, a2);
}

uint64_t sub_1005427DC()
{
  id *v0;

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100542810(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  objc_class *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  JSValue v7;

  v2 = *(void **)(v1 + 24);
  v3 = *(objc_class **)(v1 + 32);
  v4 = a1[3];
  v5 = a1[4];
  v6 = sub_10003F198(a1, v4);
  v7.super.isa = v3;
  return sub_10054297C((uint64_t)v6, v2, v7, v4, v5);
}

uint64_t sub_100542850()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10054288C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t *v7;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = swift_task_alloc(dword_1009EAA2C);
  v6 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_10000AE34;
  *(_QWORD *)(v5 + 144) = v4;
  *(_OWORD *)(v5 + 128) = v6;
  *(_BYTE *)(v5 + 184) = v3;
  *(_QWORD *)(v5 + 120) = v2;
  v7 = (uint64_t *)swift_task_alloc(dword_1009EAA3C);
  *(_QWORD *)(v5 + 152) = v7;
  *v7 = v5;
  v7[1] = (uint64_t)sub_10053FB98;
  v7[16] = v2;
  return swift_task_switch(sub_10053EF48, 0, 0);
}

unint64_t sub_100542938()
{
  unint64_t result;

  result = qword_1009EAA40;
  if (!qword_1009EAA40)
  {
    result = swift_getWitnessTable(&unk_10072C860, &type metadata for YearInReviewEligibilityService.ServiceError);
    atomic_store(result, (unint64_t *)&qword_1009EAA40);
  }
  return result;
}

uint64_t sub_10054297C(uint64_t a1, void *a2, JSValue a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  Swift::Int v21;
  uint64_t v22;
  Swift::String v23;
  Swift::Int v24;
  __n128 v25;
  uint64_t v27;
  Swift::OpaquePointer_optional v28;
  Swift::OpaquePointer_optional v29;

  v9 = *(_QWORD *)(a4 - 8);
  v10 = __chkstk_darwin(a1);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v12, v10);
  if (!a2)
    goto LABEL_5;
  v13 = a2;
  if ((JSValue.isFunction.getter(v13, v14) & 1) == 0)
  {

LABEL_5:
    v15 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
    v22 = sub_10004CFD4(&qword_1009D4B80);
    v17 = swift_allocObject(v22, 64, 7);
    *(_OWORD *)(v17 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v17 + 56) = &type metadata for Bool;
    *(_BYTE *)(v17 + 32) = 0;
    v23._countAndFlagsBits = 0x80000001007D21E0;
    v29.value._rawValue = (void *)v17;
    v29.is_nil = 124;
    v23._object = (void *)300;
    JSABridge.enqueueValueCall(_:arguments:f:l:)(a3, v29, v23, v24);
    goto LABEL_6;
  }
  v15 = objc_msgSend((id)objc_opt_self(JSABridge), "sharedInstance");
  v16 = sub_10004CFD4(&qword_1009D4B80);
  v17 = swift_allocObject(v16, 64, 7);
  *(_OWORD *)(v17 + 16) = xmmword_10070CCA0;
  v18 = Error.localizedDescription.getter(a4, *(_QWORD *)(a5 + 8));
  *(_QWORD *)(v17 + 56) = &type metadata for String;
  *(_QWORD *)(v17 + 32) = v18;
  *(_QWORD *)(v17 + 40) = v19;
  v20._countAndFlagsBits = 0x80000001007D21E0;
  v28.value._rawValue = (void *)v17;
  v28.is_nil = 124;
  v20._object = (void *)303;
  JSABridge.enqueueValueCall(_:arguments:f:l:)((JSValue)v13, v28, v20, v21);

LABEL_6:
  v25 = swift_bridgeObjectRelease(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8))(v12, a4, v25);
}

uint64_t sub_100542B68(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_100542B7C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRelease(a2);
  return result;
}

unint64_t sub_100542B90()
{
  unint64_t result;

  result = qword_1009EAA48;
  if (!qword_1009EAA48)
  {
    result = swift_getWitnessTable(&unk_10072C820, &type metadata for YearInReviewEligibilityService.ServiceError);
    atomic_store(result, &qword_1009EAA48);
  }
  return result;
}

uint64_t sub_100542BD4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100542BF8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_10053F298(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100542C00()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100542C34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __int128 v5;

  v2 = swift_task_alloc(dword_1009EAA54);
  v5 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)v2 = v1;
  *(_QWORD *)(v2 + 8) = sub_10000AE34;
  *(_OWORD *)(v2 + 40) = v5;
  v3 = (uint64_t *)swift_task_alloc(dword_1009EAA3C);
  *(_QWORD *)(v2 + 56) = v3;
  *v3 = v2;
  v3[1] = (uint64_t)sub_10053F3FC;
  v3[16] = v5;
  return swift_task_switch(sub_10053EF48, 0, 0);
}

unint64_t sub_100542CC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EAA60;
  if (!qword_1009EAA60)
  {
    v1 = objc_opt_self(BSUIDynamicValue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009EAA60);
  }
  return result;
}

uint64_t sub_100542D04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E3A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for YearInReviewEligibilityService.ServiceError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for YearInReviewEligibilityService.ServiceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for YearInReviewEligibilityService.ServiceError()
{
  return &type metadata for YearInReviewEligibilityService.ServiceError;
}

unint64_t sub_100542E10()
{
  unint64_t result;

  result = qword_1009EAA70;
  if (!qword_1009EAA70)
  {
    result = swift_getWitnessTable(&unk_10072C740, &type metadata for YearInReview.RemoteConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EAA70);
  }
  return result;
}

unint64_t sub_100542E58()
{
  unint64_t result;

  result = qword_1009EAA78;
  if (!qword_1009EAA78)
  {
    result = swift_getWitnessTable(&unk_10072C7F8, &type metadata for YearInReview.RemoteConfiguration.DateRange.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1009EAA78);
  }
  return result;
}

uint64_t sub_100542EA8(uint64_t a1, char a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    v5 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else
  {
    **(_BYTE **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume(v3);
  }
}

uint64_t sub_100542F28()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EAAA0);
  sub_100048F64(v0, (uint64_t)qword_1009EAAA0);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000001CLL, 0x800000010072C970);
}

uint64_t sub_100542FA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[15] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[16] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[17] = v3;
  v1[18] = v4;
  return swift_task_switch(sub_100543010, v3, v4);
}

uint64_t sub_100543010()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  Class isa;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v0[19] = v2;
  sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v0[20] = isa;
  v0[2] = v0;
  v0[3] = sub_100543100;
  v4 = swift_continuation_init(v0 + 2, 0);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_100543180;
  v5[3] = &unk_10090F1B8;
  v5[4] = v4;
  objc_msgSend(v2, "deleteAssets:exhaustive:completion:", isa, 1, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_100543100()
{
  uint64_t v0;

  return swift_task_switch(sub_100543144, *(_QWORD *)(*(_QWORD *)v0 + 136), *(_QWORD *)(*(_QWORD *)v0 + 144));
}

uint64_t sub_100543144()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 128));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100543180(uint64_t a1)
{
  return swift_continuation_resume(*(_QWORD *)(a1 + 32));
}

uint64_t sub_100543188(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[23] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[24] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[25] = v3;
  v1[26] = v4;
  return swift_task_switch(sub_1005431F4, v3, v4);
}

void sub_1005431F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  NSArray v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 184);
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v10 = *(_QWORD *)(v0 + 184);
    else
      v10 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (!v2)
      goto LABEL_17;
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    if (!v2)
      goto LABEL_17;
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  v3 = 0;
  v4 = *(_QWORD *)(v0 + 184) + 32;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, *(_QWORD *)(v0 + 184));
    else
      v7 = *(id *)(v4 + 8 * v3);
    v8 = v7;
    v9 = objc_msgSend(v7, "isLocal");
    if ((_DWORD)v9)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v9);
      v5 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
      v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v8);
      specialized ContiguousArray._endMutation()(v6);
    }
    else
    {

    }
    ++v3;
  }
  while (v2 != v3);
LABEL_17:
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 184));
  v2 = (uint64_t)_swiftEmptyArrayStorage;
  v1 = v0 + 144;
  *(_QWORD *)(v0 + 216) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + 144) = _swiftEmptyArrayStorage;
  v11 = sub_10004CFD4((uint64_t *)&unk_1009F26D0);
  v12 = sub_10054B650();
  if ((Collection.isNotEmpty.getter(v11, v12) & 1) == 0)
  {
    swift_release(*(_QWORD *)(v0 + 192));
    v28 = swift_release(_swiftEmptyArrayStorage);
    (*(void (**)(__n128))(v0 + 8))(v28);
    return;
  }
  *(_QWORD *)(v0 + 224) = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0
    && ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    v13 = _swiftEmptyArrayStorage[2];
    swift_retain(_swiftEmptyArrayStorage);
    *(_QWORD *)(v0 + 232) = v13;
    if (v13)
      goto LABEL_21;
LABEL_33:
    v20 = v0 + 16;
    v30 = *(_QWORD *)(v0 + 216);
    v21 = *(void **)(v0 + 224);
    swift_release(v30);
    sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v26.super.isa = Array._bridgeToObjectiveC()().super.isa;
    *(NSArray *)(v0 + 264) = v26;
    swift_release(v30);
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_10054388C;
    *(_QWORD *)(v0 + 176) = swift_continuation_init(v0 + 16, 0);
    *(_QWORD *)(v0 + 144) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 152) = 0x40000000;
    v27 = &unk_10090F300;
LABEL_34:
    *(_QWORD *)(v0 + 160) = sub_100543180;
    *(_QWORD *)(v0 + 168) = v27;
    objc_msgSend(v21, "deleteAssets:exhaustive:completion:", v26.super.isa, 0, v1);
    swift_continuation_await(v20);
    return;
  }
LABEL_32:
  swift_retain(v2);
  v13 = _CocoaArrayWrapper.endIndex.getter(v29);
  *(_QWORD *)(v0 + 232) = v13;
  if (!v13)
    goto LABEL_33;
LABEL_21:
  if (v13 >= 1)
  {
    v14 = 0;
    while (1)
    {
      *(_QWORD *)(v0 + 240) = v14;
      v15 = *(_QWORD *)(v0 + 216);
      v16 = (v15 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, v15)
          : *(id *)(v15 + 8 * v14 + 32);
      v17 = v16;
      *(_QWORD *)(v0 + 248) = v16;
      if (objc_msgSend(v16, "isAudiobook"))
      {
        v18 = objc_msgSend(v17, "supplementalContentAssets");
        if (v18)
          break;
      }

      v14 = *(_QWORD *)(v0 + 240) + 1;
      if (v14 == *(_QWORD *)(v0 + 232))
        goto LABEL_33;
    }
    v19 = v18;
    v20 = v0 + 80;
    v21 = *(void **)(v0 + 224);
    v22 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v23 = sub_100384B9C((unint64_t *)&qword_1009D6DB0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v19, v22, v23);

    v25 = sub_100427714(v24);
    swift_bridgeObjectRelease(v24);
    v26.super.isa = Array._bridgeToObjectiveC()().super.isa;
    *(NSArray *)(v0 + 256) = v26;
    swift_release(v25);
    *(_QWORD *)(v0 + 80) = v0;
    *(_QWORD *)(v0 + 88) = sub_1005435FC;
    *(_QWORD *)(v0 + 176) = swift_continuation_init(v0 + 80, 0);
    *(_QWORD *)(v0 + 144) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 152) = 0x40000000;
    v27 = &unk_10090F318;
    goto LABEL_34;
  }
  __break(1u);
}

uint64_t sub_1005435FC()
{
  uint64_t v0;

  return swift_task_switch(sub_100543640, *(_QWORD *)(*(_QWORD *)v0 + 200), *(_QWORD *)(*(_QWORD *)v0 + 208));
}

uint64_t sub_100543640()
{
  NSArray *v0;
  Class isa;
  uint64_t v2;
  NSArray *v3;
  Class v4;
  Class v5;
  NSArray v6;
  objc_class *v7;
  Class v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  isa = v0[32].super.isa;

  v2 = (uint64_t)v0[30].super.isa + 1;
  if ((Class)v2 == v0[29].super.isa)
  {
LABEL_2:
    v3 = v0 + 2;
    v5 = v0[27].super.isa;
    v4 = v0[28].super.isa;
    swift_release(v5);
    sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v0[33].super.isa = v6.super.isa;
    swift_release(v5);
    v0[2].super.isa = (Class)v0;
    v0[3].super.isa = (Class)sub_10054388C;
    v0[22].super.isa = (Class)swift_continuation_init(&v0[2], 0);
    v0[18].super.isa = (Class)_NSConcreteStackBlock;
    v0[19].super.isa = (Class)0x40000000;
    v7 = (objc_class *)&unk_10090F300;
  }
  else
  {
    while (1)
    {
      v0[30].super.isa = (Class)v2;
      v9 = v0[27].super.isa;
      v10 = ((unint64_t)v9 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v2, v9)
          : *((id *)v9 + v2 + 4);
      v11 = v10;
      v0[31].super.isa = (Class)v10;
      if (objc_msgSend(v10, "isAudiobook"))
      {
        v12 = objc_msgSend(v11, "supplementalContentAssets");
        if (v12)
          break;
      }

      v2 = (uint64_t)v0[30].super.isa + 1;
      if ((Class)v2 == v0[29].super.isa)
        goto LABEL_2;
    }
    v13 = v12;
    v3 = v0 + 10;
    v4 = v0[28].super.isa;
    v14 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v15 = sub_100384B9C((unint64_t *)&qword_1009D6DB0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v16 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v13, v14, v15);

    v17 = sub_100427714(v16);
    swift_bridgeObjectRelease(v16);
    v6.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v0[32].super.isa = v6.super.isa;
    swift_release(v17);
    v0[10].super.isa = (Class)v0;
    v0[11].super.isa = (Class)sub_1005435FC;
    v0[22].super.isa = (Class)swift_continuation_init(&v0[10], 0);
    v0[18].super.isa = (Class)_NSConcreteStackBlock;
    v0[19].super.isa = (Class)0x40000000;
    v7 = (objc_class *)&unk_10090F318;
  }
  v0[20].super.isa = (Class)sub_100543180;
  v0[21].super.isa = v7;
  -[objc_class deleteAssets:exhaustive:completion:](v4, "deleteAssets:exhaustive:completion:", v6.super.isa, 0, &v0[18]);
  return swift_continuation_await(v3);
}

uint64_t sub_10054388C()
{
  uint64_t v0;

  return swift_task_switch(sub_1005438D0, *(_QWORD *)(*(_QWORD *)v0 + 200), *(_QWORD *)(*(_QWORD *)v0 + 208));
}

uint64_t sub_1005438D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 192);

  swift_release(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100543914(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[30] = a1;
  v2[31] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[32] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[33] = v4;
  v2[34] = v5;
  return swift_task_switch(sub_100543980, v4, v5);
}

uint64_t sub_100543980()
{
  _QWORD *v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  Class isa;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0[30];
  v0[35] = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v2 = (id)v0[30];
  if (v1 >> 62)
    goto LABEL_13;
  v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v2);
  v0[36] = v3;
  if (v3)
  {
    do
    {
      v4 = 0;
      v1 = (unint64_t)(v0 + 10);
      while (1)
      {
        v0[37] = 0;
        v5 = v0[30];
        v2 = (v5 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v5)
           : *(id *)(v5 + 8 * v4 + 32);
        v6 = v2;
        v0[38] = v2;
        v0[39] = v4 + 1;
        if (__OFADD__(v4, 1))
          break;
        v7 = (void *)v0[35];
        v8 = swift_allocObject(&unk_10090F230, 24, 7);
        v0[40] = v8;
        *(_QWORD *)(v8 + 16) = 0;
        v9 = swift_allocObject(&unk_10090F258, 32, 7);
        *(_QWORD *)(v9 + 16) = v8;
        *(_QWORD *)(v9 + 24) = v6;
        v0[14] = sub_10054B534;
        v0[15] = v9;
        v0[10] = _NSConcreteStackBlock;
        v0[11] = 1107296256;
        v0[12] = sub_1001EDBF0;
        v0[13] = &unk_10090F270;
        v10 = _Block_copy(v0 + 10);
        v11 = v0[15];
        swift_retain(v8);
        v12 = v6;
        objc_msgSend(v7, "performBlockOnWorkerQueueAndWait:", v10, swift_release(v11).n128_f64[0]);
        _Block_release(v10);
        swift_beginAccess(v8 + 16, v0 + 21, 0, 0);
        v13 = *(_QWORD *)(v8 + 16);
        v0[41] = v13;
        if (v13)
        {
          v16 = v0 + 2;
          v17 = objc_msgSend((id)v0[35], "collectionController", swift_bridgeObjectRetain(v13).n128_f64[0]);
          v0[42] = v17;
          v18 = v12;
          sub_1005447F8(v13);
          v20 = v19;
          isa = Set._bridgeToObjectiveC()().super.isa;
          v0[43] = isa;
          swift_bridgeObjectRelease(v20);
          v0[7] = v0 + 46;
          v0[2] = v0;
          v0[3] = sub_100543C9C;
          v22 = swift_continuation_init(v0 + 2, 1);
          v0[16] = _NSConcreteStackBlock;
          v23 = v0 + 16;
          v23[1] = 0x40000000;
          v23[2] = sub_100542EA8;
          v23[3] = &unk_10090F298;
          v23[4] = v22;
          objc_msgSend(v17, "removeBook:fromCollections:completion:", v18, isa, v23);
          return swift_continuation_await(v16);
        }
        swift_release(v8);

        v4 = v0[39];
        if (v4 == v0[36])
          goto LABEL_10;
      }
      __break(1u);
LABEL_13:
      if ((uint64_t)v2 < 0)
        v24 = (uint64_t)v2;
      else
        v24 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v2);
      v25 = _CocoaArrayWrapper.endIndex.getter(v24);
      v0[36] = v25;
    }
    while (v25);
  }
LABEL_10:
  swift_bridgeObjectRelease(v0[30]);
  v14 = (_QWORD *)swift_task_alloc(dword_1009EAB4C);
  v0[45] = v14;
  *v14 = v0;
  v14[1] = sub_100544090;
  return sub_100544C34(v0[30]);
}

uint64_t sub_100543C9C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 352) = v2;
  if (!v2)
    return swift_task_switch(sub_100543D04, v1[33], v1[34]);
  swift_bridgeObjectRelease(v1[41]);
  return swift_task_switch(sub_1005441EC, v1[33], v1[34]);
}

id sub_100543D04()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  __n128 v25;
  _QWORD *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  Class isa;
  uint64_t v32;
  _QWORD *v33;

  v1 = (void *)v0[43];
  v2 = (void *)v0[38];
  v3 = v0[31];
  swift_unknownObjectRelease(v0[42]);

  v4 = v0[40];
  v5 = v0[41];
  v6 = (void *)v0[38];
  if (v3)
  {
    v7 = v0[37];
    v8 = (void *)v0[31];
    v9 = v6;
    v10 = v8;
    sub_100549560(v5, (uint64_t)v10, v9);

    swift_bridgeObjectRelease(v5);
    swift_release(v4);
    v11 = v0[39];
    if (v11 == v0[36])
    {
LABEL_9:
      swift_bridgeObjectRelease(v0[30]);
      v22 = (_QWORD *)swift_task_alloc(dword_1009EAB4C);
      v0[45] = v22;
      *v22 = v0;
      v22[1] = sub_100544090;
      return (id)sub_100544C34(v0[30]);
    }
    else
    {
      while (1)
      {
        v0[37] = v7;
        v12 = v0[30];
        result = (v12 & 0xC000000000000001) != 0
               ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v12)
               : *(id *)(v12 + 8 * v11 + 32);
        v14 = result;
        v0[38] = result;
        v0[39] = v11 + 1;
        if (__OFADD__(v11, 1))
          break;
        v15 = (void *)v0[35];
        v16 = swift_allocObject(&unk_10090F230, 24, 7);
        v0[40] = v16;
        *(_QWORD *)(v16 + 16) = 0;
        v17 = swift_allocObject(&unk_10090F258, 32, 7);
        *(_QWORD *)(v17 + 16) = v16;
        *(_QWORD *)(v17 + 24) = v14;
        v0[14] = sub_10054B534;
        v0[15] = v17;
        v0[10] = _NSConcreteStackBlock;
        v0[11] = 1107296256;
        v0[12] = sub_1001EDBF0;
        v0[13] = &unk_10090F270;
        v18 = _Block_copy(v0 + 10);
        v19 = v0[15];
        swift_retain(v16);
        v20 = v14;
        objc_msgSend(v15, "performBlockOnWorkerQueueAndWait:", v18, swift_release(v19).n128_f64[0]);
        _Block_release(v18);
        swift_beginAccess(v16 + 16, v0 + 21, 0, 0);
        v21 = *(_QWORD *)(v16 + 16);
        v0[41] = v21;
        if (v21)
        {
          v26 = v0 + 2;
          v27 = objc_msgSend((id)v0[35], "collectionController", swift_bridgeObjectRetain(v21).n128_f64[0]);
          v0[42] = v27;
          v28 = v20;
          sub_1005447F8(v21);
          v30 = v29;
          isa = Set._bridgeToObjectiveC()().super.isa;
          v0[43] = isa;
          swift_bridgeObjectRelease(v30);
          v0[7] = v0 + 46;
          v0[2] = v0;
          v0[3] = sub_100543C9C;
          v32 = swift_continuation_init(v0 + 2, 1);
          v0[16] = _NSConcreteStackBlock;
          v33 = v0 + 16;
          v33[1] = 0x40000000;
          v33[2] = sub_100542EA8;
          v33[3] = &unk_10090F298;
          v33[4] = v32;
          objc_msgSend(v27, "removeBook:fromCollections:completion:", v28, isa, v33);
          return (id)swift_continuation_await(v26);
        }
        swift_release(v16);

        v11 = v0[39];
        if (v11 == v0[36])
          goto LABEL_9;
      }
      __break(1u);
    }
  }
  else
  {
    v23 = (void *)v0[35];
    v24 = v0[32];
    swift_bridgeObjectRelease(v0[30]);

    swift_release(v24);
    swift_release(v4);
    v25 = swift_bridgeObjectRelease(v5);
    return (id)((uint64_t (*)(__n128))v0[1])(v25);
  }
  return result;
}

uint64_t sub_100544090()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 360));
  return swift_task_switch(sub_1005440DC, *(_QWORD *)(v1 + 264), *(_QWORD *)(v1 + 272));
}

void sub_1005440DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v1 = *(_QWORD *)(v0 + 248);
  swift_release(*(_QWORD *)(v0 + 256));
  if (!v1 || (v2 = *(_QWORD *)(v0 + 288)) == 0)
  {
    v8 = *(id *)(v0 + 280);
LABEL_11:

    (*(void (**)(void))(v0 + 8))();
    return;
  }
  if (v2 >= 1)
  {
    v3 = *(_QWORD *)(v0 + 240);
    v4 = *(void **)(v0 + 248);
    v5 = v3 & 0xC000000000000001;
    v6 = v3 + 32;
    v7 = kBKCollectionDefaultIDFinished;
    swift_bridgeObjectRetain(v3);
    v8 = v4;
    v9 = 0;
    do
    {
      if (v5)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9, *(_QWORD *)(v0 + 240));
      else
        v10 = *(id *)(v6 + 8 * v9);
      v11 = v10;
      v12 = *(_QWORD *)(v0 + 288);
      v13 = *(_QWORD *)(v0 + 248);
      ++v9;
      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7);
      v16 = v15;
      sub_1003B1DAC(v13, v11, v14, v15);
      swift_bridgeObjectRelease(v16);

    }
    while (v9 != v12);
    v17 = *(void **)(v0 + 280);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 240));

    goto LABEL_11;
  }
  __break(1u);
}

uint64_t sub_1005441EC(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  Class isa;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[2];

  v2 = (void *)v1[43];
  v3 = v1[42];
  v4 = (void *)v1[38];
  swift_willThrow(a1);
  swift_unknownObjectRelease(v3);

  if (qword_1009CE828 != -1)
    goto LABEL_15;
  while (1)
  {
    v5 = v1[44];
    v6 = (void *)v1[38];
    v7 = type metadata accessor for Logger(0);
    sub_100048F64(v7, (uint64_t)qword_1009EAAA0);
    v8 = v6;
    swift_errorRetain(v5);
    v9 = v8;
    v10 = swift_errorRetain(v5);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    v13 = os_log_type_enabled(v11, v12);
    v14 = v1[44];
    v15 = v1[40];
    v16 = (void *)v1[38];
    if (v13)
    {
      v17 = swift_slowAlloc(22, -1);
      v47 = swift_slowAlloc(64, -1);
      *(_DWORD *)v17 = 136315394;
      v48 = v15;
      v49[0] = v47;
      v18 = objc_msgSend(v16, "permanentOrTemporaryAssetID");
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      v1[27] = sub_100040F58(v19, v21, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 27, v1 + 28, v17 + 4, v17 + 12);
      swift_bridgeObjectRelease(v21);

      *(_WORD *)(v17 + 12) = 2080;
      swift_getErrorValue(v14, v1 + 28, v1 + 24);
      v22 = Error.localizedDescription.getter(v1[25], v1[26]);
      v24 = v23;
      v1[29] = sub_100040F58(v22, v23, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 29, v1 + 30, v17 + 14, v17 + 22);
      swift_bridgeObjectRelease(v24);
      swift_errorRelease(v14);
      swift_errorRelease(v14);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Error removing book from collections. assetID: %s error: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy(v47, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v17, -1, -1);

      swift_errorRelease(v14);
      v25 = v48;
    }
    else
    {

      swift_errorRelease(v14);
      swift_errorRelease(v14);
      swift_errorRelease(v14);

      v25 = v15;
    }
    swift_release(v25);
    v26 = v1[39];
    if (v26 == v1[36])
      break;
    while (1)
    {
      v1[37] = 0;
      v27 = v1[30];
      v28 = (v27 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v26, v27)
          : *(id *)(v27 + 8 * v26 + 32);
      v29 = v28;
      v1[38] = v28;
      v1[39] = v26 + 1;
      if (__OFADD__(v26, 1))
        break;
      v30 = (void *)v1[35];
      v31 = swift_allocObject(&unk_10090F230, 24, 7);
      v1[40] = v31;
      *(_QWORD *)(v31 + 16) = 0;
      v32 = swift_allocObject(&unk_10090F258, 32, 7);
      *(_QWORD *)(v32 + 16) = v31;
      *(_QWORD *)(v32 + 24) = v29;
      v1[14] = sub_10054B534;
      v1[15] = v32;
      v1[10] = _NSConcreteStackBlock;
      v1[11] = 1107296256;
      v1[12] = sub_1001EDBF0;
      v1[13] = &unk_10090F270;
      v33 = _Block_copy(v1 + 10);
      v34 = v1[15];
      swift_retain(v31);
      v35 = v29;
      objc_msgSend(v30, "performBlockOnWorkerQueueAndWait:", v33, swift_release(v34).n128_f64[0]);
      _Block_release(v33);
      swift_beginAccess(v31 + 16, v1 + 21, 0, 0);
      v36 = *(_QWORD *)(v31 + 16);
      v1[41] = v36;
      if (v36)
      {
        v39 = v1 + 2;
        v40 = objc_msgSend((id)v1[35], "collectionController", swift_bridgeObjectRetain(v36).n128_f64[0]);
        v1[42] = v40;
        v41 = v35;
        sub_1005447F8(v36);
        v43 = v42;
        isa = Set._bridgeToObjectiveC()().super.isa;
        v1[43] = isa;
        swift_bridgeObjectRelease(v43);
        v1[7] = v1 + 46;
        v1[2] = v1;
        v1[3] = sub_100543C9C;
        v45 = swift_continuation_init(v1 + 2, 1);
        v1[16] = _NSConcreteStackBlock;
        v46 = v1 + 16;
        v46[1] = 0x40000000;
        v46[2] = sub_100542EA8;
        v46[3] = &unk_10090F298;
        v46[4] = v45;
        objc_msgSend(v40, "removeBook:fromCollections:completion:", v41, isa, v46);
        return swift_continuation_await(v39);
      }
      swift_release(v31);

      v26 = v1[39];
      if (v26 == v1[36])
        goto LABEL_12;
    }
    __break(1u);
LABEL_15:
    swift_once(&qword_1009CE828, sub_100542F28);
  }
LABEL_12:
  swift_bridgeObjectRelease(v1[30]);
  v37 = (_QWORD *)swift_task_alloc(dword_1009EAB4C);
  v1[45] = v37;
  *v37 = v1;
  v37[1] = sub_100544090;
  return sub_100544C34(v1[30]);
}

double sub_10054472C(int a1, uint64_t a2, id a3)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _BYTE v11[24];

  v4 = objc_msgSend(a3, "collectionMembers");
  if (v4)
  {
    v5 = v4;
    v6 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
    v7 = sub_100384B9C(&qword_1009DF0F0, &qword_1009DF0E8, BKCollectionMember_ptr);
    v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v5, v6, v7);

  }
  else
  {
    v8 = 0;
  }
  swift_beginAccess(a2 + 16, v11, 1, 0);
  v9 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v8;
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

void sub_1005447F8(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::Int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _OWORD v43[2];
  uint64_t v44;
  void *v45;
  _QWORD v46[6];

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
  {
    v3 = *(_QWORD *)(a1 + 16);
    if (v3)
      goto LABEL_5;
LABEL_11:
    v4 = &_swiftEmptySetSingleton;
    if (v2)
      goto LABEL_6;
LABEL_12:
    v14 = -1 << *(_BYTE *)(v1 + 32);
    v39 = v1 + 56;
    v11 = ~v14;
    v15 = -v14;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v13 = v16 & *(_QWORD *)(v1 + 56);
    swift_bridgeObjectRetain(v1);
    swift_retain(v4);
    v12 = 0;
    goto LABEL_16;
  }
  if (a1 >= 0)
    a1 &= 0xFFFFFFFFFFFFFF8uLL;
  v3 = __CocoaSet.count.getter(a1);
  if (!v3)
    goto LABEL_11;
LABEL_5:
  sub_10004CFD4(&qword_1009EAB50);
  v4 = (_QWORD *)static _SetStorage.allocate(capacity:)(v3);
  if (!v2)
    goto LABEL_12;
LABEL_6:
  if (v1 < 0)
    v5 = v1;
  else
    v5 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v6 = swift_retain(v4);
  v7 = __CocoaSet.makeIterator()(v5, v6);
  v8 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
  v9 = sub_100384B9C(&qword_1009DF0F0, &qword_1009DF0E8, BKCollectionMember_ptr);
  v10 = (Swift::Int)Set.Iterator.init(_cocoa:)(v46, v7, v8, v9);
  v1 = v46[0];
  v39 = v46[1];
  v11 = v46[2];
  v12 = v46[3];
  v13 = v46[4];
LABEL_16:
  v38 = (unint64_t)(v11 + 64) >> 6;
  v17 = (char *)(v4 + 7);
  while (v1 < 0)
  {
    v22 = __CocoaSet.Iterator.next()(v10);
    if (!v22)
      goto LABEL_50;
    *(_QWORD *)&v43[0] = v22;
    v23 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
    swift_dynamicCast(&v45, v43, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
    v24 = v45;
LABEL_41:
    *(_QWORD *)&v40 = v24;
    v30 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
    swift_dynamicCast(v43, &v40, v30, &type metadata for AnyHashable, 7);
    v40 = v43[0];
    v41 = v43[1];
    v42 = v44;
    v10 = AnyHashable._rawHashValue(seed:)(v4[5]);
    v31 = -1 << *((_BYTE *)v4 + 32);
    v32 = v10 & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)&v17[8 * (v32 >> 6)]) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)&v17[8 * (v32 >> 6)])) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_51;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)&v17[8 * v33];
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)&v17[(v18 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v18;
    v19 = v4[6] + 40 * v18;
    *(_OWORD *)v19 = v40;
    *(_OWORD *)(v19 + 16) = v41;
    *(_QWORD *)(v19 + 32) = v42;
    ++v4[2];
  }
  if (v13)
  {
    v20 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v21 = v20 | (v12 << 6);
LABEL_40:
    v24 = *(void **)(*(_QWORD *)(v1 + 48) + 8 * v21);
    v45 = v24;
    v29 = v24;
    goto LABEL_41;
  }
  v25 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v25 >= v38)
      goto LABEL_50;
    v26 = *(_QWORD *)(v39 + 8 * v25);
    v27 = v12 + 1;
    if (!v26)
    {
      v27 = v12 + 2;
      if (v12 + 2 >= v38)
        goto LABEL_50;
      v26 = *(_QWORD *)(v39 + 8 * v27);
      if (!v26)
      {
        v27 = v12 + 3;
        if (v12 + 3 >= v38)
          goto LABEL_50;
        v26 = *(_QWORD *)(v39 + 8 * v27);
        if (!v26)
        {
          v27 = v12 + 4;
          if (v12 + 4 >= v38)
            goto LABEL_50;
          v26 = *(_QWORD *)(v39 + 8 * v27);
          if (!v26)
          {
            v27 = v12 + 5;
            if (v12 + 5 >= v38)
              goto LABEL_50;
            v26 = *(_QWORD *)(v39 + 8 * v27);
            if (!v26)
            {
              v28 = v12 + 6;
              while (v38 != v28)
              {
                v26 = *(_QWORD *)(v39 + 8 * v28++);
                if (v26)
                {
                  v27 = v28 - 1;
                  goto LABEL_39;
                }
              }
LABEL_50:
              v45 = 0;
              swift_release(v4);
              sub_100299C3C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_39:
    v13 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v27 << 6);
    v12 = v27;
    goto LABEL_40;
  }
LABEL_51:
  __break(1u);
}

uint64_t sub_100544C34(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = v2;
  v1[4] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[5] = v3;
  v1[6] = v4;
  return swift_task_switch(sub_100544CA4, v3, v4);
}

uint64_t sub_100544CA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1[2];
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v19 = v1[2];
    else
      v19 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1[2]);
    v3 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v3)
    goto LABEL_12;
  result = sub_100045E44(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v2 & 0xC000000000000001;
    v20 = v1[2] + 32;
    do
    {
      if (v6)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1[2]);
      else
        v7 = *(id *)(v20 + 8 * v5);
      v8 = v7;
      v9 = objc_msgSend(v7, "permanentOrTemporaryAssetID");
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      v14 = _swiftEmptyArrayStorage[2];
      v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1)
        a1 = sub_100045E44(v13 > 1, v14 + 1, 1);
      ++v5;
      _swiftEmptyArrayStorage[2] = v14 + 1;
      v15 = &_swiftEmptyArrayStorage[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
    }
    while (v3 != v5);
LABEL_12:
    v1[7] = _swiftEmptyArrayStorage;
    v16 = static MainActor.shared.getter(a1);
    v1[8] = v16;
    v17 = swift_task_alloc(32);
    v1[9] = v17;
    *(_QWORD *)(v17 + 16) = _swiftEmptyArrayStorage;
    v18 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    v1[10] = v18;
    *v18 = v1;
    v18[1] = sub_100544E94;
    return withCheckedContinuation<A>(isolation:function:_:)(v18, v16, &protocol witness table for MainActor, 0xD000000000000026, 0x80000001007D2410, sub_10054B53C, v17, (char *)&type metadata for () + 8);
  }
  __break(1u);
  return result;
}

uint64_t sub_100544E94()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v4 = *(_QWORD *)(*v0 + 56);
  v3 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_bridgeObjectRelease(v4);
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10046D804, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100544F04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  v4 = sub_10004CFD4(&qword_1009D3150);
  v3[25] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v3[26] = v5;
  v3[27] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v3[28] = v6;
  v3[29] = v7;
  return swift_task_switch(sub_100544F9C, v6, v7);
}

uint64_t sub_100544F9C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  Class isa;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = objc_msgSend(*(id *)(v0 + 184), "collectionID");
  if (!v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDFinished);
    v8 = v11;
    goto LABEL_10;
  }
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;

  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDFinished);
  v8 = v7;
  if (!v5)
  {
LABEL_10:
    swift_bridgeObjectRelease(v8);
    goto LABEL_11;
  }
  if (v3 == v6 && v5 == v7)
  {
    swift_bridgeObjectRelease_n(v5, 2);
LABEL_22:
    v30 = (_QWORD *)swift_task_alloc(dword_1009EAB4C);
    *(_QWORD *)(v0 + 240) = v30;
    *v30 = v0;
    v30[1] = sub_1005452E0;
    return sub_100544C34(*(_QWORD *)(v0 + 176));
  }
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v5);
  if ((v10 & 1) != 0)
    goto LABEL_22;
LABEL_11:
  v12 = *(_QWORD *)(v0 + 176);
  if ((unint64_t)v12 >> 62)
  {
    if (v12 < 0)
      v31 = *(_QWORD *)(v0 + 176);
    else
      v31 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + 176));
    v13 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *(_QWORD *)(v0 + 248) = v13;
  if (!v13)
    goto LABEL_20;
  result = specialized ContiguousArray.reserveCapacity(_:)(v13);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v15 = 0;
    v16 = v12 & 0xC000000000000001;
    v32 = *(_QWORD *)(v0 + 176) + 32;
    do
    {
      if (v16)
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, *(_QWORD *)(v0 + 176));
      else
        v17 = *(id *)(v32 + 8 * v15);
      v18 = v17;
      ++v15;
      v19 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithShort:", objc_msgSend(v17, "contentType"));

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v20);
      v21 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v21);
      v22 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v19);
      specialized ContiguousArray._endMutation()(v22);
    }
    while (v13 != v15);
LABEL_20:
    v23 = v0 + 16;
    *(_QWORD *)(v0 + 256) = _swiftEmptyArrayStorage;
    v24 = *(_QWORD *)(v0 + 184);
    v25 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v26 = objc_msgSend(v25, "collectionController");
    *(_QWORD *)(v0 + 264) = v26;

    sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)(v0 + 272) = isa;
    *(_QWORD *)(v0 + 56) = v0 + 288;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_100545478;
    v28 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    v29 = (_QWORD *)(v0 + 80);
    v29[1] = 0x40000000;
    v29[2] = sub_100542EA8;
    v29[3] = &unk_10090F330;
    v29[4] = v28;
    objc_msgSend(v26, "removeBooks:fromCollection:completion:", isa, v24, v29);
    return swift_continuation_await(v23);
  }
  __break(1u);
  return result;
}

uint64_t sub_1005452E0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 240));
  return swift_task_switch(sub_10054532C, *(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232));
}

id sub_10054532C()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 176);
  swift_release(*(_QWORD *)(v0 + 216));
  v2 = *(id *)(v0 + 176);
  if (!(v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 176));
    v13 = swift_task_dealloc(*(_QWORD *)(v0 + 200));
    return (id)(*(uint64_t (**)(__n128))(v0 + 8))(v13);
  }
LABEL_12:
  if ((uint64_t)v2 < 0)
    v14 = (uint64_t)v2;
  else
    v14 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v3)
    goto LABEL_10;
LABEL_3:
  v4 = 0;
  v5 = v1 & 0xC000000000000001;
  v15 = *(_QWORD *)(v0 + 176) + 32;
  while (1)
  {
    if (v5)
      v2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)(v0 + 176));
    else
      v2 = *(id *)(v15 + 8 * v4);
    v1 = (unint64_t)v2;
    v6 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    result = objc_msgSend(*(id *)(v0 + 184), "collectionID");
    if (!result)
      break;
    v8 = result;
    v9 = *(_QWORD *)(v0 + 192);
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v12 = v11;

    sub_1003B1DAC(v9, (id)v1, v10, v12);
    swift_bridgeObjectRelease(v12);

    ++v4;
    if (v6 == v3)
      goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100545478()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = *(_QWORD **)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 280) = v2;
  if (!v2)
    return swift_task_switch(sub_1005454E0, v1[28], v1[29]);
  swift_bridgeObjectRelease(v1[32]);
  return swift_task_switch(sub_1005456CC, v1[28], v1[29]);
}

id sub_1005454E0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id result;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;

  v2 = *(_QWORD *)(v0 + 264);
  v1 = *(void **)(v0 + 272);
  swift_release(*(_QWORD *)(v0 + 216));
  v3 = *(unsigned __int8 *)(v0 + 288);
  swift_unknownObjectRelease(v2);

  if (v3 != 1)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 256));
LABEL_19:
    v26 = swift_task_dealloc(*(_QWORD *)(v0 + 200));
    return (id)(*(uint64_t (**)(__n128))(v0 + 8))(v26);
  }
  v4 = *(_QWORD *)(v0 + 176);
  if ((unint64_t)v4 >> 62)
  {
    if (v4 < 0)
      v7 = *(_QWORD *)(v0 + 176);
    else
      v7 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v7);
    v6 = *(_QWORD *)(v0 + 176);
    if (!v5)
      goto LABEL_18;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v4);
    if (!v5)
    {
LABEL_18:
      v18 = *(_QWORD *)(v0 + 256);
      v19 = *(_QWORD *)(v0 + 200);
      v20 = *(void **)(v0 + 184);
      swift_bridgeObjectRelease(v6);
      v21 = type metadata accessor for TaskPriority(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v19, 1, 1, v21);
      v22 = v20;
      v23 = static MainActor.shared.getter(v22);
      v24 = (_QWORD *)swift_allocObject(&unk_10090F358, 48, 7);
      v24[2] = v23;
      v24[3] = &protocol witness table for MainActor;
      v24[4] = v18;
      v24[5] = v22;
      v25 = sub_10030C02C(v19, (uint64_t)&unk_1009EAB60, (uint64_t)v24);
      swift_release(v25);
      goto LABEL_19;
    }
  }
  v8 = 0;
  v9 = v6 & 0xC000000000000001;
  v27 = v6 + 32;
  while (1)
  {
    result = v9
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, *(_QWORD *)(v0 + 176))
           : *(id *)(v27 + 8 * v8);
    v11 = result;
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    result = objc_msgSend(*(id *)(v0 + 184), "collectionID");
    if (!result)
      goto LABEL_21;
    v13 = result;
    v14 = *(_QWORD *)(v0 + 192);
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v17 = v16;

    sub_1003B1DAC(v14, v11, v15, v17);
    swift_bridgeObjectRelease(v17);

    ++v8;
    if (v12 == v5)
    {
      v6 = *(_QWORD *)(v0 + 176);
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1005456CC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  __n128 v35;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39[2];

  v1 = *(void **)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 264);
  swift_release(*(_QWORD *)(v0 + 216));
  swift_willThrow(v3);
  swift_unknownObjectRelease(v2);

  if (qword_1009CE828 != -1)
    swift_once(&qword_1009CE828, sub_100542F28);
  v4 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 280);
  v6 = *(void **)(v0 + 184);
  v7 = type metadata accessor for Logger(0);
  sub_100048F64(v7, (uint64_t)qword_1009EAAA0);
  v8 = v6;
  swift_errorRetain(v5);
  swift_bridgeObjectRetain(v4);
  v9 = v8;
  v10 = swift_errorRetain(v5);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v37 = v0 + 160;
    v13 = *(_QWORD *)(v0 + 248);
    v15 = *(_QWORD *)(v0 + 176);
    v14 = *(void **)(v0 + 184);
    v16 = swift_slowAlloc(32, -1);
    v17 = swift_slowAlloc(64, -1);
    v39[0] = v17;
    *(_DWORD *)v16 = 134218498;
    *(_QWORD *)(v0 + 144) = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 144, v0 + 152, v16 + 4, v16 + 12);
    *(_QWORD *)&v18 = swift_bridgeObjectRelease(v15).n128_u64[0];
    *(_WORD *)(v16 + 12) = 2080;
    v19 = objc_msgSend(v14, "title", v18);
    v38 = v12;
    if (v19)
    {
      v20 = v19;
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v23 = v22;

    }
    else
    {
      v21 = 0;
      v23 = 0;
    }
    v27 = *(_QWORD *)(v0 + 280);
    v28 = *(void **)(v0 + 184);
    v29 = Optional<A>.description.getter(v21, v23);
    v31 = v30;
    swift_bridgeObjectRelease(v23);
    *(_QWORD *)(v0 + 168) = sub_100040F58(v29, v31, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 168, v0 + 176, v16 + 14, v16 + 22);
    swift_bridgeObjectRelease(v31);

    *(_WORD *)(v16 + 22) = 2080;
    swift_getErrorValue(v27, v37, v0 + 120);
    v32 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
    v34 = v33;
    *(_QWORD *)(v0 + 152) = sub_100040F58(v32, v33, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 152, v37, v16 + 24, v16 + 32);
    swift_bridgeObjectRelease(v34);
    swift_errorRelease(v27);
    swift_errorRelease(v27);
    _os_log_impl((void *)&_mh_execute_header, v11, v38, "Unable to remove %ld books from %s due to %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy(v17, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    swift_slowDealloc(v16, -1, -1);

    swift_errorRelease(v27);
  }
  else
  {
    v24 = *(_QWORD *)(v0 + 280);
    v25 = *(_QWORD *)(v0 + 176);
    v26 = *(void **)(v0 + 184);
    swift_errorRelease(v24);
    swift_bridgeObjectRelease(v25);

    swift_errorRelease(v24);
    swift_errorRelease(v24);

  }
  v35 = swift_task_dealloc(*(_QWORD *)(v0 + 200));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v35);
}

uint64_t sub_100545A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100545A7C, v7, v8);
}

uint64_t sub_100545A7C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  Class isa;
  id v4;
  unint64_t v5;
  Class v6;

  v1 = *(void **)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 32));
  v2 = (void *)objc_opt_self(BSUINoticeViewController);
  sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(v1, "title");
  v5 = sub_1000560A8((uint64_t)_swiftEmptyArrayStorage);
  v6 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "presentNoticeForRemovingBooks:fromCollectionNamed:options:useNonSpecificDeterminerInMessage:", isa, v4, v6, 0, swift_bridgeObjectRelease(v5).n128_f64[0]);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100545B7C(unint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  char **v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  signed int v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v62;
  char v63;
  char v64;
  char v65;
  void *v66;
  unint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  char v74;
  unint64_t v75;
  char v76;
  char v77;
  char v78;
  void *v79;
  unint64_t v80;
  id v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  char v85;
  char v86;
  char v87;
  void *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  void *v94;
  Class isa;
  Class v96;
  Class v97;
  Class v98;
  unint64_t v100;
  uint64_t v101;
  int64_t v102;
  int64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  unint64_t v111;
  void *v112;
  _QWORD v113[6];

  v2 = a1;
  v112 = &_swiftEmptySetSingleton;
  v111 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
    goto LABEL_98;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  v4 = &selRef_collectionIconName_Downloaded;
  if (v3)
  {
LABEL_3:
    v5 = 0;
    v6 = v2 & 0xC000000000000001;
    v103 = v2 + 32;
    v104 = v2 & 0xFFFFFFFFFFFFFF8;
    v100 = v2 & 0xC000000000000001;
    v101 = v3;
    v102 = v2;
    while (1)
    {
      if (v6)
      {
        v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      }
      else
      {
        if (v5 >= *(_QWORD *)(v104 + 16))
          goto LABEL_97;
        v8 = *(id *)(v103 + 8 * v5);
      }
      v7 = v8;
      if (__OFADD__(v5++, 1))
        goto LABEL_96;
      if (objc_msgSend(v8, v4[142]) != 5)
      {
        v22 = v7;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
        v24 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v23 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v24 >= v23 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
        v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
        specialized Array._endMutation()(v25);
        goto LABEL_5;
      }
      v10 = objc_msgSend(v7, "purchasedAndLocalSeriesItems");
      if (v10)
        break;
LABEL_5:

      if (v5 == v3)
      {
        swift_bridgeObjectRelease(v2);
        v43 = v111;
        if (!(v111 >> 62))
          goto LABEL_51;
LABEL_103:
        if (v43 < 0)
          v91 = v43;
        else
          v91 = v43 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v43);
        v44 = _CocoaArrayWrapper.endIndex.getter(v91);
        if (!v44)
          goto LABEL_107;
LABEL_52:
        if (v44 >= 1)
        {
          v45 = 0;
          v46 = _swiftEmptyDictionarySingleton;
          v47 = _swiftEmptyDictionarySingleton;
          v48 = _swiftEmptyDictionarySingleton;
          v105 = v44;
          while (1)
          {
            if ((v43 & 0xC000000000000001) != 0)
              v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v45, v43);
            else
              v49 = *(id *)(v43 + 8 * v45 + 32);
            v50 = v49;
            v51 = objc_msgSend(v49, "storeID");
            if (v51)
            {
              v52 = v51;
              v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
              v55 = v54;

              v109 = (_QWORD *)v53;
              v110 = v55;
              v56 = sub_1001F15BC();
              if ((Collection.isNotEmpty.getter(&type metadata for String, v56) & 1) != 0)
              {
                swift_bridgeObjectRetain(v55);
                sub_1000345F0((uint64_t *)&v109, v53, v55);
                swift_bridgeObjectRelease(v110);
                type metadata accessor for Utilities(0);
                v57 = objc_msgSend(v50, "contentType", swift_bridgeObjectRetain(v55).n128_f64[0]);
                v58 = dispatch thunk of static Utilities.contentType(from:)(v57);
                v59 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", BridgedContentType.rawValue.getter(v58));
                if (v59)
                {
                  v60 = (uint64_t)v59;
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v48);
                  v109 = v48;
                  sub_1002C4350(v60, v53, v55, isUniquelyReferenced_nonNull_native);
                  v48 = v109;
                  goto LABEL_68;
                }
                swift_bridgeObjectRetain(v48);
                v62 = sub_10004CE80(v53, v55);
                v64 = v63;
                swift_bridgeObjectRelease(v48);
                if ((v64 & 1) != 0)
                {
                  v65 = swift_isUniquelyReferenced_nonNull_native(v48);
                  v109 = v48;
                  if ((v65 & 1) == 0)
                  {
                    sub_1002C0608();
                    v48 = v109;
                  }
                  swift_bridgeObjectRelease(*(_QWORD *)(v48[6] + 16 * v62 + 8));
                  v66 = *(void **)(v48[7] + 8 * v62);
                  sub_1002BE924(v62, (uint64_t)v48);

LABEL_68:
                  swift_bridgeObjectRelease(v55);
                  v67 = 0x8000000000000000;
                }
                else
                {
                  v67 = v55;
                }
                v68 = objc_msgSend(v50, "supplementalContentAssets", swift_bridgeObjectRelease(v67).n128_f64[0]);
                if (v68)
                {
                  v69 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
                  v70 = sub_100384B9C((unint64_t *)&qword_1009D6DB0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
                  v71 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v68, v69, v70);

                  if ((v71 & 0xC000000000000001) != 0)
                  {
                    if (v71 < 0)
                      v72 = v71;
                    else
                      v72 = v71 & 0xFFFFFFFFFFFFFF8;
                    v68 = (id)__CocoaSet.count.getter(v72);
                  }
                  else
                  {
                    v68 = *(id *)(v71 + 16);
                  }
                  swift_bridgeObjectRelease(v71);
                }
                v73 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v68);
                swift_bridgeObjectRetain(v55);
                if (v73)
                {
                  v74 = swift_isUniquelyReferenced_nonNull_native(v47);
                  v109 = v47;
                  sub_1002C4350((uint64_t)v73, v53, v55, v74);
                  v47 = v109;
                  goto LABEL_83;
                }
                swift_bridgeObjectRetain(v47);
                v75 = sub_10004CE80(v53, v55);
                v77 = v76;
                swift_bridgeObjectRelease(v47);
                if ((v77 & 1) != 0)
                {
                  v78 = swift_isUniquelyReferenced_nonNull_native(v47);
                  v109 = v47;
                  if ((v78 & 1) == 0)
                  {
                    sub_1002C0608();
                    v47 = v109;
                  }
                  swift_bridgeObjectRelease(*(_QWORD *)(v47[6] + 16 * v75 + 8));
                  v79 = *(void **)(v47[7] + 8 * v75);
                  sub_1002BE924(v75, (uint64_t)v47);

LABEL_83:
                  swift_bridgeObjectRelease(v55);
                  v80 = 0x8000000000000000;
                }
                else
                {
                  v80 = v55;
                }
                v81 = objc_msgSend(v50, "hasRACSupport", swift_bridgeObjectRelease(v80).n128_f64[0]);
                if (v81)
                {
                  v82 = (uint64_t)v81;
                  v83 = swift_isUniquelyReferenced_nonNull_native(v46);
                  v109 = v46;
                  sub_1002C4350(v82, v53, v55, v83);
                  v46 = v109;

                  goto LABEL_90;
                }
                swift_bridgeObjectRetain(v46);
                v84 = sub_10004CE80(v53, v55);
                v86 = v85;
                swift_bridgeObjectRelease(v46);
                if ((v86 & 1) != 0)
                {
                  v87 = swift_isUniquelyReferenced_nonNull_native(v46);
                  v109 = v46;
                  if ((v87 & 1) == 0)
                  {
                    sub_1002C0608();
                    v46 = v109;
                  }
                  swift_bridgeObjectRelease(*(_QWORD *)(v46[6] + 16 * v84 + 8));
                  v88 = *(void **)(v46[7] + 8 * v84);
                  sub_1002BE924(v84, (uint64_t)v46);

LABEL_90:
                  swift_bridgeObjectRelease(v55);
                  v89 = 0x8000000000000000;
                }
                else
                {

                  v89 = v55;
                }
                swift_bridgeObjectRelease(v89);
                v44 = v105;
                goto LABEL_56;
              }
              swift_bridgeObjectRelease(v55);
            }

LABEL_56:
            if (v44 == ++v45)
              goto LABEL_108;
          }
        }
        __break(1u);
LABEL_111:
        __break(1u);
        return;
      }
    }
    v11 = v10;
    v12 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v13 = sub_100384B9C((unint64_t *)&qword_1009D6DB0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v14 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v11, v12, v13);

    v106 = v7;
    v107 = v12;
    if ((v14 & 0xC000000000000001) != 0)
    {
      if (v14 < 0)
        v17 = v14;
      else
        v17 = v14 & 0xFFFFFFFFFFFFFF8;
      v18 = __CocoaSet.makeIterator()(v17, v16);
      v15 = Set.Iterator.init(_cocoa:)(v113, v18, v12, v13);
      v14 = v113[0];
      v19 = v113[1];
      v20 = v113[2];
      v21 = v113[3];
      v2 = v113[4];
    }
    else
    {
      v21 = 0;
      v26 = -1 << *(_BYTE *)(v14 + 32);
      v19 = v14 + 56;
      v20 = ~v26;
      v27 = -v26;
      if (v27 < 64)
        v28 = ~(-1 << v27);
      else
        v28 = -1;
      v2 = v28 & *(_QWORD *)(v14 + 56);
    }
    v29 = (unint64_t)(v20 + 64) >> 6;
    if (v14 < 0)
      goto LABEL_28;
    while (1)
    {
      if (v2)
      {
        v30 = (v2 - 1) & v2;
        v31 = __clz(__rbit64(v2)) | (v21 << 6);
        v32 = v21;
      }
      else
      {
        v36 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          if (v2 < 0)
            v90 = v2;
          else
            v90 = v2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v2);
          v3 = _CocoaArrayWrapper.endIndex.getter(v90);
          v4 = &selRef_collectionIconName_Downloaded;
          if (!v3)
            break;
          goto LABEL_3;
        }
        if (v36 >= v29)
          goto LABEL_4;
        v37 = *(_QWORD *)(v19 + 8 * v36);
        v32 = v21 + 1;
        if (!v37)
        {
          v32 = v21 + 2;
          if (v21 + 2 >= v29)
            goto LABEL_4;
          v37 = *(_QWORD *)(v19 + 8 * v32);
          if (!v37)
          {
            v32 = v21 + 3;
            if (v21 + 3 >= v29)
              goto LABEL_4;
            v37 = *(_QWORD *)(v19 + 8 * v32);
            if (!v37)
            {
              v32 = v21 + 4;
              if (v21 + 4 >= v29)
                goto LABEL_4;
              v37 = *(_QWORD *)(v19 + 8 * v32);
              if (!v37)
              {
                v38 = v21 + 5;
                while (v29 != v38)
                {
                  v37 = *(_QWORD *)(v19 + 8 * v38++);
                  if (v37)
                  {
                    v32 = v38 - 1;
                    goto LABEL_44;
                  }
                }
LABEL_4:
                sub_100299C3C(v14);
                v4 = &selRef_collectionIconName_Downloaded;
                v3 = v101;
                v2 = v102;
                v6 = v100;
                v7 = v106;
                goto LABEL_5;
              }
            }
          }
        }
LABEL_44:
        v30 = (v37 - 1) & v37;
        v31 = __clz(__rbit64(v37)) + (v32 << 6);
      }
      v35 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v31);
      if (!v35)
        goto LABEL_4;
      while (1)
      {
        v39 = v35;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
        v41 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v40 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v41 >= v40 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
        v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v39);
        specialized Array._endMutation()(v42);

        v21 = v32;
        v2 = v30;
        if ((v14 & 0x8000000000000000) == 0)
          break;
LABEL_28:
        v33 = __CocoaSet.Iterator.next()(v15);
        if (v33)
        {
          v34 = v33;
          v108 = v33;
          swift_unknownObjectRetain(v33);
          swift_dynamicCast(&v109, &v108, (char *)&type metadata for Swift.AnyObject + 8, v107, 7);
          v35 = v109;
          swift_unknownObjectRelease(v34);
          v32 = v21;
          v30 = v2;
          if (v35)
            continue;
        }
        goto LABEL_4;
      }
    }
  }
  swift_bridgeObjectRelease(v2);
  v43 = (uint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    goto LABEL_103;
LABEL_51:
  v44 = *(_QWORD *)((v43 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v43);
  if (v44)
    goto LABEL_52;
LABEL_107:
  v46 = _swiftEmptyDictionarySingleton;
  v47 = _swiftEmptyDictionarySingleton;
  v48 = _swiftEmptyDictionarySingleton;
LABEL_108:
  swift_bridgeObjectRelease(v43);
  v92 = objc_msgSend((id)objc_opt_self(BSUIStoreServices), "sharedInstance");
  if (!v92)
    goto LABEL_111;
  v93 = v92;
  swift_bridgeObjectRelease(v111);
  v94 = v112;
  isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v94);
  sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  v96 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v48);
  v97 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v47);
  v98 = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v93, "hidePurchasedForStoreIDs:contentTypeDictionary:supplementalContentCountDictionary:hasRACSupportDictionary:tracker:", isa, v96, v97, v98, a2, swift_bridgeObjectRelease(v46).n128_f64[0]);

}

uint64_t sub_1005465B0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[2] = a1;
  v2 = type metadata accessor for MainActor(0);
  v1[3] = v2;
  v1[4] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[5] = v3;
  v1[6] = v4;
  return swift_task_switch(sub_100546620, v3, v4);
}

uint64_t sub_100546620(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1[2];
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v19 = v1[2];
    else
      v19 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1[2]);
    v3 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v3)
    goto LABEL_12;
  result = sub_100045E44(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v2 & 0xC000000000000001;
    v20 = v1[2] + 32;
    do
    {
      if (v6)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1[2]);
      else
        v7 = *(id *)(v20 + 8 * v5);
      v8 = v7;
      v9 = objc_msgSend(v7, "permanentOrTemporaryAssetID");
      v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v12 = v11;

      v14 = _swiftEmptyArrayStorage[2];
      v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1)
        a1 = sub_100045E44(v13 > 1, v14 + 1, 1);
      ++v5;
      _swiftEmptyArrayStorage[2] = v14 + 1;
      v15 = &_swiftEmptyArrayStorage[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
    }
    while (v3 != v5);
LABEL_12:
    v1[7] = _swiftEmptyArrayStorage;
    v16 = static MainActor.shared.getter(a1);
    v1[8] = v16;
    v17 = swift_task_alloc(32);
    v1[9] = v17;
    *(_QWORD *)(v17 + 16) = _swiftEmptyArrayStorage;
    v18 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    v1[10] = v18;
    *v18 = v1;
    v18[1] = sub_100546810;
    return withCheckedContinuation<A>(isolation:function:_:)(v18, v16, &protocol witness table for MainActor, 0xD00000000000001ALL, 0x80000001007D23F0, sub_10054B4A4, v17, (char *)&type metadata for () + 8);
  }
  __break(1u);
  return result;
}

uint64_t sub_100546810()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v4 = *(_QWORD *)(*v0 + 56);
  v3 = *(_QWORD *)(*v0 + 64);
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  swift_bridgeObjectRelease(v4);
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100283DE4, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_100546880(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSString v10;
  id v11;
  uint64_t v13;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(a2);
    v7 = 40;
    v8 = 1;
    do
    {
      v9 = *(_QWORD *)(a2 + v7);
      swift_bridgeObjectRetain(v9);
      v10 = String._bridgeToObjectiveC()();
      v11 = objc_msgSend(a3, "libraryMutableAssetWithPermanentOrTemporaryAssetID:inManagedObjectContext:", v10, a1);

      if (v11)
      {
        objc_msgSend(v11, "setIsTrackedAsRecent:", 0);
        swift_bridgeObjectRelease(v9);

        if (v3 == v8)
          goto LABEL_10;
      }
      else
      {
        swift_bridgeObjectRelease(v9);
        if (v3 == v8)
          goto LABEL_10;
      }
      v7 += 16;
    }
    while (!__OFADD__(v8++, 1));
    __break(1u);
LABEL_10:
    swift_bridgeObjectRelease(a2);
  }
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  return CheckedContinuation.resume(returning:)(v13, v13);
}

uint64_t sub_1005469A8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = v3;
  v2[5] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  v2[6] = v4;
  v2[7] = v5;
  return swift_task_switch(sub_100546A18, v4, v5);
}

uint64_t sub_100546A18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1[2];
  if ((unint64_t)v2 >> 62)
  {
    if (v2 < 0)
      v22 = v1[2];
    else
      v22 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1[2]);
    v3 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v3)
    goto LABEL_15;
  result = sub_100366BDC(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v2 & 0xC000000000000001;
    v23 = v1[2] + 32;
    do
    {
      if (v6)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v1[2]);
      else
        v7 = *(id *)(v23 + 8 * v5);
      v8 = v7;
      v9 = objc_msgSend(v7, "assetID");
      if (v9)
      {
        v10 = v9;
        v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
        v13 = v12;

      }
      else
      {

        v11 = 0;
        v13 = 0;
      }
      v15 = _swiftEmptyArrayStorage[2];
      v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1)
        a1 = sub_100366BDC(v14 > 1, v15 + 1, 1);
      ++v5;
      _swiftEmptyArrayStorage[2] = v15 + 1;
      v16 = &_swiftEmptyArrayStorage[2 * v15];
      v16[4] = v11;
      v16[5] = v13;
    }
    while (v3 != v5);
LABEL_15:
    v1[8] = _swiftEmptyArrayStorage;
    v17 = v1[3];
    v18 = v1[2];
    v19 = static MainActor.shared.getter(a1);
    v1[9] = v19;
    v20 = (_QWORD *)swift_task_alloc(48);
    v1[10] = v20;
    v20[2] = v18;
    v20[3] = v17;
    v20[4] = _swiftEmptyArrayStorage;
    v21 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
    v1[11] = v21;
    *v21 = v1;
    v21[1] = sub_100546C24;
    return withCheckedContinuation<A>(isolation:function:_:)(v21, v19, &protocol witness table for MainActor, 0xD00000000000001ELL, 0x80000001007D23D0, sub_10054B300, v20, (char *)&type metadata for () + 8);
  }
  __break(1u);
  return result;
}

uint64_t sub_100546C24()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  v4 = *(_QWORD *)(*v0 + 64);
  v3 = *(_QWORD *)(*v0 + 72);
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  swift_bridgeObjectRelease(v4);
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10020DB80, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

void sub_100546C94(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  double v30;
  id v31;
  Class v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  Class isa;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  _QWORD v56[3];
  char v57[8];
  uint64_t v58;
  uint64_t v59;
  id aBlock[5];
  uint64_t v61;

  v54 = a3;
  v55 = a4;
  v53 = a1;
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&isa - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v10 = objc_msgSend(v9, "collectionProvider");
  static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDSamples);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v9, "uiChildContext", swift_bridgeObjectRelease(v12).n128_f64[0]);
  aBlock[0] = 0;
  v15 = objc_msgSend(v10, "collectionWithCollectionID:inManagedObjectContext:error:", v13, v14, aBlock);
  swift_unknownObjectRelease(v10);

  v16 = aBlock[0];
  if (v15)
  {
    v17 = aBlock[0];
    v52 = objc_msgSend(v9, "collectionController");
    sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v18 = a2;
    isa = Array._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, id, uint64_t))(v6 + 16))((char *)&isa - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v53, v5);
    v19 = *(unsigned __int8 *)(v6 + 80);
    v20 = (v19 + 16) & ~v19;
    v21 = (v7 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v53 = v9;
    v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    v24 = swift_allocObject(&unk_10090F150, v23 + 8, v19 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v24 + v20, v8, v5);
    v25 = v54;
    *(_QWORD *)(v24 + v21) = v54;
    *(_QWORD *)(v24 + v22) = v18;
    v26 = v55;
    *(_QWORD *)(v24 + v23) = v55;
    aBlock[4] = sub_10054B3AC;
    v61 = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1002A7214;
    aBlock[3] = &unk_10090F168;
    v27 = _Block_copy(aBlock);
    v28 = v61;
    v29 = v25;
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v26);
    swift_unknownObjectRetain(v15);
    *(_QWORD *)&v30 = swift_release(v28).n128_u64[0];
    v32 = isa;
    v31 = v52;
    objc_msgSend(v52, "removeBooks:fromCollection:completion:", isa, v15, v27, v30);

    _Block_release(v27);
    swift_unknownObjectRelease(v31);

    swift_unknownObjectRelease_n(v15, 2);
  }
  else
  {
    v33 = v55;
    v34 = v9;
    v35 = aBlock[0];
    v36 = _convertNSErrorToError(_:)(v16);

    swift_willThrow(v37);
    if (qword_1009CE828 != -1)
      swift_once(&qword_1009CE828, sub_100542F28);
    v38 = type metadata accessor for Logger(0);
    sub_100048F64(v38, (uint64_t)qword_1009EAAA0);
    swift_bridgeObjectRetain(v33);
    swift_errorRetain(v36);
    swift_bridgeObjectRetain(v33);
    v39 = swift_errorRetain(v36);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc(22, -1);
      v43 = (void *)swift_slowAlloc(64, -1);
      aBlock[0] = v43;
      *(_DWORD *)v42 = 136315394;
      swift_bridgeObjectRetain(v33);
      v44 = sub_10004CFD4(&qword_1009D2A80);
      v45 = Array.description.getter(v33, v44);
      v47 = v46;
      swift_bridgeObjectRelease(v33);
      v58 = sub_100040F58(v45, v47, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v42 + 4, v42 + 12);
      swift_bridgeObjectRelease_n(v33, 2);
      swift_bridgeObjectRelease(v47);
      *(_WORD *)(v42 + 12) = 2080;
      swift_getErrorValue(v36, v57, v56);
      v48 = Error.localizedDescription.getter(v56[1], v56[2]);
      v50 = v49;
      v58 = sub_100040F58(v48, v49, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59, v42 + 14, v42 + 22);
      swift_bridgeObjectRelease(v50);
      swift_errorRelease(v36);
      swift_errorRelease(v36);
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Error removing book from my samples. assetIDs: %s error: %s", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy(v43, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

      swift_errorRelease(v36);
    }
    else
    {

      swift_errorRelease(v36);
      swift_bridgeObjectRelease_n(v33, 2);
      swift_errorRelease(v36);
      swift_errorRelease(v36);

    }
  }
}

uint64_t sub_1005471DC(char a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD v35[3];
  _BYTE v36[8];
  uint64_t v37;
  uint64_t v38;

  v11 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v11);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    if (a4)
    {
      v14 = type metadata accessor for TaskPriority(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
      type metadata accessor for MainActor(0);
      v15 = a4;
      swift_bridgeObjectRetain(a5);
      v17 = static MainActor.shared.getter(v16);
      v18 = (_QWORD *)swift_allocObject(&unk_10090F1A0, 48, 7);
      v18[2] = v17;
      v18[3] = &protocol witness table for MainActor;
      v18[4] = a5;
      v18[5] = v15;
      v19 = sub_10030C02C((uint64_t)v13, (uint64_t)&unk_1009EAB10, (uint64_t)v18);
      swift_release(v19);
    }
  }
  else
  {
    if (qword_1009CE828 != -1)
      swift_once(&qword_1009CE828, sub_100542F28);
    v20 = type metadata accessor for Logger(0);
    sub_100048F64(v20, (uint64_t)qword_1009EAAA0);
    swift_bridgeObjectRetain(a6);
    swift_errorRetain(a2);
    swift_bridgeObjectRetain(a6);
    v21 = swift_errorRetain(a2);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(22, -1);
      v25 = swift_slowAlloc(64, -1);
      v38 = v25;
      *(_DWORD *)v24 = 136315394;
      swift_bridgeObjectRetain(a6);
      v26 = sub_10004CFD4(&qword_1009D2A80);
      v27 = Array.description.getter(a6, v26);
      v29 = v28;
      swift_bridgeObjectRelease(a6);
      v37 = sub_100040F58(v27, v29, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease_n(a6, 2);
      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v24 + 12) = 2080;
      if (a2)
      {
        swift_getErrorValue(a2, v36, v35);
        v30 = Error.localizedDescription.getter(v35[1], v35[2]);
        v32 = v31;
      }
      else
      {
        v32 = 0xE300000000000000;
        v30 = 7104878;
      }
      v37 = sub_100040F58(v30, v32, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38, v24 + 14, v24 + 22);
      swift_bridgeObjectRelease(v32);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Error removing book from my samples. assetIDs: %s error: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n(a6, 2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

  }
  v33 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  return CheckedContinuation.resume(returning:)(v33, v33);
}

uint64_t sub_10054753C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for MainActor(0);
  v5[4] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005475A8, v7, v8);
}

void sub_1005475A8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 32));
  v2 = *(_QWORD *)(v0 + 16);
  if (!(v1 >> 62))
  {
    v3 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    v15 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
    (*(void (**)(__n128))(v0 + 8))(v15);
    return;
  }
  if (v2 < 0)
    v14 = *(_QWORD *)(v0 + 16);
  else
    v14 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v3 = _CocoaArrayWrapper.endIndex.getter(v14);
  if (!v3)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    v4 = 0;
    v5 = *(_QWORD *)(v0 + 24);
    v6 = v1 & 0xC000000000000001;
    v7 = *(_QWORD *)(v0 + 16) + 32;
    v8 = kBKCollectionDefaultIDSamples;
    do
    {
      if (v6)
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, *(_QWORD *)(v0 + 16));
      else
        v9 = *(id *)(v7 + 8 * v4);
      v10 = v9;
      ++v4;
      v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
      v13 = v12;
      sub_1003B1DAC(v5, v10, v11, v12);
      swift_bridgeObjectRelease(v13);

    }
    while (v3 != v4);
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1005476BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v10 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v14 = *(unsigned __int8 *)(v11 + 80);
  v15 = (v14 + 32) & ~v14;
  v16 = swift_allocObject(a3, v15 + v12, v14 | 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = v13;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v16 + v15, (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = a4;
  v21 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = a5;
  v17 = _Block_copy(aBlock);
  v18 = v21;
  swift_bridgeObjectRetain(a2);
  v19 = v13;
  objc_msgSend(v19, "performBlockOnWorkerQueue:", v17, swift_release(v18).n128_f64[0]);
  _Block_release(v17);

}

uint64_t sub_10054782C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  NSString v9;
  id v10;
  uint64_t v11;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain(a2);
    v7 = (_QWORD *)(a2 + 40);
    do
    {
      v8 = *v7;
      swift_bridgeObjectRetain(*v7);
      v9 = String._bridgeToObjectiveC()();
      v10 = objc_msgSend(a3, "libraryMutableAssetWithPermanentOrTemporaryAssetID:inManagedObjectContext:", v9, a1, swift_bridgeObjectRelease(v8).n128_f64[0]);

      objc_msgSend(v10, "setFinishedStateUserSetsUnfinished");
      v7 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(a2);
  }
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  return CheckedContinuation.resume(returning:)(v11, v11);
}

uint64_t sub_100547910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7, void *a8, char a9, uint64_t a10)
{
  void *v17;
  uint64_t v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v29;
  void *v30;
  void *v31;
  _QWORD aBlock[5];
  uint64_t v33;
  __int128 v34[2];
  __int128 v35[3];
  id v36[2];

  v17 = *(void **)a2;
  v29 = *(void **)(a2 + 8);
  sub_100548140(a2 + 16, (uint64_t)v36);
  v30 = *(void **)(a2 + 24);
  v31 = *(void **)(a2 + 32);
  sub_1001EB84C(a7, (uint64_t)v35);
  sub_10002E418(a10, (uint64_t)v34);
  v18 = swift_allocObject(&unk_10090F068, 184, 7);
  v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 48) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(v18 + 56) = a3;
  *(_QWORD *)(v18 + 64) = a4;
  *(_BYTE *)(v18 + 72) = a5;
  *(_BYTE *)(v18 + 73) = a6;
  sub_1001EB834(v35, (_OWORD *)(v18 + 80));
  *(_QWORD *)(v18 + 128) = a8;
  *(_BYTE *)(v18 + 136) = a9;
  sub_100022840(v34, v18 + 144);
  aBlock[4] = sub_1005481EC;
  v33 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001EDBF0;
  aBlock[3] = &unk_10090F080;
  v20 = _Block_copy(aBlock);
  v21 = v33;
  v22 = v17;
  v23 = v29;
  sub_100548230(v36);
  v24 = a8;
  v25 = v30;
  v26 = v31;
  swift_bridgeObjectRetain(a4);
  objc_msgSend(v23, "performBlockOnWorkerQueue:", v20, swift_release(v21).n128_f64[0]);
  _Block_release(v20);
  v27 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  return CheckedContinuation.resume(returning:)(v27, v27);
}

void sub_100547ABC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, int a5, int a6, uint64_t a7, void *a8, unsigned __int8 a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  NSString v30;
  id v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  Class isa;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  double v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  int v85;
  char *v86;
  id v87;
  int v88;
  __int128 v89[2];
  __int128 v90[3];
  char v91[64];
  id v92[2];

  v87 = a8;
  v84 = a7;
  v85 = a6;
  v88 = a5;
  v14 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v14);
  v86 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v16);
  v83 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocationType(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10004CFD4(&qword_1009ECA50);
  inited = swift_initStackObject(v22, v91);
  *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
  *(_QWORD *)(inited + 32) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 40) = 0x80000001007B7530;
  v24 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v19 + 104))(v21, enum case for LocationType.fromContextualActionSheet(_:), v18);
  v25 = LocationType.rawValue.getter(v24);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  *(_QWORD *)(inited + 48) = v25;
  *(_QWORD *)(inited + 56) = v27;
  v28 = sub_1000316DC(inited);
  v29 = *(void **)(a2 + 8);
  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v29, "libraryMutableAssetWithPermanentOrTemporaryAssetID:inManagedObjectContext:", v30, a1);

  if (v31)
  {
    v32 = v31;
    v33 = v88;
    if ((v88 & 1) != 0)
    {
      sub_1004EE314(v28);
      v35 = v34;
      swift_bridgeObjectRelease(v28);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v32, "setFinishedStateUserSetsFinished:userInfo:", 0, isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

    }
    else
    {
      objc_msgSend(v32, "setFinishedStateUserSetsUnfinished", swift_bridgeObjectRelease(v28).n128_f64[0]);
    }
    *(_QWORD *)&v90[0] = type metadata accessor for ReadingActivityService();
    v55 = sub_10004CFD4(&qword_1009F0760);
    v56 = String.init<A>(describing:)(v90, v55);
    v58 = v57;
    v59 = (char *)sub_10006BAEC(v56, v57);
    *(_QWORD *)&v60 = swift_bridgeObjectRelease(v58).n128_u64[0];
    if (v59)
    {
      v61 = objc_msgSend(v32, "permanentOrTemporaryAssetID", v60);
      v62 = static String._unconditionallyBridgeFromObjectiveC(_:)(v61);
      v64 = v63;

      v65 = objc_msgSend(v32, "dateFinished");
      if (v65)
      {
        v66 = v65;
        v67 = (uint64_t)v83;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v65);

        v68 = type metadata accessor for Date(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v67, 0, 1, v68);
      }
      else
      {
        v69 = type metadata accessor for Date(0);
        v67 = (uint64_t)v83;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v83, 1, 1, v69);
      }
      v70 = *(_QWORD *)&v59[OBJC_IVAR___BKReadingActivityService_achievementsController];
      if (v70)
      {
        swift_retain(*(_QWORD *)&v59[OBJC_IVAR___BKReadingActivityService_achievementsController]);
        dispatch thunk of ReadingAchievementsController.willMarkAsset(_:finished:finishedDate:)(v62, v64, v33 & 1, v67);

        swift_bridgeObjectRelease(v64);
        swift_release(v70);
        sub_100010960(v67, &qword_1009D7440);
        v71 = type metadata accessor for TaskPriority(0);
        v72 = (uint64_t)v86;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v86, 1, 1, v71);
        sub_1001EB84C(v84, (uint64_t)v90);
        type metadata accessor for MainActor(0);
        v73 = v87;
        v74 = static MainActor.shared.getter(v87);
        v75 = swift_allocObject(&unk_10090F0E0, 96, 7);
        *(_QWORD *)(v75 + 16) = v74;
        *(_QWORD *)(v75 + 24) = &protocol witness table for MainActor;
        *(_BYTE *)(v75 + 32) = v33 & 1;
        *(_BYTE *)(v75 + 33) = v85;
        sub_1001EB834(v90, (_OWORD *)(v75 + 40));
        *(_QWORD *)(v75 + 88) = v73;
        v76 = sub_10030C02C(v72, (uint64_t)&unk_1009EAAD8, v75);
        swift_release(v76);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else if ((v88 & 1) != 0)
  {
    v88 = a9;
    v37 = type metadata accessor for TaskPriority(0);
    v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56);
    v83 = a3;
    v39 = (uint64_t)v86;
    v38(v86, 1, 1, v37);
    v40 = *(void **)a2;
    sub_100548140(a2 + 16, (uint64_t)v92);
    v42 = *(void **)(a2 + 24);
    v41 = *(void **)(a2 + 32);
    sub_1001EB84C(v84, (uint64_t)v90);
    sub_10002E418(a10, (uint64_t)v89);
    type metadata accessor for MainActor(0);
    v43 = v87;
    v44 = v87;
    v45 = v40;
    v46 = v29;
    sub_100548230(v92);
    v47 = v42;
    v48 = v41;
    swift_bridgeObjectRetain(a4);
    v50 = static MainActor.shared.getter(v49);
    v51 = swift_allocObject(&unk_10090F0B8, 208, 7);
    *(_QWORD *)(v51 + 16) = v50;
    *(_QWORD *)(v51 + 24) = &protocol witness table for MainActor;
    v52 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v51 + 32) = *(_OWORD *)a2;
    *(_OWORD *)(v51 + 48) = v52;
    v53 = v83;
    *(_QWORD *)(v51 + 64) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(v51 + 72) = v53;
    *(_QWORD *)(v51 + 80) = a4;
    *(_QWORD *)(v51 + 88) = v28;
    *(_BYTE *)(v51 + 96) = v85;
    sub_1001EB834(v90, (_OWORD *)(v51 + 104));
    *(_QWORD *)(v51 + 152) = v43;
    *(_BYTE *)(v51 + 160) = v88 & 1;
    sub_100022840(v89, v51 + 168);
    v54 = sub_10030C02C(v39, (uint64_t)&unk_1009EAAC8, v51);
    swift_release(v54);
  }
  else
  {
    swift_bridgeObjectRelease(v28);
    if (qword_1009CE828 != -1)
      swift_once(&qword_1009CE828, sub_100542F28);
    v77 = type metadata accessor for Logger(0);
    v78 = sub_100048F64(v77, (uint64_t)qword_1009EAAA0);
    v79 = Logger.logObject.getter(v78);
    v80 = static os_log_type_t.error.getter(v79);
    if (os_log_type_enabled(v79, v80))
    {
      v81 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v81 = 0;
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "Can't mark a book that's not in the library as not-finished", v81, 2u);
      swift_slowDealloc(v81, -1, -1);
    }

  }
}

uint64_t sub_100548140(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EAAB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100548188()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 64));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 80));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 144));
  return swift_deallocObject(v0, 184, 7);
}

void sub_1005481EC(uint64_t a1)
{
  uint64_t v1;

  sub_100547ABC(a1, v1 + 16, *(char **)(v1 + 56), *(_QWORD *)(v1 + 64), *(unsigned __int8 *)(v1 + 72), *(unsigned __int8 *)(v1 + 73), v1 + 80, *(void **)(v1 + 128), *(_BYTE *)(v1 + 136), v1 + 144);
}

id *sub_100548230(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

uint64_t sub_100548258(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 + 16) = a6;
  *(_QWORD *)(v7 + 24) = a7;
  *(_BYTE *)(v7 + 41) = a5;
  *(_BYTE *)(v7 + 40) = a4;
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v7 + 32) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005482CC, v9, v10);
}

uint64_t sub_1005482CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  char v3;
  int v4;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD **)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = *(unsigned __int8 *)(v0 + 41);
  swift_release(*(_QWORD *)(v0 + 32));
  sub_1003B168C(v3, v4, v2, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100548324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  char v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 168) = v15;
  *(_BYTE *)(v8 + 234) = v14;
  *(_OWORD *)(v8 + 152) = v13;
  *(_BYTE *)(v8 + 233) = a8;
  *(_QWORD *)(v8 + 136) = a6;
  *(_QWORD *)(v8 + 144) = a7;
  *(_QWORD *)(v8 + 120) = a4;
  *(_QWORD *)(v8 + 128) = a5;
  v9 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v8 + 176) = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  *(_QWORD *)(v8 + 184) = v10;
  *(_QWORD *)(v8 + 192) = v11;
  return swift_task_switch(sub_1005483B4, v10, v11);
}

uint64_t sub_1005483B4()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  NSString v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0 + 2;
  v2 = objc_msgSend(*(id *)(v0[15] + 8), "collectionController");
  v0[25] = v2;
  v3 = String._bridgeToObjectiveC()();
  v0[26] = v3;
  v0[7] = v0 + 29;
  v0[2] = v0;
  v0[3] = sub_100548494;
  v4 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_100542EA8;
  v5[3] = &unk_10090F0F8;
  v5[4] = v4;
  objc_msgSend(v2, "markAsFinishedStoreID:completion:", v3, v5);
  return swift_continuation_await(v1);
}

uint64_t sub_100548494()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 216) = v2;
  if (v2)
    v3 = sub_100548814;
  else
    v3 = sub_1005484F0;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 192));
}

uint64_t sub_1005484F0()
{
  uint64_t v0;
  void *v1;
  int v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  id v14;
  uint64_t v15;
  uint64_t v16;
  Class isa;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  __n128 v26;

  v1 = *(void **)(v0 + 208);
  v2 = *(unsigned __int8 *)(v0 + 232);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 200));

  if (v2 == 1)
  {
    v3 = *(unsigned __int8 *)(v0 + 234);
    v5 = *(_QWORD **)(v0 + 152);
    v4 = *(_QWORD *)(v0 + 160);
    v7 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 144);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(unsigned __int8 *)(v0 + 233);
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(BKLibraryAssetIDKey);
    v12 = v11;
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v6);
    sub_1002C38D0(v8, v7, v10, v12, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease(0x8000000000000000);
    swift_bridgeObjectRelease(v12);
    v14 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v15 = BKLibraryAssetMarkedAsFinishedNotification;
    v16 = sub_1004ED564(v6);
    swift_bridgeObjectRelease(v6);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v14, "postNotificationName:object:userInfo:", v15, 0, isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    sub_1003B168C(1, v9, v5, v4);
    if (v3 == 1)
    {
      v18 = kBKCollectionDefaultIDFinished;
      v19 = (_QWORD *)swift_task_alloc(dword_1009EAAE4);
      *(_QWORD *)(v0 + 224) = v19;
      *v19 = v0;
      v19[1] = sub_100548798;
      return sub_100549890(1, *(_QWORD *)(v0 + 152), v18, *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
    }
    v26 = swift_release(*(_QWORD *)(v0 + 176));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 176));
    if (qword_1009CE828 != -1)
      swift_once(&qword_1009CE828, sub_100542F28);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100048F64(v21, (uint64_t)qword_1009EAAA0);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Got error while marking as asset as finished", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }

  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v26);
}

uint64_t sub_100548798()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 224));
  return swift_task_switch(sub_1005487E4, *(_QWORD *)(v1 + 184), *(_QWORD *)(v1 + 192));
}

uint64_t sub_1005487E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 176));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100548814()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  BOOL v8;
  uint64_t v9;
  uint8_t *v10;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 176));
  swift_willThrow(v3);
  swift_unknownObjectRelease(v2);

  if (qword_1009CE828 != -1)
    swift_once(&qword_1009CE828, sub_100542F28);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100048F64(v4, (uint64_t)qword_1009EAAA0);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.error.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 216);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Got error while marking as asset as finished", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }
  swift_errorRelease(v9);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100548924(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  v7 = __chkstk_darwin(a1);
  v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 88))(v21, v7, v10);
  v11 = v22;
  if (v22)
  {
    v12 = v23;
    sub_10003F198(v21, v22);
    v13 = sub_100548A68(v11, v12);
    LOBYTE(v12) = v14;
    _s5Books15CurrentPageViewVwxx_0(v21);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, a1);
    if ((v12 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a1);
      return v13;
    }
  }
  else
  {
    sub_100010960((uint64_t)v21, &qword_1009E8A20);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, a1);
  }
  v15 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(a1, a2);
  sub_100549174(v15);
  v13 = v16;
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a1);
  if ((v18 & 1) != 0)
    return 0;
  return v13;
}

uint64_t sub_100548A68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  int v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  NSObject *v59;
  char *v60;
  os_log_type_t v61;
  _BOOL4 v62;
  uint8_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  void (*v70)(char *, char *);
  char *v71;
  char *v72;
  uint8_t *v73;
  void (*v74)(char *, char *);
  char *v75;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v3 = v2;
  v79 = a2;
  v85 = type metadata accessor for LibraryPDFInfo(0);
  v81 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v84 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LibraryBookInfo.BookType(0);
  v88 = *(_QWORD *)(v6 - 8);
  v89 = v6;
  v7 = __chkstk_darwin(v6);
  v78 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v87 = (char *)&v77 - v9;
  v10 = type metadata accessor for LibraryBookInfo(0);
  v90 = *(_QWORD *)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v80 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v86 = (char *)&v77 - v14;
  __chkstk_darwin(v13);
  v16 = (char *)&v77 - v15;
  v17 = type metadata accessor for LibraryAudiobookInfo(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v19);
  v82 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = (char *)&v77 - v24;
  v27 = v26;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v83 = v3;
  v28((char *)&v77 - v24, v3, a1);
  if (!swift_dynamicCast(v21, v25, a1, v17, 0))
  {
    v30 = a1;
    if (swift_dynamicCast(v16, v25, a1, v10, 0))
    {
      v32 = v90;
      v33 = v86;
      v34 = (*(uint64_t (**)(void))(v90 + 32))();
      v35 = v87;
      LibraryBookInfo.type.getter(v34);
      v36 = v88;
      v37 = v89;
      v38 = (*(uint64_t (**)(char *, uint64_t))(v88 + 88))(v35, v89);
      v31 = v27;
      if (v38 == enum case for LibraryBookInfo.BookType.epub(_:))
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v10);
        (*(void (**)(char *, uint64_t))(v36 + 96))(v35, v37);
        swift_bridgeObjectRelease(*((_QWORD *)v35 + 1));
        v29 = 1;
        goto LABEL_22;
      }
      if (v38 == enum case for LibraryBookInfo.BookType.iba(_:))
      {
        (*(void (**)(char *, uint64_t))(v90 + 8))(v33, v10);
        v29 = 4;
        goto LABEL_22;
      }
      v54 = (char *)v10;
      v55 = v90;
      if (qword_1009CE828 != -1)
        swift_once(&qword_1009CE828, sub_100542F28);
      v56 = type metadata accessor for Logger(0);
      sub_100048F64(v56, (uint64_t)qword_1009EAAA0);
      v57 = v80;
      v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v55 + 16))(v80, v33, v10);
      v59 = Logger.logObject.getter(v58);
      v60 = v33;
      v61 = static os_log_type_t.default.getter(v59);
      v62 = os_log_type_enabled(v59, v61);
      v84 = v54;
      if (v62)
      {
        v63 = (uint8_t *)swift_slowAlloc(12, -1);
        v64 = swift_slowAlloc(32, -1);
        v92 = v64;
        v85 = (uint64_t)v25;
        *(_DWORD *)v63 = 136315138;
        v83 = v30;
        v65 = v78;
        LibraryBookInfo.type.getter(v64);
        v66 = String.init<A>(describing:)(v65, v89);
        v68 = v67;
        v91 = sub_100040F58(v66, v67, &v92);
        v30 = v83;
        v25 = (char *)v85;
        v69 = v88;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v63 + 4, v63 + 12);
        swift_bridgeObjectRelease(v68);
        v70 = *(void (**)(char *, char *))(v90 + 8);
        v71 = v57;
        v72 = v84;
        v70(v71, v84);
        _os_log_impl((void *)&_mh_execute_header, v59, v61, "Unknown BookType: %s", v63, 0xCu);
        swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v64, -1, -1);
        v73 = v63;
        v37 = v89;
        swift_slowDealloc(v73, -1, -1);

        v70(v86, v72);
      }
      else
      {

        v74 = *(void (**)(char *, char *))(v55 + 8);
        v75 = v84;
        v74(v57, v84);
        v74(v60, v75);
        v69 = v88;
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v87, v37);
    }
    else
    {
      v40 = v84;
      v39 = v85;
      v41 = swift_dynamicCast(v84, v25, a1, v85, 0);
      v31 = v27;
      if (v41)
      {
        (*(void (**)(char *, uint64_t))(v81 + 8))(v40, v39);
        v29 = 3;
        goto LABEL_22;
      }
      if (qword_1009CE828 != -1)
        swift_once(&qword_1009CE828, sub_100542F28);
      v42 = type metadata accessor for Logger(0);
      sub_100048F64(v42, (uint64_t)qword_1009EAAA0);
      v43 = v82;
      v44 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v82, v83, v30);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter(v45);
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc(12, -1);
        v48 = swift_slowAlloc(32, -1);
        v85 = (uint64_t)v25;
        v49 = v48;
        v92 = v48;
        *(_DWORD *)v47 = 136315138;
        v50 = dispatch thunk of CustomStringConvertible.description.getter(v30, *(_QWORD *)(*(_QWORD *)(v79 + 8) + 8));
        v52 = v51;
        v91 = sub_100040F58(v50, v51, &v92);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92, v47 + 4, v47 + 12);
        swift_bridgeObjectRelease(v52);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v43, v30);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Unknown libraryContent: %s", v47, 0xCu);
        swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
        v53 = v49;
        v25 = (char *)v85;
        swift_slowDealloc(v53, -1, -1);
        swift_slowDealloc(v47, -1, -1);

        v29 = 0;
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v43, v30);

    }
    v29 = 0;
    goto LABEL_22;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  v29 = 6;
  v30 = a1;
  v31 = v27;
LABEL_22:
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v30);
  return v29;
}

void sub_100549174(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1005491B8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12[11];

  if (qword_1009CE828 != -1)
    swift_once(&qword_1009CE828, sub_100542F28);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048F64(v1, (uint64_t)qword_1009EAAA0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.error.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v12[0] = v6;
    *(_DWORD *)v5 = 136315138;
    LOBYTE(v11) = v0;
    v7 = String.init<A>(describing:)(&v11, &type metadata for ContextActionAssetType);
    v9 = v8;
    v11 = sub_100040F58(v7, v8, v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12, v5 + 4, v5 + 12);
    swift_bridgeObjectRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unknown ContextActionAssetType: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  return 0;
}

uint64_t sub_100549360()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 88));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 104));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 168));
  return swift_deallocObject(v0, 208, 7);
}

uint64_t sub_1005493D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = *(_QWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 16);
  v10 = v1 + 32;
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_BYTE *)(v1 + 96);
  v8 = (_QWORD *)swift_task_alloc(dword_1009EAAC4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1001FC2C4;
  return sub_100548324(a1, v12, v11, v10, v4, v5, v6, v7);
}

uint64_t sub_100549498()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1005494CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  v7 = v1 + 40;
  v8 = *(_QWORD *)(v1 + 88);
  v9 = *(_BYTE *)(v1 + 33);
  v10 = (_QWORD *)swift_task_alloc(dword_1009EAAD4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1001FC2C4;
  return sub_100548258(a1, v4, v5, v6, v9, v7, v8);
}

void sub_100549560(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  double v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v38;
  _QWORD v39[5];
  void *v40;

  v4 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    v6 = swift_bridgeObjectRetain(a1);
    v7 = __CocoaSet.makeIterator()(v5, v6);
    v8 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
    v9 = sub_100384B9C(&qword_1009DF0F0, &qword_1009DF0E8, BKCollectionMember_ptr);
    v10 = Set.Iterator.init(_cocoa:)(v39, v7, v8, v9);
    v4 = v39[0];
    v36 = v39[1];
    v11 = v39[2];
    v12 = v39[3];
    v13 = v39[4];
  }
  else
  {
    v14 = -1 << *(_BYTE *)(a1 + 32);
    v36 = a1 + 56;
    v15 = ~v14;
    v16 = -v14;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v13 = v17 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v11 = v15;
    v12 = 0;
  }
  v34 = v11;
  v35 = (unint64_t)(v11 + 64) >> 6;
  if (v4 < 0)
    goto LABEL_13;
LABEL_11:
  if (v13)
  {
    v18 = (v13 - 1) & v13;
    v19 = __clz(__rbit64(v13)) | (v12 << 6);
    v20 = v12;
    goto LABEL_32;
  }
  v26 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v26 >= v35)
      goto LABEL_36;
    v27 = *(_QWORD *)(v36 + 8 * v26);
    v20 = v12 + 1;
    if (!v27)
    {
      v20 = v12 + 2;
      if (v12 + 2 >= v35)
        goto LABEL_36;
      v27 = *(_QWORD *)(v36 + 8 * v20);
      if (!v27)
      {
        v20 = v12 + 3;
        if (v12 + 3 >= v35)
          goto LABEL_36;
        v27 = *(_QWORD *)(v36 + 8 * v20);
        if (!v27)
        {
          v20 = v12 + 4;
          if (v12 + 4 >= v35)
            goto LABEL_36;
          v27 = *(_QWORD *)(v36 + 8 * v20);
          if (!v27)
          {
            v20 = v12 + 5;
            if (v12 + 5 >= v35)
              goto LABEL_36;
            v27 = *(_QWORD *)(v36 + 8 * v20);
            if (!v27)
            {
              v28 = v12 + 6;
              while (v35 != v28)
              {
                v27 = *(_QWORD *)(v36 + 8 * v28++);
                if (v27)
                {
                  v20 = v28 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_36;
            }
          }
        }
      }
    }
LABEL_31:
    v18 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_32:
    v24 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v19);
    if (v24)
    {
      while (1)
      {
        v29 = objc_msgSend(v24, "collectionID", v25, v34);
        if (!v29)
          goto LABEL_38;
        v30 = v29;
        v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29);
        v33 = v32;

        sub_1003B1DAC(a2, a3, v31, v33);
        swift_bridgeObjectRelease(v33);
        v12 = v20;
        v13 = v18;
        if ((v4 & 0x8000000000000000) == 0)
          goto LABEL_11;
LABEL_13:
        v21 = __CocoaSet.Iterator.next()(v10);
        if (v21)
        {
          v22 = v21;
          v38 = v21;
          v23 = sub_100009E04(0, &qword_1009DF0E8, BKCollectionMember_ptr);
          swift_unknownObjectRetain(v22);
          swift_dynamicCast(&v40, &v38, (char *)&type metadata for Swift.AnyObject + 8, v23, 7);
          v24 = v40;
          *(_QWORD *)&v25 = swift_unknownObjectRelease(v22).n128_u64[0];
          v20 = v12;
          v18 = v13;
          if (v24)
            continue;
        }
        break;
      }
    }
LABEL_36:
    sub_100299C3C(v4);
    return;
  }
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_100549890(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v5 + 184) = a4;
  *(_QWORD *)(v5 + 192) = a5;
  *(_QWORD *)(v5 + 168) = a2;
  *(_QWORD *)(v5 + 176) = a3;
  *(_BYTE *)(v5 + 304) = a1;
  v6 = type metadata accessor for UUID(0);
  *(_QWORD *)(v5 + 200) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 208) = v7;
  *(_QWORD *)(v5 + 216) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v5 + 224) = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  *(_QWORD *)(v5 + 232) = v9;
  *(_QWORD *)(v5 + 240) = v10;
  return swift_task_switch(sub_100549960, v9, v10);
}

id sub_100549960()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSString v6;
  id v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id result;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[14];
  char v68;
  uint64_t v69;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v3 = objc_msgSend(v2, "collectionProvider");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v5 = v4;
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(v0 + 152) = 0;
  v7 = objc_msgSend(v3, "collectionOnMainQueueWithCollectionID:error:", v6, v0 + 152);
  *(_QWORD *)(v0 + 248) = v7;

  swift_unknownObjectRelease(v3);
  v8 = *(void **)(v0 + 152);
  if (!v7)
  {
    v24 = *(_QWORD *)(v0 + 224);
    v25 = v8;
    swift_release(v24);
    v26 = _convertNSErrorToError(_:)(v8);

    swift_willThrow(v27);
    swift_errorRelease(v26);
LABEL_15:
    swift_task_dealloc(*(_QWORD *)(v0 + 216));
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v9 = *(_QWORD **)(v0 + 168);
  v10 = v9[3];
  v11 = v9[4];
  sub_10003F198(v9, v10);
  v12 = v8;
  v13 = sub_100548924(v10, v11);
  if (!v13)
  {
    v28 = (_QWORD *)(v0 + 16);
    swift_release(*(_QWORD *)(v0 + 224));
    if (qword_1009CE828 != -1)
      swift_once(&qword_1009CE828, sub_100542F28);
    v29 = *(_QWORD *)(v0 + 168);
    v30 = type metadata accessor for Logger(0);
    sub_100048F64(v30, (uint64_t)qword_1009EAAA0);
    v31 = sub_1001EB84C(v29, v0 + 16);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.error.getter(v32);
    if (!os_log_type_enabled(v32, v33))
    {
      swift_unknownObjectRelease(v7);
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));

      goto LABEL_15;
    }
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v35 = swift_slowAlloc(32, -1);
    v67[0] = v35;
    *(_DWORD *)v34 = 136315138;
    sub_1001EB84C((uint64_t)v28, v0 + 64);
    v36 = sub_10004CFD4((uint64_t *)&unk_1009DFD10);
    v37 = String.init<A>(describing:)(v0 + 64, v36);
    v39 = v38;
    *(_QWORD *)(v0 + 160) = sub_100040F58(v37, v38, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 160, v0 + 168, v34 + 4, v34 + 12);
    swift_bridgeObjectRelease(v39);
    _s5Books15CurrentPageViewVwxx_0(v28);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Unrecognized asset info: %s, can't present notice", v34, 0xCu);
    swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v34, -1, -1);

    goto LABEL_13;
  }
  v14 = v13;
  v15 = *(_QWORD **)(v0 + 192);
  v16 = *(unsigned __int8 *)(v0 + 304);
  v17 = v15[3];
  v18 = v15[4];
  sub_10003F198(v15, v17);
  v19 = ContextMenuPresentationContextProtocol.newOptionsForShowingHUD.getter(v17, v18);
  *(_QWORD *)(v0 + 256) = v19;
  if (v16 != 1)
  {
    result = objc_msgSend(v7, "title", swift_release(*(_QWORD *)(v0 + 224)).n128_f64[0]);
    if (!result)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      return result;
    }
    v41 = result;
    sub_100009E04(0, &qword_1009EAAE8, BSUINoticeViewController_ptr);
    v42 = static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
    v44 = v43;

    static BSUINoticeViewController.presentNoticeForRemoving(assetContentType:collectionTitle:options:useNonSpecificDeterminerInMessage:)(v14, v42, v44, v19, 0);
    swift_bridgeObjectRelease(v19);
    swift_bridgeObjectRelease(v44);
LABEL_13:
    swift_unknownObjectRelease(v7);
    goto LABEL_15;
  }
  sub_10003F198(*(_QWORD **)(v0 + 168), v9[3]);
  sub_100290490((_QWORD *)(v0 + 112));
  v20 = *(_QWORD *)(v0 + 136);
  if (v20)
  {
    v21 = *(_QWORD *)(v0 + 144);
    sub_10003F198((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    v66 = dispatch thunk of LibraryContentInfo.id.getter(v20, v21);
    v23 = v22;
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
  }
  else
  {
    v46 = *(_QWORD *)(v0 + 208);
    v45 = *(_QWORD *)(v0 + 216);
    v47 = *(_QWORD *)(v0 + 200);
    sub_100010960(v0 + 112, &qword_1009E8A20);
    v48 = _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
    v66 = UUID.uuidString.getter(v48);
    v23 = v49;
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
  }
  v65 = v23;
  *(_QWORD *)(v0 + 264) = v23;
  result = objc_msgSend(v7, "title");
  if (!result)
    goto LABEL_23;
  v50 = result;
  v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
  v53 = v52;

  *(_QWORD *)(v0 + 272) = v53;
  v54 = objc_msgSend(v7, "collectionID");
  v64 = v51;
  if (v54)
  {
    v55 = v54;
    v56 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v58 = v57;

  }
  else
  {
    v56 = 0;
    v58 = 0;
  }
  *(_QWORD *)(v0 + 280) = v58;
  v59 = *(_QWORD **)(v0 + 192);
  sub_100009E04(0, &qword_1009EAAE8, BSUINoticeViewController_ptr);
  v61 = v15[3];
  v60 = v15[4];
  sub_10003F198(v59, v61);
  v62 = dispatch thunk of ContextMenuPresentationContextProtocol.objectGraph.getter(v61, v60);
  *(_QWORD *)(v0 + 288) = v62;
  v63 = (_QWORD *)swift_task_alloc(async function pointer to static BSUINoticeViewController.presentNoticeForAdding(assetID:assetContentType:collectionTitle:collectionID:options:objectGraph:useNonSpecificDeterminerInMessage:tracker:)[1]);
  *(_QWORD *)(v0 + 296) = v63;
  *v63 = v0;
  v63[1] = sub_100549F50;
  v69 = *(_QWORD *)(v0 + 184);
  v68 = 0;
  v67[13] = v62;
  return (id)static BSUINoticeViewController.presentNoticeForAdding(assetID:assetContentType:collectionTitle:collectionID:options:objectGraph:useNonSpecificDeterminerInMessage:tracker:)(v66, v65, v14, v64, v53, v56, v58, v19);
}

uint64_t sub_100549F50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 288);
  v4 = *(_QWORD *)(*v0 + 272);
  v3 = *(_QWORD *)(*v0 + 280);
  v6 = *(_QWORD *)(*v0 + 256);
  v5 = *(_QWORD *)(*v0 + 264);
  swift_task_dealloc(*(_QWORD *)(*v0 + 296));
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v5);
  swift_release(v2);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_10054A010, *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240));
}

uint64_t sub_10054A010()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 248);
  swift_release(*(_QWORD *)(v0 + 224));
  swift_unknownObjectRelease(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 216));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10054A080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[20] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  v5[21] = v7;
  v5[22] = v8;
  return swift_task_switch(sub_10054A0F4, v7, v8);
}

uint64_t sub_10054A0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;

  v1 = v0;
  v2 = v0 + 16;
  v3 = *(_QWORD **)(v1 + 120);
  v4 = objc_msgSend(*(id *)(v1 + 144), "collectionController");
  *(_QWORD *)(v1 + 184) = v4;
  v5 = v3[3];
  v6 = v3[4];
  sub_10003F198(v3, v5);
  dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v5, v6);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v1 + 192) = v9;
  swift_bridgeObjectRelease(v8);
  v10 = kBKCollectionDefaultIDWantToRead;
  *(_QWORD *)(v1 + 200) = kBKCollectionDefaultIDWantToRead;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v1 + 208) = v13;
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(v1 + 56) = v1 + 232;
  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = sub_10054A22C;
  v14 = swift_continuation_init(v2, 1);
  *(_QWORD *)(v1 + 80) = _NSConcreteStackBlock;
  v1 += 80;
  *(_QWORD *)(v1 + 8) = 0x40000000;
  *(_QWORD *)(v1 + 16) = sub_100542EA8;
  *(_QWORD *)(v1 + 24) = &unk_10090F110;
  *(_QWORD *)(v1 + 32) = v14;
  objc_msgSend(v4, "addStoreID:toCollectionID:forceToTop:completion:", v9, v13, 0, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_10054A22C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 216) = v2;
  if (v2)
    v3 = sub_10054A4FC;
  else
    v3 = sub_10054A288;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_10054A288()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v1 = *(void **)(v0 + 208);
  v2 = *(void **)(v0 + 192);
  v3 = *(unsigned __int8 *)(v0 + 232);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 184));

  if (v3 == 1)
  {
    sub_1003B1950(*(_QWORD **)(v0 + 120), *(_QWORD *)(v0 + 128));
    v4 = (_QWORD *)swift_task_alloc(dword_1009EAAE4);
    *(_QWORD *)(v0 + 224) = v4;
    *v4 = v0;
    v4[1] = sub_10054A3D8;
    return sub_100549890(1, *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 160));
    if (qword_1009CE828 != -1)
      swift_once(&qword_1009CE828, sub_100542F28);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100048F64(v6, (uint64_t)qword_1009EAAA0);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.error.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed trying to add asset to want to read", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10054A3D8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 224));
  return swift_task_switch(sub_10054A424, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_10054A424()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = swift_release(*(_QWORD *)(v0 + 160));
  if (v1)
  {
    v3 = *(id *)(*(_QWORD *)(v0 + 152) + OBJC_IVAR___BKEngagementManager_manager);
    v4 = Manager.donor(type:)(0x2D6E6F6973736573, 0xED0000726F6E6F64);

    if (v4)
    {
      v5 = type metadata accessor for SessionDonor(0);
      v6 = (_BYTE *)swift_dynamicCastClass(v4, v5);
      if (v6 && (v6[OBJC_IVAR___BKSessionDonor_addToWTRButtonUsed] & 1) == 0)
      {
        v6[OBJC_IVAR___BKSessionDonor_addToWTRButtonUsed] = 1;
        objc_msgSend(v6, "propertyDidChange:propertyConfiguration:", v6, *(_QWORD *)&v6[OBJC_IVAR___BKSessionDonor_addToWTRButtonUsedConfig]);
      }
      swift_unknownObjectRelease(v4);
    }
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_10054A4FC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint8_t *v11;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 192);
  swift_release(*(_QWORD *)(v0 + 160));
  swift_willThrow(v4);
  swift_unknownObjectRelease(v2);

  if (qword_1009CE828 != -1)
    swift_once(&qword_1009CE828, sub_100542F28);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100048F64(v5, (uint64_t)qword_1009EAAA0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 216);
  if (v9)
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed trying to add asset to want to read", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }
  swift_errorRelease(v10);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10054A610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for MainActor(0);
  v4[6] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[7] = v6;
  v4[8] = v7;
  return swift_task_switch(sub_10054A680, v6, v7);
}

uint64_t sub_10054A680()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  __n128 v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(v0 + 16);
  if ((v1 & 1) != 0)
  {
    v4 = (_QWORD *)swift_task_alloc(dword_1009EAB1C);
    *(_QWORD *)(v0 + 72) = v4;
    *v4 = v0;
    v4[1] = sub_10054A860;
    return sub_100542FA4(*(_QWORD *)(v0 + 24));
  }
  if ((v1 & 2) != 0)
  {
    v5 = (_QWORD *)swift_task_alloc(dword_1009EAB44);
    *(_QWORD *)(v0 + 80) = v5;
    *v5 = v0;
    v5[1] = sub_10054AA14;
    return sub_100543188(*(_QWORD *)(v0 + 24));
  }
  if ((v1 & 4) != 0)
  {
    v6 = (_QWORD *)swift_task_alloc(dword_1009EAB3C);
    *(_QWORD *)(v0 + 88) = v6;
    *v6 = v0;
    v6[1] = sub_10054AA60;
    return sub_100543914(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 40));
  }
  if ((v1 & 8) != 0)
  {
    v7 = *(void **)(v0 + 32);
    if (v7)
    {
      v8 = dword_1009EAB34;
      v9 = v7;
      v10 = (_QWORD *)swift_task_alloc(v8);
      *(_QWORD *)(v0 + 96) = v10;
      *v10 = v0;
      v10[1] = sub_10054AAAC;
      return sub_100544F04(*(_QWORD *)(v0 + 24), (uint64_t)v9, *(_QWORD *)(v0 + 40));
    }
    goto LABEL_15;
  }
  if ((v1 & 0x10) != 0)
  {
    v11 = *(_QWORD *)(v0 + 40);
    v12 = *(_QWORD *)(v0 + 24);
    swift_release(*(_QWORD *)(v0 + 48));
    sub_100545B7C(v12, v11);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v13);
  }
  if ((v1 & 0x20) == 0)
  {
    if ((v1 & 0x40) != 0)
    {
      v2 = (_QWORD *)swift_task_alloc(dword_1009EAB04);
      *(_QWORD *)(v0 + 112) = v2;
      *v2 = v0;
      v2[1] = sub_10054AB7C;
      return sub_1005469A8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 40));
    }
LABEL_15:
    v13 = swift_release(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v13);
  }
  v14 = (_QWORD *)swift_task_alloc(dword_1009EAB24);
  *(_QWORD *)(v0 + 104) = v14;
  *v14 = v0;
  v14[1] = sub_10054AB30;
  return sub_1005465B0(*(_QWORD *)(v0 + 24));
}

uint64_t sub_10054A860()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 72));
  return swift_task_switch(sub_10054A8AC, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_10054A8AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  __n128 v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 16);
  if ((v1 & 4) != 0)
  {
    v4 = (_QWORD *)swift_task_alloc(dword_1009EAB3C);
    *(_QWORD *)(v0 + 88) = v4;
    *v4 = v0;
    v4[1] = sub_10054AA60;
    return sub_100543914(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 40));
  }
  if ((v1 & 8) != 0)
  {
    v5 = *(void **)(v0 + 32);
    if (v5)
    {
      v6 = dword_1009EAB34;
      v7 = v5;
      v8 = (_QWORD *)swift_task_alloc(v6);
      *(_QWORD *)(v0 + 96) = v8;
      *v8 = v0;
      v8[1] = sub_10054AAAC;
      return sub_100544F04(*(_QWORD *)(v0 + 24), (uint64_t)v7, *(_QWORD *)(v0 + 40));
    }
    goto LABEL_11;
  }
  if ((v1 & 0x10) != 0)
  {
    v9 = *(_QWORD *)(v0 + 40);
    v10 = *(_QWORD *)(v0 + 24);
    swift_release(*(_QWORD *)(v0 + 48));
    sub_100545B7C(v10, v9);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v11);
  }
  if ((v1 & 0x20) == 0)
  {
    if ((v1 & 0x40) != 0)
    {
      v2 = (_QWORD *)swift_task_alloc(dword_1009EAB04);
      *(_QWORD *)(v0 + 112) = v2;
      *v2 = v0;
      v2[1] = sub_10054AB7C;
      return sub_1005469A8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 40));
    }
LABEL_11:
    v11 = swift_release(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v11);
  }
  v12 = (_QWORD *)swift_task_alloc(dword_1009EAB24);
  *(_QWORD *)(v0 + 104) = v12;
  *v12 = v0;
  v12[1] = sub_10054AB30;
  return sub_1005465B0(*(_QWORD *)(v0 + 24));
}

uint64_t sub_10054AA14()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  return swift_task_switch(sub_10054B8FC, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_10054AA60()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 88));
  return swift_task_switch(sub_10054B910, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_10054AAAC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  return swift_task_switch(sub_10054AAF8, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_10054AAF8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 32);
  swift_release(*(_QWORD *)(v0 + 48));

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10054AB30()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));
  return swift_task_switch(sub_10046C18C, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_10054AB7C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return swift_task_switch(sub_10054B910, *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_10054ABC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[23] = a4;
  v5[24] = a5;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  v6 = type metadata accessor for ContextActionSource(0);
  v5[25] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[26] = v7;
  v8 = (*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[27] = swift_task_alloc(v8);
  v5[28] = swift_task_alloc(v8);
  v5[29] = swift_task_alloc(v8);
  v9 = type metadata accessor for MainActor(0);
  v5[30] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  v5[31] = v10;
  v5[32] = v11;
  return swift_task_switch(sub_10054AC80, v10, v11);
}

uint64_t sub_10054AC80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSString v13;
  uint64_t v14;

  v1 = v0;
  v2 = v0 + 16;
  v3 = *(_QWORD **)(v1 + 168);
  v4 = objc_msgSend(*(id *)(v1 + 192), "collectionController");
  *(_QWORD *)(v1 + 264) = v4;
  v5 = v3[3];
  v6 = v3[4];
  sub_10003F198(v3, v5);
  dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v5, v6);
  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v1 + 272) = v9;
  swift_bridgeObjectRelease(v8);
  v10 = kBKCollectionDefaultIDWantToRead;
  *(_QWORD *)(v1 + 280) = kBKCollectionDefaultIDWantToRead;
  static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
  v12 = v11;
  v13 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v1 + 288) = v13;
  swift_bridgeObjectRelease(v12);
  *(_QWORD *)(v1 + 56) = v1 + 312;
  *(_QWORD *)(v1 + 16) = v1;
  *(_QWORD *)(v1 + 24) = sub_10054ADB4;
  v14 = swift_continuation_init(v2, 1);
  *(_QWORD *)(v1 + 80) = _NSConcreteStackBlock;
  v1 += 80;
  *(_QWORD *)(v1 + 8) = 0x40000000;
  *(_QWORD *)(v1 + 16) = sub_100542EA8;
  *(_QWORD *)(v1 + 24) = &unk_10090F128;
  *(_QWORD *)(v1 + 32) = v14;
  objc_msgSend(v4, "removeAssetID:fromCollectionID:completion:", v9, v13, v1);
  return swift_continuation_await(v2);
}

uint64_t sub_10054ADB4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)();

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  *(_QWORD *)(*v0 + 296) = v2;
  if (v2)
    v3 = sub_10054B1D0;
  else
    v3 = sub_10054AE10;
  return swift_task_switch(v3, *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 256));
}

uint64_t sub_10054AE10()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  _QWORD *v36;

  v1 = *(void **)(v0 + 288);
  v2 = *(void **)(v0 + 272);
  v3 = *(unsigned __int8 *)(v0 + 312);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 264));

  if (v3 != 1)
  {
    swift_release(*(_QWORD *)(v0 + 240));
    if (qword_1009CE828 != -1)
      swift_once(&qword_1009CE828, sub_100542F28);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100048F64(v17, (uint64_t)qword_1009EAAA0);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed trying to remove asset from want to read", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    goto LABEL_17;
  }
  v4 = *(_QWORD *)(v0 + 232);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD **)(v0 + 160);
  sub_1003B1B14(*(_QWORD **)(v0 + 168), *(_QWORD *)(v0 + 176));
  v8 = v7[3];
  v9 = v7[4];
  sub_10003F198(v7, v8);
  dispatch thunk of ContextActionDataProtocol.source.getter(v8, v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v4, v5) == enum case for ContextActionSource.library(_:))
  {
    v10 = *(_QWORD *)(v0 + 280);
    v11 = *(uint64_t **)(v0 + 232);
    (*(void (**)(uint64_t *, _QWORD))(*(_QWORD *)(v0 + 208) + 96))(v11, *(_QWORD *)(v0 + 200));
    v13 = *v11;
    v12 = v11[1];
    _s5Books15CurrentPageViewVwxx_0(v11 + 2);
    v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v16 = v14;
    if (v13 == v15 && v12 == v14)
    {
      swift_bridgeObjectRelease_n(v12, 2);
LABEL_13:
      v23 = *(_QWORD *)(v0 + 240);
      sub_10002E418(*(_QWORD *)(v0 + 160), v0 + 120);
      _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 120));
LABEL_16:
      swift_release(v23);
LABEL_17:
      v32 = *(_QWORD *)(v0 + 224);
      v33 = *(_QWORD *)(v0 + 216);
      swift_task_dealloc(*(_QWORD *)(v0 + 232));
      swift_task_dealloc(v32);
      v34 = swift_task_dealloc(v33);
      return (*(uint64_t (**)(__n128))(v0 + 8))(v34);
    }
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v12, v15, v14, 0);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease(v16);
    if ((v22 & 1) != 0)
      goto LABEL_13;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 208) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 200));
  }
  v25 = *(_QWORD *)(v0 + 216);
  v24 = *(_QWORD *)(v0 + 224);
  v26 = *(_QWORD *)(v0 + 200);
  v27 = *(_QWORD *)(v0 + 208);
  sub_10002E418(*(_QWORD *)(v0 + 160), v0 + 120);
  v28 = *(_QWORD *)(v0 + 144);
  v29 = *(_QWORD *)(v0 + 152);
  sub_10003F198((_QWORD *)(v0 + 120), v28);
  dispatch thunk of ContextActionDataProtocol.source.getter(v28, v29);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v27 + 104))(v25, enum case for ContextActionSource.wantToReadEntry(_:), v26);
  v30 = static ContextActionSource.== infix(_:_:)(v24, v25);
  v31 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v31(v25, v26);
  v31(v24, v26);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 120));
  if ((v30 & 1) != 0)
  {
    v23 = *(_QWORD *)(v0 + 240);
    goto LABEL_16;
  }
  v36 = (_QWORD *)swift_task_alloc(dword_1009EAAE4);
  *(_QWORD *)(v0 + 304) = v36;
  *v36 = v0;
  v36[1] = sub_10054B138;
  return sub_100549890(0, *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
}

uint64_t sub_10054B138()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 304));
  return swift_task_switch(sub_10054B184, *(_QWORD *)(v1 + 248), *(_QWORD *)(v1 + 256));
}

uint64_t sub_10054B184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 240));
  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10054B1D0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;

  v1 = *(void **)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(void **)(v0 + 272);
  swift_release(*(_QWORD *)(v0 + 240));
  swift_willThrow(v4);
  swift_unknownObjectRelease(v2);

  if (qword_1009CE828 != -1)
    swift_once(&qword_1009CE828, sub_100542F28);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100048F64(v5, (uint64_t)qword_1009EAAA0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 296);
  if (v9)
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed trying to remove asset from want to read", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }
  swift_errorRelease(v10);

  v12 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v12);
  v14 = swift_task_dealloc(v13);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v14);
}

void sub_10054B300(void *a1)
{
  uint64_t v1;

  sub_100546C94(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_10054B30C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_10054B3AC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D6DC0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1005471DC(a1, a2, v2 + v6, *(void **)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10054B42C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009EAB0C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000AE34;
  return sub_10054753C(a1, v4, v5, v7, v6);
}

void sub_10054B4A4(uint64_t a1)
{
  uint64_t v1;

  sub_1005476BC(a1, *(_QWORD *)(v1 + 16), (uint64_t)&unk_10090F1E0, (uint64_t)sub_10054B4D8, (uint64_t)&unk_10090F1F8);
}

uint64_t sub_10054B4D8(uint64_t a1)
{
  return sub_10054B5FC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_100546880);
}

uint64_t sub_10054B4E4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10054B508()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_10054B534(int a1)
{
  uint64_t v1;

  return sub_10054472C(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24));
}

void sub_10054B53C(uint64_t a1)
{
  uint64_t v1;

  sub_1005476BC(a1, *(_QWORD *)(v1 + 16), (uint64_t)&unk_10090F2C0, (uint64_t)sub_10054B5F0, (uint64_t)&unk_10090F2D8);
}

uint64_t sub_10054B570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10054B5F0(uint64_t a1)
{
  return sub_10054B5FC(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_10054782C);
}

uint64_t sub_10054B5FC(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D6DC0) - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v4 + 32) & ~v4));
}

unint64_t sub_10054B650()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E2320;
  if (!qword_1009E2320)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009F26D0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009E2320);
  }
  return result;
}

uint64_t sub_10054B6A0()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10054B6D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009EAB5C);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1001FC2C4;
  return sub_100545A10(a1, v4, v5, v7, v6);
}

void destroy for MenuLibraryOperationProvider(id *a1)
{

}

_QWORD *initializeWithCopy for MenuLibraryOperationProvider(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(void **)(a2 + 32);
  a1[4] = v7;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return a1;
}

uint64_t assignWithCopy for MenuLibraryOperationProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  return a1;
}

uint64_t assignWithTake for MenuLibraryOperationProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for MenuLibraryOperationProvider()
{
  return &type metadata for MenuLibraryOperationProvider;
}

_QWORD *sub_10054B914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, __int128 a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,unsigned __int8 a22,unsigned __int8 a23,unsigned __int8 a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  double *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  _QWORD *result;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  __int128 v79;
  _QWORD v80[2];

  v69 = a8;
  v67 = a7;
  v66 = a6;
  v65 = a5;
  v75 = a26;
  v76 = a27;
  v74 = a25;
  v70 = a23;
  v71 = a24;
  v68 = a22;
  v64 = a17;
  v39 = type metadata accessor for Font.TextStyle(0);
  v72 = *(_QWORD *)(v39 - 8);
  v73 = v39;
  __chkstk_darwin(v39);
  v41 = (char *)&v64 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  v42 = v66;
  *(_QWORD *)(a9 + 32) = v65;
  *(_QWORD *)(a9 + 40) = v42;
  v43 = v69;
  *(_QWORD *)(a9 + 48) = v67;
  *(_QWORD *)(a9 + 56) = v43;
  *(_OWORD *)(a9 + 64) = v64;
  *(_QWORD *)(a9 + 80) = a18;
  *(_BYTE *)(a9 + 88) = a19;
  *(_QWORD *)(a9 + 96) = a20;
  *(_QWORD *)(a9 + 104) = a21;
  *(double *)(a9 + 112) = a10;
  *(double *)v80 = a11;
  State.init(wrappedValue:)(&v77, v80, &type metadata for CGFloat);
  v44 = v78;
  *(double *)(a9 + 120) = v77;
  *(_QWORD *)(a9 + 128) = v44;
  LOBYTE(v80[0]) = v68;
  State.init(wrappedValue:)(&v77, v80, &type metadata for Bool);
  v45 = v78;
  *(_BYTE *)(a9 + 136) = LOBYTE(v77);
  *(_QWORD *)(a9 + 144) = v45;
  LOBYTE(v80[0]) = v70;
  State.init(wrappedValue:)(&v77, v80, &type metadata for Bool);
  v46 = v78;
  *(_BYTE *)(a9 + 152) = LOBYTE(v77);
  *(_QWORD *)(a9 + 160) = v46;
  LOBYTE(v80[0]) = v71;
  State.init(wrappedValue:)(&v77, v80, &type metadata for Bool);
  v47 = v78;
  *(_BYTE *)(a9 + 168) = LOBYTE(v77);
  *(_QWORD *)(a9 + 176) = v47;
  v48 = (int *)type metadata accessor for ModernSlider(0);
  v77 = a12;
  v49 = sub_1002EDFBC();
  ScaledMetric.init(wrappedValue:)(&v77, &type metadata for CGFloat, v49);
  v77 = a13;
  v50 = enum case for Font.TextStyle.largeTitle(_:);
  v51 = v73;
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 104);
  v52(v41, enum case for Font.TextStyle.largeTitle(_:), v73);
  ScaledMetric.init(wrappedValue:relativeTo:)(&v77, v41, &type metadata for CGFloat, v49);
  v77 = a14;
  v52(v41, v50, v51);
  ScaledMetric.init(wrappedValue:relativeTo:)(&v77, v41, &type metadata for CGFloat, v49);
  sub_100025B3C(v74, a9 + v48[20], &qword_1009D3A10);
  v53 = (double *)(a9 + v48[21]);
  *v53 = a15;
  v53[1] = a16;
  v54 = (_QWORD *)(a9 + v48[22]);
  v55 = v76;
  *v54 = v75;
  v54[1] = v55;
  v56 = a9 + v48[23];
  LOBYTE(v80[0]) = 0;
  State.init(wrappedValue:)(&v77, v80, &type metadata for Bool);
  v57 = v78;
  *(_BYTE *)v56 = LOBYTE(v77);
  *(_QWORD *)(v56 + 8) = v57;
  v58 = a9 + v48[24];
  LOBYTE(v80[0]) = 0;
  GestureState.init(wrappedValue:)(&v77, v80, &type metadata for Bool);
  v59 = v78;
  v60 = v79;
  *(_BYTE *)v58 = LOBYTE(v77);
  *(_QWORD *)(v58 + 8) = v59;
  *(_OWORD *)(v58 + 16) = v60;
  v61 = a9 + v48[25];
  LOBYTE(v80[0]) = 0;
  result = State.init(wrappedValue:)(&v77, v80, &type metadata for Bool);
  v63 = v78;
  *(_BYTE *)v61 = LOBYTE(v77);
  *(_QWORD *)(v61 + 8) = v63;
  return result;
}

uint64_t type metadata accessor for ModernSlider(uint64_t a1)
{
  uint64_t result;

  result = qword_1009EABC0;
  if (!qword_1009EABC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ModernSlider);
  return result;
}

_QWORD *sub_10054BCDC(_QWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *v4 = *a2;
    v4[1] = v7;
    v8 = a2[3];
    v4[2] = a2[2];
    v4[3] = v8;
    v9 = a2[4];
    v10 = a2[5];
    v4[4] = v9;
    v4[5] = v10;
    v11 = a2[6];
    v12 = a2[7];
    v4[6] = v11;
    v4[7] = v12;
    v13 = a2[9];
    v4[8] = a2[8];
    v4[9] = v13;
    v4[10] = a2[10];
    *((_BYTE *)v4 + 88) = *((_BYTE *)a2 + 88);
    v14 = a2[12];
    v48 = a2[13];
    v4[12] = v14;
    v4[13] = v48;
    *((_OWORD *)v4 + 7) = *((_OWORD *)a2 + 7);
    v47 = a2[16];
    v4[16] = v47;
    *((_BYTE *)v4 + 136) = *((_BYTE *)a2 + 136);
    v46 = a2[18];
    v4[18] = v46;
    *((_BYTE *)v4 + 152) = *((_BYTE *)a2 + 152);
    v45 = a2[20];
    v4[20] = v45;
    *((_BYTE *)v4 + 168) = *((_BYTE *)a2 + 168);
    v44 = a2[22];
    v15 = a3[17];
    v49 = (uint64_t)a2 + v15;
    v50 = (char *)v4 + v15;
    v4[22] = v44;
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_retain(v9);
    swift_retain(v10);
    swift_retain(v11);
    swift_retain(v12);
    swift_bridgeObjectRetain(v13);
    swift_retain(v14);
    swift_retain(v48);
    swift_retain(v47);
    swift_retain(v46);
    swift_retain(v45);
    swift_retain(v44);
    v16 = sub_10004CFD4(qword_1009D8EC8);
    v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v17(v50, v49, v16);
    v17((char *)v4 + a3[18], (uint64_t)a2 + a3[18], v16);
    v17((char *)v4 + a3[19], (uint64_t)a2 + a3[19], v16);
    v18 = a3[20];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for AccessibilityTechnologies(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v25 = (int *)sub_10004CFD4(&qword_1009D3A10);
    v19[v25[9]] = v20[v25[9]];
    v26 = v25[10];
    v27 = *(_QWORD *)&v20[v26];
    *(_QWORD *)&v19[v26] = v27;
    v19[v25[11]] = v20[v25[11]];
    v28 = a3[22];
    *(_OWORD *)((char *)v4 + a3[21]) = *(_OWORD *)((char *)a2 + a3[21]);
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (uint64_t *)((char *)a2 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = a3[23];
    v33 = a3[24];
    v34 = (char *)v4 + v32;
    v35 = (char *)a2 + v32;
    *v34 = *v35;
    v36 = *((_QWORD *)v35 + 1);
    *((_QWORD *)v34 + 1) = v36;
    v37 = (char *)v4 + v33;
    v38 = (char *)a2 + v33;
    *v37 = *v38;
    v39 = *((_QWORD *)v38 + 3);
    v51 = *(_OWORD *)(v38 + 8);
    *(_OWORD *)(v37 + 8) = v51;
    *((_QWORD *)v37 + 3) = v39;
    v40 = a3[25];
    v41 = (char *)v4 + v40;
    v42 = (char *)a2 + v40;
    *v41 = *v42;
    v24 = *((_QWORD *)v42 + 1);
    *((_QWORD *)v41 + 1) = v24;
    swift_retain(v27);
    swift_retain(v31);
    swift_retain(v36);
    swift_retain(v51);
    swift_retain(v39);
  }
  swift_retain(v24);
  return v4;
}

double sub_10054C008(char *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double result;

  swift_bridgeObjectRelease(*((_QWORD *)a1 + 1));
  swift_bridgeObjectRelease(*((_QWORD *)a1 + 3));
  swift_release(*((_QWORD *)a1 + 4));
  swift_release(*((_QWORD *)a1 + 5));
  swift_release(*((_QWORD *)a1 + 6));
  swift_release(*((_QWORD *)a1 + 7));
  swift_bridgeObjectRelease(*((_QWORD *)a1 + 9));
  swift_release(*((_QWORD *)a1 + 12));
  swift_release(*((_QWORD *)a1 + 13));
  swift_release(*((_QWORD *)a1 + 16));
  swift_release(*((_QWORD *)a1 + 18));
  swift_release(*((_QWORD *)a1 + 20));
  swift_release(*((_QWORD *)a1 + 22));
  v4 = &a1[a2[17]];
  v5 = sub_10004CFD4(qword_1009D8EC8);
  v6 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(&a1[a2[18]], v5);
  v6(&a1[a2[19]], v5);
  v7 = &a1[a2[20]];
  v8 = type metadata accessor for AccessibilityTechnologies(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  v10 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)&v7[*(int *)(v10 + 40)]);
  swift_release(*(_QWORD *)&a1[a2[22] + 8]);
  swift_release(*(_QWORD *)&a1[a2[23] + 8]);
  v11 = &a1[a2[24]];
  swift_release(*((_QWORD *)v11 + 1));
  swift_release(*((_QWORD *)v11 + 3));
  *(_QWORD *)&result = swift_release(*(_QWORD *)&a1[a2[25] + 8]).n128_u64[0];
  return result;
}

uint64_t sub_10054C188(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 96);
  v47 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v13;
  *(_QWORD *)(a1 + 104) = v47;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v46 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v46;
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v45 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 144) = v45;
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v44 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 160) = v44;
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  v43 = *(_QWORD *)(a2 + 176);
  v14 = a3[17];
  v48 = a2 + v14;
  v49 = a1 + v14;
  *(_QWORD *)(a1 + 176) = v43;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v11);
  swift_bridgeObjectRetain(v12);
  swift_retain(v13);
  swift_retain(v47);
  swift_retain(v46);
  swift_retain(v45);
  swift_retain(v44);
  swift_retain(v43);
  v15 = sub_10004CFD4(qword_1009D8EC8);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16(v49, v48, v15);
  v16(a1 + a3[18], a2 + a3[18], v15);
  v16(a1 + a3[19], a2 + a3[19], v15);
  v17 = a3[20];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = type metadata accessor for AccessibilityTechnologies(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  v23 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v18[v23[9]] = v19[v23[9]];
  v24 = v23[10];
  v25 = *(_QWORD *)&v19[v24];
  *(_QWORD *)&v18[v24] = v25;
  v18[v23[11]] = v19[v23[11]];
  v26 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[23];
  v31 = a3[24];
  v32 = a1 + v30;
  v33 = a2 + v30;
  *(_BYTE *)v32 = *(_BYTE *)v33;
  v34 = *(_QWORD *)(v33 + 8);
  *(_QWORD *)(v32 + 8) = v34;
  v35 = a1 + v31;
  v36 = a2 + v31;
  *(_BYTE *)v35 = *(_BYTE *)v36;
  v37 = *(_QWORD *)(v36 + 24);
  v50 = *(_OWORD *)(v36 + 8);
  *(_OWORD *)(v35 + 8) = v50;
  *(_QWORD *)(v35 + 24) = v37;
  v38 = a3[25];
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_BYTE *)v39 = *(_BYTE *)v40;
  v41 = *(_QWORD *)(v40 + 8);
  *(_QWORD *)(v39 + 8) = v41;
  swift_retain(v25);
  swift_retain(v29);
  swift_retain(v34);
  swift_retain(v50);
  swift_retain(v37);
  swift_retain(v41);
  return a1;
}

uint64_t sub_10054C48C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  int v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v16;
  swift_retain(v16);
  swift_release(v17);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v18 = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  v20 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v20;
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v22;
  swift_retain(v22);
  swift_release(v21);
  v23 = *(_QWORD *)(a2 + 104);
  v24 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v23;
  swift_retain(v23);
  swift_release(v24);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  v25 = *(_QWORD *)(a1 + 128);
  v26 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 128) = v26;
  swift_retain(v26);
  swift_release(v25);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v27 = *(_QWORD *)(a1 + 144);
  v28 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 144) = v28;
  swift_retain(v28);
  swift_release(v27);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v29 = *(_QWORD *)(a1 + 160);
  v30 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 160) = v30;
  swift_retain(v30);
  swift_release(v29);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  v31 = *(_QWORD *)(a1 + 176);
  v32 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 176) = v32;
  swift_retain(v32);
  swift_release(v31);
  v33 = a3[17];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = sub_10004CFD4(qword_1009D8EC8);
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 24);
  v37(v34, v35, v36);
  v37(a1 + a3[18], a2 + a3[18], v36);
  v37(a1 + a3[19], a2 + a3[19], v36);
  v38 = a3[20];
  v39 = (char *)(a1 + v38);
  v40 = (char *)(a2 + v38);
  v41 = type metadata accessor for AccessibilityTechnologies(0);
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48);
  LODWORD(v37) = v43(v39, 1, v41);
  v44 = v43(v40, 1, v41);
  if (!(_DWORD)v37)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 24))(v39, v40, v41);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v41);
    goto LABEL_6;
  }
  if (v44)
  {
LABEL_6:
    v45 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
LABEL_7:
  v46 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v39[v46[9]] = v40[v46[9]];
  v47 = v46[10];
  v48 = *(_QWORD *)&v39[v47];
  v49 = *(_QWORD *)&v40[v47];
  *(_QWORD *)&v39[v47] = v49;
  swift_retain(v49);
  swift_release(v48);
  v39[v46[11]] = v40[v46[11]];
  v50 = a3[21];
  v51 = (_QWORD *)(a1 + v50);
  v52 = (_QWORD *)(a2 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  v53 = a3[22];
  v54 = (_QWORD *)(a1 + v53);
  v55 = (_QWORD *)(a2 + v53);
  v56 = v55[1];
  v57 = v54[1];
  *v54 = *v55;
  v54[1] = v56;
  swift_retain(v56);
  swift_release(v57);
  v58 = a3[23];
  v59 = a1 + v58;
  v60 = a2 + v58;
  *(_BYTE *)v59 = *(_BYTE *)v60;
  v61 = *(_QWORD *)(v59 + 8);
  v62 = *(_QWORD *)(v60 + 8);
  *(_QWORD *)(v59 + 8) = v62;
  swift_retain(v62);
  swift_release(v61);
  v63 = a3[24];
  v64 = a1 + v63;
  v65 = a2 + v63;
  *(_BYTE *)v64 = *(_BYTE *)(a2 + v63);
  v66 = *(_QWORD *)(a1 + v63 + 8);
  v67 = *(_QWORD *)(a2 + v63 + 8);
  *(_QWORD *)(v64 + 8) = v67;
  swift_retain(v67);
  swift_release(v66);
  v68 = *(_QWORD *)(v65 + 24);
  v69 = *(_QWORD *)(v64 + 24);
  *(_QWORD *)(v64 + 16) = *(_QWORD *)(v65 + 16);
  *(_QWORD *)(v64 + 24) = v68;
  swift_retain(v68);
  swift_release(v69);
  v70 = a3[25];
  v71 = a1 + v70;
  v72 = a2 + v70;
  *(_BYTE *)v71 = *(_BYTE *)v72;
  v73 = *(_QWORD *)(v71 + 8);
  v74 = *(_QWORD *)(v72 + 8);
  *(_QWORD *)(v71 + 8) = v74;
  swift_retain(v74);
  swift_release(v73);
  return a1;
}

uint64_t sub_10054C8A0(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  _OWORD *v23;
  __int128 v24;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v8 = a3[17];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  v11 = sub_10004CFD4(qword_1009D8EC8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[18], a2 + a3[18], v11);
  v12(a1 + a3[19], a2 + a3[19], v11);
  v13 = a3[20];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = type metadata accessor for AccessibilityTechnologies(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v14[v19[9]] = v15[v19[9]];
  *(_QWORD *)&v14[v19[10]] = *(_QWORD *)&v15[v19[10]];
  v14[v19[11]] = v15[v19[11]];
  v20 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(_OWORD *)(a1 + v20) = *(_OWORD *)(a2 + v20);
  v21 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  v22 = (_OWORD *)(a1 + v21);
  v23 = (_OWORD *)(a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  *(_OWORD *)(a1 + a3[25]) = *(_OWORD *)(a2 + a3[25]);
  return a1;
}

uint64_t sub_10054CA84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v10);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v11);
  v12 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v12);
  v13 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v13);
  v14 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v14;
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v16 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release(v16);
  v17 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release(v17);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_release(v18);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v19 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_release(v19);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  v20 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_release(v20);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  v21 = *(_QWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_release(v21);
  v22 = a3[17];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_10004CFD4(qword_1009D8EC8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40);
  v26(v23, v24, v25);
  v26(a1 + a3[18], a2 + a3[18], v25);
  v26(a1 + a3[19], a2 + a3[19], v25);
  v27 = a3[20];
  v28 = (char *)(a1 + v27);
  v29 = (char *)(a2 + v27);
  v30 = type metadata accessor for AccessibilityTechnologies(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  LODWORD(v26) = v32(v28, 1, v30);
  v33 = v32(v29, 1, v30);
  if (!(_DWORD)v26)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    v34 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
LABEL_7:
  v35 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v28[v35[9]] = v29[v35[9]];
  v36 = v35[10];
  v37 = *(_QWORD *)&v28[v36];
  *(_QWORD *)&v28[v36] = *(_QWORD *)&v29[v36];
  swift_release(v37);
  v28[v35[11]] = v29[v35[11]];
  v38 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  v39 = *(_QWORD *)(a1 + v38 + 8);
  *(_OWORD *)(a1 + v38) = *(_OWORD *)(a2 + v38);
  swift_release(v39);
  v40 = a3[23];
  v41 = a1 + v40;
  v42 = a2 + v40;
  *(_BYTE *)v41 = *(_BYTE *)v42;
  v43 = *(_QWORD *)(v41 + 8);
  *(_QWORD *)(v41 + 8) = *(_QWORD *)(v42 + 8);
  swift_release(v43);
  v44 = a3[24];
  v45 = a1 + v44;
  v46 = a2 + v44;
  *(_BYTE *)v45 = *(_BYTE *)(a2 + v44);
  v47 = *(_QWORD *)(a1 + v44 + 8);
  *(_QWORD *)(v45 + 8) = *(_QWORD *)(a2 + v44 + 8);
  swift_release(v47);
  v48 = *(_QWORD *)(v45 + 24);
  *(_OWORD *)(v45 + 16) = *(_OWORD *)(v46 + 16);
  swift_release(v48);
  v49 = a3[25];
  v50 = a1 + v49;
  v51 = a2 + v49;
  *(_BYTE *)v50 = *(_BYTE *)v51;
  v52 = *(_QWORD *)(v50 + 8);
  *(_QWORD *)(v50 + 8) = *(_QWORD *)(v51 + 8);
  swift_release(v52);
  return a1;
}

uint64_t sub_10054CDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10054CDD4);
}

uint64_t sub_10054CDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(qword_1009D8EC8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 68);
    }
    else
    {
      v10 = sub_10004CFD4(&qword_1009D3A10);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 80);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_10054CE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10054CE88);
}

uint64_t sub_10054CE88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_10004CFD4(qword_1009D8EC8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 68);
    }
    else
    {
      v10 = sub_10004CFD4(&qword_1009D3A10);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 80);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_10054CF2C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[13];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;

  v6[0] = &unk_10072CA08;
  v6[1] = &unk_10072CA08;
  v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[6] = &unk_10072CA08;
  v6[7] = &unk_10072CA20;
  v6[8] = &unk_10072CA38;
  v6[9] = &unk_10072CA50;
  v6[10] = &unk_10072CA50;
  v6[11] = &unk_10072CA50;
  v6[12] = &unk_10072CA50;
  sub_1002EF2A8(319);
  if (v3 <= 0x3F)
  {
    v7 = *(_QWORD *)(v2 - 8) + 64;
    v8 = v7;
    v9 = v7;
    sub_10023341C();
    if (v5 <= 0x3F)
    {
      v10 = *(_QWORD *)(v4 - 8) + 64;
      v11 = &unk_10072CA68;
      v12 = (char *)&value witness table for () + 64;
      v13 = &unk_10072CA50;
      v14 = &unk_10072CA80;
      v15 = &unk_10072CA50;
      swift_initStructMetadata(a1, 256, 22, v6, a1 + 16);
    }
  }
}

uint64_t sub_10054D020(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008765CC, 1);
}

uint64_t sub_10054D030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  int v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  v1 = v0;
  v2 = type metadata accessor for ModernSlider(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v21 - v6;
  v9 = v0 + *(int *)(v8 + 92);
  v10 = *(_BYTE *)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v22 = v10;
  v23 = v11;
  sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v25);
  v12 = v25;
  sub_10002CD84(v1, (uint64_t)v7, type metadata accessor for ModernSlider);
  if (v12 == 1)
  {
    sub_10002C8F0((uint64_t)v7, type metadata accessor for ModernSlider);
    sub_10002CD84(v1, (uint64_t)v4, type metadata accessor for ModernSlider);
LABEL_4:
    sub_10002C8F0((uint64_t)v4, type metadata accessor for ModernSlider);
    return 1;
  }
  v13 = &v7[*(int *)(v2 + 96)];
  v14 = *((_QWORD *)v13 + 1);
  v22 = *v13;
  v23 = v14;
  v24 = *((_OWORD *)v13 + 1);
  v15 = sub_10004CFD4(&qword_1009EAC88);
  GestureState.wrappedValue.getter(&v25, v15);
  sub_10002C8F0((uint64_t)v7, type metadata accessor for ModernSlider);
  v16 = v25;
  sub_10002CD84(v1, (uint64_t)v4, type metadata accessor for ModernSlider);
  if (v16 == 1)
    goto LABEL_4;
  v18 = &v4[*(int *)(v2 + 100)];
  v19 = *v18;
  v20 = *((_QWORD *)v18 + 1);
  v22 = v19;
  v23 = v20;
  State.wrappedValue.getter(&v25);
  sub_10002C8F0((uint64_t)v4, type metadata accessor for ModernSlider);
  return v25;
}

_QWORD *sub_10054D1FC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *result;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;

  v3 = type metadata accessor for ModernSlider(0);
  v4 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v8);
  v5 = v8;
  LOBYTE(v8) = a1;
  State.wrappedValue.setter(&v8, v4);
  result = State.wrappedValue.getter(&v8);
  if (v5 != v8)
  {
    v7 = *(uint64_t (**)(_QWORD))(v1 + *(int *)(v3 + 88));
    State.wrappedValue.getter(&v8);
    return (_QWORD *)v7(v8);
  }
  return result;
}

uint64_t sub_10054D2F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double *v44;
  _BYTE *v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  double (**v66)(char);
  _BYTE v68[24];
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  unsigned __int8 v82;
  _OWORD v83[7];

  v2 = v1;
  v81 = a1;
  v3 = type metadata accessor for ModernSlider(0);
  v78 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v80 = &v68[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v77 = &v68[-v6];
  v79 = v7;
  __chkstk_darwin(v8);
  v72 = &v68[-v9];
  v10 = sub_10004CFD4(&qword_1009EAC48);
  __chkstk_darwin(v10);
  v12 = &v68[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10004CFD4(&qword_1009EAC50);
  __chkstk_darwin(v13);
  v15 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v69 = sub_10004CFD4(&qword_1009EAC58);
  __chkstk_darwin(v69);
  v17 = &v68[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = sub_10004CFD4(&qword_1009EAC60);
  __chkstk_darwin(v70);
  v19 = &v68[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v71 = sub_10004CFD4(&qword_1009EAC68);
  __chkstk_darwin(v71);
  v21 = &v68[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v73 = sub_10004CFD4(&qword_1009EAC70);
  __chkstk_darwin(v73);
  v23 = &v68[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v74 = sub_10004CFD4(&qword_1009EAC78);
  __chkstk_darwin(v74);
  v75 = &v68[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v12 = static VerticalAlignment.center.getter(v25);
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v26 = sub_10004CFD4(&qword_1009EAC80);
  sub_10054D9FC(v2, (uint64_t)&v12[*(int *)(v26 + 44)]);
  v76 = v3;
  v27 = sub_10004CFD4(qword_1009D8EC8);
  v28 = ScaledMetric.wrappedValue.getter(v83, v27);
  v29 = *(_QWORD *)&v83[0];
  v30 = static Alignment.center.getter(v28);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v83, 0, 1, 0, 1, 0, 1, v29, 0, 0, 1, 0, 1, v30, v31);
  sub_10000B5E4((uint64_t)v12, (uint64_t)v15, &qword_1009EAC48);
  v32 = &v15[*(int *)(v13 + 36)];
  v33 = v83[5];
  v32[4] = v83[4];
  v32[5] = v33;
  v32[6] = v83[6];
  v34 = v83[1];
  *v32 = v83[0];
  v32[1] = v34;
  v35 = v83[3];
  v32[2] = v83[2];
  v32[3] = v35;
  v36 = sub_100010960((uint64_t)v12, &qword_1009EAC48);
  LOBYTE(v3) = static Edge.Set.horizontal.getter(v36);
  v37 = EdgeInsets.init(_all:)(4.0);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  sub_10000B5E4((uint64_t)v15, (uint64_t)v17, &qword_1009EAC50);
  v44 = (double *)&v17[*(int *)(v69 + 36)];
  *(_BYTE *)v44 = v3;
  v44[1] = v37;
  *((_QWORD *)v44 + 2) = v39;
  *((_QWORD *)v44 + 3) = v41;
  *((_QWORD *)v44 + 4) = v43;
  *((_BYTE *)v44 + 40) = 0;
  sub_100010960((uint64_t)v15, &qword_1009EAC50);
  sub_10000B5E4((uint64_t)v17, (uint64_t)v19, &qword_1009EAC58);
  v19[*(int *)(v70 + 36)] = 1;
  sub_100010960((uint64_t)v17, &qword_1009EAC58);
  LOBYTE(v3) = sub_10054D030();
  v45 = v72;
  sub_10002CD84((uint64_t)v2, (uint64_t)v72, type metadata accessor for ModernSlider);
  if ((v3 & 1) != 0)
  {
    v46 = sub_10002C8F0((uint64_t)v45, type metadata accessor for ModernSlider);
    v47 = 1.05;
  }
  else
  {
    v48 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v82, v48);
    v49 = v82;
    v46 = sub_10002C8F0((uint64_t)v45, type metadata accessor for ModernSlider);
    if (v49)
      v47 = 1.05;
    else
      v47 = 1.0;
  }
  v50 = (uint64_t)v77;
  v51 = static UnitPoint.center.getter(v46);
  v53 = v52;
  sub_10000B5E4((uint64_t)v19, (uint64_t)v21, &qword_1009EAC60);
  v54 = &v21[*(int *)(v71 + 36)];
  *(double *)v54 = v47;
  *((_QWORD *)v54 + 1) = 0x3FF0000000000000;
  *((double *)v54 + 2) = v51;
  *((_QWORD *)v54 + 3) = v53;
  v55 = sub_100010960((uint64_t)v19, &qword_1009EAC60);
  v56 = static Animation.spring(response:dampingFraction:blendDuration:)(v55, 0.3, 0.6, 0.0);
  v57 = sub_10054D030();
  sub_10002CD84((uint64_t)v2, v50, type metadata accessor for ModernSlider);
  if ((v57 & 1) != 0)
  {
    v58 = 1;
  }
  else
  {
    v59 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v82, v59);
    v58 = v82;
  }
  sub_10002C8F0(v50, type metadata accessor for ModernSlider);
  sub_10000B5E4((uint64_t)v21, (uint64_t)v23, &qword_1009EAC68);
  v60 = &v23[*(int *)(v73 + 36)];
  *(_QWORD *)v60 = v56;
  v60[8] = v58;
  sub_100010960((uint64_t)v21, &qword_1009EAC68);
  v61 = v80;
  sub_10002CD84((uint64_t)v2, (uint64_t)v80, type metadata accessor for ModernSlider);
  v62 = *(unsigned __int8 *)(v78 + 80);
  v63 = (v62 + 16) & ~v62;
  v64 = swift_allocObject(&unk_10090F440, v63 + v79, v62 | 7);
  sub_100550CB0((uint64_t)v61, v64 + v63);
  v65 = v75;
  sub_10000B5E4((uint64_t)v23, (uint64_t)v75, &qword_1009EAC70);
  v66 = (double (**)(char))&v65[*(int *)(v74 + 36)];
  *v66 = sub_100550CF4;
  v66[1] = (double (*)(char))v64;
  sub_100010960((uint64_t)v23, &qword_1009EAC70);
  return sub_100025B3C((uint64_t)v65, v81, &qword_1009EAC78);
}

uint64_t sub_10054D9FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t v44;
  unint64_t v45;
  uint64_t OpaqueTypeConformance2;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  __n128 v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  char v70;
  double v71;
  uint64_t v72;
  int v73;
  char v74;
  uint64_t v75;
  double v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  void *v134;
  char *v135;
  void *v136;
  uint64_t v137;
  uint64_t v138;

  v123 = a2;
  v3 = type metadata accessor for ModernSlider(0);
  v107 = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v107 + 64);
  __chkstk_darwin(v3);
  v118 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v124 = (uint64_t)&v104 - v6;
  __chkstk_darwin(v7);
  v115 = (char *)&v104 - v8;
  __chkstk_darwin(v9);
  v110 = (char *)&v104 - v10;
  __chkstk_darwin(v11);
  v109 = (char *)&v104 - v12;
  __chkstk_darwin(v13);
  v108 = (uint64_t)&v104 - v14;
  __chkstk_darwin(v15);
  v106 = (uint64_t)&v104 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v104 - v18;
  v125 = sub_10004CFD4(&qword_1009EAC90);
  v111 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v119 = (char *)&v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v104 - v22;
  v24 = sub_10004CFD4(&qword_1009EAC98);
  __chkstk_darwin(v24);
  v121 = (uint64_t)&v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v122 = (uint64_t)&v104 - v27;
  __chkstk_darwin(v28);
  v116 = (char *)&v104 - v29;
  __chkstk_darwin(v30);
  v120 = (uint64_t)&v104 - v31;
  __chkstk_darwin(v32);
  v105 = (char *)&v104 - v33;
  __chkstk_darwin(v34);
  v126 = (uint64_t)&v104 - v35;
  v36 = *a1;
  v37 = a1[1];
  swift_bridgeObjectRetain(v37);
  v38 = Image.init(systemName:)(v36, v37);
  LOBYTE(v37) = sub_10054D030();
  sub_10002CD84((uint64_t)a1, (uint64_t)v19, type metadata accessor for ModernSlider);
  v117 = v3;
  if ((v37 & 1) != 0)
  {
    sub_10002C8F0((uint64_t)v19, type metadata accessor for ModernSlider);
    v39 = a1 + 4;
  }
  else
  {
    v40 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v133, v40);
    v41 = v133;
    sub_10002C8F0((uint64_t)v19, type metadata accessor for ModernSlider);
    if (v41 == 1)
      v39 = a1 + 4;
    else
      v39 = a1 + 5;
  }
  v42 = *v39;
  swift_retain(*v39);
  KeyPath = swift_getKeyPath(&unk_10072CAE8);
  v130 = v38;
  v131 = KeyPath;
  v132 = v42;
  __chkstk_darwin(KeyPath);
  *(&v104 - 2) = (uint64_t)a1;
  v44 = sub_10004CFD4(&qword_1009D3930);
  v45 = sub_100227284();
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_100550D38, &v104 - 4, v44, &type metadata for Image, v45);
  swift_release(v130);
  swift_release(v131);
  swift_release(v132);
  v114 = v44;
  v133 = (char *)v44;
  v134 = &type metadata for Image;
  v113 = v45;
  v135 = (char *)v45;
  v136 = &protocol witness table for Image;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v133, &opaque type descriptor for <<opaque return type of View.accessibilityShowsLargeContentViewer<A>(_:)>>, 1);
  v47 = (uint64_t)v105;
  v48 = v125;
  v112 = OpaqueTypeConformance2;
  View.accessibilityHidden(_:)(1, v125, OpaqueTypeConformance2);
  v111 = *(_QWORD *)(v111 + 8);
  ((void (*)(char *, uint64_t))v111)(v23, v48);
  sub_100025B3C(v47, v126, &qword_1009EAC98);
  v49 = v106;
  sub_10002CD84((uint64_t)a1, v106, type metadata accessor for ModernSlider);
  v50 = *(unsigned __int8 *)(v107 + 80);
  v51 = (v50 + 16) & ~v50;
  v52 = swift_allocObject(&unk_10090F468, v51 + v4, v50 | 7);
  sub_100550CB0(v49, v52 + v51);
  LOBYTE(v51) = sub_10054D030();
  v53 = v108;
  sub_10002CD84((uint64_t)a1, v108, type metadata accessor for ModernSlider);
  if ((v51 & 1) == 0)
  {
    v58 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v133, v58);
  }
  sub_10002C8F0(v53, type metadata accessor for ModernSlider);
  v54 = (uint64_t)v118;
  v55 = (uint64_t)v115;
  v56 = (uint64_t)v110;
  v57 = (uint64_t)v109;
  v59 = sub_10004CFD4(qword_1009D8EC8);
  v60 = ScaledMetric.wrappedValue.getter(&v133, v59);
  v61 = v133;
  v62 = static Alignment.center.getter(v60);
  _FrameLayout.init(width:height:alignment:)(&v133, 0, 1, v61, 0, v62, v63);
  v118 = v133;
  LODWORD(v115) = v134;
  v110 = v135;
  LODWORD(v109) = v136;
  v108 = v137;
  v107 = v138;
  v64 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  v65 = sub_10054D030();
  sub_10002CD84((uint64_t)a1, v57, type metadata accessor for ModernSlider);
  if ((v65 & 1) != 0)
  {
    sub_10002C8F0(v57, type metadata accessor for ModernSlider);
    v66.n128_u64[0] = 0x3FC999999999999ALL;
  }
  else
  {
    v67 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v127, v67);
    v68 = v127;
    sub_10002C8F0(v57, type metadata accessor for ModernSlider);
    v66.n128_u64[0] = 0x3FC999999999999ALL;
    if (!v68)
      v66.n128_f64[0] = 0.0;
  }
  v69 = Color.opacity(_:)(v64, v66);
  swift_release(v64);
  v70 = sub_10054D030();
  sub_10002CD84((uint64_t)a1, v56, type metadata accessor for ModernSlider);
  if ((v70 & 1) != 0)
  {
    sub_10002C8F0(v56, type metadata accessor for ModernSlider);
    v71 = 20.0;
  }
  else
  {
    v72 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v127, v72);
    v73 = v127;
    sub_10002C8F0(v56, type metadata accessor for ModernSlider);
    if (v73)
      v71 = 20.0;
    else
      v71 = 0.0;
  }
  v74 = sub_10054D030();
  sub_10002CD84((uint64_t)a1, v55, type metadata accessor for ModernSlider);
  if ((v74 & 1) != 0)
  {
    v75 = sub_10002C8F0(v55, type metadata accessor for ModernSlider);
    v76 = 8.0;
  }
  else
  {
    v77 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v127, v77);
    v78 = v127;
    v75 = sub_10002C8F0(v55, type metadata accessor for ModernSlider);
    if (v78)
      v76 = 8.0;
    else
      v76 = 0.0;
  }
  v79 = static Animation.spring(response:dampingFraction:blendDuration:)(v75, 0.3, 0.6, 0.0);
  v80 = sub_10054D030();
  v81 = v124;
  sub_10002CD84((uint64_t)a1, v124, type metadata accessor for ModernSlider);
  if ((v80 & 1) != 0)
  {
    v82 = 1;
  }
  else
  {
    v83 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v127, v83);
    v81 = v124;
    v82 = v127;
  }
  sub_10002C8F0(v81, type metadata accessor for ModernSlider);
  v84 = a1[2];
  v85 = a1[3];
  swift_bridgeObjectRetain(v85);
  v86 = Image.init(systemName:)(v84, v85);
  LOBYTE(v85) = sub_10054D030();
  sub_10002CD84((uint64_t)a1, v54, type metadata accessor for ModernSlider);
  if ((v85 & 1) != 0)
  {
    sub_10002C8F0(v54, type metadata accessor for ModernSlider);
    v87 = a1 + 4;
  }
  else
  {
    v88 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v127, v88);
    v89 = v127;
    sub_10002C8F0(v54, type metadata accessor for ModernSlider);
    if (v89 == 1)
      v87 = a1 + 4;
    else
      v87 = a1 + 5;
  }
  v90 = *v87;
  swift_retain(*v87);
  v91 = swift_getKeyPath(&unk_10072CAE8);
  v127 = v86;
  v128 = v91;
  v129 = v90;
  __chkstk_darwin(v91);
  *(&v104 - 2) = (uint64_t)a1;
  v92 = v119;
  View.accessibilityShowsLargeContentViewer<A>(_:)(sub_100550DCC, &v104 - 4, v114, &type metadata for Image, v113);
  swift_release(v127);
  swift_release(v128);
  swift_release(v129);
  v93 = (uint64_t)v116;
  v94 = v125;
  View.accessibilityHidden(_:)(1, v125, v112);
  ((void (*)(char *, uint64_t))v111)(v92, v94);
  v95 = v120;
  sub_100025B3C(v93, v120, &qword_1009EAC98);
  v96 = v126;
  v97 = v122;
  sub_10000B5E4(v126, v122, &qword_1009EAC98);
  v98 = v121;
  sub_10000B5E4(v95, v121, &qword_1009EAC98);
  v99 = v123;
  sub_10000B5E4(v97, v123, &qword_1009EAC98);
  v100 = sub_10004CFD4(&qword_1009EACA0);
  v101 = v99 + *(int *)(v100 + 48);
  *(_QWORD *)v101 = sub_100550D80;
  *(_QWORD *)(v101 + 8) = v52;
  *(_QWORD *)(v101 + 16) = v118;
  *(_BYTE *)(v101 + 24) = (_BYTE)v115;
  *(_QWORD *)(v101 + 32) = v110;
  *(_BYTE *)(v101 + 40) = (_BYTE)v109;
  v102 = v107;
  *(_QWORD *)(v101 + 48) = v108;
  *(_QWORD *)(v101 + 56) = v102;
  *(_QWORD *)(v101 + 64) = v69;
  *(double *)(v101 + 72) = v71;
  *(_QWORD *)(v101 + 80) = 0;
  *(double *)(v101 + 88) = v76;
  *(_QWORD *)(v101 + 96) = v79;
  *(_BYTE *)(v101 + 104) = v82;
  sub_10000B5E4(v98, v99 + *(int *)(v100 + 64), &qword_1009EAC98);
  swift_retain(v52);
  swift_retain(v69);
  swift_retain(v79);
  sub_100010960(v95, &qword_1009EAC98);
  sub_100010960(v96, &qword_1009EAC98);
  sub_100010960(v98, &qword_1009EAC98);
  swift_release(v79);
  swift_release(v69);
  swift_release(v52);
  return sub_100010960(v97, &qword_1009EAC98);
}

uint64_t sub_10054E54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a3;
  v5 = sub_10004CFD4(&qword_1009EACA8);
  __chkstk_darwin(v5);
  v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_10004CFD4(&qword_1009EACB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009EACB8);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  GeometryProxy.size.getter(v14);
  v15 = 0.5;
  v17 = v16 * 0.5;
  *v7 = static Alignment.center.getter(v18);
  v7[1] = v19;
  v20 = sub_10004CFD4(&qword_1009EACC0);
  sub_10054E798((_QWORD *)a2, a1, (uint64_t)v7 + *(int *)(v20 + 44), v17);
  v21 = *(_QWORD *)(a2 + 144);
  v36 = *(_BYTE *)(a2 + 136);
  v37 = v21;
  sub_10004CFD4(&qword_1009D8450);
  v22 = State.wrappedValue.getter(&v38);
  if ((_BYTE)v38)
    v23 = 1.5;
  else
    v23 = 1.0;
  v24 = static UnitPoint.trailing.getter(v22);
  v26 = v25;
  sub_10000B5E4((uint64_t)v7, (uint64_t)v10, &qword_1009EACA8);
  v27 = &v10[*(int *)(v8 + 36)];
  *(_QWORD *)v27 = 0x3FF0000000000000;
  *((double *)v27 + 1) = v23;
  *((double *)v27 + 2) = v24;
  *((_QWORD *)v27 + 3) = v26;
  sub_100010960((uint64_t)v7, &qword_1009EACA8);
  v28 = *(_QWORD *)(a2 + 160);
  v36 = *(_BYTE *)(a2 + 152);
  v37 = v28;
  v29 = State.wrappedValue.getter(&v38);
  if (!(_BYTE)v38)
    v15 = 1.0;
  v30 = static UnitPoint.leading.getter(v29);
  v32 = v31;
  sub_10000B5E4((uint64_t)v10, (uint64_t)v13, &qword_1009EACB0);
  v33 = &v13[*(int *)(v11 + 36)];
  *(_QWORD *)v33 = 0x3FF0000000000000;
  *((double *)v33 + 1) = v15;
  *((double *)v33 + 2) = v30;
  *((_QWORD *)v33 + 3) = v32;
  sub_100010960((uint64_t)v10, &qword_1009EACB0);
  return sub_100025B3C((uint64_t)v13, v35, &qword_1009EACB8);
}

uint64_t sub_10054E798@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char **v36;
  uint64_t v37;
  int v38;
  id v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t OpaqueTypeConformance2;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  double *v67;
  double v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  double v105[2];

  v98 = a2;
  v100 = a3;
  v6 = sub_10004CFD4(&qword_1009EACC8);
  __chkstk_darwin(v6);
  v101 = (uint64_t)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v99 = (uint64_t)&v83 - v9;
  v85 = sub_10004CFD4(&qword_1009F4140);
  __chkstk_darwin(v85);
  v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v12);
  v14 = (double *)((char *)&v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for ModernSlider(0);
  v93 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v94 = v16;
  v95 = (uint64_t)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v83 - v18;
  v20 = sub_10004CFD4(&qword_1009EACD0);
  __chkstk_darwin(v20);
  v22 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_10004CFD4(&qword_1009EACD8);
  __chkstk_darwin(v88);
  v24 = (char *)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v84 = (char *)&v83 - v26;
  v89 = sub_10004CFD4(&qword_1009EACE0);
  v87 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v86 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_10004CFD4(&qword_1009EACE8);
  __chkstk_darwin(v92);
  v97 = (uint64_t)&v83 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v91 = (char *)&v83 - v30;
  __chkstk_darwin(v31);
  v90 = (char *)&v83 - v32;
  __chkstk_darwin(v33);
  v96 = (uint64_t)&v83 - v34;
  v35 = sub_10054D030();
  sub_10002CD84((uint64_t)a1, (uint64_t)v19, type metadata accessor for ModernSlider);
  v83 = v15;
  if ((v35 & 1) != 0)
  {
    sub_10002C8F0((uint64_t)v19, type metadata accessor for ModernSlider);
    v36 = &selRef_systemFillColor;
  }
  else
  {
    v37 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v102, v37);
    v38 = v102;
    sub_10002C8F0((uint64_t)v19, type metadata accessor for ModernSlider);
    if (v38)
      v36 = &selRef_systemFillColor;
    else
      v36 = &selRef_secondarySystemFillColor;
  }
  v39 = objc_msgSend((id)objc_opt_self(UIColor), *v36);
  v40 = Color.init(_:)(v39);
  v41 = (char *)v14 + *(int *)(v12 + 20);
  v42 = enum case for RoundedCornerStyle.continuous(_:);
  v43 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v42, v43);
  *v14 = a4;
  v14[1] = a4;
  sub_10002CD84((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v11[*(int *)(v85 + 36)] = 256;
  sub_10000B5E4((uint64_t)v11, (uint64_t)&v22[*(int *)(v20 + 36)], &qword_1009F4140);
  *(_QWORD *)v22 = v40;
  *((_WORD *)v22 + 4) = 256;
  swift_retain(v40);
  sub_100010960((uint64_t)v11, &qword_1009F4140);
  sub_10002C8F0((uint64_t)v14, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  swift_release(v40);
  v44 = a1[9];
  v102 = a1[8];
  v103 = v44;
  v45 = sub_100550E10();
  v46 = sub_1001F2108();
  View.accessibilityLabel<A>(_:)(&v102, v20, &type metadata for String, v45, v46);
  sub_100010960((uint64_t)v22, &qword_1009EACD0);
  sub_10054EF08();
  v48 = v47;
  v102 = v49;
  v103 = v47;
  v50 = (uint64_t)v84;
  v51 = v88;
  ModifiedContent<>.accessibilityValue<A>(_:)(&v102, v88, &type metadata for String, v46);
  swift_bridgeObjectRelease(v48);
  sub_100010960((uint64_t)v24, &qword_1009EACD8);
  v52 = v83;
  v53 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.projectedValue.getter(&v102, v53);
  v54 = v102;
  v55 = v103;
  v56 = v104;
  v57 = sub_100550EAC();
  v58 = v86;
  View.accessibilityFocused(_:)(v54, v55, v56, v51, v57);
  swift_release(v55);
  swift_release(v54);
  sub_100010960(v50, &qword_1009EACD8);
  v59 = v95;
  sub_10002CD84((uint64_t)a1, v95, type metadata accessor for ModernSlider);
  v60 = *(unsigned __int8 *)(v93 + 80);
  v61 = (v60 + 16) & ~v60;
  v62 = swift_allocObject(&unk_10090F490, v61 + v94, v60 | 7);
  sub_100550CB0(v59, v62 + v61);
  v102 = v51;
  v103 = v57;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v102, &opaque type descriptor for <<opaque return type of View.accessibilityFocused(_:)>>, 1);
  v64 = (uint64_t)v91;
  v65 = v89;
  View.accessibilityAdjustableAction(_:)(sub_100550F34, v62, v89, OpaqueTypeConformance2);
  v66 = swift_release(v62);
  (*(void (**)(char *, uint64_t, __n128))(v87 + 8))(v58, v65, v66);
  v67 = (double *)((char *)a1 + *(int *)(v52 + 84));
  v68 = *v67;
  v69 = a1[13];
  v70 = a1[14];
  v102 = a1[12];
  v103 = v69;
  v104 = v70;
  v71 = sub_10004CFD4(&qword_1009EAD10);
  Binding.wrappedValue.getter(v105, v71);
  v72 = (uint64_t)v90;
  ModifiedContent<>.accessibilityActivationPoint(_:)(v92, (v68 + v105[0]) / (v67[1] - v68), 0.5);
  sub_100010960(v64, &qword_1009EACE8);
  v73 = v96;
  v74 = sub_100025B3C(v72, v96, &qword_1009EACE8);
  v75 = GeometryProxy.size.getter(v74);
  v76 = v99;
  sub_10054F2BC(v99, v75, v77, a4);
  v78 = v97;
  sub_10000B5E4(v73, v97, &qword_1009EACE8);
  v79 = v101;
  sub_10000B5E4(v76, v101, &qword_1009EACC8);
  v80 = v100;
  sub_10000B5E4(v78, v100, &qword_1009EACE8);
  v81 = sub_10004CFD4(&qword_1009EAD18);
  sub_10000B5E4(v79, v80 + *(int *)(v81 + 48), &qword_1009EACC8);
  sub_100010960(v76, &qword_1009EACC8);
  sub_100010960(v73, &qword_1009EACE8);
  sub_100010960(v79, &qword_1009EACC8);
  return sub_100010960(v78, &qword_1009EACE8);
}

void sub_10054EF08()
{
  __asm { BR              X10 }
}

uint64_t sub_10054EF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v8;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v1 = swift_allocObject(v0, 48, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10070CCA0;
  v2 = sub_10004CFD4(&qword_1009EAD10);
  Binding.wrappedValue.getter(&v8, v2);
  *(_QWORD *)(v1 + 32) = sub_100550BB8(v8);
  *(_QWORD *)(v1 + 40) = v3;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
  v5 = sub_100030B34((unint64_t *)&qword_1009D8840, (uint64_t *)&unk_1009E8850, (uint64_t)&protocol conformance descriptor for [A]);
  v6 = BidirectionalCollection<>.joined(separator:)(8236, 0xE200000000000000, v4, v5);
  swift_bridgeObjectRelease(v1);
  return v6;
}

uint64_t sub_10054F11C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double *v8;
  double v9;
  double v10;
  double v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;

  v4 = type metadata accessor for AccessibilityAdjustmentDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (double *)((char *)a2 + *(int *)(type metadata accessor for ModernSlider(0) + 84));
  v9 = *v8;
  v10 = v8[1];
  v11 = (v10 - *v8) * 0.05;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v12 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v12 == enum case for AccessibilityAdjustmentDirection.increment(_:))
  {
    v13 = a2[12];
    v14 = a2[13];
    v15 = a2[14];
    v22 = v13;
    v23 = v14;
    v24 = v15;
    v16 = sub_10004CFD4(&qword_1009EAD10);
    Binding.wrappedValue.getter(&v25, v16);
    v17 = v11 + v25;
    if (v10 < v11 + v25)
      v17 = v10;
    v22 = v13;
    v23 = v14;
    v24 = v15;
LABEL_9:
    v25 = v17;
    return Binding.wrappedValue.setter(&v25, v16);
  }
  if (v12 == enum case for AccessibilityAdjustmentDirection.decrement(_:))
  {
    v18 = a2[12];
    v19 = a2[13];
    v20 = a2[14];
    v22 = v18;
    v23 = v19;
    v24 = v20;
    v16 = sub_10004CFD4(&qword_1009EAD10);
    Binding.wrappedValue.getter(&v25, v16);
    v17 = v25 - v11;
    if (v25 - v11 <= v9)
      v17 = v9;
    v22 = v18;
    v23 = v19;
    v24 = v20;
    goto LABEL_9;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10054F2BC@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  double v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;

  v5 = (uint64_t)v4;
  v56 = a4;
  v58 = a3;
  v59 = a1;
  v55 = sub_10004CFD4(&qword_1009F4140);
  __chkstk_darwin(v55);
  v57 = (uint64_t)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v8);
  v10 = (double *)((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for ModernSlider(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009EAD20);
  __chkstk_darwin(v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (double *)((char *)v4 + *(int *)(v11 + 84));
  v19 = *v17;
  v18 = v17[1];
  v20 = v4[13];
  v21 = v4[14];
  v61 = v4[12];
  v62 = v20;
  v63 = v21;
  v22 = sub_10004CFD4(&qword_1009EAD10);
  Binding.wrappedValue.getter(&v60, v22);
  v23 = v60;
  v24 = sub_10054D030();
  sub_10002CD84(v5, (uint64_t)v13, type metadata accessor for ModernSlider);
  if ((v24 & 1) != 0)
  {
    sub_10002C8F0((uint64_t)v13, type metadata accessor for ModernSlider);
    v25 = (_QWORD *)(v5 + 48);
  }
  else
  {
    v26 = sub_10004CFD4(&qword_1009D3A10);
    AccessibilityFocusState.wrappedValue.getter(&v61, v26);
    v27 = v61;
    sub_10002C8F0((uint64_t)v13, type metadata accessor for ModernSlider);
    if (v27 == 1)
      v25 = (_QWORD *)(v5 + 48);
    else
      v25 = (_QWORD *)(v5 + 56);
  }
  v28 = *v25;
  swift_retain(*v25);
  v29 = (a2 * 0.9999 - a2 * 0.0001) / (v18 - v19);
  v30 = a2 * 0.0001 + v29 * (v23 - v19);
  v32 = static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(&v61, *(_QWORD *)&a2, 0, 0, 1, v32, v33);
  v34 = v61;
  v35 = v62;
  v36 = v63;
  v54 = v64;
  v53 = v65;
  v52 = v66;
  v37 = (char *)v10 + *(int *)(v8 + 20);
  v38 = enum case for RoundedCornerStyle.continuous(_:);
  v39 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v37, v38, v39);
  v40 = v56;
  *v10 = v56;
  v10[1] = v40;
  v41 = v57;
  sub_10002CD84((uint64_t)v10, v57, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v41 + *(int *)(v55 + 36)) = 256;
  sub_10000B5E4(v41, (uint64_t)&v16[*(int *)(v14 + 36)], &qword_1009F4140);
  *(_QWORD *)v16 = v28;
  *((_WORD *)v16 + 4) = 256;
  *((_QWORD *)v16 + 2) = v34;
  v16[24] = v35;
  *((_QWORD *)v16 + 4) = v36;
  v16[40] = v54;
  v42 = v52;
  *((_QWORD *)v16 + 6) = v53;
  *((_QWORD *)v16 + 7) = v42;
  *((double *)v16 + 8) = v30 - a2;
  *((_QWORD *)v16 + 9) = 0;
  swift_retain(v28);
  sub_100010960(v41, &qword_1009F4140);
  sub_10002C8F0((uint64_t)v10, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle);
  swift_release(v28);
  v44 = static Alignment.center.getter(v43);
  v46 = v45;
  v47 = sub_10004CFD4(&qword_1009EACC8);
  v48 = v59;
  v49 = v59 + *(int *)(v47 + 36);
  sub_10054F734(v5, v49, v30, a2, a2 * 0.9999, a2 * 0.0001, v29, v19, v18);
  v50 = (uint64_t *)(v49 + *(int *)(sub_10004CFD4(&qword_1009EAD28) + 36));
  *v50 = v44;
  v50[1] = v46;
  return sub_100025B3C((uint64_t)v16, v48, &qword_1009EAD20);
}

double sub_10054F6CC(char a1, uint64_t a2)
{
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v8[9];
  uint64_t v9;

  v3 = (char *)(a2 + *(int *)(type metadata accessor for ModernSlider(0) + 92));
  v4 = *v3;
  v5 = *((_QWORD *)v3 + 1);
  v8[1] = v4;
  v9 = v5;
  v8[0] = a1;
  v6 = sub_10004CFD4(&qword_1009D8450);
  *(_QWORD *)&result = State.wrappedValue.setter(v8, v6).n128_u64[0];
  return result;
}

uint64_t sub_10054F734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D3>, double a6@<D4>, double a7@<D5>, double a8@<D6>, double a9@<D7>)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  char v109;
  uint64_t v110;
  char v111;
  __int128 v112;
  double v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  char v118;
  __int128 v119;

  v84 = a1;
  v101 = a2;
  v100 = type metadata accessor for LongPressGesture(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v96 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_10004CFD4(&qword_1009EAD30);
  __chkstk_darwin(v98);
  v97 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v94 = type metadata accessor for ModernSlider(0);
  v19 = *(_QWORD *)(v94 - 8);
  v20 = *(_QWORD *)(v19 + 64);
  v21 = __chkstk_darwin(v94);
  v22 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for LocalCoordinateSpace(0, v21);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for DragGesture(0, v24);
  v88 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v82 = (char *)&v82 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_10004CFD4(&qword_1009E7830);
  v90 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v85 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10004CFD4(&qword_1009E7838);
  v92 = *(_QWORD *)(v102 - 8);
  __chkstk_darwin(v102);
  v87 = (char *)&v82 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_10004CFD4(&qword_1009EAD38);
  v95 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v82 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v32 = static Alignment.center.getter(v31);
  _FrameLayout.init(width:height:alignment:)(&v115, 0, 1, 0x4046000000000000, 0, v32, v33);
  v106 = v31;
  LOWORD(v107) = 256;
  *(_QWORD *)&v108 = 0x3F1A36E2EB1C432DLL;
  *((_QWORD *)&v108 + 1) = v115;
  v109 = v116;
  v110 = v117;
  v111 = v118;
  v112 = v119;
  v113 = a3 + a4 * -0.5;
  v114 = 0;
  static CoordinateSpaceProtocol<>.local.getter(v113);
  DragGesture.init<A>(minimumDistance:coordinateSpace:)(v26, v23, &protocol witness table for LocalCoordinateSpace, 0.0);
  sub_10002CD84(a1, (uint64_t)v22, type metadata accessor for ModernSlider);
  v34 = *(unsigned __int8 *)(v19 + 80);
  v35 = (v34 + 16) & ~v34;
  v83 = v35 + v20;
  v36 = v34 | 7;
  v37 = (v35 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
  v43 = swift_allocObject(&unk_10090F4B8, v42 + 8, v34 | 7);
  sub_100550CB0((uint64_t)v22, v43 + v35);
  *(double *)(v43 + v37) = a3;
  *(double *)(v43 + v38) = a5;
  *(double *)(v43 + v39) = a6;
  *(double *)(v43 + v40) = a7;
  *(double *)(v43 + v41) = a8;
  *(double *)(v43 + v42) = a9;
  v44 = sub_100008DB0(&qword_1009E7880, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture, (uint64_t)&protocol conformance descriptor for DragGesture);
  v45 = sub_100008DB0(&qword_1009D93E8, (uint64_t (*)(uint64_t))&type metadata accessor for DragGesture.Value, (uint64_t)&protocol conformance descriptor for DragGesture.Value);
  v46 = v85;
  v47 = v86;
  v48 = v82;
  Gesture<>.onChanged(_:)(sub_100551138, v43, v86, v44, v45);
  v49 = swift_release(v43);
  (*(void (**)(char *, uint64_t, __n128))(v88 + 8))(v48, v47, v49);
  v50 = v84;
  sub_10002CD84(v84, (uint64_t)v22, type metadata accessor for ModernSlider);
  v51 = swift_allocObject(&unk_10090F4E0, v83, v36);
  sub_100550CB0((uint64_t)v22, v51 + v35);
  v52 = sub_100030B34(&qword_1009E7888, &qword_1009E7830, (uint64_t)&protocol conformance descriptor for _ChangedGesture<A>);
  v53 = v87;
  v54 = v89;
  Gesture.onEnded(_:)(sub_1005511C8, v51, v89, v52);
  v55 = swift_release(v51);
  v56 = (*(uint64_t (**)(char *, uint64_t, __n128))(v90 + 8))(v46, v54, v55);
  v57 = static GestureMask.all.getter(v56);
  v58 = sub_10004CFD4(&qword_1009EAD40);
  v59 = sub_1001F5558(&qword_1009EAD48, &qword_1009EAD40, (void (*)(void))sub_100551220);
  v60 = sub_100030B34(&qword_1009E7868, &qword_1009E7838, (uint64_t)&protocol conformance descriptor for _EndedGesture<A>);
  v61 = v91;
  v62 = v57;
  v63 = v102;
  View.gesture<A>(_:including:)(v53, v62, v58, v102, v59, v60);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v53, v63);
  swift_release(v106);
  v64 = v96;
  LongPressGesture.init(minimumDuration:maximumDistance:)(0.001, 100.0);
  v65 = v50 + *(int *)(v94 + 96);
  v66 = *(_QWORD *)(v65 + 8);
  v103 = *(_BYTE *)v65;
  v104 = v66;
  v105 = *(_OWORD *)(v65 + 16);
  v67 = sub_10004CFD4(&qword_1009EAC88);
  GestureState.projectedValue.getter(&v106, v67);
  LOBYTE(v48) = v106;
  v68 = v107;
  v94 = v108;
  v69 = v99;
  v70 = (uint64_t)v97;
  v71 = v64;
  v72 = v64;
  v73 = v100;
  (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v97, v71, v100);
  v74 = v98;
  v75 = v70 + *(int *)(v98 + 44);
  *(_BYTE *)v75 = (_BYTE)v48;
  *(_QWORD *)(v75 + 8) = v68;
  *(_OWORD *)(v75 + 16) = v94;
  v76 = v74;
  v77 = (_QWORD *)(v70 + *(int *)(v74 + 48));
  *v77 = sub_100550634;
  v77[1] = 0;
  v78 = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v72, v73);
  v79 = static GestureMask.all.getter(v78);
  v106 = v58;
  v107 = v102;
  *(_QWORD *)&v108 = v59;
  *((_QWORD *)&v108 + 1) = v60;
  swift_getOpaqueTypeConformance2(&v106, &opaque type descriptor for <<opaque return type of View.gesture<A>(_:including:)>>, 1);
  sub_100030B34(&qword_1009EAD70, &qword_1009EAD30, (uint64_t)&protocol conformance descriptor for GestureStateGesture<A, B>);
  v80 = v93;
  View.simultaneousGesture<A>(_:including:)(v70, v79, v93, v76);
  sub_100010960(v70, &qword_1009EAD30);
  return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v61, v80);
}

void sub_10054FF24(double a1, double a2, double a3, double a4, double a5, double a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  _QWORD *v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  double (*v66)();
  uint64_t v67;
  uint64_t v68;
  _BYTE v69[16];
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  double v73;

  v15 = type metadata accessor for ModernSlider(0);
  __chkstk_darwin(v15);
  v17 = &v69[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v18);
  v20 = &v69[-v19];
  v21 = sub_10054D1FC(1);
  if (fabs(DragGesture.Value.translation.getter(v21)) < 0.1)
  {
    v23 = *(_QWORD *)(a8 + 128);
    v70 = *(_QWORD *)(a8 + 120);
    v71 = v23;
    v73 = a1;
    v24 = sub_10004CFD4(&qword_1009D3CE0);
    State.wrappedValue.setter(&v73, v24);
  }
  v25 = DragGesture.Value.translation.getter(v22);
  v26 = *(_QWORD *)(a8 + 128);
  if (v25 <= 0.0)
  {
    v70 = *(_QWORD *)(a8 + 120);
    v71 = v26;
    sub_10004CFD4(&qword_1009D3CE0);
    v45 = State.wrappedValue.getter(&v73);
    v46 = v73;
    v47 = v46 + DragGesture.Value.translation.getter(v45);
    if (v47 < a3)
      v47 = a3;
    v49 = *(_QWORD *)(a8 + 104);
    v50 = *(_QWORD *)(a8 + 112);
    v70 = *(_QWORD *)(a8 + 96);
    v48 = v70;
    v71 = v49;
    v72 = v50;
    v73 = (v47 - a3) / a4 + a5;
    v51 = sub_10004CFD4(&qword_1009EAD10);
    Binding.wrappedValue.setter(&v73, v51);
    v70 = v48;
    v71 = v49;
    v72 = v50;
    Binding.wrappedValue.getter(&v73, v51);
    v52 = v73;
    sub_10002CD84(a8, (uint64_t)v17, type metadata accessor for ModernSlider);
    if (v52 == a5)
    {
      v53 = *((_QWORD *)v17 + 22);
      LOBYTE(v70) = v17[168];
      v71 = v53;
      v54 = sub_10004CFD4(&qword_1009D8450);
      State.wrappedValue.getter(&v73);
      v55 = LOBYTE(v73);
      v56 = sub_10002C8F0((uint64_t)v17, type metadata accessor for ModernSlider);
      if ((v55 & 1) != 0)
      {
        v57 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
        objc_msgSend(v57, "notificationOccurred:", 2);

        v59 = static Animation.spring(response:dampingFraction:blendDuration:)(v58, 0.3, 0.9, 0.0);
        __chkstk_darwin(v59);
        *(_QWORD *)&v69[-16] = a8;
        withAnimation<A>(_:_:)(v60, sub_1005512E0, &v69[-32], (char *)&type metadata for () + 8);
        swift_release(v59);
        v61 = *(_QWORD *)(a8 + 176);
        LOBYTE(v70) = *(_BYTE *)(a8 + 168);
        v71 = v61;
        LOBYTE(v73) = 0;
        State.wrappedValue.setter(&v73, v54);
        return;
      }
    }
    else
    {
      v56 = sub_10002C8F0((uint64_t)v17, type metadata accessor for ModernSlider);
    }
    v67 = static Animation.spring(response:dampingFraction:blendDuration:)(v56, 0.3, 0.95, 0.0);
    v63 = Animation.delay(_:)(v67, 0.0);
    swift_release(v67);
    __chkstk_darwin(v68);
    v65 = &v69[-32];
    *(_QWORD *)&v69[-16] = a8;
    v66 = sub_1005512C8;
  }
  else
  {
    v70 = *(_QWORD *)(a8 + 120);
    v71 = v26;
    sub_10004CFD4(&qword_1009D3CE0);
    v27 = State.wrappedValue.getter(&v73);
    v28 = v73;
    v29 = v28 + DragGesture.Value.translation.getter(v27);
    if (v29 >= a2)
      v29 = a2;
    v30 = (v29 - a3) / a4;
    v32 = *(_QWORD *)(a8 + 104);
    v33 = *(_QWORD *)(a8 + 112);
    v70 = *(_QWORD *)(a8 + 96);
    v31 = v70;
    v71 = v32;
    v72 = v33;
    v73 = v30 + a5;
    v34 = sub_10004CFD4(&qword_1009EAD10);
    Binding.wrappedValue.setter(&v73, v34);
    v70 = v31;
    v71 = v32;
    v72 = v33;
    Binding.wrappedValue.getter(&v73, v34);
    v35 = v73;
    sub_10002CD84(a8, (uint64_t)v20, type metadata accessor for ModernSlider);
    if (v35 == a6)
    {
      v36 = *((_QWORD *)v20 + 22);
      LOBYTE(v70) = v20[168];
      v71 = v36;
      v37 = sub_10004CFD4(&qword_1009D8450);
      State.wrappedValue.getter(&v73);
      v38 = LOBYTE(v73);
      v39 = sub_10002C8F0((uint64_t)v20, type metadata accessor for ModernSlider);
      if ((v38 & 1) != 0)
      {
        v40 = objc_msgSend(objc_allocWithZone((Class)UINotificationFeedbackGenerator), "init");
        objc_msgSend(v40, "notificationOccurred:", 1);

        v42 = static Animation.spring(response:dampingFraction:blendDuration:)(v41, 0.3, 0.9, 0.0);
        __chkstk_darwin(v42);
        *(_QWORD *)&v69[-16] = a8;
        withAnimation<A>(_:_:)(v43, sub_100551358, &v69[-32], (char *)&type metadata for () + 8);
        swift_release(v42);
        v44 = *(_QWORD *)(a8 + 176);
        LOBYTE(v70) = *(_BYTE *)(a8 + 168);
        v71 = v44;
        LOBYTE(v73) = 0;
        State.wrappedValue.setter(&v73, v37);
        return;
      }
    }
    else
    {
      v39 = sub_10002C8F0((uint64_t)v20, type metadata accessor for ModernSlider);
    }
    v62 = static Animation.spring(response:dampingFraction:blendDuration:)(v39, 0.3, 0.95, 0.0);
    v63 = Animation.delay(_:)(v62, 0.0);
    swift_release(v62);
    __chkstk_darwin(v64);
    v65 = &v69[-32];
    *(_QWORD *)&v69[-16] = a8;
    v66 = sub_100551340;
  }
  withAnimation<A>(_:_:)(v63, v66, v65, (char *)&type metadata for () + 8);
  swift_release(v63);
}

double sub_1005504BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  char v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 144);
  v7 = *(_BYTE *)(a1 + 136);
  v8 = v2;
  v6 = 0;
  v3 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.setter(&v6, v3);
  v4 = *(_QWORD *)(a1 + 160);
  v7 = *(_BYTE *)(a1 + 152);
  v8 = v4;
  v6 = 0;
  *(_QWORD *)&result = State.wrappedValue.setter(&v6, v3).n128_u64[0];
  return result;
}

double sub_100550548(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  char v6;
  char v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 160);
  v7 = *(_BYTE *)(a1 + 152);
  v8 = v2;
  v6 = 0;
  v3 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.setter(&v6, v3);
  v4 = *(_QWORD *)(a1 + 144);
  v7 = *(_BYTE *)(a1 + 136);
  v8 = v4;
  v6 = 0;
  *(_QWORD *)&result = State.wrappedValue.setter(&v6, v3).n128_u64[0];
  return result;
}

double sub_1005505D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  double result;
  _BYTE v6[9];
  uint64_t v7;

  sub_10054D1FC(0);
  v3 = *(_QWORD *)(a2 + 176);
  v6[1] = *(_BYTE *)(a2 + 168);
  v7 = v3;
  v6[0] = 1;
  v4 = sub_10004CFD4(&qword_1009D8450);
  *(_QWORD *)&result = State.wrappedValue.setter(v6, v4).n128_u64[0];
  return result;
}

_BYTE *sub_100550634(_BYTE *result, _BYTE *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100550640()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t result;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];
  double v33;

  v1 = type metadata accessor for Locale(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)v32 - v6;
  v8 = type metadata accessor for String.LocalizationValue(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)v32 - v13;
  v15 = v0[13];
  v16 = v0[14];
  v32[2] = v0[12];
  v32[3] = v15;
  v32[4] = v16;
  v17 = sub_10004CFD4(&qword_1009EAD10);
  Binding.wrappedValue.getter(&v33, v17);
  v18 = v33;
  result = type metadata accessor for ModernSlider(0);
  v20 = round((v18 - *(double *)((char *)v0 + *(int *)(result + 84)))/ (*(double *)((char *)v0 + *(int *)(result + 84) + 8) - *(double *)((char *)v0 + *(int *)(result + 84)))* 100.0);
  if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v20 < 9.22337204e18)
  {
    v21 = (uint64_t)v20;
    v22 = String.LocalizationValue.init(stringLiteral:)(623207461, 0xE400000000000000);
    static Locale.current.getter(v22);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, v14, v8);
    v23 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v23);
    v25 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    v26 = String.init(localized:table:bundle:locale:comment:)(v11, 0, 0, v25, v4, "Localized string for a percent", 30, 2);
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v29 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v30 = swift_allocObject(v29, 72, 7);
    *(_OWORD *)(v30 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v30 + 56) = &type metadata for Int;
    *(_QWORD *)(v30 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v30 + 32) = v21;
    v31 = static String.localizedStringWithFormat(_:_:)(v26, v28, v30, (__n128)xmmword_10070CCA0);
    swift_bridgeObjectRelease(v28);
    swift_bridgeObjectRelease(v30);
    return v31;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100550910()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  double *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  _QWORD v40[4];
  double v41[2];

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)v40 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v40 - v14;
  v16 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000026, 0x80000001007D2460);
  static Locale.current.getter(v16);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
  v17 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  v20 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v19, v5, "Accessibility string describing the current value of a variable (1$), and what the minimum (2$) and maximum (3$) values of that variable can be.", 144, 2);
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  v23 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v24 = swift_allocObject(v23, 152, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100712B60;
  v25 = v1[13];
  v26 = v1[14];
  v40[1] = v1[12];
  v40[2] = v25;
  v40[3] = v26;
  v27 = sub_10004CFD4(&qword_1009EAD10);
  Binding.wrappedValue.getter(v41, v27);
  v28 = sub_100550BB8(v41[0]);
  v30 = v29;
  *(_QWORD *)(v24 + 56) = &type metadata for String;
  v31 = sub_10002BE50();
  *(_QWORD *)(v24 + 64) = v31;
  *(_QWORD *)(v24 + 32) = v28;
  *(_QWORD *)(v24 + 40) = v30;
  v32 = (double *)((char *)v1 + *(int *)(type metadata accessor for ModernSlider(0) + 84));
  v33 = sub_100550BB8(*v32);
  *(_QWORD *)(v24 + 96) = &type metadata for String;
  *(_QWORD *)(v24 + 104) = v31;
  *(_QWORD *)(v24 + 72) = v33;
  *(_QWORD *)(v24 + 80) = v34;
  v35 = sub_100550BB8(v32[1]);
  *(_QWORD *)(v24 + 136) = &type metadata for String;
  *(_QWORD *)(v24 + 144) = v31;
  *(_QWORD *)(v24 + 112) = v35;
  *(_QWORD *)(v24 + 120) = v36;
  v38 = static String.localizedStringWithFormat(_:_:)(v20, v22, v24, v37);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  return v38;
}

uint64_t sub_100550BB8(double a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  uint64_t v6;

  v3 = objc_msgSend(objc_allocWithZone((Class)NSNumberFormatter), "init");
  objc_msgSend(v3, "setNumberStyle:", 1);
  if ((*(_BYTE *)(v1 + 88) & 0x81) == 0)
    objc_msgSend(v3, "setMaximumFractionDigits:", *(_QWORD *)(v1 + 80));
  v4 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", a1);
  v5 = objc_msgSend(v3, "stringFromNumber:", v4);

  if (v5)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);

  }
  else
  {

    return 0;
  }
  return v6;
}

uint64_t sub_100550CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ModernSlider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_100550CF4(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ModernSlider(0) - 8) + 80);
  return sub_10054F6CC(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_100550D38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(uint64_t **)(v1 + 16);
  v4 = *v3;
  v5 = v3[1];
  swift_bridgeObjectRetain(v5);
  result = Image.init(systemName:)(v4, v5);
  *a1 = result;
  return result;
}

uint64_t sub_100550D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ModernSlider(0) - 8) + 80);
  return sub_10054E54C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_100550DCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain(v5);
  result = Image.init(systemName:)(v4, v5);
  *a1 = result;
  return result;
}

unint64_t sub_100550E10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EACF0;
  if (!qword_1009EACF0)
  {
    v1 = sub_100030B74(&qword_1009EACD0);
    sub_100030B34(&qword_1009EACF8, &qword_1009EAD00, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EACF0);
  }
  return result;
}

unint64_t sub_100550EAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EAD08;
  if (!qword_1009EAD08)
  {
    v1 = sub_100030B74(&qword_1009EACD8);
    sub_100550E10();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EAD08);
  }
  return result;
}

uint64_t sub_100550F34(uint64_t a1)
{
  return sub_1005511D4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10054F11C);
}

uint64_t sub_100550F40()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for ModernSlider(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_release(*(_QWORD *)(v0 + v4 + 32));
  swift_release(*(_QWORD *)(v0 + v4 + 40));
  swift_release(*(_QWORD *)(v0 + v4 + 48));
  swift_release(*(_QWORD *)(v0 + v4 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 72));
  swift_release(*(_QWORD *)(v0 + v4 + 96));
  swift_release(*(_QWORD *)(v0 + v4 + 104));
  swift_release(*(_QWORD *)(v0 + v4 + 128));
  swift_release(*(_QWORD *)(v0 + v4 + 144));
  swift_release(*(_QWORD *)(v0 + v4 + 160));
  swift_release(*(_QWORD *)(v0 + v4 + 176));
  v7 = v0 + v4 + v1[17];
  v8 = sub_10004CFD4(qword_1009D8EC8);
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + v4 + v1[18], v8);
  v9(v0 + v4 + v1[19], v8);
  v10 = v0 + v4 + v1[20];
  v11 = type metadata accessor for AccessibilityTechnologies(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v13 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)(v10 + *(int *)(v13 + 40)));
  swift_release(*(_QWORD *)(v6 + v1[22] + 8));
  swift_release(*(_QWORD *)(v6 + v1[23] + 8));
  v14 = v6 + v1[24];
  swift_release(*(_QWORD *)(v14 + 8));
  swift_release(*(_QWORD *)(v14 + 24));
  swift_release(*(_QWORD *)(v6 + v1[25] + 8));
  return swift_deallocObject(v0, ((((((((((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8, v3 | 7);
}

void sub_100551138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for ModernSlider(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_10054FF24(*(double *)(v1 + v5), *(double *)(v1 + v6), *(double *)(v1 + v7), *(double *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(double *)(v1 + ((((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)), a1, v1 + v4);
}

uint64_t sub_1005511C8(uint64_t a1)
{
  return sub_1005511D4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1005505D4);
}

uint64_t sub_1005511D4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ModernSlider(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_100551220()
{
  return sub_1001F5558(&qword_1009EAD50, &qword_1009EAD58, (void (*)(void))sub_100551244);
}

unint64_t sub_100551244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EAD60;
  if (!qword_1009EAD60)
  {
    v1 = sub_100030B74(&qword_1009EAD68);
    sub_100030B34(&qword_1009EACF8, &qword_1009EAD00, (uint64_t)&protocol conformance descriptor for _ShapeView<A, B>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EAD60);
  }
  return result;
}

double sub_1005512C8()
{
  uint64_t v0;

  return sub_100550548(*(_QWORD *)(v0 + 16));
}

double sub_1005512E0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  _BYTE v6[9];
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v1 + 152);
  v3 = *(_QWORD *)(v1 + 160);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_10004CFD4(&qword_1009D8450);
  *(_QWORD *)&result = State.wrappedValue.setter(v6, v4).n128_u64[0];
  return result;
}

double sub_100551340()
{
  uint64_t v0;

  return sub_1005504BC(*(_QWORD *)(v0 + 16));
}

double sub_100551358()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  _BYTE v6[9];
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v1 + 136);
  v3 = *(_QWORD *)(v1 + 144);
  v6[1] = v2;
  v7 = v3;
  v6[0] = 1;
  v4 = sub_10004CFD4(&qword_1009D8450);
  *(_QWORD *)&result = State.wrappedValue.setter(v6, v4).n128_u64[0];
  return result;
}

ValueMetadata *type metadata accessor for ModernSlider.AccessibilityValueStringType()
{
  return &type metadata for ModernSlider.AccessibilityValueStringType;
}

uint64_t sub_1005513C8()
{
  return sub_10028156C(&qword_1009EAD78, &qword_1009EAC78, (void (*)(void))sub_1005513FC, (void (*)(void))sub_100338E10);
}

unint64_t sub_1005513FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EAD80;
  if (!qword_1009EAD80)
  {
    v1 = sub_100030B74(&qword_1009EAC70);
    sub_100551480();
    sub_100030B34(&qword_1009D4070, &qword_1009D4078, (uint64_t)&protocol conformance descriptor for _AnimationModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EAD80);
  }
  return result;
}

unint64_t sub_100551480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EAD88;
  if (!qword_1009EAD88)
  {
    v1 = sub_100030B74(&qword_1009EAC68);
    sub_10028156C(&qword_1009EAD90, &qword_1009EAC60, (void (*)(void))sub_10055150C, (void (*)(void))sub_1005515B4);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EAD88);
  }
  return result;
}

uint64_t sub_10055150C()
{
  return sub_1001F5558(&qword_1009EAD98, &qword_1009EAC58, (void (*)(void))sub_100551530);
}

unint64_t sub_100551530()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EADA0;
  if (!qword_1009EADA0)
  {
    v1 = sub_100030B74(&qword_1009EAC50);
    sub_100030B34(&qword_1009EADA8, &qword_1009EAC48, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EADA0);
  }
  return result;
}

unint64_t sub_1005515B4()
{
  unint64_t result;

  result = qword_1009EADB0;
  if (!qword_1009EADB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for _FlipForRTLEffect, &type metadata for _FlipForRTLEffect);
    atomic_store(result, (unint64_t *)&qword_1009EADB0);
  }
  return result;
}

uint64_t ServiceFactory.createService(withServiceCenter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;

  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, a3, a2, &protocol requirements base descriptor for ServiceFactory, &associated type descriptor for ServiceFactory.ServiceType);
  a4[3] = AssociatedTypeWitness;
  a4[4] = swift_getAssociatedConformanceWitness(a3, a2, AssociatedTypeWitness, &protocol requirements base descriptor for ServiceFactory, &associated conformance descriptor for ServiceFactory.ServiceFactory.ServiceType: Service);
  sub_1000257F8(a4);
  return v8(a1, a2, a3);
}

uint64_t ServiceFactory.setupService(_:withLibraryManager:appDelegate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  unint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  Swift::String v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t DynamicType;
  Swift::String v31;
  void *object;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD v37[3];
  uint64_t v38;

  v34 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, a5, a4, &protocol requirements base descriptor for ServiceFactory, &associated type descriptor for ServiceFactory.ServiceType);
  v10 = type metadata accessor for Optional(0, AssociatedTypeWitness);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - v12;
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v33 - v16;
  sub_10002E418(a1, (uint64_t)v37);
  v18 = sub_10004CFD4(&qword_1009E8758);
  v19 = swift_dynamicCast(v13, v37, v18, AssociatedTypeWitness, 6);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v19)
  {
    v20(v13, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v13, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 40))(v17, a2, v34, a4, a5);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, AssociatedTypeWitness);
  }
  else
  {
    v20(v13, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_10002E418(a1, (uint64_t)v37);
    v35 = 0;
    v36 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v22 = v36;
    ObjectType = swift_getObjectType();
    v24 = _typeName(_:qualified:)(ObjectType, 0);
    v26 = v25;
    swift_bridgeObjectRelease(v22);
    v35 = v24;
    v36 = v26;
    v27._object = (void *)0x80000001007D2550;
    v27._countAndFlagsBits = 0xD00000000000001ELL;
    String.append(_:)(v27);
    v28 = v38;
    v29 = sub_10003F198(v37, v38);
    DynamicType = swift_getDynamicType(v29, v28, 1);
    v31._countAndFlagsBits = _typeName(_:qualified:)(DynamicType, 0);
    object = v31._object;
    String.append(_:)(v31);
    swift_bridgeObjectRelease(object);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v35, v36, "Books/ServiceCenter.swift", 25, 2, 63, 0);
    __break(1u);
  }
  return result;
}

uint64_t ServiceCenter.registeredService<A>(withIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _BYTE v30[24];
  __int128 v31;
  __int128 v32[2];

  v9 = type metadata accessor for Optional(0, a3);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v26 - v11;
  v13 = (uint64_t *)(v4 + OBJC_IVAR___BKServiceCenter_services);
  swift_beginAccess(v13, v30, 32, 0);
  v14 = *v13;
  if (!*(_QWORD *)(v14 + 16))
  {
    v29 = 0;
    v27 = 0u;
    v28 = 0u;
    v26 = 0u;
LABEL_9:
    sub_100010960((uint64_t)&v26, &qword_1009E8750);
    swift_endAccess(v30);
    v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56);
LABEL_11:
    v23 = a4;
    v24 = 1;
    return v22(v23, v24, 1, a3);
  }
  swift_bridgeObjectRetain(a2);
  v15 = sub_10004CE80(a1, a2);
  if ((v16 & 1) != 0)
  {
    sub_10000B5E4(*(_QWORD *)(v14 + 56) + 56 * v15, (uint64_t)&v26, &qword_1009D7B58);
  }
  else
  {
    v29 = 0;
    v27 = 0u;
    v28 = 0u;
    v26 = 0u;
  }
  swift_bridgeObjectRelease(a2);
  v17 = v26;
  if (!(_QWORD)v26)
    goto LABEL_9;
  v18 = *((_QWORD *)&v26 + 1);
  v31 = v26;
  sub_100022840(&v27, (uint64_t)v32);
  swift_endAccess(v30);
  *(_QWORD *)&v26 = v17;
  *((_QWORD *)&v26 + 1) = v18;
  sub_100022840(v32, (uint64_t)&v27);
  swift_unknownObjectRelease(v17);
  v19 = sub_10004CFD4(&qword_1009E8758);
  v20 = swift_dynamicCast(v12, &v27, v19, a3, 6);
  v21 = *(_QWORD *)(a3 - 8);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  if ((v20 & 1) == 0)
  {
    v22((uint64_t)v12, 1, 1, a3);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_11;
  }
  v22((uint64_t)v12, 0, 1, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(a4, v12, a3);
  v23 = a4;
  v24 = 0;
  return v22(v23, v24, 1, a3);
}

uint64_t ServiceCenter.setupState.getter()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(v0 + OBJC_IVAR___BKServiceCenter__setupState));
}

id sub_100551B2C()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_super v6;
  char v7;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v0[OBJC_IVAR___BKServiceCenter____lazy_storage___serviceQueue] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKServiceCenter____lazy_storage___group] = 0;
  *(_QWORD *)&v0[OBJC_IVAR___BKServiceCenter_services] = _swiftEmptyDictionarySingleton;
  v2 = OBJC_IVAR___BKServiceCenter__setupState;
  v7 = 0;
  v3 = sub_10004CFD4(&qword_1009EC8D0);
  swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v4 = v0;
  *(_QWORD *)&v0[v2] = MutableObservableContainer.init(value:)(&v7);

  v6.receiver = v4;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, "init");
}

id ServiceCenter.__allocating_init(configuration:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_100552BFC(a1, v2, ObjectType, a2);
}

id ServiceCenter.init(configuration:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_100552C40(a1, v2, ObjectType, a2);
}

double ServiceCenter.deleteCloudData(completion:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v5 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject(&unk_10090F678, 56, 7);
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = a1;
  v9[6] = a2;
  v10 = v2;
  sub_10002ACF0(a1, a2);
  v11 = sub_10030C02C((uint64_t)v7, (uint64_t)&unk_1009EADD0, (uint64_t)v9);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_100551D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[5] = a5;
  v6[6] = a6;
  v6[4] = a4;
  return swift_task_switch(sub_100551D7C, 0, 0);
}

uint64_t sub_100551D7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[4];
  v2 = sub_10004CFD4(&qword_1009DA268);
  v3 = swift_task_alloc(32);
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  v4 = (_QWORD *)swift_task_alloc(async function pointer to withTaskGroup<A, B>(of:returning:isolation:body:)[1]);
  v0[8] = v4;
  *v4 = v0;
  v4[1] = sub_100551E24;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 2, v2, v2, 0, 0, &unk_1009EAE28, v3, v2);
}

uint64_t sub_100551E24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 64));
  swift_task_dealloc(v1);
  return swift_task_switch(sub_100551E80, 0, 0);
}

uint64_t sub_100551E80()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 40);
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v2 = *(_QWORD *)(v0 + 16);
    if (v1)
    {
      swift_errorRetain(*(_QWORD *)(v0 + 16));
      v1(0, v2);
      sub_100316C94(v2, 1);
    }
    sub_100316C94(v2, 1);
  }
  else if (v1)
  {
    v1(1, 0);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100551F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3[42] = a2;
  v3[43] = a3;
  v3[41] = a1;
  v4 = sub_10004CFD4(&qword_1009DA280);
  v3[44] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[45] = v5;
  v3[46] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (*(_QWORD *)(*(_QWORD *)(sub_10004CFD4(&qword_1009D3150) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[47] = swift_task_alloc(v6);
  v3[48] = swift_task_alloc(v6);
  return swift_task_switch(sub_100551FAC, 0, 0);
}

uint64_t sub_100551FAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t i;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;

  v1 = *(_QWORD *)(v0 + 344) + OBJC_IVAR___BKServiceCenter_services;
  swift_beginAccess(v1, v0 + 264, 0, 0);
  v2 = *(_QWORD *)v1;
  v47 = *(_QWORD *)v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(*(_QWORD *)v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(*(_QWORD *)v1 + 64);
  v48 = (unint64_t)(63 - v4) >> 6;
  v49 = (_QWORD *)(v0 + 48);
  v50 = v2;
  result = swift_bridgeObjectRetain_n(v2, 2);
  for (i = 0; ; i = v52)
  {
    if (v5)
    {
      v51 = (v5 - 1) & v5;
      v52 = i;
      v10 = __clz(__rbit64(v5)) | (i << 6);
      goto LABEL_25;
    }
    v11 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v48)
      goto LABEL_32;
    v12 = *(_QWORD *)(v47 + 8 * v11);
    v13 = i + 1;
    if (!v12)
    {
      v13 = i + 2;
      if (i + 2 >= v48)
        goto LABEL_32;
      v12 = *(_QWORD *)(v47 + 8 * v13);
      if (!v12)
      {
        v13 = i + 3;
        if (i + 3 >= v48)
          goto LABEL_32;
        v12 = *(_QWORD *)(v47 + 8 * v13);
        if (!v12)
        {
          v13 = i + 4;
          if (i + 4 >= v48)
            goto LABEL_32;
          v12 = *(_QWORD *)(v47 + 8 * v13);
          if (!v12)
          {
            v13 = i + 5;
            if (i + 5 >= v48)
              goto LABEL_32;
            v12 = *(_QWORD *)(v47 + 8 * v13);
            if (!v12)
              break;
          }
        }
      }
    }
LABEL_24:
    v51 = (v12 - 1) & v12;
    v52 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_25:
    v15 = *(_QWORD *)(v0 + 376);
    v16 = *(_QWORD *)(v0 + 384);
    v17 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v10);
    v18 = *v17;
    v19 = v17[1];
    sub_10000B5E4(*(_QWORD *)(v50 + 56) + 56 * v10, v0 + 104, &qword_1009D7B58);
    *(_QWORD *)(v0 + 88) = v18;
    *(_QWORD *)(v0 + 96) = v19;
    *(_QWORD *)(v0 + 224) = *(_QWORD *)(v0 + 152);
    v20 = *(_OWORD *)(v0 + 136);
    *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 120);
    *(_OWORD *)(v0 + 208) = v20;
    v21 = *(_OWORD *)(v0 + 104);
    *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 88);
    *(_OWORD *)(v0 + 176) = v21;
    v22 = *(_QWORD *)(v0 + 168);
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 24) = v22;
    v24 = *(_QWORD *)(v0 + 176);
    v23 = *(_QWORD *)(v0 + 184);
    *(_QWORD *)(v0 + 32) = v24;
    *(_QWORD *)(v0 + 40) = v23;
    sub_10002E418(v0 + 192, (uint64_t)v49);
    swift_bridgeObjectRetain(v19);
    swift_unknownObjectRetain(v24);
    _s5Books15CurrentPageViewVwxx_0(v49);
    v25 = type metadata accessor for TaskPriority(0);
    v26 = *(_QWORD *)(v25 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v16, 1, 1, v25);
    v27 = (_QWORD *)swift_allocObject(&unk_10090F7A8, 48, 7);
    v27[2] = 0;
    v28 = v27 + 2;
    v27[3] = 0;
    v27[4] = v24;
    v27[5] = v23;
    sub_10000B5E4(v16, v15, &qword_1009D3150);
    v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v15, 1, v25);
    v30 = *(_QWORD *)(v0 + 376);
    if ((_DWORD)v29 == 1)
    {
      sub_100010960(*(_QWORD *)(v0 + 376), &qword_1009D3150);
      v31 = 0;
      v32 = *v28;
      if (*v28)
        goto LABEL_27;
    }
    else
    {
      v38 = TaskPriority.rawValue.getter(v29);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v30, v25);
      v31 = v38;
      v32 = *v28;
      if (*v28)
      {
LABEL_27:
        v33 = v27[3];
        ObjectType = swift_getObjectType();
        swift_unknownObjectRetain(v32);
        v35 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v33);
        v37 = v36;
        swift_unknownObjectRelease(v32);
        goto LABEL_30;
      }
    }
    v35 = 0;
    v37 = 0;
LABEL_30:
    v39 = **(_QWORD **)(v0 + 336);
    v40 = swift_allocObject(&unk_10090F7D0, 32, 7);
    *(_QWORD *)(v40 + 16) = &unk_1009EAE38;
    *(_QWORD *)(v40 + 24) = v27;
    v41 = sub_10004CFD4(&qword_1009DA268);
    v42 = v37 | v35;
    if (v37 | v35)
    {
      v42 = v0 + 232;
      *(_QWORD *)(v0 + 232) = 0;
      *(_QWORD *)(v0 + 240) = 0;
      *(_QWORD *)(v0 + 248) = v35;
      *(_QWORD *)(v0 + 256) = v37;
    }
    v8 = *(_QWORD *)(v0 + 384);
    *(_QWORD *)(v0 + 288) = 1;
    *(_QWORD *)(v0 + 296) = v42;
    *(_QWORD *)(v0 + 304) = v39;
    v9 = swift_task_create(v31 | 0x3100, v0 + 288, v41, &unk_1009DA298, v40);
    swift_release(v9);
    sub_100010960(v8, &qword_1009D3150);
    result = sub_100010960(v0 + 160, &qword_1009EAE48);
    v5 = v51;
  }
  v14 = i + 6;
  if (i + 6 >= v48)
  {
LABEL_32:
    v43 = *(uint64_t **)(v0 + 336);
    swift_release(v50);
    swift_bridgeObjectRelease(v50);
    v44 = *v43;
    v45 = sub_10004CFD4(&qword_1009DA268);
    TaskGroup.makeAsyncIterator()(v44, v45);
    v46 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
    *(_QWORD *)(v0 + 392) = v46;
    *v46 = v0;
    v46[1] = sub_100552458;
    return TaskGroup.Iterator.next(isolation:)(v0 + 312, 0, 0, *(_QWORD *)(v0 + 352));
  }
  v12 = *(_QWORD *)(v47 + 8 * v14);
  if (v12)
  {
    v13 = i + 6;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v48)
      goto LABEL_32;
    v12 = *(_QWORD *)(v47 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_24;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100552458()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  return swift_task_switch(sub_1005524AC, 0, 0);
}

uint64_t sub_1005524AC()
{
  uint64_t v0;
  int v1;
  _QWORD *v2;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + 320);
  if (v1 == 255)
  {
    v4 = 0;
  }
  else
  {
    if ((v1 & 1) == 0)
    {
      v2 = (_QWORD *)swift_task_alloc(async function pointer to TaskGroup.Iterator.next(isolation:)[1]);
      *(_QWORD *)(v0 + 392) = v2;
      *v2 = v0;
      v2[1] = sub_100552458;
      return TaskGroup.Iterator.next(isolation:)(v0 + 312, 0, 0, *(_QWORD *)(v0 + 352));
    }
    v4 = *(_QWORD *)(v0 + 312);
  }
  v5 = v1 != 255;
  v6 = *(_QWORD *)(v0 + 376);
  v7 = *(_QWORD *)(v0 + 384);
  v8 = *(_QWORD *)(v0 + 368);
  v9 = *(_QWORD *)(v0 + 328);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 360) + 8))(v8, *(_QWORD *)(v0 + 352));
  *(_QWORD *)v9 = v4;
  *(_BYTE *)(v9 + 8) = v5;
  swift_task_dealloc(v7);
  swift_task_dealloc(v6);
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10055259C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[20] = a1;
  v4[21] = a4;
  v5 = type metadata accessor for Logger(0);
  v4[22] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[23] = v6;
  v4[24] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1005525FC, 0, 0);
}

uint64_t sub_1005525FC()
{
  _QWORD *v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0 + 2;
  v2 = (void *)v0[21];
  v0[7] = v0 + 26;
  v0[2] = v0;
  v0[3] = sub_100552690;
  v3 = swift_continuation_init(v0 + 2, 1);
  v0[10] = _NSConcreteStackBlock;
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_100542EA8;
  v4[3] = &unk_10090F7E8;
  v4[4] = v3;
  objc_msgSend(v2, "deleteCloudDataWithCompletion:", v4);
  return swift_continuation_await(v1);
}

uint64_t sub_100552690()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 200) = v1;
  if (v1)
    v2 = sub_100552734;
  else
    v2 = sub_1005526F0;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005526F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 200) != 0;
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = v3;
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100552734(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(v1 + 200);
  v3 = swift_willThrow(a1);
  static Logger.engagement.getter(v3);
  swift_errorRetain(v2);
  v4 = swift_errorRetain(v2);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.error.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(_QWORD *)(v1 + 200);
    v21 = *(_QWORD *)(v1 + 184);
    v22 = *(_QWORD *)(v1 + 176);
    v23 = *(_QWORD *)(v1 + 192);
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v24 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v1 + 144, v1 + 120);
    v10 = Error.localizedDescription.getter(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136));
    v12 = v11;
    *(_QWORD *)(v1 + 152) = sub_100040F58(v10, v11, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 152, v1 + 160, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error deleting service data: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    v14 = *(_QWORD *)(v1 + 192);
    v13 = *(_QWORD *)(v1 + 200);
    v15 = *(_QWORD *)(v1 + 176);
    v16 = *(_QWORD *)(v1 + 184);
    swift_errorRelease(v13);
    swift_errorRelease(v13);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  v17 = *(_QWORD *)(v1 + 192);
  v18 = *(_QWORD *)(v1 + 200);
  v19 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)v19 = v18;
  *(_BYTE *)(v19 + 8) = v18 != 0;
  swift_task_dealloc(v17);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

id sub_100552AB8@<X0>(_QWORD *a1@<X8>)
{
  return sub_100552ACC((uint64_t (*)(_QWORD))type metadata accessor for PriceTrackingService, (uint64_t)&protocol witness table for PriceTrackingService, a1);
}

id sub_100552ACC@<X0>(uint64_t (*a1)(_QWORD)@<X3>, uint64_t a2@<X4>, _QWORD *a3@<X8>)
{
  objc_class *v5;
  id result;

  v5 = (objc_class *)a1(0);
  a3[3] = v5;
  a3[4] = a2;
  result = objc_msgSend(objc_allocWithZone(v5), "init");
  *a3 = result;
  return result;
}

void sub_100552B0C(uint64_t a1, uint64_t a2)
{
  sub_10055324C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for PriceTrackingService, (void (*)(void *, uint64_t))sub_10057EDD0);
}

uint64_t sub_100552B30(uint64_t a1, uint64_t a2)
{
  return sub_10002BAD0(a1, a2, &qword_1009E8720);
}

uint64_t sub_100552B3C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 32) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 40) = v3;
  *v3 = v2;
  v3[1] = sub_100552BA4;
  return v5(v2 + 16);
}

uint64_t sub_100552BA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v5;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 32);
  v5 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 40));
  v3 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)v2 = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(v2 + 8) = v3;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

id sub_100552BFC(uint64_t a1, Class a2, uint64_t a3, uint64_t a4)
{
  return sub_100552C40(a1, (char *)objc_allocWithZone(a2), a3, a4);
}

id sub_100552C40(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  objc_class *ObjectType;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  objc_super v14;
  char v15;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&a2[OBJC_IVAR___BKServiceCenter____lazy_storage___serviceQueue] = 0;
  *(_QWORD *)&a2[OBJC_IVAR___BKServiceCenter____lazy_storage___group] = 0;
  *(_QWORD *)&a2[OBJC_IVAR___BKServiceCenter_services] = _swiftEmptyDictionarySingleton;
  v9 = OBJC_IVAR___BKServiceCenter__setupState;
  v15 = 0;
  v10 = sub_10004CFD4(&qword_1009EC8D0);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v11 = a2;
  *(_QWORD *)&a2[v9] = MutableObservableContainer.init(value:)(&v15);

  v14.receiver = v11;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, "init");
  sub_100552D64(a1, (uint64_t)v12, a3, a4);

  swift_unknownObjectRelease(a1);
  return v12;
}

uint64_t sub_100552D40()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100552D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  _QWORD *v6;
  const char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(_QWORD *__return_ptr, uint64_t, uint64_t, _QWORD);
  uint64_t v13;
  _QWORD *v14;
  uint64_t DynamicType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  const char *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  _BYTE v60[24];
  __int128 v61;
  _OWORD v62[2];
  uint64_t v63;
  _QWORD v64[3];
  uint64_t v65;
  uint64_t v66;

  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  v54 = *(_QWORD *)(v5 + 16);
  if (!v54)
  {
    swift_bridgeObjectRelease(v5);
    return;
  }
  v6 = (_QWORD *)(a2 + OBJC_IVAR___BKServiceCenter_services);
  swift_bridgeObjectRetain(v5);
  v8 = 0;
  v51 = v7;
  v52 = a2;
  v53 = v6;
  while (1)
  {
    v55 = *(_OWORD *)&v7[16 * v8 + 32];
    v10 = *(_QWORD *)&v7[16 * v8 + 32];
    ObjectType = swift_getObjectType();
    v12 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, _QWORD))(*((_QWORD *)&v55 + 1) + 8);
    swift_unknownObjectRetain(v10);
    v12(v64, a2, ObjectType, *((_QWORD *)&v55 + 1));
    v13 = v65;
    v14 = sub_10003F198(v64, v65);
    DynamicType = swift_getDynamicType(v14, v13, 1);
    v16 = v66;
    v20 = static os_log_type_t.debug.getter(DynamicType, v17, v18, v19);
    if (qword_1009CDD70 != -1)
      swift_once(&qword_1009CDD70, sub_10006A768);
    v21 = (void *)qword_1009D5C98;
    v22 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v23 = swift_allocObject(v22, 72, 7);
    *(_OWORD *)(v23 + 16) = xmmword_10070CCA0;
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
    v25 = v21;
    v26 = v24(DynamicType, v16);
    v28 = v27;
    *(_QWORD *)(v23 + 56) = &type metadata for String;
    *(_QWORD *)(v23 + 64) = sub_10002BE50();
    *(_QWORD *)(v23 + 32) = v26;
    *(_QWORD *)(v23 + 40) = v28;
    os_log(_:dso:log:_:_:)(v20, &_mh_execute_header, v25, "Registering service: %s", v51);

    v29 = swift_bridgeObjectRelease(v23);
    v30 = ((uint64_t (*)(uint64_t, uint64_t, __n128))v24)(DynamicType, v16, v29);
    v32 = v31;
    v61 = v55;
    sub_10002E418((uint64_t)v64, (uint64_t)v62);
    swift_beginAccess(v53, v60, 33, 0);
    v56 = v61;
    v57 = v62[0];
    v58 = v62[1];
    v59 = v63;
    swift_unknownObjectRetain(v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v53);
    v34 = (_QWORD *)*v53;
    *v53 = 0x8000000000000000;
    v36 = sub_10004CE80(v30, v32);
    v37 = v34[2];
    v38 = (v35 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
      break;
    v40 = v35;
    if (v34[3] >= v39)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v35 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1002C14CC();
        if ((v40 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_10002BB00(v39, isUniquelyReferenced_nonNull_native);
      v41 = sub_10004CE80(v30, v32);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_22;
      v36 = v41;
      if ((v40 & 1) != 0)
      {
LABEL_3:
        sub_1004EBEB4((uint64_t)&v56, v34[7] + 56 * v36);
        goto LABEL_4;
      }
    }
    v34[(v36 >> 6) + 8] |= 1 << v36;
    v43 = (uint64_t *)(v34[6] + 16 * v36);
    *v43 = v30;
    v43[1] = v32;
    v44 = v34[7] + 56 * v36;
    v45 = v56;
    v46 = v57;
    v47 = v58;
    *(_QWORD *)(v44 + 48) = v59;
    *(_OWORD *)(v44 + 16) = v46;
    *(_OWORD *)(v44 + 32) = v47;
    *(_OWORD *)v44 = v45;
    v48 = v34[2];
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      goto LABEL_21;
    v34[2] = v50;
    swift_bridgeObjectRetain(v32);
LABEL_4:
    ++v8;
    v9 = *v53;
    *v53 = v34;
    swift_bridgeObjectRelease(v32);
    swift_bridgeObjectRelease(v9);
    swift_endAccess(v60);
    _s5Books15CurrentPageViewVwxx_0(v64);
    swift_unknownObjectRelease(v10);
    v7 = v51;
    a2 = v52;
    if (v54 == v8)
    {
      swift_bridgeObjectRelease_n(v51, 2);
      return;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_100553140()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100553164()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100553194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc(dword_1009EADCC);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1001FC2C4;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch(sub_100551D7C, 0, 0);
}

unint64_t sub_100553208()
{
  unint64_t result;

  result = qword_1009EADD8;
  if (!qword_1009EADD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ServiceSetupState, &type metadata for ServiceSetupState);
    atomic_store(result, (unint64_t *)&qword_1009EADD8);
  }
  return result;
}

void sub_10055324C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(void *, uint64_t))
{
  _QWORD *v4;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  Swift::String v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t DynamicType;
  Swift::String v21;
  void *object;
  void *v23;
  unint64_t v24;
  _QWORD v25[3];
  uint64_t v26;

  v7 = v4;
  sub_10002E418(a1, (uint64_t)v25);
  v10 = sub_10004CFD4(&qword_1009E8758);
  v11 = a3(0);
  if (swift_dynamicCast(&v23, v25, v10, v11, 6))
  {
    v12 = v23;
    a4(v23, a2);

  }
  else
  {
    sub_10002E418(a1, (uint64_t)v25);
    v23 = 0;
    v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    v13 = v24;
    v14 = _typeName(_:qualified:)(*v7, 0);
    v16 = v15;
    swift_bridgeObjectRelease(v13);
    v23 = (void *)v14;
    v24 = v16;
    v17._object = (void *)0x80000001007D2550;
    v17._countAndFlagsBits = 0xD00000000000001ELL;
    String.append(_:)(v17);
    v18 = v26;
    v19 = sub_10003F198(v25, v26);
    DynamicType = swift_getDynamicType(v19, v18, 1);
    v21._countAndFlagsBits = _typeName(_:qualified:)(DynamicType, 0);
    object = v21._object;
    String.append(_:)(v21);
    swift_bridgeObjectRelease(object);
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v23, v24, "Books/ServiceCenter.swift", 25, 2, 63, 0);
    __break(1u);
  }
}

uint64_t sub_1005533B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1005533D8()
{
  uint64_t v0;

  sub_1005AD6B8(*(void **)(v0 + 16));
}

uint64_t sub_1005533E4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 40))
    swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100553420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;

  v5 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc(dword_1009EADCC);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_10000AE34;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 32) = v5;
  return swift_task_switch(sub_100551D7C, 0, 0);
}

uint64_t sub_100553490()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005534B4(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1005AD660(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1005534BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1009EAE24);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1001FC2C4;
  return sub_100551F10(a1, a2, v6);
}

uint64_t sub_100553524()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100553550(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EAE34);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_10055259C(a1, v4, v5, v6);
}

uint64_t sub_1005535C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005535EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 32));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 48));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 88));

  return swift_deallocObject(v0, 144, 7);
}

void sub_100553640(_QWORD *a1@<X8>)
{
  uint64_t v2;

  sub_100553670();
  *a1 = v2;
}

void sub_100553670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v9[5];
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v0 = type metadata accessor for ContentInfoBuildOptions(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v13 = 0;
  v11 = 0u;
  v12 = 0u;
  v2 = sub_10004CFD4(&qword_1009EAE58);
  v3 = swift_allocObject(v2, ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ 2 * *(_QWORD *)(v1 + 72), *(unsigned __int8 *)(v1 + 80) | 7);
  *(_OWORD *)(v3 + 16) = xmmword_10070FC00;
  v4 = static ContentInfoBuildOptions.collectionMemberships.getter(COERCE_DOUBLE(2));
  static ContentInfoBuildOptions.supplementalContents.getter(v4);
  v9[0] = v3;
  v5 = sub_100553C90();
  v6 = sub_10004CFD4(&qword_1009D7038);
  v7 = sub_100553CD8();
  v8 = dispatch thunk of SetAlgebra.init<A>(_:)(v9, v6, v7, v0, v5);
  ContextActionDataModel.Asset.initType.getter(v9, v8);
  __asm { BR              X10 }
}

id sub_100553798()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v6 = *(_QWORD *)(v5 - 192);
  v7 = *(_QWORD *)(v5 - 184);
  v8 = v3[3];
  v9 = v3[4];
  sub_10003F198(v3, v8);
  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32))(v6, v7, v8, v9);
  swift_bridgeObjectRelease(v7);
  if (v10)
  {
    BKLibraryAsset.contentInfo(options:)(v1, (_QWORD *)(v5 - 232));

    sub_100553D24(v5 - 144);
    sub_100553D64(v5 - 232, v5 - 144);
  }
  sub_100553DAC(v5 - 144, v5 - 192);
  sub_10002E418((uint64_t)v3, v5 - 232);
  sub_10002E418(v4, v5 - 272);
  v11 = objc_allocWithZone((Class)type metadata accessor for ContextAssetInfo());
  v12 = sub_100290068(0, v5 - 192, 0, (_QWORD *)(v5 - 232), (_QWORD *)(v5 - 272));
  (*(void (**)(void *, uint64_t))(v2 + 8))(v1, v0);
  sub_100553D24(v5 - 144);
  return v12;
}

unint64_t sub_100553C90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EF2F0;
  if (!qword_1009EF2F0)
  {
    v1 = type metadata accessor for ContentInfoBuildOptions(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentInfoBuildOptions, v1);
    atomic_store(result, (unint64_t *)&qword_1009EF2F0);
  }
  return result;
}

unint64_t sub_100553CD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EF300;
  if (!qword_1009EF300)
  {
    v1 = sub_100030B74(&qword_1009D7038);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009EF300);
  }
  return result;
}

uint64_t sub_100553D24(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009E8A20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100553D64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E8A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100553DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009E8A20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_QWORD *sub_100553DF4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v4 = swift_allocObject(&unk_10090F978, 24, 7);
  *(_QWORD *)(v4 + 16) = a2;
  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = a2;
  swift_bridgeObjectRetain(a1);
  for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v15))
  {
    v18 = v4;
    v7 = 4;
    while (1)
    {
      v9 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, a1)
         : *(id *)(a1 + 8 * v7);
      v10 = v9;
      v4 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = sub_1005541BC(v9);

      if (v11)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
        v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v8 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v11);
        specialized Array._endMutation()(v8);
      }
      ++v7;
      if (v4 == v5)
      {
        swift_bridgeObjectRelease(a1);
        v4 = v18;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    v16 = a2;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
LABEL_20:

  swift_release(v4);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100553F9C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EAE60);
  sub_100048F64(v0, (uint64_t)qword_1009EAE60);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000018, 0x800000010072CC40);
}

uint64_t type metadata accessor for BookReaderMenuController()
{
  return objc_opt_self(_TtC5Books24BookReaderMenuController);
}

uint64_t storeEnumTagSinglePayload for BookReaderMenuController.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1005540F4 + 4 * byte_10072CC55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100554128 + 4 * byte_10072CC50[v4]))();
}

uint64_t sub_100554128(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100554130(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100554138);
  return result;
}

uint64_t sub_100554144(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10055414CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100554150(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100554158(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BookReaderMenuController.Mode()
{
  return &type metadata for BookReaderMenuController.Mode;
}

unint64_t sub_100554178()
{
  unint64_t result;

  result = qword_1009EAEB0;
  if (!qword_1009EAEB0)
  {
    result = swift_getWitnessTable(&unk_10072CCC0, &type metadata for BookReaderMenuController.Mode);
    atomic_store(result, (unint64_t *)&qword_1009EAEB0);
  }
  return result;
}

void *sub_1005541BC(void *a1)
{
  uint64_t v1;
  void *Strong;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v35;
  _OWORD v36[2];
  _OWORD v37[2];

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books24BookReaderMenuController_actionResponder);
  if (!Strong)
    goto LABEL_13;
  v4 = Strong;
  v5 = objc_msgSend(Strong, "targetForAction:withSender:", objc_msgSend(a1, "action"), a1);
  if (!v5)
  {

LABEL_13:
    if (qword_1009CE830 != -1)
      swift_once(&qword_1009CE830, sub_100553F9C);
    v22 = type metadata accessor for Logger(0);
    sub_100048F64(v22, (uint64_t)qword_1009EAE60);
    v23 = a1;
    v24 = Logger.logObject.getter(v23);
    v28 = static os_log_type_t.debug.getter(v24, v25, v26, v27);
    if (os_log_type_enabled(v24, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(12, -1);
      v30 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v37[0] = v30;
      *(_DWORD *)v29 = 136315138;
      v31 = Selector.description.getter(objc_msgSend(v23, "action"));
      v33 = v32;
      *(_QWORD *)&v36[0] = sub_100040F58(v31, v32, (uint64_t *)v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v36, (char *)v36 + 8, v29 + 4, v29 + 12);

      swift_bridgeObjectRelease(v33);
      _os_log_impl((void *)&_mh_execute_header, v24, v28, "Dropping action '%s' because there's no target", v29, 0xCu);
      swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v30, -1, -1);
      swift_slowDealloc(v29, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v6 = v5;
  _bridgeAnyObjectToAny(_:)(v5);
  swift_unknownObjectRelease(v6);
  sub_10004CFC4(v36, v37);
  sub_10004CD0C((uint64_t)v37, (uint64_t)v36);
  v7 = sub_100009E04(0, (unint64_t *)&unk_1009DC2F0, UIResponder_ptr);
  if ((swift_dynamicCast(&v35, v36, (char *)&type metadata for Any + 8, v7, 6) & 1) != 0)
  {
    v8 = v35;
    objc_msgSend(v35, "validateCommand:", a1);

  }
  if ((objc_msgSend(a1, "attributes") & 1) != 0
    || (objc_msgSend(a1, "attributes") & 4) != 0)
  {
    if (qword_1009CE830 != -1)
      swift_once(&qword_1009CE830, sub_100553F9C);
    v10 = type metadata accessor for Logger(0);
    sub_100048F64(v10, (uint64_t)qword_1009EAE60);
    v11 = a1;
    v12 = Logger.logObject.getter(v11);
    v16 = static os_log_type_t.debug.getter(v12, v13, v14, v15);
    if (os_log_type_enabled(v12, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(12, -1);
      v18 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v36[0] = v18;
      *(_DWORD *)v17 = 136315138;
      v19 = Selector.description.getter(objc_msgSend(v11, "action"));
      v21 = v20;
      v35 = (id)sub_100040F58(v19, v20, (uint64_t *)v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v17 + 4, v17 + 12);

      swift_bridgeObjectRelease(v21);
      _os_log_impl((void *)&_mh_execute_header, v12, v16, "Dropping action '%s' because target disabled or hid it", v17, 0xCu);
      swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v18, -1, -1);
      swift_slowDealloc(v17, -1, -1);
    }
    else
    {

    }
    _s5Books15CurrentPageViewVwxx_0(v37);
    return 0;
  }
  _s5Books15CurrentPageViewVwxx_0(v37);

  v9 = a1;
  return a1;
}

double sub_1005545DC(void *a1)
{
  UIMenu v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  UIMenu v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  UIMenu v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;

  swift_getObjectType();
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuLookup);
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuServices);
  objc_msgSend(a1, "removeMenuForIdentifier:", UIMenuStandardEdit);
  v2.super.super.isa = sub_100554814(1).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v2.super.super.isa);
  v4 = _swiftEmptyArrayStorage[2];
  v3 = _swiftEmptyArrayStorage[3];
  if (v4 >= v3 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v3 > 1, v4 + 1, 1);
  v5 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v4, v2.super.super.isa);
  specialized Array._endMutation()(v5);
  v6.super.super.isa = sub_1005550A8().super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v6.super.super.isa);
  v8 = _swiftEmptyArrayStorage[2];
  v7 = _swiftEmptyArrayStorage[3];
  if (v8 >= v7 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v7 > 1, v8 + 1, 1);
  v9 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v8, v6.super.super.isa);
  specialized Array._endMutation()(v9);
  v10.super.super.isa = sub_10055579C().super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v10.super.super.isa);
  v12 = _swiftEmptyArrayStorage[2];
  v11 = _swiftEmptyArrayStorage[3];
  if (v12 >= v11 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v11 > 1, v12 + 1, 1);
  v13 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v12, v10.super.super.isa);
  specialized Array._endMutation()(v13);
  v14 = sub_10004CFD4(&qword_1009EAEB8);
  v15 = sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
  v16 = sub_100030B34(&qword_1009EAEC0, &qword_1009EAEB8, (uint64_t)&protocol conformance descriptor for [A]);
  v17 = Sequence.compact<A>()(v14, v15, v16);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  sub_1001F5D3C(v17, (uint64_t)UIMenuRoot);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v17).n128_u64[0];
  return result;
}

UIMenu sub_100554814(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  id v24;
  void *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  NSString v51;
  id v52;
  id v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSString v61;
  id v62;
  id v63;
  void *v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  UIMenuElementSize preferredElementSize;
  uint64_t v72;
  uint64_t v73;
  Swift::String v74;
  int preferredElementSize_8;
  int preferredElementSize_8a;
  int preferredElementSize_8b;
  Swift::OpaquePointer v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  char *v84;
  uint64_t (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  void *v87;
  id v88;
  __int128 v89;
  __int128 v90;
  UIImage_optional v91;

  v2 = v1;
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v80 - v12;
  v14 = sub_10004CFD4(&qword_1009EAEC8);
  v15 = swift_allocObject(v14, 64, 7);
  v16 = 0;
  *(_OWORD *)(v15 + 16) = xmmword_1007147F0;
  v83 = v15;
  v84 = v6;
  if ((a1 & 1) != 0)
  {
    String.LocalizationValue.init(stringLiteral:)(0x6867696C68676948, 0xE900000000000074);
    v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    static Locale.current.getter(v17);
    v18 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Add_Highlight", 23, 2, v10, 0, 0, 0, v6, "'Add Highlight' menu item", 25, 2);
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
    v89 = 0u;
    v90 = 0u;
    swift_bridgeObjectRetain(v20);
    v21 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v18, v20, 0, 0, 0, 0, "books_addHighlight:", &v89, _swiftEmptyArrayStorage, 0, 0, 0, 0);
    v22 = sub_1005541BC(v21);
    swift_bridgeObjectRelease(v20);

    if (v22)
    {
      v88 = v22;
      v23 = sub_1003A155C(0, 4);
      v24 = v2;
      v25 = v2;
      v26 = sub_100553DF4((uint64_t)v23, v24);
      swift_bridgeObjectRelease(v23);
      v27 = sub_100556048((uint64_t)v26);
      v28 = v26;
      v2 = v25;
      swift_bridgeObjectRelease(v28);

      type metadata accessor for BECustomViewMenuElement(0);
      v29 = v88;
      v16 = static BECustomViewMenuElement.createHighlightMenuElement(menuElementRepresentation:actions:)(v88, v27);

      v30 = v27;
      v15 = v83;
      swift_bridgeObjectRelease(v30);
    }
    else
    {
      v16 = 0;
    }
    v6 = v84;
  }
  *(_QWORD *)(v15 + 32) = v16;
  String.LocalizationValue.init(stringLiteral:)(0x65746F4E20646441, 0xE800000000000000);
  v85 = *(uint64_t (**)(char *, char *, uint64_t))(v8 + 16);
  v31 = v85(v10, v13, v7);
  static Locale.current.getter(v31);
  LOWORD(preferredElementSize_8) = 2;
  v32 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Add_Note", 18, 2, v10, 0, 0, 0, v6, "'Add Note' menu item", 20, preferredElementSize_8);
  v33 = v8;
  v34 = v32;
  v36 = v35;
  v82 = *(void (**)(char *, uint64_t))(v33 + 8);
  v82(v13, v7);
  v37 = String._bridgeToObjectiveC()();
  v81 = v7;
  v87 = v2;
  v38 = v37;
  v88 = (id)objc_opt_self(UIImage);
  v39 = v15;
  v40 = objc_msgSend(v88, "systemImageNamed:", v38);

  v86 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v89 = 0u;
  v90 = 0u;
  swift_bridgeObjectRetain(v36);
  v41 = v40;
  v42 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v34, v36, 0, 0, v40, 0, "books_addNote:", &v89, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v43 = sub_1005541BC(v42);
  swift_bridgeObjectRelease(v36);

  *(_QWORD *)(v39 + 40) = v43;
  String.LocalizationValue.init(stringLiteral:)(0x4E206574656C6544, 0xEB0000000065746FLL);
  v44 = v81;
  v45 = v85(v10, v13, v81);
  v46 = v84;
  static Locale.current.getter(v45);
  LOWORD(preferredElementSize_8a) = 2;
  v47 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Remove_Note", 21, 2, v10, 0, 0, 0, v46, "'Delete Note' menu item", 23, preferredElementSize_8a);
  v49 = v48;
  v50 = v82;
  v82(v13, v44);
  v51 = String._bridgeToObjectiveC()();
  v52 = objc_msgSend(v88, "systemImageNamed:", v51);

  v89 = 0u;
  v90 = 0u;
  swift_bridgeObjectRetain(v49);
  v53 = v52;
  v54 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v47, v49, 0, 0, v52, 0, "books_removeNote:", &v89, _swiftEmptyArrayStorage, 0, 0, 2, 0);
  v55 = sub_1005541BC(v54);
  swift_bridgeObjectRelease(v49);

  v56 = v83;
  *(_QWORD *)(v83 + 48) = v55;
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007B6600);
  v57 = v85(v10, v13, v44);
  static Locale.current.getter(v57);
  LOWORD(preferredElementSize_8b) = 2;
  v58 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Remove_Highlight", 26, 2, v10, 0, 0, 0, v46, "'Remove Highlight' menu item", 28, preferredElementSize_8b);
  v60 = v59;
  v50(v13, v44);
  v61 = String._bridgeToObjectiveC()();
  v62 = objc_msgSend(v88, "systemImageNamed:", v61);

  v89 = 0u;
  v90 = 0u;
  swift_bridgeObjectRetain(v60);
  v63 = v62;
  v64 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v58, v60, 0, 0, v62, 0, "books_removeHighlight:", &v89, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v65 = sub_1005541BC(v64);
  swift_bridgeObjectRelease(v60);

  *(_QWORD *)(v56 + 56) = v65;
  *(_QWORD *)&v89 = v56;
  specialized Array._endMutation()(v66);
  v67 = v89;
  v68 = sub_10004CFD4(&qword_1009EAED0);
  v69 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
  v70 = sub_100030B34(&qword_1009EAED8, &qword_1009EAED0, (uint64_t)&protocol conformance descriptor for [A]);
  preferredElementSize = Sequence.compact<A>()(v68, v69, v70);
  swift_bridgeObjectRelease(v67);
  *(_QWORD *)&v89 = preferredElementSize;
  v72 = sub_10004CFD4(&qword_1009DDE00);
  v73 = sub_100030B34(&qword_1009DDE08, &qword_1009DDE00, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v72, v73) & 1) != 0)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
    v74._countAndFlagsBits = 0;
    v74._object = (void *)0xE000000000000000;
    v91.value.super.isa = 0;
    v91.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v74, (Swift::String_optional)0, v91, (UIMenuIdentifier_optional)17, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v79);
  }
  else
  {
    swift_bridgeObjectRelease(preferredElementSize);
    return 0;
  }
}

UIMenu sub_1005550A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSString v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  UIMenuElementSize preferredElementSize;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  int preferredElementSize_8;
  int preferredElementSize_8a;
  Swift::OpaquePointer v66;
  uint64_t v67;
  id v68;
  uint64_t (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  UIImage_optional v78;

  v1 = v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v74 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for String.LocalizationValue(0);
  v72 = *(_QWORD *)(v4 - 8);
  v73 = v4;
  __chkstk_darwin(v4);
  v71 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v67 - v7;
  v9 = sub_10004CFD4(&qword_1009EAEC8);
  v10 = swift_allocObject(v9, 64, 7);
  *(_OWORD *)(v10 + 16) = xmmword_1007147F0;
  v11 = v10;
  v12 = sub_1005565DC(0, 0xE000000000000000);
  v14 = v13;
  v15 = String._bridgeToObjectiveC()();
  v16 = (void *)objc_opt_self(UIImage);
  v68 = v16;
  v17 = objc_msgSend(v16, "systemImageNamed:", v15);

  v18 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  v76 = 0u;
  v77 = 0u;
  swift_bridgeObjectRetain(v14);
  v19 = v17;
  v75 = v18;
  v20 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v12, v14, 0, 0, v17, 0, "books_lookup:", &v76, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v70 = v1;
  v21 = sub_1005541BC(v20);
  swift_bridgeObjectRelease(v14);

  *(_QWORD *)(v11 + 32) = v21;
  v67 = v11;
  v22 = sub_100556300(0, 0xE000000000000000);
  v24 = v23;
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v16, "_systemImageNamed:", v25);

  v76 = 0u;
  v77 = 0u;
  swift_bridgeObjectRetain(v24);
  v27 = v26;
  v28 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v22, v24, 0, 0, v26, 0, "books_translate:", &v76, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v29 = sub_1005541BC(v28);
  swift_bridgeObjectRelease(v24);

  *(_QWORD *)(v11 + 40) = v29;
  String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
  v31 = v71;
  v30 = v72;
  v69 = *(uint64_t (**)(char *, char *, uint64_t))(v72 + 16);
  v32 = v73;
  v33 = v69(v71, v8, v73);
  v34 = v74;
  static Locale.current.getter(v33);
  LOWORD(preferredElementSize_8) = 2;
  v35 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Search", 16, 2, v31, 0, 0, 0, v34, "'Search' menu item", 18, preferredElementSize_8);
  v37 = v36;
  v72 = *(_QWORD *)(v30 + 8);
  ((void (*)(char *, uint64_t))v72)(v8, v32);
  v38 = String._bridgeToObjectiveC()();
  v39 = v68;
  v40 = objc_msgSend(v68, "systemImageNamed:", v38);

  v76 = 0u;
  v77 = 0u;
  swift_bridgeObjectRetain(v37);
  v41 = v40;
  v42 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v35, v37, 0, 0, v40, 0, "books_findSelection:", &v76, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v43 = sub_1005541BC(v42);
  swift_bridgeObjectRelease(v37);

  v44 = v67;
  *(_QWORD *)(v67 + 48) = v43;
  String.LocalizationValue.init(stringLiteral:)(2037411651, 0xE400000000000000);
  v45 = v69(v31, v8, v32);
  static Locale.current.getter(v45);
  LOWORD(preferredElementSize_8a) = 2;
  v46 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Copy", 14, 2, v31, 0, 0, 0, v34, "'Copy' menu item", 16, preferredElementSize_8a);
  v48 = v47;
  ((void (*)(char *, uint64_t))v72)(v8, v32);
  v49 = String._bridgeToObjectiveC()();
  v50 = objc_msgSend(v39, "systemImageNamed:", v49);

  v76 = 0u;
  v77 = 0u;
  swift_bridgeObjectRetain(v48);
  v51 = v50;
  v52 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v46, v48, 0, 0, v50, 0, "copy:", &v76, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v53 = sub_1005541BC(v52);
  swift_bridgeObjectRelease(v48);

  *(_QWORD *)(v44 + 56) = v53;
  *(_QWORD *)&v76 = v44;
  specialized Array._endMutation()(v54);
  v55 = v76;
  v56 = sub_10004CFD4(&qword_1009EAED0);
  v57 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
  v58 = sub_100030B34(&qword_1009EAED8, &qword_1009EAED0, (uint64_t)&protocol conformance descriptor for [A]);
  preferredElementSize = Sequence.compact<A>()(v56, v57, v58);
  swift_bridgeObjectRelease(v55);
  *(_QWORD *)&v76 = preferredElementSize;
  v60 = sub_10004CFD4(&qword_1009DDE00);
  v61 = sub_100030B34(&qword_1009DDE08, &qword_1009DDE00, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v60, v61) & 1) != 0)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
    v62._countAndFlagsBits = 0;
    v62._object = (void *)0xE000000000000000;
    v78.value.super.isa = 0;
    v78.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v62, (Swift::String_optional)0, v78, (UIMenuIdentifier_optional)17, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v66);
  }
  else
  {
    swift_bridgeObjectRelease(preferredElementSize);
    return 0;
  }
}

UIMenu sub_10055579C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  UIMenuElementSize preferredElementSize;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  Swift::OpaquePointer v31;
  _OWORD v32[3];
  UIImage_optional v33;

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = (char *)v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v32 - v8;
  v10 = sub_10004CFD4(&qword_1009EAEC8);
  v11 = swift_allocObject(v10, 40, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10070CCA0;
  String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
  v12 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  static Locale.current.getter(v12);
  v13 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Share", 15, 2, v6, 0, 0, 0, v2, "'Share…' menu item", 20, 0);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v16);

  sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  memset(v32, 0, 32);
  swift_bridgeObjectRetain(v15);
  v18 = v17;
  v19 = (void *)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(v13, v15, 0, 0, v17, 0, "books_share:", v32, _swiftEmptyArrayStorage, 0, 0, 0, 0);
  v20 = sub_1005541BC(v19);
  swift_bridgeObjectRelease(v15);

  *(_QWORD *)(v11 + 32) = v20;
  *(_QWORD *)&v32[0] = v11;
  specialized Array._endMutation()(v21);
  v22 = *(_QWORD *)&v32[0];
  v23 = sub_10004CFD4(&qword_1009EAED0);
  v24 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
  v25 = sub_100030B34(&qword_1009EAED8, &qword_1009EAED0, (uint64_t)&protocol conformance descriptor for [A]);
  preferredElementSize = Sequence.compact<A>()(v23, v24, v25);
  swift_bridgeObjectRelease(v22);
  *(_QWORD *)&v32[0] = preferredElementSize;
  v27 = sub_10004CFD4(&qword_1009DDE00);
  v28 = sub_100030B34(&qword_1009DDE08, &qword_1009DDE00, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v27, v28) & 1) != 0)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    v33.value.super.isa = 0;
    v33.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v29, (Swift::String_optional)0, v33, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v31);
  }
  else
  {
    swift_bridgeObjectRelease(preferredElementSize);
    return 0;
  }
}

uint64_t sub_100555B24(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  __n128 v8;
  UIMenuElementSize preferredElementSize;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  UIMenu v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  Swift::OpaquePointer v22;
  UIImage_optional v23;

  v3 = sub_10004CFD4(&qword_1009EAEC8);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_10070CCA0;
  v5 = sub_1003A155C(0, 4);
  v6 = a2;
  v7 = (uint64_t)sub_100553DF4((uint64_t)v5, v6);

  swift_bridgeObjectRelease(v5);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v19 = v7;
    else
      v19 = v7 & 0xFFFFFFFFFFFFFF8;
    v20 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
    v21 = swift_bridgeObjectRetain(v7);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v19, v20, v21);
    swift_bridgeObjectRelease(v7);
  }
  else
  {
    v8 = swift_bridgeObjectRetain(v7);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v8);
    sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
    preferredElementSize = v7;
  }
  swift_bridgeObjectRelease(v7);
  v10 = sub_10004CFD4(&qword_1009DDE00);
  v11 = sub_100030B34(&qword_1009DDE08, &qword_1009DDE00, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v10, v11) & 1) != 0)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D7700, UIMenu_ptr);
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v23.value.super.isa = 0;
    v23.is_nil = 0;
    v13.super.super.isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v12, (Swift::String_optional)0, v23, (UIMenuIdentifier_optional)17, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v22).super.super.isa;
  }
  else
  {
    swift_bridgeObjectRelease(preferredElementSize);
    v13.super.super.isa = 0;
  }
  *(UIMenu *)(v4 + 32) = v13;
  specialized Array._endMutation()(v13.super.super.isa);
  v14 = sub_10004CFD4(&qword_1009EAED0);
  v15 = sub_100009E04(0, (unint64_t *)&qword_1009D4CF0, UIMenuElement_ptr);
  v16 = sub_100030B34(&qword_1009EAED8, &qword_1009EAED0, (uint64_t)&protocol conformance descriptor for [A]);
  v17 = Sequence.compact<A>()(v14, v15, v16);
  swift_bridgeObjectRelease(v4);
  return v17;
}

void sub_100555D58(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  _BYTE v12[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books24BookReaderMenuController_actionResponder);
    if (v7)
    {
      v8 = (void *)v7;
      v9 = objc_msgSend(a3, "action");
      v11[3] = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
      v11[0] = a3;
      v10 = a3;
      sub_1005D3008((uint64_t)v9, (uint64_t)v11);

      sub_10004A7B8((uint64_t)v11);
    }

  }
}

uint64_t sub_100555E1C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a8;
  v16 = type metadata accessor for CharacterSet(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v20 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v20)
  {
    swift_bridgeObjectRetain(a5);
    return a4;
  }
  result = String.count.getter(a1, a2);
  if (result <= a3)
  {
    v43 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v44 = swift_allocObject(v43, 72, 7);
    *(_OWORD *)(v44 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v44 + 56) = &type metadata for String;
    *(_QWORD *)(v44 + 64) = sub_10002BE50();
    *(_QWORD *)(v44 + 32) = a1;
    *(_QWORD *)(v44 + 40) = a2;
    swift_bridgeObjectRetain(a2);
    v40 = a6;
    a9 = a7;
    v42 = v44;
    return String.init(format:_:)(v40, a9, v42);
  }
  if (!__OFSUB__(a3, 1))
  {
    swift_bridgeObjectRetain(a2);
    v22 = sub_10041D30C(a3 - 1, a1, a2);
    v24 = v23;
    v26 = v25;
    v28 = v27;
    v29 = swift_bridgeObjectRelease(a2);
    v30 = static String._fromSubstring(_:)(v22, v24, v26, v28, v29);
    v32 = v31;
    v33 = swift_bridgeObjectRelease(v28);
    v47 = v30;
    v48 = v32;
    static CharacterSet.whitespacesAndNewlines.getter(v33);
    v34 = sub_1001F2108();
    v35 = StringProtocol.trimmingCharacters(in:)(v19, &type metadata for String, v34);
    v37 = v36;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    swift_bridgeObjectRelease(v48);
    v38 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v39 = swift_allocObject(v38, 72, 7);
    *(_OWORD *)(v39 + 16) = xmmword_10070CCA0;
    *(_QWORD *)(v39 + 56) = &type metadata for String;
    *(_QWORD *)(v39 + 64) = sub_10002BE50();
    *(_QWORD *)(v39 + 32) = v35;
    *(_QWORD *)(v39 + 40) = v37;
    v40 = v46;
    v42 = v39;
    return String.init(format:_:)(v40, a9, v42);
  }
  __break(1u);
  return result;
}

_QWORD *sub_100556048(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  id v4;
  id v5;
  id v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];
  __int128 v10;
  _OWORD v11[2];
  _QWORD *v12;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v8 = a1;
    else
      v8 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v8);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = _swiftEmptyArrayStorage;
  if (v2)
  {
    v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
      else
        v4 = *(id *)(a1 + 32);
      v5 = objc_msgSend(v4, "propertyList");
      if (v5)
      {
        v6 = v5;
        _bridgeAnyObjectToAny(_:)(v5);
        swift_unknownObjectRelease(v6);
        sub_10004CFC4(&v10, v11);
        swift_dynamicCast(v9, v11, (char *)&type metadata for Any + 8, &type metadata for String, 7);
        v7 = (char *)&loc_10055624C + dword_1005562E4[AnnotationStyle.init(rawValue:)(v9[0], v9[1])];
        __asm { BR              X9 }
      }
    }
    __break(1u);
    JUMPOUT(0x1005562E0);
  }
  return result;
}

uint64_t sub_100556300(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v32 = a1;
  v33 = a2;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - v10;
  String.LocalizationValue.init(stringLiteral:)(0x74616C736E617254, 0xE900000000000065);
  v12 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
  v13 = v12(v8, v11, v5);
  static Locale.current.getter(v13);
  v28 = 2;
  v14 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Translate_Default", 27, 2, v8, 0, 0, 0, v4, "Default 'Translate' menu item", 29, v28);
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v11, v5);
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000012, 0x80000001007D26F0);
  v18 = v12(v8, v11, v5);
  static Locale.current.getter(v18);
  LOWORD(v29) = 2;
  v19 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Translate_Short", 25, 2, v8, 0, 0, 0, v4, "'Translate \"<text>\"' menu item", 30, v29);
  v21 = v20;
  v17(v11, v5);
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000015, 0x80000001007D2750);
  v22 = v12(v8, v11, v5);
  static Locale.current.getter(v22);
  LOWORD(v30) = 0;
  v23 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Translate_Long", 24, 2, v8, 0, 0, 0, v4, "'Translate \"<clipped text>…\"' menu item", 41, v30);
  v25 = v24;
  v17(v11, v5);
  v26 = sub_100555E1C(v32, v33, 24, v14, v16, v19, v21, v23, v25);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v25);
  return v26;
}

uint64_t sub_1005565DC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v32 = a1;
  v33 = a2;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - v10;
  String.LocalizationValue.init(stringLiteral:)(0x7055206B6F6F4CLL, 0xE700000000000000);
  v12 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
  v13 = v12(v8, v11, v5);
  static Locale.current.getter(v13);
  v28 = 2;
  v14 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Look_Up_Default", 25, 2, v8, 0, 0, 0, v4, "Default 'Look Up' menu item", 27, v28);
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v17(v11, v5);
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000010, 0x80000001007D2800);
  v18 = v12(v8, v11, v5);
  static Locale.current.getter(v18);
  LOWORD(v29) = 2;
  v19 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Look_Up_Short", 23, 2, v8, 0, 0, 0, v4, "'Look Up \"<text>\"' menu item", 28, v29);
  v21 = v20;
  v17(v11, v5);
  String.LocalizationValue.init(stringLiteral:)(0x1000000000000013, 0x80000001007D2860);
  v22 = v12(v8, v11, v5);
  static Locale.current.getter(v22);
  LOWORD(v30) = 0;
  v23 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Look_Up_Long", 22, 2, v8, 0, 0, 0, v4, "'Look Up \"<clipped text>…\"' menu item", 39, v30);
  v25 = v24;
  v17(v11, v5);
  v26 = sub_100555E1C(v32, v33, 24, v14, v16, v19, v21, v23, v25);
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v25);
  return v26;
}

uint64_t sub_1005568B4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005568D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_100556904(uint64_t a1)
{
  uint64_t v1;

  sub_100555D58(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10055690C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100556930@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.center.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_10004CFD4(&qword_1009EAEF0);
  return sub_10055697C(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_10055697C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  int *v47;
  void (*v48)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;

  v4 = sub_10004CFD4(&qword_1009EAEF8);
  __chkstk_darwin(v4);
  v61 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v64 = (uint64_t)&v50 - v7;
  v8 = sub_10004CFD4(&qword_1009EAF00);
  __chkstk_darwin(v8);
  v60 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - v11;
  v13 = type metadata accessor for Divider(0);
  v65 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v59 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v63 = (char *)&v50 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v50 - v18;
  __chkstk_darwin(v20);
  v22 = (char *)&v50 - v21;
  v23 = sub_10004CFD4(&qword_1009EAF08);
  __chkstk_darwin(v23);
  v62 = (uint64_t)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v50 - v26;
  v29 = static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(&v69, 0, 1, 0x4024000000000000, 0, v29, v30);
  v54 = v69;
  v31 = v70;
  v53 = v71;
  v32 = v72;
  v52 = v73;
  v51 = v74;
  v58 = v27;
  v33 = sub_100556DE4(a1, v27);
  v57 = v22;
  Divider.init()(v33);
  v56 = v12;
  v34 = sub_100557BB0(a1, v12);
  v55 = v19;
  Divider.init()(v34);
  v35 = v64;
  sub_100558420(a1, v64);
  v68 = 1;
  v67 = v31;
  v66 = v32;
  v36 = v62;
  sub_10000B5E4((uint64_t)v27, v62, &qword_1009EAF08);
  v37 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
  v38 = v63;
  v37(v63, v22, v13);
  v39 = (uint64_t)v12;
  v40 = v60;
  sub_10000B5E4(v39, v60, &qword_1009EAF00);
  v41 = v59;
  v37(v59, v19, v13);
  v42 = v61;
  sub_10000B5E4(v35, v61, &qword_1009EAEF8);
  v43 = v68;
  v44 = v67;
  v45 = v66;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = v43;
  *(_QWORD *)(a2 + 16) = v54;
  *(_BYTE *)(a2 + 24) = v44;
  *(_QWORD *)(a2 + 32) = v53;
  *(_BYTE *)(a2 + 40) = v45;
  v46 = v51;
  *(_QWORD *)(a2 + 48) = v52;
  *(_QWORD *)(a2 + 56) = v46;
  v47 = (int *)sub_10004CFD4(&qword_1009EAF10);
  sub_10000B5E4(v36, a2 + v47[12], &qword_1009EAF08);
  v37((char *)(a2 + v47[16]), v38, v13);
  sub_10000B5E4(v40, a2 + v47[20], &qword_1009EAF00);
  v37((char *)(a2 + v47[24]), v41, v13);
  sub_10000B5E4(v42, a2 + v47[28], &qword_1009EAEF8);
  sub_100010960(v64, &qword_1009EAEF8);
  v48 = *(void (**)(char *, uint64_t))(v65 + 8);
  v48(v55, v13);
  sub_100010960((uint64_t)v56, &qword_1009EAF00);
  v48(v57, v13);
  sub_100010960((uint64_t)v58, &qword_1009EAF08);
  sub_100010960(v42, &qword_1009EAEF8);
  v48(v41, v13);
  sub_100010960(v40, &qword_1009EAF00);
  v48(v63, v13);
  return sub_100010960(v62, &qword_1009EAF08);
}

uint64_t sub_100556DE4@<X0>(_OWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  Swift::String v33;
  __int128 v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _OWORD *v40;
  _QWORD *v41;
  __int128 v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  __int128 v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  int *v64;
  void (*v65)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  __int128 v81;
  __int128 v82;
  double v83;
  __int128 v84;
  __int128 v85;

  v75 = a2;
  v3 = sub_10004CFD4(&qword_1009EAF68);
  __chkstk_darwin(v3);
  v74 = (uint64_t)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v73 = (uint64_t)&v67 - v6;
  v7 = sub_10004CFD4(&qword_1009EAF70);
  __chkstk_darwin(v7);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_10004CFD4(&qword_1009EAF78);
  __chkstk_darwin(v69);
  v72 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v71 = (uint64_t)&v67 - v12;
  __chkstk_darwin(v13);
  v76 = (uint64_t)&v67 - v14;
  __chkstk_darwin(v15);
  v77 = (uint64_t)&v67 - v16;
  v17 = type metadata accessor for BorderedButtonStyle(0);
  v68 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4(&qword_1009D8460);
  v67 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4(&qword_1009EAF50);
  v24 = *(_QWORD *)(v23 - 8);
  v78 = v23;
  v79 = v24;
  __chkstk_darwin(v23);
  v70 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v67 - v27;
  __chkstk_darwin(v29);
  v80 = (char *)&v67 - v30;
  *(_QWORD *)&v82 = 0;
  *((_QWORD *)&v82 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(*((_QWORD *)&v82 + 1));
  *(_QWORD *)&v82 = 0x206F7420706154;
  *((_QWORD *)&v82 + 1) = 0xE700000000000000;
  v85 = a1[19];
  sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v84);
  if ((_BYTE)v84)
    v31 = 1162103112;
  else
    v31 = 1464813651;
  v32 = 0xE400000000000000;
  String.append(_:)(*(Swift::String *)&v31);
  swift_bridgeObjectRelease(0xE400000000000000);
  v33._countAndFlagsBits = 0x20726F7469646520;
  v33._object = (void *)0xEF756E656D206E69;
  String.append(_:)(v33);
  v34 = v82;
  v35 = swift_allocObject(&unk_10090FB40, 336, 7);
  memcpy((void *)(v35 + 16), a1, 0x140uLL);
  v82 = v34;
  sub_10055B1E0(a1);
  v36 = sub_1001F2108();
  v37 = Button<>.init<A>(_:action:)(&v82, sub_10055B3D4, v35, &type metadata for String, v36);
  BorderedButtonStyle.init()(v37);
  v38 = sub_100030B34((unint64_t *)&qword_1009F4060, &qword_1009D8460, (uint64_t)&protocol conformance descriptor for Button<A>);
  v39 = sub_10055B370();
  View.buttonStyle<A>(_:)(v19, v20, v17, v38, v39);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v19, v17);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v22, v20);
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v80, v28, v78);
  v40 = a1;
  v84 = a1[5];
  v85 = v84;
  sub_10004CFD4(&qword_1009D3CE0);
  v41 = State.projectedValue.getter(&v82);
  v42 = v82;
  v43 = v83;
  *(_QWORD *)v9 = static VerticalAlignment.center.getter(v41);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v44 = sub_10004CFD4(&qword_1009EAF80);
  sub_10055894C(v42, *((uint64_t *)&v42 + 1), 0xD000000000000011, 0x80000001007D2A50, (uint64_t)&v9[*(int *)(v44 + 44)], v43);
  swift_release(*((_QWORD *)&v42 + 1));
  swift_release(v42);
  v82 = v85;
  State.wrappedValue.getter(&v84);
  v45 = v84;
  v46 = v76;
  sub_10000B5E4((uint64_t)v9, v76, &qword_1009EAF70);
  v47 = v69;
  v48 = (_QWORD *)(v46 + *(int *)(v69 + 36));
  *v48 = v45;
  v48[1] = sub_1005575EC;
  v48[2] = 0;
  sub_100010960((uint64_t)v9, &qword_1009EAF70);
  v49 = v77;
  sub_10055B3DC(v46, v77);
  v84 = v40[6];
  v81 = v40[6];
  v50 = State.projectedValue.getter(&v82);
  v51 = v82;
  v52 = v83;
  *(_QWORD *)v9 = static VerticalAlignment.center.getter(v50);
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  sub_10055894C(v51, *((uint64_t *)&v51 + 1), 0xD000000000000019, 0x80000001007D2A70, (uint64_t)&v9[*(int *)(v44 + 44)], v52);
  swift_release(*((_QWORD *)&v51 + 1));
  swift_release(v51);
  v82 = v84;
  State.wrappedValue.getter(&v81);
  v53 = v81;
  v54 = v71;
  sub_10000B5E4((uint64_t)v9, v71, &qword_1009EAF70);
  v55 = (_QWORD *)(v54 + *(int *)(v47 + 36));
  *v55 = v53;
  v55[1] = sub_100557624;
  v55[2] = 0;
  sub_100010960((uint64_t)v9, &qword_1009EAF70);
  sub_10055B3DC(v54, v46);
  v56 = v73;
  sub_10055765C(v73);
  v57 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  v58 = v70;
  v59 = v78;
  v57(v70, v80, v78);
  sub_10000B5E4(v49, v54, &qword_1009EAF78);
  v60 = v46;
  v61 = v72;
  sub_10000B5E4(v60, v72, &qword_1009EAF78);
  v62 = v74;
  sub_10000B5E4(v56, v74, &qword_1009EAF68);
  v63 = v75;
  v57(v75, v58, v59);
  v64 = (int *)sub_10004CFD4(&qword_1009EAF88);
  sub_10000B5E4(v54, (uint64_t)&v63[v64[12]], &qword_1009EAF78);
  sub_10000B5E4(v61, (uint64_t)&v63[v64[16]], &qword_1009EAF78);
  sub_10000B5E4(v62, (uint64_t)&v63[v64[20]], &qword_1009EAF68);
  sub_100010960(v56, &qword_1009EAF68);
  sub_100010960(v76, &qword_1009EAF78);
  sub_100010960(v77, &qword_1009EAF78);
  v65 = *(void (**)(char *, uint64_t))(v79 + 8);
  v65(v80, v59);
  sub_100010960(v62, &qword_1009EAF68);
  sub_100010960(v61, &qword_1009EAF78);
  sub_100010960(v54, &qword_1009EAF78);
  return ((uint64_t (*)(char *, uint64_t))v65)(v58, v59);
}

uint64_t sub_100557544()
{
  uint64_t v0;
  uint64_t v2;

  v0 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v2);
  LOBYTE(v2) = (v2 & 1) == 0;
  State.wrappedValue.setter(&v2, v0);
  type metadata accessor for DebugOptions(0);
  State.wrappedValue.getter(&v2);
  return static DebugOptions.showPageCurlOptions.setter(v2);
}

uint64_t sub_1005575EC(double *a1)
{
  double v1;

  v1 = *a1;
  type metadata accessor for DebugOptions(0);
  return static DebugOptions.pageCurlTapAnimationDuration.setter(v1);
}

uint64_t sub_100557624(double *a1)
{
  double v1;

  v1 = *a1;
  type metadata accessor for DebugOptions(0);
  return static DebugOptions.pageCurlInteractiveAnimationDuration.setter(v1);
}

uint64_t sub_10055765C@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;

  v48 = a1;
  v2 = sub_10004CFD4(&qword_1009EAF90);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_10004CFD4(&qword_1009EAF98);
  __chkstk_darwin(v40);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_10004CFD4(&qword_1009EAFA0);
  __chkstk_darwin(v41);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10004CFD4(&qword_1009EAFA8);
  __chkstk_darwin(v42);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_10004CFD4(&qword_1009EAFB0);
  __chkstk_darwin(v43);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10004CFD4(&qword_1009EAFB8);
  __chkstk_darwin(v44);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_10004CFD4(&qword_1009EAFC0);
  __chkstk_darwin(v46);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10004CFD4(&qword_1009EAFC8);
  __chkstk_darwin(v47);
  v45 = (uint64_t)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v4 = static HorizontalAlignment.leading.getter(v18);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v19 = sub_10004CFD4(&qword_1009EAFD0);
  sub_100558DAC(v1, (uint64_t)&v4[*(int *)(v19 + 44)]);
  v49 = v1[7];
  sub_10004CFD4(&qword_1009D93F8);
  State.wrappedValue.getter(&v50);
  v20 = v50;
  sub_10000B5E4((uint64_t)v4, (uint64_t)v6, &qword_1009EAF90);
  v21 = &v6[*(int *)(v40 + 36)];
  *(_QWORD *)v21 = v20;
  *((_QWORD *)v21 + 1) = sub_100559628;
  *((_QWORD *)v21 + 2) = 0;
  sub_100010960((uint64_t)v4, &qword_1009EAF90);
  v49 = v1[8];
  State.wrappedValue.getter(&v50);
  v22 = v50;
  sub_10000B5E4((uint64_t)v6, (uint64_t)v8, &qword_1009EAF98);
  v23 = &v8[*(int *)(v41 + 36)];
  *(_QWORD *)v23 = v22;
  *((_QWORD *)v23 + 1) = sub_100559660;
  *((_QWORD *)v23 + 2) = 0;
  sub_100010960((uint64_t)v6, &qword_1009EAF98);
  v49 = v1[9];
  State.wrappedValue.getter(&v50);
  v24 = v50;
  sub_10000B5E4((uint64_t)v8, (uint64_t)v10, &qword_1009EAFA0);
  v25 = &v10[*(int *)(v42 + 36)];
  *(_QWORD *)v25 = v24;
  *((_QWORD *)v25 + 1) = sub_100559698;
  *((_QWORD *)v25 + 2) = 0;
  sub_100010960((uint64_t)v8, &qword_1009EAFA0);
  v49 = v1[10];
  State.wrappedValue.getter(&v50);
  v26 = v50;
  sub_10000B5E4((uint64_t)v10, (uint64_t)v12, &qword_1009EAFA8);
  v27 = &v12[*(int *)(v43 + 36)];
  *(_QWORD *)v27 = v26;
  *((_QWORD *)v27 + 1) = sub_1005596D0;
  *((_QWORD *)v27 + 2) = 0;
  sub_100010960((uint64_t)v10, &qword_1009EAFA8);
  v49 = v1[11];
  State.wrappedValue.getter(&v50);
  v28 = v50;
  sub_10000B5E4((uint64_t)v12, (uint64_t)v14, &qword_1009EAFB0);
  v29 = &v14[*(int *)(v44 + 36)];
  *(_QWORD *)v29 = v28;
  *((_QWORD *)v29 + 1) = sub_100559708;
  *((_QWORD *)v29 + 2) = 0;
  sub_100010960((uint64_t)v12, &qword_1009EAFB0);
  v49 = v1[12];
  State.wrappedValue.getter(&v50);
  v30 = v50;
  sub_10000B5E4((uint64_t)v14, (uint64_t)v16, &qword_1009EAFB8);
  v31 = &v16[*(int *)(v46 + 36)];
  *(_QWORD *)v31 = v30;
  *((_QWORD *)v31 + 1) = sub_100559740;
  *((_QWORD *)v31 + 2) = 0;
  sub_100010960((uint64_t)v14, &qword_1009EAFB8);
  v49 = v1[13];
  State.wrappedValue.getter(&v50);
  v32 = v50;
  v33 = v45;
  sub_10000B5E4((uint64_t)v16, v45, &qword_1009EAFC0);
  v34 = (_QWORD *)(v33 + *(int *)(v47 + 36));
  *v34 = v32;
  v34[1] = sub_100559778;
  v34[2] = 0;
  sub_100010960((uint64_t)v16, &qword_1009EAFC0);
  v49 = v1[14];
  State.wrappedValue.getter(&v50);
  v35 = v50;
  v36 = v48;
  sub_10000B5E4(v33, v48, &qword_1009EAFC8);
  v37 = (_QWORD *)(v36 + *(int *)(sub_10004CFD4(&qword_1009EAF68) + 36));
  *v37 = v35;
  v37[1] = sub_1005597B0;
  v37[2] = 0;
  return sub_100010960(v33, &qword_1009EAFC8);
}

uint64_t sub_100557BB0@<X0>(__int128 *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(void);
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __int128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  __int128 v82;
  char v83;
  __int128 v84;
  __int128 v85;

  v78 = a2;
  v3 = sub_10004CFD4(&qword_1009EAF48);
  __chkstk_darwin(v3);
  v79 = (uint64_t)&v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v77 = (uint64_t *)((char *)&v62 - v6);
  v71 = type metadata accessor for BorderedButtonStyle(0);
  v80 = *(char **)(v71 - 8);
  __chkstk_darwin(v71);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D8460);
  v70 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v74 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v62 - v12;
  v69 = sub_10004CFD4(&qword_1009EAF50);
  v81 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v76 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v75 = (char *)&v62 - v16;
  __chkstk_darwin(v17);
  v72 = (char *)&v62 - v18;
  __chkstk_darwin(v19);
  v73 = (char *)&v62 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v62 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v62 - v25;
  *(_QWORD *)&v85 = 0;
  *((_QWORD *)&v85 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease(*((_QWORD *)&v85 + 1));
  *(_QWORD *)&v85 = 0xD000000000000013;
  *((_QWORD *)&v85 + 1) = 0x80000001007D29F0;
  v84 = *a1;
  v68 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v82);
  if ((_BYTE)v82)
    v27 = 7562585;
  else
    v27 = 28494;
  if ((_BYTE)v82)
    v28 = 0xE300000000000000;
  else
    v28 = 0xE200000000000000;
  v29 = v28;
  String.append(_:)(*(Swift::String *)&v27);
  swift_bridgeObjectRelease(v28);
  v30 = v85;
  v31 = swift_allocObject(&unk_10090FAC8, 336, 7);
  memcpy((void *)(v31 + 16), a1, 0x140uLL);
  v85 = v30;
  sub_10055B1E0(a1);
  v67 = sub_1001F2108();
  v32 = Button<>.init<A>(_:action:)(&v85, sub_10055B368, v31, &type metadata for String, v67);
  BorderedButtonStyle.init()(v32);
  v33 = sub_100030B34((unint64_t *)&qword_1009F4060, &qword_1009D8460, (uint64_t)&protocol conformance descriptor for Button<A>);
  v66 = v33;
  v65 = sub_10055B370();
  v63 = v9;
  v34 = v71;
  View.buttonStyle<A>(_:)(v8, v9, v71, v33, v65);
  v64 = (void (*)(char *, uint64_t))*((_QWORD *)v80 + 1);
  v64(v8, v34);
  v70 = *(_QWORD *)(v70 + 8);
  ((void (*)(char *, uint64_t))v70)(v13, v9);
  v35 = *(void (**)(void))(v81 + 32);
  v80 = v26;
  v36 = v69;
  ((void (*)(char *, char *, uint64_t))v35)(v26, v23, v69);
  *(_QWORD *)&v85 = 0;
  *((_QWORD *)&v85 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease(*((_QWORD *)&v85 + 1));
  *(_QWORD *)&v84 = 0xD000000000000014;
  *((_QWORD *)&v84 + 1) = 0x80000001007D2A10;
  v85 = a1[1];
  v82 = a1[1];
  State.wrappedValue.getter(&v83);
  if (v83)
    v37 = 7562585;
  else
    v37 = 28494;
  if (v83)
    v38 = 0xE300000000000000;
  else
    v38 = 0xE200000000000000;
  v39 = v38;
  String.append(_:)(*(Swift::String *)&v37);
  swift_bridgeObjectRelease(v38);
  v40 = v84;
  v41 = swift_allocObject(&unk_10090FAF0, 336, 7);
  memcpy((void *)(v41 + 16), a1, 0x140uLL);
  v84 = v40;
  sub_10055B1E0(a1);
  v42 = v74;
  v43 = Button<>.init<A>(_:action:)(&v84, sub_10055B3BC, v41, &type metadata for String, v67);
  BorderedButtonStyle.init()(v43);
  v44 = v63;
  View.buttonStyle<A>(_:)(v8, v63, v34, v66, v65);
  v64(v8, v34);
  ((void (*)(char *, uint64_t))v70)(v42, v44);
  v45 = v73;
  v46 = v36;
  v35();
  v84 = v85;
  v47 = State.wrappedValue.getter(&v82);
  if (v82 == 1)
  {
    v48 = static HorizontalAlignment.center.getter(v47);
    v49 = (uint64_t)v77;
    *v77 = v48;
    *(_QWORD *)(v49 + 8) = 0;
    *(_BYTE *)(v49 + 16) = 1;
    v50 = sub_10004CFD4(&qword_1009EAF20);
    sub_1005597E8(a1, v49 + *(int *)(v50 + 44), 0.0, 1.0);
    v51 = sub_10004CFD4(&qword_1009EAF18);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v49, 0, 1, v51);
  }
  else
  {
    v52 = sub_10004CFD4(&qword_1009EAF18);
    v49 = (uint64_t)v77;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v77, 1, 1, v52);
  }
  v53 = v81;
  v54 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
  v55 = v75;
  v54(v75, v80, v36);
  v56 = v76;
  v54(v76, v45, v36);
  v57 = v79;
  sub_10000B5E4(v49, v79, &qword_1009EAF48);
  v58 = v78;
  v54(v78, v55, v46);
  v59 = sub_10004CFD4(&qword_1009EAF60);
  v54(&v58[*(int *)(v59 + 48)], v56, v46);
  sub_10000B5E4(v57, (uint64_t)&v58[*(int *)(v59 + 64)], &qword_1009EAF48);
  sub_100010960(v49, &qword_1009EAF48);
  v60 = *(void (**)(char *, uint64_t))(v53 + 8);
  v60(v45, v46);
  v60(v80, v46);
  sub_100010960(v57, &qword_1009EAF48);
  v60(v56, v46);
  return ((uint64_t (*)(char *, uint64_t))v60)(v55, v46);
}

double sub_100558298()
{
  uint64_t v0;
  double result;
  uint64_t v2;

  v0 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v2);
  LOBYTE(v2) = (v2 & 1) == 0;
  State.wrappedValue.setter(&v2, v0);
  type metadata accessor for DebugOptions(0);
  State.wrappedValue.getter(&v2);
  static DebugOptions.fullyFadeChrome.setter(v2);
  LOBYTE(v2) = 0;
  *(_QWORD *)&result = State.wrappedValue.setter(&v2, v0).n128_u64[0];
  return result;
}

double sub_10055835C()
{
  uint64_t v0;
  double result;
  uint64_t v2;

  v0 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v2);
  LOBYTE(v2) = (v2 & 1) == 0;
  State.wrappedValue.setter(&v2, v0);
  type metadata accessor for DebugOptions(0);
  State.wrappedValue.getter(&v2);
  static DebugOptions.mostlyFadeChrome.setter(v2);
  LOBYTE(v2) = 0;
  *(_QWORD *)&result = State.wrappedValue.setter(&v2, v0).n128_u64[0];
  return result;
}

uint64_t sub_100558420@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  void (*v34)(char *, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  int v39;
  char *v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _OWORD v50[2];
  _OWORD v51[8];
  __int128 v52;
  _BYTE v53[151];
  char v54;
  __int128 v55;
  _BYTE v56[152];
  _QWORD v57[2];
  char v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _OWORD v67[2];

  v41 = a2;
  v3 = type metadata accessor for Divider(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - v7;
  v9 = sub_10004CFD4(&qword_1009EAF18);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - v13;
  *(_QWORD *)v14 = static HorizontalAlignment.center.getter(v15);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v16 = sub_10004CFD4(&qword_1009EAF20);
  sub_100559D24(a1, (uint64_t)&v14[*(int *)(v16 + 44)], 44.0, 200.0);
  v38 = static VerticalAlignment.center.getter(v17);
  sub_1005587A0((uint64_t)a1, (uint64_t)v51);
  *(_OWORD *)&v53[103] = v51[6];
  *(_OWORD *)&v53[87] = v51[5];
  *(_OWORD *)&v53[39] = v51[2];
  *(_OWORD *)&v53[23] = v51[1];
  *(_OWORD *)&v53[119] = v51[7];
  *(_OWORD *)&v53[135] = v52;
  *(_OWORD *)&v53[55] = v51[3];
  v54 = 1;
  *(_OWORD *)&v53[71] = v51[4];
  *(_OWORD *)&v53[7] = v51[0];
  v39 = 1;
  v48 = *(_OWORD *)&v53[96];
  v49 = *(_OWORD *)&v53[112];
  v50[0] = *(_OWORD *)&v53[128];
  *(_QWORD *)((char *)v50 + 15) = *((_QWORD *)&v52 + 1);
  v44 = *(_OWORD *)&v53[32];
  v45 = *(_OWORD *)&v53[48];
  v46 = *(_OWORD *)&v53[64];
  v47 = *(_OWORD *)&v53[80];
  v42 = *(_OWORD *)v53;
  v43 = *(_OWORD *)&v53[16];
  v37 = v8;
  Divider.init()(v18);
  v19 = v11;
  sub_10000B5E4((uint64_t)v14, (uint64_t)v11, &qword_1009EAF18);
  v20 = v4;
  v21 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v22 = v40;
  v21(v40, v8, v3);
  v23 = (uint64_t)v19;
  v24 = (uint64_t)v19;
  v25 = v41;
  sub_10000B5E4(v23, v41, &qword_1009EAF18);
  v26 = sub_10004CFD4(&qword_1009EAF28);
  v27 = v25 + *(int *)(v26 + 48);
  v28 = v38;
  v55 = (unint64_t)v38;
  v56[0] = 1;
  *(_OWORD *)&v56[97] = v48;
  *(_OWORD *)&v56[113] = v49;
  *(_OWORD *)&v56[129] = v50[0];
  *(_QWORD *)&v56[144] = *(_QWORD *)((char *)v50 + 15);
  *(_OWORD *)&v56[33] = v44;
  *(_OWORD *)&v56[49] = v45;
  *(_OWORD *)&v56[65] = v46;
  *(_OWORD *)&v56[81] = v47;
  *(_OWORD *)&v56[17] = v43;
  *(_OWORD *)&v56[1] = v42;
  v29 = *(_OWORD *)&v56[128];
  *(_OWORD *)(v27 + 128) = *(_OWORD *)&v56[112];
  *(_OWORD *)(v27 + 144) = v29;
  *(_QWORD *)(v27 + 160) = *(_QWORD *)&v56[144];
  v30 = *(_OWORD *)&v56[64];
  *(_OWORD *)(v27 + 64) = *(_OWORD *)&v56[48];
  *(_OWORD *)(v27 + 80) = v30;
  v31 = *(_OWORD *)&v56[96];
  *(_OWORD *)(v27 + 96) = *(_OWORD *)&v56[80];
  *(_OWORD *)(v27 + 112) = v31;
  v32 = *(_OWORD *)v56;
  *(_OWORD *)v27 = v55;
  *(_OWORD *)(v27 + 16) = v32;
  v33 = *(_OWORD *)&v56[32];
  *(_OWORD *)(v27 + 32) = *(_OWORD *)&v56[16];
  *(_OWORD *)(v27 + 48) = v33;
  v21((char *)(v25 + *(int *)(v26 + 64)), v22, v3);
  sub_10055B130(&v55);
  v34 = *(void (**)(char *, uint64_t))(v20 + 8);
  v34(v37, v3);
  sub_100010960((uint64_t)v14, &qword_1009EAF18);
  v34(v22, v3);
  v65 = v48;
  v66 = v49;
  v67[0] = v50[0];
  v61 = v44;
  v62 = v45;
  v63 = v46;
  v64 = v47;
  v59 = v42;
  v57[0] = v28;
  v57[1] = 0;
  v58 = v39;
  *(_QWORD *)((char *)v67 + 15) = *(_QWORD *)((char *)v50 + 15);
  v60 = v43;
  sub_10055B17C(v57);
  return sub_100010960(v24, &qword_1009EAF18);
}

double sub_1005587A0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t KeyPath;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;
  char v45;

  v37 = *(_OWORD *)(a1 + 48);
  sub_10004CFD4(&qword_1009D3CE0);
  v4 = State.wrappedValue.getter(&v31);
  v5 = v31;
  v6 = static Alignment.center.getter(v4);
  _FrameLayout.init(width:height:alignment:)(&v31, v5, 0, 0, 1, v6, v7);
  v8 = v32;
  v28 = v33;
  v29 = v31;
  v24 = v34;
  v26 = v36;
  v27 = v35;
  v25 = _s5Books11ChromeStyleC25_secondaryButtonFillColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  KeyPath = swift_getKeyPath(&unk_10072CD80);
  v37 = *(_OWORD *)(a1 + 48);
  v10 = State.wrappedValue.getter(&v30);
  v11 = v30;
  v12 = static Alignment.center.getter(v10);
  _FrameLayout.init(width:height:alignment:)(&v37, v11, 0, 0, 1, v12, v13);
  v14 = v37;
  v15 = BYTE8(v37);
  v16 = v38;
  v17 = v39;
  v18 = v40;
  v19 = v41;
  v20 = _s5Books11ChromeStyleC25_secondaryButtonFillColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  v21 = swift_getKeyPath(&unk_10072CD80);
  LOBYTE(v30) = v8;
  v45 = v24;
  v44 = 1;
  v43 = v15;
  v42 = v17;
  *(_QWORD *)a2 = v29;
  *(_BYTE *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v28;
  *(_BYTE *)(a2 + 24) = v24;
  *(_QWORD *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v26;
  *(_QWORD *)(a2 + 48) = KeyPath;
  *(_QWORD *)(a2 + 56) = v25;
  *(_QWORD *)(a2 + 64) = 0;
  *(_BYTE *)(a2 + 72) = 1;
  *(_QWORD *)(a2 + 80) = v14;
  *(_BYTE *)(a2 + 88) = v15;
  *(_QWORD *)(a2 + 96) = v16;
  *(_BYTE *)(a2 + 104) = v17;
  *(_QWORD *)(a2 + 112) = v18;
  *(_QWORD *)(a2 + 120) = v19;
  *(_QWORD *)(a2 + 128) = v21;
  *(_QWORD *)(a2 + 136) = v20;
  swift_retain(KeyPath);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

uint64_t sub_10055894C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  Swift::String v20;
  uint64_t v21;
  Swift::String v22;
  void *object;
  __n128 v24;
  __int128 v25;
  void (*v26)(char *, char *, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, __n128);
  __n128 v31;
  __n128 v32;
  uint64_t v34;
  double v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  double v39;

  v12 = sub_10004CFD4(&qword_1009DC1A0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v34 - v17;
  v37 = a1;
  v38 = a2;
  v39 = a6;
  v36 = xmmword_100729690;
  v35 = 0.05;
  v19 = sub_1002EDFBC();
  swift_retain(a1);
  swift_retain(a2);
  Slider<>.init<A>(value:in:step:onEditingChanged:)(&v37, &v36, &v35, BKAppDelegate.enableMetricsInspectorOnDebugMode(), 0, &type metadata for CGFloat, v19, v19);
  *(_QWORD *)&v36 = a3;
  *((_QWORD *)&v36 + 1) = a4;
  swift_bridgeObjectRetain(a4);
  v20._countAndFlagsBits = 8250;
  v20._object = (void *)0xE200000000000000;
  String.append(_:)(v20);
  v37 = a1;
  v38 = a2;
  v39 = a6;
  v21 = sub_10004CFD4(&qword_1009EAD10);
  Binding.wrappedValue.getter(&v35, v21);
  v22._countAndFlagsBits = Double.description.getter(v35);
  object = v22._object;
  String.append(_:)(v22);
  v24 = swift_bridgeObjectRelease(object);
  v25 = v36;
  v26 = *(void (**)(char *, char *, uint64_t, __n128))(v13 + 16);
  v26(v15, v18, v12, v24);
  ((void (*)(uint64_t, char *, uint64_t))v26)(a5, v15, v12);
  v27 = sub_10004CFD4(&qword_1009EAFF8);
  v28 = a5 + *(int *)(v27 + 48);
  *(_OWORD *)v28 = v25;
  *(_BYTE *)(v28 + 16) = 0;
  *(_QWORD *)(v28 + 24) = _swiftEmptyArrayStorage;
  v29 = a5 + *(int *)(v27 + 64);
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  sub_1001F596C(v25, *((uint64_t *)&v25 + 1), 0);
  v30 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
  v31 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v30(v18, v12, v31);
  sub_1001F5B28(v25, *((uint64_t *)&v25 + 1), 0);
  v32 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return ((uint64_t (*)(char *, uint64_t, __n128))v30)(v15, v12, v32);
}

uint64_t sub_100558B78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, char *a5@<X8>, double a6@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  __int128 v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  void (*v28)(char *, uint64_t, __n128);
  __n128 v29;
  __n128 v30;
  uint64_t v32;
  double v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  double v37;

  v12 = sub_10004CFD4(&qword_1009DC1A0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v32 - v17;
  v35 = a1;
  v36 = a2;
  v37 = a6;
  v34 = xmmword_100719AB0;
  v33 = 0.05;
  v19 = sub_100224AA8();
  swift_retain(a1);
  swift_retain(a2);
  Slider<>.init<A>(value:in:step:onEditingChanged:)(&v35, &v34, &v33, BKAppDelegate.enableMetricsInspectorOnDebugMode(), 0, &type metadata for Double, v19, v19);
  *(_QWORD *)&v34 = 0;
  *((_QWORD *)&v34 + 1) = 0xE000000000000000;
  v20._countAndFlagsBits = a3;
  v20._object = a4;
  String.append(_:)(v20);
  v21._countAndFlagsBits = 8250;
  v21._object = (void *)0xE200000000000000;
  String.append(_:)(v21);
  v35 = a1;
  v36 = a2;
  v37 = a6;
  v22 = sub_10004CFD4(&qword_1009EAFF0);
  Binding.wrappedValue.getter(&v33, v22);
  Double.write<A>(to:)(&v34, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v33);
  v23 = v34;
  v24 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v24(v15, v18, v12);
  v24(a5, v15, v12);
  v25 = sub_10004CFD4(&qword_1009EAFF8);
  v26 = &a5[*(int *)(v25 + 48)];
  *(_OWORD *)v26 = v23;
  v26[16] = 0;
  *((_QWORD *)v26 + 3) = _swiftEmptyArrayStorage;
  v27 = &a5[*(int *)(v25 + 64)];
  *(_QWORD *)v27 = 0;
  v27[8] = 1;
  sub_1001F596C(v23, *((uint64_t *)&v23 + 1), 0);
  v28 = *(void (**)(char *, uint64_t, __n128))(v13 + 8);
  v29 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v28(v18, v12, v29);
  sub_1001F5B28(v23, *((uint64_t *)&v23 + 1), 0);
  v30 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  return ((uint64_t (*)(char *, uint64_t, __n128))v28)(v15, v12, v30);
}

uint64_t sub_100558DAC@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  uint64_t v69;
  uint64_t *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  double v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int *v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t *v106;
  char *v107;
  uint64_t *v108;
  char *v109;
  char *v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  double v117;

  v103 = a2;
  v3 = sub_10004CFD4(&qword_1009EAFD8);
  __chkstk_darwin(v3);
  v102 = (uint64_t)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v101 = (uint64_t)&v96 - v6;
  __chkstk_darwin(v7);
  v100 = (uint64_t)&v96 - v8;
  __chkstk_darwin(v9);
  v99 = (uint64_t)&v96 - v10;
  __chkstk_darwin(v11);
  v98 = (uint64_t)&v96 - v12;
  __chkstk_darwin(v13);
  v113 = (uint64_t)&v96 - v14;
  __chkstk_darwin(v15);
  v97 = (uint64_t)&v96 - v16;
  __chkstk_darwin(v17);
  v112 = (uint64_t)&v96 - v18;
  __chkstk_darwin(v19);
  v111 = (uint64_t *)((char *)&v96 - v20);
  __chkstk_darwin(v21);
  v108 = (uint64_t *)((char *)&v96 - v22);
  __chkstk_darwin(v23);
  v106 = (uint64_t *)((char *)&v96 - v24);
  __chkstk_darwin(v25);
  v27 = (char *)&v96 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v96 - v29;
  __chkstk_darwin(v31);
  v33 = (char *)&v96 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v96 - v35;
  __chkstk_darwin(v37);
  v39 = (char *)&v96 - v38;
  v114 = a1[7];
  sub_10004CFD4(&qword_1009D93F8);
  v40 = State.projectedValue.getter(&v115);
  v41 = v115;
  v42 = v116;
  v43 = v117;
  *(_QWORD *)v39 = static HorizontalAlignment.center.getter(v40);
  *((_QWORD *)v39 + 1) = 0;
  v39[16] = 1;
  v110 = v39;
  v44 = sub_10004CFD4(&qword_1009EAFE0);
  sub_100558B78(v41, v42, 0x207974696361704FLL, (void *)0xED0000746E6F7246, &v39[*(int *)(v44 + 44)], v43);
  swift_release(v42);
  swift_release(v41);
  v114 = a1[8];
  v45 = State.projectedValue.getter(&v115);
  v46 = v115;
  v47 = v116;
  v48 = v117;
  v49 = static HorizontalAlignment.center.getter(v45);
  v109 = v36;
  *(_QWORD *)v36 = v49;
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = 1;
  sub_100558B78(v46, v47, 0x207974696361704FLL, (void *)0xED0000306B636142, &v36[*(int *)(v44 + 44)], v48);
  swift_release(v47);
  swift_release(v46);
  v114 = a1[9];
  v50 = State.projectedValue.getter(&v115);
  v51 = v115;
  v52 = v116;
  v53 = v117;
  v54 = static HorizontalAlignment.center.getter(v50);
  v107 = v33;
  *(_QWORD *)v33 = v54;
  *((_QWORD *)v33 + 1) = 0;
  v33[16] = 1;
  sub_100558B78(v51, v52, 0x207974696361704FLL, (void *)0xED0000316B636142, &v33[*(int *)(v44 + 44)], v53);
  swift_release(v52);
  swift_release(v51);
  v114 = a1[10];
  v55 = State.projectedValue.getter(&v115);
  v56 = v115;
  v57 = v116;
  v58 = v117;
  v59 = static HorizontalAlignment.center.getter(v55);
  v105 = v30;
  *(_QWORD *)v30 = v59;
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = 1;
  sub_100558B78(v56, v57, 0x207974696361704FLL, (void *)0xEE00776F64616853, &v30[*(int *)(v44 + 44)], v58);
  swift_release(v57);
  swift_release(v56);
  v114 = a1[11];
  v60 = State.projectedValue.getter(&v115);
  v61 = v115;
  v62 = v116;
  v63 = v117;
  v64 = static HorizontalAlignment.center.getter(v60);
  v104 = v27;
  *(_QWORD *)v27 = v64;
  *((_QWORD *)v27 + 1) = 0;
  v27[16] = 1;
  sub_100558B78(v61, v62, 0x6874676E65727453, (void *)0xEE00746E6F724620, &v27[*(int *)(v44 + 44)], v63);
  swift_release(v62);
  swift_release(v61);
  v114 = a1[12];
  v65 = State.projectedValue.getter(&v115);
  v66 = v115;
  v67 = v116;
  v68 = v117;
  v69 = static HorizontalAlignment.center.getter(v65);
  v70 = v106;
  *v106 = v69;
  v70[1] = 0;
  *((_BYTE *)v70 + 16) = 1;
  sub_100558B78(v66, v67, 0x6874676E65727453, (void *)0xEE00306B63614220, (char *)v70 + *(int *)(v44 + 44), v68);
  swift_release(v67);
  swift_release(v66);
  v114 = a1[13];
  v71 = State.projectedValue.getter(&v115);
  v72 = v115;
  v73 = v116;
  v74 = v117;
  v75 = static HorizontalAlignment.center.getter(v71);
  v76 = v108;
  *v108 = v75;
  v76[1] = 0;
  *((_BYTE *)v76 + 16) = 1;
  sub_100558B78(v72, v73, 0x6874676E65727453, (void *)0xEE00316B63614220, (char *)v76 + *(int *)(v44 + 44), v74);
  swift_release(v73);
  swift_release(v72);
  v114 = a1[14];
  v77 = State.projectedValue.getter(&v115);
  v78 = v115;
  v79 = v116;
  v80 = v117;
  v81 = static HorizontalAlignment.center.getter(v77);
  v82 = v111;
  *v111 = v81;
  v82[1] = 0;
  *((_BYTE *)v82 + 16) = 1;
  sub_100558B78(v78, v79, 0x6874676E65727453, (void *)0xEF776F6461685320, (char *)v82 + *(int *)(v44 + 44), v80);
  swift_release(v79);
  swift_release(v78);
  v83 = v112;
  sub_10000B5E4((uint64_t)v110, v112, &qword_1009EAFD8);
  v84 = v97;
  sub_10000B5E4((uint64_t)v109, v97, &qword_1009EAFD8);
  v85 = v113;
  sub_10000B5E4((uint64_t)v107, v113, &qword_1009EAFD8);
  v86 = v98;
  sub_10000B5E4((uint64_t)v105, v98, &qword_1009EAFD8);
  v87 = v99;
  sub_10000B5E4((uint64_t)v104, v99, &qword_1009EAFD8);
  v88 = (uint64_t)v70;
  v89 = v100;
  sub_10000B5E4(v88, v100, &qword_1009EAFD8);
  v90 = (uint64_t)v76;
  v91 = v101;
  sub_10000B5E4(v90, v101, &qword_1009EAFD8);
  v92 = v102;
  sub_10000B5E4((uint64_t)v82, v102, &qword_1009EAFD8);
  v93 = v103;
  sub_10000B5E4(v83, v103, &qword_1009EAFD8);
  v94 = (int *)sub_10004CFD4(&qword_1009EAFE8);
  sub_10000B5E4(v84, v93 + v94[12], &qword_1009EAFD8);
  sub_10000B5E4(v85, v93 + v94[16], &qword_1009EAFD8);
  sub_10000B5E4(v86, v93 + v94[20], &qword_1009EAFD8);
  sub_10000B5E4(v87, v93 + v94[24], &qword_1009EAFD8);
  sub_10000B5E4(v89, v93 + v94[28], &qword_1009EAFD8);
  sub_10000B5E4(v91, v93 + v94[32], &qword_1009EAFD8);
  sub_10000B5E4(v92, v93 + v94[36], &qword_1009EAFD8);
  sub_100010960((uint64_t)v111, &qword_1009EAFD8);
  sub_100010960((uint64_t)v108, &qword_1009EAFD8);
  sub_100010960((uint64_t)v106, &qword_1009EAFD8);
  sub_100010960((uint64_t)v104, &qword_1009EAFD8);
  sub_100010960((uint64_t)v105, &qword_1009EAFD8);
  sub_100010960((uint64_t)v107, &qword_1009EAFD8);
  sub_100010960((uint64_t)v109, &qword_1009EAFD8);
  sub_100010960((uint64_t)v110, &qword_1009EAFD8);
  sub_100010960(v92, &qword_1009EAFD8);
  sub_100010960(v91, &qword_1009EAFD8);
  sub_100010960(v89, &qword_1009EAFD8);
  sub_100010960(v87, &qword_1009EAFD8);
  sub_100010960(v86, &qword_1009EAFD8);
  sub_100010960(v113, &qword_1009EAFD8);
  sub_100010960(v84, &qword_1009EAFD8);
  return sub_100010960(v112, &qword_1009EAFD8);
}

uint64_t sub_100559628(double *a1)
{
  double v1;

  v1 = *a1;
  type metadata accessor for DebugOptions(0);
  return static DebugOptions.curlInputFrontOpacity.setter(v1);
}

uint64_t sub_100559660(double *a1)
{
  double v1;

  v1 = *a1;
  type metadata accessor for DebugOptions(0);
  return static DebugOptions.curlInputBack0Opacity.setter(v1);
}

uint64_t sub_100559698(double *a1)
{
  double v1;

  v1 = *a1;
  type metadata accessor for DebugOptions(0);
  return static DebugOptions.curlInputBack1Opacity.setter(v1);
}

uint64_t sub_1005596D0(double *a1)
{
  double v1;

  v1 = *a1;
  type metadata accessor for DebugOptions(0);
  return static DebugOptions.curlInputShadowOpacity.setter(v1);
}

uint64_t sub_100559708(double *a1)
{
  double v1;

  v1 = *a1;
  type metadata accessor for DebugOptions(0);
  return static DebugOptions.curlInputFrontStrength.setter(v1);
}

uint64_t sub_100559740(double *a1)
{
  double v1;

  v1 = *a1;
  type metadata accessor for DebugOptions(0);
  return static DebugOptions.curlInputBack0Strength.setter(v1);
}

uint64_t sub_100559778(double *a1)
{
  double v1;

  v1 = *a1;
  type metadata accessor for DebugOptions(0);
  return static DebugOptions.curlInputBack1Strength.setter(v1);
}

uint64_t sub_1005597B0(double *a1)
{
  double v1;

  v1 = *a1;
  type metadata accessor for DebugOptions(0);
  return static DebugOptions.curlInputShadowStrength.setter(v1);
}

void sub_1005597E8(_OWORD *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[12];
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;

  v8 = sub_10004CFD4(&qword_1009EAF30);
  __chkstk_darwin(v8);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v23[-v12];
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v14);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  sub_10004CFD4(&qword_1009EAF38);
  sub_100559A30(a1, a3, a4);
  v28 = static VerticalAlignment.center.getter(v15);
  sub_100559C7C((uint64_t)&v29);
  v27 = v29;
  v26 = v30;
  v16 = v31;
  v17 = v32;
  v18 = v33;
  v19 = v34;
  v25 = v35;
  v24 = v36;
  sub_10000B5E4((uint64_t)v13, (uint64_t)v10, &qword_1009EAF30);
  *(_QWORD *)a2 = 0xD000000000000019;
  *(_QWORD *)(a2 + 8) = 0x80000001007D2A30;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  v20 = sub_10004CFD4(&qword_1009EAF40);
  sub_10000B5E4((uint64_t)v10, a2 + *(int *)(v20 + 48), &qword_1009EAF30);
  v21 = a2 + *(int *)(v20 + 64);
  *(_QWORD *)v21 = v28;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 1;
  *(_QWORD *)(v21 + 24) = v27;
  *(_BYTE *)(v21 + 32) = v26;
  *(_QWORD *)(v21 + 40) = v16;
  *(_QWORD *)(v21 + 48) = v17;
  *(_BYTE *)(v21 + 56) = v18;
  v22 = v25;
  *(_QWORD *)(v21 + 64) = v19;
  *(_QWORD *)(v21 + 72) = v22;
  *(_BYTE *)(v21 + 80) = v24;
  sub_1001F596C(0xD000000000000019, 0x80000001007D2A30, 0);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  sub_1001F596C(v16, v17, v18);
  swift_bridgeObjectRetain(v19);
  sub_100010960((uint64_t)v13, &qword_1009EAF30);
  sub_1001F5B28(v16, v17, v18);
  swift_bridgeObjectRelease(v19);
  sub_100010960((uint64_t)v10, &qword_1009EAF30);
  sub_1001F5B28(0xD000000000000019, 0x80000001007D2A30, 0);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
}

void sub_100559A30(_OWORD *a1, double a2, double a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  __int128 v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD v19[2];
  _QWORD v20[3];

  v11 = a1[2];
  sub_10004CFD4(&qword_1009D3CE0);
  State.projectedValue.getter(&v14);
  if (a2 > a3)
  {
    __break(1u);
  }
  else
  {
    v6 = v14;
    v7 = v15;
    v8 = v16;
    v9 = swift_allocObject(&unk_10090FB18, 336, 7);
    memcpy((void *)(v9 + 16), a1, 0x140uLL);
    v20[0] = v6;
    v20[1] = v7;
    v20[2] = v8;
    *(double *)v19 = a2;
    *(double *)&v19[1] = a3;
    v18 = 0x3FA999999999999ALL;
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_10055B1E0(a1);
    swift_retain(v6);
    swift_retain(v7);
    Double.write<A>(to:)(&v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a2);
    LOBYTE(v16) = 0;
    v17 = _swiftEmptyArrayStorage;
    *(_QWORD *)&v11 = 0;
    *((_QWORD *)&v11 + 1) = 0xE000000000000000;
    Double.write<A>(to:)(&v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, a3);
    v12 = 0;
    v13 = _swiftEmptyArrayStorage;
    v10 = sub_1002EDFBC();
    Slider.init<A>(value:in:step:onEditingChanged:minimumValueLabel:maximumValueLabel:label:)(v20, v19, &v18, sub_10055B3C8, v9, &v14, &v11, sub_100559BF8, 0, &type metadata for Text, &type metadata for Text, &type metadata for CGFloat, &protocol witness table for Text, &protocol witness table for Text, v10, v10);
    swift_release(v7);
    swift_release(v6);
  }
}

double sub_100559BF8@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0x6168706C41;
  *(_OWORD *)a1 = xmmword_10072CCF0;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_100559C18()
{
  _QWORD *v0;
  double v2;

  type metadata accessor for DebugOptions(0);
  sub_10004CFD4(&qword_1009D3CE0);
  v0 = State.wrappedValue.getter(&v2);
  return static DebugOptions.mostlyFadeChromeAlpha.setter(v0, v2);
}

double sub_100559C7C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;
  double v6;

  sub_10004CFD4(&qword_1009D3CE0);
  State.wrappedValue.getter(&v6);
  v2 = Double.description.getter(v6);
  v4 = v3;
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = _swiftEmptyArrayStorage;
  *(_QWORD *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 56) = 1;
  sub_1001F596C(v2, v3, 0);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  sub_1001F5B28(v2, v4, 0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(_swiftEmptyArrayStorage).n128_u64[0];
  return result;
}

void sub_100559D24(_OWORD *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[12];
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;

  v8 = sub_10004CFD4(&qword_1009EAF30);
  __chkstk_darwin(v8);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v23[-v12];
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v14);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 1;
  sub_10004CFD4(&qword_1009EAF38);
  sub_100559F6C(a1, a3, a4);
  v28 = static VerticalAlignment.center.getter(v15);
  sub_10055A21C((uint64_t)&v29);
  v27 = v29;
  v26 = v30;
  v16 = v31;
  v17 = v32;
  v18 = v33;
  v19 = v34;
  v25 = v35;
  v24 = v36;
  sub_10000B5E4((uint64_t)v13, (uint64_t)v10, &qword_1009EAF30);
  *(_QWORD *)a2 = 0xD000000000000010;
  *(_QWORD *)(a2 + 8) = 0x80000001007D29D0;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = _swiftEmptyArrayStorage;
  v20 = sub_10004CFD4(&qword_1009EAF40);
  sub_10000B5E4((uint64_t)v10, a2 + *(int *)(v20 + 48), &qword_1009EAF30);
  v21 = a2 + *(int *)(v20 + 64);
  *(_QWORD *)v21 = v28;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 1;
  *(_QWORD *)(v21 + 24) = v27;
  *(_BYTE *)(v21 + 32) = v26;
  *(_QWORD *)(v21 + 40) = v16;
  *(_QWORD *)(v21 + 48) = v17;
  *(_BYTE *)(v21 + 56) = v18;
  v22 = v25;
  *(_QWORD *)(v21 + 64) = v19;
  *(_QWORD *)(v21 + 72) = v22;
  *(_BYTE *)(v21 + 80) = v24;
  sub_1001F596C(0xD000000000000010, 0x80000001007D29D0, 0);
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  sub_1001F596C(v16, v17, v18);
  swift_bridgeObjectRetain(v19);
  sub_100010960((uint64_t)v13, &qword_1009EAF30);
  sub_1001F5B28(v16, v17, v18);
  swift_bridgeObjectRelease(v19);
  sub_100010960((uint64_t)v10, &qword_1009EAF30);
  sub_1001F5B28(0xD000000000000010, 0x80000001007D29D0, 0);
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
}

void sub_100559F6C(_OWORD *a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD v21[2];
  _QWORD v22[3];

  v13 = a1[3];
  sub_10004CFD4(&qword_1009D3CE0);
  State.projectedValue.getter(&v16);
  if (a2 > a3)
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = v16;
  v7 = v17;
  v8 = v18;
  v9 = swift_allocObject(&unk_10090FAA0, 336, 7);
  memcpy((void *)(v9 + 16), a1, 0x140uLL);
  v22[0] = v6;
  v22[1] = v7;
  v22[2] = v8;
  *(double *)v21 = a2;
  *(double *)&v21[1] = a3;
  v20 = 0x3FF0000000000000;
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a2 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v16 = (uint64_t)a2;
  sub_10055B1E0(a1);
  swift_retain(v6);
  swift_retain(v7);
  v16 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v17 = v10;
  LOBYTE(v18) = 0;
  v19 = _swiftEmptyArrayStorage;
  if ((~*(_QWORD *)&a3 & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a3 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (a3 < 9.22337204e18)
  {
    *(_QWORD *)&v13 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    *((_QWORD *)&v13 + 1) = v11;
    v14 = 0;
    v15 = _swiftEmptyArrayStorage;
    v12 = sub_1002EDFBC();
    Slider.init<A>(value:in:step:onEditingChanged:minimumValueLabel:maximumValueLabel:label:)(v22, v21, &v20, sub_10055B1D8, v9, &v16, &v13, sub_10055A198, 0, &type metadata for Text, &type metadata for Text, &type metadata for CGFloat, &protocol witness table for Text, &protocol witness table for Text, v12, v12);
    swift_release(v7);
    swift_release(v6);
    return;
  }
LABEL_15:
  __break(1u);
}

double sub_10055A198@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0x6874646957;
  *(_OWORD *)a1 = xmmword_10072CD00;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_10055A1B8()
{
  _QWORD *v0;
  double v2;

  type metadata accessor for DebugOptions(0);
  sub_10004CFD4(&qword_1009D3CE0);
  v0 = State.wrappedValue.getter(&v2);
  return static DebugOptions.pageTurnMarginWidth.setter(v0, v2);
}

void sub_10055A21C(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;

  sub_10004CFD4(&qword_1009D3CE0);
  State.wrappedValue.getter(&v5);
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v5 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v5 < 9.22337204e18)
  {
    v2 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v4 = v3;
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 8) = 1;
    *(_QWORD *)(a1 + 16) = v2;
    *(_QWORD *)(a1 + 24) = v3;
    *(_BYTE *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 40) = _swiftEmptyArrayStorage;
    *(_QWORD *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 56) = 1;
    sub_1001F596C(v2, v3, 0);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    sub_1001F5B28(v2, v4, 0);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_10055A320()
{
  const void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];
  _BYTE __dst[320];

  v1 = memcpy(__dst, v0, sizeof(__dst));
  v2 = static Axis.Set.vertical.getter(v1);
  v6[2] = __dst;
  v3 = sub_10004CFD4(&qword_1009EAEE0);
  v4 = sub_100030B34(&qword_1009EAEE8, &qword_1009EAEE0, (uint64_t)&protocol conformance descriptor for VStack<A>);
  return ScrollView.init(_:showsIndicators:content:)(v2, 1, sub_10055B128, v6, v3, v4);
}

double sub_10055A3C4@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  double v10;
  _QWORD *v11;
  double v12;
  _QWORD *v13;
  double v14;
  _QWORD *v15;
  double v16;
  _QWORD *v17;
  double v18;
  _QWORD *v19;
  double v20;
  _QWORD *v21;
  double v22;
  _QWORD *v23;
  double v24;
  _QWORD *v25;
  double v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  double v30;
  _QWORD *v31;
  uint64_t v32;
  double v33;
  _QWORD *v34;
  double v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  double result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  double v55;
  uint64_t v56;
  double v57;
  char v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  _BYTE v65[7];

  type metadata accessor for DebugOptions(0);
  LOBYTE(v62) = static DebugOptions.fullyFadeChrome.getter() & 1;
  v2 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Bool);
  v60 = LOBYTE(v63);
  v61 = v64;
  LOBYTE(v62) = static DebugOptions.mostlyFadeChrome.getter(v2) & 1;
  v3 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Bool);
  v58 = LOBYTE(v63);
  v59 = v64;
  v62 = static DebugOptions.mostlyFadeChromeAlpha.getter(v3);
  v4 = State.init(wrappedValue:)(&v63, &v62, &type metadata for CGFloat);
  v57 = v63;
  v56 = v64;
  v62 = static DebugOptions.pageTurnMarginWidth.getter(v4);
  v5 = State.init(wrappedValue:)(&v63, &v62, &type metadata for CGFloat);
  v55 = v63;
  v54 = v64;
  v62 = static DebugOptions.topTapToRevealChromeAreaHeight.getter(v5);
  v6 = State.init(wrappedValue:)(&v63, &v62, &type metadata for CGFloat);
  v53 = v63;
  v52 = v64;
  v62 = static DebugOptions.pageCurlTapAnimationDuration.getter(v6);
  v7 = State.init(wrappedValue:)(&v63, &v62, &type metadata for CGFloat);
  v51 = v63;
  v50 = v64;
  v62 = static DebugOptions.pageCurlInteractiveAnimationDuration.getter(v7);
  v8 = State.init(wrappedValue:)(&v63, &v62, &type metadata for CGFloat);
  v49 = v63;
  v48 = v64;
  v62 = static DebugOptions.curlInputFrontOpacity.getter(v8);
  v9 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Double);
  v10 = v63;
  v47 = v64;
  v62 = static DebugOptions.curlInputBack0Opacity.getter(v9);
  v11 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Double);
  v12 = v63;
  v46 = v64;
  v62 = static DebugOptions.curlInputBack1Opacity.getter(v11);
  v13 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Double);
  v14 = v63;
  v45 = v64;
  v62 = static DebugOptions.curlInputShadowOpacity.getter(v13);
  v15 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Double);
  v16 = v63;
  v44 = v64;
  v62 = static DebugOptions.curlInputFrontStrength.getter(v15);
  v17 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Double);
  v18 = v63;
  v43 = v64;
  v62 = static DebugOptions.curlInputBack0Strength.getter(v17);
  v19 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Double);
  v20 = v63;
  v42 = v64;
  v62 = static DebugOptions.curlInputBack1Strength.getter(v19);
  v21 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Double);
  v22 = v63;
  v41 = v64;
  v62 = static DebugOptions.curlInputShadowStrength.getter(v21);
  v23 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Double);
  v24 = v63;
  v40 = v64;
  v62 = COERCE_DOUBLE(static DebugOptions.curlInputFrontColor.getter(v23));
  v25 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Color);
  v26 = v63;
  v27 = v64;
  v62 = COERCE_DOUBLE(static DebugOptions.curlInputBackColor0.getter(v25));
  v28 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Color);
  v30 = v63;
  v29 = v64;
  v62 = COERCE_DOUBLE(static DebugOptions.curlInputBackColor1.getter(v28));
  v31 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Color);
  v33 = v63;
  v32 = v64;
  v62 = COERCE_DOUBLE(static DebugOptions.curlInputShadowColor.getter(v31));
  v34 = State.init(wrappedValue:)(&v63, &v62, &type metadata for Color);
  v35 = v63;
  v36 = v64;
  LOBYTE(v62) = static DebugOptions.showPageCurlOptions.getter(v34) & 1;
  State.init(wrappedValue:)(&v63, &v62, &type metadata for Bool);
  v37 = LOBYTE(v63);
  v38 = v64;
  *(_BYTE *)a1 = v60;
  *(_DWORD *)(a1 + 1) = LODWORD(v63);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)((char *)&v63 + 3);
  *(_QWORD *)(a1 + 8) = v61;
  *(_BYTE *)(a1 + 16) = v58;
  *(_DWORD *)(a1 + 17) = LODWORD(v62);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)((char *)&v62 + 3);
  *(_QWORD *)(a1 + 24) = v59;
  *(double *)(a1 + 32) = v57;
  *(_QWORD *)(a1 + 40) = v56;
  *(double *)(a1 + 48) = v55;
  *(_QWORD *)(a1 + 56) = v54;
  *(double *)(a1 + 64) = v53;
  *(_QWORD *)(a1 + 72) = v52;
  *(double *)(a1 + 80) = v51;
  *(_QWORD *)(a1 + 88) = v50;
  result = v49;
  *(double *)(a1 + 96) = v49;
  *(_QWORD *)(a1 + 104) = v48;
  *(double *)(a1 + 112) = v10;
  *(_QWORD *)(a1 + 120) = v47;
  *(double *)(a1 + 128) = v12;
  *(_QWORD *)(a1 + 136) = v46;
  *(double *)(a1 + 144) = v14;
  *(_QWORD *)(a1 + 152) = v45;
  *(double *)(a1 + 160) = v16;
  *(_QWORD *)(a1 + 168) = v44;
  *(double *)(a1 + 176) = v18;
  *(_QWORD *)(a1 + 184) = v43;
  *(double *)(a1 + 192) = v20;
  *(_QWORD *)(a1 + 200) = v42;
  *(double *)(a1 + 208) = v22;
  *(_QWORD *)(a1 + 216) = v41;
  *(double *)(a1 + 224) = v24;
  *(_QWORD *)(a1 + 232) = v40;
  *(double *)(a1 + 240) = v26;
  *(_QWORD *)(a1 + 248) = v27;
  *(double *)(a1 + 256) = v30;
  *(_QWORD *)(a1 + 264) = v29;
  *(double *)(a1 + 272) = v33;
  *(_QWORD *)(a1 + 280) = v32;
  *(double *)(a1 + 288) = v35;
  *(_QWORD *)(a1 + 296) = v36;
  *(_BYTE *)(a1 + 304) = v37;
  *(_DWORD *)(a1 + 308) = *(_DWORD *)&v65[3];
  *(_DWORD *)(a1 + 305) = *(_DWORD *)v65;
  *(_QWORD *)(a1 + 312) = v38;
  return result;
}

uint64_t destroy for REIChromeEditingMenuView(_QWORD *a1)
{
  swift_release(a1[1]);
  swift_release(a1[3]);
  swift_release(a1[5]);
  swift_release(a1[7]);
  swift_release(a1[9]);
  swift_release(a1[11]);
  swift_release(a1[13]);
  swift_release(a1[15]);
  swift_release(a1[17]);
  swift_release(a1[19]);
  swift_release(a1[21]);
  swift_release(a1[23]);
  swift_release(a1[25]);
  swift_release(a1[27]);
  swift_release(a1[29]);
  swift_release(a1[30]);
  swift_release(a1[31]);
  swift_release(a1[32]);
  swift_release(a1[33]);
  swift_release(a1[34]);
  swift_release(a1[35]);
  swift_release(a1[36]);
  swift_release(a1[37]);
  return swift_release(a1[39]);
}

uint64_t initializeWithCopy for REIChromeEditingMenuView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  v7 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v6;
  v9 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v8;
  v11 = *(_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v11;
  *(_QWORD *)(a1 + 80) = v10;
  v13 = *(_QWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v13;
  *(_QWORD *)(a1 + 96) = v12;
  v15 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = v15;
  *(_QWORD *)(a1 + 112) = v14;
  v17 = *(_QWORD *)(a2 + 120);
  v16 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v17;
  *(_QWORD *)(a1 + 128) = v16;
  v19 = *(_QWORD *)(a2 + 136);
  v18 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v19;
  *(_QWORD *)(a1 + 144) = v18;
  v21 = *(_QWORD *)(a2 + 152);
  v20 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v21;
  *(_QWORD *)(a1 + 160) = v20;
  v22 = *(_QWORD *)(a2 + 176);
  v34 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 168) = v34;
  *(_QWORD *)(a1 + 176) = v22;
  v23 = *(_QWORD *)(a2 + 192);
  v33 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v33;
  *(_QWORD *)(a1 + 192) = v23;
  v24 = *(_QWORD *)(a2 + 208);
  v32 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 200) = v32;
  *(_QWORD *)(a1 + 208) = v24;
  v25 = *(_QWORD *)(a2 + 224);
  v31 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 216) = v31;
  *(_QWORD *)(a1 + 224) = v25;
  v26 = *(_QWORD *)(a2 + 240);
  v30 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 232) = v30;
  *(_QWORD *)(a1 + 240) = v26;
  v35 = v26;
  v36 = *(_QWORD *)(a2 + 248);
  v27 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v36;
  *(_QWORD *)(a1 + 256) = v27;
  v37 = v27;
  v38 = *(_QWORD *)(a2 + 264);
  v28 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v38;
  *(_QWORD *)(a1 + 272) = v28;
  v39 = v28;
  v40 = *(_QWORD *)(a2 + 280);
  v41 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = v40;
  *(_QWORD *)(a1 + 288) = v41;
  v43 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 296) = v43;
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  v42 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 312) = v42;
  swift_retain(v3);
  swift_retain(v5);
  swift_retain(v7);
  swift_retain(v9);
  swift_retain(v11);
  swift_retain(v13);
  swift_retain(v15);
  swift_retain(v17);
  swift_retain(v19);
  swift_retain(v21);
  swift_retain(v34);
  swift_retain(v33);
  swift_retain(v32);
  swift_retain(v31);
  swift_retain(v30);
  swift_retain(v35);
  swift_retain(v36);
  swift_retain(v37);
  swift_retain(v38);
  swift_retain(v39);
  swift_retain(v40);
  swift_retain(v41);
  swift_retain(v43);
  swift_retain(v42);
  return a1;
}

uint64_t assignWithCopy for REIChromeEditingMenuView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  swift_retain(v5);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  swift_retain(v7);
  swift_release(v6);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v9;
  swift_retain(v9);
  swift_release(v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v11;
  swift_retain(v11);
  swift_release(v10);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v13;
  swift_retain(v13);
  swift_release(v12);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a1 + 88);
  v15 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 88) = v15;
  swift_retain(v15);
  swift_release(v14);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 104) = v17;
  swift_retain(v17);
  swift_release(v16);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a1 + 120);
  v19 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v19;
  swift_retain(v19);
  swift_release(v18);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v20 = *(_QWORD *)(a1 + 136);
  v21 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 136) = v21;
  swift_retain(v21);
  swift_release(v20);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v22 = *(_QWORD *)(a1 + 152);
  v23 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 152) = v23;
  swift_retain(v23);
  swift_release(v22);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v24 = *(_QWORD *)(a1 + 168);
  v25 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 168) = v25;
  swift_retain(v25);
  swift_release(v24);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v26 = *(_QWORD *)(a1 + 184);
  v27 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 184) = v27;
  swift_retain(v27);
  swift_release(v26);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v28 = *(_QWORD *)(a1 + 200);
  v29 = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 200) = v29;
  swift_retain(v29);
  swift_release(v28);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v30 = *(_QWORD *)(a1 + 216);
  v31 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 216) = v31;
  swift_retain(v31);
  swift_release(v30);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v32 = *(_QWORD *)(a1 + 232);
  v33 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 232) = v33;
  swift_retain(v33);
  swift_release(v32);
  v34 = *(_QWORD *)(a2 + 240);
  v35 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v34;
  swift_retain(v34);
  swift_release(v35);
  v36 = *(_QWORD *)(a1 + 248);
  v37 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 248) = v37;
  swift_retain(v37);
  swift_release(v36);
  v38 = *(_QWORD *)(a2 + 256);
  v39 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = v38;
  swift_retain(v38);
  swift_release(v39);
  v40 = *(_QWORD *)(a1 + 264);
  v41 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 264) = v41;
  swift_retain(v41);
  swift_release(v40);
  v42 = *(_QWORD *)(a2 + 272);
  v43 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 272) = v42;
  swift_retain(v42);
  swift_release(v43);
  v44 = *(_QWORD *)(a1 + 280);
  v45 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 280) = v45;
  swift_retain(v45);
  swift_release(v44);
  v46 = *(_QWORD *)(a2 + 288);
  v47 = *(_QWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 288) = v46;
  swift_retain(v46);
  swift_release(v47);
  v48 = *(_QWORD *)(a1 + 296);
  v49 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 296) = v49;
  swift_retain(v49);
  swift_release(v48);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  v50 = *(_QWORD *)(a1 + 312);
  v51 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 312) = v51;
  swift_retain(v51);
  swift_release(v50);
  return a1;
}

void *initializeWithTake for REIChromeEditingMenuView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x140uLL);
}

uint64_t assignWithTake for REIChromeEditingMenuView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v5);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v6);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v7);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release(v8);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release(v9);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v10 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release(v10);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  v11 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_release(v11);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v12 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_release(v12);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  v13 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_release(v13);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v14 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_release(v14);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v15 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_release(v15);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  v16 = *(_QWORD *)(a1 + 200);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_release(v16);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  v17 = *(_QWORD *)(a1 + 216);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_release(v17);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v18 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_release(v18);
  v19 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_release(v19);
  v20 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  swift_release(v20);
  v21 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_release(v21);
  v22 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_release(v22);
  v23 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_release(v23);
  v24 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_release(v24);
  v25 = *(_QWORD *)(a1 + 288);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_release(v25);
  v26 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_release(v26);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  v27 = *(_QWORD *)(a1 + 312);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_release(v27);
  return a1;
}

uint64_t getEnumTagSinglePayload for REIChromeEditingMenuView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 320))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 240);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REIChromeEditingMenuView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 312) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 320) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 240) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 320) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REIChromeEditingMenuView()
{
  return &type metadata for REIChromeEditingMenuView;
}

uint64_t sub_10055B118(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100876790, 1);
}

uint64_t sub_10055B128@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100556930(*(__int128 **)(v1 + 16), a1);
}

_QWORD *sub_10055B130(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[9];
  v3 = a1[10];
  v4 = a1[19];
  swift_retain(a1[20]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

_QWORD *sub_10055B17C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[9];
  v3 = a1[10];
  v4 = a1[20];
  swift_release(a1[19]);
  swift_release(v2);
  swift_release(v3);
  swift_release(v4);
  return a1;
}

uint64_t sub_10055B1D8()
{
  return sub_10055A1B8();
}

_QWORD *sub_10055B1E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = a1[1];
  v3 = a1[3];
  v4 = a1[5];
  v5 = a1[7];
  v6 = a1[9];
  v7 = a1[11];
  v8 = a1[13];
  v9 = a1[15];
  v10 = a1[17];
  v12 = a1[19];
  v13 = a1[21];
  v14 = a1[23];
  v15 = a1[25];
  v16 = a1[27];
  v17 = a1[29];
  v18 = a1[30];
  v19 = a1[31];
  v20 = a1[32];
  v21 = a1[33];
  v22 = a1[34];
  v23 = a1[35];
  v24 = a1[36];
  v25 = a1[37];
  swift_retain(a1[39]);
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v12);
  swift_retain(v13);
  swift_retain(v14);
  swift_retain(v15);
  swift_retain(v16);
  swift_retain(v17);
  swift_retain(v18);
  swift_retain(v19);
  swift_retain(v20);
  swift_retain(v21);
  swift_retain(v22);
  swift_retain(v23);
  swift_retain(v24);
  swift_retain(v25);
  return a1;
}

double sub_10055B368()
{
  return sub_100558298();
}

unint64_t sub_10055B370()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EAF58;
  if (!qword_1009EAF58)
  {
    v1 = type metadata accessor for BorderedButtonStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for BorderedButtonStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1009EAF58);
  }
  return result;
}

double sub_10055B3BC()
{
  return sub_10055835C();
}

uint64_t sub_10055B3C8()
{
  return sub_100559C18();
}

uint64_t sub_10055B3D4()
{
  return sub_100557544();
}

uint64_t sub_10055B3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EAF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10055B424()
{
  return sub_100030B34(&qword_1009EB000, &qword_1009EB008, (uint64_t)&protocol conformance descriptor for ScrollView<A>);
}

uint64_t destroy for MenuItemWithAccessory(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[4]);
  swift_release(a1[6]);
  swift_bridgeObjectRelease(a1[8]);
  swift_bridgeObjectRelease(a1[10]);
  return swift_bridgeObjectRelease(a1[12]);
}

uint64_t initializeWithCopy for MenuItemWithAccessory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v12 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v12;
  v5 = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v4;
  v7 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v6;
  v9 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v8;
  v10 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v12);
  swift_retain(v5);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t assignWithCopy for MenuItemWithAccessory(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain(v8);
  swift_release(v9);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a2 + 96);
  v15 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t assignWithTake for MenuItemWithAccessory(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  v6 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for MenuItemWithAccessory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MenuItemWithAccessory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MenuItemWithAccessory()
{
  return &type metadata for MenuItemWithAccessory;
}

uint64_t sub_10055B774(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  uint64_t v12;
  _OWORD v13[6];
  uint64_t v14;

  v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  v12 = *(_QWORD *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return sub_10055B7DC((uint64_t *)v11, (uint64_t)v13) & 1;
}

uint64_t sub_10055B7DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = v4 == *(_QWORD *)a2 && v5 == v6;
  if (v7
    || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *(_QWORD *)a2, v6, 0), result = 0, (v8 & 1) != 0))
  {
    if (*((unsigned __int8 *)a1 + 16) == *(unsigned __int8 *)(a2 + 16))
    {
      v10 = a1[3];
      v11 = a1[4];
      v12 = *(_QWORD *)(a2 + 24);
      v13 = *(_QWORD *)(a2 + 32);
      if (v10 == v12 && v11 == v13)
        return 1;
      else
        return _stringCompareWithSmolCheck(_:_:expecting:)(v10, v11, v12, v13, 0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AccessoryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10055B8B4 + 4 * byte_10072CDB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10055B8E8 + 4 * byte_10072CDB0[v4]))();
}

uint64_t sub_10055B8E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10055B8F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10055B8F8);
  return result;
}

uint64_t sub_10055B904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10055B90CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10055B910(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10055B918(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessoryType()
{
  return &type metadata for AccessoryType;
}

unint64_t sub_10055B938()
{
  unint64_t result;

  result = qword_1009EB010;
  if (!qword_1009EB010)
  {
    result = swift_getWitnessTable(&unk_10072CE50, &type metadata for AccessoryType);
    atomic_store(result, (unint64_t *)&qword_1009EB010);
  }
  return result;
}

BOOL sub_10055B97C(uint64_t a1, CGFloat a2, CGFloat a3)
{
  void *v3;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  objc_super v18;
  CGPoint v19;
  CGRect v20;

  if (*((_BYTE *)v3 + OBJC_IVAR____TtC5Books35NowPlayingTransportControlStackView_useBoundsAsPointInside) == 1)
  {
    objc_msgSend(v3, "bounds");
    v19.x = a2;
    v19.y = a3;
    return CGRectContainsPoint(v20, v19);
  }
  else
  {
    v18.receiver = v3;
    v18.super_class = (Class)type metadata accessor for NowPlayingTransportControlStackView();
    if ((objc_msgSendSuper2(&v18, "pointInside:withEvent:", a1, a2, a3) & 1) != 0)
    {
      return 1;
    }
    else
    {
      v8 = objc_msgSend(v3, "arrangedSubviews");
      v9 = sub_100009E04(0, (unint64_t *)&qword_1009D41B0, UIView_ptr);
      v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);

      if ((unint64_t)v10 >> 62)
        goto LABEL_17;
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      while (v11)
      {
        v12 = 4;
        while (1)
        {
          v13 = (v10 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12 - 4, v10)
              : *(id *)(v10 + 8 * v12);
          v14 = v13;
          v15 = v12 - 3;
          if (__OFADD__(v12 - 4, 1))
            break;
          objc_msgSend(v13, "convertPoint:fromCoordinateSpace:", v3, a2, a3);
          v16 = objc_msgSend(v14, "pointInside:withEvent:", a1);

          if (v16)
          {
            swift_bridgeObjectRelease(v10);
            return 1;
          }
          ++v12;
          if (v15 == v11)
            goto LABEL_13;
        }
        __break(1u);
LABEL_17:
        if (v10 < 0)
          v17 = v10;
        else
          v17 = v10 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v10);
        v11 = _CocoaArrayWrapper.endIndex.getter(v17);
        swift_bridgeObjectRelease(v10);
      }
LABEL_13:
      swift_bridgeObjectRelease(v10);
      return 0;
    }
  }
}

id sub_10055BC84()
{
  return sub_10023803C(type metadata accessor for NowPlayingTransportControlStackView);
}

uint64_t type metadata accessor for NowPlayingTransportControlStackView()
{
  return objc_opt_self(_TtC5Books35NowPlayingTransportControlStackView);
}

void sub_10055BCB0(double a1, double a2, double a3, double a4)
{
  char *v4;
  id v9;
  id v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  CGFloat a;
  Class isa;
  id v50;
  void *v51;
  CGAffineTransform v52;
  objc_super v53;

  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorView] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidthConstraint] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidth] = 0x4046000000000000;
  v53.receiver = v4;
  v53.super_class = (Class)type metadata accessor for NowPlayingTransportButton();
  v9 = objc_msgSendSuper2(&v53, "initWithFrame:", a1, a2, a3, a4);
  v10 = objc_allocWithZone((Class)UIView);
  v11 = (char *)v9;
  v12 = objc_msgSend(v10, "init");
  v13 = OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorView;
  v14 = *(void **)&v11[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorView];
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorView] = v12;

  v15 = *(void **)&v11[v13];
  if (!v15)
  {
    __break(1u);
    goto LABEL_16;
  }
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v16 = *(void **)&v11[v13];
  if (!v16)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v16;
  v19 = objc_msgSend(v17, "bc_booksTransportControlsColor");
  objc_msgSend(v18, "setBackgroundColor:", v19);

  v20 = *(void **)&v11[v13];
  if (!v20)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v20, "setAlpha:", 0.0);
  v21 = *(void **)&v11[v13];
  if (!v21)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  CGAffineTransformMakeScale(&v52, 1.4, 1.4);
  objc_msgSend(v21, "setTransform:", &v52);
  v22 = *(_QWORD *)&v11[v13];
  if (!v22)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v11, "insertSubview:atIndex:", v22, 0);
  v23 = *(void **)&v11[v13];
  if (!v23)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v24 = objc_msgSend(v23, "widthAnchor");
  v25 = objc_msgSend(v24, "constraintEqualToConstant:", 44.0);

  v26 = OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidthConstraint;
  v27 = *(void **)&v11[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidthConstraint];
  *(_QWORD *)&v11[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorWidthConstraint] = v25;

  v28 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v29 = swift_allocObject(v28, 64, 7);
  *(_OWORD *)(v29 + 16) = xmmword_1007143B0;
  v30 = *(void **)&v11[v26];
  if (!v30)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v31 = (_QWORD *)v29;
  *(_QWORD *)(v29 + 32) = v30;
  v32 = *(void **)&v11[v13];
  if (!v32)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v33 = v30;
  v34 = objc_msgSend(v32, "heightAnchor");
  v35 = *(void **)&v11[v13];
  if (!v35)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v36 = objc_msgSend(v35, "widthAnchor");
  v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);

  v31[5] = v37;
  v38 = *(void **)&v11[v13];
  if (!v38)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v39 = objc_msgSend(v38, "centerXAnchor");
  v40 = objc_msgSend(v11, "centerXAnchor");
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

  v31[6] = v41;
  v42 = *(void **)&v11[v13];
  if (!v42)
  {
LABEL_25:
    __break(1u);
    return;
  }
  v43 = (void *)objc_opt_self(NSLayoutConstraint);
  v44 = objc_msgSend(v42, "centerYAnchor");
  v45 = objc_msgSend(v11, "centerYAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  v31[7] = v46;
  *(_QWORD *)&v52.a = v31;
  specialized Array._endMutation()(v47);
  a = v52.a;
  sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v43, "activateConstraints:", isa, swift_bridgeObjectRelease(*(_QWORD *)&a).n128_f64[0]);

  v50 = objc_msgSend(v11, "imageView");
  if (v50)
  {
    v51 = v50;
    objc_msgSend(v50, "setContentMode:", 4);

  }
}

void sub_10055C224()
{
  id v0;
  unsigned int v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  void *v14;
  void *v15;
  uint64_t v16;

  v1 = objc_msgSend(v0, "isHighlighted");
  v2 = (void *)objc_opt_self(UIView);
  if (v1)
  {
    v3 = swift_allocObject(&unk_10090FE38, 24, 7);
    *(_QWORD *)(v3 + 16) = v0;
    v15 = sub_10055CF7C;
    v16 = v3;
    v11 = _NSConcreteStackBlock;
    v12 = 1107296256;
    v13 = sub_1000147F0;
    v14 = &unk_10090FE50;
  }
  else
  {
    v4 = swift_allocObject(&unk_10090FD98, 24, 7);
    *(_QWORD *)(v4 + 16) = v0;
    v15 = sub_10055CF6C;
    v16 = v4;
    v11 = _NSConcreteStackBlock;
    v12 = 1107296256;
    v13 = sub_1000147F0;
    v14 = &unk_10090FDB0;
    v5 = _Block_copy(&v11);
    v6 = v16;
    v0 = v0;
    swift_release(v6);
    objc_msgSend(v2, "animateWithDuration:delay:options:animations:completion:", 2, v5, 0, 0.47, 0.0);
    _Block_release(v5);
    v7 = swift_allocObject(&unk_10090FDE8, 24, 7);
    *(_QWORD *)(v7 + 16) = v0;
    v15 = sub_10055CF74;
    v16 = v7;
    v11 = _NSConcreteStackBlock;
    v12 = 1107296256;
    v13 = sub_1000147F0;
    v14 = &unk_10090FE00;
  }
  v8 = _Block_copy(&v11);
  v9 = v16;
  v10 = v0;
  swift_release(v9);
  objc_msgSend(v2, "animateWithDuration:delay:options:animations:completion:", 2, v8, 0, 0.2, 0.0, v11, v12, v13, v14, v15);
  _Block_release(v8);
}

id sub_10055C400(char *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id result;
  void *v6;
  CGAffineTransform v7;

  v2 = objc_msgSend(a1, "imageView");
  if (v2)
  {
    v3 = v2;
    CGAffineTransformMakeScale(&v7, 0.8, 0.8);
    objc_msgSend(v3, "setTransform:", &v7);

  }
  v4 = OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorView;
  result = *(id *)&a1[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorView];
  if (result)
  {
    result = objc_msgSend(result, "setAlpha:", 0.1);
    v6 = *(void **)&a1[v4];
    if (v6)
    {
      CGAffineTransformMakeScale(&v7, 1.2, 1.2);
      return objc_msgSend(v6, "setTransform:", &v7);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10055C4F0(char *a1)
{
  id v2;
  void *v3;
  id result;
  _QWORD v5[6];

  v2 = objc_msgSend(a1, "imageView");
  if (v2)
  {
    v3 = v2;
    v5[0] = 0x3FF0000000000000;
    v5[1] = 0;
    v5[2] = 0;
    v5[3] = 0x3FF0000000000000;
    v5[4] = 0;
    v5[5] = 0;
    objc_msgSend(v2, "setTransform:", v5);

  }
  result = *(id *)&a1[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorView];
  if (result)
    return objc_msgSend(result, "setAlpha:", 0.0);
  __break(1u);
  return result;
}

char *sub_10055C578(char *result)
{
  void *v1;
  CGAffineTransform v2;

  v1 = *(void **)&result[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorView];
  if (v1)
  {
    CGAffineTransformMakeScale(&v2, 1.4, 1.4);
    return (char *)objc_msgSend(v1, "setTransform:", &v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10055C5F4(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for NowPlayingTransportButton();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_10055C770()
{
  char *v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  objc_super v7;
  CGRect v8;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for NowPlayingTransportButton();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  v1 = objc_msgSend(v0, "imageView");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v0, "bounds");
    objc_msgSend(v0, "contentRectForBounds:");
    objc_msgSend(v0, "imageRectForContentRect:");
    objc_msgSend(v2, "setUntransformedFrame:");

  }
  v3 = OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorView;
  v4 = *(void **)&v0[OBJC_IVAR____TtC5Books25NowPlayingTransportButton_highlightIndicatorView];
  if (v4)
  {
    v5 = objc_msgSend(v4, "layer");
    v6 = *(void **)&v0[v3];
    if (v6)
    {
      objc_msgSend(v6, "bounds");
      objc_msgSend(v5, "setCornerRadius:", CGRectGetWidth(v8) * 0.5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10055C8A8()
{
  return sub_10023803C(type metadata accessor for NowPlayingTransportButton);
}

uint64_t type metadata accessor for NowPlayingTransportButton()
{
  return objc_opt_self(_TtC5Books25NowPlayingTransportButton);
}

id sub_10055C90C(void *a1, uint64_t a2)
{
  _BYTE *v2;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  _BOOL8 v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  Class isa;
  objc_super v33;

  v2[OBJC_IVAR____TtC5Books28NowPlayingVibrancyEffectView_vibrancyState] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Books28NowPlayingVibrancyEffectView_contentItemView] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC5Books28NowPlayingVibrancyEffectView_vibrancyStyle] = a2;
  v33.receiver = v2;
  v33.super_class = (Class)type metadata accessor for NowPlayingVibrancyEffectView();
  v4 = a1;
  v5 = objc_msgSendSuper2(&v33, "initWithEffect:", 0);
  v6 = objc_msgSend(v5, "contentView");
  objc_msgSend(v6, "addSubview:", v4);

  v7 = objc_msgSend(v5, "contentView");
  v8 = objc_msgSend(v5, "contentView");
  v9 = type metadata accessor for NowPlayingTransportButton();
  v10 = swift_dynamicCastClass(v8, v9) != 0;

  objc_msgSend(v7, "setClipsToBounds:", v10);
  v11 = (void *)objc_opt_self(NSLayoutConstraint);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v13 = swift_allocObject(v12, 64, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1007143B0;
  v14 = objc_msgSend(v4, "leadingAnchor");
  v15 = objc_msgSend(v5, "contentView");
  v16 = objc_msgSend(v15, "leadingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:", v16);
  *(_QWORD *)(v13 + 32) = v17;
  v18 = objc_msgSend(v4, "trailingAnchor");
  v19 = objc_msgSend(v5, "contentView");
  v20 = objc_msgSend(v19, "trailingAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v13 + 40) = v21;
  v22 = objc_msgSend(v4, "topAnchor");
  v23 = objc_msgSend(v5, "contentView");
  v24 = objc_msgSend(v23, "topAnchor");

  v25 = objc_msgSend(v22, "constraintEqualToAnchor:", v24);
  *(_QWORD *)(v13 + 48) = v25;
  v26 = objc_msgSend(v4, "bottomAnchor");
  v27 = objc_msgSend(v5, "contentView");
  v28 = objc_msgSend(v27, "bottomAnchor");

  v29 = objc_msgSend(v26, "constraintEqualToAnchor:", v28);
  *(_QWORD *)(v13 + 56) = v29;
  specialized Array._endMutation()(v30);
  sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v11, "activateConstraints:", isa);

  return v5;
}

id sub_10055CDF8()
{
  return sub_10023803C(type metadata accessor for NowPlayingVibrancyEffectView);
}

uint64_t type metadata accessor for NowPlayingVibrancyEffectView()
{
  return objc_opt_self(_TtC5Books28NowPlayingVibrancyEffectView);
}

uint64_t storeEnumTagSinglePayload for NowPlayingVibrancyEffectView.VibrancyState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10055CE80 + 4 * byte_10072CE85[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10055CEB4 + 4 * byte_10072CE80[v4]))();
}

uint64_t sub_10055CEB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10055CEBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10055CEC4);
  return result;
}

uint64_t sub_10055CED0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10055CED8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10055CEDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10055CEE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NowPlayingVibrancyEffectView.VibrancyState()
{
  return &type metadata for NowPlayingVibrancyEffectView.VibrancyState;
}

unint64_t sub_10055CF04()
{
  unint64_t result;

  result = qword_1009EB0C8;
  if (!qword_1009EB0C8)
  {
    result = swift_getWitnessTable(&unk_10072CF4C, &type metadata for NowPlayingVibrancyEffectView.VibrancyState);
    atomic_store(result, (unint64_t *)&qword_1009EB0C8);
  }
  return result;
}

uint64_t sub_10055CF48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10055CF6C()
{
  uint64_t v0;

  return sub_10055C4F0(*(char **)(v0 + 16));
}

char *sub_10055CF74()
{
  uint64_t v0;

  return sub_10055C578(*(char **)(v0 + 16));
}

id sub_10055CF7C()
{
  uint64_t v0;

  return sub_10055C400(*(char **)(v0 + 16));
}

uint64_t sub_10055CF9C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD v6[2];
  char v7;
  _BYTE v8[40];
  _BYTE v9[24];
  _QWORD v10[5];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_configuration);
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_configuration, v9, 0, 0);
  sub_10002E418((uint64_t)v3, (uint64_t)v10);
  swift_beginAccess(v3, v8, 33, 0);
  sub_1001EAB00(v3, a1);
  swift_endAccess(v8);
  sub_10002E418((uint64_t)v10, (uint64_t)v8);
  v4 = sub_10004CFD4(&qword_1009EA720);
  if ((swift_dynamicCast(v6, v8, v4, &type metadata for SidebarSearchFieldContentConfiguration, 6) & 1) == 0)
  {
    v6[0] = 0;
    v6[1] = 0;
    v7 = 0;
  }
  sub_10055D54C((uint64_t)v6);
  sub_100010960((uint64_t)v6, &qword_1009EB110);
  _s5Books15CurrentPageViewVwxx_0(a1);
  return _s5Books15CurrentPageViewVwxx_0(v10);
}

id sub_10055D084(uint64_t *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  _QWORD v10[2];
  char v11;
  objc_super v12;

  v3 = OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_searchBar;
  v4 = objc_allocWithZone((Class)UISearchBar);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_textSubscriptionCancellable] = 0;
  v6 = (uint64_t *)&v5[OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_configuration];
  *(_QWORD *)&v5[OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_configuration + 24] = &type metadata for SidebarSearchFieldContentConfiguration;
  v6[4] = sub_10055DF74();
  v7 = swift_allocObject(&unk_10090FEE8, 33, 7);
  *v6 = v7;
  sub_1003A78DC(a1, v7 + 16);

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for SidebarSearchFieldContentView();
  v8 = objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10055D24C();
  v10[0] = 0;
  v10[1] = 0;
  v11 = 0;
  sub_10055D54C((uint64_t)v10);

  sub_1003A7B1C(a1);
  sub_100010960((uint64_t)v10, &qword_1009EB110);
  return v8;
}

void sub_10055D24C()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_searchBar];
  objc_msgSend(v1, "setSearchBarStyle:", 2);
  objc_msgSend(v0, "addSubview:", v1);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1007143B0;
  v5 = objc_msgSend(v1, "leadingAnchor");
  v6 = objc_msgSend(v0, "safeAreaLayoutGuide");
  v7 = objc_msgSend(v6, "leadingAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v7, -9.0);
  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v1, "trailingAnchor");
  v10 = objc_msgSend(v0, "safeAreaLayoutGuide");
  v11 = objc_msgSend(v10, "trailingAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v11, 9.0);
  *(_QWORD *)(v4 + 40) = v12;
  v13 = objc_msgSend(v1, "topAnchor");
  v14 = objc_msgSend(v0, "safeAreaLayoutGuide");
  v15 = objc_msgSend(v14, "topAnchor");

  v16 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v15, -5.0);
  *(_QWORD *)(v4 + 48) = v16;
  v17 = objc_msgSend(v1, "bottomAnchor");
  v18 = objc_msgSend(v0, "safeAreaLayoutGuide");
  v19 = objc_msgSend(v18, "bottomAnchor");

  v20 = objc_msgSend(v17, "constraintEqualToAnchor:", v19);
  *(_QWORD *)(v4 + 56) = v20;
  specialized Array._endMutation()(v21);
  sub_100009E04(0, (unint64_t *)&qword_1009DE3F0, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

double sub_10055D54C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  double result;
  void *v20;
  uint64_t KeyPath;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSString v25;
  double v26;
  uint64_t v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  uint8_t *v52;
  const char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD v63[2];
  char v64;
  char v65[24];
  char *v66;
  uint64_t v67;
  unsigned __int8 v68;
  char *v69;
  uint64_t v70;
  unsigned __int8 v71;

  v2 = v1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D4DC0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D4DC8);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v2 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_configuration;
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_configuration, v65, 0, 0);
  sub_10002E418(v15, (uint64_t)&v66);
  v16 = sub_10004CFD4(&qword_1009EA720);
  if (!swift_dynamicCast(v63, &v66, v16, &type metadata for SidebarSearchFieldContentConfiguration, 6))
  {
    v63[0] = 0;
    v63[1] = 0;
    v64 = 0;
    sub_100010960((uint64_t)v63, &qword_1009EB110);
    return result;
  }
  v62 = v8;
  sub_1003A7930((uint64_t)v63, (uint64_t)&v69);
  v17 = v69;
  sub_10055DEF8(a1, (uint64_t)&v66);
  v18 = v66;
  if (v66)
  {
    swift_retain(v17);
    swift_retain(v18);
    sub_1003A7B1C(&v66);
    swift_release(v18);
    if (v17 == v18)
      goto LABEL_14;
  }
  else
  {
    swift_retain(v17);
    sub_100010960((uint64_t)&v66, &qword_1009EB110);
  }
  v60 = v12;
  v61 = a1;
  v20 = *(void **)(v2 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_searchBar);
  KeyPath = swift_getKeyPath(&unk_10072CFE0);
  v22 = swift_getKeyPath(&unk_10072D008);
  static Published.subscript.getter(&v66, v17, KeyPath, v22);
  swift_release(KeyPath);
  v23 = swift_release(v22).n128_u64[0];
  v24 = v67;
  if (v67)
  {
    v25 = String._bridgeToObjectiveC()();
    v23 = swift_bridgeObjectRelease(v24).n128_u64[0];
  }
  else
  {
    v25 = 0;
  }
  objc_msgSend(v20, "setText:", v25, *(double *)&v23);

  v27 = *(_QWORD *)&v17[OBJC_IVAR____TtCC5Books16SidebarViewModel16SearchFieldModel_placeholder + 8];
  if (v27)
  {
    swift_bridgeObjectRetain(*(_QWORD *)&v17[OBJC_IVAR____TtCC5Books16SidebarViewModel16SearchFieldModel_placeholder + 8]);
    v28 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(v27).n128_u64[0];
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v20, "setPlaceholder:", v28, v26);

  swift_beginAccess(&v17[OBJC_IVAR____TtCC5Books16SidebarViewModel16SearchFieldModel__text], &v66, 33, 0);
  v29 = sub_10004CFD4(&qword_1009D19E8);
  Published.projectedValue.getter(v29);
  swift_endAccess(&v66);
  v30 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v66 = (char *)static OS_dispatch_queue.main.getter(v30);
  v31 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v6, 1, 1, v31);
  v32 = sub_100030B34(&qword_1009D4E30, &qword_1009D4DC0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v33 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v66, v6, v7, v30, v32, v33);
  sub_100010960((uint64_t)v6, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v10, v7);
  v34 = swift_allocObject(&unk_10090FEC0, 24, 7);
  swift_unknownObjectWeakInit(v34 + 16);
  v35 = sub_100030B34(&qword_1009D4E38, &qword_1009D4DC8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v36 = Publisher<>.sink(receiveValue:)(sub_10055DF6C, v34, v11, v35);
  v37 = swift_release(v34);
  (*(void (**)(char *, uint64_t, __n128))(v60 + 8))(v14, v11, v37);
  v38 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_textSubscriptionCancellable);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_textSubscriptionCancellable) = v36;
  swift_release(v38);
  a1 = v61;
LABEL_14:
  v39 = *(void **)(v2 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_searchBar);
  v40 = swift_unknownObjectWeakLoadStrong(&v70);
  objc_msgSend(v39, "setDelegate:", v40);
  swift_unknownObjectRelease(v40);
  v41 = v71;
  sub_10055DEF8(a1, (uint64_t)&v66);
  if (v66)
  {
    v42 = v68;
    sub_1003A7B1C(&v66);
    if (v42 == v41)
    {
      swift_release(v17);
LABEL_31:
      sub_1003A7B1C(&v69);
      return result;
    }
  }
  else
  {
    sub_100010960((uint64_t)&v66, &qword_1009EB110);
  }
  v43 = v71;
  v44 = objc_msgSend(v39, "isFirstResponder");
  if (v43 == 1)
  {
    if ((v44 & 1) == 0)
    {
      objc_msgSend(v39, "becomeFirstResponder");
      if (qword_1009CE4F0 != -1)
        swift_once(&qword_1009CE4F0, sub_100450628);
      v45 = type metadata accessor for Logger(0);
      v46 = sub_100048F64(v45, (uint64_t)qword_1009E40B0);
      v47 = Logger.logObject.getter(v46);
      v51 = static os_log_type_t.debug.getter(v47, v48, v49, v50);
      if (!os_log_type_enabled(v47, v51))
        goto LABEL_30;
      v52 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v52 = 0;
      v53 = "Search bar becomeFirstResponder()";
LABEL_29:
      _os_log_impl((void *)&_mh_execute_header, v47, v51, v53, v52, 2u);
      swift_slowDealloc(v52, -1, -1);
LABEL_30:
      swift_release(v17);

      goto LABEL_31;
    }
  }
  else if (v44)
  {
    objc_msgSend(v39, "resignFirstResponder");
    if (qword_1009CE4F0 != -1)
      swift_once(&qword_1009CE4F0, sub_100450628);
    v54 = type metadata accessor for Logger(0);
    v55 = sub_100048F64(v54, (uint64_t)qword_1009E40B0);
    v47 = Logger.logObject.getter(v55);
    v51 = static os_log_type_t.debug.getter(v47, v56, v57, v58);
    if (!os_log_type_enabled(v47, v51))
      goto LABEL_30;
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    v53 = "Search bar resignFirstResponder()";
    goto LABEL_29;
  }
  sub_1003A7B1C(&v69);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

void sub_10055DBBC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  id v16;
  NSString v17;
  _BYTE v18[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    v7 = OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_searchBar;
    v8 = *(void **)(Strong + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_searchBar);
    v9 = objc_msgSend(v8, "text");
    if (!v9)
    {
      if (v3)
        goto LABEL_11;
LABEL_14:

      return;
    }
    v10 = v9;
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
    v13 = v12;

    if (!v3)
    {
      swift_bridgeObjectRelease(v13);
      v16 = *(id *)&v6[v7];
      v17 = 0;
      goto LABEL_13;
    }
    if (v11 != v2 || v3 != v13)
    {
      v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v2, v3, 0);
      swift_bridgeObjectRelease(v13);
      if ((v15 & 1) == 0)
      {
        v8 = *(void **)&v6[v7];
LABEL_11:
        v16 = v8;
        v17 = String._bridgeToObjectiveC()();
LABEL_13:
        objc_msgSend(v16, "setText:", v17);

        return;
      }
      goto LABEL_14;
    }

    swift_bridgeObjectRelease(v13);
  }
}

id sub_10055DD38()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SidebarSearchFieldContentView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SidebarSearchFieldContentView()
{
  return objc_opt_self(_TtC5Books29SidebarSearchFieldContentView);
}

uint64_t sub_10055DDD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_configuration;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_10002E418(v3, a1);
}

void (*sub_10055DE24(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  v4 = v1 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_configuration;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books29SidebarSearchFieldContentView_configuration, v3 + 10, 0, 0);
  sub_10002E418(v4, (uint64_t)v3);
  return sub_10055DE94;
}

void sub_10055DE94(uint64_t *a1, char a2)
{
  _QWORD *v2;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_10002E418(*a1, (uint64_t)(v2 + 5));
    sub_10055CF9C(v2 + 5);
    _s5Books15CurrentPageViewVwxx_0(v2);
  }
  else
  {
    sub_10055CF9C((_QWORD *)*a1);
  }
  free(v2);
}

uint64_t sub_10055DEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009EB110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10055DF48()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10055DF6C(uint64_t *a1)
{
  uint64_t v1;

  sub_10055DBBC(a1, v1);
}

unint64_t sub_10055DF74()
{
  unint64_t result;

  result = qword_1009EB118;
  if (!qword_1009EB118)
  {
    result = swift_getWitnessTable(&unk_10071F258, &type metadata for SidebarSearchFieldContentConfiguration);
    atomic_store(result, (unint64_t *)&qword_1009EB118);
  }
  return result;
}

uint64_t sub_10055DFB8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 24);
  return swift_deallocObject(v0, 33, 7);
}

uint64_t *initializeWithCopy for SampleHeaderButtonStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2[2];
  v5 = a2[3];
  a1[2] = v6;
  a1[3] = v5;
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v6);
  return a1;
}

uint64_t *assignWithCopy for SampleHeaderButtonStyle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = a1[2];
  v9 = a2[2];
  a1[2] = v9;
  swift_retain(v9);
  swift_release(v8);
  a1[3] = a2[3];
  return a1;
}

_QWORD *assignWithTake for SampleHeaderButtonStyle(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release(v4);
  v5 = a1[2];
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_release(v5);
  a1[3] = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for SampleHeaderButtonStyle()
{
  return &type metadata for SampleHeaderButtonStyle;
}

uint64_t sub_10055E110(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1008769C8, 1);
}

uint64_t sub_10055E120@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _OWORD v110[7];

  v105 = a3;
  v104 = a2;
  v89 = a1;
  v109 = a4;
  v108 = type metadata accessor for AutomaticHoverEffect(0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v7);
  v103 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_10004CFD4(&qword_1009EB120);
  v9 = __chkstk_darwin(v101);
  v102 = (uint64_t)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ButtonStyleConfiguration.Label(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v87 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009EB128);
  __chkstk_darwin(v15);
  v17 = (char *)&v87 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_10004CFD4(&qword_1009EB130);
  __chkstk_darwin(v87);
  v19 = (char *)&v87 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_10004CFD4(&qword_1009EB138);
  __chkstk_darwin(v88);
  v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = sub_10004CFD4(&qword_1009EB140);
  __chkstk_darwin(v90);
  v93 = (uint64_t)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_10004CFD4(&qword_1009EB148);
  __chkstk_darwin(v91);
  v94 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_10004CFD4(&qword_1009EB150);
  __chkstk_darwin(v92);
  v95 = (uint64_t)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = sub_10004CFD4(&qword_1009EB158);
  __chkstk_darwin(v97);
  v100 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_10004CFD4(&qword_1009EB160);
  v98 = *(_QWORD *)(v99 - 8);
  v26 = __chkstk_darwin(v99);
  v96 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter(v26);
  v29 = static Font.subheadline.getter(v28);
  static Font.Weight.semibold.getter(v29);
  v30 = Font.weight(_:)(v29);
  swift_release(v29);
  KeyPath = swift_getKeyPath(&unk_10072D080);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v14, v11);
  v32 = (uint64_t *)&v17[*(int *)(v15 + 36)];
  *v32 = KeyPath;
  v32[1] = v30;
  v33 = v89;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v34 = swift_getKeyPath(&unk_10072D0B0);
  sub_10000B5E4((uint64_t)v17, (uint64_t)v19, &qword_1009EB128);
  v35 = (uint64_t *)&v19[*(int *)(v87 + 36)];
  *v35 = v34;
  v35[1] = v33;
  swift_retain(v33);
  v36 = sub_100010960((uint64_t)v17, &qword_1009EB128);
  v37 = static Edge.Set.horizontal.getter(v36);
  if (qword_1009CE610 != -1)
    swift_once(&qword_1009CE610, sub_1004793DC);
  v38 = EdgeInsets.init(_all:)(*(double *)&static REConstants.sampleButtonHorizontalPadding);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  sub_10000B5E4((uint64_t)v19, (uint64_t)v21, &qword_1009EB130);
  v45 = &v21[*(int *)(v88 + 36)];
  *v45 = v37;
  *((double *)v45 + 1) = v38;
  *((_QWORD *)v45 + 2) = v40;
  *((_QWORD *)v45 + 3) = v42;
  *((_QWORD *)v45 + 4) = v44;
  v45[40] = 0;
  v46 = sub_100010960((uint64_t)v19, &qword_1009EB130);
  if (qword_1009CE618 != -1)
    v46 = swift_once(&qword_1009CE618, sub_100479448);
  v47 = static REConstants.sampleButtonMinimumWidth;
  if (qword_1009CE620 != -1)
    v46 = swift_once(&qword_1009CE620, sub_1004794B4);
  v48 = static REConstants.sampleButtonMinimumHeight;
  v49 = static Alignment.center.getter(v46);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v110, v47, 0, 0, 1, 0, 1, v48, 0, 0, 1, 0, 1, v49, v50);
  v51 = v93;
  sub_10000B5E4((uint64_t)v21, v93, &qword_1009EB138);
  v52 = (_OWORD *)(v51 + *(int *)(v90 + 36));
  v53 = v110[5];
  v52[4] = v110[4];
  v52[5] = v53;
  v52[6] = v110[6];
  v54 = v110[1];
  *v52 = v110[0];
  v52[1] = v54;
  v55 = v110[3];
  v52[2] = v110[2];
  v52[3] = v55;
  v56 = sub_100010960((uint64_t)v21, &qword_1009EB138);
  v57 = static Alignment.center.getter(v56);
  v59 = v58;
  v60 = (uint64_t)v94;
  v61 = (uint64_t)&v94[*(int *)(v91 + 36)];
  v62 = enum case for RoundedCornerStyle.continuous(_:);
  v63 = type metadata accessor for RoundedCornerStyle(0);
  v64 = (uint64_t)v103;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 104))(v103, v62, v63);
  v65 = v102;
  sub_1001F57A0(v64, v102);
  v66 = v101;
  v67 = v104;
  *(_QWORD *)(v65 + *(int *)(v101 + 52)) = v104;
  *(_WORD *)(v65 + *(int *)(v66 + 56)) = 256;
  swift_retain(v67);
  sub_1001F597C(v64);
  sub_100025B3C(v65, v61, &qword_1009EB120);
  v68 = (uint64_t *)(v61 + *(int *)(sub_10004CFD4(&qword_1009EB168) + 36));
  *v68 = v57;
  v68[1] = v59;
  v69 = sub_100025B3C(v51, v60, &qword_1009EB140);
  if ((ButtonStyleConfiguration.isPressed.getter(v69) & 1) != 0)
    v70 = 0.6;
  else
    v70 = 1.0;
  v71 = v95;
  sub_10000B5E4(v60, v95, &qword_1009EB148);
  *(double *)(v71 + *(int *)(v92 + 36)) = v70;
  v72 = sub_100010960(v60, &qword_1009EB148);
  v73 = static Alignment.center.getter(v72);
  v75 = v74;
  v76 = v97;
  v77 = (uint64_t)v100;
  v78 = (uint64_t)&v100[*(int *)(v97 + 36)];
  sub_10055E9F0(v105, v78, a5);
  v79 = (uint64_t *)(v78 + *(int *)(sub_10004CFD4(&qword_1009EB170) + 36));
  *v79 = v73;
  v79[1] = v75;
  v80 = sub_100025B3C(v71, v77, &qword_1009EB150);
  v81 = v106;
  static CustomHoverEffect<>.automatic.getter(v80);
  v82 = sub_10055ECEC();
  v83 = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v84 = v96;
  v85 = v108;
  View.hoverEffect<A>(_:isEnabled:)(v81, 1, v76, v108, v82, v83);
  (*(void (**)(char *, uint64_t))(v107 + 8))(v81, v85);
  sub_100010960(v77, &qword_1009EB158);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v98 + 32))(v109, v84, v99);
}

uint64_t sub_10055E9F0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  char *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  char v32;
  double v33;
  uint64_t v34;
  uint64_t v36;
  _OWORD v37[2];
  uint64_t v38;

  v6 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009EB1C0);
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009EB1C8);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.n128_f64[0] = __chkstk_darwin(v16);
  v19 = (char *)&v36 - v18;
  if (!a1 || a3 <= 0.0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(a2, 1, 1, v12, v17);
  v36 = a2;
  v20 = enum case for RoundedCornerStyle.continuous(_:);
  v21 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v8, v20, v21);
  v22 = swift_retain(a1);
  v22.n128_f64[0] = a3;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v37, 0, 0, _swiftEmptyArrayStorage, v22, 10.0, 0.0);
  sub_1001F57A0((uint64_t)v8, (uint64_t)v11);
  v23 = &v11[*(int *)(sub_10004CFD4(&qword_1009EB1D0) + 36)];
  v24 = v37[1];
  *(_OWORD *)v23 = v37[0];
  *((_OWORD *)v23 + 1) = v24;
  *((_QWORD *)v23 + 4) = v38;
  v25 = sub_10004CFD4(&qword_1009EB1D8);
  *(_QWORD *)&v11[*(int *)(v25 + 52)] = a1;
  *(_WORD *)&v11[*(int *)(v25 + 56)] = 256;
  swift_retain(a1);
  v27 = static Alignment.center.getter(v26);
  v29 = v28;
  v30 = (uint64_t *)&v11[*(int *)(sub_10004CFD4(&qword_1009EB1E0) + 36)];
  *v30 = v27;
  v30[1] = v29;
  v31 = sub_1001F597C((uint64_t)v8);
  v32 = ButtonStyleConfiguration.isPressed.getter(v31);
  swift_release(a1);
  if ((v32 & 1) != 0)
    v33 = 0.6;
  else
    v33 = 1.0;
  sub_10000B5E4((uint64_t)v11, (uint64_t)v15, &qword_1009EB1C0);
  *(double *)&v15[*(int *)(v12 + 36)] = v33;
  sub_100010960((uint64_t)v11, &qword_1009EB1C0);
  sub_100025B3C((uint64_t)v15, (uint64_t)v19, &qword_1009EB1C8);
  v34 = v36;
  sub_100025B3C((uint64_t)v19, v36, &qword_1009EB1C8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v34, 0, 1, v12);
}

uint64_t sub_10055ECCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_10055E120(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 24));
}

unint64_t sub_10055ECEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB178;
  if (!qword_1009EB178)
  {
    v1 = sub_100030B74(&qword_1009EB158);
    sub_1001F5558(&qword_1009EB180, &qword_1009EB150, (void (*)(void))sub_10055ED90);
    sub_100030B34(&qword_1009EB1B8, &qword_1009EB170, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB178);
  }
  return result;
}

unint64_t sub_10055ED90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB188;
  if (!qword_1009EB188)
  {
    v1 = sub_100030B74(&qword_1009EB148);
    sub_1001F5558(&qword_1009EB190, &qword_1009EB140, (void (*)(void))sub_10055EE34);
    sub_100030B34(&qword_1009EB1B0, &qword_1009EB168, (uint64_t)&protocol conformance descriptor for _BackgroundModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB188);
  }
  return result;
}

uint64_t sub_10055EE34()
{
  return sub_1001F5558(&qword_1009EB198, &qword_1009EB138, (void (*)(void))sub_10055EE58);
}

unint64_t sub_10055EE58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB1A0;
  if (!qword_1009EB1A0)
  {
    v1 = sub_100030B74(&qword_1009EB130);
    sub_10055EEDC();
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB1A0);
  }
  return result;
}

unint64_t sub_10055EEDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009EB1A8;
  if (!qword_1009EB1A8)
  {
    v1 = sub_100030B74(&qword_1009EB128);
    sub_100008DB0(&qword_1009D8F88, (uint64_t (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label, (uint64_t)&protocol conformance descriptor for ButtonStyleConfiguration.Label);
    sub_100030B34((unint64_t *)&unk_1009D8AB0, &qword_1009DE690, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009EB1A8);
  }
  return result;
}

uint64_t sub_10055EF78()
{
  _QWORD v1[4];

  v1[0] = sub_100030B74(&qword_1009EB158);
  v1[1] = type metadata accessor for AutomaticHoverEffect(255);
  v1[2] = sub_10055ECEC();
  v1[3] = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  return swift_getOpaqueTypeConformance2(v1, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
}

void sub_10055F000(void *a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;

  v9 = type metadata accessor for URL(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v4 + 24))
  {
    if (qword_1009CE838 != -1)
      swift_once(&qword_1009CE838, sub_10055F368);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100048F64(v16, (uint64_t)qword_1009EB1E8);
    v41 = Logger.logObject.getter(v17);
    v18 = static os_log_type_t.info.getter(v41);
    if (os_log_type_enabled(v41, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v18, "snapshot in progress, ignoring snapshot request", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    v40 = a3;
    swift_unknownObjectWeakAssign(v4 + 16, a1);
    objc_msgSend(a1, "bounds");
    v21 = v20;
    v23 = v22;
    v24 = objc_msgSend(a1, "window");
    v41 = a4;
    if (v24)
    {
      v25 = v24;
      objc_msgSend(v24, "frame");
    }
    else
    {
      v25 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v25, "bounds");
    }
    v28 = v26;
    v29 = v27;

    static TaskPriority.userInitiated.getter(v30);
    v31 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 0, 1, v31);
    v32 = swift_allocObject(&unk_100910000, 24, 7);
    swift_weakInit(v32 + 16, v4);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
    v33 = *(unsigned __int8 *)(v10 + 80);
    v34 = (v33 + 96) & ~v33;
    v35 = (char *)swift_allocObject(&unk_100910028, v34 + v11, v33 | 7);
    *((_QWORD *)v35 + 2) = 0;
    *((_QWORD *)v35 + 3) = 0;
    v36 = v41;
    *((_QWORD *)v35 + 4) = v40;
    *((_QWORD *)v35 + 5) = v36;
    *((_QWORD *)v35 + 6) = v32;
    *((_QWORD *)v35 + 7) = a1;
    *((_QWORD *)v35 + 8) = v21;
    *((_QWORD *)v35 + 9) = v23;
    *((_QWORD *)v35 + 10) = v28;
    *((_QWORD *)v35 + 11) = v29;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v35[v34], v12, v9);
    swift_retain(v36);
    v37 = a1;
    v38 = sub_10053DC20((uint64_t)v15, (uint64_t)&unk_1009EB2B0, (uint64_t)v35);
    sub_10000B4D8((uint64_t)v15);
    v39 = *(_QWORD *)(v4 + 24);
    *(_QWORD *)(v4 + 24) = v38;
    swift_retain(v38);
    if (v39)
    {
      Task.cancel()();
      swift_release(v39);
    }
    swift_release(v38);
  }
}

uint64_t sub_10055F368()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009EB1E8);
  sub_100048F64(v0, (uint64_t)qword_1009EB1E8);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x70616E5377656956, 0xEF726574746F6873);
}

uint64_t sub_10055F3E8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v12 + 104) = a12;
  *(double *)(v12 + 88) = a3;
  *(double *)(v12 + 96) = a4;
  *(double *)(v12 + 72) = a1;
  *(double *)(v12 + 80) = a2;
  *(_QWORD *)(v12 + 56) = a10;
  *(_QWORD *)(v12 + 64) = a11;
  *(_QWORD *)(v12 + 40) = a8;
  *(_QWORD *)(v12 + 48) = a9;
  v13 = type metadata accessor for ContinuousClock(0);
  *(_QWORD *)(v12 + 112) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v12 + 120) = v14;
  *(_QWORD *)(v12 + 128) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10055F458, 0, 0);
}

uint64_t sub_10055F458(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  ContinuousClock.init()(a1);
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1009E3628 + dword_1009E3628);
  v2 = (_QWORD *)swift_task_alloc(unk_1009E362C);
  *(_QWORD *)(v1 + 136) = v2;
  *v2 = v1;
  v2[1] = sub_10055F4D8;
  return v4(100000000000000000, 0, 0, 0, 1);
}

uint64_t sub_10055F4D8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD))(v2[15] + 8))(v2[16], v2[14]);
  if (v0)
    v4 = sub_10055F728;
  else
    v4 = sub_10055F54C;
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10055F54C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 56) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v1);
  *(_QWORD *)(v0 + 152) = Strong;
  if (Strong)
  {
    v3 = (_QWORD *)swift_task_alloc(dword_1009EB2BC);
    *(_QWORD *)(v0 + 160) = v3;
    *v3 = v0;
    v3[1] = sub_10055F5EC;
    return sub_100560790(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 104), *(double *)(v0 + 72), *(double *)(v0 + 80), *(double *)(v0 + 88), *(double *)(v0 + 96));
  }
  else
  {
    swift_task_dealloc(*(_QWORD *)(v0 + 128));
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_10055F5EC(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  *(_BYTE *)(*(_QWORD *)v1 + 176) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10055F648, 0, 0);
}

uint64_t sub_10055F648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v0 + 168) = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10055F6B0, v2, v3);
}

uint64_t sub_10055F6B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 152);
  swift_release(*(_QWORD *)(v0 + 168));
  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = 0;
  if (v2)
  {
    Task.cancel()();
    swift_release(v2);
  }
  return swift_task_switch(sub_10055F824, 0, 0);
}

uint64_t sub_10055F728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void (*v10)(_QWORD);

  if (qword_1009CE838 != -1)
    swift_once(&qword_1009CE838, sub_10055F368);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048F64(v1, (uint64_t)qword_1009EB1E8);
  v3 = Logger.logObject.getter(v2);
  v7 = static os_log_type_t.debug.getter(v3, v4, v5, v6);
  if (os_log_type_enabled(v3, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v7, "Cancelled before starting, bail", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  v9 = *(_QWORD *)(v0 + 144);
  v10 = *(void (**)(_QWORD))(v0 + 40);

  v10(0);
  swift_errorRelease(v9);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10055F824()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  (*(void (**)(_QWORD))(v0 + 40))(*(unsigned __int8 *)(v0 + 176));
  swift_release(v1);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10055F86C(void *a1, id a2)
{
  id v3;
  id v4;

  v3 = objc_msgSend(a2, "layer");
  v4 = objc_msgSend(a1, "CGContext");
  objc_msgSend(v3, "renderInContext:", v4);

}

uint64_t sub_10055F8E8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for ViewSnapshotter()
{
  return objc_opt_self(_TtC5Books15ViewSnapshotter);
}

uint64_t sub_10055F934()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10055F958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 96) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10055F9E4(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  _QWORD *v16;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  v5 = *((_QWORD *)v1 + 2);
  v6 = *((_QWORD *)v1 + 3);
  v7 = *((_QWORD *)v1 + 4);
  v8 = *((_QWORD *)v1 + 5);
  v9 = *((_QWORD *)v1 + 6);
  v10 = *((_QWORD *)v1 + 7);
  v11 = v1[8];
  v12 = v1[9];
  v13 = v1[10];
  v14 = v1[11];
  v15 = (uint64_t)v1 + ((v4 + 96) & ~v4);
  v16 = (_QWORD *)swift_task_alloc(dword_1009EB2AC);
  *(_QWORD *)(v2 + 16) = v16;
  *v16 = v2;
  v16[1] = sub_10000AE34;
  return sub_10055F3E8(v11, v12, v13, v14, a1, v5, v6, v7, v8, v9, v10, v15);
}

uint64_t sub_10055FAB8(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 88) = a2;
  *(double *)(v4 + 72) = a3;
  *(double *)(v4 + 80) = a4;
  *(_QWORD *)(v4 + 64) = a1;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 96) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10055FB2C, v6, v7);
}

void sub_10055FB2C()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  __n128 v20;

  swift_release(*((_QWORD *)v0 + 12));
  if (qword_1009CE838 != -1)
    swift_once(&qword_1009CE838, sub_10055F368);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048F64(v1, (uint64_t)qword_1009EB1E8);
  v3 = Logger.logObject.getter(v2);
  v7 = static os_log_type_t.debug.getter(v3, v4, v5, v6);
  if (os_log_type_enabled(v3, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v7, "will render", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }
  v9 = *((_QWORD *)v0 + 11);
  v11 = v0[9];
  v10 = v0[10];
  v12 = (void *)*((_QWORD *)v0 + 8);

  v13 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:format:", v9, v11, v10);
  v14 = swift_allocObject(&unk_100910050, 24, 7);
  *(_QWORD *)(v14 + 16) = v12;
  v15 = swift_allocObject(&unk_100910078, 32, 7);
  *(_QWORD *)(v15 + 16) = sub_100560D24;
  *(_QWORD *)(v15 + 24) = v14;
  *((_QWORD *)v0 + 6) = sub_100064AD4;
  *((_QWORD *)v0 + 7) = v15;
  *((_QWORD *)v0 + 2) = _NSConcreteStackBlock;
  *((_QWORD *)v0 + 3) = 1107296256;
  *((_QWORD *)v0 + 4) = sub_100064AFC;
  *((_QWORD *)v0 + 5) = &unk_100910090;
  v16 = _Block_copy(v0 + 2);
  v17 = *((_QWORD *)v0 + 7);
  v18 = v12;
  swift_retain(v15);
  v19 = objc_msgSend(v13, "imageWithActions:", v16, swift_release(v17).n128_f64[0]);

  _Block_release(v16);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation(v15, "", 83, 134, 41, 1);
  swift_release(v15);
  v20 = swift_release(v14);
  if ((v13 & 1) != 0)
    __break(1u);
  else
    (*((void (**)(id, __n128))v0 + 1))(v19, v20);
}

uint64_t sub_10055FD60(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(double *)(v5 + 48) = a4;
  *(double *)(v5 + 56) = a5;
  *(double *)(v5 + 32) = a2;
  *(double *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 24) = a1;
  v6 = type metadata accessor for ContinuousClock(0);
  *(_QWORD *)(v5 + 64) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 72) = v7;
  *(_QWORD *)(v5 + 80) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10055FDC8, 0, 0);
}

uint64_t sub_10055FDC8()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  unint64_t v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v12;
  id v13;
  _QWORD *v14;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void *v24;
  uint8_t *v25;
  id v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, double, double);
  _QWORD *v29;

  v1 = *(double *)(v0 + 32);
  if (v1 <= 0.0 || (v2 = *(double *)(v0 + 40), v2 <= 0.0))
  {
    if (qword_1009CE838 != -1)
      swift_once(&qword_1009CE838, sub_10055F368);
    v16 = *(void **)(v0 + 24);
    v17 = type metadata accessor for Logger(0);
    sub_100048F64(v17, (uint64_t)qword_1009EB1E8);
    v18 = Logger.logObject.getter(v16);
    v22 = static os_log_type_t.debug.getter(v18, v19, v20, v21);
    v23 = os_log_type_enabled(v18, v22);
    v24 = *(void **)(v0 + 24);
    if (v23)
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v25 = 138412290;
      *(_QWORD *)(v0 + 16) = v24;
      v26 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v25 + 4, v25 + 12);
      *v29 = v24;

      _os_log_impl((void *)&_mh_execute_header, v18, v22, "Snapshotting a CGSizeZero view: %@", v25, 0xCu);
      v27 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v29, 1, v27);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {

    }
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v4 = *(double *)(v0 + 48);
    v3 = *(double *)(v0 + 56);
    v5 = sub_100560CC4();
    v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(v5), "preferredFormat");
    *(_QWORD *)(v0 + 88) = v6;
    objc_msgSend(v6, "scale");
    v8 = v7;
    v9 = CGSizeScaleToScreen(v4, v3);
    if (v9 < v1 || v10 < v2)
      v8 = CGSizeScaleThatFitsInCGSize(*(double *)(v0 + 32), *(double *)(v0 + 40), v9, v10);
    objc_msgSend(v6, "setScale:", v8);
    v12 = unk_1009EB2D4;
    v28 = (uint64_t (*)(uint64_t, uint64_t, double, double))((char *)&dword_1009EB2D0 + dword_1009EB2D0);
    v13 = v6;
    v14 = (_QWORD *)swift_task_alloc(v12);
    *(_QWORD *)(v0 + 96) = v14;
    *v14 = v0;
    v14[1] = sub_100560098;
    return v28(*(_QWORD *)(v0 + 24), (uint64_t)v13, *(double *)(v0 + 32), *(double *)(v0 + 40));
  }
}

uint64_t sub_100560098(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1005600F4, 0, 0);
}

uint64_t sub_1005600F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  if (qword_1009CE838 != -1)
    swift_once(&qword_1009CE838, sub_10055F368);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100048F64(v1, (uint64_t)qword_1009EB1E8);
  *(_QWORD *)(v0 + 112) = v2;
  v3 = Logger.logObject.getter(v2);
  v7 = static os_log_type_t.debug.getter(v3, v4, v5, v6);
  if (os_log_type_enabled(v3, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v7, "did render", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  ContinuousClock.init()(v9);
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1009E3628 + dword_1009E3628);
  v10 = (_QWORD *)swift_task_alloc(unk_1009E362C);
  *(_QWORD *)(v0 + 120) = v10;
  *v10 = v0;
  v10[1] = sub_100560230;
  return v12(10000000000000000, 0, 0, 0, 1);
}

uint64_t sub_100560230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v0)
    v6 = sub_100560438;
  else
    v6 = sub_1005602B4;
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_1005602B4(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  void *v13;
  uint8_t *v14;
  uint64_t v15;

  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "we are back, check cancellation", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }
  v5 = *(_QWORD *)(v1 + 128);

  v6 = static Task<>.checkCancellation()();
  if (v5)
  {
    v7 = *(void **)(v1 + 88);

    v8 = *(_QWORD *)(v1 + 80);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v10 = Logger.logObject.getter(v6);
    v11 = static os_log_type_t.debug.getter();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(void **)(v1 + 88);
    if (v12)
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Snapshot task was NOT cancelled!", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

    v15 = *(_QWORD *)(v1 + 104);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v15);
  }
}

uint64_t sub_100560438()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 88);

  v2 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100560484(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_task_switch(sub_10056049C, 0, 0);
}

uint64_t sub_10056049C()
{
  uint64_t v0;
  NSData *v1;
  NSData *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;

  v1 = UIImagePNGRepresentation(*(UIImage **)(v0 + 56));
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 64);
    v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v6 = v5;

    Data.write(to:options:)(v3, 0, v4, v6);
    sub_10005EE1C(v4, v6);
  }
  if (qword_1009CE838 != -1)
    swift_once(&qword_1009CE838, sub_10055F368);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100048F64(v7, (uint64_t)qword_1009EB1E8);
  v9 = Logger.logObject.getter(v8);
  v13 = static os_log_type_t.debug.getter(v9, v10, v11, v12);
  if (os_log_type_enabled(v9, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v13, "Saved snapshot", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_100560790(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v6 + 56) = a2;
  *(double *)(v6 + 40) = a5;
  *(double *)(v6 + 48) = a6;
  *(double *)(v6 + 24) = a3;
  *(double *)(v6 + 32) = a4;
  *(_QWORD *)(v6 + 16) = a1;
  v7 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v6 + 64) = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  *(_QWORD *)(v6 + 72) = v8;
  *(_QWORD *)(v6 + 80) = v9;
  return swift_task_switch(sub_100560808, v8, v9);
}

uint64_t sub_100560808()
{
  uint64_t v0;
  _QWORD *v1;

  static Task<>.checkCancellation()();
  v1 = (_QWORD *)swift_task_alloc(dword_1009EB2C4);
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_100560954;
  return sub_10055FD60(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_100560954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t (*v5)();

  v3 = *(_QWORD **)v2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  v3[12] = a1;
  v3[13] = v1;
  swift_task_dealloc(v4);
  if (v1)
    v5 = sub_100560B38;
  else
    v5 = sub_1005609BC;
  return swift_task_switch(v5, v3[9], v3[10]);
}

uint64_t sub_1005609BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  __n128 v12;
  _QWORD *v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 96);
  if (!v1)
  {
    v12 = swift_release(*(_QWORD *)(v0 + 64));
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v12);
  }
  v2 = *(_QWORD *)(v0 + 104);
  v3 = v1;
  static Task<>.checkCancellation()();
  if (v2)
  {
    swift_release(*(_QWORD *)(v0 + 64));

    if (qword_1009CE838 != -1)
      swift_once(&qword_1009CE838, sub_10055F368);
    v4 = type metadata accessor for Logger(0);
    v5 = sub_100048F64(v4, (uint64_t)qword_1009EB1E8);
    v6 = Logger.logObject.getter(v5);
    v10 = static os_log_type_t.debug.getter(v6, v7, v8, v9);
    if (os_log_type_enabled(v6, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v10, "Scene snapshot cancelled", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }
    swift_errorRelease(v2);

    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v12);
  }
  v14 = (_QWORD *)swift_task_alloc(dword_1009EB2CC);
  *(_QWORD *)(v0 + 112) = v14;
  *v14 = v0;
  v14[1] = sub_100560C2C;
  v15 = *(_QWORD *)(v0 + 56);
  v14[7] = v3;
  v14[8] = v15;
  return swift_task_switch(sub_10056049C, 0, 0);
}

uint64_t sub_100560B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;

  swift_release(*(_QWORD *)(v0 + 64));
  v1 = *(_QWORD *)(v0 + 104);
  if (qword_1009CE838 != -1)
    swift_once(&qword_1009CE838, sub_10055F368);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_1009EB1E8);
  v4 = Logger.logObject.getter(v3);
  v8 = static os_log_type_t.debug.getter(v4, v5, v6, v7);
  if (os_log_type_enabled(v4, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v8, "Scene snapshot cancelled", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }
  swift_errorRelease(v1);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_100560C2C(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  *(_BYTE *)(*v1 + 120) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100560C84, *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_100560C84()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);
  swift_release(*(_QWORD *)(v0 + 64));

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 120));
}

unint64_t sub_100560CC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DC920;
  if (!qword_1009DC920)
  {
    v1 = objc_opt_self(UIGraphicsImageRendererFormat);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009DC920);
  }
  return result;
}

uint64_t sub_100560D00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100560D24(void *a1)
{
  uint64_t v1;

  sub_10055F86C(a1, *(id *)(v1 + 16));
}

uint64_t sub_100560D2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t CarPlayDataManager.__allocating_init(player:libraryProvider:)(uint64_t a1, uint64_t a2)
{
  return sub_100561058(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100562270);
}

double sub_100560D48()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  void *v11;
  double result;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD aBlock[5];
  uint64_t v33;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)&v0[OBJC_IVAR____TtC5Books18CarPlayDataManager_libraryProvider];
  objc_msgSend(v11, "setDelegate:", v1, v8);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books18CarPlayDataManager_player], "addObserver:", v1);
  if (objc_msgSend(v11, "isContentLoaded"))
  {
    v29 = v6;
    v13 = objc_msgSend(v11, "fetchedContent");
    if (v13)
    {
      v14 = v13;
      v15 = sub_100009E04(0, (unint64_t *)&unk_1009DB330, BSUIAsset_ptr);
      v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

    }
    else
    {
      v16 = (uint64_t)_swiftEmptyArrayStorage;
    }
    v30 = v3;
    if ((unint64_t)v16 >> 62)
    {
      if (v16 < 0)
        v25 = v16;
      else
        v25 = v16 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v16);
      v26 = sub_10004CFD4(&qword_1009DA850);
      v18 = _bridgeCocoaArray<A>(_:)(v25, v26, v27);
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      v17 = swift_bridgeObjectRetain(v16);
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v17);
      v18 = v16;
    }
    swift_bridgeObjectRelease(v16);
    v19 = swift_allocObject(&unk_100910198, 32, 7);
    *(_QWORD *)(v19 + 16) = v1;
    *(_QWORD *)(v19 + 24) = v18;
    aBlock[4] = sub_1005633BC;
    v33 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_1009101B0;
    v20 = _Block_copy(aBlock);
    swift_bridgeObjectRetain(v18);
    static DispatchQoS.unspecified.getter(v1);
    v31 = _swiftEmptyArrayStorage;
    v21 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v22 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v23 = sub_1000652E4((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v31, v22, v23, v2, v21);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v29);
    v24 = v33;
    swift_bridgeObjectRelease(v18);
    *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  }
  return result;
}

uint64_t CarPlayDataManager.init(player:libraryProvider:)(uint64_t a1, uint64_t a2)
{
  return sub_100561058(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_10056201C);
}

uint64_t sub_100561058(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;

  ObjectType = swift_getObjectType();
  v8 = swift_getObjectType();
  v9 = a3(a1, a2, v3, ObjectType, v8);
  swift_unknownObjectRelease(a1);
  swift_unknownObjectRelease(a2);
  return v9;
}

id CarPlayDataManager.__deallocating_deinit()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books18CarPlayDataManager_player], "removeObserver:", v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlayDataManager();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_1005611E4(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  double result;
  uint64_t v5;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books18CarPlayDataManager_delegate);
  if (Strong)
  {
    v5 = Strong;
    sub_1002D4ED4(a2);
    *(_QWORD *)&result = swift_unknownObjectRelease(v5).n128_u64[0];
  }
  return result;
}

void CarPlayDataManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.CarPlayDataManager", 24, "init()", 6, 0);
  __break(1u);
}

id sub_100561288(uint64_t a1)
{
  char *v1;
  os_log_type_t v2;
  void *v3;
  char *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  Swift::Int v18;
  NSNumber v19;
  objc_class *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  double v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  objc_class *v31;
  char *v32;
  uint64_t *v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;

  v2 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v3 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v2))
  {
    v4 = v1;
    v5 = v3;
    v6 = swift_slowAlloc(22, -1);
    v7 = swift_slowAlloc(64, -1);
    v37 = v7;
    *(_DWORD *)v6 = 136315394;
    ObjectType = swift_getObjectType();
    v9 = _typeName(_:qualified:)(ObjectType, 0);
    v11 = v10;
    v36 = sub_100040F58(v9, v10, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v6 + 4, v6 + 12);

    swift_bridgeObjectRelease(v11);
    *(_WORD *)(v6 + 12) = 2080;
    v36 = sub_100040F58(0xD000000000000016, 0x80000001007D2E80, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37, v6 + 14, v6 + 22);
    _os_log_impl((void *)&_mh_execute_header, v5, v2, "%s %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v7, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  v12 = *(void **)&v1[OBJC_IVAR____TtC5Books18CarPlayDataManager_player];
  if (objc_msgSend(v12, "state") != (id)2)
    return 0;
  v13 = objc_msgSend(v12, "currentAudiobook");
  if (!v13)
    return 0;
  v14 = v13;
  objc_msgSend(v12, "positionInCurrentAudiobook");
  v16 = v15;
  objc_msgSend(v14, "duration");
  if (vabdd_f64(v16, v17) < 0.01)
  {
    v18 = 1;
LABEL_11:
    sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
    v19.super.super.isa = NSNumber.init(integerLiteral:)(v18).super.super.isa;
    goto LABEL_12;
  }
  if (fabs(v16) < 0.01)
  {
    v18 = 0;
    goto LABEL_11;
  }
  if (v17 <= 0.0
    || (v19.super.super.isa = (Class)objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithDouble:", v16 / v17)) == 0)
  {
    swift_unknownObjectRelease(v14);
    return 0;
  }
LABEL_12:
  v20 = v19.super.super.isa;
  v21 = objc_msgSend(v14, "assetID");
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
  v24 = v23;

  *(_QWORD *)&v25 = swift_bridgeObjectRelease(v24).n128_u64[0];
  v26 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0)
    v26 = v22 & 0xFFFFFFFFFFFFLL;
  if (!v26)
  {
    swift_unknownObjectRelease(v14);

    return 0;
  }
  v27 = objc_msgSend(v14, "assetID", v25);
  v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
  v30 = v29;

  v31 = (objc_class *)type metadata accessor for CarPlayListenNowData();
  v32 = (char *)objc_allocWithZone(v31);
  *(_QWORD *)&v32[OBJC_IVAR____TtC5Books20CarPlayListenNowData_updatedReadingProgress] = v20;
  v33 = (uint64_t *)&v32[OBJC_IVAR____TtC5Books20CarPlayListenNowData_assetID];
  *v33 = v28;
  v33[1] = v30;
  v38.receiver = v32;
  v38.super_class = v31;
  v34 = objc_msgSendSuper2(&v38, "init");
  swift_unknownObjectRelease(v14);

  return v34;
}

id sub_100561634()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  double v4;
  CMTimeValue value;
  uint64_t v6;
  CMTimeEpoch epoch;
  int v8;
  int v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  objc_class *v27;
  char *v28;
  uint64_t *v29;
  uint64_t v31;
  char **v32;
  id v33;
  char *v34;
  objc_super v35;
  CMTime time;
  CMTimeRange v37;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5Books18CarPlayDataManager_player);
  v2 = objc_msgSend(v1, "currentAudiobook");
  if (!v2)
    return 0;
  v3 = v2;
  objc_msgSend(v1, "listeningSessionStartTime");
  CMTimeMakeWithSeconds(&v37.start, v4 + 0.5, 1000000000);
  value = v37.start.value;
  v6 = *(_QWORD *)&v37.start.timescale;
  epoch = v37.start.epoch;
  objc_msgSend(v1, "playbackRate");
  v9 = v8;
  if ((unint64_t)objc_msgSend(v1, "currentChapterIndex") < 3)
  {
    v11 = 0;
  }
  else
  {
    v10 = (char *)objc_msgSend(v1, "currentChapterIndex");
    v11 = v10 - 2;
    if ((unint64_t)v10 < 2)
    {
      __break(1u);
      return 0;
    }
  }
  v13 = objc_msgSend(v1, "currentChapterIndex");
  v14 = objc_msgSend(v3, "chapters");
  v15 = (char **)sub_10004CFD4(&qword_1009D7448);
  v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v15);

  if ((unint64_t)v16 >> 62)
    goto LABEL_20;
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v17)
  {
    v32 = v15;
    v33 = v13;
    v34 = v11;
    v18 = 0;
    v13 = (id)(v16 & 0xC000000000000001);
    v15 = &selRef_setupEventDataProvider;
    while (1)
    {
      if (v13)
      {
        v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v18, v16);
      }
      else
      {
        v11 = *(char **)(v16 + 8 * v18 + 32);
        swift_unknownObjectRetain(v11);
      }
      objc_msgSend(v11, "timeRangeInAudiobook", v32);
      time.epoch = epoch;
      time.value = value;
      *(_QWORD *)&time.timescale = v6;
      v19 = CMTimeRangeContainsTime(&v37, &time);
      swift_unknownObjectRelease(v11);
      if (v19)
      {
        v21 = objc_msgSend(v3, "title", swift_bridgeObjectRelease(v16).n128_f64[0]);
        v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v24 = v23;

        v25 = objc_msgSend(v3, "chapters");
        v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v25, v32);

        v27 = (objc_class *)type metadata accessor for CarPlayAudiobookData();
        v28 = (char *)objc_allocWithZone(v27);
        v29 = (uint64_t *)&v28[OBJC_IVAR____TtC5Books20CarPlayAudiobookData_title];
        *v29 = v22;
        v29[1] = v24;
        *(_QWORD *)&v28[OBJC_IVAR____TtC5Books20CarPlayAudiobookData_chapters] = v26;
        *(_QWORD *)&v28[OBJC_IVAR____TtC5Books20CarPlayAudiobookData_firstChapterIndex] = v34;
        *(_QWORD *)&v28[OBJC_IVAR____TtC5Books20CarPlayAudiobookData_sessionStartIndex] = v18;
        *(_QWORD *)&v28[OBJC_IVAR____TtC5Books20CarPlayAudiobookData_currentIndex] = v33;
        *(_DWORD *)&v28[OBJC_IVAR____TtC5Books20CarPlayAudiobookData_playbackRate] = v9;
        v35.receiver = v28;
        v35.super_class = v27;
        v12 = objc_msgSendSuper2(&v35, "init");
        swift_unknownObjectRelease(v3);
        return v12;
      }
      v20 = v18 + 1;
      if (__OFADD__(v18, 1))
        break;
      ++v18;
      if (v20 == v17)
        goto LABEL_16;
    }
    __break(1u);
LABEL_20:
    if (v16 < 0)
      v31 = v16;
    else
      v31 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v17 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v16);
  }
LABEL_16:
  swift_unknownObjectRelease(v3);
  swift_bridgeObjectRelease(v16);
  return 0;
}

Swift::Void __swiftcall CarPlayDataManager.libraryProvider(_:contentDidLoad:)(BKLibraryProvider *_, Swift::OpaquePointer contentDidLoad)
{
  sub_1005622DC((uint64_t)contentDidLoad._rawValue);
}

Swift::Void __swiftcall CarPlayDataManager.libraryProvider(_:contentDidChange:)(BKLibraryProvider *_, Swift::OpaquePointer contentDidChange)
{
  sub_1005628B0((uint64_t)contentDidChange._rawValue);
}

double sub_1005619B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  id v11;
  double result;

  v9 = sub_100009E04(0, (unint64_t *)&unk_1009DB330, BSUIAsset_ptr);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a4, v9);
  swift_unknownObjectRetain(a3);
  v11 = a1;
  a5(v10);
  swift_unknownObjectRelease(a3);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

double CarPlayDataManager.player(_:audiobookWillChange:)(uint64_t a1, void *a2)
{
  return sub_100562E84(a2);
}

double CarPlayDataManager.player(_:audiobookDidChange:)(void *a1, void *a2)
{
  void *v2;
  os_log_type_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  double result;
  NSObject *log;
  uint64_t v21;
  uint64_t v22;

  v5 = static os_log_type_t.default.getter(a1);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v6 = (void *)qword_1009DE420;
  if (os_log_type_enabled((os_log_t)qword_1009DE420, v5))
  {
    swift_unknownObjectRetain_n(a2, 2);
    v7 = v2;
    log = v6;
    v8 = v7;
    v9 = swift_slowAlloc(32, -1);
    v10 = swift_slowAlloc(96, -1);
    v22 = v10;
    *(_DWORD *)v9 = 136315650;
    ObjectType = swift_getObjectType();
    v12 = _typeName(_:qualified:)(ObjectType, 0);
    v14 = v13;
    v21 = sub_100040F58(v12, v13, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v9 + 4, v9 + 12);

    swift_bridgeObjectRelease(v14);
    *(_WORD *)(v9 + 12) = 2080;
    v21 = sub_100040F58(0xD00000000000001DLL, 0x80000001007D2D70, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v9 + 14, v9 + 22);
    *(_WORD *)(v9 + 22) = 2080;
    if (a2)
    {
      v15 = objc_msgSend(a2, "assetID");
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

    }
    else
    {
      v18 = 0xE300000000000000;
      v16 = 7104878;
    }
    v21 = sub_100040F58(v16, v18, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v9 + 24, v9 + 32);
    swift_unknownObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, log, v5, "%s %s current: %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy(v10, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  if (objc_msgSend(a1, "state") == (id)2)
    return sub_100561CC8();
  return result;
}

double sub_100561CC8()
{
  uint64_t v0;
  uint64_t Strong;
  double result;
  _QWORD *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *ObjCClassFromMetadata;
  NSString v8;
  uint64_t v9;

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC5Books18CarPlayDataManager_delegate);
  if (Strong)
  {
    *(_BYTE *)(Strong + OBJC_IVAR____TtC5Books17CarPlayInteractor_hasShownError) = 0;
    *(_QWORD *)&result = swift_unknownObjectRelease(Strong).n128_u64[0];
  }
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books18CarPlayDataManager_lastBookAssetID);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books18CarPlayDataManager_lastBookAssetID + 8);
  if (v4)
  {
    v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0)
      v5 = *v3 & 0xFFFFFFFFFFFFLL;
    if (v5)
    {
      v6 = sub_100009E04(0, &qword_1009EB330, &off_1008E5170);
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v6);
      swift_bridgeObjectRetain(v4);
      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(ObjCClassFromMetadata, "markCarPlayBackgroundBookAsCurrent:", v8, swift_bridgeObjectRelease(v4).n128_f64[0]);

      v9 = v3[1];
      *v3 = 0;
      v3[1] = 0;
      *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
    }
  }
  return result;
}

void CarPlayDataManager.player(_:chapterDidChange:)(uint64_t a1, void *a2)
{
  sub_100563100(a2);
}

void sub_100561E34(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v9;

  swift_unknownObjectRetain(a3);
  swift_unknownObjectRetain(a4);
  v9 = a1;
  a5(a4);
  swift_unknownObjectRelease(a3);
  swift_unknownObjectRelease(a4);

}

double CarPlayDataManager.player(_:stateDidChangeFrom:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double result;

  if (a3 == 2)
    return sub_100561CC8();
  return result;
}

double CarPlayDataManager.player(_:failedWithError:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t Strong;
  double result;
  uint64_t v8;

  v4 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Books18CarPlayDataManager_lastBookAssetID);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books18CarPlayDataManager_lastBookAssetID + 8);
  *v4 = 0;
  v4[1] = 0;
  swift_bridgeObjectRelease(v5);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books18CarPlayDataManager_delegate);
  if (Strong)
  {
    v8 = Strong;
    sub_1002D547C(a2);
    *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  }
  return result;
}

id sub_10056201C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;
  _QWORD *v29;

  v26 = a1;
  v27 = a2;
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &a3[OBJC_IVAR____TtC5Books18CarPlayDataManager_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  v15 = &a3[OBJC_IVAR____TtC5Books18CarPlayDataManager_lastBookAssetID];
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v25 = OBJC_IVAR____TtC5Books18CarPlayDataManager_accessQueue;
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v10);
  v16 = a3;
  static DispatchQoS.unspecified.getter(v16);
  v29 = _swiftEmptyArrayStorage;
  v17 = sub_100008DB0((unint64_t *)&unk_1009E5380, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_10004CFD4((uint64_t *)&unk_1009CEC40);
  v19 = sub_1000652E4((unint64_t *)&qword_1009E5390, (uint64_t *)&unk_1009CEC40);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v18, v19, v4, v17);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001ELL, 0x80000001007B25C0, v9, v6, v13, 0);
  *(_QWORD *)&a3[v25] = v20;
  v21 = v26;
  v22 = v27;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Books18CarPlayDataManager_player] = v26;
  *(_QWORD *)&v16[OBJC_IVAR____TtC5Books18CarPlayDataManager_libraryProvider] = v22;
  swift_unknownObjectRetain(v21);
  swift_unknownObjectRetain(v22);

  v23 = (objc_class *)type metadata accessor for CarPlayDataManager();
  v28.receiver = v16;
  v28.super_class = v23;
  return objc_msgSendSuper2(&v28, "init");
}

id sub_100562270(uint64_t a1, uint64_t a2)
{
  char *v4;

  v4 = (char *)objc_allocWithZone((Class)type metadata accessor for CarPlayDataManager());
  return sub_10056201C(a1, a2, v4);
}

uint64_t type metadata accessor for CarPlayDataManager()
{
  return objc_opt_self(_TtC5Books18CarPlayDataManager);
}

void sub_1005622DC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  void *v13;
  BOOL v14;
  unint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  os_log_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  os_log_t v59;
  int v60;
  void *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t aBlock[5];
  uint64_t v71;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v67 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = static os_log_type_t.default.getter(v11);
  if (qword_1009CE210 != -1)
    swift_once(&qword_1009CE210, sub_10038B1F8);
  v13 = (void *)qword_1009DE420;
  v14 = os_log_type_enabled((os_log_t)qword_1009DE420, (os_log_type_t)v12);
  v15 = (unint64_t)a1 >> 62;
  v68 = v5;
  if (v14)
  {
    v60 = v12;
    v62 = v10;
    v63 = v8;
    v16 = v2;
    swift_bridgeObjectRetain_n(a1, 2);
    v17 = v16;
    v59 = v13;
    v18 = swift_slowAlloc(32, -1);
    v57 = swift_slowAlloc(96, -1);
    aBlock[0] = v57;
    *(_DWORD *)v18 = 136315650;
    ObjectType = swift_getObjectType();
    v20 = _typeName(_:qualified:)(ObjectType, 0);
    v22 = v21;
    v69 = (_QWORD *)sub_100040F58(v20, v21, aBlock);
    v66 = (unint64_t)a1 >> 62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, aBlock, v18 + 4, v18 + 12);

    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v18 + 12) = 2080;
    v69 = (_QWORD *)sub_100040F58(0xD000000000000022, 0x80000001007D2E50, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, aBlock, v18 + 14, v18 + 22);
    v58 = (uint8_t *)v18;
    *(_WORD *)(v18 + 22) = 2080;
    if (v66)
    {
      if (a1 < 0)
        v56 = a1;
      else
        v56 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v23 = _CocoaArrayWrapper.endIndex.getter(v56);
    }
    else
    {
      v23 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
    }
    v64 = v7;
    v65 = v4;
    v61 = v2;
    if (v23)
    {
      if (v23 < 1)
      {
        __break(1u);
        return;
      }
      v24 = 0;
      v25 = _swiftEmptyArrayStorage;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, a1);
        else
          v26 = *(id *)(a1 + 8 * v24 + 32);
        v27 = v26;
        v28 = objc_msgSend(v26, "assetID");
        if (v28)
        {
          v29 = v28;
          v30 = static String._unconditionallyBridgeFromObjectiveC(_:)(v28);
          v32 = v31;

          if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
            v25 = sub_100043ED0(0, v25[2] + 1, 1, v25);
          v34 = v25[2];
          v33 = v25[3];
          if (v34 >= v33 >> 1)
            v25 = sub_100043ED0((_QWORD *)(v33 > 1), v34 + 1, 1, v25);
          v25[2] = v34 + 1;
          v35 = &v25[2 * v34];
          v35[4] = v30;
          v35[5] = v32;
        }
        else
        {

        }
        ++v24;
      }
      while (v23 != v24);
    }
    else
    {
      v25 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(a1);
    v36 = v58;
    v37 = Array.description.getter(v25, &type metadata for String);
    v39 = v38;
    swift_bridgeObjectRelease(v25);
    v69 = (_QWORD *)sub_100040F58(v37, v39, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, aBlock, v36 + 24, v36 + 32);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v39);
    v40 = v59;
    _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v60, "%s %s assets: %s", v36, 0x20u);
    v41 = v57;
    swift_arrayDestroy(v57, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v41, -1, -1);
    swift_slowDealloc(v36, -1, -1);

    v7 = v64;
    v4 = v65;
    v10 = v62;
    v8 = v63;
    v2 = v61;
    v15 = v66;
  }
  if (v15)
  {
    if (a1 < 0)
      v52 = a1;
    else
      v52 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v53 = sub_10004CFD4(&qword_1009DA850);
    v55 = _bridgeCocoaArray<A>(_:)(v52, v53, v54);
    swift_bridgeObjectRelease(a1);
    a1 = v55;
  }
  else
  {
    v42 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v42);
  }
  v43 = swift_allocObject(&unk_100910148, 32, 7);
  *(_QWORD *)(v43 + 16) = v2;
  *(_QWORD *)(v43 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1005633BC;
  v71 = v43;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000147F0;
  aBlock[3] = (uint64_t)&unk_100910160;
  v44 = _Block_copy(aBlock);
  v45 = v2;
  swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v46);
  v69 = _swiftEmptyArrayStorage;
  v47 = v10;
  v48 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v49 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v50 = sub_1000652E4((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v69, v49, v50, v4, v48);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v47, v7, v44);
  _Block_release(v44);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v47, v8);
  v51 = v71;
  swift_bridgeObjectRelease(a1);
  swift_release(v51);
}

