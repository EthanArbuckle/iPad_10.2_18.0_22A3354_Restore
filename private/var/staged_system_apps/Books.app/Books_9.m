void sub_1005E7C2C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  _BYTE v13[24];

  v5 = a4 + 16;
  a2(a5);
  swift_beginAccess(v5, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_externalContentLoadEventHandler;
    v9 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_externalContentLoadEventHandler);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)(v8 + 8);

      ObjectType = swift_getObjectType();
      dispatch thunk of ExternalContentLoadEventHandler.reevaluateCurrentRules()(ObjectType, v11);
      swift_unknownObjectRelease(v10);
    }
    else
    {

    }
  }
}

uint64_t sub_1005E7CCC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  void *Strong;
  uint64_t v6;

  result = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
  if (result)
  {
    v4 = result;
    Strong = (void *)swift_unknownObjectWeakLoadStrong(result + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
    if (Strong)
    {
      v6 = (uint64_t)Strong;
      objc_msgSend(Strong, "assetViewController:presentViewController:animated:completion:", v4, a2, 1, 0);
      swift_unknownObjectRelease(v4);
      v4 = v6;
    }
    return swift_unknownObjectRelease(v4);
  }
  return result;
}

double sub_1005E7D60()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  int v4;
  double result;
  char v6;
  char v7;
  uint64_t v8;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009E4CC0);
  __chkstk_darwin(v0);
  v2 = (uint64_t *)((char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((sub_100437C40() & 1) != 0
    || (sub_10043816C(v2),
        v3 = sub_10004CFD4(&qword_1009E33F0),
        v4 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3),
        sub_100010960((uint64_t)v2, (uint64_t *)&unk_1009E4CC0),
        v4 != 1))
  {
    v6 = sub_100437C40();
    sub_100437D74((v6 & 1) == 0);
    v7 = sub_100437C40();
    return sub_1005DE9FC(v7 & 1);
  }
  return result;
}

uint64_t sub_1005E7E3C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[16];
  uint64_t v8;
  uint64_t v9;

  sub_100210BF4(&v5);
  sub_100025B3C((uint64_t)&v6, (uint64_t)v7, &qword_1009E4CE0);
  sub_100025B3C((uint64_t)v7, (uint64_t)&v8, &qword_1009E4CE0);
  v3 = v8;
  v2 = v9;
  if (!v9)
    v3 = 0;
  *a1 = v3;
  a1[1] = v2;
  return sub_100210D60((uint64_t)v7);
}

uint64_t sub_1005E7EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a4;
  v5 = type metadata accessor for State(0);
  v4[6] = v5;
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MainActor(0);
  v4[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005E7F50, v7, v8);
}

uint64_t sub_1005E7F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
  v5 = v4 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
  swift_beginAccess(v4 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v0 + 16, 0, 0);
  sub_10002CD84(v5, v1, type metadata accessor for State);
  *(_BYTE *)(v1 + *(int *)(v3 + 88)) = (*(_BYTE *)(v1 + *(int *)(v3 + 88)) & 1) == 0;
  swift_retain(v4);
  sub_1003DC7BC(v1);
  swift_release(v4);
  v6 = swift_task_dealloc(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_1005E8018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[5] = v6;
  v4[6] = v7;
  return swift_task_switch(sub_1005E8084, v6, v7);
}

uint64_t sub_1005E8084()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  __n128 v4;

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    v2 = (_QWORD *)swift_task_alloc(dword_1009E7674);
    *(_QWORD *)(v0 + 64) = v2;
    *v2 = v0;
    v2[1] = sub_1005E8118;
    return sub_1004D6CF0();
  }
  else
  {
    v4 = swift_release(*(_QWORD *)(v0 + 32));
    **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 56) == 0;
    return (*(uint64_t (**)(__n128))(v0 + 8))(v4);
  }
}

uint64_t sub_1005E8118()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 56);
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  swift_unknownObjectRelease(v2);
  return swift_task_switch(sub_1005E816C, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1005E816C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005E81B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005E821C, v6, v7);
}

uint64_t sub_1005E821C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
  swift_retain(v2);
  sub_1003DD0CC();
  v3 = swift_release(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_1005E8270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005E82DC, v6, v7);
}

uint64_t sub_1005E82DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 32));
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
  if (Strong)
  {
    sub_1004D70C4();
    v3 = swift_unknownObjectRelease(Strong);
  }
  **(_BYTE **)(v0 + 16) = Strong == 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_1005E8340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a1;
  v4[3] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[4] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005E83AC, v6, v7);
}

uint64_t sub_1005E83AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;

  v1 = *(_QWORD *)(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 32));
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
  if (Strong)
  {
    sub_1004D727C();
    v3 = swift_unknownObjectRelease(Strong);
  }
  **(_BYTE **)(v0 + 16) = Strong == 0;
  return (*(uint64_t (**)(__n128))(v0 + 8))(v3);
}

uint64_t sub_1005E8410(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  __n128 v46;
  void (*v48)(__n128);
  uint64_t v49;
  __n128 v50;
  _BYTE v51[4];
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[2];
  _QWORD v56[3];

  v3 = sub_10004CFD4(&qword_1009E8E90);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v51[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v51[-v8];
  Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
    goto LABEL_8;
  v11 = Strong;
  KeyPath = swift_getKeyPath(&unk_100733558);
  v56[0] = v11;
  v13 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v56, KeyPath, v13);
  swift_release(KeyPath);
  v14 = swift_unknownObjectWeakLoadStrong(v11 + 144);
  swift_release(v11);
  if (!v14)
    goto LABEL_8;
  v15 = (uint64_t *)(v14 + OBJC_IVAR____TtC5Books22PageCurlViewController_tapActionViews);
  swift_beginAccess(v14 + OBJC_IVAR____TtC5Books22PageCurlViewController_tapActionViews, v56, 0, 0);
  v16 = *v15;
  __chkstk_darwin(v17);
  *(_QWORD *)&v51[-16] = a1;
  swift_bridgeObjectRetain(v16);
  sub_1005D7C58((uint64_t (*)(id *, __n128))sub_1005F0860, (uint64_t)&v51[-32], v16);
  v19 = v18;
  swift_unknownObjectRelease(v14);
  swift_bridgeObjectRelease(v16);
  if (v19)
  {
    if (qword_1009CEA40 != -1)
      swift_once(&qword_1009CEA40, sub_1005D8EDC);
    v20 = type metadata accessor for Logger(0);
    sub_100048F64(v20, (uint64_t)qword_1009EFBC0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
    v21 = v19;
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.info.getter(v22);
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc(22, -1);
      v53 = swift_slowAlloc(64, -1);
      v55[0] = v53;
      *(_DWORD *)v25 = 136315394;
      v52 = v24;
      v26 = objc_msgSend(v21, "description");
      v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v29 = v28;

      v54 = sub_100040F58(v27, v29, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v25 + 4, v25 + 12);

      swift_bridgeObjectRelease(v29);
      *(_WORD *)(v25 + 12) = 2080;
      v30 = sub_100030B34(&qword_1009EFE80, &qword_1009E8E90, (uint64_t)&protocol conformance descriptor for RelativeValue<A, B>);
      v31 = dispatch thunk of CustomStringConvertible.description.getter(v3, v30);
      v33 = v32;
      v54 = sub_100040F58(v31, v32, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v25 + 14, v25 + 22);
      v34 = swift_bridgeObjectRelease(v33);
      (*(void (**)(_BYTE *, uint64_t, __n128))(v4 + 8))(v9, v3, v34);
      _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v52, "#unhandled_tap Found chrome view %s at %s ... invoking its action", (uint8_t *)v25, 0x16u);
      v35 = v53;
      swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v9, v3);
    }

    v48 = *(void (**)(__n128))&v21[OBJC_IVAR____TtC5Books15BKTapActionView_action];
    v49 = *(_QWORD *)&v21[OBJC_IVAR____TtC5Books15BKTapActionView_action + 8];
    v50 = swift_retain(v49);
    v48(v50);
    swift_release(v49);

    return 1;
  }
  else
  {
LABEL_8:
    if (qword_1009CEA40 != -1)
      swift_once(&qword_1009CEA40, sub_1005D8EDC);
    v36 = type metadata accessor for Logger(0);
    sub_100048F64(v36, (uint64_t)qword_1009EFBC0);
    v37 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.info.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v55[0] = v41;
      *(_DWORD *)v40 = 136315138;
      v42 = sub_100030B34(&qword_1009EFE80, &qword_1009E8E90, (uint64_t)&protocol conformance descriptor for RelativeValue<A, B>);
      v43 = dispatch thunk of CustomStringConvertible.description.getter(v3, v42);
      v45 = v44;
      v54 = sub_100040F58(v43, v44, v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55, v40 + 4, v40 + 12);
      v46 = swift_bridgeObjectRelease(v45);
      (*(void (**)(_BYTE *, uint64_t, __n128))(v4 + 8))(v6, v3, v46);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "#unhandled_tap No chrome view at %s", v40, 0xCu);
      swift_arrayDestroy(v41, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v41, -1, -1);
      swift_slowDealloc(v40, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    }

    return 0;
  }
}

double sub_1005E8998(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  double result;

  if (qword_1009CEA40 != -1)
    swift_once(&qword_1009CEA40, sub_1005D8EDC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_1009EFBC0);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.info.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "#unhandled_tap toggling chrome", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
  swift_retain(v7);
  sub_1003DD0CC();
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

_QWORD *sub_1005E8A88()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  unint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  int v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE v113[288];
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE v118[40];
  _BYTE v119[48];
  _BYTE v120[16];
  _BYTE v121[48];
  _BYTE v122[96];
  _BYTE v123[96];
  _BYTE v124[96];
  _BYTE v125[96];
  uint64_t v126;
  _BYTE v127[16];
  _BYTE v128[16];
  _BYTE v129[16];
  _QWORD v130[2];
  uint64_t v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  _QWORD v135[12];
  _QWORD v136[12];
  _QWORD v137[12];
  _QWORD v138[8];
  char v139;
  char v140[24];
  uint64_t v141;
  unint64_t v142;
  char v143[8];
  uint64_t v144;
  char v145[24];
  uint64_t v146;
  unint64_t v147;
  char v148[24];
  uint64_t v149;

  v0 = type metadata accessor for Locale(0);
  __chkstk_darwin(v0);
  v2 = (char *)&v91 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for String.LocalizationValue(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v91 - v8;
  sub_100210BF4(&v95);
  sub_100025B3C((uint64_t)&v96, (uint64_t)v129, &qword_1009E4CE0);
  sub_100025B3C((uint64_t)v129, (uint64_t)v130, &qword_1009E4CE0);
  v93 = v3;
  v94 = v2;
  v91 = v6;
  v92 = v4;
  if (v130[1])
  {
    String.LocalizationValue.init(stringLiteral:)(2037411651, 0xE400000000000000);
    v10 = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
    static Locale.current.getter(v10);
    v11 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Copy", 14, 2, v6, 0, 0, 0, v2, "'Copy' menu item", 16, 2);
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    v14 = sub_100043ED0(0, 1, 1, _swiftEmptyArrayStorage);
    v16 = v14[2];
    v15 = v14[3];
    if (v16 >= v15 >> 1)
      v14 = sub_100043ED0((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
    v14[2] = v16 + 1;
    v17 = &v14[2 * v16];
    v17[4] = v11;
    v17[5] = v13;
  }
  else
  {
    v14 = _swiftEmptyArrayStorage;
  }
  sub_100210BF4(&v97);
  sub_100025B3C((uint64_t)&v98, (uint64_t)v128, (uint64_t *)&unk_1009E4CB0);
  sub_100025B3C((uint64_t)v128, (uint64_t)&v131, (uint64_t *)&unk_1009E4CB0);
  if (v131)
  {
    sub_100210BF4(&v99);
    sub_100025B3C((uint64_t)&v100, (uint64_t)v127, (uint64_t *)&unk_1009E4CB0);
    sub_100025B3C((uint64_t)v127, (uint64_t)&v132, (uint64_t *)&unk_1009E4CB0);
    v18 = sub_10069C208((v132 != 0) & v133);
    v20 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_100043ED0(0, v14[2] + 1, 1, v14);
    v22 = v14[2];
    v21 = v14[3];
    if (v22 >= v21 >> 1)
      v14 = sub_100043ED0((_QWORD *)(v21 > 1), v22 + 1, 1, v14);
    v14[2] = v22 + 1;
    v23 = &v14[2 * v22];
    v23[4] = v18;
    v23[5] = v20;
  }
  sub_100210BF4(&v101);
  sub_100025B3C((uint64_t)&v102, (uint64_t)&v126, &qword_1009D2A60);
  sub_100025B3C((uint64_t)&v126, (uint64_t)&v134, &qword_1009D2A60);
  if (v134)
  {
    String.LocalizationValue.init(stringLiteral:)(0x4E206574656C6544, 0xEB0000000065746FLL);
    v25 = v91;
    v24 = v92;
    v26 = v93;
    v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v92 + 16))(v91, v9, v93);
    v28 = v94;
    static Locale.current.getter(v27);
    LOWORD(v90) = 2;
    v29 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Remove_Note", 21, 2, v25, 0, 0, 0, v28, "'Delete Note' menu item", 23, v90);
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v26);
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_100043ED0(0, v14[2] + 1, 1, v14);
    v33 = v14[2];
    v32 = v14[3];
    if (v33 >= v32 >> 1)
      v14 = sub_100043ED0((_QWORD *)(v32 > 1), v33 + 1, 1, v14);
    v14[2] = v33 + 1;
    v34 = &v14[2 * v33];
    v34[4] = v29;
    v34[5] = v31;
  }
  sub_100210BF4(&v103);
  sub_100025B3C((uint64_t)&v104, (uint64_t)v125, &qword_1009D2A70);
  sub_100025B3C((uint64_t)v125, (uint64_t)v135, &qword_1009D2A70);
  if (v135[3])
  {
    sub_100210BF4(&v105);
    sub_100025B3C((uint64_t)&v106, (uint64_t)v124, &qword_1009D2A70);
    sub_100025B3C((uint64_t)v124, (uint64_t)v136, &qword_1009D2A70);
    if (v136[3])
      v35 = v136[7] == 0;
    else
      v35 = 1;
    v36 = !v35;
    v37 = sub_10069C3E0(v36);
    v39 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_100043ED0(0, v14[2] + 1, 1, v14);
    v41 = v14[2];
    v40 = v14[3];
    if (v41 >= v40 >> 1)
      v14 = sub_100043ED0((_QWORD *)(v40 > 1), v41 + 1, 1, v14);
    v14[2] = v41 + 1;
    v42 = &v14[2 * v41];
    v42[4] = v37;
    v42[5] = v39;
  }
  sub_100210BF4(&v107);
  sub_100025B3C((uint64_t)&v108, (uint64_t)v123, &qword_1009D2A70);
  sub_100025B3C((uint64_t)v123, (uint64_t)v137, &qword_1009D2A70);
  if (v137[3])
  {
    sub_100210BF4(&v109);
    sub_100025B3C((uint64_t)&v110, (uint64_t)v122, &qword_1009D2A70);
    sub_100025B3C((uint64_t)v122, (uint64_t)v138, &qword_1009D2A70);
    v43 = sub_10069C044((v138[3] != 0) & v139);
    v45 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_100043ED0(0, v14[2] + 1, 1, v14);
    v47 = v14[2];
    v46 = v14[3];
    if (v47 >= v46 >> 1)
      v14 = sub_100043ED0((_QWORD *)(v46 > 1), v47 + 1, 1, v14);
    v14[2] = v47 + 1;
    v48 = &v14[2 * v47];
    v48[4] = v43;
    v48[5] = v45;
  }
  sub_100210BF4(&v111);
  sub_100025B3C((uint64_t)&v112, (uint64_t)v121, &qword_1009D2AB0);
  sub_100025B3C((uint64_t)v121, (uint64_t)v140, &qword_1009D2AB0);
  v49 = v142;
  if (v142)
  {
    v50 = v141;
    swift_bridgeObjectRetain(v142);
    if (v50)
      goto LABEL_42;
  }
  else
  {
    v50 = 0;
    v49 = 0xE000000000000000;
  }
  if (v49 == 0xE000000000000000)
  {
    swift_bridgeObjectRelease(0xE000000000000000);
    goto LABEL_48;
  }
LABEL_42:
  v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v49, 0, 0xE000000000000000, 0);
  swift_bridgeObjectRelease(v49);
  if ((v51 & 1) == 0)
  {
    v52 = sub_1005565DC(0, 0xE000000000000000);
    v54 = v53;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_100043ED0(0, v14[2] + 1, 1, v14);
    v56 = v14[2];
    v55 = v14[3];
    if (v56 >= v55 >> 1)
      v14 = sub_100043ED0((_QWORD *)(v55 > 1), v56 + 1, 1, v14);
    v14[2] = v56 + 1;
    v57 = &v14[2 * v56];
    v57[4] = v52;
    v57[5] = v54;
  }
LABEL_48:
  sub_100210BF4(v113);
  sub_100025B3C((uint64_t)v113, (uint64_t)v120, (uint64_t *)&unk_1009E4CD0);
  sub_100025B3C((uint64_t)v120, (uint64_t)v143, (uint64_t *)&unk_1009E4CD0);
  if (v144)
  {
    String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
    v59 = v91;
    v58 = v92;
    v60 = v93;
    v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v92 + 16))(v91, v9, v93);
    v62 = v94;
    static Locale.current.getter(v61);
    LOWORD(v90) = 2;
    v63 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Search", 16, 2, v59, 0, 0, 0, v62, "'Search' menu item", 18, v90);
    v65 = v64;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v60);
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_100043ED0(0, v14[2] + 1, 1, v14);
    v67 = v14[2];
    v66 = v14[3];
    if (v67 >= v66 >> 1)
      v14 = sub_100043ED0((_QWORD *)(v66 > 1), v67 + 1, 1, v14);
    v14[2] = v67 + 1;
    v68 = &v14[2 * v67];
    v68[4] = v63;
    v68[5] = v65;
  }
  sub_100210BF4(&v114);
  sub_100025B3C((uint64_t)&v115, (uint64_t)v119, (uint64_t *)&unk_1009E4CA0);
  sub_100025B3C((uint64_t)v119, (uint64_t)v145, (uint64_t *)&unk_1009E4CA0);
  v69 = v147;
  if (v147)
  {
    v70 = v146;
    swift_bridgeObjectRetain(v147);
    if (v70)
      goto LABEL_60;
  }
  else
  {
    v70 = 0;
    v69 = 0xE000000000000000;
  }
  if (v69 == 0xE000000000000000)
  {
    swift_bridgeObjectRelease(0xE000000000000000);
    goto LABEL_66;
  }
LABEL_60:
  v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v70, v69, 0, 0xE000000000000000, 0);
  swift_bridgeObjectRelease(v69);
  if ((v71 & 1) == 0)
  {
    v72 = sub_100556300(0, 0xE000000000000000);
    v74 = v73;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_100043ED0(0, v14[2] + 1, 1, v14);
    v76 = v14[2];
    v75 = v14[3];
    if (v76 >= v75 >> 1)
      v14 = sub_100043ED0((_QWORD *)(v75 > 1), v76 + 1, 1, v14);
    v14[2] = v76 + 1;
    v77 = &v14[2 * v76];
    v77[4] = v72;
    v77[5] = v74;
  }
LABEL_66:
  sub_100210BF4(&v116);
  sub_100025B3C((uint64_t)&v117, (uint64_t)v118, &qword_1009D2B08);
  sub_100025B3C((uint64_t)v118, (uint64_t)v148, &qword_1009D2B08);
  v79 = v93;
  v78 = v94;
  v80 = v91;
  v81 = v92;
  if (v149)
  {
    String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
    v82 = (*(uint64_t (**)(char *, char *, uint64_t))(v81 + 16))(v80, v9, v79);
    static Locale.current.getter(v82);
    LOWORD(v90) = 0;
    v83 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Share", 15, 2, v80, 0, 0, 0, v78, "'Share…' menu item", 20, v90);
    v85 = v84;
    (*(void (**)(char *, uint64_t))(v81 + 8))(v9, v79);
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_100043ED0(0, v14[2] + 1, 1, v14);
    v87 = v14[2];
    v86 = v14[3];
    if (v87 >= v86 >> 1)
      v14 = sub_100043ED0((_QWORD *)(v86 > 1), v87 + 1, 1, v14);
    v14[2] = v87 + 1;
    v88 = &v14[2 * v87];
    v88[4] = v83;
    v88[5] = v85;
  }
  return v14;
}

uint64_t sub_1005E95A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[425] = v2;
  v3[424] = a2;
  v3[423] = a1;
  v4 = type metadata accessor for Locale(0);
  v3[426] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for String.LocalizationValue(0);
  v3[427] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[428] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[429] = swift_task_alloc(v7);
  v3[430] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v3[431] = v8;
  v3[432] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v3[433] = v9;
  v3[434] = v10;
  return swift_task_switch(sub_1005E9674, v9, v10);
}

uint64_t sub_1005E9674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  char v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  unint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  NSObject *v154;
  os_log_type_t v155;
  _BOOL4 v156;
  unint64_t v157;
  uint8_t *v158;
  uint64_t v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  int v168;
  uint64_t v169;
  uint64_t v170;

  v1 = *(_QWORD *)(v0 + 3440);
  v2 = *(_QWORD *)(v0 + 3432);
  v3 = *(_QWORD *)(v0 + 3424);
  v4 = *(_QWORD *)(v0 + 3416);
  v5 = *(_QWORD *)(v0 + 3408);
  v6 = *(_QWORD *)(v0 + 3392);
  v7 = *(_QWORD *)(v0 + 3384);
  String.LocalizationValue.init(stringLiteral:)(2037411651, 0xE400000000000000);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v9 = v8(v2, v1, v4);
  static Locale.current.getter(v9);
  v10 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Copy", 14, 2, v2, 0, 0, 0, v5, "'Copy' menu item", 16, 2);
  v12 = v11;
  v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v13(v1, v4);
  if (v10 == v7 && v12 == v6)
  {
    v14 = *(_QWORD *)(v0 + 3456);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 3392));
    goto LABEL_6;
  }
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, *(_QWORD *)(v0 + 3384), *(_QWORD *)(v0 + 3392), 0);
  swift_bridgeObjectRelease(v12);
  if ((v15 & 1) != 0)
  {
    v14 = *(_QWORD *)(v0 + 3456);
LABEL_6:
    swift_release(v14);
    sub_100210BF4((void *)(v0 + 304));
    sub_100025B3C(v0 + 320, v0 + 3264, &qword_1009E4CE0);
    sub_100025B3C(v0 + 3264, v0 + 3312, &qword_1009E4CE0);
    if (*(_QWORD *)(v0 + 3320))
      sub_10020B0FC();
    goto LABEL_8;
  }
  v19 = *(_QWORD *)(v0 + 3440);
  v20 = *(_QWORD *)(v0 + 3432);
  v21 = *(_QWORD *)(v0 + 3416);
  v22 = *(_QWORD *)(v0 + 3408);
  v23 = *(_QWORD *)(v0 + 3392);
  v24 = *(_QWORD *)(v0 + 3384);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000001007D82D0);
  v25 = v8(v20, v19, v21);
  static Locale.current.getter(v25);
  LOWORD(v160) = 2;
  v26 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Remove_Highlight_and_Note", 35, 2, v20, 0, 0, 0, v22, "'Remove Highlight & Note' menu item", 35, v160);
  v28 = v27;
  v13(v19, v21);
  if (v26 == v24 && v28 == v23)
    goto LABEL_11;
  v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, *(_QWORD *)(v0 + 3384), *(_QWORD *)(v0 + 3392), 0);
  swift_bridgeObjectRelease(v28);
  if ((v29 & 1) != 0)
    goto LABEL_13;
  v32 = *(_QWORD *)(v0 + 3440);
  v33 = *(_QWORD *)(v0 + 3432);
  v34 = *(_QWORD *)(v0 + 3416);
  v35 = *(_QWORD *)(v0 + 3408);
  v36 = *(_QWORD *)(v0 + 3392);
  v37 = *(_QWORD *)(v0 + 3384);
  String.LocalizationValue.init(stringLiteral:)(0xD000000000000010, 0x80000001007B6600);
  v38 = v8(v33, v32, v34);
  static Locale.current.getter(v38);
  LOWORD(v161) = 2;
  v39 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Remove_Highlight", 26, 2, v33, 0, 0, 0, v35, "'Remove Highlight' menu item", 28, v161);
  v41 = v40;
  v13(v32, v34);
  if (v39 == v37 && v41 == v36)
  {
LABEL_11:
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 3392));
    goto LABEL_13;
  }
  v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v41, *(_QWORD *)(v0 + 3384), *(_QWORD *)(v0 + 3392), 0);
  swift_bridgeObjectRelease(v41);
  if ((v42 & 1) != 0)
  {
LABEL_13:
    sub_100210BF4((void *)(v0 + 592));
    sub_100025B3C(v0 + 856, v0 + 3328, (uint64_t *)&unk_1009E4CB0);
    v30 = sub_100025B3C(v0 + 3328, v0 + 3344, (uint64_t *)&unk_1009E4CB0);
    if (*(_QWORD *)(v0 + 3344))
    {
      *(_QWORD *)(v0 + 3480) = static MainActor.shared.getter(v30);
      v31 = (_QWORD *)swift_task_alloc(dword_1009D2A44);
      *(_QWORD *)(v0 + 3488) = v31;
      *v31 = v0;
      v31[1] = sub_1005EA7E8;
      return sub_10020DC08();
    }
    goto LABEL_53;
  }
  v43 = *(_QWORD *)(v0 + 3440);
  v44 = *(_QWORD *)(v0 + 3432);
  v45 = *(_QWORD *)(v0 + 3416);
  v46 = *(_QWORD *)(v0 + 3408);
  v47 = *(_QWORD *)(v0 + 3392);
  v48 = *(_QWORD *)(v0 + 3384);
  String.LocalizationValue.init(stringLiteral:)(0x4E206574656C6544, 0xEB0000000065746FLL);
  v49 = v8(v44, v43, v45);
  static Locale.current.getter(v49);
  LOWORD(v162) = 2;
  v50 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Remove_Note", 21, 2, v44, 0, 0, 0, v46, "'Delete Note' menu item", 23, v162);
  v52 = v51;
  v13(v43, v45);
  if (v50 == v48 && v52 == v47)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 3392));
    goto LABEL_22;
  }
  v53 = (uint64_t *)(v0 + 3384);
  v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v52, *(_QWORD *)(v0 + 3384), *(_QWORD *)(v0 + 3392), 0);
  swift_bridgeObjectRelease(v52);
  if ((v54 & 1) != 0)
  {
LABEL_22:
    sub_100210BF4((void *)(v0 + 1744));
    sub_100025B3C(v0 + 2024, v0 + 3360, &qword_1009D2A60);
    v55 = sub_100025B3C(v0 + 3360, v0 + 3368, &qword_1009D2A60);
    if (*(_QWORD *)(v0 + 3368))
    {
      *(_QWORD *)(v0 + 3496) = static MainActor.shared.getter(v55);
      v56 = (_QWORD *)swift_task_alloc(dword_1009D2A5C);
      *(_QWORD *)(v0 + 3504) = v56;
      *v56 = v0;
      v56[1] = sub_1005EA898;
      return sub_10020E3C4();
    }
LABEL_53:
    swift_release(*(_QWORD *)(v0 + 3456));
    goto LABEL_8;
  }
  v57 = *(_QWORD *)(v0 + 3440);
  v58 = *(_QWORD *)(v0 + 3432);
  v59 = *(_QWORD *)(v0 + 3416);
  v60 = *(_QWORD *)(v0 + 3408);
  v61 = *(_QWORD *)(v0 + 3392);
  v62 = *(_QWORD *)(v0 + 3384);
  String.LocalizationValue.init(stringLiteral:)(0x6867696C68676948, 0xE900000000000074);
  v63 = v8(v58, v57, v59);
  static Locale.current.getter(v63);
  LOWORD(v163) = 2;
  v64 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Edit_Highlight", 24, 2, v58, 0, 0, 0, v60, "'Edit Highlight' menu item", 26, v163);
  v66 = v65;
  v13(v57, v59);
  if (v64 != v62 || v66 != v61)
  {
    v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v66, *(_QWORD *)(v0 + 3384), *(_QWORD *)(v0 + 3392), 0);
    swift_bridgeObjectRelease(v66);
    if ((v67 & 1) != 0)
      goto LABEL_28;
    v69 = *(_QWORD *)(v0 + 3440);
    v70 = *(_QWORD *)(v0 + 3432);
    v71 = *(_QWORD *)(v0 + 3416);
    v72 = *(_QWORD *)(v0 + 3408);
    v73 = *(_QWORD *)(v0 + 3392);
    v74 = *(_QWORD *)(v0 + 3384);
    String.LocalizationValue.init(stringLiteral:)(0x6867696C68676948, 0xE900000000000074);
    v75 = v8(v70, v69, v71);
    static Locale.current.getter(v75);
    LOWORD(v164) = 2;
    v76 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Add_Highlight", 23, 2, v70, 0, 0, 0, v72, "'Add Highlight' menu item", 25, v164);
    v78 = v77;
    v13(v69, v71);
    if (v76 != v74 || v78 != v73)
    {
      v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v76, v78, *(_QWORD *)(v0 + 3384), *(_QWORD *)(v0 + 3392), 0);
      swift_bridgeObjectRelease(v78);
      if ((v79 & 1) != 0)
        goto LABEL_28;
      v80 = *(_QWORD *)(v0 + 3440);
      v81 = *(_QWORD *)(v0 + 3432);
      v82 = *(_QWORD *)(v0 + 3416);
      v83 = *(_QWORD *)(v0 + 3408);
      v84 = *(_QWORD *)(v0 + 3392);
      v85 = *(_QWORD *)(v0 + 3384);
      String.LocalizationValue.init(stringLiteral:)(0x746F4E2074696445, 0xE900000000000065);
      v86 = v8(v81, v80, v82);
      static Locale.current.getter(v86);
      LOWORD(v165) = 2;
      v87 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Edit_Note", 19, 2, v81, 0, 0, 0, v83, "'Edit Note' menu item", 21, v165);
      v89 = v88;
      v13(v80, v82);
      if (v87 == v85 && v89 == v84)
        goto LABEL_35;
      v90 = _stringCompareWithSmolCheck(_:_:expecting:)(v87, v89, *(_QWORD *)(v0 + 3384), *(_QWORD *)(v0 + 3392), 0);
      swift_bridgeObjectRelease(v89);
      if ((v90 & 1) != 0)
        goto LABEL_37;
      v92 = *(_QWORD *)(v0 + 3440);
      v93 = *(_QWORD *)(v0 + 3432);
      v94 = *(_QWORD *)(v0 + 3416);
      v95 = *(_QWORD *)(v0 + 3408);
      v96 = *(_QWORD *)(v0 + 3392);
      v97 = *(_QWORD *)(v0 + 3384);
      String.LocalizationValue.init(stringLiteral:)(0x65746F4E20646441, 0xE800000000000000);
      v98 = v8(v93, v92, v94);
      static Locale.current.getter(v98);
      LOWORD(v166) = 2;
      v99 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Add_Note", 18, 2, v93, 0, 0, 0, v95, "'Add Note' menu item", 20, v166);
      v101 = v100;
      v13(v92, v94);
      if (v99 == v97 && v101 == v96)
      {
LABEL_35:
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 3392));
LABEL_37:
        sub_100210BF4((void *)(v0 + 2032));
        sub_100025B3C(v0 + 2200, v0 + 2896, &qword_1009D2A70);
        sub_100025B3C(v0 + 2896, v0 + 2800, &qword_1009D2A70);
        if (!*(_QWORD *)(v0 + 2824))
          goto LABEL_53;
        v91 = (_QWORD *)swift_task_alloc(dword_1009EFE04);
        *(_QWORD *)(v0 + 3520) = v91;
        *v91 = v0;
        v91[1] = sub_1005EA998;
        return sub_1005E2050();
      }
      v102 = _stringCompareWithSmolCheck(_:_:expecting:)(v99, v101, *(_QWORD *)(v0 + 3384), *(_QWORD *)(v0 + 3392), 0);
      swift_bridgeObjectRelease(v101);
      if ((v102 & 1) != 0)
        goto LABEL_37;
      v103 = *(_QWORD *)(v0 + 3392);
      v104 = *(_QWORD *)(v0 + 3384);
      v105 = sub_1005565DC(0, 0xE000000000000000);
      v107 = v106;
      if (v105 == v104 && v106 == v103)
      {
        swift_bridgeObjectRelease(*(_QWORD *)(v0 + 3392));
      }
      else
      {
        v108 = _stringCompareWithSmolCheck(_:_:expecting:)(v105, v106, *v53, *(_QWORD *)(v0 + 3392), 0);
        swift_bridgeObjectRelease(v107);
        if ((v108 & 1) == 0)
        {
          v114 = *(_QWORD *)(v0 + 3440);
          v115 = *(_QWORD *)(v0 + 3432);
          v116 = *(_QWORD *)(v0 + 3416);
          v117 = *(_QWORD *)(v0 + 3408);
          v118 = *(_QWORD *)(v0 + 3392);
          v119 = *(_QWORD *)(v0 + 3384);
          String.LocalizationValue.init(stringLiteral:)(0x686372616553, 0xE600000000000000);
          v120 = v8(v115, v114, v116);
          static Locale.current.getter(v120);
          LOWORD(v167) = 2;
          v121 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Search", 16, 2, v115, 0, 0, 0, v117, "'Search' menu item", 18, v167);
          v123 = v122;
          v13(v114, v116);
          if (v121 == v119 && v123 == v118)
          {
            v124 = *(_QWORD *)(v0 + 3456);
            swift_bridgeObjectRelease(*(_QWORD *)(v0 + 3392));
          }
          else
          {
            v126 = _stringCompareWithSmolCheck(_:_:expecting:)(v121, v123, *(_QWORD *)(v0 + 3384), *(_QWORD *)(v0 + 3392), 0);
            swift_bridgeObjectRelease(v123);
            if ((v126 & 1) == 0)
            {
              v127 = *(_QWORD *)(v0 + 3392);
              v128 = *(_QWORD *)(v0 + 3384);
              v129 = sub_100556300(0, 0xE000000000000000);
              v131 = v130;
              if (v129 == v128 && v130 == v127)
              {
                swift_bridgeObjectRelease(*(_QWORD *)(v0 + 3392));
              }
              else
              {
                v132 = _stringCompareWithSmolCheck(_:_:expecting:)(v129, v130, *v53, *(_QWORD *)(v0 + 3392), 0);
                swift_bridgeObjectRelease(v131);
                if ((v132 & 1) == 0)
                {
                  v138 = *(_QWORD *)(v0 + 3440);
                  v139 = *(_QWORD *)(v0 + 3432);
                  v140 = *(_QWORD *)(v0 + 3416);
                  v141 = *(_QWORD *)(v0 + 3408);
                  v142 = *(_QWORD *)(v0 + 3392);
                  v143 = *(_QWORD *)(v0 + 3384);
                  String.LocalizationValue.init(stringLiteral:)(0xA680E26572616853, 0xA800000000000000);
                  v144 = v8(v139, v138, v140);
                  static Locale.current.getter(v144);
                  LOWORD(v168) = 0;
                  v145 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Menu_item_Share", 15, 2, v139, 0, 0, 0, v141, "'Share…' menu item", 20, v168);
                  v147 = v146;
                  v13(v138, v140);
                  if (v145 == v143 && v147 == v142)
                  {
                    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 3392));
                  }
                  else
                  {
                    v148 = _stringCompareWithSmolCheck(_:_:expecting:)(v145, v147, *v53, *(_QWORD *)(v0 + 3392), 0);
                    swift_bridgeObjectRelease(v147);
                    if ((v148 & 1) == 0)
                    {
                      swift_release(*(_QWORD *)(v0 + 3456));
                      if (qword_1009CEA40 != -1)
                        swift_once(&qword_1009CEA40, sub_1005D8EDC);
                      v151 = *(_QWORD *)(v0 + 3392);
                      v152 = type metadata accessor for Logger(0);
                      sub_100048F64(v152, (uint64_t)qword_1009EFBC0);
                      v153 = swift_bridgeObjectRetain_n(v151, 2);
                      v154 = Logger.logObject.getter(v153);
                      v155 = static os_log_type_t.error.getter(v154);
                      v156 = os_log_type_enabled(v154, v155);
                      v157 = *(_QWORD *)(v0 + 3392);
                      if (v156)
                      {
                        v169 = *v53;
                        v158 = (uint8_t *)swift_slowAlloc(12, -1);
                        v159 = swift_slowAlloc(32, -1);
                        v170 = v159;
                        *(_DWORD *)v158 = 136315138;
                        swift_bridgeObjectRetain(v157);
                        *(_QWORD *)(v0 + 3376) = sub_100040F58(v169, v157, &v170);
                        UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3376, v0 + 3384, v158 + 4, v158 + 12);
                        swift_bridgeObjectRelease_n(v157, 3);
                        _os_log_impl((void *)&_mh_execute_header, v154, v155, "Unknown bkax action: %s", v158, 0xCu);
                        swift_arrayDestroy(v159, 1, (char *)&type metadata for Any + 8);
                        swift_slowDealloc(v159, -1, -1);
                        swift_slowDealloc(v158, -1, -1);
                      }
                      else
                      {
                        swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 3392), 2);
                      }

                      goto LABEL_8;
                    }
                  }
                  sub_100210BF4((void *)(v0 + 16));
                  sub_100025B3C(v0 + 144, v0 + 3224, &qword_1009D2B08);
                  v149 = sub_100025B3C(v0 + 3224, v0 + 3184, &qword_1009D2B08);
                  if (!*(_QWORD *)(v0 + 3208))
                    goto LABEL_53;
                  *(_QWORD *)(v0 + 3560) = static MainActor.shared.getter(v149);
                  v150 = (_QWORD *)swift_task_alloc(dword_1009D2B04);
                  *(_QWORD *)(v0 + 3568) = v150;
                  *v150 = v0;
                  v150[1] = sub_1005EAB98;
                  return sub_10020CD30();
                }
              }
              sub_100210BF4((void *)(v0 + 880));
              sub_100025B3C(v0 + 960, v0 + 3136, (uint64_t *)&unk_1009E4CA0);
              sub_100025B3C(v0 + 3136, v0 + 3040, (uint64_t *)&unk_1009E4CA0);
              v133 = *(_QWORD *)(v0 + 3072);
              if (v133)
              {
                v134 = *(_QWORD *)(v0 + 3064);
                swift_bridgeObjectRetain(*(_QWORD *)(v0 + 3072));
              }
              else
              {
                v134 = 0;
                v133 = 0xE000000000000000;
              }
              if (v134 || v133 != 0xE000000000000000)
              {
                v135 = _stringCompareWithSmolCheck(_:_:expecting:)(v134, v133, 0, 0xE000000000000000, 0);
                swift_bridgeObjectRelease(v133);
                if ((v135 & 1) != 0)
                  goto LABEL_53;
                *(_QWORD *)(v0 + 3544) = static MainActor.shared.getter(v136);
                v137 = (_QWORD *)swift_task_alloc(dword_1009D2AF4);
                *(_QWORD *)(v0 + 3552) = v137;
                *v137 = v0;
                v137[1] = sub_1005EAAE8;
                return sub_10020C248();
              }
              goto LABEL_51;
            }
            v124 = *(_QWORD *)(v0 + 3456);
          }
          swift_release(v124);
          sub_100210BF4((void *)(v0 + 1168));
          sub_100025B3C(v0 + 1168, v0 + 3296, (uint64_t *)&unk_1009E4CD0);
          sub_100025B3C(v0 + 3296, v0 + 3280, (uint64_t *)&unk_1009E4CD0);
          if (*(_QWORD *)(v0 + 3288))
            sub_1005E2500();
          goto LABEL_8;
        }
      }
      sub_100210BF4((void *)(v0 + 1456));
      sub_100025B3C(v0 + 1488, v0 + 2992, &qword_1009D2AB0);
      sub_100025B3C(v0 + 2992, v0 + 3088, &qword_1009D2AB0);
      v109 = *(_QWORD *)(v0 + 3120);
      if (v109)
      {
        v110 = *(_QWORD *)(v0 + 3112);
        swift_bridgeObjectRetain(*(_QWORD *)(v0 + 3120));
      }
      else
      {
        v110 = 0;
        v109 = 0xE000000000000000;
      }
      if (v110 || v109 != 0xE000000000000000)
      {
        v112 = _stringCompareWithSmolCheck(_:_:expecting:)(v110, v109, 0, 0xE000000000000000, 0);
        swift_bridgeObjectRelease(v109);
        if ((v112 & 1) != 0)
          goto LABEL_53;
        *(_QWORD *)(v0 + 3528) = static MainActor.shared.getter(v113);
        v125 = (_QWORD *)swift_task_alloc(dword_1009D2A94);
        *(_QWORD *)(v0 + 3536) = v125;
        *v125 = v0;
        v125[1] = sub_1005EAA38;
        return sub_10020B330();
      }
LABEL_51:
      v111 = *(_QWORD *)(v0 + 3456);
      swift_bridgeObjectRelease(0xE000000000000000);
      swift_release(v111);
LABEL_8:
      v16 = *(_QWORD *)(v0 + 3432);
      v17 = *(_QWORD *)(v0 + 3408);
      swift_task_dealloc(*(_QWORD *)(v0 + 3440));
      swift_task_dealloc(v16);
      swift_task_dealloc(v17);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 3392));
LABEL_28:
  sub_100210BF4((void *)(v0 + 2320));
  sub_100025B3C(v0 + 2488, v0 + 2608, &qword_1009D2A70);
  sub_100025B3C(v0 + 2608, v0 + 2704, &qword_1009D2A70);
  if (!*(_QWORD *)(v0 + 2728))
    goto LABEL_53;
  v68 = (_QWORD *)swift_task_alloc(dword_1009EFE0C);
  *(_QWORD *)(v0 + 3512) = v68;
  *v68 = v0;
  v68[1] = sub_1005EA948;
  return sub_1005E170C();
}

uint64_t sub_1005EA7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 3448);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 3488));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005EA85C, v2, v3);
}

uint64_t sub_1005EA85C()
{
  _QWORD *v0;

  swift_release(v0[435]);
  return swift_task_switch(sub_1005F19A8, v0[433], v0[434]);
}

uint64_t sub_1005EA898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 3448);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 3504));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005EA90C, v2, v3);
}

uint64_t sub_1005EA90C()
{
  _QWORD *v0;

  swift_release(v0[437]);
  return swift_task_switch(sub_1005F19A8, v0[433], v0[434]);
}

uint64_t sub_1005EA948()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 3512));
  return swift_task_switch(sub_1005F19A8, *(_QWORD *)(v1 + 3464), *(_QWORD *)(v1 + 3472));
}

uint64_t sub_1005EA998()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 3520));
  return swift_task_switch(sub_1005EA9E8, *(_QWORD *)(v1 + 3464), *(_QWORD *)(v1 + 3472));
}

uint64_t sub_1005EA9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 3456));
  v1 = *(_QWORD *)(v0 + 3432);
  v2 = *(_QWORD *)(v0 + 3408);
  swift_task_dealloc(*(_QWORD *)(v0 + 3440));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005EAA38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 3448);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 3536));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005EAAAC, v2, v3);
}

uint64_t sub_1005EAAAC()
{
  _QWORD *v0;

  swift_release(v0[441]);
  return swift_task_switch(sub_1005F19A8, v0[433], v0[434]);
}

uint64_t sub_1005EAAE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 3448);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 3552));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005EAB5C, v2, v3);
}

uint64_t sub_1005EAB5C()
{
  _QWORD *v0;

  swift_release(v0[443]);
  return swift_task_switch(sub_1005F19A8, v0[433], v0[434]);
}

uint64_t sub_1005EAB98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 3448);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 3568));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005EAC0C, v2, v3);
}

uint64_t sub_1005EAC0C()
{
  _QWORD *v0;

  swift_release(v0[445]);
  return swift_task_switch(sub_1005F19A8, v0[433], v0[434]);
}

double sub_1005EAC4C(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  _QWORD *v7;
  id v8;
  id v9;
  double result;

  v7 = (_QWORD *)swift_allocObject(&unk_100916790, 48, 7);
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v7[5] = a3;
  v8 = v3;
  v9 = a1;
  sub_10002ACF0(a2, a3);
  sub_1006498E4((void (*)(uint64_t))sub_1005F0C08, (uint64_t)v7);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

void sub_1005EACC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8, double a9, uint64_t a10)
{
  sub_1005E7060(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

double sub_1005EACD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1005EF6A8(a1, a2, a5, a6);
}

double sub_1005EACEC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  uint64_t v17;

  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router;
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  v11 = *(_QWORD *)(v9 + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = v13 + v7;
  v15 = swift_allocObject(&unk_100916600, v14 + 1, v12 | 7);
  *(_QWORD *)(v15 + 16) = Strong;
  *(_QWORD *)(v15 + 24) = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v15 + v13, v8, v5);
  *(_BYTE *)(v15 + v14) = a2;
  sub_1006499DC((void (*)(uint64_t *__return_ptr, __n128))sub_1005F0944, v15);
  *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  return result;
}

double sub_1005EADF8()
{
  uint64_t v0;
  uint64_t Strong;
  double result;
  uint64_t v3;
  uint64_t v4;

  Strong = swift_weakLoadStrong(v0 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(Strong + 112);
    swift_retain(v4);
    swift_release(v3);
    REActionMenuState.transition(to:)(0x8000000000000000);
    *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  }
  return result;
}

double sub_1005EAE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005F03E0(a1, a3);
}

uint64_t sub_1005EAE64()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = swift_allocObject(&unk_100916470, 24, 7);
  *(_QWORD *)(v1 + 16) = v0;
  v2 = v0;
  v3 = sub_100649AD0((void (*)(uint64_t *__return_ptr, __n128))sub_1005EF488, v1);
  swift_release(v1);
  return v3;
}

double sub_1005EAED0(uint64_t a1, uint64_t a2)
{
  return sub_1005EAF5C(a1, a2, (uint64_t)&unk_1009163D0, (uint64_t)&unk_1009EFE68, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_10030C02C);
}

double sub_1005EAEEC(uint64_t a1, uint64_t a2)
{
  return sub_1005EAF5C(a1, a2, (uint64_t)&unk_1009163A8, (uint64_t)&unk_1009EFE58, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_10030C178);
}

double sub_1005EAF08(uint64_t a1, uint64_t a2)
{
  return sub_1005EAF5C(a1, a2, (uint64_t)&unk_100916380, (uint64_t)&unk_1009EFE48, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_10030C02C);
}

double sub_1005EAF24(uint64_t a1, uint64_t a2)
{
  return sub_1005EAF5C(a1, a2, (uint64_t)&unk_100916358, (uint64_t)&unk_1009EFE38, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_10030C178);
}

double sub_1005EAF40(uint64_t a1, uint64_t a2)
{
  return sub_1005EAF5C(a1, a2, (uint64_t)&unk_100916330, (uint64_t)&unk_1009EFE28, (uint64_t (*)(char *, uint64_t, _QWORD *))sub_10030C178);
}

double sub_1005EAF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *, uint64_t, _QWORD *))
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double result;
  uint64_t v18;

  v9 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  type metadata accessor for MainActor(0);
  v13 = v5;
  v14 = static MainActor.shared.getter(v13);
  v15 = (_QWORD *)swift_allocObject(a3, 40, 7);
  v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = v13;
  v16 = a5(v11, a4, v15);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

uint64_t sub_1005EB050(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1009EFDF4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  return sub_1005E95A0(a1, a2);
}

uint64_t sub_1005EB2AC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  Swift::String v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  Swift::String v14;

  v1 = type metadata accessor for URL(0);
  __chkstk_darwin(v1);
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = URL.pathQueryAndFragmentWithoutLeadingSlash()();
  v14 = v5;
  v6 = sub_1001F15BC();
  if ((Collection.isNotEmpty.getter(&type metadata for String, v6) & 1) != 0)
    sub_1005DF910(v5._countAndFlagsBits, v5._object);
  swift_bridgeObjectRelease(v5._object);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = v0;
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_100916858, 40, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v8;
  v11 = sub_10030C02C((uint64_t)v4, (uint64_t)&unk_1009EFF20, (uint64_t)v10);
  swift_release(v11);
  return 1;
}

uint64_t sub_1005EB694(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v15;
  _BYTE v16[24];

  v2 = type metadata accessor for State(0);
  __chkstk_darwin(v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = OBJC_IVAR____TtC5Books19BookReaderPresenter_presentedExpandedContentViewController;
  v6 = *(void **)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_presentedExpandedContentViewController);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_presentedExpandedContentViewController) = 0;

  v7 = *(_QWORD *)(a1 + v5);
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_stateManager) + 24);
  v9 = v7 != 0;
  v10 = v8 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state;
  swift_beginAccess(v8 + OBJC_IVAR____TtC5Books26BookReaderChromeController_state, v16, 0, 0);
  sub_10002CD84(v10, (uint64_t)v4, type metadata accessor for State);
  v4[6] = v9;
  swift_retain(v8);
  sub_1003DC7BC((uint64_t)v4);
  swift_release(v8);
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_expandedContentPresentedState);
  KeyPath = swift_getKeyPath(&unk_100733580);
  v13 = swift_getKeyPath(&unk_1007335A8);
  HIBYTE(v15) = 0;
  swift_retain(v11);
  return static Published.subscript.setter((char *)&v15 + 7, v11, KeyPath, v13);
}

void sub_1005EB7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void *v12;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v4 = v3;
  v21 = a3;
  v7 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationSharingAssetActivityItemProvider + 8);
  ObjectType = swift_getObjectType();
  dispatch thunk of AssetActivityItemProviding.update(text:cfi:)(a1, a2, 0, 0, ObjectType, v10);
  v12 = (void *)dispatch thunk of AssetActivityItemProviding.makeActivityViewController()(ObjectType, v10);
  v13 = v4 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router;
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  v15 = *(_QWORD *)(v13 + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v7);
  v16 = *(unsigned __int8 *)(v8 + 80);
  v17 = (v16 + 40) & ~v16;
  v18 = (char *)swift_allocObject(&unk_1009167E0, v17 + v9, v16 | 7);
  *((_QWORD *)v18 + 2) = Strong;
  *((_QWORD *)v18 + 3) = v15;
  *((_QWORD *)v18 + 4) = v12;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v18[v17], (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  v19 = v12;
  sub_1006499DC((void (*)(uint64_t *__return_ptr, __n128))sub_1005F0C94, (uint64_t)v18);
  swift_release(v18);

}

double sub_1005EB938(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1005EBC14(a1, a2, a3, a4, a5, (uint64_t)&unk_1009168A8, (void (*)(uint64_t *__return_ptr, __n128))sub_1005F0D64);
}

double sub_1005EB94C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_1005EBCCC(a1, a2, a3, a4, (uint64_t)&unk_100916830, (void (*)(uint64_t *__return_ptr, __n128))sub_1005F0944);
}

double sub_1005EB960(uint64_t a1, uint64_t a2)
{
  return sub_1005EB974(a1, a2, (uint64_t)&unk_100916808, (void (*)(uint64_t))sub_1005F0CE0);
}

double sub_1005EB974(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  void *v4;
  uint64_t v6;
  id v7;
  double result;

  v6 = swift_allocObject(a3, 24, 7);
  *(_QWORD *)(v6 + 16) = v4;
  v7 = v4;
  sub_1006498E4(a4, v6);
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_1005EB9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationSharingAssetActivityItemProvider + 8);
  ObjectType = swift_getObjectType();
  dispatch thunk of AssetActivityItemProviding.update(text:cfi:)(a1, a2, 0, 0, ObjectType, v5);
  v7 = dispatch thunk of AssetActivityItemProviding.pasteboardString()(ObjectType, v5);
  if (v8)
    return v7;
  swift_bridgeObjectRetain(a2);
  return a1;
}

void sub_1005EBA5C(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, BOOL *a6@<X8>)
{
  uint64_t Strong;
  double v13;
  void *v14;
  void *v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;

  if (a1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC5Books33BookReaderContainerViewController_assetViewControllerDelegate);
    if (Strong)
    {
      v14 = (void *)Strong;
      if (a3)
      {
        v17[4] = a3;
        v18 = a4;
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 1107296256;
        v17[2] = sub_1000147F0;
        v17[3] = a5;
        v15 = _Block_copy(v17);
        v16 = v18;
        swift_retain(a4);
        *(_QWORD *)&v13 = swift_release(v16).n128_u64[0];
      }
      else
      {
        v15 = 0;
      }
      objc_msgSend(v14, "assetViewController:presentViewController:animated:completion:", a1, a2, 1, v15, v13);
      swift_unknownObjectRelease(v14);
      _Block_release(v15);
    }
  }
  *a6 = a1 == 0;
}

void sub_1005EBB5C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v6;
  id v7;
  void *v8;

  v2 = v1;
  v3 = OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController);
  if (v4)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    v6 = v4;
    v7 = a1;
    LOBYTE(a1) = static NSObject.== infix(_:_:)(v7, v6);

    if ((a1 & 1) != 0)
    {
      v8 = *(void **)(v2 + v3);
      *(_QWORD *)(v2 + v3) = 0;

    }
  }
}

double sub_1005EBC00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1005EBC14(a1, a2, a3, a4, a5, (uint64_t)&unk_100916948, (void (*)(uint64_t *__return_ptr, __n128))sub_1005F0F0C);
}

double sub_1005EBC14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *__return_ptr, __n128))
{
  uint64_t v7;
  uint64_t v13;
  uint64_t Strong;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  double result;

  v13 = v7 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router;
  Strong = swift_unknownObjectWeakLoadStrong(v13);
  v15 = *(_QWORD *)(v13 + 8);
  v16 = (_QWORD *)swift_allocObject(a6, 56, 7);
  v16[2] = Strong;
  v16[3] = v15;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = a3;
  v17 = a1;
  sub_10002ACF0(a2, a3);
  sub_1006499DC(a7, (uint64_t)v16);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

double sub_1005EBCB8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_1005EBCCC(a1, a2, a3, a4, (uint64_t)&unk_100916920, (void (*)(uint64_t *__return_ptr, __n128))sub_1005F0944);
}

double sub_1005EBCCC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *__return_ptr, __n128))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  void (*v23)(uint64_t *__return_ptr, __n128);

  v23 = a6;
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v6 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router;
  Strong = swift_unknownObjectWeakLoadStrong(v14);
  v16 = *(_QWORD *)(v14 + 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  v17 = *(unsigned __int8 *)(v11 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = v18 + v12;
  v20 = swift_allocObject(a5, v19 + 1, v17 | 7);
  *(_QWORD *)(v20 + 16) = Strong;
  *(_QWORD *)(v20 + 24) = v16;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v20 + v18, v13, v10);
  *(_BYTE *)(v20 + v19) = a2;
  sub_1006499DC(v23, v20);
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_1005EBDE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5[9] = a4;
  v5[10] = a5;
  v6 = type metadata accessor for SelectionInfo.PresentationLifecycle(0);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[12] = v7;
  v5[13] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(sub_10004CFD4(&qword_1009D2A98) - 8);
  v5[14] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v5[15] = v9;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[16] = swift_task_alloc(v10);
  v5[17] = swift_task_alloc(v10);
  v5[18] = swift_task_alloc(v10);
  v11 = sub_10004CFD4(&qword_1009EFD70);
  v5[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v5[20] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  v5[21] = v13;
  v5[22] = v14;
  return swift_task_switch(sub_1005EBEE0, v13, v14);
}

uint64_t sub_1005EBEE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  _QWORD *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  _QWORD *v24;

  v1 = *(_QWORD *)(v0 + 72) + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(v1);
  if (!Strong)
    goto LABEL_7;
  v3 = Strong;
  KeyPath = swift_getKeyPath(&unk_100733528);
  *(_QWORD *)(v0 + 64) = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 64, KeyPath, v5);
  swift_release(KeyPath);
  v6 = swift_weakLoadStrong(v3 + 160);
  *(_QWORD *)(v0 + 184) = v6;
  swift_release(v3);
  if (!v6)
  {
LABEL_7:
    swift_release(*(_QWORD *)(v0 + 160));
    v18 = *(_QWORD *)(v0 + 144);
    v20 = *(_QWORD *)(v0 + 128);
    v19 = *(_QWORD *)(v0 + 136);
    v21 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    v22 = swift_task_dealloc(v21);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v22);
  }
  v7 = swift_weakLoadStrong(v1);
  v8 = *(_QWORD **)(v0 + 152);
  if (v7)
  {
    v9 = v7;
    v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
    swift_retain(v10);
    swift_release(v9);
    v11 = swift_getKeyPath(&unk_1007334B8);
    v12 = swift_getKeyPath(&unk_1007334E0);
    static Published.subscript.getter(v8, v10, v11);
    swift_release(v12);
    swift_release(v11);
    swift_release(v10);
    v13 = type metadata accessor for OverlayViewModel.Overlay(0);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v8, 1, v13) != 1)
    {
      v14 = *(_QWORD *)(v0 + 152);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v13);
      sub_10002C8F0(v14, type metadata accessor for OverlayViewModel.Overlay);
      if (EnumCaseMultiPayload == 2)
      {
        v16 = (_QWORD *)swift_task_alloc(dword_1009EFD7C);
        *(_QWORD *)(v0 + 192) = v16;
        *v16 = v0;
        v16[1] = sub_1005EC170;
        return sub_1005E26A8();
      }
      goto LABEL_10;
    }
  }
  else
  {
    v23 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
  }
  sub_100010960(*(_QWORD *)(v0 + 152), &qword_1009EFD70);
LABEL_10:
  v24 = (_QWORD *)swift_task_alloc(async function pointer to BookContentModule.revealSearchResult(_:)[1]);
  *(_QWORD *)(v0 + 200) = v24;
  *v24 = v0;
  v24[1] = sub_1005EC1E0;
  return BookContentModule.revealSearchResult(_:)(*(_QWORD *)(v0 + 80));
}

uint64_t sub_1005EC170()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *v0;
  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 192));
  v3 = (_QWORD *)swift_task_alloc(async function pointer to BookContentModule.revealSearchResult(_:)[1]);
  *(_QWORD *)(v1 + 200) = v3;
  *v3 = v2;
  v3[1] = sub_1005EC1E0;
  return BookContentModule.revealSearchResult(_:)(*(_QWORD *)(v1 + 80));
}

uint64_t sub_1005EC1E0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 200));
  return swift_task_switch(sub_1005EC22C, *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176));
}

uint64_t sub_1005EC22C()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = swift_release(*(_QWORD *)(v0 + 160));
  v2 = SearchResultType.cfi.getter(v1);
  if (v3)
  {
    v4 = v2;
    v5 = v3;
    v6 = *(_QWORD *)(v0 + 184);
    v25 = *(_QWORD *)(v0 + 144);
    v26 = *(_QWORD *)(v0 + 136);
    v27 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 104);
    v28 = *(_QWORD *)(v0 + 112);
    v29 = *(_QWORD *)(v0 + 120);
    v9 = *(_QWORD *)(v0 + 88);
    v8 = *(_QWORD *)(v0 + 96);
    v10 = *(char **)(v0 + 72);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104))(v7, enum case for SelectionInfo.PresentationLifecycle.removeAfterDisplay(_:), v9);
    BookContentModule.addSelectionInfo(cfi:lifecycle:)(v4, v5, v7);
    v11 = swift_bridgeObjectRelease(v5);
    (*(void (**)(uint64_t, uint64_t, __n128))(v8 + 8))(v7, v9, v11);
    v12 = (uint64_t)&v10[OBJC_IVAR____TtC5Books19BookReaderPresenter_searchHighlightID];
    swift_beginAccess(&v10[OBJC_IVAR____TtC5Books19BookReaderPresenter_searchHighlightID], v0 + 16, 0, 0);
    sub_10000B5E4(v12, v26, &qword_1009D2A98);
    swift_beginAccess(v12, v0 + 40, 33, 0);
    sub_1005F0808(v25, v12);
    swift_endAccess(v0 + 40);
    sub_10000B5E4(v26, v27, &qword_1009D2A98);
    v13 = *(unsigned __int8 *)(v28 + 80);
    v14 = (v13 + 16) & ~v13;
    v15 = (v29 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
    v16 = swift_allocObject(&unk_1009169C0, v15 + 8, v13 | 7);
    sub_100025B3C(v27, v16 + v14, &qword_1009D2A98);
    *(_QWORD *)(v16 + v15) = v10;
    v17 = v10;
    sub_1006498E4((void (*)(uint64_t))sub_1005F0854, v16);
    swift_release(v16);
    sub_100010960(v25, &qword_1009D2A98);
    sub_100010960(v26, &qword_1009D2A98);
    v18 = v6;
  }
  else
  {
    v18 = *(_QWORD *)(v0 + 184);
  }
  swift_release(v18);
  v19 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 128);
  v20 = *(_QWORD *)(v0 + 136);
  v22 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  v23 = swift_task_dealloc(v22);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v23);
}

double sub_1005EC44C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double result;
  uint64_t v18;

  v3 = type metadata accessor for SearchResultType(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  type metadata accessor for MainActor(0);
  v11 = v1;
  v12 = static MainActor.shared.getter(v11);
  v13 = *(unsigned __int8 *)(v4 + 80);
  v14 = (v13 + 40) & ~v13;
  v15 = (char *)swift_allocObject(&unk_100916998, v14 + v5, v13 | 7);
  *((_QWORD *)v15 + 2) = v12;
  *((_QWORD *)v15 + 3) = &protocol witness table for MainActor;
  *((_QWORD *)v15 + 4) = v11;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v15[v14], v6, v3);
  v16 = sub_10030C02C((uint64_t)v9, (uint64_t)&unk_1009EFF40, (uint64_t)v15);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

double sub_1005EC5B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t Strong;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;

  v4 = a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel;
  Strong = swift_weakLoadStrong(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v7 = Strong;
    v8 = swift_weakLoadStrong(v4);
    if (v8)
    {
      v9 = v8;
      KeyPath = swift_getKeyPath(&unk_100733528);
      v21 = v9;
      v11 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.access<A, B>(_:keyPath:)(&v21, KeyPath, v11);
      swift_release(KeyPath);
      v12 = swift_weakLoadStrong(v9 + 160);
      v13 = swift_release(v9);
      if (v12)
      {
        v14 = BookContentModule.representativePageText.getter(v13);
        v16 = v15;
        v17 = BookContentModule.representativePageTextIsVertical.getter();
        sub_10003F198((_QWORD *)(v7 + 184), *(_QWORD *)(v7 + 208));
        v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_layoutModeProvider + 8);
        ObjectType = swift_getObjectType();
        v20 = dispatch thunk of BookLayoutModeProviding.layoutMode.getter(ObjectType, v18);
        sub_10043ED88(a2, v20, v14, v16, v17 & 1);
        swift_release(v7);
        swift_release(v12);
        *(_QWORD *)&result = swift_bridgeObjectRelease(v16).n128_u64[0];
      }
      else
      {
        *(_QWORD *)&result = swift_release(v7).n128_u64[0];
      }
    }
    else
    {
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    }
  }
  return result;
}

double sub_1005EC73C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  double result;
  uint64_t v12;

  v3 = type metadata accessor for BookThemeEntity(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = __chkstk_darwin(v3);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v6);
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = (v7 + 24) & ~v7;
  v9 = swift_allocObject(&unk_1009169E8, v8 + v5, v7 | 7);
  *(_QWORD *)(v9 + 16) = v1;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v10 = v1;
  sub_1006498E4((void (*)(uint64_t))sub_1005F11CC, v9);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

double sub_1005EC81C(char a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  uint64_t v5;
  uint64_t v6;

  Strong = swift_weakLoadStrong(v1 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
    swift_retain(v6);
    swift_release(v5);
    sub_1003F5040(a1 & 1);
    *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  }
  return result;
}

uint64_t sub_1005EC8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  v7 = sub_10004CFD4(&qword_1009EFD70);
  v6[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v6[7] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v6[8] = v9;
  v6[9] = v10;
  return swift_task_switch(sub_1005EC934, v9, v10);
}

uint64_t sub_1005EC934()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  v2 = *(_QWORD **)(v0 + 48);
  if (!Strong)
  {
    v11 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v2, 1, 1, v11);
    goto LABEL_6;
  }
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v4);
  swift_release(v3);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v6 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v2, v4, KeyPath, v6);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v4);
  v7 = type metadata accessor for OverlayViewModel.Overlay(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v2, 1, v7) == 1)
  {
LABEL_6:
    v12 = *(_QWORD *)(v0 + 48);
    swift_release(*(_QWORD *)(v0 + 56));
    sub_100010960(v12, &qword_1009EFD70);
    goto LABEL_7;
  }
  v8 = *(_QWORD **)(v0 + 48);
  if (swift_getEnumCaseMultiPayload(v8, v7) == 4)
  {
    swift_release(*v8);
    v9 = (_QWORD *)swift_task_alloc(dword_1009EFD7C);
    *(_QWORD *)(v0 + 80) = v9;
    *v9 = v0;
    v9[1] = sub_1005ECC88;
    return sub_1005E26A8();
  }
  swift_release(*(_QWORD *)(v0 + 56));
  sub_10002C8F0((uint64_t)v8, type metadata accessor for OverlayViewModel.Overlay);
LABEL_7:
  sub_1005DF910(*(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005ECC88()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 80));
  return swift_task_switch(sub_1005ECCD4, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1005ECCD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 56));
  sub_1005DF910(*(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1005ECEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_10004CFD4(&qword_1009EFD70);
  v5[4] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v5[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v5[6] = v8;
  v5[7] = v9;
  return swift_task_switch(sub_1005ECF50, v8, v9);
}

uint64_t sub_1005ECF50()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  _QWORD *v14;

  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  v2 = *(_QWORD **)(v0 + 32);
  if (!Strong)
  {
    v9 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v2, 1, 1, v9);
    goto LABEL_6;
  }
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v4);
  swift_release(v3);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v6 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v2, v4, KeyPath);
  swift_release(v6);
  swift_release(KeyPath);
  swift_release(v4);
  v7 = type metadata accessor for OverlayViewModel.Overlay(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v2, 1, v7) == 1)
  {
LABEL_6:
    v10 = *(_QWORD *)(v0 + 32);
    swift_release(*(_QWORD *)(v0 + 40));
    sub_100010960(v10, &qword_1009EFD70);
    goto LABEL_7;
  }
  v8 = *(_QWORD **)(v0 + 32);
  if (swift_getEnumCaseMultiPayload(v8, v7))
  {
    swift_release(*(_QWORD *)(v0 + 40));
    sub_10002C8F0((uint64_t)v8, type metadata accessor for OverlayViewModel.Overlay);
LABEL_7:
    v11 = *(_QWORD *)(v0 + 32);
    sub_10043924C(*(_QWORD *)(v0 + 24));
    v12 = swift_task_dealloc(v11);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v12);
  }
  swift_release(*v8);
  v14 = (_QWORD *)swift_task_alloc(dword_1009EFD7C);
  *(_QWORD *)(v0 + 64) = v14;
  *v14 = v0;
  v14[1] = sub_1005ED100;
  return sub_1005E26A8();
}

uint64_t sub_1005ED100()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  return swift_task_switch(sub_1005ED14C, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1005ED14C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  swift_release(*(_QWORD *)(v0 + 40));
  v1 = *(_QWORD *)(v0 + 32);
  sub_10043924C(*(_QWORD *)(v0 + 24));
  v2 = swift_task_dealloc(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

void sub_1005ED1A0(uint64_t a1@<X0>, void *a2@<X2>, uint64_t a3@<X3>, BOOL *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = sub_10004CFD4((uint64_t *)&unk_1009D2AA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v11 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v10, a3, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    sub_1004D6A20(a2);
    sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D2AA0);
  }
  *a4 = a1 == 0;
}

uint64_t sub_1005ED288@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v5 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(a2, v3, KeyPath, v5);
  swift_release(KeyPath);
  return swift_release(v5);
}

uint64_t sub_1005ED2F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v19 - v8);
  __chkstk_darwin(v10);
  v12 = (char *)&v19 - v11;
  sub_10000B5E4(a1, (uint64_t)&v19 - v11, &qword_1009EFD70);
  v13 = *a2;
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v15 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v9, v13, KeyPath);
  swift_release(KeyPath);
  swift_release(v15);
  v16 = swift_getKeyPath(&unk_1007334B8);
  v17 = swift_getKeyPath(&unk_1007334E0);
  sub_10000B5E4((uint64_t)v12, (uint64_t)v6, &qword_1009EFD70);
  swift_retain(v13);
  static Published.subscript.setter(v6, v13, v16, v17);
  sub_1003F4AE4((uint64_t)v9);
  sub_100010960((uint64_t)v12, &qword_1009EFD70);
  return sub_100010960((uint64_t)v9, &qword_1009EFD70);
}

uint64_t sub_1005ED470@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100733580);
  v5 = swift_getKeyPath(&unk_1007335A8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_1005ED4EC(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  char v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100733580);
  v5 = swift_getKeyPath(&unk_1007335A8);
  v7 = v2;
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

id sub_1005ED55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  objc_class *v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSURL *v34;
  void *v35;
  void *v36;
  NSString v37;
  NSString v38;
  NSString v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  _QWORD v66[5];
  _BYTE v67[48];

  v60 = a6;
  v61 = a8;
  v58 = a5;
  v59 = a7;
  v57 = a3;
  v18 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v62 = *(_QWORD *)(v18 - 8);
  v63 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v21);
  v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100008DB0((unint64_t *)&unk_1009EFF08, type metadata accessor for BookReaderPresenter, (uint64_t)&unk_100733200);
  v25 = (objc_class *)type metadata accessor for FootnoteRouter(0);
  v26 = objc_allocWithZone(v25);
  v27 = swift_unknownObjectRetain(a1);
  v28 = (void *)FootnoteRouter.init(eventHandler:)(v27, v24);
  sub_10002E418((uint64_t)a10, (uint64_t)v67);
  v66[3] = v25;
  v66[4] = &protocol witness table for FootnoteRouter;
  v66[0] = v28;
  v29 = objc_allocWithZone((Class)type metadata accessor for FootnotePresenter(0));
  v65 = v28;
  v64 = FootnotePresenter.init(bookEntity:router:)(v67, v66);
  v30 = objc_allocWithZone((Class)BKExpandedContentResource);
  v31 = objc_msgSend(v30, "init", v57, v58, v59);
  sub_10000B5E4(a2, (uint64_t)v23, (uint64_t *)&unk_1009D23D0);
  v32 = type metadata accessor for URL(0);
  v33 = *(_QWORD *)(v32 - 8);
  v35 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v23, 1, v32) != 1)
  {
    URL._bridgeToObjectiveC()(v34);
    v35 = v36;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v23, v32);
  }
  objc_msgSend(v31, "setSourceURL:", v35);

  if (a4)
  {
    v37 = String._bridgeToObjectiveC()();
    objc_msgSend(v31, "setResource:", v37);

  }
  if (v60)
    v38 = String._bridgeToObjectiveC()();
  else
    v38 = 0;
  objc_msgSend(v31, "setTitle:", v38);

  if (v61)
    v39 = String._bridgeToObjectiveC()();
  else
    v39 = 0;
  objc_msgSend(v31, "setContentType:", v39);

  objc_msgSend(v31, "setZoomScale:", a9);
  v40 = a10[3];
  v41 = a10[4];
  sub_10003F198(a10, v40);
  v42 = (void *)dispatch thunk of BookEntityType.protocolCacheItem.getter(v40, v41);
  objc_msgSend(v31, "setCacheItem:", v42);

  v44 = v62;
  v43 = v63;
  (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v20, enum case for BookContentUserInterfaceStyle.dark(_:), v63);
  v45 = static BookContentUserInterfaceStyle.== infix(_:_:)(a11, v20);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v20, v43);
  v46 = objc_msgSend(objc_allocWithZone((Class)BKFootnoteViewController2), "initWithResource:stylesheetSet:backgroundColor:textColor:", v31, a12, a13, a14);
  v47 = (void *)v64;
  objc_msgSend(v46, "setPresenter:", v64);
  if (v46)
  {
    if ((v45 & 1) != 0)
      v48 = 5;
    else
      v48 = 2;
    objc_msgSend(v46, "setDelegate:", v47);
    v49 = a10[3];
    v50 = a10[4];
    sub_10003F198(a10, v49);
    v51 = v46;
    objc_msgSend(v51, "setAllowsRemoteInspection:", dispatch thunk of BookEntityType.shouldAllowRemoteInspection.getter(v49, v50) & 1);

    v52 = (void *)objc_opt_self(IMThemePage);
    v53 = v51;
    v54 = objc_msgSend(v52, "themeForEPUBTheme:", v48);
    objc_msgSend(v53, "setTheme:", v54);

  }
  v55 = v46;
  objc_msgSend(v55, "prepareForDisplay");

  return v46;
}

double sub_1005ED9AC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double result;
  uint64_t v20;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D2AA0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = swift_allocObject(&unk_100916510, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  sub_10000B5E4(a2, (uint64_t)v7, (uint64_t *)&unk_1009D2AA0);
  type metadata accessor for MainActor(0);
  swift_retain(v12);
  v13 = a1;
  v14 = static MainActor.shared.getter(v13);
  v15 = *(unsigned __int8 *)(v5 + 80);
  v16 = (v15 + 48) & ~v15;
  v17 = (_QWORD *)swift_allocObject(&unk_100916740, v16 + v6, v15 | 7);
  v17[2] = v14;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v12;
  v17[5] = v13;
  sub_100025B3C((uint64_t)v7, (uint64_t)v17 + v16, (uint64_t *)&unk_1009D2AA0);
  swift_release(v12);
  v18 = sub_10030C02C((uint64_t)v10, (uint64_t)&unk_1009EFF00, (uint64_t)v17);
  *(_QWORD *)&result = swift_release(v18).n128_u64[0];
  return result;
}

uint64_t sub_1005EDB4C()
{
  return sub_10000F3B0(105);
}

uint64_t sub_1005EDB54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = v1 + 40;
  v8 = *(_QWORD *)(v1 + 96);
  v9 = *(_BYTE *)(v1 + 104);
  v10 = (_QWORD *)swift_task_alloc(dword_1009D67CC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1001FC2C4;
  return sub_100283BD8(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1005EDBF0()
{
  return sub_10000F3B0(105);
}

uint64_t sub_1005EDBFC()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009EFD34);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1001FC2C4;
  return sub_1005E5DA4();
}

void sub_1005EDC68(uint64_t a1)
{
  uint64_t v1;

  sub_1005E5510(a1, *(void **)(v1 + 16));
}

uint64_t sub_1005EDC70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D6DC0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

double sub_1005EDCD4()
{
  uint64_t v0;

  return sub_1005E3E04(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005EDCDC()
{
  return sub_10000F3B0(105);
}

uint64_t sub_1005EDCE8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for OverlayViewModel.Overlay(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1009EFD5C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_1005E2DF4(a1, v5, v6, v7, v8);
}

uint64_t sub_1005EDD90()
{
  uint64_t v0;

  return sub_1004E74EC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1005EDDB0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BookmarkNotesPresenter(a2, a1);
  return a2;
}

uint64_t sub_1005EDDEC(uint64_t a1, uint64_t a2)
{
  initializeWithTake for BookmarkNotesPresenter(a2, a1);
  return a2;
}

uint64_t sub_1005EDE28(uint64_t a1)
{
  destroy for BookmarkNotesPresenter();
  return a1;
}

uint64_t sub_1005EDE60(uint64_t a1, uint64_t a2)
{
  initializeWithTake for BookmarkNotesPresenter(a2, a1);
  return a2;
}

uint64_t sub_1005EDE9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1005DF88C(a1, a2, *(_BYTE *)(v3 + 16), a3);
}

uint64_t sub_1005EDEA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v1 = type metadata accessor for OverlayViewModel.Overlay(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
    case 3u:
    case 4u:
      swift_release(*v6);
      break;
    case 1u:
      swift_release(*v6);
      swift_bridgeObjectRelease(v6[3]);
      break;
    case 2u:
      v7 = sub_10004CFD4(&qword_1009EFD60);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
      break;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_1005EDF80()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_100916D08, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_1005F1760;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000147F0;
  aBlock[3] = &unk_100916D20;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
  v18 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_1005EE194(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  uint64_t v13;

  if (a1 && (v2 = objc_opt_self(BKLocation), (v3 = swift_dynamicCastObjCClass(a1, v2)) != 0))
  {
    v4 = (void *)v3;
    swift_unknownObjectRetain(a1);
    sub_10043D71C(v4);
  }
  else
  {
    if (qword_1009CEA40 != -1)
      swift_once(&qword_1009CEA40, sub_1005D8EDC);
    v5 = type metadata accessor for Logger(0);
    sub_100048F64(v5, (uint64_t)qword_1009EFBC0);
    v6 = swift_unknownObjectRetain(a1);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v13 = v10;
      *(_DWORD *)v9 = 136315138;
      v12 = sub_100040F58(0xD00000000000001CLL, 0x80000001007D8490, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v9 + 4, v9 + 12);
      swift_unknownObjectRelease(a1);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

      return result;
    }

  }
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

void sub_1005EE380(char a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t Strong;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(NSObject *, uint64_t, uint64_t, uint64_t);
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(NSObject *, uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(NSObject *, uint64_t, uint64_t, uint64_t);
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  _BYTE v108[24];
  _QWORD v109[3];
  uint64_t v110;
  uint64_t v111;
  int v112;
  __int16 v113;

  v105 = a3;
  v8 = type metadata accessor for Locale(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for String.LocalizationValue(0);
  v11 = *(_QWORD *)(v106 - 8);
  __chkstk_darwin(v106);
  v13 = (char *)&v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v102 - v15;
  v17 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v17);
  v19 = ((char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  Strong = swift_weakLoadStrong(v4 + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (Strong)
  {
    v21 = Strong;
    v103 = a2;
    v22 = a1;
    v107 = v19;
    v23 = *(_QWORD *)(Strong + 168);
    swift_retain(v23);
    swift_release(v21);
    v104 = v4;
    v24 = *(_QWORD *)(v4 + OBJC_IVAR____TtC5Books19BookReaderPresenter_bookProviderService)
        + OBJC_IVAR___REBookProviderService_bookEntity;
    swift_beginAccess(v24, v108, 0, 0);
    sub_10002E418(v24, (uint64_t)v109);
    v26 = v110;
    v25 = v111;
    sub_10003F198(v109, v110);
    if ((dispatch thunk of BookEntityType.sample.getter(v26, v25) & 1) != 0)
    {
      v105 = v23;
      v27 = *(_QWORD *)(v23 + 16);
      v28 = type metadata accessor for TaskPriority(0);
      v29 = *(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
      v30 = v107;
      v29(v107, 1, 1, v28);
      v31 = type metadata accessor for MainActor(0);
      swift_retain(v27);
      v102 = v31;
      v33 = static MainActor.shared.getter(v32);
      v34 = (_QWORD *)swift_allocObject(&unk_100916C18, 40, 7);
      v34[2] = v33;
      v34[3] = &protocol witness table for MainActor;
      v34[4] = v27;
      v35 = sub_10030C02C((uint64_t)v30, (uint64_t)&unk_1009F01F0, (uint64_t)v34);
      swift_release(v35);
      if (v22)
      {
        v36 = *(_QWORD *)(v104 + OBJC_IVAR____TtC5Books19BookReaderPresenter_layoutModeProvider + 8);
        ObjectType = swift_getObjectType();
        if (dispatch thunk of BookLayoutModeProviding.layoutMode.getter(ObjectType, v36) == 2)
        {
          v38 = v105;
LABEL_25:
          swift_release(v38);
          _s5Books15CurrentPageViewVwxx_0(v109);
          return;
        }
      }
      v54 = v29;
      String.LocalizationValue.init(stringLiteral:)(0x656C706D6153, 0xE600000000000000);
      v55 = v106;
      v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v106);
      static Locale.current.getter(v56);
      if ((v103 & 1) != 0)
      {
        v57 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Content_header_text_for_sample", 30, 2, v13, 0, 0, 0, v10, "Content header text for sample books", 36, 2);
        v59 = v58;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v55);
        v60 = swift_allocObject(&unk_100916510, 24, 7);
        swift_unknownObjectWeakInit(v60 + 16);
        v61 = v105;
        v45 = *(_QWORD *)(v105 + 16);
        v62 = v107;
        v54(v107, 1, 1, v28);
        swift_retain_n(v45, 2);
        swift_bridgeObjectRetain(v59);
        swift_retain(v60);
        v64 = static MainActor.shared.getter(v63);
        v65 = swift_allocObject(&unk_100916C68, 96, 7);
        *(_QWORD *)(v65 + 16) = v64;
        *(_QWORD *)(v65 + 24) = &protocol witness table for MainActor;
        *(_QWORD *)(v65 + 32) = v45;
        *(_QWORD *)(v65 + 40) = v57;
        *(_QWORD *)(v65 + 48) = v59;
        *(_OWORD *)(v65 + 56) = xmmword_100715FD0;
        *(_WORD *)(v65 + 72) = 1;
        *(_DWORD *)(v65 + 74) = v112;
        *(_WORD *)(v65 + 78) = v113;
        *(_QWORD *)(v65 + 80) = sub_1005F1690;
        *(_QWORD *)(v65 + 88) = v60;
        v66 = sub_10030C02C((uint64_t)v62, (uint64_t)&unk_1009F0200, v65);
        swift_release(v60);
        swift_bridgeObjectRelease(v59);
        v67 = v61;
      }
      else
      {
        v79 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Content_header_text_for_sample", 30, 2, v13, 0, 0, 0, v10, "Content header text for sample books", 36, 2);
        v81 = v80;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v55);
        v82 = v105;
        v45 = *(_QWORD *)(v105 + 16);
        v83 = v107;
        v54(v107, 1, 1, v28);
        swift_retain_n(v45, 2);
        swift_bridgeObjectRetain(v81);
        v85 = static MainActor.shared.getter(v84);
        v86 = swift_allocObject(&unk_100916C40, 96, 7);
        *(_QWORD *)(v86 + 16) = v85;
        *(_QWORD *)(v86 + 24) = &protocol witness table for MainActor;
        *(_QWORD *)(v86 + 32) = v45;
        *(_QWORD *)(v86 + 40) = v79;
        *(_QWORD *)(v86 + 48) = v81;
        *(_QWORD *)(v86 + 56) = 0;
        *(_QWORD *)(v86 + 64) = 0;
        *(_WORD *)(v86 + 72) = 0;
        *(_DWORD *)(v86 + 74) = v112;
        *(_WORD *)(v86 + 78) = v113;
        *(_QWORD *)(v86 + 80) = 0;
        *(_QWORD *)(v86 + 88) = 0;
        v66 = sub_10030C02C((uint64_t)v83, (uint64_t)&unk_1009F01F8, v86);
        swift_bridgeObjectRelease(v81);
        v67 = v82;
      }
    }
    else
    {
      if (v22 == 2)
      {
        v43 = a4;
        if (a4)
        {
          v44 = v23;
          v45 = *(_QWORD *)(v23 + 16);
          v46 = type metadata accessor for TaskPriority(0);
          v47 = v107;
          (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v107, 1, 1, v46);
          type metadata accessor for MainActor(0);
          swift_bridgeObjectRetain_n(v43, 2);
          v48 = swift_retain_n(v45, 2);
          v49 = static MainActor.shared.getter(v48);
          v50 = swift_allocObject(&unk_100916BF0, 96, 7);
          *(_QWORD *)(v50 + 16) = v49;
          *(_QWORD *)(v50 + 24) = &protocol witness table for MainActor;
          v51 = v105;
          *(_QWORD *)(v50 + 32) = v45;
          *(_QWORD *)(v50 + 40) = v51;
          *(_QWORD *)(v50 + 48) = v43;
          *(_OWORD *)(v50 + 56) = xmmword_1007338C0;
          *(_WORD *)(v50 + 72) = 1;
          *(_DWORD *)(v50 + 74) = v112;
          *(_WORD *)(v50 + 78) = v113;
          *(_QWORD *)(v50 + 80) = 0;
          *(_QWORD *)(v50 + 88) = 0;
          v52 = sub_10030C02C((uint64_t)v47, (uint64_t)&unk_1009F01E8, v50);
          swift_bridgeObjectRelease(v43);
          swift_release(v44);
          v53 = v52;
LABEL_24:
          swift_release(v53);
          v38 = v45;
          goto LABEL_25;
        }
      }
      v68 = v23;
      v69 = *(_QWORD *)(v23 + 16);
      v70 = type metadata accessor for TaskPriority(0);
      v71 = *(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56);
      v72 = v107;
      v71(v107, 1, 1, v70);
      type metadata accessor for MainActor(0);
      swift_retain(v69);
      v74 = static MainActor.shared.getter(v73);
      v75 = (_QWORD *)swift_allocObject(&unk_100916B78, 40, 7);
      v75[2] = v74;
      v75[3] = &protocol witness table for MainActor;
      v75[4] = v69;
      v76 = sub_10030C02C((uint64_t)v72, (uint64_t)&unk_1009F01D0, (uint64_t)v75);
      swift_release(v76);
      if (v22)
      {
        v77 = *(_QWORD *)(v104 + OBJC_IVAR____TtC5Books19BookReaderPresenter_layoutModeProvider + 8);
        v78 = swift_getObjectType();
        if (dispatch thunk of BookLayoutModeProviding.layoutMode.getter(v78, v77) == 2)
        {
          v38 = v23;
          goto LABEL_25;
        }
        v96 = v110;
        v97 = v111;
        sub_10003F198(v109, v110);
        v98 = dispatch thunk of BookEntityType.title.getter(v96, v97);
        v91 = v99;
        v45 = *(_QWORD *)(v23 + 16);
        v71(v72, 1, 1, v70);
        swift_retain_n(v45, 2);
        swift_bridgeObjectRetain(v91);
        v101 = static MainActor.shared.getter(v100);
        v94 = swift_allocObject(&unk_100916BA0, 96, 7);
        *(_QWORD *)(v94 + 16) = v101;
        *(_QWORD *)(v94 + 24) = &protocol witness table for MainActor;
        *(_QWORD *)(v94 + 32) = v45;
        *(_QWORD *)(v94 + 40) = v98;
        *(_QWORD *)(v94 + 56) = 0;
        *(_QWORD *)(v94 + 64) = 0;
        *(_QWORD *)(v94 + 48) = v91;
        *(_WORD *)(v94 + 72) = 0;
        *(_DWORD *)(v94 + 74) = v112;
        *(_WORD *)(v94 + 78) = v113;
        *(_QWORD *)(v94 + 80) = 0;
        *(_QWORD *)(v94 + 88) = 0;
        v95 = &unk_1009F01D8;
      }
      else
      {
        v87 = v110;
        v88 = v111;
        sub_10003F198(v109, v110);
        v89 = dispatch thunk of BookEntityType.title.getter(v87, v88);
        v91 = v90;
        v45 = *(_QWORD *)(v23 + 16);
        v71(v72, 1, 1, v70);
        swift_retain_n(v45, 2);
        swift_bridgeObjectRetain(v91);
        v93 = static MainActor.shared.getter(v92);
        v94 = swift_allocObject(&unk_100916BC8, 96, 7);
        *(_QWORD *)(v94 + 16) = v93;
        *(_QWORD *)(v94 + 24) = &protocol witness table for MainActor;
        *(_QWORD *)(v94 + 32) = v45;
        *(_QWORD *)(v94 + 40) = v89;
        *(_QWORD *)(v94 + 56) = 0;
        *(_QWORD *)(v94 + 64) = 0;
        *(_QWORD *)(v94 + 48) = v91;
        *(_WORD *)(v94 + 72) = 0;
        *(_DWORD *)(v94 + 74) = v112;
        *(_WORD *)(v94 + 78) = v113;
        *(_QWORD *)(v94 + 80) = 0;
        *(_QWORD *)(v94 + 88) = 0;
        v95 = &unk_1009F01E0;
      }
      v66 = sub_10030C02C((uint64_t)v72, (uint64_t)v95, v94);
      swift_bridgeObjectRelease(v91);
      v67 = v68;
    }
    swift_release(v67);
    v53 = v66;
    goto LABEL_24;
  }
  if (qword_1009CEA40 != -1)
    swift_once(&qword_1009CEA40, sub_1005D8EDC);
  v39 = type metadata accessor for Logger(0);
  v40 = sub_100048F64(v39, (uint64_t)qword_1009EFBC0);
  v107 = Logger.logObject.getter(v40);
  v41 = static os_log_type_t.error.getter(v107);
  if (os_log_type_enabled(v107, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v107, v41, "Unable to update persistent infobar message because there is no infobar module", v42, 2u);
    swift_slowDealloc(v42, -1, -1);
  }

}

id sub_1005EECB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  NSURL *v20;
  void *v21;
  void *v22;
  int v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  NSURL *v28;
  void *v29;
  void *v30;
  id v31;
  int v32;
  NSURL *v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  id v37;
  uint64_t v38;
  void *v39;
  _QWORD *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  NSURL *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[5];
  _BYTE v72[40];

  v65 = a5;
  v66 = (_QWORD *)a4;
  v69 = a3;
  v70 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v68 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v9);
  v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v65 - v17;
  v19 = sub_100008DB0(&qword_1009EFEB0, type metadata accessor for BookReaderPresenter, (uint64_t)&unk_100733258);
  v67 = a2;
  URL._bridgeToObjectiveC()(v20);
  v22 = v21;
  v23 = BEDoesURLPointToUSDZFile();

  if (v23)
  {
    v66 = v8;
    v24 = v68;
    v25 = objc_msgSend(objc_allocWithZone((Class)BKARQuicklookViewController), "init");
    v26 = URL.absoluteURL.getter();
    URL.standardized.getter(v26);
    v27 = *(void (**)(char *, uint64_t))(v13 + 8);
    v27(v18, v12);
    URL._bridgeToObjectiveC()(v28);
    v30 = v29;
    v27(v15, v12);
    v31 = (id)BEURLHandlerAssetInfoPathForBookURL(v30);

    if (v31)
    {
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v31);

      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v11, v18, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
      v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
      v34 = v69;
      if (v32 == 1)
      {
        v31 = 0;
      }
      else
      {
        URL._bridgeToObjectiveC()(v33);
        v31 = v60;
        v27(v11, v12);
      }
      v59 = v70;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
      v34 = v69;
      v59 = v70;
    }
    v61 = (uint64_t)v66;
    objc_msgSend(v25, "setARModelDataURL:", v31, v65);

    objc_msgSend(v25, "setDataSource:", v25);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 104))(v61, enum case for BookContentUserInterfaceStyle.dark(_:), v59);
    v42 = v25;
    v62 = static BookContentUserInterfaceStyle.== infix(_:_:)(v34, v61);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v61, v59);
    if ((v62 & 1) != 0)
      v63 = 2;
    else
      v63 = 1;
    objc_msgSend(v42, "setOverrideUserInterfaceStyle:", v63);
  }
  else
  {
    v35 = v65;
    v36 = (objc_class *)type metadata accessor for ExpandedContentRouter(0);
    v37 = objc_allocWithZone(v36);
    v38 = swift_unknownObjectRetain(a1);
    v39 = (void *)ExpandedContentRouter.init(eventHandler:)(v38, v19);
    v40 = v66;
    sub_10002E418((uint64_t)v66, (uint64_t)v72);
    v71[3] = v36;
    v71[4] = &protocol witness table for ExpandedContentRouter;
    v71[0] = v39;
    v41 = objc_allocWithZone((Class)type metadata accessor for ExpandedContentPresenter(0));
    v42 = v39;
    v43 = (void *)ExpandedContentPresenter.init(bookEntity:router:)(v72, v71);
    v44 = objc_msgSend(objc_allocWithZone((Class)BKExpandedContentResource), "init");
    URL._bridgeToObjectiveC()(v45);
    v47 = v46;
    objc_msgSend(v44, "setResource:", v46);

    v48 = v40[3];
    v49 = v40[4];
    sub_10003F198(v40, v48);
    v50 = dispatch thunk of BookEntityType.protocolCacheItem.getter(v48, v49);
    objc_msgSend(v44, "setCacheItem:", v50);

    v51 = v68;
    v52 = v70;
    (*(void (**)(char *, _QWORD, uint64_t))(v68 + 104))(v8, enum case for BookContentUserInterfaceStyle.dark(_:), v70);
    LOBYTE(v50) = static BookContentUserInterfaceStyle.== infix(_:_:)(v69, v8);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
    if ((v50 & 1) != 0)
      v53 = 5;
    else
      v53 = 2;
    v54 = objc_msgSend((id)objc_opt_self(IMThemePage), "themeForEPUBTheme:", v53);
    v55 = objc_msgSend(objc_allocWithZone((Class)BKExpandedWebContentViewController2), "initWithResource:", v44);
    v25 = v55;
    if (v55)
    {
      if (v35 == 1)
        objc_msgSend(v55, "showInvertedImage");
      objc_msgSend(v25, "setPresenter:", v43, v65);
      objc_msgSend(v25, "setDelegate:", v43);
      v56 = v40[3];
      v57 = v40[4];
      sub_10003F198(v40, v56);
      objc_msgSend(v25, "setAllowsRemoteInspection:", dispatch thunk of BookEntityType.shouldAllowRemoteInspection.getter(v56, v57) & 1);
      v58 = v25;
      v54 = v54;
      objc_msgSend(v58, "setTheme:", v54);

    }
  }

  return v25;
}

uint64_t sub_1005EF204()
{
  uint64_t v0;

  return sub_1004E5A48(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005EF220(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EFE24);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_1005E8340(a1, v4, v5, v6);
}

uint64_t sub_1005EF290(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EFE34);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_1005E8270(a1, v4, v5, v6);
}

uint64_t sub_1005EF300(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EFE44);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_1005E81B0(a1, v4, v5, v6);
}

uint64_t sub_1005EF370(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EFE54);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_1005E8018(a1, v4, v5, v6);
}

uint64_t sub_1005EF3E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009EFE64);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_1005E7EC0(a1, v4, v5, v6);
}

uint64_t sub_1005EF44C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005EF470(uint64_t a1)
{
  uint64_t v1;

  return sub_100555B24(a1, *(void **)(v1 + 16));
}

uint64_t sub_1005EF478()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005EF488@<X0>(_QWORD *a1@<X8>)
{
  return sub_1005E7E3C(a1);
}

uint64_t sub_1005EF490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = type metadata accessor for MainActor(0);
  v3[6] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v3[7] = v5;
  v3[8] = v6;
  return swift_task_switch(sub_1005EF500, v5, v6);
}

uint64_t sub_1005EF500()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __n128 v8;

  Strong = swift_weakLoadStrong(*(_QWORD *)(v0 + 40) + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
  if (!Strong)
    goto LABEL_4;
  v2 = Strong;
  KeyPath = swift_getKeyPath(&unk_100733528);
  *(_QWORD *)(v0 + 16) = v2;
  v4 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v0 + 16, KeyPath, v4);
  swift_release(KeyPath);
  v5 = swift_weakLoadStrong(v2 + 160);
  *(_QWORD *)(v0 + 72) = v5;
  swift_release(v2);
  if (v5)
  {
    v6 = (_QWORD *)swift_task_alloc(async function pointer to BookContentModule.rects(forCFI:clippedToBounds:)[1]);
    *(_QWORD *)(v0 + 80) = v6;
    *v6 = v0;
    v6[1] = sub_1005EF610;
    return BookContentModule.rects(forCFI:clippedToBounds:)(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), 1);
  }
  else
  {
LABEL_4:
    v8 = swift_release(*(_QWORD *)(v0 + 48));
    return (*(uint64_t (**)(_QWORD, __n128))(v0 + 8))(0, v8);
  }
}

uint64_t sub_1005EF610(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  *(_QWORD *)(*v1 + 88) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_1005EF668, *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1005EF668()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(v1);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 88));
}

double sub_1005EF6A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  double result;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v8 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E6B00((uint64_t)v14);
  v15 = sub_100645AA8(a1, a2, (uint64_t)v14, a3);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15)
  {
    v17 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
    v18 = swift_allocObject(&unk_100916510, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    type metadata accessor for MainActor(0);
    swift_retain(v18);
    v19 = v15;
    v20 = static MainActor.shared.getter(v19);
    v21 = (_QWORD *)swift_allocObject(&unk_1009166F0, 81, 7);
    v21[2] = v20;
    v21[3] = &protocol witness table for MainActor;
    v21[4] = v18;
    v21[5] = v19;
    sub_100025B3C(a4, (uint64_t)(v21 + 6), &qword_1009D4AD0);
    swift_release(v18);
    v22 = sub_10030C02C((uint64_t)v10, (uint64_t)&unk_1009EFED8, (uint64_t)v21);

    *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  }
  return result;
}

id sub_1005EF86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSString a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  char v16;
  objc_class *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];
  _BYTE v34[40];

  v32 = a6;
  v10 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100008DB0(&qword_1009EFEB0, type metadata accessor for BookReaderPresenter, (uint64_t)&unk_100733258);
  v15 = objc_msgSend(objc_allocWithZone((Class)BKExpandedContentResource), "init");
  objc_msgSend(v15, "setResource:", a2);
  if (a5)
    a5 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "setTitle:", a5);

  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, enum case for BookContentUserInterfaceStyle.dark(_:), v10);
  v16 = static BookContentUserInterfaceStyle.== infix(_:_:)(a3, v13);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v17 = (objc_class *)type metadata accessor for ExpandedContentRouter(0);
  objc_allocWithZone(v17);
  v18 = swift_unknownObjectRetain(a1);
  v19 = (void *)ExpandedContentRouter.init(eventHandler:)(v18, v14);
  sub_10002E418(v32, (uint64_t)v34);
  v33[3] = v17;
  v33[4] = &protocol witness table for ExpandedContentRouter;
  v33[0] = v19;
  v20 = objc_allocWithZone((Class)type metadata accessor for ExpandedContentPresenter(0));
  v21 = v19;
  v22 = (void *)ExpandedContentPresenter.init(bookEntity:router:)(v34, v33);
  v23 = objc_msgSend(objc_allocWithZone((Class)BKExpandedImageContentViewController), "initWithResource:", v15);
  if (v23)
  {
    if ((v16 & 1) != 0)
      v24 = 5;
    else
      v24 = 2;
    v25 = (void *)objc_opt_self(IMThemePage);
    v26 = v23;
    v27 = objc_msgSend(v25, "themeForEPUBTheme:", v24);
    objc_msgSend(v26, "setTheme:", v27);

    objc_msgSend(v26, "setPresenter:", v22);
    v28 = v26;
    v29 = v22;
    objc_msgSend(v28, "setDelegate:", v29);

  }
  return v23;
}

id sub_1005EFAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _QWORD *a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSURL *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  Class isa;
  id v32;
  id v33;
  NSURL *v34;
  void *v35;
  void *v36;
  char v37;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;

  v42 = a4;
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for URL(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(a2, a3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100010960((uint64_t)v15, (uint64_t *)&unk_1009D23D0);
    return 0;
  }
  v41 = a5;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  URL._bridgeToObjectiveC()(v20);
  v22 = v21;
  v23 = a7[3];
  v24 = a7[4];
  sub_10003F198(a7, v23);
  v25 = (void *)dispatch thunk of BookEntityType.protocolCacheItem.getter(v23, v24);
  v26 = (id)BEURLHandlerImageDataForiBooksURLUsingCacheItem(v22, v25);

  if (!v26)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    return 0;
  }
  v40 = a6;
  v27 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v26);
  v29 = v28;

  v30 = objc_allocWithZone((Class)UIImage);
  sub_10006CE24(v27, v29);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v32 = objc_msgSend(v30, "initWithData:", isa);
  sub_10005EE1C(v27, v29);

  if (!v32)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    sub_10005EE1C(v27, v29);
    return 0;
  }
  v33 = sub_1005EF86C(a1, (uint64_t)v32, v42, v41, v40, (uint64_t)a7);
  URL._bridgeToObjectiveC()(v34);
  v36 = v35;
  v37 = BEShouldInvertImageURL();

  if ((v37 & 1) != 0 && v33)
  {
    objc_msgSend(v33, "showInvertedImage");

    sub_10005EE1C(v27, v29);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    sub_10005EE1C(v27, v29);

  }
  return v33;
}

void *sub_1005EFDB0(uint64_t a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, _QWORD *a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  objc_class *v24;
  id v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  NSString v34;
  uint64_t v35;
  uint64_t v36;
  NSURL *v37;
  void *v38;
  void *v39;
  NSString v40;
  char v41;
  id v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  _QWORD v60[5];
  _BYTE v61[48];

  v55 = a10;
  v56 = a9;
  v53 = a8;
  v54 = a6;
  v57 = a7;
  v16 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v20);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_100008DB0(&qword_1009EFEB0, type metadata accessor for BookReaderPresenter, (uint64_t)&unk_100733258);
  v24 = (objc_class *)type metadata accessor for ExpandedContentRouter(0);
  v25 = objc_allocWithZone(v24);
  v26 = swift_unknownObjectRetain(a1);
  v27 = (void *)ExpandedContentRouter.init(eventHandler:)(v26, v23);
  sub_10002E418((uint64_t)a11, (uint64_t)v61);
  v60[3] = v24;
  v60[4] = &protocol witness table for ExpandedContentRouter;
  v60[0] = v27;
  v28 = objc_allocWithZone((Class)type metadata accessor for ExpandedContentPresenter(0));
  v59 = v27;
  v58 = ExpandedContentPresenter.init(bookEntity:router:)(v61, v60);
  v29 = objc_allocWithZone((Class)BKExpandedContentResource);
  v30 = objc_msgSend(v29, "init", v53, v54);
  v31 = a11[3];
  v32 = a11[4];
  sub_10003F198(a11, v31);
  v33 = (void *)dispatch thunk of BookEntityType.protocolCacheItem.getter(v31, v32);
  objc_msgSend(v30, "setCacheItem:", v33);

  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setResource:", v34);

  sub_10000B5E4(v55, (uint64_t)v22, (uint64_t *)&unk_1009D23D0);
  v35 = type metadata accessor for URL(0);
  v36 = *(_QWORD *)(v35 - 8);
  v38 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v22, 1, v35) != 1)
  {
    URL._bridgeToObjectiveC()(v37);
    v38 = v39;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v35);
  }
  objc_msgSend(v30, "setSourceURL:", v38);

  objc_msgSend(v30, "setContentSize:", a2, a3);
  objc_msgSend(v30, "setZoomScale:", a4);
  if (v56)
    v40 = String._bridgeToObjectiveC()();
  else
    v40 = 0;
  objc_msgSend(v30, "setTitle:", v40);

  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for BookContentUserInterfaceStyle.dark(_:), v16);
  v41 = static BookContentUserInterfaceStyle.== infix(_:_:)(v57, v19);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v42 = objc_msgSend(objc_allocWithZone((Class)BKExpandedWebContentViewController2), "initWithResource:", v30);
  v43 = v42;
  v44 = (void *)v58;
  if (v42)
  {
    if ((v41 & 1) != 0)
      v45 = 5;
    else
      v45 = 2;
    objc_msgSend(v42, "setPresenter:", v58);
    objc_msgSend(v43, "setDelegate:", v44);
    v46 = a11[3];
    v47 = a11[4];
    sub_10003F198(a11, v46);
    v48 = v43;
    objc_msgSend(v48, "setAllowsRemoteInspection:", dispatch thunk of BookEntityType.shouldAllowRemoteInspection.getter(v46, v47) & 1);

    v49 = (void *)objc_opt_self(IMThemePage);
    v50 = v48;
    v51 = objc_msgSend(v49, "themeForEPUBTheme:", v45);
    objc_msgSend(v50, "setTheme:", v51);

  }
  return v43;
}

void sub_1005F01C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, double a7, double a8, double a9)
{
  uint64_t v9;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _OWORD v35[2];
  char v36;

  v19 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v19);
  v34 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005E6B00((uint64_t)v24);
  v25 = sub_1005EFDB0(v9, a7, a8, a9, a1, a2, (uint64_t)v24, a3, a4, a5, a6);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  if (v25)
  {
    memset(v35, 0, sizeof(v35));
    v36 = 1;
    v26 = type metadata accessor for TaskPriority(0);
    v27 = (uint64_t)v34;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v34, 1, 1, v26);
    v28 = swift_allocObject(&unk_100916510, 24, 7);
    swift_unknownObjectWeakInit(v28 + 16);
    type metadata accessor for MainActor(0);
    swift_retain(v28);
    v29 = v25;
    v30 = static MainActor.shared.getter(v29);
    v31 = (_QWORD *)swift_allocObject(&unk_100916628, 81, 7);
    v31[2] = v30;
    v31[3] = &protocol witness table for MainActor;
    v31[4] = v28;
    v31[5] = v29;
    sub_100025B3C((uint64_t)v35, (uint64_t)(v31 + 6), &qword_1009D4AD0);
    swift_release(v28);
    v32 = sub_10030C02C(v27, (uint64_t)&unk_1009EFEA0, (uint64_t)v31);

    swift_release(v32);
  }
}

double sub_1005F03E0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  double result;
  uint64_t v49;
  char *v50;
  _BYTE v51[24];
  char v52[24];

  v3 = v2;
  v5 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009D2A98);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v49 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v49 - v16;
  v18 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v18);
  v20 = (uint64_t *)((char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2 != 3)
    goto LABEL_8;
  Strong = swift_weakLoadStrong(&v3[OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel]);
  if (!Strong)
  {
    v32 = type metadata accessor for OverlayViewModel.Overlay(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v20, 1, 1, v32);
    goto LABEL_6;
  }
  v22 = Strong;
  v50 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v9;
  v24 = v7;
  v25 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  swift_retain(v25);
  swift_release(v22);
  KeyPath = swift_getKeyPath(&unk_1007334B8);
  v27 = swift_getKeyPath(&unk_1007334E0);
  static Published.subscript.getter(v20, v25, KeyPath);
  v28 = v25;
  v7 = v24;
  v9 = v23;
  v11 = v50;
  swift_release(v28);
  swift_release(KeyPath);
  swift_release(v27);
  v29 = type metadata accessor for OverlayViewModel.Overlay(0);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v20, 1, v29) == 1)
  {
LABEL_6:
    sub_100010960((uint64_t)v20, &qword_1009EFD70);
    v33 = type metadata accessor for SelectionInfo.ID(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v17, 1, 1, v33);
    v34 = (uint64_t)&v3[OBJC_IVAR____TtC5Books19BookReaderPresenter_searchHighlightID];
    swift_beginAccess(&v3[OBJC_IVAR____TtC5Books19BookReaderPresenter_searchHighlightID], v52, 0, 0);
    sub_10000B5E4(v34, (uint64_t)v14, &qword_1009D2A98);
    swift_beginAccess(v34, v51, 33, 0);
    sub_1005F0808((uint64_t)v17, v34);
    swift_endAccess(v51);
    sub_10000B5E4((uint64_t)v14, (uint64_t)v11, &qword_1009D2A98);
    v35 = *(unsigned __int8 *)(v9 + 80);
    v36 = (v35 + 16) & ~v35;
    v37 = (v10 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    v38 = swift_allocObject(&unk_1009164E8, v37 + 8, v35 | 7);
    sub_100025B3C((uint64_t)v11, v38 + v36, &qword_1009D2A98);
    *(_QWORD *)(v38 + v37) = v3;
    v39 = v3;
    sub_1006498E4((void (*)(uint64_t))sub_1005F0854, v38);
    swift_release(v38);
    sub_100010960((uint64_t)v17, &qword_1009D2A98);
    v31 = (uint64_t)v14;
    v30 = &qword_1009D2A98;
    goto LABEL_7;
  }
  v30 = &qword_1009EFD70;
  v31 = (uint64_t)v20;
LABEL_7:
  sub_100010960(v31, v30);
LABEL_8:
  v40 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Books19BookReaderPresenter_readingSettingsProvider + 8];
  ObjectType = swift_getObjectType();
  if ((dispatch thunk of ReadingSettingsProviding.readingLoupeActive.getter(ObjectType, v40) & 1) != 0)
  {
    v42 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v7, 1, 1, v42);
    type metadata accessor for MainActor(0);
    v43 = v3;
    v44 = static MainActor.shared.getter(v43);
    v45 = (_QWORD *)swift_allocObject(&unk_1009164C0, 40, 7);
    v45[2] = v44;
    v45[3] = &protocol witness table for MainActor;
    v45[4] = v43;
    v46 = sub_10030C178((uint64_t)v7, (uint64_t)&unk_1009EFE70, (uint64_t)v45);
  }
  else
  {
    v46 = swift_allocObject(&unk_100916498, 24, 7);
    *(_QWORD *)(v46 + 16) = v3;
    v47 = v3;
    sub_1006498E4((void (*)(uint64_t))sub_1005F07FC, v46);
  }
  *(_QWORD *)&result = swift_release(v46).n128_u64[0];
  return result;
}

double sub_1005F07FC()
{
  uint64_t v0;

  return sub_1005E8998(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005F0808(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D2A98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F0860(uint64_t a1)
{
  uint64_t v1;

  return sub_100502524(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1005F087C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005F08A4(uint64_t a1)
{
  uint64_t v1;

  sub_1005E7C2C(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), 0);
}

uint64_t sub_1005F08C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1005F08F4(uint64_t a1)
{
  uint64_t v1;

  sub_1005E7C2C(a1, *(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), 1);
}

uint64_t sub_1005F0914()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005F094C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009EFE94);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1001FC2C4;
  return sub_1005E5E78(a1, v4, v5, v6, v7, (uint64_t)(v1 + 6));
}

double sub_1005F09CC()
{
  uint64_t v0;

  return sub_1005E62B4(*(void **)(v0 + 16));
}

uint64_t sub_1005F09D4()
{
  uint64_t v0;

  return sub_1005E6304(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005F09EC()
{
  uint64_t v0;

  return sub_1004E6724(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1005F0A10()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 81, 7);
}

uint64_t sub_1005F0A44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D2AA0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 48) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));

  v5 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1005F0AF8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009D2AA0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc(dword_1009EFEF4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1001FC2C4;
  return sub_1005E637C(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1005F0B94()
{
  uint64_t v0;

  return sub_1005E7CCC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1005F0BB4()
{
  uint64_t v0;

  sub_1004E5D78(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1005F0BCC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 32))
    swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

double sub_1005F0C08()
{
  uint64_t v0;

  return sub_1005E5644(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1005F0C14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1005F0C94(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009E7640) - 8) + 80);
  sub_1005ED1A0(*(_QWORD *)(v1 + 16), *(void **)(v1 + 32), v1 + ((v3 + 40) & ~v3), a1);
}

uint64_t sub_1005F0CE0()
{
  uint64_t v0;

  return sub_1005EB694(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005F0CF0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009EFF1C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1001FC2C4;
  return sub_1005E2644();
}

void sub_1005F0D64(BOOL *a1@<X8>)
{
  sub_1005F0F18((uint64_t)&unk_1009168C0, a1);
}

void sub_1005F0D70()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  char *v5;
  unsigned __int8 v6;
  void *v7;
  id v8;

  v1 = OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController;
  v2 = *(void **)&v0[OBJC_IVAR____TtC5Books19BookReaderPresenter_footnoteViewController];
  if (v2)
  {
    v3 = v2;
    if (objc_msgSend(v3, "readyForDisplay"))
    {
      v4 = swift_allocObject(&unk_1009168F8, 32, 7);
      *(_QWORD *)(v4 + 16) = v0;
      *(_QWORD *)(v4 + 24) = v3;
      v8 = v3;
      v5 = v0;
      sub_1006498E4((void (*)(uint64_t))sub_1005F1A74, v4);
      swift_release(v4);

    }
    else
    {
      v6 = objc_msgSend(v3, "failedToLoad");

      if ((v6 & 1) != 0)
      {
        v7 = *(void **)&v0[v1];
        *(_QWORD *)&v0[v1] = 0;

      }
    }
  }
}

uint64_t sub_1005F0E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

void sub_1005F0EBC(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  sub_1005E743C(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 64)), a1);
}

void sub_1005F0F0C(BOOL *a1@<X8>)
{
  sub_1005F0F18((uint64_t)&unk_100916960, a1);
}

void sub_1005F0F18(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t *v2;

  sub_1005EBA5C(v2[2], v2[4], v2[5], v2[6], a1, a2);
}

uint64_t sub_1005F0F3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for SearchResultType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005F0FB8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SearchResultType(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1009EFF3C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1001FC2C4;
  return sub_1005EBDE0(a1, v5, v6, v7, v8);
}

uint64_t sub_1005F1050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(sub_10004CFD4(&qword_1009D2A98) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = type metadata accessor for SelectionInfo.ID(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;

  return swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_1005F1104()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_10004CFD4(&qword_1009D2A98) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1005D900C(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1005F1158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for BookThemeEntity(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005F11CC()
{
  return sub_1005F147C((uint64_t (*)(_QWORD))&type metadata accessor for BookThemeEntity, (uint64_t (*)(_QWORD, uint64_t))sub_1005EC5B0);
}

uint64_t sub_1005F11E8()
{
  uint64_t v0;

  return sub_1004E77A0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

double sub_1005F1204()
{
  uint64_t v0;

  return sub_1005E485C(*(_QWORD *)(v0 + 16));
}

void sub_1005F1214()
{
  uint64_t v0;

  sub_1004E66D0(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1005F122C(uint64_t a1)
{
  uint64_t v1;

  sub_1005DC494(a1, v1);
}

double sub_1005F1234(uint64_t a1)
{
  uint64_t v1;

  return sub_1005DC52C(a1, v1);
}

double sub_1005F1240(uint64_t a1)
{
  uint64_t v1;

  return sub_1005DC664(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1005F1248(uint64_t a1)
{
  uint64_t v1;

  sub_1005DC86C(a1, v1);
}

uint64_t sub_1005F1250()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005F1278()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1005F12A4(char *a1)
{
  uint64_t v1;

  sub_1005DCBE4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

double sub_1005F12B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1005DCD48(a1, v1);
}

void sub_1005F12BC(uint64_t *a1)
{
  uint64_t v1;

  sub_1005DCE38(a1, v1);
}

double sub_1005F12C4(char *a1)
{
  uint64_t v1;

  return sub_1005DD0D8(a1, v1);
}

double sub_1005F12CC(char *a1)
{
  uint64_t v1;

  return sub_1005DD248(a1, v1);
}

double sub_1005F12D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1005DD440(a1, v1);
}

double sub_1005F12DC(char *a1)
{
  uint64_t v1;

  return sub_1005DD5D4(a1, v1);
}

double sub_1005F12E4(char *a1)
{
  uint64_t v1;

  return sub_1005DD6CC(a1, v1);
}

double sub_1005F12EC(char *a1)
{
  uint64_t v1;

  return sub_1005DD7C4(a1, v1);
}

double sub_1005F12F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1005DD9C8(a1, v1);
}

void sub_1005F12FC(uint64_t a1)
{
  uint64_t v1;

  sub_1005DDBC4(a1, v1);
}

void sub_1005F1304(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  sub_1005DE35C(a1, a2, a3, a4, a5, a6, v6);
}

uint64_t sub_1005F130C(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v1 + 16))(*a1, a1[1], *((_QWORD *)a1 + 1), *((_QWORD *)a1 + 2), *((_QWORD *)a1 + 3), *((_QWORD *)a1 + 4));
}

uint64_t sub_1005F133C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>, double a3@<D0>)
{
  uint64_t result;

  result = BEBookLayoutMode.isScroll.getter(*a1, a3);
  *a2 = result & 1;
  return result;
}

double sub_1005F1368(char a1, char a2)
{
  uint64_t v2;

  return sub_1005DE408(a1, a2, v2);
}

uint64_t sub_1005F1370(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

double sub_1005F139C(uint64_t a1)
{
  uint64_t v1;

  return sub_1005DE62C(a1, v1);
}

double sub_1005F13A4(char *a1)
{
  uint64_t v1;

  return sub_1005DE810(a1, v1);
}

double sub_1005F13AC(char *a1)
{
  uint64_t v1;

  return sub_1005DD8D0(a1, v1);
}

void sub_1005F13B4(uint64_t a1)
{
  uint64_t v1;

  sub_1005DCFF0(a1, v1);
}

uint64_t sub_1005F13C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1005F13E8()
{
  uint64_t v0;

  sub_1005DE874(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1005F13F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for BookContentHeaderStyle(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005F1468()
{
  return sub_1005F147C((uint64_t (*)(_QWORD))&type metadata accessor for BookContentHeaderStyle, (uint64_t (*)(_QWORD, uint64_t))sub_1005DE710);
}

uint64_t sub_1005F147C(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

uint64_t sub_1005F14D0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 26, 7);
}

void sub_1005F14F4()
{
  uint64_t v0;

  sub_1005DE474(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

uint64_t sub_1005F1508(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009D67DC);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_100283E14(a1, v4, v5, v6);
}

uint64_t sub_1005F1574()
{
  return sub_10000F3B0(96);
}

uint64_t sub_1005F157C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009D67D4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_100283CEC(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_1005F15F8()
{
  return sub_10000F3B0(96);
}

uint64_t sub_1005F1600(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009D67D4);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return sub_100283CEC(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_1005F167C()
{
  return sub_10000F3B0(96);
}

uint64_t sub_1005F1688()
{
  return sub_10000F3B0(96);
}

double sub_1005F1690()
{
  uint64_t v0;

  return sub_1005E35DC(v0);
}

uint64_t sub_1005F1698()
{
  return sub_10000F3B0(96);
}

double sub_1005F16A0()
{
  uint64_t v0;

  return sub_1005E3610(v0);
}

uint64_t sub_1005F16B0()
{
  uint64_t v0;

  return sub_100300274(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1005F16CC()
{
  return sub_10000F3B0(105);
}

uint64_t sub_1005F16DC()
{
  uint64_t v0;

  return sub_1004E6EC4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1005F1708()
{
  uint64_t v0;

  return sub_1004E63E0(*(_QWORD *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_1005F1728()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

double sub_1005F174C()
{
  uint64_t v0;

  return sub_1005DF1F4(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

double sub_1005F1760()
{
  uint64_t v0;

  return sub_1005DF2E8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1005F1768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain(a2);
  return swift_bridgeObjectRetain(a4);
}

uint64_t destroy for AnnotationLocation(uint64_t *a1)
{
  return sub_1005F17A8(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_1005F17A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRelease(a2);
  return swift_bridgeObjectRelease(a4);
}

uint64_t initializeWithCopy for AnnotationLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1005F1768(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for AnnotationLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1005F1768(*(_QWORD *)a2, v4, v5, v6);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  sub_1005F17A8(v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for AnnotationLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v4;
  sub_1005F17A8(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for AnnotationLocation()
{
  return &type metadata for AnnotationLocation;
}

void sub_1005F1934()
{
  REActionMenuState.transition(to:)(0x8000000000000000);
}

double sub_1005F1964()
{
  uint64_t v0;

  return sub_1005E094C(*(_QWORD *)(v0 + 16));
}

void sub_1005F196C()
{
  REActionMenuState.transition(to:)(0x8000000000000008);
}

uint64_t sub_1005F19E0()
{
  return sub_1005EDD90();
}

void sub_1005F1A44()
{
  sub_1005F0BB4();
}

uint64_t sub_1005F1A58()
{
  return sub_1005F09EC();
}

double sub_1005F1A80@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009D3888, &qword_1009D3890).n128_u64[0];
  return result;
}

__n128 sub_1005F1AD8@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __n128 result;
  unsigned int v39;
  double v40;
  double v41;
  double v42;
  double v43;
  _OWORD v44[7];

  v16 = v15;
  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((a4 & 1) != 0)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v42 = a5;
    v43 = a7;
    v41 = a3;
    v40 = a1;
    v39 = v21;
    v33 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = a15;
    v21 = v39;
    a1 = v40;
    v20 = a10;
    a3 = v41;
    v19 = a12;
    a5 = v42;
    a7 = v43;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v44, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  sub_1005F3894(v16, a9);
  v35 = a9 + *(int *)(sub_10004CFD4(&qword_1009D3D38) + 36);
  v36 = v44[5];
  *(_OWORD *)(v35 + 64) = v44[4];
  *(_OWORD *)(v35 + 80) = v36;
  *(_OWORD *)(v35 + 96) = v44[6];
  v37 = v44[1];
  *(_OWORD *)v35 = v44[0];
  *(_OWORD *)(v35 + 16) = v37;
  result = (__n128)v44[3];
  *(_OWORD *)(v35 + 32) = v44[2];
  *(__n128 *)(v35 + 48) = result;
  return result;
}

uint64_t sub_1005F1C8C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v29;
  double v30;
  double v31;
  uint64_t v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  unsigned int v39;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v18 = a15;
  v19 = a12;
  v20 = a10;
  v21 = a2 & 1;
  v22 = a1;
  if ((_DWORD)v21)
    v22 = -INFINITY;
  v23 = a4 & 1;
  v24 = a3;
  if ((_DWORD)v23)
    v24 = v22;
  v25 = a6 & 1;
  v26 = a8 & 1;
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = v24;
  if (v22 > v24 || v24 > v27)
    goto LABEL_22;
  v29 = a7;
  if ((a8 & 1) != 0)
    v29 = -INFINITY;
  v30 = a10;
  if ((a11 & 1) != 0)
    v30 = v29;
  v31 = a12;
  if ((a13 & 1) != 0)
    v31 = v30;
  if (v29 > v30 || v30 > v31)
  {
LABEL_22:
    v43 = a7;
    v44 = a5;
    v41 = a3;
    v42 = a1;
    v39 = v23;
    v40 = v21;
    v33 = static os_log_type_t.fault.getter();
    v34 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v33, &_mh_execute_header, v34, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v23 = v39;
    v21 = v40;
    v18 = a15;
    v20 = a10;
    v19 = a12;
    a3 = v41;
    a1 = v42;
    a7 = v43;
    a5 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v21, *(_QWORD *)&a3, v23, *(_QWORD *)&a5, v25, *(_QWORD *)&a7, v26, *(_QWORD *)&v20, a11 & 1, *(_QWORD *)&v19, a13 & 1, a14, v18);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = a17;
  v35 = v45[5];
  *(_OWORD *)(a9 + 80) = v45[4];
  *(_OWORD *)(a9 + 96) = v35;
  *(_OWORD *)(a9 + 112) = v45[6];
  v36 = v45[1];
  *(_OWORD *)(a9 + 16) = v45[0];
  *(_OWORD *)(a9 + 32) = v36;
  v37 = v45[3];
  *(_OWORD *)(a9 + 48) = v45[2];
  *(_OWORD *)(a9 + 64) = v37;
  swift_retain(a17);
  return swift_retain(a16);
}

__n128 sub_1005F1E2C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double v16;
  double v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v26;
  double v27;
  double v28;
  uint64_t v30;
  void *v31;
  __int128 v32;
  __int128 v33;
  __n128 result;
  unsigned int v35;
  double v36;
  double v37;
  double v38;
  double v39;
  _OWORD v40[7];

  v16 = a12;
  v17 = a10;
  v18 = a2 & 1;
  v19 = a1;
  if ((_DWORD)v18)
    v19 = -INFINITY;
  v20 = a4 & 1;
  v21 = a3;
  if ((a4 & 1) != 0)
    v21 = v19;
  v22 = a6 & 1;
  v23 = a8 & 1;
  v24 = a5;
  if ((a6 & 1) != 0)
    v24 = v21;
  if (v19 > v21 || v21 > v24)
    goto LABEL_22;
  v26 = a7;
  if ((a8 & 1) != 0)
    v26 = -INFINITY;
  v27 = a10;
  if ((a11 & 1) != 0)
    v27 = v26;
  v28 = a12;
  if ((a13 & 1) != 0)
    v28 = v27;
  if (v26 > v27 || v27 > v28)
  {
LABEL_22:
    v39 = a7;
    v38 = a5;
    v36 = a1;
    v37 = a3;
    v35 = v18;
    v30 = static os_log_type_t.fault.getter();
    v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v30, &_mh_execute_header, v31, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v18 = v35;
    a1 = v36;
    a3 = v37;
    v17 = a10;
    a5 = v38;
    v16 = a12;
    a7 = v39;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v40, *(_QWORD *)&a1, v18, *(_QWORD *)&a3, v20, *(_QWORD *)&a5, v22, *(_QWORD *)&a7, v23, *(_QWORD *)&v17, a11 & 1, *(_QWORD *)&v16, a13 & 1, a14, a15);
  v32 = v40[5];
  *(_OWORD *)(a9 + 64) = v40[4];
  *(_OWORD *)(a9 + 80) = v32;
  *(_OWORD *)(a9 + 96) = v40[6];
  v33 = v40[1];
  *(_OWORD *)a9 = v40[0];
  *(_OWORD *)(a9 + 16) = v33;
  result = (__n128)v40[3];
  *(_OWORD *)(a9 + 32) = v40[2];
  *(__n128 *)(a9 + 48) = result;
  return result;
}

double sub_1005F1FB4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009D69E8, &qword_1009D69D8).n128_u64[0];
  return result;
}

__n128 sub_1005F200C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __n128 result;
  unsigned int v45;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = v17;
  v19 = a9;
  v20 = a17;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((_DWORD)v27)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v49 = a5;
    v50 = a7;
    v47 = a3;
    v48 = a1;
    v46 = v25;
    v45 = v27;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v19 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v27 = v45;
    v22 = a14;
    v21 = a15;
    v25 = v46;
    v24 = a10;
    v23 = a12;
    a3 = v47;
    a1 = v48;
    a5 = v49;
    a7 = v50;
    v20 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  sub_10000B5E4(v18, v19, a16);
  v41 = v19 + *(int *)(sub_10004CFD4(v20) + 36);
  v42 = v51[5];
  *(_OWORD *)(v41 + 64) = v51[4];
  *(_OWORD *)(v41 + 80) = v42;
  *(_OWORD *)(v41 + 96) = v51[6];
  v43 = v51[1];
  *(_OWORD *)v41 = v51[0];
  *(_OWORD *)(v41 + 16) = v43;
  result = (__n128)v51[3];
  *(_OWORD *)(v41 + 32) = v51[2];
  *(__n128 *)(v41 + 48) = result;
  return result;
}

double sub_1005F21D8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009D8410, &qword_1009D8418).n128_u64[0];
  return result;
}

double sub_1005F2230@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F301C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009D8540, &qword_1009D8548).n128_u64[0];
  return result;
}

double sub_1005F2288@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009D89A8, &qword_1009D89B0).n128_u64[0];
  return result;
}

double sub_1005F22E0@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v36;
  double v37;
  double v38;
  uint64_t v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  double result;
  unsigned int v46;
  unsigned int v47;
  double v48;
  double v49;
  double v50;
  double v51;
  _OWORD v52[7];

  v20 = a19;
  v21 = a18;
  v22 = a17;
  v24 = a14;
  v23 = a15;
  v25 = a12;
  v26 = a10;
  v27 = a2 & 1;
  v28 = a1;
  if ((_DWORD)v27)
    v28 = -INFINITY;
  v29 = a4 & 1;
  v30 = a3;
  if ((_DWORD)v29)
    v30 = v28;
  v31 = a6 & 1;
  v32 = a8 & 1;
  v33 = a13 & 1;
  v34 = a5;
  if ((a6 & 1) != 0)
    v34 = v30;
  if (v28 > v30 || v30 > v34)
    goto LABEL_22;
  v36 = a7;
  if ((a8 & 1) != 0)
    v36 = -INFINITY;
  v37 = a10;
  if ((a11 & 1) != 0)
    v37 = v36;
  v38 = a12;
  if ((a13 & 1) != 0)
    v38 = v37;
  if (v36 > v37 || v37 > v38)
  {
LABEL_22:
    v50 = a7;
    v51 = a5;
    v48 = a1;
    v49 = a3;
    v47 = v27;
    v46 = v29;
    v40 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v41 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v41, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v33 = a13 & 1;
    v29 = v46;
    v24 = a14;
    v23 = a15;
    v27 = v47;
    v26 = a10;
    v25 = a12;
    a1 = v48;
    a3 = v49;
    a7 = v50;
    a5 = v51;
    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v52, *(_QWORD *)&a1, v27, *(_QWORD *)&a3, v29, *(_QWORD *)&a5, v31, *(_QWORD *)&a7, v32, *(_QWORD *)&v26, a11 & 1, *(_QWORD *)&v25, v33, v24, v23);
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  v42 = v52[5];
  *(_OWORD *)(a9 + 96) = v52[4];
  *(_OWORD *)(a9 + 112) = v42;
  *(_OWORD *)(a9 + 128) = v52[6];
  v43 = v52[1];
  *(_OWORD *)(a9 + 32) = v52[0];
  *(_OWORD *)(a9 + 48) = v43;
  v44 = v52[3];
  *(_OWORD *)(a9 + 64) = v52[2];
  *(_OWORD *)(a9 + 80) = v44;
  sub_1001F596C(a16, v22, v21 & 1);
  *(_QWORD *)&result = swift_bridgeObjectRetain(v20).n128_u64[0];
  return result;
}

uint64_t sub_1005F24C0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a7;
    v42 = a1;
    v43 = a5;
    v41 = a3;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v40;
    a3 = v41;
    a1 = v42;
    a5 = v43;
    v18 = a12;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v34;
  v35 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v35;
  v36 = v45[2];
  *(_OWORD *)(a9 + 120) = v45[3];
  v37 = v45[5];
  *(_OWORD *)(a9 + 136) = v45[4];
  *(_OWORD *)(a9 + 152) = v37;
  *(_OWORD *)(a9 + 168) = v45[6];
  v38 = v45[1];
  *(_OWORD *)(a9 + 72) = v45[0];
  *(_OWORD *)(a9 + 88) = v38;
  *(_BYTE *)(a9 + 64) = *(_BYTE *)(v15 + 64);
  *(_OWORD *)(a9 + 104) = v36;
  return sub_1005F38D8(v15);
}

uint64_t sub_1005F2678@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, __int16 a18)
{
  __int16 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  double v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v33;
  double v34;
  double v35;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unsigned int v44;
  double v45;
  double v46;
  double v47;
  double v48;
  _OWORD v49[7];

  v19 = a18;
  v20 = a16;
  v22 = a14;
  v21 = a15;
  v23 = a12;
  v24 = a10;
  v25 = a2 & 1;
  v26 = a1;
  if ((_DWORD)v25)
    v26 = -INFINITY;
  v27 = a4 & 1;
  v28 = a3;
  if ((a4 & 1) != 0)
    v28 = v26;
  v29 = a6 & 1;
  v30 = a8 & 1;
  v31 = a5;
  if ((a6 & 1) != 0)
    v31 = v28;
  if (v26 > v28 || v28 > v31)
    goto LABEL_22;
  v33 = a7;
  if ((a8 & 1) != 0)
    v33 = -INFINITY;
  v34 = a10;
  if ((a11 & 1) != 0)
    v34 = v33;
  v35 = a12;
  if ((a13 & 1) != 0)
    v35 = v34;
  if (v33 > v34 || v34 > v35)
  {
LABEL_22:
    v47 = a5;
    v48 = a7;
    v45 = a1;
    v46 = a3;
    v44 = v25;
    v37 = static os_log_type_t.fault.getter();
    v38 = (void *)static Log.runtimeIssuesLog.getter();
    v39 = v37;
    v20 = a16;
    os_log(_:dso:log:_:_:)(v39, &_mh_execute_header, v38, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v22 = a14;
    v21 = a15;
    v25 = v44;
    v24 = a10;
    v23 = a12;
    a1 = v45;
    a3 = v46;
    a5 = v47;
    a7 = v48;
    v19 = a18;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v49, *(_QWORD *)&a1, v25, *(_QWORD *)&a3, v27, *(_QWORD *)&a5, v29, *(_QWORD *)&a7, v30, *(_QWORD *)&v24, a11 & 1, *(_QWORD *)&v23, a13 & 1, v22, v21);
  v40 = v49[2];
  *(_OWORD *)(a9 + 72) = v49[3];
  v41 = v49[5];
  *(_OWORD *)(a9 + 88) = v49[4];
  *(_OWORD *)(a9 + 104) = v41;
  *(_OWORD *)(a9 + 120) = v49[6];
  v42 = v49[1];
  *(_OWORD *)(a9 + 24) = v49[0];
  *(_OWORD *)(a9 + 40) = v42;
  *(_QWORD *)a9 = v20;
  *(_QWORD *)(a9 + 8) = a17;
  *(_BYTE *)(a9 + 16) = v19 & 1;
  *(_BYTE *)(a9 + 17) = HIBYTE(v19) & 1;
  *(_OWORD *)(a9 + 56) = v40;
  return swift_retain(v20);
}

double sub_1005F284C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009DB788, &qword_1009DB790).n128_u64[0];
  return result;
}

uint64_t sub_1005F28A4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  unsigned int v38;
  double v39;
  double v40;
  double v41;
  double v42;
  _OWORD v43[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v42 = a7;
    v40 = a1;
    v41 = a5;
    v39 = a3;
    v38 = v20;
    v32 = static os_log_type_t.fault.getter();
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v38;
    v19 = a10;
    a3 = v39;
    a1 = v40;
    a5 = v41;
    v18 = a12;
    a7 = v42;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v43, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v43[2];
  *(_OWORD *)(a9 + 56) = v43[3];
  v35 = v43[5];
  *(_OWORD *)(a9 + 72) = v43[4];
  *(_OWORD *)(a9 + 88) = v35;
  *(_OWORD *)(a9 + 104) = v43[6];
  v36 = v43[1];
  *(_OWORD *)(a9 + 8) = v43[0];
  *(_OWORD *)(a9 + 24) = v36;
  *(_QWORD *)a9 = a16;
  *(_OWORD *)(a9 + 40) = v34;
  return swift_retain(a16);
}

double sub_1005F2A4C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009E1160, &qword_1009E1168).n128_u64[0];
  return result;
}

__n128 sub_1005F2AA4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v30;
  double v31;
  double v32;
  uint64_t v34;
  void *v35;
  __int128 v36;
  __int128 v37;
  __n128 result;
  unsigned int v39;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v18 = a17;
  v19 = a15;
  v20 = a12;
  v21 = a10;
  v22 = a2 & 1;
  v23 = a1;
  if ((_DWORD)v22)
    v23 = -INFINITY;
  v24 = a4 & 1;
  v25 = a3;
  if ((_DWORD)v24)
    v25 = v23;
  v26 = a6 & 1;
  v27 = a8 & 1;
  v28 = a5;
  if ((a6 & 1) != 0)
    v28 = v25;
  if (v23 > v25 || v25 > v28)
    goto LABEL_22;
  v30 = a7;
  if ((a8 & 1) != 0)
    v30 = -INFINITY;
  v31 = a10;
  if ((a11 & 1) != 0)
    v31 = v30;
  v32 = a12;
  if ((a13 & 1) != 0)
    v32 = v31;
  if (v30 > v31 || v31 > v32)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v41 = a1;
    v42 = a3;
    v39 = v24;
    v40 = v22;
    v34 = static os_log_type_t.fault.getter();
    v35 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v34, &_mh_execute_header, v35, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v24 = v39;
    v22 = v40;
    v19 = a15;
    v21 = a10;
    v20 = a12;
    a1 = v41;
    a3 = v42;
    a5 = v43;
    v18 = a17;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v22, *(_QWORD *)&a3, v24, *(_QWORD *)&a5, v26, *(_QWORD *)&a7, v27, *(_QWORD *)&v21, a11 & 1, *(_QWORD *)&v20, a13 & 1, a14, v19);
  *(_QWORD *)a9 = a16;
  *(_BYTE *)(a9 + 8) = v18 & 1;
  v36 = v45[5];
  *(_OWORD *)(a9 + 80) = v45[4];
  *(_OWORD *)(a9 + 96) = v36;
  *(_OWORD *)(a9 + 112) = v45[6];
  v37 = v45[1];
  *(_OWORD *)(a9 + 16) = v45[0];
  *(_OWORD *)(a9 + 32) = v37;
  result = (__n128)v45[3];
  *(_OWORD *)(a9 + 48) = v45[2];
  *(__n128 *)(a9 + 64) = result;
  return result;
}

double sub_1005F2C4C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009E1388, &qword_1009E1390).n128_u64[0];
  return result;
}

double sub_1005F2CA4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009E15F0, &qword_1009E15F8).n128_u64[0];
  return result;
}

double sub_1005F2CFC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009E15F8, &qword_1009E1600).n128_u64[0];
  return result;
}

double sub_1005F2D54@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009E4278, &qword_1009E4280).n128_u64[0];
  return result;
}

uint64_t sub_1005F2DAC@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v44 = a7;
    v42 = a1;
    v43 = a5;
    v41 = a3;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v19 = a10;
    v20 = v40;
    a3 = v41;
    a1 = v42;
    a5 = v43;
    v18 = a12;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = *(_OWORD *)(v15 + 64);
  v35 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v15;
  *(_OWORD *)(a9 + 16) = v35;
  v36 = v45[2];
  *(_OWORD *)(a9 + 136) = v45[3];
  v37 = v45[5];
  *(_OWORD *)(a9 + 152) = v45[4];
  *(_OWORD *)(a9 + 168) = v37;
  *(_OWORD *)(a9 + 184) = v45[6];
  v38 = v45[1];
  *(_OWORD *)(a9 + 88) = v45[0];
  *(_OWORD *)(a9 + 104) = v38;
  *(_QWORD *)(a9 + 80) = *(_QWORD *)(v15 + 80);
  *(_OWORD *)(a9 + 120) = v36;
  return sub_1005F396C(v15);
}

double sub_1005F2F6C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009E7B70, &qword_1009E7B60).n128_u64[0];
  return result;
}

double sub_1005F2FC4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F301C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009EB7F0, &qword_1009EB7F8).n128_u64[0];
  return result;
}

__n128 sub_1005F301C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v32;
  double v33;
  double v34;
  uint64_t v36;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __n128 result;
  unsigned int v46;
  double v47;
  double v48;
  double v49;
  double v50;
  _OWORD v51[7];

  v18 = a9;
  v19 = a16;
  v21 = a14;
  v20 = a15;
  v22 = a12;
  v23 = a10;
  v24 = a2 & 1;
  v25 = a1;
  if ((_DWORD)v24)
    v25 = -INFINITY;
  v26 = a4 & 1;
  v27 = a3;
  if ((_DWORD)v26)
    v27 = v25;
  v28 = a6 & 1;
  v29 = a8 & 1;
  v30 = a5;
  if ((a6 & 1) != 0)
    v30 = v27;
  if (v25 > v27 || v27 > v30)
    goto LABEL_22;
  v32 = a7;
  if ((a8 & 1) != 0)
    v32 = -INFINITY;
  v33 = a10;
  if ((a11 & 1) != 0)
    v33 = v32;
  v34 = a12;
  if ((a13 & 1) != 0)
    v34 = v33;
  if (v32 > v33 || v33 > v34)
  {
LABEL_22:
    v49 = a7;
    v50 = a5;
    v47 = a1;
    v48 = a3;
    v46 = v24;
    v36 = v26;
    v38 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v39 = (void *)static Log.runtimeIssuesLog.getter();
    v40 = v38;
    v18 = a9;
    os_log(_:dso:log:_:_:)(v40, &_mh_execute_header, v39, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v26 = v36;
    v21 = a14;
    v20 = a15;
    v24 = v46;
    v23 = a10;
    v22 = a12;
    a1 = v47;
    a3 = v48;
    a7 = v49;
    a5 = v50;
    v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v51, *(_QWORD *)&a1, v24, *(_QWORD *)&a3, v26, *(_QWORD *)&a5, v28, *(_QWORD *)&a7, v29, *(_QWORD *)&v23, a11 & 1, *(_QWORD *)&v22, a13 & 1, v21, v20);
  v41 = sub_10004CFD4(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v18, v17, v41);
  v42 = v18 + *(int *)(sub_10004CFD4(a17) + 36);
  v43 = v51[5];
  *(_OWORD *)(v42 + 64) = v51[4];
  *(_OWORD *)(v42 + 80) = v43;
  *(_OWORD *)(v42 + 96) = v51[6];
  v44 = v51[1];
  *(_OWORD *)v42 = v51[0];
  *(_OWORD *)(v42 + 16) = v44;
  result = (__n128)v51[3];
  *(_OWORD *)(v42 + 32) = v51[2];
  *(__n128 *)(v42 + 48) = result;
  return result;
}

uint64_t sub_1005F31F8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  _OWORD *v15;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v28;
  double v29;
  double v30;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unsigned int v40;
  double v41;
  double v42;
  double v43;
  double v44;
  _OWORD v45[7];

  v17 = a15;
  v18 = a12;
  v19 = a10;
  v20 = a2 & 1;
  v21 = a1;
  if ((_DWORD)v20)
    v21 = -INFINITY;
  v22 = a4 & 1;
  v23 = a3;
  if ((a4 & 1) != 0)
    v23 = v21;
  v24 = a6 & 1;
  v25 = a8 & 1;
  v26 = a5;
  if ((a6 & 1) != 0)
    v26 = v23;
  if (v21 > v23 || v23 > v26)
    goto LABEL_22;
  v28 = a7;
  if ((a8 & 1) != 0)
    v28 = -INFINITY;
  v29 = a10;
  if ((a11 & 1) != 0)
    v29 = v28;
  v30 = a12;
  if ((a13 & 1) != 0)
    v30 = v29;
  if (v28 > v29 || v29 > v30)
  {
LABEL_22:
    v43 = a5;
    v44 = a7;
    v42 = a3;
    v41 = a1;
    v40 = v20;
    v32 = static os_log_type_t.fault.getter(*(_QWORD *)&a1);
    v33 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)(v32, &_mh_execute_header, v33, "Contradictory frame constraints specified.", 42, 2, _swiftEmptyArrayStorage);

    v17 = a15;
    v20 = v40;
    v19 = a10;
    a1 = v41;
    a3 = v42;
    v18 = a12;
    a5 = v43;
    a7 = v44;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(v45, *(_QWORD *)&a1, v20, *(_QWORD *)&a3, v22, *(_QWORD *)&a5, v24, *(_QWORD *)&a7, v25, *(_QWORD *)&v19, a11 & 1, *(_QWORD *)&v18, a13 & 1, a14, v17);
  v34 = v15[3];
  a9[2] = v15[2];
  a9[3] = v34;
  *(_OWORD *)((char *)a9 + 57) = *(_OWORD *)((char *)v15 + 57);
  v35 = v15[1];
  *a9 = *v15;
  a9[1] = v35;
  v36 = v45[5];
  a9[9] = v45[4];
  a9[10] = v36;
  a9[11] = v45[6];
  v37 = v45[1];
  a9[5] = v45[0];
  a9[6] = v37;
  v38 = v45[3];
  a9[7] = v45[2];
  a9[8] = v38;
  return sub_1005F3930((uint64_t)v15);
}

double sub_1005F33A4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009F0280, &qword_1009F0288).n128_u64[0];
  return result;
}

double sub_1005F33FC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009E79C0, &qword_1009F0290).n128_u64[0];
  return result;
}

double sub_1005F3454@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_1005F200C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1009F0270, &qword_1009F0278).n128_u64[0];
  return result;
}

double Separator.body.getter@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  char v14;
  char v15;
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  double result;
  __int128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  _OWORD v30[2];
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v4 = static Alignment.center.getter(a1);
  sub_1005F2AA4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v30, 0.0, 1, 0.0, 1, v4, v5, 0, 1);
  v7 = static Alignment.center.getter(v6);
  _FrameLayout.init(width:height:alignment:)(&v22, 0, 1, 0x3FE0000000000000, 0, v7, v8);
  v9 = v22;
  v10 = v24;
  v11 = v26;
  v12 = v27;
  v29 = v23;
  v28 = v25;
  v13 = swift_retain(a1);
  v14 = static Edge.Set.all.getter(v13);
  v15 = v29;
  v16 = v28;
  v17 = v34;
  *(_OWORD *)(a2 + 64) = v33;
  *(_OWORD *)(a2 + 80) = v17;
  v18 = v36;
  *(_OWORD *)(a2 + 96) = v35;
  *(_OWORD *)(a2 + 112) = v18;
  v19 = v30[1];
  *(_OWORD *)a2 = v30[0];
  *(_OWORD *)(a2 + 16) = v19;
  result = *(double *)&v31;
  v21 = v32;
  *(_OWORD *)(a2 + 32) = v31;
  *(_OWORD *)(a2 + 48) = v21;
  *(_QWORD *)(a2 + 128) = v9;
  *(_BYTE *)(a2 + 136) = v15;
  *(_QWORD *)(a2 + 144) = v10;
  *(_BYTE *)(a2 + 152) = v16;
  *(_QWORD *)(a2 + 160) = v11;
  *(_QWORD *)(a2 + 168) = v12;
  *(_QWORD *)(a2 + 176) = a1;
  *(_BYTE *)(a2 + 184) = v14;
  return result;
}

uint64_t sub_1005F35CC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &opaque type descriptor for <<opaque return type of Separator.body>>, 1);
}

double sub_1005F35DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  char v15;
  char v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  double result;
  __int128 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  _OWORD v31[2];
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v4 = *v2;
  v5 = static Alignment.center.getter(a1);
  sub_1005F2AA4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v31, 0.0, 1, 0.0, 1, v5, v6, 0, 1);
  v8 = static Alignment.center.getter(v7);
  _FrameLayout.init(width:height:alignment:)(&v23, 0, 1, 0x3FE0000000000000, 0, v8, v9);
  v10 = v23;
  v11 = v25;
  v12 = v27;
  v13 = v28;
  v30 = v24;
  v29 = v26;
  v14 = swift_retain(v4);
  v15 = static Edge.Set.all.getter(v14);
  v16 = v30;
  v17 = v29;
  v18 = v35;
  *(_OWORD *)(a2 + 64) = v34;
  *(_OWORD *)(a2 + 80) = v18;
  v19 = v37;
  *(_OWORD *)(a2 + 96) = v36;
  *(_OWORD *)(a2 + 112) = v19;
  v20 = v31[1];
  *(_OWORD *)a2 = v31[0];
  *(_OWORD *)(a2 + 16) = v20;
  result = *(double *)&v32;
  v22 = v33;
  *(_OWORD *)(a2 + 32) = v32;
  *(_OWORD *)(a2 + 48) = v22;
  *(_QWORD *)(a2 + 128) = v10;
  *(_BYTE *)(a2 + 136) = v16;
  *(_QWORD *)(a2 + 144) = v11;
  *(_BYTE *)(a2 + 152) = v17;
  *(_QWORD *)(a2 + 160) = v12;
  *(_QWORD *)(a2 + 168) = v13;
  *(_QWORD *)(a2 + 176) = v4;
  *(_BYTE *)(a2 + 184) = v15;
  return result;
}

ValueMetadata *type metadata accessor for Separator()
{
  return &type metadata for Separator;
}

unint64_t sub_1005F370C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0240;
  if (!qword_1009F0240)
  {
    v1 = sub_100030B74(&qword_1009F0248);
    sub_1005F3778();
    sub_1005F3848();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0240);
  }
  return result;
}

unint64_t sub_1005F3778()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0250;
  if (!qword_1009F0250)
  {
    v1 = sub_100030B74(&qword_1009F0258);
    sub_1005F37E4();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0250);
  }
  return result;
}

unint64_t sub_1005F37E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0260;
  if (!qword_1009F0260)
  {
    v1 = sub_100030B74(&qword_1009F0268);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0260);
  }
  return result;
}

unint64_t sub_1005F3848()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F1DC0;
  if (!qword_1009F1DC0)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009EB880);
    result = swift_getWitnessTable(&protocol conformance descriptor for _BackgroundStyleModifier<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F1DC0);
  }
  return result;
}

uint64_t sub_1005F3894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REScrubberView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005F38D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  sub_1001F596C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t sub_1005F3930(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  sub_1001F596C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain(v2);
  return a1;
}

uint64_t sub_1005F396C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  swift_retain(*(_QWORD *)(a1 + 16));
  swift_retain(v2);
  return a1;
}

_QWORD *sub_1005F39A0@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;

  v2 = sub_10033FCF4();
  return EnvironmentValues.subscript.getter(a1, &type metadata for BuyButtonStyleKey, &type metadata for BuyButtonStyleKey, v2);
}

ValueMetadata *type metadata accessor for BuyButtonStyleKey()
{
  return &type metadata for BuyButtonStyleKey;
}

uint64_t sub_1005F39E4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  int *v69;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain(v12);
  }
  else
  {
    v6 = a3;
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2 + 2;
    v9 = a2[5];
    v10 = swift_retain(v7);
    if (v9)
    {
      v11 = a2[6];
      *(_QWORD *)(a1 + 40) = v9;
      *(_QWORD *)(a1 + 48) = v11;
      (**(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v9 - 8))(a1 + 16, (uint64_t)(a2 + 2), v9, v10);
    }
    else
    {
      v13 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *v8;
      *(_OWORD *)(a1 + 32) = v13;
      *(_QWORD *)(a1 + 48) = a2[6];
    }
    v14 = v6[6];
    v15 = a1 + v14;
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = sub_10004CFD4(&qword_1009D26B0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    v19 = *v16;
    *(_QWORD *)v15 = *v16;
    if (EnumCaseMultiPayload == 1)
    {
      v68 = v17;
      v69 = v6;
      v67 = v16[10];
      *(_OWORD *)(v15 + 8) = *(_OWORD *)(v16 + 1);
      v20 = v16[3];
      *(_QWORD *)(v15 + 24) = v20;
      *(_OWORD *)(v15 + 32) = *((_OWORD *)v16 + 2);
      v21 = v16[6];
      v22 = v16[7];
      *(_QWORD *)(v15 + 48) = v21;
      *(_QWORD *)(v15 + 56) = v22;
      v24 = v16[8];
      v23 = v16[9];
      *(_QWORD *)(v15 + 64) = v24;
      *(_QWORD *)(v15 + 72) = v23;
      swift_retain(v19);
      swift_retain(v20);
      swift_retain(v21);
      swift_retain(v22);
      swift_retain(v24);
      swift_retain(v23);
      if (v67)
      {
        v25 = v16[11];
        *(_QWORD *)(v15 + 80) = v67;
        *(_QWORD *)(v15 + 88) = v25;
        swift_retain(v67);
        swift_retain(v25);
      }
      else
      {
        *(_OWORD *)(v15 + 80) = *((_OWORD *)v16 + 5);
      }
      v27 = v16[12];
      if (v27)
      {
        v28 = v16[13];
        *(_QWORD *)(v15 + 96) = v27;
        *(_QWORD *)(v15 + 104) = v28;
        swift_retain(v27);
        swift_retain(v28);
      }
      else
      {
        *(_OWORD *)(v15 + 96) = *((_OWORD *)v16 + 6);
      }
      v29 = v16[14];
      if (v29)
      {
        v30 = v16[15];
        *(_QWORD *)(v15 + 112) = v29;
        *(_QWORD *)(v15 + 120) = v30;
        swift_retain(v29);
        swift_retain(v30);
      }
      else
      {
        *(_OWORD *)(v15 + 112) = *((_OWORD *)v16 + 7);
      }
      v31 = *(int *)(type metadata accessor for BuyButtonView.Style(0) + 44);
      v32 = (void *)(v15 + v31);
      v33 = (char *)v16 + v31;
      v34 = type metadata accessor for BlendMode(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = sub_10004CFD4(&qword_1009F0298);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        v26 = 1;
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        v26 = 1;
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v17 = v68;
      v6 = v69;
    }
    else
    {
      swift_retain(v19);
      v26 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v26);
    v37 = v6[7];
    v38 = v6[8];
    v39 = a1 + v37;
    v40 = (uint64_t)a2 + v37;
    *(_OWORD *)v39 = *(_OWORD *)v40;
    v41 = *(_QWORD *)(v40 + 16);
    *(_QWORD *)(v39 + 16) = v41;
    v42 = (uint64_t *)(a1 + v38);
    v43 = (uint64_t *)((char *)a2 + v38);
    swift_retain(v41);
    v44 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v43, v44) == 1)
    {
      v45 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v42, v43, v45);
      v46 = 1;
    }
    else
    {
      v47 = *v43;
      *v42 = *v43;
      swift_retain(v47);
      v46 = 0;
    }
    swift_storeEnumTagMultiPayload(v42, v44, v46);
    v48 = v6[9];
    v49 = (uint64_t *)(a1 + v48);
    v50 = (uint64_t *)((char *)a2 + v48);
    v51 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v50, v51) == 1)
    {
      v52 = type metadata accessor for UserInterfaceSizeClass(0);
      v53 = *(_QWORD *)(v52 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v53 + 48))(v50, 1, v52))
      {
        v54 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
        v55 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v53 + 16))(v49, v50, v52);
        v55 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v49, 0, 1, v52);
      }
    }
    else
    {
      v56 = *v50;
      *v49 = *v50;
      swift_retain(v56);
      v55 = 0;
    }
    swift_storeEnumTagMultiPayload(v49, v51, v55);
    v57 = v6[10];
    v58 = a1 + v57;
    v59 = (uint64_t)a2 + v57;
    v60 = *(_QWORD *)v59;
    v61 = *(_BYTE *)(v59 + 8);
    sub_1001F2508(*(_QWORD *)v59, v61);
    *(_QWORD *)v58 = v60;
    *(_BYTE *)(v58 + 8) = v61;
    v62 = v6[11];
    v63 = a1 + v62;
    v64 = (uint64_t)a2 + v62;
    v65 = *(_QWORD *)v64;
    LOBYTE(v60) = *(_BYTE *)(v64 + 8);
    sub_1001F2508(*(_QWORD *)v64, v60);
    *(_QWORD *)v63 = v65;
    *(_BYTE *)(v63 + 8) = v60;
  }
  return a1;
}

uint64_t type metadata accessor for BuyButtonView.Style(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009F03A8, (uint64_t)&nominal type descriptor for BuyButtonView.Style);
}

uint64_t sub_1005F3E58(_QWORD *a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  swift_release(a1[1]);
  if (a1[5])
    _s5Books15CurrentPageViewVwxx_0(a1 + 2);
  v4 = (_QWORD *)((char *)a1 + a2[6]);
  v5 = sub_10004CFD4(&qword_1009D26B0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v4, v5);
  swift_release(*v4);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(v4[3]);
    swift_release(v4[6]);
    swift_release(v4[7]);
    swift_release(v4[8]);
    swift_release(v4[9]);
    v7 = v4[10];
    if (v7)
    {
      swift_release(v7);
      swift_release(v4[11]);
    }
    v8 = v4[12];
    if (v8)
    {
      swift_release(v8);
      swift_release(v4[13]);
    }
    v9 = v4[14];
    if (v9)
    {
      swift_release(v9);
      swift_release(v4[15]);
    }
    v10 = (char *)v4 + *(int *)(type metadata accessor for BuyButtonView.Style(0) + 44);
    v11 = type metadata accessor for BlendMode(0);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[7] + 16));
  v13 = (_QWORD *)((char *)a1 + a2[8]);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);
  }
  else
  {
    swift_release(*v13);
  }
  v16 = (_QWORD *)((char *)a1 + a2[9]);
  v17 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for UserInterfaceSizeClass(0);
    v19 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18))
      (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v16, v18);
  }
  else
  {
    swift_release(*v16);
  }
  sub_1001F2564(*(_QWORD *)((char *)a1 + a2[10]), *((_BYTE *)a1 + a2[10] + 8));
  return sub_1001F2564(*(_QWORD *)((char *)a1 + a2[11]), *((_BYTE *)a1 + a2[11] + 8));
}

uint64_t sub_1005F4070(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  int *v67;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 2;
  v8 = a2[5];
  v9 = swift_retain(v6);
  if (v8)
  {
    v10 = a2[6];
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v10;
    (**(void (***)(uint64_t, _QWORD *, uint64_t, __n128))(v8 - 8))(a1 + 16, v7, v8, v9);
  }
  else
  {
    v11 = *((_OWORD *)v7 + 1);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 48) = v7[4];
  }
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_10004CFD4(&qword_1009D26B0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
  v17 = *(_QWORD *)v14;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  if (EnumCaseMultiPayload == 1)
  {
    v66 = v15;
    v67 = a3;
    v65 = *((_QWORD *)v14 + 10);
    *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
    v18 = *((_QWORD *)v14 + 3);
    *(_QWORD *)(v13 + 24) = v18;
    *(_OWORD *)(v13 + 32) = *((_OWORD *)v14 + 2);
    v19 = *((_QWORD *)v14 + 6);
    v20 = *((_QWORD *)v14 + 7);
    *(_QWORD *)(v13 + 48) = v19;
    *(_QWORD *)(v13 + 56) = v20;
    v22 = *((_QWORD *)v14 + 8);
    v21 = *((_QWORD *)v14 + 9);
    *(_QWORD *)(v13 + 64) = v22;
    *(_QWORD *)(v13 + 72) = v21;
    swift_retain(v17);
    swift_retain(v18);
    swift_retain(v19);
    swift_retain(v20);
    swift_retain(v22);
    swift_retain(v21);
    if (v65)
    {
      v23 = *((_QWORD *)v14 + 11);
      *(_QWORD *)(v13 + 80) = v65;
      *(_QWORD *)(v13 + 88) = v23;
      swift_retain(v65);
      swift_retain(v23);
    }
    else
    {
      *(_OWORD *)(v13 + 80) = *((_OWORD *)v14 + 5);
    }
    v25 = *((_QWORD *)v14 + 12);
    if (v25)
    {
      v26 = *((_QWORD *)v14 + 13);
      *(_QWORD *)(v13 + 96) = v25;
      *(_QWORD *)(v13 + 104) = v26;
      swift_retain(v25);
      swift_retain(v26);
    }
    else
    {
      *(_OWORD *)(v13 + 96) = *((_OWORD *)v14 + 6);
    }
    v27 = *((_QWORD *)v14 + 14);
    if (v27)
    {
      v28 = *((_QWORD *)v14 + 15);
      *(_QWORD *)(v13 + 112) = v27;
      *(_QWORD *)(v13 + 120) = v28;
      swift_retain(v27);
      swift_retain(v28);
    }
    else
    {
      *(_OWORD *)(v13 + 112) = *((_OWORD *)v14 + 7);
    }
    v29 = *(int *)(type metadata accessor for BuyButtonView.Style(0) + 44);
    v30 = (void *)(v13 + v29);
    v31 = &v14[v29];
    v32 = type metadata accessor for BlendMode(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = sub_10004CFD4(&qword_1009F0298);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      v24 = 1;
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      v24 = 1;
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v15 = v66;
    a3 = v67;
  }
  else
  {
    swift_retain(v17);
    v24 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v24);
  v35 = a3[7];
  v36 = a3[8];
  v37 = a1 + v35;
  v38 = (char *)a2 + v35;
  *(_OWORD *)v37 = *(_OWORD *)v38;
  v39 = *((_QWORD *)v38 + 2);
  *(_QWORD *)(v37 + 16) = v39;
  v40 = (uint64_t *)(a1 + v36);
  v41 = (_QWORD *)((char *)a2 + v36);
  swift_retain(v39);
  v42 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v41, v42) == 1)
  {
    v43 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v40, v41, v43);
    v44 = 1;
  }
  else
  {
    v45 = *v41;
    *v40 = *v41;
    swift_retain(v45);
    v44 = 0;
  }
  swift_storeEnumTagMultiPayload(v40, v42, v44);
  v46 = a3[9];
  v47 = (uint64_t *)(a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  v49 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v48, v49) == 1)
  {
    v50 = type metadata accessor for UserInterfaceSizeClass(0);
    v51 = *(_QWORD *)(v50 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v51 + 48))(v48, 1, v50))
    {
      v52 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      v53 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v51 + 16))(v47, v48, v50);
      v53 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v47, 0, 1, v50);
    }
  }
  else
  {
    v54 = *v48;
    *v47 = *v48;
    swift_retain(v54);
    v53 = 0;
  }
  swift_storeEnumTagMultiPayload(v47, v49, v53);
  v55 = a3[10];
  v56 = a1 + v55;
  v57 = (char *)a2 + v55;
  v58 = *(_QWORD *)v57;
  v59 = v57[8];
  sub_1001F2508(*(_QWORD *)v57, v59);
  *(_QWORD *)v56 = v58;
  *(_BYTE *)(v56 + 8) = v59;
  v60 = a3[11];
  v61 = a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = *(_QWORD *)v62;
  LOBYTE(v58) = v62[8];
  sub_1001F2508(*(_QWORD *)v62, v58);
  *(_QWORD *)v61 = v63;
  *(_BYTE *)(v61 + 8) = v58;
  return a1;
}

uint64_t sub_1005F44A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v70;
  uint64_t v71;
  int *v72;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain(v6);
  v8 = swift_release(v7);
  v9 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v9)
    {
      sub_1001EAB00((_QWORD *)(a1 + 16), (_QWORD *)(a2 + 16));
      goto LABEL_8;
    }
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 16));
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    (**(void (***)(uint64_t, uint64_t, __n128))(v9 - 8))(a1 + 16, a2 + 16, v8);
    goto LABEL_8;
  }
  v10 = *(_OWORD *)(a2 + 16);
  v11 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = v11;
LABEL_8:
  if (a1 != a2)
  {
    v12 = a3[6];
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)(a2 + v12);
    sub_100010960(a1 + v12, &qword_1009D26B0);
    v15 = sub_10004CFD4(&qword_1009D26B0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
    v17 = *v14;
    *v13 = *v14;
    if (EnumCaseMultiPayload == 1)
    {
      v71 = v15;
      v72 = a3;
      v13[1] = v14[1];
      v13[2] = v14[2];
      v18 = v14[3];
      v13[3] = v18;
      v13[4] = v14[4];
      v13[5] = v14[5];
      v19 = v14[6];
      v13[6] = v19;
      v20 = v14[7];
      v13[7] = v20;
      v21 = v14[8];
      v13[8] = v21;
      v22 = v14[9];
      v13[9] = v22;
      v70 = v14[10];
      swift_retain(v17);
      swift_retain(v18);
      swift_retain(v19);
      swift_retain(v20);
      swift_retain(v21);
      swift_retain(v22);
      if (v70)
      {
        v13[10] = v70;
        v23 = v14[11];
        v13[11] = v23;
        swift_retain(v70);
        swift_retain(v23);
      }
      else
      {
        *((_OWORD *)v13 + 5) = *((_OWORD *)v14 + 5);
      }
      v25 = v14[12];
      if (v25)
      {
        v13[12] = v25;
        v26 = v14[13];
        v13[13] = v26;
        swift_retain(v25);
        swift_retain(v26);
      }
      else
      {
        *((_OWORD *)v13 + 6) = *((_OWORD *)v14 + 6);
      }
      v27 = v14[14];
      if (v27)
      {
        v13[14] = v27;
        v28 = v14[15];
        v13[15] = v28;
        swift_retain(v27);
        swift_retain(v28);
      }
      else
      {
        *((_OWORD *)v13 + 7) = *((_OWORD *)v14 + 7);
      }
      v29 = *(int *)(type metadata accessor for BuyButtonView.Style(0) + 44);
      v30 = (char *)v13 + v29;
      v31 = (char *)v14 + v29;
      v32 = type metadata accessor for BlendMode(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        v34 = sub_10004CFD4(&qword_1009F0298);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        v24 = 1;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
        v24 = 1;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v15 = v71;
      a3 = v72;
    }
    else
    {
      swift_retain(v17);
      v24 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v24);
  }
  v35 = a3[7];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  v38 = v36[2];
  v39 = v37[2];
  v36[2] = v39;
  swift_retain(v39);
  swift_release(v38);
  if (a1 != a2)
  {
    v40 = a3[8];
    v41 = (uint64_t *)(a1 + v40);
    v42 = (uint64_t *)(a2 + v40);
    sub_100010960(a1 + v40, (uint64_t *)&unk_1009D8200);
    v43 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v42, v43) == 1)
    {
      v44 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v41, v42, v44);
      v45 = 1;
    }
    else
    {
      v46 = *v42;
      *v41 = *v42;
      swift_retain(v46);
      v45 = 0;
    }
    swift_storeEnumTagMultiPayload(v41, v43, v45);
    v47 = a3[9];
    v48 = (uint64_t *)(a1 + v47);
    v49 = (uint64_t *)(a2 + v47);
    sub_100010960(a1 + v47, &qword_1009D26B8);
    v50 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v49, v50) == 1)
    {
      v51 = type metadata accessor for UserInterfaceSizeClass(0);
      v52 = *(_QWORD *)(v51 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v52 + 48))(v49, 1, v51))
      {
        v53 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        v54 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v52 + 16))(v48, v49, v51);
        v54 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v48, 0, 1, v51);
      }
    }
    else
    {
      v55 = *v49;
      *v48 = *v49;
      swift_retain(v55);
      v54 = 0;
    }
    swift_storeEnumTagMultiPayload(v48, v50, v54);
  }
  v56 = a3[10];
  v57 = a1 + v56;
  v58 = a2 + v56;
  v59 = *(_QWORD *)v58;
  v60 = *(_BYTE *)(v58 + 8);
  sub_1001F2508(*(_QWORD *)v58, v60);
  v61 = *(_QWORD *)v57;
  v62 = *(_BYTE *)(v57 + 8);
  *(_QWORD *)v57 = v59;
  *(_BYTE *)(v57 + 8) = v60;
  sub_1001F2564(v61, v62);
  v63 = a3[11];
  v64 = a1 + v63;
  v65 = a2 + v63;
  v66 = *(_QWORD *)v65;
  LOBYTE(v59) = *(_BYTE *)(v65 + 8);
  sub_1001F2508(*(_QWORD *)v65, v59);
  v67 = *(_QWORD *)v64;
  v68 = *(_BYTE *)(v64 + 8);
  *(_QWORD *)v64 = v66;
  *(_BYTE *)(v64 + 8) = v59;
  sub_1001F2564(v67, v68);
  return a1;
}

uint64_t sub_1005F49AC(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[6];
  v8 = (char *)(a1 + v7);
  v9 = (char *)(a2 + v7);
  v10 = sub_10004CFD4(&qword_1009D26B0);
  if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
    *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
    *((_QWORD *)v8 + 5) = *((_QWORD *)v9 + 5);
    v11 = *((_OWORD *)v9 + 4);
    *((_OWORD *)v8 + 3) = *((_OWORD *)v9 + 3);
    *((_OWORD *)v8 + 4) = v11;
    v12 = *((_OWORD *)v9 + 6);
    *((_OWORD *)v8 + 5) = *((_OWORD *)v9 + 5);
    *((_OWORD *)v8 + 6) = v12;
    *((_OWORD *)v8 + 7) = *((_OWORD *)v9 + 7);
    v13 = *(int *)(type metadata accessor for BuyButtonView.Style(0) + 44);
    v14 = &v8[v13];
    v15 = &v9[v13];
    v16 = type metadata accessor for BlendMode(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = sub_10004CFD4(&qword_1009F0298);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload(v8, v10, 1);
  }
  else
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v19 = a3[7];
  v20 = a3[8];
  v21 = a1 + v19;
  v22 = a2 + v19;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(v22 + 16);
  v23 = (void *)(a1 + v20);
  v24 = (const void *)(a2 + v20);
  v25 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v24, v25) == 1)
  {
    v26 = type metadata accessor for ColorScheme(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload(v23, v25, 1);
  }
  else
  {
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  v27 = a3[9];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v29, v30) == 1)
  {
    v31 = type metadata accessor for UserInterfaceSizeClass(0);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
    {
      v33 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v28, v29, v31);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v28, 0, 1, v31);
    }
    swift_storeEnumTagMultiPayload(v28, v30, 1);
  }
  else
  {
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  v34 = a3[10];
  v35 = a3[11];
  v36 = a1 + v34;
  v37 = a2 + v34;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  v38 = a1 + v35;
  v39 = a2 + v35;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  return a1;
}

uint64_t sub_1005F4CBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release(v7);
  if (*(_QWORD *)(a1 + 40))
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 16));
  v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  if (a1 != a2)
  {
    v9 = a3[6];
    v10 = (char *)(a1 + v9);
    v11 = (char *)(a2 + v9);
    sub_100010960(a1 + v9, &qword_1009D26B0);
    v12 = sub_10004CFD4(&qword_1009D26B0);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      *(_OWORD *)v10 = *(_OWORD *)v11;
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
      *((_QWORD *)v10 + 5) = *((_QWORD *)v11 + 5);
      v13 = *((_OWORD *)v11 + 4);
      *((_OWORD *)v10 + 3) = *((_OWORD *)v11 + 3);
      *((_OWORD *)v10 + 4) = v13;
      v14 = *((_OWORD *)v11 + 6);
      *((_OWORD *)v10 + 5) = *((_OWORD *)v11 + 5);
      *((_OWORD *)v10 + 6) = v14;
      *((_OWORD *)v10 + 7) = *((_OWORD *)v11 + 7);
      v15 = *(int *)(type metadata accessor for BuyButtonView.Style(0) + 44);
      v16 = &v10[v15];
      v17 = &v11[v15];
      v18 = type metadata accessor for BlendMode(0);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = sub_10004CFD4(&qword_1009F0298);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload(v10, v12, 1);
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
  }
  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_OWORD *)v22 = *(_OWORD *)v23;
  v24 = *(_QWORD *)(v22 + 16);
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  swift_release(v24);
  if (a1 != a2)
  {
    v25 = a3[8];
    v26 = (void *)(a1 + v25);
    v27 = (const void *)(a2 + v25);
    sub_100010960(a1 + v25, (uint64_t *)&unk_1009D8200);
    v28 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for ColorScheme(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v26, v27, v29);
      swift_storeEnumTagMultiPayload(v26, v28, 1);
    }
    else
    {
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    v30 = a3[9];
    v31 = (void *)(a1 + v30);
    v32 = (const void *)(a2 + v30);
    sub_100010960(a1 + v30, &qword_1009D26B8);
    v33 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
    {
      v34 = type metadata accessor for UserInterfaceSizeClass(0);
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34))
      {
        v36 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v35 + 32))(v31, v32, v34);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
      }
      swift_storeEnumTagMultiPayload(v31, v33, 1);
    }
    else
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
  }
  v37 = a3[10];
  v38 = a1 + v37;
  v39 = (uint64_t *)(a2 + v37);
  v40 = *v39;
  LOBYTE(v39) = *((_BYTE *)v39 + 8);
  v41 = *(_QWORD *)v38;
  v42 = *(_BYTE *)(v38 + 8);
  *(_QWORD *)v38 = v40;
  *(_BYTE *)(v38 + 8) = (_BYTE)v39;
  sub_1001F2564(v41, v42);
  v43 = a3[11];
  v44 = a1 + v43;
  v45 = (uint64_t *)(a2 + v43);
  v46 = *v45;
  LOBYTE(v45) = *((_BYTE *)v45 + 8);
  v47 = *(_QWORD *)v44;
  v48 = *(_BYTE *)(v44 + 8);
  *(_QWORD *)v44 = v46;
  *(_BYTE *)(v44 + 8) = (_BYTE)v45;
  sub_1001F2564(v47, v48);
  return a1;
}

uint64_t sub_1005F5054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005F5060);
}

uint64_t sub_1005F5060(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009D26A8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v10 = sub_10004CFD4(&qword_1009D26A0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1005F5130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005F513C);
}

uint64_t sub_1005F513C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009D26A8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v10 = sub_10004CFD4(&qword_1009D26A0);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for BuyButtonView(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009F02F8, (uint64_t)&nominal type descriptor for BuyButtonView);
}

void sub_1005F521C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[8];

  v8[0] = &unk_100733950;
  v8[1] = &unk_100733968;
  sub_10026B338(319, (unint64_t *)&unk_1009F0308, type metadata accessor for BuyButtonView.Style, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
  if (v3 <= 0x3F)
  {
    v8[2] = *(_QWORD *)(v2 - 8) + 64;
    v8[3] = &unk_100733980;
    sub_10026B338(319, (unint64_t *)&qword_1009D82B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Environment.Content);
    if (v5 <= 0x3F)
    {
      v8[4] = *(_QWORD *)(v4 - 8) + 64;
      sub_100233378(319);
      if (v7 <= 0x3F)
      {
        v8[5] = *(_QWORD *)(v6 - 8) + 64;
        v8[6] = &unk_100733998;
        v8[7] = &unk_100733998;
        swift_initStructMetadata(a1, 256, 8, v8, a1 + 16);
      }
    }
  }
}

uint64_t sub_1005F5314(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain(v5);
  }
  else
  {
    v9 = a2 + 10;
    v8 = a2[10];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    v10 = a2[3];
    *(_QWORD *)(a1 + 24) = v10;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v11 = a2[6];
    v12 = a2[7];
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
    v13 = a2[8];
    v14 = a2[9];
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v14;
    swift_retain(v5);
    swift_retain(v10);
    swift_retain(v11);
    swift_retain(v12);
    swift_retain(v13);
    swift_retain(v14);
    if (v8)
    {
      v15 = a2[11];
      *(_QWORD *)(a1 + 80) = v8;
      *(_QWORD *)(a1 + 88) = v15;
      swift_retain(v8);
      swift_retain(v15);
    }
    else
    {
      *(_OWORD *)(a1 + 80) = *v9;
    }
    v16 = a2[12];
    if (v16)
    {
      v17 = a2[13];
      *(_QWORD *)(a1 + 96) = v16;
      *(_QWORD *)(a1 + 104) = v17;
      swift_retain(v16);
      swift_retain(v17);
    }
    else
    {
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
    }
    v18 = a2[14];
    if (v18)
    {
      v19 = a2[15];
      *(_QWORD *)(a1 + 112) = v18;
      *(_QWORD *)(a1 + 120) = v19;
      swift_retain(v18);
      swift_retain(v19);
    }
    else
    {
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    }
    v20 = *(int *)(a3 + 44);
    v21 = (void *)(a1 + v20);
    v22 = (char *)a2 + v20;
    v23 = type metadata accessor for BlendMode(0);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = sub_10004CFD4(&qword_1009F0298);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
  }
  return a1;
}

uint64_t sub_1005F54F4(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_release(*a1);
  swift_release(a1[3]);
  swift_release(a1[6]);
  swift_release(a1[7]);
  swift_release(a1[8]);
  swift_release(a1[9]);
  v4 = a1[10];
  if (v4)
  {
    swift_release(v4);
    swift_release(a1[11]);
  }
  v5 = a1[12];
  if (v5)
  {
    swift_release(v5);
    swift_release(a1[13]);
  }
  v6 = a1[14];
  if (v6)
  {
    swift_release(v6);
    swift_release(a1[15]);
  }
  v7 = (char *)a1 + *(int *)(a2 + 44);
  v8 = type metadata accessor for BlendMode(0);
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

uint64_t sub_1005F55D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  v7 = a2[3];
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  v8 = a2[6];
  v9 = a2[7];
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  v10 = a2[8];
  v11 = a2[9];
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  v13 = a2 + 10;
  v12 = a2[10];
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v10);
  swift_retain(v11);
  if (v12)
  {
    v14 = a2[11];
    *(_QWORD *)(a1 + 80) = v12;
    *(_QWORD *)(a1 + 88) = v14;
    swift_retain(v12);
    swift_retain(v14);
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *v13;
  }
  v15 = a2[12];
  if (v15)
  {
    v16 = a2[13];
    *(_QWORD *)(a1 + 96) = v15;
    *(_QWORD *)(a1 + 104) = v16;
    swift_retain(v15);
    swift_retain(v16);
  }
  else
  {
    *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  }
  v17 = a2[14];
  if (v17)
  {
    v18 = a2[15];
    *(_QWORD *)(a1 + 112) = v17;
    *(_QWORD *)(a1 + 120) = v18;
    swift_retain(v17);
    swift_retain(v18);
  }
  else
  {
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
  }
  v19 = *(int *)(a3 + 44);
  v20 = (void *)(a1 + v19);
  v21 = (char *)a2 + v19;
  v22 = type metadata accessor for BlendMode(0);
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = sub_10004CFD4(&qword_1009F0298);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

_QWORD *sub_1005F5790(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  a1[1] = a2[1];
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_retain(v8);
  swift_release(v9);
  a1[4] = a2[4];
  a1[5] = a2[5];
  v10 = a2[6];
  v11 = a1[6];
  a1[6] = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = a2[7];
  v13 = a1[7];
  a1[7] = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = a2[8];
  v15 = a1[8];
  a1[8] = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = a2[9];
  v17 = a1[9];
  a1[9] = v16;
  swift_retain(v16);
  swift_release(v17);
  v18 = a1[10];
  v19 = a2[10];
  if (v18)
  {
    if (v19)
    {
      a1[10] = v19;
      swift_retain(v19);
      swift_release(v18);
      v20 = a2[11];
      v21 = a1[11];
      a1[11] = v20;
      swift_retain(v20);
      swift_release(v21);
      goto LABEL_8;
    }
    sub_1005F5AA4(a1 + 10);
  }
  else if (v19)
  {
    a1[10] = v19;
    v22 = a2[11];
    a1[11] = v22;
    swift_retain(v19);
    swift_retain(v22);
    goto LABEL_8;
  }
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
LABEL_8:
  v23 = a1[12];
  v24 = a2[12];
  if (v23)
  {
    if (v24)
    {
      a1[12] = v24;
      swift_retain(v24);
      swift_release(v23);
      v25 = a2[13];
      v26 = a1[13];
      a1[13] = v25;
      swift_retain(v25);
      swift_release(v26);
      goto LABEL_15;
    }
    sub_1005F5AA4(a1 + 12);
  }
  else if (v24)
  {
    a1[12] = v24;
    v27 = a2[13];
    a1[13] = v27;
    swift_retain(v24);
    swift_retain(v27);
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
LABEL_15:
  v28 = a1[14];
  v29 = a2[14];
  if (v28)
  {
    if (v29)
    {
      a1[14] = v29;
      swift_retain(v29);
      swift_release(v28);
      v30 = a2[15];
      v31 = a1[15];
      a1[15] = v30;
      swift_retain(v30);
      swift_release(v31);
      goto LABEL_22;
    }
    sub_1005F5AA4(a1 + 14);
  }
  else if (v29)
  {
    a1[14] = v29;
    v32 = a2[15];
    a1[15] = v32;
    swift_retain(v29);
    swift_retain(v32);
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
LABEL_22:
  v33 = *(int *)(a3 + 44);
  v34 = (char *)a1 + v33;
  v35 = (char *)a2 + v33;
  v36 = type metadata accessor for BlendMode(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38(v34, 1, v36);
  v40 = v38(v35, 1, v36);
  if (!v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 24))(v34, v35, v36);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v36);
    goto LABEL_27;
  }
  if (v40)
  {
LABEL_27:
    v41 = sub_10004CFD4(&qword_1009F0298);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  return a1;
}

_QWORD *sub_1005F5AA4(_QWORD *a1)
{
  swift_release(*a1);
  swift_release(a1[1]);
  return a1;
}

uint64_t sub_1005F5AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v6 = *(int *)(a3 + 44);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  v9 = type metadata accessor for BlendMode(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_10004CFD4(&qword_1009F0298);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t *sub_1005F5BC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  v7 = a1[3];
  a1[3] = a2[3];
  swift_release(v7);
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  v8 = a1[6];
  a1[6] = a2[6];
  swift_release(v8);
  v9 = a1[7];
  a1[7] = a2[7];
  swift_release(v9);
  v10 = a1[8];
  a1[8] = a2[8];
  swift_release(v10);
  v11 = a1[9];
  a1[9] = a2[9];
  swift_release(v11);
  v12 = a1[10];
  v13 = a2[10];
  if (v12)
  {
    if (v13)
    {
      a1[10] = v13;
      swift_release(v12);
      v14 = a1[11];
      a1[11] = a2[11];
      swift_release(v14);
      goto LABEL_6;
    }
    sub_1005F5AA4(a1 + 10);
  }
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
LABEL_6:
  v15 = a1[12];
  v16 = a2[12];
  if (v15)
  {
    if (v16)
    {
      a1[12] = v16;
      swift_release(v15);
      v17 = a1[13];
      a1[13] = a2[13];
      swift_release(v17);
      goto LABEL_11;
    }
    sub_1005F5AA4(a1 + 12);
  }
  *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
LABEL_11:
  v18 = a1[14];
  v19 = a2[14];
  if (v18)
  {
    if (v19)
    {
      a1[14] = v19;
      swift_release(v18);
      v20 = a1[15];
      a1[15] = a2[15];
      swift_release(v20);
      goto LABEL_16;
    }
    sub_1005F5AA4(a1 + 14);
  }
  *((_OWORD *)a1 + 7) = *((_OWORD *)a2 + 7);
LABEL_16:
  v21 = *(int *)(a3 + 44);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for BlendMode(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_21;
  }
  if (v28)
  {
LABEL_21:
    v29 = sub_10004CFD4(&qword_1009F0298);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_1005F5E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005F5E10);
}

uint64_t sub_1005F5E10(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009F0298);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 44)], a2, v8);
  }
}

uint64_t sub_1005F5E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005F5E9C);
}

char *sub_1005F5E9C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009F0298);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 44)], a2, a2, v7);
  }
  return result;
}

void sub_1005F5F14(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_1007339B8;
  v4[1] = &unk_1007339B8;
  v4[2] = &unk_100733950;
  v4[3] = &unk_100733950;
  v4[4] = &unk_1007339D0;
  v4[5] = &unk_1007339D0;
  v4[6] = &unk_1007339D0;
  sub_10026B338(319, (unint64_t *)&unk_1009F03B8, (uint64_t (*)(uint64_t))&type metadata accessor for BlendMode, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
  }
}

ValueMetadata *type metadata accessor for BuyButtonView.Style.Button()
{
  return &type metadata for BuyButtonView.Style.Button;
}

uint64_t sub_1005F5FCC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100879E78, 1);
}

double sub_1005F5FDC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t KeyPath;
  uint64_t v20;
  __n128 v21;
  void (*v22)(_QWORD *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  __n128 v45;
  uint64_t v46;
  void (*v47)(_QWORD *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double result;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;

  v2 = v1;
  v4 = type metadata accessor for BookThemeEntity.ButtonStyle(0);
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  __chkstk_darwin(v4);
  v70 = (uint64_t *)((char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __chkstk_darwin(v6);
  v65 = (uint64_t *)((char *)&v64 - v8);
  v9 = type metadata accessor for BookThemeEntity.ProgressStyle(0, v7);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v64 - v14);
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v64 - v17);
  KeyPath = swift_getKeyPath(&unk_100733E80);
  v20 = swift_getKeyPath(&unk_100733EA8);
  static Published.subscript.getter(v18, v2, KeyPath, v20);
  swift_release(KeyPath);
  v21 = swift_release(v20);
  v71 = BookThemeEntity.ProgressStyle.tint.getter(v21);
  v22 = *(void (**)(_QWORD *, uint64_t))(v10 + 8);
  v22(v18, v9);
  v23 = swift_getKeyPath(&unk_100733E80);
  v24 = swift_getKeyPath(&unk_100733EA8);
  static Published.subscript.getter(v15, v2, v23, v24);
  swift_release(v23);
  v25 = swift_release(v24);
  v26 = BookThemeEntity.ProgressStyle.foregroundOpacity.getter(v25);
  v22(v15, v9);
  v27 = swift_getKeyPath(&unk_100733E80);
  v28 = swift_getKeyPath(&unk_100733EA8);
  static Published.subscript.getter(v12, v2, v27, v28);
  swift_release(v27);
  v29 = swift_release(v28);
  v30 = BookThemeEntity.ProgressStyle.backgroundOpacity.getter(v29);
  v22(v12, v9);
  v31 = swift_getKeyPath(&unk_100733EC8);
  v32 = swift_getKeyPath(&unk_100733EF0);
  static Published.subscript.getter(v18, v2, v31, v32);
  swift_release(v31);
  v33 = swift_release(v32);
  v67 = BookThemeEntity.ProgressStyle.tint.getter(v33);
  v22(v18, v9);
  v34 = swift_getKeyPath(&unk_100733EC8);
  v35 = swift_getKeyPath(&unk_100733EF0);
  static Published.subscript.getter(v15, v2, v34, v35);
  swift_release(v34);
  v36 = swift_release(v35);
  v37 = BookThemeEntity.ProgressStyle.foregroundOpacity.getter(v36);
  v22(v15, v9);
  v38 = swift_getKeyPath(&unk_100733EC8);
  v39 = swift_getKeyPath(&unk_100733EF0);
  static Published.subscript.getter(v12, v2, v38, v39);
  swift_release(v38);
  v40 = swift_release(v39);
  v41 = BookThemeEntity.ProgressStyle.backgroundOpacity.getter(v40);
  v22(v12, v9);
  v42 = swift_getKeyPath(&unk_100733F10);
  v43 = swift_getKeyPath(&unk_100733F38);
  v44 = v65;
  static Published.subscript.getter(v65, v2, v42, v43);
  swift_release(v42);
  v45 = swift_release(v43);
  v66 = BookThemeEntity.ButtonStyle.label.getter(v45);
  v46 = v69;
  v47 = *(void (**)(_QWORD *, uint64_t))(v68 + 8);
  v47(v44, v69);
  v48 = swift_getKeyPath(&unk_100733F10);
  v49 = swift_getKeyPath(&unk_100733F38);
  v50 = v70;
  static Published.subscript.getter(v70, v2, v48, v49);
  swift_release(v48);
  v51 = swift_release(v49);
  v68 = BookThemeEntity.ButtonStyle.fill.getter(v51);
  v47(v50, v46);
  v52 = swift_getKeyPath(&unk_100733F58);
  v53 = swift_getKeyPath(&unk_100733F80);
  static Published.subscript.getter(v44, v2, v52, v53);
  swift_release(v52);
  v54 = swift_release(v53);
  v55 = BookThemeEntity.ButtonStyle.label.getter(v54);
  v47(v44, v46);
  v56 = swift_getKeyPath(&unk_100733F58);
  v57 = swift_getKeyPath(&unk_100733F80);
  static Published.subscript.getter(v50, v2, v56, v57);
  swift_release(v56);
  v58 = swift_release(v57);
  v59 = BookThemeEntity.ButtonStyle.fill.getter(v58);
  v47(v50, v46);
  v60 = a1 + *(int *)(type metadata accessor for BuyButtonView.Style(0) + 44);
  v61 = type metadata accessor for BlendMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
  *(_QWORD *)a1 = v71;
  *(double *)(a1 + 8) = v26;
  *(double *)(a1 + 16) = v30;
  *(_QWORD *)(a1 + 24) = v67;
  *(double *)(a1 + 32) = v37;
  *(double *)(a1 + 40) = v41;
  v62 = v68;
  *(_QWORD *)(a1 + 48) = v66;
  *(_QWORD *)(a1 + 56) = v62;
  *(_QWORD *)(a1 + 64) = v55;
  *(_QWORD *)(a1 + 72) = v59;
  result = 0.0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  return result;
}

uint64_t sub_1005F650C(double *a1, uint64_t (*a2)(double, double))
{
  return a2(*a1, a1[1]);
}

double sub_1005F6530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v0 = type metadata accessor for BuyButtonView.Style(0);
  sub_10001BFD8(v0, qword_100A1EEF0);
  v1 = sub_100048F64(v0, (uint64_t)qword_100A1EEF0);
  v2 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v3 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v4 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v5 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  v6 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v7 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
  v8 = v1 + *(int *)(v0 + 44);
  v9 = type metadata accessor for BlendMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(_QWORD *)v1 = v2;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v1 + 8) = _Q0;
  *(_QWORD *)(v1 + 24) = v3;
  *(_OWORD *)(v1 + 32) = xmmword_1007147E0;
  *(_QWORD *)(v1 + 48) = v4;
  *(_QWORD *)(v1 + 56) = v5;
  *(_QWORD *)(v1 + 64) = v6;
  *(_QWORD *)(v1 + 72) = v7;
  result = 0.0;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  return result;
}

uint64_t sub_1005F6618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CEA48 != -1)
    swift_once(&qword_1009CEA48, sub_1005F6530);
  v2 = type metadata accessor for BuyButtonView.Style(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1EEF0);
  return sub_10002CD84(v3, a1, type metadata accessor for BuyButtonView.Style);
}

uint64_t sub_1005F6688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  id v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v41;
  uint64_t v42;

  v1 = type metadata accessor for BuyButtonView.Style(0);
  __chkstk_darwin(v1);
  v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v41 = (uint64_t)&v41 - v5;
  __chkstk_darwin(v6);
  v8 = (char *)&v41 - v7;
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v41 - v10);
  v12 = type metadata accessor for BuyButtonView(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v0 + *(int *)(v15 + 40);
  v17 = *(_QWORD *)v16;
  v18 = *(_BYTE *)(v16 + 8);
  sub_1001F2508(*(_QWORD *)v16, v18);
  v19 = sub_100667C14(v17, v18);
  sub_1001F2564(v17, v18);
  sub_10002CD84(v0, (uint64_t)v14, type metadata accessor for BuyButtonView);
  if ((v19 & 1) != 0)
  {
    v20 = *((_QWORD *)v14 + 1);
    KeyPath = swift_getKeyPath(&unk_100733AF0);
    v22 = swift_getKeyPath(&unk_100733B18);
    swift_retain(v20);
    static Published.subscript.getter(&v42, v23, KeyPath);
    swift_release(v20);
    swift_release(KeyPath);
    swift_release(v22);
    v24 = v42;
  }
  else
  {
    v24 = 0;
  }
  sub_10002C8F0((uint64_t)v14, type metadata accessor for BuyButtonView);
  v25 = *(_QWORD *)(v0 + 8);
  v26 = swift_getKeyPath(&unk_100733A78);
  v27 = swift_getKeyPath(&unk_100733AA0);
  swift_retain(v25);
  static Published.subscript.getter((uint64_t *)((char *)&v42 + 1), v28, v26);
  swift_release(v25);
  swift_release(v26);
  swift_release(v27);
  if (BYTE1(v42))
  {
    if (BYTE1(v42) == 1)
    {
      if (v24)
      {
        sub_100668BDC((uint64_t)v8);
        v29 = *((_QWORD *)v8 + 10);
        sub_1005F96BC(v29, *((_QWORD *)v8 + 11));
        sub_10002C8F0((uint64_t)v8, type metadata accessor for BuyButtonView.Style);
        if (!v29)
        {
          v29 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
          v30 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksOrange");
LABEL_13:
          Color.init(uiColor:)(v30);
        }
      }
      else
      {
        v34 = v41;
        sub_100668BDC(v41);
        v29 = *(_QWORD *)(v34 + 96);
        sub_1005F96BC(v29, *(_QWORD *)(v34 + 104));
        sub_10002C8F0(v34, type metadata accessor for BuyButtonView.Style);
        if (!v29)
        {
          v35 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
          v36.n128_u64[0] = 0.75;
          v29 = Color.opacity(_:)(v35, v36);
          swift_release(v35);
          v37 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksOrange");
          v38 = Color.init(uiColor:)(v37);
          v39.n128_u64[0] = 0.5;
          Color.opacity(_:)(v38, v39);
          swift_release(v38);
        }
      }
    }
    else
    {
      sub_100668BDC((uint64_t)v3);
      v29 = *((_QWORD *)v3 + 14);
      sub_1005F96BC(v29, *((_QWORD *)v3 + 15));
      sub_10002C8F0((uint64_t)v3, type metadata accessor for BuyButtonView.Style);
      if (!v29)
      {
        v32 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
        v33.n128_u64[0] = 0x3FE3333333333333;
        v29 = Color.opacity(_:)(v32, v33);
        swift_release(v32);
        v30 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksOrange");
        goto LABEL_13;
      }
    }
  }
  else
  {
    sub_100668BDC((uint64_t)v11);
    if (v24)
    {
      v29 = v11[6];
      v31 = v11[7];
    }
    else
    {
      v29 = v11[8];
      v31 = v11[9];
    }
    swift_retain(v29);
    swift_retain(v31);
    sub_10002C8F0((uint64_t)v11, type metadata accessor for BuyButtonView.Style);
  }
  return v29;
}

void sub_1005F6A6C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  v1 = sub_1005F6B58();
  v2 = *(_QWORD *)(v0 + 8);
  if ((v1 & 1) != 0)
  {
    KeyPath = swift_getKeyPath(&unk_100733E38);
    v4 = swift_getKeyPath(&unk_100733E60);
    swift_retain(v2);
    static Published.subscript.getter(v9, v5, KeyPath);
    swift_release(v2);
    swift_release(KeyPath);
    swift_release(v4);
    if (!v9[1])
      __break(1u);
  }
  else
  {
    v6 = swift_getKeyPath(&unk_100733DF0);
    v7 = swift_getKeyPath(&unk_100733E18);
    swift_retain(v2);
    static Published.subscript.getter(v9, v8, v6);
    swift_release(v2);
    swift_release(v6);
    swift_release(v7);
  }
}

uint64_t sub_1005F6B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  unint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];

  v1 = type metadata accessor for BuyButtonView(0);
  __chkstk_darwin(v1);
  v34 = (uint64_t)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for UserInterfaceSizeClass(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v31 - v13;
  __chkstk_darwin(v15);
  v17 = (char *)&v31 - v16;
  v33 = v0;
  sub_100667DCC((uint64_t)&v31 - v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v14, enum case for UserInterfaceSizeClass.compact(_:), v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  v18 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10000B5E4((uint64_t)v17, (uint64_t)v8, (uint64_t *)&unk_1009D8210);
  sub_10000B5E4((uint64_t)v14, v18, (uint64_t *)&unk_1009D8210);
  v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v19((uint64_t)v8, 1, v3) == 1)
  {
    sub_100010960((uint64_t)v14, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v17, (uint64_t *)&unk_1009D8210);
    if (v19(v18, 1, v3) == 1)
    {
      sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009D8210);
      v20 = v34;
      sub_10002CD84(v33, v34, type metadata accessor for BuyButtonView);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_10000B5E4((uint64_t)v8, (uint64_t)v11, (uint64_t *)&unk_1009D8210);
  if (v19(v18, 1, v3) == 1)
  {
    sub_100010960((uint64_t)v14, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v17, (uint64_t *)&unk_1009D8210);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
LABEL_6:
    sub_100010960((uint64_t)v8, &qword_1009D3C08);
    v20 = v34;
    sub_10002CD84(v33, v34, type metadata accessor for BuyButtonView);
LABEL_10:
    sub_10002C8F0(v20, type metadata accessor for BuyButtonView);
    return 0;
  }
  v21 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v32, v18, v3);
  v22 = sub_100266AD8();
  v23 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v21, v3, v22);
  v24 = *(void (**)(char *, uint64_t))(v4 + 8);
  v24(v21, v3);
  sub_100010960((uint64_t)v14, (uint64_t *)&unk_1009D8210);
  sub_100010960((uint64_t)v17, (uint64_t *)&unk_1009D8210);
  v24(v11, v3);
  sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009D8210);
  v20 = v34;
  sub_10002CD84(v33, v34, type metadata accessor for BuyButtonView);
  if ((v23 & 1) == 0)
    goto LABEL_10;
LABEL_8:
  v25 = *(_QWORD *)(v20 + 8);
  KeyPath = swift_getKeyPath(&unk_100733E38);
  v27 = swift_getKeyPath(&unk_100733E60);
  swift_retain(v25);
  static Published.subscript.getter(v35, v28, KeyPath);
  swift_release(v25);
  swift_release(KeyPath);
  swift_release(v27);
  v29 = v35[1];
  sub_10002C8F0(v20, type metadata accessor for BuyButtonView);
  if (v29)
  {
    swift_bridgeObjectRelease(v29);
    return 1;
  }
  return 0;
}

uint64_t sub_1005F6F54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;

  v2 = v1;
  v79 = a1;
  v3 = sub_10004CFD4(&qword_1009D8918);
  __chkstk_darwin(v3);
  v77 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v78 = (char *)&v68 - v6;
  v7 = sub_10004CFD4(&qword_1009F0400);
  __chkstk_darwin(v7);
  v76 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v72 = (uint64_t *)((char *)&v68 - v10);
  v75 = sub_10004CFD4(&qword_1009F0408);
  __chkstk_darwin(v75);
  v74 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009F0298);
  __chkstk_darwin(v12);
  v70 = (uint64_t)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for BuyButtonView.Style(0);
  __chkstk_darwin(v69);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for BlendMode(0);
  v73 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v80 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for BuyButtonView(0);
  __chkstk_darwin(v18);
  v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v68 - v22;
  v25 = v2 + *(int *)(v24 + 40);
  v26 = *(_QWORD *)v25;
  v27 = *(_BYTE *)(v25 + 8);
  sub_1001F2508(*(_QWORD *)v25, v27);
  v28 = sub_100667C14(v26, v27);
  sub_1001F2564(v26, v27);
  sub_10002CD84(v2, (uint64_t)v23, type metadata accessor for BuyButtonView);
  if ((v28 & 1) != 0)
  {
    v29 = *((_QWORD *)v23 + 1);
    KeyPath = swift_getKeyPath(&unk_100733AF0);
    v31 = swift_getKeyPath(&unk_100733B18);
    swift_retain(v29);
    static Published.subscript.getter(&v81, v32, KeyPath);
    swift_release(v29);
    swift_release(KeyPath);
    swift_release(v31);
    v33 = v81 ^ 1;
  }
  else
  {
    v33 = 1;
  }
  sub_10002C8F0((uint64_t)v23, type metadata accessor for BuyButtonView);
  v34 = *(_QWORD *)(v2 + 8);
  v35 = swift_getKeyPath(&unk_100733A78);
  v36 = swift_getKeyPath(&unk_100733AA0);
  swift_retain(v34);
  static Published.subscript.getter((uint64_t *)((char *)&v81 + 2), v37, v35);
  swift_release(v34);
  swift_release(v35);
  swift_release(v36);
  LODWORD(v34) = BYTE2(v81);
  sub_10002CD84(v2, (uint64_t)v20, type metadata accessor for BuyButtonView);
  v71 = v16;
  if ((_DWORD)v34 == 1)
  {
    sub_10002C8F0((uint64_t)v20, type metadata accessor for BuyButtonView);
    v38 = v73;
    v39 = v80;
LABEL_8:
    v46 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v38 + 104))(v39, enum case for BlendMode.normal(_:), v16);
    goto LABEL_9;
  }
  v40 = (uint64_t)v15;
  v41 = *((_QWORD *)v20 + 1);
  v42 = swift_getKeyPath(&unk_100733A78);
  v43 = swift_getKeyPath(&unk_100733AA0);
  swift_retain(v41);
  static Published.subscript.getter((uint64_t *)((char *)&v81 + 1), v44, v42);
  swift_release(v41);
  swift_release(v42);
  swift_release(v43);
  LODWORD(v41) = BYTE1(v81);
  sub_10002C8F0((uint64_t)v20, type metadata accessor for BuyButtonView);
  v45 = (_DWORD)v41 == 2;
  v38 = v73;
  v39 = v80;
  if (v45)
    goto LABEL_8;
  sub_100668BDC(v40);
  v67 = v70;
  sub_10000B5E4(v40 + *(int *)(v69 + 44), v70, &qword_1009F0298);
  sub_10002C8F0(v40, type metadata accessor for BuyButtonView.Style);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v67, 1, v16) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v39, enum case for BlendMode.normal(_:), v16);
    v46 = sub_100010960(v67, &qword_1009F0298);
  }
  else
  {
    v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 32))(v39, v67, v16);
  }
LABEL_9:
  v47 = static Alignment.center.getter(v46);
  v48 = (uint64_t)v72;
  *v72 = v47;
  *(_QWORD *)(v48 + 8) = v49;
  v50 = sub_10004CFD4(&qword_1009F0410);
  sub_1005F75A8(v2, v33 & 1, v48 + *(int *)(v50 + 44));
  v51 = enum case for ContentSizeCategory.extraExtraExtraLarge(_:);
  v52 = type metadata accessor for ContentSizeCategory(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 104))(v78, v51, v52);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, v52);
  v55 = v77;
  sub_10000B5E4(v54, v77, &qword_1009D8918);
  v56 = v76;
  sub_10000B5E4(v48, v76, &qword_1009F0400);
  v57 = swift_getKeyPath(&unk_100733AC0);
  v59 = (uint64_t)v74;
  v58 = v75;
  v60 = (uint64_t *)&v74[*(int *)(v75 + 40)];
  *v60 = v57;
  v61 = sub_10004CFD4(&qword_1009D8790);
  swift_storeEnumTagMultiPayload(v60, v61, 0);
  sub_100025B3C(v55, v59, &qword_1009D8918);
  sub_100025B3C(v56, v59 + *(int *)(v58 + 36), &qword_1009F0400);
  sub_100010960(v54, &qword_1009D8918);
  sub_100010960(v48, &qword_1009F0400);
  v62 = sub_10004CFD4(&qword_1009F0418);
  v63 = v79;
  v64 = v80;
  v65 = v71;
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v79 + *(int *)(v62 + 36), v80, v71);
  sub_100025B3C(v59, v63, &qword_1009F0408);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v64, v65);
}

uint64_t sub_1005F75A8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  __n128 v59;
  uint64_t v60;
  uint64_t KeyPath;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  __n128 v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t OpaqueTypeConformance2;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t@<X8>);
  void (*v94)(uint64_t@<X8>);
  uint64_t v95;
  void (**v96)(uint64_t@<X8>);
  uint64_t v97;
  uint64_t v98;
  uint64_t (**v99)(double *);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  ValueMetadata *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  uint64_t *v117;
  uint64_t v118;
  ValueMetadata *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  _BOOL8 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  ValueMetadata *v139;
  ValueMetadata *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  char *v158;
  uint64_t v159;
  __n128 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  ValueMetadata *v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  BOOL v173;
  ValueMetadata *v174;
  uint64_t v175;
  __n128 v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  __n128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  _QWORD *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  ValueMetadata *v239;
  char *v240;
  char *v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  int v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char v265[8];
  uint64_t v266;
  _QWORD v267[2];
  uint64_t v268;
  ValueMetadata *v269;
  uint64_t v270;
  unint64_t v271;
  double v272;
  uint64_t v273;
  char v274;
  uint64_t v275;
  char v276;
  __int128 v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char v281;
  __int128 v282;

  v251 = a2;
  v261 = a3;
  v243 = sub_10004CFD4(&qword_1009F0420);
  v244 = *(_QWORD *)(v243 - 8);
  __chkstk_darwin(v243);
  v241 = (char *)&v213 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v247 = sub_10004CFD4(&qword_1009F0428);
  v249 = *(_QWORD *)(v247 - 8);
  __chkstk_darwin(v247);
  v242 = (char *)&v213 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v250 = sub_10004CFD4(&qword_1009F0430);
  __chkstk_darwin(v250);
  v245 = (char *)&v213 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v246 = (char *)&v213 - v8;
  v252 = sub_10004CFD4(&qword_1009F0438);
  __chkstk_darwin(v252);
  v256 = (uint64_t)&v213 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = sub_10004CFD4(&qword_1009F0440);
  __chkstk_darwin(v254);
  v257 = (uint64_t)&v213 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v255 = sub_10004CFD4(&qword_1009F0448);
  __chkstk_darwin(v255);
  v260 = (uint64_t)&v213 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v253 = (uint64_t)&v213 - v13;
  __chkstk_darwin(v14);
  v259 = (uint64_t)&v213 - v15;
  v238 = sub_10004CFD4(&qword_1009F0450);
  v239 = *(ValueMetadata **)(v238 - 8);
  __chkstk_darwin(v238);
  v235 = (char *)&v213 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009F0458);
  __chkstk_darwin(v17);
  v258 = (uint64_t)&v213 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v237 = (char *)&v213 - v20;
  __chkstk_darwin(v21);
  v264 = (uint64_t)&v213 - v22;
  v233 = sub_10004CFD4(&qword_1009F0460);
  __chkstk_darwin(v233);
  v232 = (uint64_t)&v213 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for BuyButtonView(0);
  v231 = *(_QWORD *)(v24 - 8);
  v25 = v24;
  v230 = v24;
  v229 = *(_QWORD *)(v231 + 64);
  __chkstk_darwin(v24);
  v240 = (char *)&v213 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v236 = (uint64_t)&v213 - v28;
  __chkstk_darwin(v29);
  v228 = (uint64_t)&v213 - v30;
  v262 = type metadata accessor for AccessibilityChildBehavior(0);
  v227 = *(_QWORD *)(v262 - 8);
  __chkstk_darwin(v262);
  v220 = (char *)&v213 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for BuyButtonView.Style(0);
  __chkstk_darwin(v32);
  v234 = (uint64_t)&v213 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v36 = (char *)&v213 - v35;
  __chkstk_darwin(v37);
  v39 = (uint64_t *)((char *)&v213 - v38);
  v215 = sub_10004CFD4(&qword_1009D8400);
  v40 = *(_QWORD *)(v215 - 8);
  __chkstk_darwin(v215);
  v42 = (char *)&v213 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = sub_10004CFD4(&qword_1009F0468);
  __chkstk_darwin(v214);
  v44 = (char *)&v213 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = sub_10004CFD4(&qword_1009F0470);
  __chkstk_darwin(v217);
  v46 = (char *)&v213 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v219 = sub_10004CFD4(&qword_1009F0478);
  v221 = *(_QWORD *)(v219 - 8);
  __chkstk_darwin(v219);
  v216 = (char *)&v213 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_10004CFD4(&qword_1009F0480);
  __chkstk_darwin(v48);
  v218 = (char *)&v213 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v223 = sub_10004CFD4(&qword_1009F0488);
  __chkstk_darwin(v223);
  v248 = (uint64_t)&v213 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  v222 = (uint64_t)&v213 - v52;
  __chkstk_darwin(v53);
  v263 = (uint64_t)&v213 - v54;
  ProgressView<>.init<>()(v55);
  v224 = a1 + *(int *)(v25 + 24);
  sub_100668BDC((uint64_t)v39);
  v56 = (uint64_t)v39;
  v225 = v39;
  v57 = *v39;
  swift_retain(v57);
  sub_10002C8F0(v56, type metadata accessor for BuyButtonView.Style);
  sub_100668BDC((uint64_t)v36);
  v226 = v36;
  v58 = *((_QWORD *)v36 + 1);
  sub_10002C8F0((uint64_t)v36, type metadata accessor for BuyButtonView.Style);
  v59.n128_u64[0] = v58;
  v60 = Color.opacity(_:)(v57, v59);
  swift_release(v57);
  KeyPath = swift_getKeyPath(&unk_100733B38);
  v268 = v60;
  v62 = swift_retain(v60);
  v63 = AnyShapeStyle.init<A>(_:)(&v268, &type metadata for Color, &protocol witness table for Color, v62);
  v64 = v215;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v44, v42, v215);
  v65 = swift_release(v60);
  v66 = (uint64_t *)&v44[*(int *)(v214 + 36)];
  *v66 = KeyPath;
  v66[1] = v63;
  (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v42, v64, v65);
  v67 = *(_QWORD *)(a1 + 8);
  v68 = swift_getKeyPath(&unk_100733B68);
  v69 = swift_getKeyPath(&unk_100733B90);
  swift_retain(v67);
  static Published.subscript.getter(&v268, v70, v68);
  swift_release(v67);
  swift_release(v68);
  swift_release(v69);
  v71 = 0.0;
  if (v268 == 1)
    v72 = 1.0;
  else
    v72 = 0.0;
  sub_10000B5E4((uint64_t)v44, (uint64_t)v46, &qword_1009F0468);
  v73 = v217;
  *(double *)&v46[*(int *)(v217 + 36)] = v72;
  v74 = sub_100010960((uint64_t)v44, &qword_1009F0468);
  v75 = v220;
  static AccessibilityChildBehavior.ignore.getter(v74);
  v76 = sub_1001F5558(&qword_1009F0490, &qword_1009F0470, (void (*)(void))sub_1005F937C);
  v77 = v216;
  v78 = v73;
  View.accessibilityElement(children:)(v75, v73, v76);
  v227 = *(_QWORD *)(v227 + 8);
  ((void (*)(char *, uint64_t))v227)(v75, v262);
  sub_100010960((uint64_t)v46, &qword_1009F0470);
  v79 = *(_QWORD *)(a1 + 8);
  v80 = swift_getKeyPath(&unk_100733B68);
  v81 = swift_getKeyPath(&unk_100733B90);
  swift_retain(v79);
  static Published.subscript.getter(&v268, v82, v80);
  swift_release(v79);
  swift_release(v80);
  swift_release(v81);
  v83 = v268 != 1;
  v268 = v78;
  v269 = (ValueMetadata *)v76;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v268, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v85 = (uint64_t)v218;
  v86 = v219;
  View.accessibilityHidden(_:)(v83, v219, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v221 + 8))(v77, v86);
  v87 = v228;
  sub_10002CD84(a1, v228, type metadata accessor for BuyButtonView);
  v88 = *(unsigned __int8 *)(v231 + 80);
  v89 = (v88 + 16) & ~v88;
  v229 += v89;
  v231 = v88 | 7;
  v90 = swift_allocObject(&unk_100917158, v229, v88 | 7);
  v91 = sub_1005F941C(v87, v90 + v89);
  v92 = static Alignment.center.getter(v91);
  v94 = v93;
  v95 = v232;
  sub_10000B5E4(v85, v232, &qword_1009F0480);
  v96 = (void (**)(uint64_t@<X8>))(v95 + *(int *)(v233 + 36));
  *v96 = sub_1003202B0;
  v96[1] = 0;
  v96[2] = (void (*)(uint64_t@<X8>))v92;
  v96[3] = v94;
  v97 = swift_allocObject(&unk_100917180, 32, 7);
  *(_QWORD *)(v97 + 16) = sub_1005F9460;
  *(_QWORD *)(v97 + 24) = v90;
  v98 = v222;
  sub_10000B5E4(v95, v222, &qword_1009F0460);
  v99 = (uint64_t (**)(double *))(v98 + *(int *)(v223 + 36));
  *v99 = sub_1005F94C8;
  v99[1] = (uint64_t (*)(double *))v97;
  sub_100010960(v95, &qword_1009F0460);
  sub_100010960(v85, &qword_1009F0480);
  sub_100025B3C(v98, v263, &qword_1009F0488);
  v100 = *(_QWORD *)(a1 + 8);
  v101 = a1;
  v102 = swift_getKeyPath(&unk_100733BB0);
  v103 = swift_getKeyPath(&unk_100733BD8);
  swift_retain(v100);
  static Published.subscript.getter(&v268, v104, v102);
  swift_release(v100);
  swift_release(v102);
  swift_release(v103);
  v105 = v268;
  v106 = (uint64_t)v225;
  sub_100668BDC((uint64_t)v225);
  v107 = *(ValueMetadata **)(v106 + 24);
  swift_retain(v107);
  sub_10002C8F0(v106, type metadata accessor for BuyButtonView.Style);
  v108 = (uint64_t)v226;
  sub_100668BDC((uint64_t)v226);
  v109 = *(_QWORD *)(v108 + 32);
  sub_10002C8F0(v108, type metadata accessor for BuyButtonView.Style);
  v110 = v234;
  sub_100668BDC(v234);
  v111 = *(_QWORD *)(v110 + 40);
  sub_10002C8F0(v110, type metadata accessor for BuyButtonView.Style);
  v112 = *(_QWORD *)(v101 + 8);
  v113 = swift_getKeyPath(&unk_100733B68);
  v114 = swift_getKeyPath(&unk_100733B90);
  swift_retain(v112);
  static Published.subscript.getter(&v268, v115, v113);
  swift_release(v112);
  swift_release(v113);
  swift_release(v114);
  if (v268 == 2)
    v116 = 1.0;
  else
    v116 = 0.0;
  v117 = (uint64_t *)(v101 + *(int *)(v230 + 28));
  v119 = (ValueMetadata *)v117[1];
  v120 = v117[2];
  v268 = *v117;
  v118 = v268;
  v269 = v119;
  v270 = v120;
  sub_10004CFD4(&qword_1009D1CE8);
  State.wrappedValue.getter(&v278);
  v121 = v278;
  v268 = v118;
  v269 = v119;
  v270 = v120;
  v122 = State.wrappedValue.getter(&v278);
  v123 = v279;
  v124 = static Alignment.center.getter(v122);
  v126 = _FrameLayout.init(width:height:alignment:)(&v278, v121, 0, v123, 0, v124, v125);
  v268 = v105;
  v269 = v107;
  v270 = v109;
  v271 = v111;
  v272 = v116;
  v273 = v278;
  v274 = v279;
  v275 = v280;
  v276 = v281;
  v277 = v282;
  static AccessibilityChildBehavior.ignore.getter(v126);
  v127 = sub_10004CFD4(&qword_1009F04A0);
  v128 = sub_1001F5558(&qword_1009F04A8, &qword_1009F04A0, (void (*)(void))sub_1005F94F4);
  v129 = v235;
  View.accessibilityElement(children:)(v75, v127, v128);
  ((void (*)(char *, uint64_t))v227)(v75, v262);
  swift_release(v269);
  v130 = *(_QWORD *)(v101 + 8);
  v131 = swift_getKeyPath(&unk_100733B68);
  v132 = swift_getKeyPath(&unk_100733B90);
  swift_retain(v130);
  static Published.subscript.getter(&v268, v133, v131);
  swift_release(v130);
  swift_release(v131);
  swift_release(v132);
  v134 = v268 != 1;
  v268 = v127;
  v269 = (ValueMetadata *)v128;
  v135 = swift_getOpaqueTypeConformance2(&v268, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v136 = (uint64_t)v237;
  v137 = v238;
  View.accessibilityHidden(_:)(v134, v238, v135);
  ((void (*)(char *, uint64_t))v239->Description)(v129, v137);
  sub_100025B3C(v136, v264, &qword_1009F0458);
  v138 = sub_1005F6688();
  v140 = v139;
  v141 = v236;
  sub_10002CD84(v101, v236, type metadata accessor for BuyButtonView);
  v142 = swift_allocObject(&unk_1009171A8, v229, v231);
  sub_1005F941C(v141, v142 + v89);
  v266 = v101;
  v143 = sub_10004CFD4(&qword_1009F04C8);
  v144 = sub_1005F9594();
  v145 = v241;
  Button.init(action:label:)(sub_1005F9560, v142, sub_1005F958C, v265, v143, v144);
  v146 = *(_QWORD *)(v101 + 8);
  v147 = swift_getKeyPath(&unk_100733BF8);
  v148 = swift_getKeyPath(&unk_100733C20);
  swift_retain(v146);
  static Published.subscript.getter(&v268, v149, v147);
  swift_release(v146);
  swift_release(v147);
  swift_release(v148);
  v150 = v268;
  v151 = *(_QWORD *)(v101 + 8);
  v152 = swift_getKeyPath(&unk_100733C40);
  v153 = swift_getKeyPath(&unk_100733C68);
  swift_retain(v151);
  static Published.subscript.getter(&v268, v154, v152);
  swift_release(v151);
  swift_release(v152);
  swift_release(v153);
  v155 = v268;
  v262 = v138;
  v268 = v138;
  v239 = v140;
  v269 = v140;
  v270 = v150;
  v271 = v155;
  v156 = sub_100030B34(&qword_1009F04D8, &qword_1009F0420, (uint64_t)&protocol conformance descriptor for Button<A>);
  v157 = sub_1005F9628();
  v158 = v242;
  v159 = v243;
  View.buttonStyle<A>(_:)(&v268, v243, &type metadata for SampleHeaderButtonStyle, v156, v157);
  v160 = swift_release(v150);
  (*(void (**)(char *, uint64_t, __n128))(v244 + 8))(v145, v159, v160);
  v161 = *(_QWORD *)(v101 + 8);
  v162 = swift_getKeyPath(&unk_100733C88);
  v163 = swift_getKeyPath(&unk_100733CB0);
  swift_retain(v161);
  static Published.subscript.getter(&v268, v164, v162);
  swift_release(v161);
  swift_release(v162);
  swift_release(v163);
  v165 = v269;
  v267[0] = v268;
  v267[1] = v269;
  v268 = v159;
  v166 = (uint64_t)v240;
  v269 = &type metadata for SampleHeaderButtonStyle;
  v270 = v156;
  v271 = v157;
  v167 = swift_getOpaqueTypeConformance2(&v268, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v168 = sub_1001F2108();
  v169 = (uint64_t)v245;
  v170 = v247;
  v171 = v167;
  v172 = v158;
  v173 = 1;
  View.accessibilityLabel<A>(_:)(v267, v247, &type metadata for String, v171, v168);
  v174 = v165;
  v175 = (uint64_t)v246;
  v176 = swift_bridgeObjectRelease(v174);
  (*(void (**)(char *, uint64_t, __n128))(v249 + 8))(v172, v170, v176);
  v177 = *(_QWORD *)(v101 + 8);
  v178 = swift_getKeyPath(&unk_100733CD0);
  v179 = swift_getKeyPath(&unk_100733CF8);
  swift_retain(v177);
  static Published.subscript.getter(&v268, v180, v178);
  swift_release(v177);
  swift_release(v178);
  v181 = swift_release(v179);
  v182 = Text.init<A>(_:)(&v268, &type metadata for String, v168, v181);
  v184 = v183;
  v186 = v185;
  LOBYTE(v179) = v187 & 1;
  ModifiedContent<>.accessibilityValue(_:)();
  sub_1001F5B28(v182, v184, v179);
  swift_bridgeObjectRelease(v186);
  sub_100010960(v169, &qword_1009F0430);
  sub_10002CD84(v101, v166, type metadata accessor for BuyButtonView);
  if ((v251 & 1) == 0)
  {
    v188 = *(_QWORD *)(v166 + 8);
    v189 = swift_getKeyPath(&unk_100733B68);
    v190 = swift_getKeyPath(&unk_100733B90);
    swift_retain(v188);
    static Published.subscript.getter(&v268, v191, v189);
    swift_release(v188);
    swift_release(v189);
    swift_release(v190);
    v173 = (_BYTE)v268 != 0;
  }
  sub_10002C8F0(v166, type metadata accessor for BuyButtonView);
  v192 = swift_getKeyPath(&unk_100733D18);
  v193 = swift_allocObject(&unk_1009171D0, 17, 7);
  *(_BYTE *)(v193 + 16) = v173;
  v194 = v256;
  sub_10000B5E4(v175, v256, &qword_1009F0430);
  v195 = (uint64_t *)(v194 + *(int *)(v252 + 36));
  *v195 = v192;
  v195[1] = (uint64_t)sub_100234614;
  v195[2] = v193;
  sub_100010960(v175, &qword_1009F0430);
  v196 = *(_QWORD *)(v101 + 8);
  v197 = swift_getKeyPath(&unk_100733B68);
  v198 = swift_getKeyPath(&unk_100733B90);
  swift_retain(v196);
  static Published.subscript.getter(&v268, v199, v197);
  swift_release(v196);
  swift_release(v197);
  swift_release(v198);
  if (!(_BYTE)v268)
    v71 = 1.0;
  v200 = v257;
  sub_10000B5E4(v194, v257, &qword_1009F0438);
  *(double *)(v200 + *(int *)(v254 + 36)) = v71;
  sub_100010960(v194, &qword_1009F0438);
  v201 = swift_getKeyPath(&unk_100733D48);
  v202 = v253;
  sub_10000B5E4(v200, v253, &qword_1009F0440);
  v203 = v202 + *(int *)(v255 + 36);
  *(_QWORD *)v203 = v201;
  *(_BYTE *)(v203 + 8) = 0;
  sub_100010960(v200, &qword_1009F0440);
  v204 = v259;
  sub_100025B3C(v202, v259, &qword_1009F0448);
  v205 = v263;
  v206 = v248;
  sub_10000B5E4(v263, v248, &qword_1009F0488);
  v207 = v264;
  v208 = v258;
  sub_10000B5E4(v264, v258, &qword_1009F0458);
  v209 = v260;
  sub_10000B5E4(v204, v260, &qword_1009F0448);
  v210 = v261;
  sub_10000B5E4(v206, v261, &qword_1009F0488);
  v211 = sub_10004CFD4(&qword_1009F04E8);
  sub_10000B5E4(v208, v210 + *(int *)(v211 + 48), &qword_1009F0458);
  sub_10000B5E4(v209, v210 + *(int *)(v211 + 64), &qword_1009F0448);
  swift_release(v239);
  swift_release(v262);
  sub_100010960(v204, &qword_1009F0448);
  sub_100010960(v207, &qword_1009F0458);
  sub_100010960(v205, &qword_1009F0488);
  sub_100010960(v209, &qword_1009F0448);
  sub_100010960(v208, &qword_1009F0458);
  return sub_100010960(v206, &qword_1009F0488);
}

void sub_1005F8BD4(uint64_t a1, double a2, double a3)
{
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];
  __int128 v9;
  uint64_t v10;

  v5 = (__int128 *)(a1 + *(int *)(type metadata accessor for BuyButtonView(0) + 28));
  v6 = *((_QWORD *)v5 + 2);
  v9 = *v5;
  v10 = v6;
  *(double *)v8 = a2;
  *(double *)&v8[1] = a3;
  v7 = sub_10004CFD4(&qword_1009D1CE8);
  State.wrappedValue.setter(v8, v7);
}

uint64_t sub_1005F8C48(uint64_t a1)
{
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;

  sub_10000B5E4(a1 + 16, (uint64_t)v3, &qword_1009D26C8);
  if (!v4)
    return sub_100010960((uint64_t)v3, &qword_1009D26C8);
  v1 = *(_QWORD *)(*sub_10003F198(v3, v4) + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor);
  swift_unknownObjectRetain(v1);
  sub_1004AA100();
  swift_unknownObjectRelease(v1);
  return _s5Books15CurrentPageViewVwxx_0(v3);
}

double sub_1005F8CCC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  __n128 v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  double result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;

  v84 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v84);
  v82 = (uint64_t *)((char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Image.Scale(0);
  v80 = *(_QWORD *)(v5 - 8);
  v81 = v5;
  __chkstk_darwin(v5);
  v85 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for BuyButtonView(0);
  __chkstk_darwin(v7);
  v83 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 8);
  KeyPath = swift_getKeyPath(&unk_100733D78);
  v11 = swift_getKeyPath(&unk_100733DA0);
  swift_retain(v9);
  static Published.subscript.getter(&v86, v12, KeyPath);
  swift_release(v9);
  swift_release(KeyPath);
  swift_release(v11);
  v13 = v87;
  if (!v87)
  {
    v57 = a1;
    v50 = v83;
    sub_10002CD84(v57, v83, type metadata accessor for BuyButtonView);
    goto LABEL_5;
  }
  v14 = v86;
  swift_bridgeObjectRetain(v87);
  v15 = Image.init(systemName:)(v14, v13);
  v16 = Text.init(_:)(v15);
  v18 = v17;
  v20 = v19;
  v22 = v21 & 1;
  v24 = static Text.+ infix(_:_:)(v16, v17, v21 & 1, v19, 32, 0xE100000000000000, 0, _swiftEmptyArrayStorage, v23);
  v75 = v25;
  v76 = v24;
  v77 = v26;
  v79 = a2;
  v74 = v27 & 1;
  sub_1001F5B28(v16, v18, v22);
  swift_bridgeObjectRelease(v20);
  v78 = a1;
  sub_1005F6A6C();
  v86 = v28;
  v87 = v29;
  v30 = sub_1001F2108();
  v32 = Text.init<A>(_:)(&v86, &type metadata for String, v30, v31);
  v34 = v33;
  v36 = v35;
  v38 = v37 & 1;
  v40 = v75;
  v39 = v76;
  v41 = v74;
  v42 = v77;
  v44 = static Text.+ infix(_:_:)(v76, v75, v74, v77, v32, v33, v38, v35, v43);
  v71 = v45;
  v72 = v44;
  v73 = v46;
  v48 = v47;
  sub_1001F5B28(v32, v34, v38);
  swift_bridgeObjectRelease(v36);
  v49 = v39;
  a2 = v79;
  sub_1001F5B28(v49, v40, v41);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v42);
  v50 = v83;
  sub_10002CD84(v78, v83, type metadata accessor for BuyButtonView);
  if (!v48)
  {
LABEL_5:
    sub_1005F6A6C();
    v86 = v58;
    v87 = v59;
    v60 = sub_1001F2108();
    v55 = Text.init<A>(_:)(&v86, &type metadata for String, v60, v61);
    v56 = v62;
    v54 = v63;
    v48 = v64;
    sub_10002C8F0(v50, type metadata accessor for BuyButtonView);
    v52 = v81;
    v51 = v82;
    v53 = v80;
    goto LABEL_6;
  }
  sub_10002C8F0(v50, type metadata accessor for BuyButtonView);
  v52 = v81;
  v51 = v82;
  v53 = v80;
  v54 = v73;
  v56 = v71;
  v55 = v72;
LABEL_6:
  v65 = v54 & 1;
  v66 = v85;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v85, enum case for Image.Scale.medium(_:), v52);
  v67 = swift_getKeyPath(&unk_100733DC0);
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))((char *)v51 + *(int *)(v84 + 28), v66, v52);
  *v51 = v67;
  v68 = sub_10004CFD4(&qword_1009F04C8);
  sub_10000B5E4((uint64_t)v51, a2 + *(int *)(v68 + 36), &qword_1009D38F8);
  *(_QWORD *)a2 = v55;
  *(_QWORD *)(a2 + 8) = v56;
  *(_BYTE *)(a2 + 16) = v65;
  *(_QWORD *)(a2 + 24) = v48;
  sub_1001F596C(v55, v56, v65);
  swift_bridgeObjectRetain(v48);
  sub_100010960((uint64_t)v51, &qword_1009D38F8);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v66, v52);
  sub_1001F5B28(v55, v56, v65);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v48).n128_u64[0];
  return result;
}

void sub_1005F90BC(uint64_t a1@<X0>, uint64_t a2@<X8>, __n128 a3@<Q0>, double a4@<D1>, double a5@<D2>)
{
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v30;
  _QWORD v31[5];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = a3.n128_u64[0];
  a3.n128_u64[0] = 3.0;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v31, 0, 0, _swiftEmptyArrayStorage, a3, 10.0, 0.0);
  v8 = v31[0];
  v9 = v31[3];
  v26 = v31[4];
  v27 = v31[2];
  KeyPath = swift_getKeyPath(&unk_100734008);
  v32 = xmmword_100719AB0;
  v11 = sub_1005F9960();
  swift_retain(a1);
  Comparable.clamped(_:)(&v30, &v32, &type metadata for CGFloat, v11);
  v12 = v30;
  v13.n128_u64[0] = 3.0;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(&v32, 1, 1, _swiftEmptyArrayStorage, v13, 10.0, 0.0);
  v14 = v32;
  v15 = v33;
  v16 = v34;
  v17 = v35;
  v18 = swift_getKeyPath(&unk_100734008);
  swift_retain(a1);
  v20 = static UnitPoint.center.getter(v19);
  v22 = v21;
  v23 = static Animation.linear.getter();
  v24 = v31[1];
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v24;
  *(_QWORD *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v9;
  *(_QWORD *)(a2 + 32) = v26;
  *(double *)(a2 + 40) = a5;
  *(_QWORD *)(a2 + 48) = KeyPath;
  *(_QWORD *)(a2 + 56) = a1;
  *(_QWORD *)(a2 + 64) = 0;
  *(_QWORD *)(a2 + 72) = v12;
  *(_OWORD *)(a2 + 80) = __PAIR128__(*((unint64_t *)&v32 + 1), v14);
  *(_QWORD *)(a2 + 96) = v15;
  *(_QWORD *)(a2 + 104) = v16;
  *(_QWORD *)(a2 + 112) = v17;
  *(double *)(a2 + 120) = a4;
  *(_QWORD *)(a2 + 128) = v18;
  *(_QWORD *)(a2 + 136) = a1;
  *(_QWORD *)(a2 + 144) = 0x4012D97C7F3321D2;
  *(double *)(a2 + 152) = v20;
  *(_QWORD *)(a2 + 160) = v22;
  *(_QWORD *)(a2 + 168) = v23;
  *(_QWORD *)(a2 + 176) = v6;
  swift_bridgeObjectRetain(v9);
  swift_retain(KeyPath);
  swift_release(v25);
  swift_bridgeObjectRelease(v9);
}

double sub_1005F9290@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  unint64_t v4;
  uint64_t v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  double result;
  __int128 v17;
  _OWORD v18[2];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v4 = *v2;
  v5 = v2[1];
  v6 = *((double *)v2 + 2);
  v7 = *((double *)v2 + 3);
  v8 = static Alignment.center.getter(a1);
  v10 = v9;
  v11.n128_u64[0] = v4;
  sub_1005F90BC(v5, (uint64_t)v18, v11, v6, v7);
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  v12 = v26;
  *(_OWORD *)(a2 + 144) = v25;
  *(_OWORD *)(a2 + 160) = v12;
  *(_OWORD *)(a2 + 176) = v27;
  *(_QWORD *)(a2 + 192) = v28;
  v13 = v22;
  *(_OWORD *)(a2 + 80) = v21;
  *(_OWORD *)(a2 + 96) = v13;
  v14 = v24;
  *(_OWORD *)(a2 + 112) = v23;
  *(_OWORD *)(a2 + 128) = v14;
  v15 = v18[1];
  *(_OWORD *)(a2 + 16) = v18[0];
  *(_OWORD *)(a2 + 32) = v15;
  result = *(double *)&v19;
  v17 = v20;
  *(_OWORD *)(a2 + 48) = v19;
  *(_OWORD *)(a2 + 64) = v17;
  return result;
}

unint64_t sub_1005F937C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0498;
  if (!qword_1009F0498)
  {
    v1 = sub_100030B74(&qword_1009F0468);
    sub_100030B34(&qword_1009D9160, &qword_1009D8400, (uint64_t)&protocol conformance descriptor for ProgressView<A, B>);
    sub_100030B34(&qword_1009E79A0, &qword_1009E79A8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0498);
  }
  return result;
}

uint64_t sub_1005F941C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BuyButtonView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1005F9460(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BuyButtonView(0) - 8) + 80);
  sub_1005F8BD4(v2 + ((v5 + 16) & ~v5), a1, a2);
}

uint64_t sub_1005F94A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005F94C8(double *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(double, double))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1005F94F4()
{
  return sub_1001F5558(&qword_1009F04B0, &qword_1009F04B8, (void (*)(void))sub_1005F9518);
}

unint64_t sub_1005F9518()
{
  unint64_t result;

  result = qword_1009F04C0;
  if (!qword_1009F04C0)
  {
    result = swift_getWitnessTable(&unk_100733FB8, &type metadata for RadialProgress);
    atomic_store(result, (unint64_t *)&qword_1009F04C0);
  }
  return result;
}

uint64_t sub_1005F9560()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for BuyButtonView(0) - 8) + 80);
  return sub_1005F8C48(v0 + ((v1 + 16) & ~v1));
}

double sub_1005F958C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005F8CCC(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_1005F9594()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F04D0;
  if (!qword_1009F04D0)
  {
    v1 = sub_100030B74(&qword_1009F04C8);
    sub_100030B34(&qword_1009D3938, &qword_1009D38F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F04D0);
  }
  return result;
}

unint64_t sub_1005F9628()
{
  unint64_t result;

  result = qword_1009F04E0;
  if (!qword_1009F04E0)
  {
    result = swift_getWitnessTable(&unk_10072D048, &type metadata for SampleHeaderButtonStyle);
    atomic_store(result, (unint64_t *)&qword_1009F04E0);
  }
  return result;
}

uint64_t sub_1005F9684()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1005F96BC(uint64_t result, uint64_t a2)
{
  if (result)
  {
    swift_retain(result);
    return swift_retain(a2);
  }
  return result;
}

uint64_t initializeWithCopy for RadialProgress(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain(v3);
  return a1;
}

_QWORD *assignWithCopy for RadialProgress(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_retain(v4);
  swift_release(v5);
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for RadialProgress(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release(v4);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for RadialProgress()
{
  return &type metadata for RadialProgress;
}

uint64_t initializeBufferWithCopyOfBuffer for BuyButtonView.Style.Progress(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *(_QWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for BuyButtonView.Style.Progress(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t *assignWithTake for BuyButtonView.Style.Progress(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
  return a1;
}

ValueMetadata *type metadata accessor for BuyButtonView.Style.Progress()
{
  return &type metadata for BuyButtonView.Style.Progress;
}

unint64_t sub_1005F98C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F04F0;
  if (!qword_1009F04F0)
  {
    v1 = sub_100030B74(&qword_1009F0418);
    sub_100030B34(&qword_1009F04F8, &qword_1009F0408, (uint64_t)&unk_10071AA30);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F04F0);
  }
  return result;
}

uint64_t sub_1005F9948(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100879EA0, 1);
}

unint64_t sub_1005F9960()
{
  unint64_t result;

  result = qword_1009F0500;
  if (!qword_1009F0500)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1009F0500);
  }
  return result;
}

uint64_t sub_1005F99A4()
{
  return sub_100030B34(&qword_1009F0508, &qword_1009F0510, (uint64_t)&protocol conformance descriptor for ZStack<A>);
}

double destroy for ThemeFontList(_QWORD *a1)
{
  double result;

  _s5Books15CurrentPageViewVwxx_0(a1);
  swift_bridgeObjectRelease(a1[5]);
  *(_QWORD *)&result = swift_release(a1[6]).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for ThemeFontList(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  swift_bridgeObjectRetain(v5);
  swift_retain(v6);
  return a1;
}

uint64_t assignWithCopy for ThemeFontList(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1001EAB00((_QWORD *)a1, (_QWORD *)a2);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v7;
  swift_retain(v7);
  swift_release(v6);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  return a1;
}

__n128 initializeWithTake for ThemeFontList(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 42) = *(_OWORD *)(a2 + 42);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ThemeFontList(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v7);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThemeFontList(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 58))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ThemeFontList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 58) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 58) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ThemeFontList()
{
  return &type metadata for ThemeFontList;
}

uint64_t sub_1005F9BF4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100879F14, 1);
}

uint64_t sub_1005F9C04@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  char v25;
  char v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[2];
  _OWORD v32[2];
  _OWORD v33[2];
  _OWORD v34[2];

  v6 = type metadata accessor for ThemeFontRow(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  if (!*(_QWORD *)(a2 + 48))
  {
    ThemeFontViewModel.familyName.getter(v7);
    v17 = v20;
    goto LABEL_9;
  }
  v11 = ThemeFontViewModel.familyName.getter(v7);
  v13 = v12;
  v15 = ThemeFontViewModel.familyName.getter(v14);
  v17 = v16;
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease(v17);
    v19 = 0;
    goto LABEL_11;
  }
  if (v11 == v15 && v13 == v16)
  {
    swift_bridgeObjectRelease_n(v13, 2);
    v19 = 1;
  }
  else
  {
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, v15, v16, 0);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v17);
  }
LABEL_11:
  sub_1005F9FE0(a2, (uint64_t)v33);
  v21 = swift_allocObject(&unk_1009174C0, 82, 7);
  *(_QWORD *)(v21 + 16) = v10;
  v22 = v33[1];
  *(_OWORD *)(v21 + 24) = v33[0];
  *(_OWORD *)(v21 + 40) = v22;
  *(_OWORD *)(v21 + 56) = v34[0];
  *(_OWORD *)(v21 + 66) = *(_OWORD *)((char *)v34 + 10);
  sub_1005F9FE0(a2, (uint64_t)v31);
  v23 = swift_allocObject(&unk_1009174E8, 88, 7);
  v24 = v31[1];
  *(_OWORD *)(v23 + 16) = v31[0];
  *(_OWORD *)(v23 + 32) = v24;
  *(_OWORD *)(v23 + 48) = v32[0];
  *(_OWORD *)(v23 + 58) = *(_OWORD *)((char *)v32 + 10);
  *(_QWORD *)(v23 + 80) = v10;
  v25 = *(_BYTE *)(a2 + 56);
  v26 = *(_BYTE *)(a2 + 57);
  sub_10002E418(a2, (uint64_t)(v9 + 56));
  *v9 = v19 & 1;
  *((_QWORD *)v9 + 1) = sub_1005FA0C8;
  *((_QWORD *)v9 + 2) = v21;
  *((_QWORD *)v9 + 3) = sub_1005FA110;
  *((_QWORD *)v9 + 4) = v23;
  *((_QWORD *)v9 + 5) = v10;
  v9[48] = v25;
  v9[49] = v26;
  v30 = 0x3FF0000000000000;
  v27 = sub_1002EDFBC();
  swift_retain_n(v10, 3);
  ScaledMetric.init(wrappedValue:)(&v30, &type metadata for CGFloat, v27);
  return sub_1005FA158((uint64_t)v9, a3);
}

uint64_t sub_1005F9E24(uint64_t a1, _QWORD *a2)
{
  unint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  v4 = ThemeFontViewModel.state.getter();
  v6 = v5;
  v7 = a2[3];
  v8 = a2[4];
  sub_10003F198(a2, v7);
  if ((v6 & 1) != 0 && v4 > 1)
    return dispatch thunk of ThemeOptionsEventHandling.didTapDownload(_:)(a1, v7, v8);
  else
    return dispatch thunk of ThemeOptionsEventHandling.didSelect(font:)(a1, v7, v8);
}

uint64_t sub_1005F9EAC()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD v10[2];
  _OWORD v11[2];
  uint64_t v12;

  v12 = *(_QWORD *)(v0 + 40);
  v1 = v12;
  sub_1005F9FE0(v0, (uint64_t)v10);
  v2 = (_OWORD *)swift_allocObject(&unk_100917498, 74, 7);
  v3 = v10[1];
  v2[1] = v10[0];
  v2[2] = v3;
  v2[3] = v11[0];
  *(_OWORD *)((char *)v2 + 58) = *(_OWORD *)((char *)v11 + 10);
  swift_bridgeObjectRetain(v1);
  v4 = sub_10004CFD4(&qword_1009F0518);
  v5 = type metadata accessor for ThemeFontRow(0);
  v6 = sub_100030B34(&qword_1009F0520, &qword_1009F0518, (uint64_t)&protocol conformance descriptor for [A]);
  v7 = sub_100008DB0(&qword_1009F0528, type metadata accessor for ThemeFontRow, (uint64_t)&unk_1007340F8);
  v8 = sub_100008DB0(&qword_1009F0530, (uint64_t (*)(uint64_t))&type metadata accessor for ThemeFontViewModel, (uint64_t)&protocol conformance descriptor for ThemeFontViewModel);
  return ForEach<>.init(_:content:)(&v12, sub_1005FA048, v2, v4, &type metadata for ObjectIdentifier, v5, v6, v7, v8);
}

uint64_t sub_1005F9FE0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ThemeFontList(a2, a1);
  return a2;
}

uint64_t sub_1005FA014()
{
  _QWORD *v0;

  _s5Books15CurrentPageViewVwxx_0(v0 + 2);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 74, 7);
}

uint64_t sub_1005FA048@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1005F9C04(a1, v2 + 16, a2);
}

uint64_t type metadata accessor for ThemeFontRow(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F0590;
  if (!qword_1009F0590)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ThemeFontRow);
  return result;
}

uint64_t sub_1005FA08C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  _s5Books15CurrentPageViewVwxx_0(v0 + 3);
  swift_bridgeObjectRelease(v0[8]);
  swift_release(v0[9]);
  return swift_deallocObject(v0, 82, 7);
}

uint64_t sub_1005FA0C8()
{
  uint64_t v0;

  return sub_1005F9E24(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

uint64_t sub_1005FA0D4()
{
  _QWORD *v0;

  _s5Books15CurrentPageViewVwxx_0(v0 + 2);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  swift_release(v0[10]);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1005FA110()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[10];
  v2 = v0[5];
  v3 = v0[6];
  sub_10003F198(v0 + 2, v2);
  return dispatch thunk of ThemeOptionsEventHandling.didTapStopDownload(_:)(v1, v2, v3);
}

uint64_t sub_1005FA158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThemeFontRow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1005FA19C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t *, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v18);
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 16) = v7;
    v8 = a2[4];
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    v10 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v10;
    v11 = v10;
    v12 = **(void (***)(_QWORD *, uint64_t *, uint64_t, __n128))(v10 - 8);
    swift_retain(v7);
    swift_retain(v8);
    v13 = swift_retain(v9);
    v12(v4 + 7, a2 + 7, v11, v13);
    v14 = *(int *)(a3 + 44);
    v15 = (char *)v4 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_10004CFD4(qword_1009D8EC8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t sub_1005FA2AC(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(a1[2]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  _s5Books15CurrentPageViewVwxx_0(a1 + 7);
  v4 = (char *)a1 + *(int *)(a2 + 44);
  v5 = sub_10004CFD4(qword_1009D8EC8);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1005FA310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v9 = a1 + 56;
  v10 = a2 + 56;
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v11;
  v12 = v11;
  v13 = **(void (***)(uint64_t, uint64_t, uint64_t, __n128))(v11 - 8);
  swift_retain(v6);
  swift_retain(v7);
  v14 = swift_retain(v8);
  v13(v9, v10, v12, v14);
  v15 = *(int *)(a3 + 44);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_10004CFD4(qword_1009D8EC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

uint64_t sub_1005FA3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  swift_retain(v10);
  swift_release(v11);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  sub_1001EAB00((_QWORD *)(a1 + 56), (_QWORD *)(a2 + 56));
  v12 = *(int *)(a3 + 44);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_10004CFD4(qword_1009D8EC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t sub_1005FA4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v4 = *(int *)(a3 + 44);
  v5 = a2 + v4;
  v6 = a1 + v4;
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v7 = sub_10004CFD4(qword_1009D8EC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, v5, v7);
  return a1;
}

uint64_t sub_1005FA558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v8);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(a1 + 56));
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v9 = *(int *)(a3 + 44);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_10004CFD4(qword_1009D8EC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1005FA620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005FA62C);
}

uint64_t sub_1005FA62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(qword_1009D8EC8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 44), a2, v8);
  }
}

uint64_t sub_1005FA6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005FA6B8);
}

uint64_t sub_1005FA6B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_10004CFD4(qword_1009D8EC8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 44), a2, a2, v7);
  }
  return result;
}

void sub_1005FA730(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  v4[0] = &unk_1007340C8;
  v4[1] = (char *)&value witness table for () + 64;
  v4[2] = (char *)&value witness table for () + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = &unk_1007340C8;
  v4[5] = &unk_1007340C8;
  v4[6] = &unk_1007340E0;
  sub_1002EF2A8(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
  }
}

unint64_t sub_1005FA7D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F05E0;
  if (!qword_1009F05E0)
  {
    v1 = sub_100030B74(&qword_1009F05E8);
    sub_100008DB0(&qword_1009F0528, type metadata accessor for ThemeFontRow, (uint64_t)&unk_1007340F8);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ForEach<A, B, C>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F05E0);
  }
  return result;
}

uint64_t sub_1005FA850(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_100879F3C, 1);
}

void sub_1005FA860(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[3];
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v50 = type metadata accessor for AccessibilityChildBehavior(0);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v46 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10004CFD4(&qword_1009F05F0);
  v44 = *(_QWORD *)(v42 - 8);
  __chkstk_darwin(v42);
  v43 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v45 = (char *)v37 - v6;
  v51 = sub_10004CFD4(&qword_1009F05F8);
  v49 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v47 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_10004CFD4(&qword_1009F0600);
  __chkstk_darwin(v52);
  v54 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v37 - v10;
  v53 = sub_10004CFD4(&qword_1009F0608);
  __chkstk_darwin(v53);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for Locale(0);
  v40 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v37[1] = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v39 = (char *)v37 - v16;
  v38 = type metadata accessor for String.LocalizationValue(0);
  v37[2] = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v37[0] = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v19 = type metadata accessor for Font.TextStyle(0);
  __chkstk_darwin(v19);
  v20 = sub_10004CFD4(&qword_1009CEDD0);
  __chkstk_darwin(v20);
  v22 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for ThemeFontRow(0);
  v24 = __chkstk_darwin(v23);
  v26 = (char *)v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v1;
  v27 = ThemeFontViewModel.state.getter(v24);
  v56 = v13;
  v57 = a1;
  v55 = v11;
  if ((v28 & 1) == 0 || !v27)
    goto LABEL_7;
  if (v27 == 1)
    goto LABEL_8;
  v29 = *(unsigned __int8 *)(v59 + 48);
  sub_1005FC4DC(v59, (uint64_t)v26);
  if (v29 == 1)
  {
    v30 = sub_1005FC520((uint64_t)v26);
    v31 = static Color.primary.getter(v30);
    goto LABEL_9;
  }
  v32 = v26[49];
  v27 = sub_1005FC520((uint64_t)v26);
  if (v32 != 1)
LABEL_8:
    v31 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  else
LABEL_7:
    v31 = static Color.primary.getter(v27);
LABEL_9:
  v58 = v31;
  v33 = *(_QWORD *)(v59 + 40);
  v34 = type metadata accessor for Font.Design(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v22, 1, 1, v34);
  static Font.system(size:weight:design:)(0, 1, v22, 18.0);
  sub_100010960((uint64_t)v22, &qword_1009CEDD0);
  swift_retain(v33);
  v36 = (char *)&loc_1005FAC6C + dword_1005FB184[ThemeFontViewModel.kind.getter(v35)];
  __asm { BR              X10 }
}

uint64_t sub_1005FAC7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t (*v41)(uint64_t, uint64_t, __n128);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t OpaqueTypeConformance2;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  _QWORD v60[20];

  *(_QWORD *)&v4 = swift_release(v1).n128_u64[0];
  v5 = v2;
  v6 = ThemeFontViewModel.familyName.getter(v4);
  v8 = v7;
  v9 = swift_bridgeObjectRelease(v7);
  v10 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0)
    v10 = v6 & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    v11 = ThemeFontViewModel.displayName.getter(v9);
    v12 = v11;
    v14 = v13;
  }
  else
  {
    v15 = String.LocalizationValue.init(stringLiteral:)(0x6C616E696769724FLL, 0xE800000000000000);
    v16 = *(_QWORD *)(v3 - 304);
    static Locale.current.getter(v15);
    v17 = *(_QWORD *)(v3 - 320);
    v18 = *(_QWORD *)(v3 - 336);
    v19 = *(_QWORD *)(v3 - 312);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, v0, v19);
    v20 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
    v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v23 = *(_QWORD *)(v3 - 296);
    v24 = *(_QWORD *)(v3 - 328);
    v25 = *(_QWORD *)(v3 - 288);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v16, v25);
    v12 = String.init(localized:table:bundle:locale:comment:)(v18, 0, 0, v22, v24, "Theme Options default font name", 31, 2);
    v14 = v26;
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v16, v25);
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v0, v19);
  }
  v27 = *(_QWORD *)(v3 - 136);
  v28 = *(_QWORD *)(v27 + 8);
  v29 = *(_QWORD *)(v27 + 16);
  __chkstk_darwin(v11);
  v60[2] = v12;
  v60[3] = v14;
  *(_QWORD *)(v3 - 280) = v5;
  v60[4] = v5;
  v31 = v30;
  v60[5] = *(_QWORD *)(v3 - 144);
  v60[6] = v30;
  v60[7] = 0x4039000000000000;
  swift_retain(v29);
  v32 = sub_10004CFD4(&qword_1009F0610);
  v33 = sub_100030B34(&qword_1009F0618, &qword_1009F0610, (uint64_t)&protocol conformance descriptor for HStack<A>);
  v34 = *(_QWORD *)(v3 - 264);
  v35 = Button.init(action:label:)(v28, v29, sub_1005FC4C0, v60, v32, v33);
  v36 = static Color.pink.getter(v35);
  v37 = *(_QWORD *)(v3 - 256);
  v38 = *(_QWORD *)(v3 - 248);
  v39 = *(_QWORD *)(v3 - 272);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v38, v34, v39);
  v40 = swift_release(v36);
  v41 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(v37 + 8);
  v42 = v41(v34, v39, v40);
  v43 = *(_QWORD *)(v3 - 240);
  static AccessibilityChildBehavior.combine.getter(v42);
  v44 = sub_100030B34(&qword_1009F0620, &qword_1009F05F0, (uint64_t)&protocol conformance descriptor for Button<A>);
  v45 = *(_QWORD *)(v3 - 232);
  View.accessibilityElement(children:)(v43, v39, v44);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 224) + 8))(v43, *(_QWORD *)(v3 - 208));
  ((void (*)(uint64_t, uint64_t))v41)(v38, v39);
  *(_QWORD *)(v3 - 104) = v12;
  *(_QWORD *)(v3 - 96) = v14;
  *(_QWORD *)(v3 - 120) = v39;
  *(_QWORD *)(v3 - 112) = v44;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v3 - 120, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
  v47 = sub_1001F2108();
  v48 = *(_QWORD *)(v3 - 176);
  v49 = *(_QWORD *)(v3 - 200);
  View.accessibilityLabel<A>(_:)(v3 - 104, v49, &type metadata for String, OpaqueTypeConformance2, v47);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 216) + 8))(v45, v49);
  v50 = swift_bridgeObjectRelease(v14);
  v51 = ((uint64_t (*)(__n128))ThemeFontViewModel.accessibilityDescription.getter)(v50);
  v53 = v52;
  *(_QWORD *)(v3 - 104) = v51;
  *(_QWORD *)(v3 - 96) = v52;
  v54 = *(_QWORD *)(v3 - 168);
  ModifiedContent<>.accessibilityValue<A>(_:)(v3 - 104, *(_QWORD *)(v3 - 192), &type metadata for String, v47);
  swift_bridgeObjectRelease(v53);
  swift_release(*(_QWORD *)(v3 - 280));
  swift_release(*(_QWORD *)(v3 - 144));
  sub_100010960(v48, &qword_1009F0600);
  LOBYTE(v36) = *v31;
  v55 = *(_QWORD *)(v3 - 160);
  sub_10000B5E4(v54, v55, &qword_1009F0600);
  *(_BYTE *)(v55 + *(int *)(*(_QWORD *)(v3 - 184) + 36)) = v36;
  sub_100010960(v54, &qword_1009F0600);
  KeyPath = swift_getKeyPath(&unk_100734148);
  v57 = *(_QWORD *)(v3 - 152);
  sub_10000B5E4(v55, v57, &qword_1009F0608);
  v58 = v57 + *(int *)(sub_10004CFD4(&qword_1009F0628) + 36);
  *(_QWORD *)v58 = KeyPath;
  *(_BYTE *)(v58 + 8) = 0;
  return sub_100010960(v55, &qword_1009F0608);
}

uint64_t sub_1005FB194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v14;

  *(_QWORD *)a6 = static VerticalAlignment.center.getter(a1);
  *(_QWORD *)(a6 + 8) = 0;
  *(_BYTE *)(a6 + 16) = 0;
  v14 = sub_10004CFD4(&qword_1009F0630);
  return sub_1005FB21C(a1, a2, a3, a4, a5, a6 + *(int *)(v14 + 44), a7);
}

uint64_t sub_1005FB21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _OWORD *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  unsigned __int8 v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  _OWORD v101[3];
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char v106;
  __int128 v107;
  __int128 v108;
  char v109;
  _OWORD v110[12];
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;

  v81 = a5;
  v75 = a4;
  v12 = sub_10004CFD4(&qword_1009F0638);
  __chkstk_darwin(v12);
  v76 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_10004CFD4(&qword_1009F0640);
  __chkstk_darwin(v79);
  v77 = (uint64_t)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = sub_10004CFD4(&qword_1009F0648);
  __chkstk_darwin(v82);
  v78 = (uint64_t)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v80 = (uint64_t)&v73 - v17;
  *(_QWORD *)&v111 = a1;
  *((_QWORD *)&v111 + 1) = a2;
  v18 = sub_1001F2108();
  v19 = swift_bridgeObjectRetain(a2);
  v20 = Text.init<A>(_:)(&v111, &type metadata for String, v18, v19);
  v22 = v21;
  v24 = v23;
  v26 = v25 & 1;
  v27 = Text.font(_:)(a3, v20, v21, v26, v23);
  v29 = v28;
  v31 = v30;
  v33 = v32 & 1;
  sub_1001F5B28(v20, v22, v26);
  swift_bridgeObjectRelease(v24);
  v34 = Text.foregroundColor(_:)(v75, v27, v29, v33, v31);
  v36 = v35;
  v38 = v37;
  LOBYTE(v20) = v39 & 1;
  sub_1001F5B28(v27, v29, v33);
  swift_bridgeObjectRelease(v31);
  v41 = static Edge.Set.leading.getter(v40);
  v102 = v34;
  v103 = v36;
  v104 = v20;
  v105 = v38;
  v106 = v41;
  v107 = 0u;
  v108 = 0u;
  v109 = 1;
  v42 = static Alignment.leading.getter(v41);
  sub_1005F31F8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v111, 0.0, 1, 0.0, 1, v42, v43);
  sub_1001F5B28(v34, v36, v20);
  swift_bridgeObjectRelease(v38);
  v91 = v119;
  v92 = v120;
  v93 = v121;
  v94 = v122;
  v87 = v115;
  v88 = v116;
  v89 = v117;
  v90 = v118;
  v83 = v111;
  v84 = v112;
  v85 = v113;
  v86 = v114;
  v45 = static Alignment.center.getter(v44);
  _FrameLayout.init(width:height:alignment:)(&v95, 0x4028000000000000, 0, 0, 1, v45, v46);
  v75 = v95;
  v74 = v96;
  v73 = v97;
  LOBYTE(v36) = v98;
  v47 = v99;
  v48 = v100;
  v49 = v76;
  v50 = sub_1005FB724(v76);
  v51 = static Alignment.center.getter(v50);
  _FrameLayout.init(width:height:alignment:)(v101, *(_QWORD *)&a7, 0, *(_QWORD *)&a7, 0, v51, v52);
  v53 = v77;
  sub_10000B5E4(v49, v77, &qword_1009F0638);
  v54 = (_OWORD *)(v53 + *(int *)(v79 + 36));
  v55 = v101[1];
  *v54 = v101[0];
  v54[1] = v55;
  v54[2] = v101[2];
  v56 = sub_100010960(v49, &qword_1009F0638);
  LOBYTE(v34) = static Edge.Set.trailing.getter(v56);
  v57 = v78;
  sub_10000B5E4(v53, v78, &qword_1009F0640);
  v58 = v57 + *(int *)(v82 + 36);
  *(_BYTE *)v58 = v34;
  *(_OWORD *)(v58 + 8) = 0u;
  *(_OWORD *)(v58 + 24) = 0u;
  *(_BYTE *)(v58 + 40) = 1;
  sub_100010960(v53, &qword_1009F0640);
  v59 = v80;
  sub_100025B3C(v57, v80, &qword_1009F0648);
  sub_10000B5E4(v59, v57, &qword_1009F0648);
  v60 = v92;
  v110[8] = v91;
  v110[9] = v92;
  v61 = v93;
  v62 = v94;
  v110[10] = v93;
  v110[11] = v94;
  v63 = v87;
  v64 = v88;
  v110[4] = v87;
  v110[5] = v88;
  v65 = v89;
  v66 = v90;
  v110[6] = v89;
  v110[7] = v90;
  v67 = v83;
  v68 = v84;
  v110[0] = v83;
  v110[1] = v84;
  v69 = v85;
  v70 = v86;
  v110[2] = v85;
  v110[3] = v86;
  *(_OWORD *)(a6 + 128) = v91;
  *(_OWORD *)(a6 + 144) = v60;
  *(_OWORD *)(a6 + 160) = v61;
  *(_OWORD *)(a6 + 176) = v62;
  *(_OWORD *)(a6 + 64) = v63;
  *(_OWORD *)(a6 + 80) = v64;
  *(_OWORD *)(a6 + 96) = v65;
  *(_OWORD *)(a6 + 112) = v66;
  *(_OWORD *)a6 = v67;
  *(_OWORD *)(a6 + 16) = v68;
  *(_OWORD *)(a6 + 32) = v69;
  *(_OWORD *)(a6 + 48) = v70;
  *(_QWORD *)(a6 + 192) = 0;
  *(_BYTE *)(a6 + 200) = 1;
  *(_QWORD *)(a6 + 208) = v75;
  *(_BYTE *)(a6 + 216) = v74;
  *(_QWORD *)(a6 + 224) = v73;
  *(_BYTE *)(a6 + 232) = v36;
  *(_QWORD *)(a6 + 240) = v47;
  *(_QWORD *)(a6 + 248) = v48;
  v71 = sub_10004CFD4(&qword_1009F0650);
  sub_10000B5E4(v57, a6 + *(int *)(v71 + 64), &qword_1009F0648);
  sub_1005F3930((uint64_t)v110);
  sub_100010960(v59, &qword_1009F0648);
  sub_100010960(v57, &qword_1009F0648);
  v119 = v91;
  v120 = v92;
  v121 = v93;
  v122 = v94;
  v115 = v87;
  v116 = v88;
  v117 = v89;
  v118 = v90;
  v111 = v83;
  v112 = v84;
  v113 = v85;
  v114 = v86;
  return sub_1005FC55C((uint64_t)&v111);
}

uint64_t sub_1005FB724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  double v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v2 = v1;
  v67 = a1;
  v66 = sub_10004CFD4(&qword_1009E4548);
  __chkstk_darwin(v66);
  v62 = (uint64_t *)((char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = sub_10004CFD4(&qword_1009F0658);
  __chkstk_darwin(v63);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_10004CFD4(&qword_1009F0660);
  v6 = *(_QWORD *)(v64 - 8);
  __chkstk_darwin(v64);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009F0668);
  __chkstk_darwin(v9);
  v65 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v58 - v12;
  v14 = sub_10004CFD4(&qword_1009F0670);
  __chkstk_darwin(v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009D8A88);
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)v2 != 1)
  {
    v60 = v14;
    v61 = v13;
    v25 = ThemeFontViewModel.state.getter(v18);
    if ((v27 & 1) != 0)
    {
      v38 = ThemeFontViewModel.state.getter(v26);
      if ((v40 & 1) == 0
        || v38 < 2
        || (v41 = ThemeFontViewModel.familyName.getter(v39),
            v43 = v42,
            v68 = v41,
            v69 = v42,
            v44 = sub_1001F15BC(),
            v45 = Collection.isNotEmpty.getter(&type metadata for String, v44),
            swift_bridgeObjectRelease(v43),
            (v45 & 1) == 0))
      {
        v52 = sub_10004CFD4(&qword_1009F0678);
        v51 = (uint64_t)v61;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v61, 1, 1, v52);
        goto LABEL_11;
      }
      v46 = v62;
      sub_1005FBF34(v62);
      sub_10000B5E4((uint64_t)v46, (uint64_t)v5, &qword_1009E4548);
      swift_storeEnumTagMultiPayload(v5, v63, 1);
      v47 = sub_100030B34(&qword_1009F0690, &qword_1009F0660, (uint64_t)&protocol conformance descriptor for Button<A>);
      v48 = sub_1005FC680();
      v49 = v65;
      _ConditionalContent<>.init(storage:)(v5, v64, v66, v47, v48);
      sub_100010960((uint64_t)v46, &qword_1009E4548);
      v50 = sub_10004CFD4(&qword_1009F0678);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 0, 1, v50);
      v37 = (uint64_t)v49;
    }
    else
    {
      v62 = &v58;
      v28 = *(_QWORD *)(v2 + 32);
      v59 = *(_QWORD *)(v2 + 24);
      __chkstk_darwin(v25);
      *(&v58 - 2) = v29;
      swift_retain(v28);
      v30 = sub_10004CFD4(&qword_1009F06A0);
      v31 = sub_100030B34(&qword_1009F06A8, &qword_1009F06A0, (uint64_t)&protocol conformance descriptor for ZStack<A>);
      Button.init(action:label:)(v59, v28, sub_1005FC7A4, &v58 - 4, v30, v31);
      v32 = v64;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v5, v8, v64);
      swift_storeEnumTagMultiPayload(v5, v63, 0);
      v33 = sub_100030B34(&qword_1009F0690, &qword_1009F0660, (uint64_t)&protocol conformance descriptor for Button<A>);
      v34 = sub_1005FC680();
      v35 = v65;
      _ConditionalContent<>.init(storage:)(v5, v32, v66, v33, v34);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v32);
      v36 = sub_10004CFD4(&qword_1009F0678);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
      v37 = (uint64_t)v35;
    }
    v51 = (uint64_t)v61;
    sub_100025B3C(v37, (uint64_t)v61, &qword_1009F0668);
LABEL_11:
    v53 = v60;
    v21 = &qword_1009F0668;
    sub_10000B5E4(v51, (uint64_t)v16, &qword_1009F0668);
    swift_storeEnumTagMultiPayload(v16, v53, 1);
    v54 = v51;
    v55 = sub_1002E834C();
    v56 = sub_1005FC598();
    _ConditionalContent<>.init(storage:)(v16, v17, v9, v55, v56);
    v24 = v54;
    return sub_100010960(v24, v21);
  }
  sub_1005FBC58((uint64_t)v20);
  v21 = &qword_1009D8A88;
  sub_10000B5E4((uint64_t)v20, (uint64_t)v16, &qword_1009D8A88);
  swift_storeEnumTagMultiPayload(v16, v14, 0);
  v22 = sub_1002E834C();
  v23 = sub_1005FC598();
  _ConditionalContent<>.init(storage:)(v16, v17, v9, v22, v23);
  v24 = (uint64_t)v20;
  return sub_100010960(v24, v21);
}

uint64_t sub_1005FBC58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  unsigned int *v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;

  v31 = a1;
  v1 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009F41C0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = sub_10004CFD4(&qword_1009D8A80);
  __chkstk_darwin(v30);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = Image.init(systemName:)(0x72616D6B63656863, 0xE90000000000006BLL);
  type metadata accessor for ThemeFontRow(0);
  v14 = sub_10004CFD4(qword_1009D8EC8);
  ScaledMetric.wrappedValue.getter(&v32, v14);
  v15.n128_f64[0] = v32;
  v16 = (unsigned int *)&enum case for Image.Scale.small(_:);
  if (v32 <= 2.0)
    v16 = (unsigned int *)&enum case for Image.Scale.large(_:);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v7, *v16, v4, v15);
  KeyPath = swift_getKeyPath(&unk_100734178);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v3 + *(int *)(v1 + 28), v7, v4);
  *v3 = KeyPath;
  sub_10000B5E4((uint64_t)v3, (uint64_t)v10 + *(int *)(v8 + 36), &qword_1009D38F8);
  *v10 = v13;
  swift_retain(v13);
  sub_100010960((uint64_t)v3, &qword_1009D38F8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_release(v13);
  v19 = static Color.primary.getter(v18);
  v20 = swift_getKeyPath(&unk_1007341A8);
  sub_10000B5E4((uint64_t)v10, (uint64_t)v12, (uint64_t *)&unk_1009F41C0);
  v21 = (uint64_t *)&v12[*(int *)(v30 + 36)];
  *v21 = v20;
  v21[1] = v19;
  v22 = sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009F41C0);
  v23 = static Font.body.getter(v22);
  static Font.Weight.semibold.getter(v23);
  v24 = Font.weight(_:)(v23);
  swift_release(v23);
  v25 = swift_getKeyPath(&unk_1007341D8);
  v26 = v31;
  sub_10000B5E4((uint64_t)v12, v31, &qword_1009D8A80);
  v27 = (uint64_t *)(v26 + *(int *)(sub_10004CFD4(&qword_1009D8A88) + 36));
  *v27 = v25;
  v27[1] = v24;
  return sub_100010960((uint64_t)v12, &qword_1009D8A80);
}

double sub_1005FBF34@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  double v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  double v30;

  v29 = a1;
  v28 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v28);
  v3 = (uint64_t *)((char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for Image.Scale(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - v9;
  v11 = type metadata accessor for ThemeFontRow(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(unsigned __int8 *)(v1 + 48);
  sub_1005FC4DC(v1, (uint64_t)v13);
  if (v14 == 1)
  {
    sub_1005FC520((uint64_t)v13);
LABEL_4:
    v16 = Image.init(systemName:)(0xD000000000000015, 0x80000001007B4DE0);
    v17 = static Color.primary.getter(v16);
    KeyPath = swift_getKeyPath(&unk_1007341A8);
    v19 = sub_10004CFD4(qword_1009D8EC8);
    ScaledMetric.wrappedValue.getter(&v30, v19);
    v20 = v30;
    goto LABEL_6;
  }
  v15 = v13[49];
  sub_1005FC520((uint64_t)v13);
  if (v15 == 1)
    goto LABEL_4;
  v16 = Image.init(systemName:)(0x64756F6C63, 0xE500000000000000);
  v17 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  KeyPath = swift_getKeyPath(&unk_1007341A8);
  v21 = sub_10004CFD4(qword_1009D8EC8);
  ScaledMetric.wrappedValue.getter(&v30, v21);
  v20 = v30;
  v10 = v7;
LABEL_6:
  v22 = (unsigned int *)&enum case for Image.Scale.small(_:);
  if (v20 <= 2.0)
    v22 = (unsigned int *)&enum case for Image.Scale.large(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v10, *v22, v4);
  v23 = swift_getKeyPath(&unk_100734178);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v3 + *(int *)(v28 + 28), v10, v4);
  *v3 = v23;
  v24 = sub_10004CFD4(&qword_1009E4548);
  v25 = v29;
  sub_10000B5E4((uint64_t)v3, (uint64_t)v29 + *(int *)(v24 + 36), &qword_1009D38F8);
  *v25 = v16;
  v25[1] = KeyPath;
  v25[2] = v17;
  swift_retain(v16);
  swift_retain(KeyPath);
  swift_retain(v17);
  sub_100010960((uint64_t)v3, &qword_1009D38F8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  swift_release(v17);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v16).n128_u64[0];
  return result;
}

void sub_1005FC208(uint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;

  *a2 = static Alignment.center.getter(a1);
  a2[1] = v5;
  v6 = sub_10004CFD4(&qword_1009F06B0);
  sub_1005FC254((double *)((char *)a2 + *(int *)(v6 + 44)), a3);
}

void sub_1005FC254(double *a1@<X8>, double a2@<D0>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  double *v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;
  double *v23;

  v23 = a1;
  v22 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v22);
  v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for Image.Scale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4((uint64_t *)&unk_1009F41C0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - v13;
  v16 = static Color.primary.getter(v15);
  v17 = Image.init(systemName:)(0x6C69662E706F7473, 0xE90000000000006CLL);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.small(_:), v5);
  KeyPath = swift_getKeyPath(&unk_100734178);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v22 + 28), v8, v5);
  *v4 = KeyPath;
  sub_10000B5E4((uint64_t)v4, (uint64_t)v11 + *(int *)(v9 + 36), &qword_1009D38F8);
  *v11 = v17;
  swift_retain(v17);
  sub_100010960((uint64_t)v4, &qword_1009D38F8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release(v17);
  sub_100025B3C((uint64_t)v11, (uint64_t)v14, (uint64_t *)&unk_1009F41C0);
  sub_10000B5E4((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_1009F41C0);
  v19 = v23;
  *v23 = a2;
  *((_QWORD *)v19 + 1) = v16;
  *((_OWORD *)v19 + 1) = xmmword_100734040;
  v20 = v19;
  v21 = sub_10004CFD4(&qword_1009F06B8);
  sub_10000B5E4((uint64_t)v11, (uint64_t)v20 + *(int *)(v21 + 48), (uint64_t *)&unk_1009F41C0);
  swift_retain(v16);
  sub_100010960((uint64_t)v14, (uint64_t *)&unk_1009F41C0);
  sub_100010960((uint64_t)v11, (uint64_t *)&unk_1009F41C0);
  swift_release(v16);
}

uint64_t sub_1005FC4C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1005FB194(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1, *(double *)(v1 + 56));
}

uint64_t sub_1005FC4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ThemeFontRow(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005FC520(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ThemeFontRow(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005FC55C(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  sub_1001F5B28(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease(v2);
  return a1;
}

unint64_t sub_1005FC598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0680;
  if (!qword_1009F0680)
  {
    v1 = sub_100030B74(&qword_1009F0668);
    sub_1005FC5FC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0680);
  }
  return result;
}

unint64_t sub_1005FC5FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0688;
  if (!qword_1009F0688)
  {
    v1 = sub_100030B74(&qword_1009F0678);
    sub_100030B34(&qword_1009F0690, &qword_1009F0660, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_1005FC680();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0688);
  }
  return result;
}

unint64_t sub_1005FC680()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0698;
  if (!qword_1009F0698)
  {
    v1 = sub_100030B74(&qword_1009E4548);
    sub_1005FC724((unint64_t *)&qword_1009D3928, &qword_1009D3930, qword_1009D14D0, &qword_1009D83F0);
    sub_100030B34(&qword_1009D3938, &qword_1009D38F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0698);
  }
  return result;
}

uint64_t sub_1005FC724(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v8 = sub_100030B74(a2);
    sub_100030B34(a3, a4, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v8);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1005FC7A4(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1005FC208(a1, a2, *(double *)(v2 + 16));
}

unint64_t sub_1005FC7C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F06C0;
  if (!qword_1009F06C0)
  {
    v1 = sub_100030B74(&qword_1009F0628);
    sub_1005FC84C();
    sub_100030B34((unint64_t *)&unk_1009D8600, &qword_1009D1CD0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F06C0);
  }
  return result;
}

unint64_t sub_1005FC84C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F06C8;
  if (!qword_1009F06C8)
  {
    v1 = sub_100030B74(&qword_1009F0608);
    sub_1005FC8B8();
    sub_1003F3DB0();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F06C8);
  }
  return result;
}

unint64_t sub_1005FC8B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1009F06D0;
  if (!qword_1009F06D0)
  {
    v1 = sub_100030B74(&qword_1009F0600);
    v2[0] = sub_100030B74(&qword_1009F05F0);
    v2[1] = sub_100030B34(&qword_1009F0620, &qword_1009F05F0, (uint64_t)&protocol conformance descriptor for Button<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.accessibilityElement(children:)>>, 1);
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F06D0);
  }
  return result;
}

void sub_1005FC984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  unsigned __int8 v6;
  _BYTE v7[24];

  v3 = a3 + 16;
  swift_beginAccess(a3 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC5Books27LightLevelControllerWrapper_lightLevelController), "isLowLight");
    CurrentValueSubject.send(_:)(&v6);

  }
}

uint64_t sub_1005FCA00(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  void (*v6)(void *, __int128 *);
  id v7;
  __int128 v9;
  __int128 v10;

  v6 = *(void (**)(void *, __int128 *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a3)
  {
    *((_QWORD *)&v10 + 1) = swift_getObjectType();
    *(_QWORD *)&v9 = a3;
  }
  else
  {
    v9 = 0u;
    v10 = 0u;
  }
  swift_retain(v5);
  v7 = a2;
  swift_unknownObjectRetain(a3);
  v6(a2, &v9);

  swift_release(v5);
  return sub_10004A7B8((uint64_t)&v9);
}

id sub_1005FCA94()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5Books27LightLevelControllerWrapper_lightLevelController], "removeObserver:", v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LightLevelControllerWrapper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1005FCBA4()
{
  uint64_t v1;

  CurrentValueSubject.value.getter(&v1);
  return v1;
}

uint64_t sub_1005FCBDC()
{
  uint64_t v0;
  unint64_t v1;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009CEC60);
  v1 = sub_1003D292C();
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_1005FCC30()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1005FCC54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1005FC984(a1, a2, v2);
}

uint64_t sub_1005FCC5C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, static Logger.finishedStateManager);
  sub_100048F64(v0, (uint64_t)static Logger.finishedStateManager);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000014, 0x80000001007D8600);
}

uint64_t Logger.finishedStateManager.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1009CEA50 != -1)
    swift_once(&qword_1009CEA50, sub_1005FCC5C);
  v0 = type metadata accessor for Logger(0);
  return sub_100048F64(v0, (uint64_t)static Logger.finishedStateManager);
}

uint64_t static Logger.finishedStateManager.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CEA50 != -1)
    swift_once(&qword_1009CEA50, sub_1005FCC5C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100048F64(v2, (uint64_t)static Logger.finishedStateManager);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

id DownloadPurchaseMonitor.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  objc_super v20;
  _QWORD *v21;

  v19 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR___BKDownloadPurchaseMonitor_queue;
  v17[1] = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v10 = v0;
  static DispatchQoS.unspecified.getter(v10);
  v21 = _swiftEmptyArrayStorage;
  v11 = sub_100008DB0((unint64_t *)&unk_1009E5380, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009CEC40);
  v13 = sub_1000652E4((unint64_t *)&qword_1009E5390, (uint64_t *)&unk_1009CEC40);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v12, v13, v4, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v19);
  v14 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001ELL, 0x80000001007B29C0, v9, v6, v3, 0);
  *(_QWORD *)(v17[2] + v18) = v14;
  *(_QWORD *)&v10[OBJC_IVAR___BKDownloadPurchaseMonitor_purchaseAttempts] = _swiftEmptyDictionarySingleton;

  v15 = (objc_class *)type metadata accessor for DownloadPurchaseMonitor();
  v20.receiver = v10;
  v20.super_class = v15;
  return objc_msgSendSuper2(&v20, "init");
}

uint64_t type metadata accessor for DownloadPurchaseMonitor()
{
  return objc_opt_self(BKDownloadPurchaseMonitor);
}

Swift::Void __swiftcall DownloadPurchaseMonitor.start()()
{
  sub_1005FD00C((SEL *)&selRef_addObserver_);
}

Swift::Void __swiftcall DownloadPurchaseMonitor.stop()()
{
  sub_1005FD00C((SEL *)&selRef_removeObserver_);
}

void sub_1005FD00C(SEL *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_msgSend((id)objc_opt_self(BLDownloadQueue), "sharedInstance");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, *a1, v1);

  }
  else
  {
    __break(1u);
  }
}

void sub_1005FD078(void *a1, uint64_t a2, SEL *a3)
{
  void *v5;
  id v6;
  id v7;
  id v8;

  v5 = (void *)objc_opt_self(BLDownloadQueue);
  v6 = a1;
  v7 = objc_msgSend(v5, "sharedInstance");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, *a3, v6);

  }
  else
  {
    __break(1u);
  }
}

double DownloadPurchaseMonitor.downloadQueue(_:purchaseAttemptFor:)(uint64_t a1, void *a2)
{
  return sub_1005FE11C(a2);
}

double sub_1005FD100(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  id v18;
  id v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  double result;
  uint64_t v23;
  _BYTE v24[24];
  _BYTE v25[24];

  v9 = (_QWORD *)(a1 + OBJC_IVAR___BKDownloadPurchaseMonitor_purchaseAttempts);
  v10 = swift_beginAccess(a1 + OBJC_IVAR___BKDownloadPurchaseMonitor_purchaseAttempts, v25, 0, 0).n128_u64[0];
  v11 = *v9;
  if (!*(_QWORD *)(*v9 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(v11);
  v12 = sub_10004CE80(a2, a3);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease(a3);
    v10 = swift_bridgeObjectRelease(v11).n128_u64[0];
LABEL_5:
    v17 = objc_msgSend(a5, "isAudiobook", *(double *)&v10);
    v18 = a4;
    swift_bridgeObjectRetain(a3);
    v15 = a3;
    v16 = a2;
    goto LABEL_6;
  }
  v14 = *(_QWORD *)(v11 + 56) + 32 * v12;
  v16 = *(_QWORD *)v14;
  v15 = *(_QWORD *)(v14 + 8);
  a4 = *(void **)(v14 + 16);
  v17 = *(_BYTE *)(v14 + 24);
  v18 = a4;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(v11);
LABEL_6:
  swift_beginAccess(v9, v24, 33, 0);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(v15);
  v19 = v18;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v9);
  v23 = *v9;
  *v9 = 0x8000000000000000;
  sub_1002C5460(v16, v15, (uint64_t)a4, v17, a2, a3, isUniquelyReferenced_nonNull_native);
  v21 = *v9;
  *v9 = v23;
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(v21);
  swift_endAccess(v24);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  return result;
}

void DownloadPurchaseMonitor.downloadQueue(_:purchasedDidCompleteWith:)(uint64_t a1, void *a2)
{
  sub_1005FE4A0(a2);
}

void DownloadPurchaseMonitor.downloadQueue(_:purchasedDidFailWith:)(uint64_t a1, void *a2)
{
  sub_1005FEC10(a2);
}

uint64_t sub_1005FD3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a4;
  v9 = type metadata accessor for ProductionType(0);
  v8[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[15] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v8[16] = v11;
  v8[17] = swift_task_alloc((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v8[18] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  return swift_task_switch(sub_1005FD478, v13, v14);
}

void sub_1005FD478()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  __n128 v23;
  uint64_t v24;
  void *v25;
  id v26;

  swift_release(v0[18]);
  v1 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v2 = objc_msgSend(v1, "serviceCenter");

  v0[8] = type metadata accessor for ReadingActivityService();
  v3 = sub_10004CFD4(&qword_1009F0760);
  v4 = String.init<A>(describing:)(v0 + 8, v3);
  v6 = v5;
  v7 = (void *)sub_10006BAEC(v4, v5);
  swift_bridgeObjectRelease(v6);
  if (v7)
  {
    v9 = v0[16];
    v8 = v0[17];
    v10 = v0[14];
    v11 = v0[15];
    v12 = v0[13];
    v13 = v0[11];
    v24 = v0[10];
    v25 = (void *)v0[12];
    v14 = (void *)v0[9];

    v26 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v8, v12, v10);
    v15 = *(unsigned __int8 *)(v11 + 80);
    v16 = (v15 + 56) & ~v15;
    v17 = (char *)swift_allocObject(&unk_1009176F8, v16 + v9, v15 | 7);
    *((_QWORD *)v17 + 2) = v14;
    *((_QWORD *)v17 + 3) = v24;
    *((_QWORD *)v17 + 4) = v13;
    *((_QWORD *)v17 + 5) = v7;
    *((_QWORD *)v17 + 6) = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(&v17[v16], v8, v10);
    v0[6] = sub_1005FF104;
    v0[7] = v17;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1001EDBF0;
    v0[5] = &unk_100917710;
    v18 = _Block_copy(v0 + 2);
    v19 = v0[7];
    v20 = v25;
    v21 = v14;
    swift_bridgeObjectRetain(v13);
    v22 = v7;
    objc_msgSend(v26, "performBlockOnWorkerQueue:", v18, swift_release(v19).n128_f64[0]);
    _Block_release(v18);

    v23 = swift_task_dealloc(v8);
    ((void (*)(__n128))v0[1])(v23);
  }
  else
  {
    __break(1u);
  }
}

void sub_1005FD684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  char v61;

  v56 = a7;
  v57 = a6;
  v59 = a5;
  v10 = sub_10004CFD4(&qword_1009DF4E8);
  __chkstk_darwin(v10);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ContentType(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for ContentAcquisitionType(0);
  v54 = *(_QWORD *)(v17 - 8);
  v55 = v17;
  __chkstk_darwin(v17);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v20);
  v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v58 = a3;
  v24 = String._bridgeToObjectiveC()();
  v60 = objc_msgSend(v23, "libraryMutableAssetWithPermanentOrTemporaryAssetID:inManagedObjectContext:", v24, a1);

  if (!v60)
  {
    if (qword_1009CEA50 != -1)
      swift_once(&qword_1009CEA50, sub_1005FCC5C);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100048F64(v32, (uint64_t)static Logger.finishedStateManager);
    v60 = Logger.logObject.getter(v33);
    v34 = static os_log_type_t.error.getter(v60);
    if (os_log_type_enabled(v60, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v60, v34, "asset lookup failed", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }
    goto LABEL_9;
  }
  if ((-[NSObject isFinished](v60, "isFinished") & 1) == 0)
  {
LABEL_9:

    return;
  }
  -[NSObject setFinishedStateUserSetsUnfinished](v60, "setFinishedStateUserSetsUnfinished");
  v25 = -[NSObject permanentOrTemporaryAssetID](v60, "permanentOrTemporaryAssetID");
  v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
  v28 = v27;

  v29 = -[NSObject dateFinished](v60, "dateFinished");
  if (v29)
  {
    v30 = v29;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v29);

    v31 = type metadata accessor for Date(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v22, 0, 1, v31);
  }
  else
  {
    v36 = type metadata accessor for Date(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v22, 1, 1, v36);
  }
  v37 = v59;
  v59 = a4;
  v38 = *(_QWORD *)(v37 + OBJC_IVAR___BKReadingActivityService_achievementsController);
  if (v38)
  {
    swift_retain(*(_QWORD *)(v37 + OBJC_IVAR___BKReadingActivityService_achievementsController));
    dispatch thunk of ReadingAchievementsController.willMarkAsset(_:finished:finishedDate:)(v26, v28, 0, v22);
    swift_bridgeObjectRelease(v28);
    swift_release(v38);
    sub_100010960((uint64_t)v22, &qword_1009D7440);
    v40 = type metadata accessor for EventReporter(0, v39);
    v41 = (void *)static EventReporter.shared.getter(v40);
    v51 = static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDFinished);
    v43 = v42;
    v45 = v54;
    v44 = v55;
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v19, enum case for ContentAcquisitionType.storeBought(_:), v55);
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for ContentType.unknown(_:), v13);
    v46 = enum case for SeriesType.unknown(_:);
    v47 = type metadata accessor for SeriesType(0);
    v52 = v14;
    v53 = v13;
    v48 = v47;
    v49 = *(_QWORD *)(v47 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 104))(v12, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v12, 0, 1, v48);
    v61 = 1;
    EventReporter.emitRemoveFromCollectionEvent(using:for:contentID:contentAcquisitionType:contentType:supplementalContentCount:seriesType:productionType:)(v57, v51, v43, v58, v59, v19, v16, 0x100000000, v12, v56);

    swift_bridgeObjectRelease(v43);
    sub_100010960((uint64_t)v12, &qword_1009DF4E8);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v53);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v44);
  }
  else
  {
    __break(1u);
  }
}

void sub_1005FDB30(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;
  void *v16;
  NSObject *oslog;
  void **aBlock;
  _QWORD v19[5];

  if (a2)
  {
    if (qword_1009CEA50 != -1)
      swift_once(&qword_1009CEA50, sub_1005FCC5C);
    v3 = type metadata accessor for Logger(0);
    sub_100048F64(v3, (uint64_t)static Logger.finishedStateManager);
    swift_errorRetain(a2);
    v4 = swift_errorRetain(a2);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v6 = 138412290;
      swift_errorRetain(a2);
      v8 = _swift_stdlib_bridgeErrorToNSError(a2);
      aBlock = (void **)v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v19, v6 + 4, v6 + 12);
      *v7 = v8;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "purchasing book: unable to determine isTrackedAsRecent %@", v6, 0xCu);
      v9 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v7, 1, v9);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);

    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
  else if ((a1 & 1) != 0)
  {
    v10 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v11 = objc_msgSend(v10, "collectionController");

    v12 = String._bridgeToObjectiveC()();
    static String._unconditionallyBridgeFromObjectiveC(_:)(kBKCollectionDefaultIDWantToRead);
    v14 = v13;
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v14);
    v19[3] = sub_1005FDDF0;
    v19[4] = 0;
    aBlock = _NSConcreteStackBlock;
    v19[0] = 1107296256;
    v19[1] = sub_1002A7214;
    v19[2] = &unk_1009176C0;
    v16 = _Block_copy(&aBlock);
    objc_msgSend(v11, "removeAssetID:fromCollectionID:completion:", v12, v15, v16);
    _Block_release(v16);
    swift_unknownObjectRelease(v11);

  }
}

void sub_1005FDDF0(char a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *oslog;
  uint64_t v15;
  uint64_t v16;

  if (!a2 && (a1 & 1) != 0)
  {
    if (qword_1009CEA50 != -1)
      swift_once(&qword_1009CEA50, sub_1005FCC5C);
    v3 = type metadata accessor for Logger(0);
    v4 = sub_100048F64(v3, (uint64_t)static Logger.finishedStateManager);
    oslog = Logger.logObject.getter(v4);
    v5 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "purchasing book: isTrackedAsRecent, removed from WTR", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }
    goto LABEL_13;
  }
  if (qword_1009CEA50 != -1)
    swift_once(&qword_1009CEA50, sub_1005FCC5C);
  v7 = type metadata accessor for Logger(0);
  sub_100048F64(v7, (uint64_t)static Logger.finishedStateManager);
  swift_errorRetain(a2);
  v8 = swift_errorRetain(a2);
  oslog = Logger.logObject.getter(v8);
  v9 = static os_log_type_t.error.getter(oslog);
  if (!os_log_type_enabled(oslog, v9))
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
LABEL_13:

    return;
  }
  v10 = (uint8_t *)swift_slowAlloc(12, -1);
  v11 = (uint64_t *)swift_slowAlloc(8, -1);
  *(_DWORD *)v10 = 138412290;
  if (a2)
  {
    swift_errorRetain(a2);
    v12 = _swift_stdlib_bridgeErrorToNSError(a2);
    v15 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v10 + 4, v10 + 12);
  }
  else
  {
    v15 = 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v10 + 4, v10 + 12);
    v12 = 0;
  }
  *v11 = v12;
  swift_errorRelease(a2);
  swift_errorRelease(a2);
  _os_log_impl((void *)&_mh_execute_header, oslog, v9, "purchasing book: isTrackedAsRecent, unable to remove from WTR %@", v10, 0xCu);
  v13 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
  swift_arrayDestroy(v11, 1, v13);
  swift_slowDealloc(v11, -1, -1);
  swift_slowDealloc(v10, -1, -1);

}

id DownloadPurchaseMonitor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DownloadPurchaseMonitor();
  return objc_msgSendSuper2(&v2, "dealloc");
}

double sub_1005FE11C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *ObjCClassFromMetadata;
  NSString *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  _QWORD aBlock[5];
  _QWORD *v45;
  __int128 v46;
  __int128 v47;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  result = __chkstk_darwin(v8);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v40 = v10;
    v41 = v9;
    v42 = v5;
    v14 = a1;
    v15 = objc_msgSend(v14, "storeIdentifier");
    v16 = objc_msgSend(v15, "stringValue");

    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v38 = v18;
    v39 = v17;

    v19 = objc_msgSend(v14, "analyticsInfo");
    v20 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable);

    v21 = type metadata accessor for BATracker(0);
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v21);
    v23 = NSStringFromClass(ObjCClassFromMetadata);
    v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
    v26 = v25;

    *(_QWORD *)&v46 = v24;
    *((_QWORD *)&v46 + 1) = v26;
    AnyHashable.init<A>(_:)(&v46, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v20 + 16) && (v27 = sub_1000561E8((uint64_t)aBlock), (v28 & 1) != 0))
    {
      sub_10004CD0C(*(_QWORD *)(v20 + 56) + 32 * v27, (uint64_t)&v46);
    }
    else
    {
      v46 = 0u;
      v47 = 0u;
    }
    swift_bridgeObjectRelease(v20);
    sub_1000569AC((uint64_t)aBlock);
    if (*((_QWORD *)&v47 + 1))
    {
      if (swift_dynamicCast(&v43, &v46, (char *)&type metadata for Any + 8, v21, 6))
        v29 = v43;
      else
        v29 = 0;
    }
    else
    {
      sub_100010960((uint64_t)&v46, (uint64_t *)&unk_1009D04E0);
      v29 = 0;
    }
    v30 = (_QWORD *)swift_allocObject(&unk_100917748, 56, 7);
    v31 = v39;
    v30[2] = v2;
    v30[3] = v31;
    v30[4] = v38;
    v30[5] = v29;
    v30[6] = v14;
    aBlock[4] = sub_1005FF188;
    v45 = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_100917760;
    v32 = _Block_copy(aBlock);
    v33 = v29;
    v34 = v14;
    static DispatchQoS.unspecified.getter(v2);
    *(_QWORD *)&v46 = _swiftEmptyArrayStorage;
    v35 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v36 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v37 = sub_1000652E4((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v46, v36, v37, v4, v35);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v7, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
    *(_QWORD *)&result = swift_release(v45).n128_u64[0];
  }
  return result;
}

void sub_1005FE4A0(void *a1)
{
  NSObject *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned __int8 *v41;
  unsigned __int8 *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  unsigned int v54;
  NSObject *v55;
  uint64_t v56;
  id v57;
  unsigned int *v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  NSString v73;
  _QWORD *v74;
  NSObject *v75;
  uint64_t v76;
  void *v77;
  _QWORD *v78;
  NSObject *v79;
  __n128 v80;
  uint64_t v81;
  _BYTE v82[4];
  int v83;
  void *v84;
  uint64_t v85;
  unsigned __int8 *v86;
  id v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  NSObject *v91;
  _QWORD aBlock[5];
  _QWORD *v93;
  char v94[24];

  v3 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v3);
  v5 = &v82[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for ProductionType(0);
  v7 = *(unsigned __int8 **)(v6 - 8);
  v8 = *((_QWORD *)v7 + 8);
  __chkstk_darwin(v6);
  v9 = &v82[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v12 = &v82[-v11];
  if (!a1)
    goto LABEL_15;
  v13 = a1;
  v14 = objc_msgSend(v13, "storeID");
  if (!v14)
  {

LABEL_15:
    if (qword_1009CEA50 != -1)
      swift_once(&qword_1009CEA50, sub_1005FCC5C);
    v44 = type metadata accessor for Logger(0);
    v45 = sub_100048F64(v44, (uint64_t)static Logger.finishedStateManager);
    v91 = Logger.logObject.getter(v45);
    v46 = static os_log_type_t.error.getter(v91);
    if (os_log_type_enabled(v91, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v91, v46, "purchase completed with no purchase response", v47, 2u);
      swift_slowDealloc(v47, -1, -1);
    }

    return;
  }
  v15 = v14;
  v90 = v6;
  v16 = objc_msgSend(v14, "stringValue");

  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
  v19 = v18;

  v91 = v1;
  v20 = (char *)v1 + OBJC_IVAR___BKDownloadPurchaseMonitor_purchaseAttempts;
  swift_beginAccess((char *)v1 + OBJC_IVAR___BKDownloadPurchaseMonitor_purchaseAttempts, v94, 0, 0);
  v21 = *(_QWORD *)v20;
  if (!*(_QWORD *)(*(_QWORD *)v20 + 16))
  {
LABEL_21:
    swift_bridgeObjectRelease(v19);
    if (qword_1009CEA50 != -1)
      swift_once(&qword_1009CEA50, sub_1005FCC5C);
    v48 = type metadata accessor for Logger(0);
    v49 = sub_100048F64(v48, (uint64_t)static Logger.finishedStateManager);
    v50 = Logger.logObject.getter(v49);
    v51 = static os_log_type_t.error.getter(v50);
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "could not find purchase attempt", v52, 2u);
      swift_slowDealloc(v52, -1, -1);
    }

    return;
  }
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v21);
  v22 = sub_10004CE80(v17, v19);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v19);
    goto LABEL_21;
  }
  v86 = v7;
  v24 = *(_QWORD *)(v21 + 56) + 32 * v22;
  v26 = *(_QWORD *)(v24 + 8);
  v25 = *(void **)(v24 + 16);
  v83 = *(unsigned __int8 *)(v24 + 24);
  v84 = v25;
  v87 = v25;
  v88 = v26;
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRelease(v21);
  swift_bridgeObjectRelease(v19);
  swift_beginAccess(v20, aBlock, 33, 0);
  v85 = v17;
  v27 = sub_1002BE2B4(v17, v19);
  v29 = v28;
  v30 = v19;
  v32 = v31;
  v89 = v13;
  swift_endAccess(aBlock);
  v33 = v89;
  sub_1005FEED4(v27, v29, v32);
  v34 = objc_msgSend(v33, "purchaseResponseItems");
  if (!v34)
  {

    swift_bridgeObjectRelease(v88);
    v53 = v30;
LABEL_28:
    swift_bridgeObjectRelease(v53);
    return;
  }
  v35 = v34;
  v36 = sub_100009E04(0, &qword_1009DA230, BLPurchaseResponseItem_ptr);
  v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v36);

  if ((unint64_t)v37 >> 62)
  {
    if (v37 < 0)
      v81 = v37;
    else
      v81 = v37 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v37);
    v38 = _CocoaArrayWrapper.endIndex.getter(v81);
    swift_bridgeObjectRelease(v37);
  }
  else
  {
    v38 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v39 = v30;
  v40 = v86;
  if (!v38)
  {
    swift_bridgeObjectRelease(v37);

    swift_bridgeObjectRelease(v88);
    v53 = v30;
    goto LABEL_28;
  }
  if ((v37 & 0xC000000000000001) != 0)
  {
    v41 = (unsigned __int8 *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v37);
  }
  else
  {
    if (!*(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v41 = (unsigned __int8 *)*(id *)(v37 + 32);
  }
  v42 = v41;
  v43 = v88;
  if ((objc_msgSend(v41, "isPurchaseRedownload", swift_bridgeObjectRelease(v37).n128_f64[0]) & 1) != 0)
  {

    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v43);

  }
  else
  {
    v86 = v42;
    if (v83)
    {
      v54 = objc_msgSend(v33, "hasRacGUID");
      v56 = v90;
      v55 = v91;
      v57 = v87;
      if (v54)
        v58 = (unsigned int *)&enum case for ProductionType.sgProduction(_:);
      else
        v58 = (unsigned int *)&enum case for ProductionType.nonSGProduction(_:);
      (*((void (**)(_BYTE *, _QWORD, uint64_t))v40 + 13))(v12, *v58, v90);
    }
    else
    {
      v56 = v90;
      (*((void (**)(_BYTE *, _QWORD, uint64_t))v40 + 13))(v12, enum case for ProductionType.unknown(_:), v90);
      v55 = v91;
      v57 = v87;
    }
    v59 = type metadata accessor for TaskPriority(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v5, 1, 1, v59);
    (*((void (**)(_BYTE *, _BYTE *, uint64_t))v40 + 2))(v9, v12, v56);
    type metadata accessor for MainActor(0);
    swift_bridgeObjectRetain(v39);
    v91 = v57;
    v60 = v55;
    v61 = static MainActor.shared.getter(v60);
    v62 = v56;
    v90 = v39;
    v63 = v61;
    v64 = v40[80];
    v65 = (v64 + 64) & ~v64;
    v66 = (char *)swift_allocObject(&unk_100917658, v65 + v8, v64 | 7);
    *((_QWORD *)v66 + 2) = v63;
    *((_QWORD *)v66 + 3) = &protocol witness table for MainActor;
    v67 = v84;
    v68 = v85;
    *((_QWORD *)v66 + 4) = v60;
    *((_QWORD *)v66 + 5) = v68;
    v69 = v90;
    *((_QWORD *)v66 + 6) = v90;
    *((_QWORD *)v66 + 7) = v67;
    (*((void (**)(char *, _BYTE *, uint64_t))v40 + 4))(&v66[v65], v9, v62);
    v70 = sub_10030C02C((uint64_t)v5, (uint64_t)&unk_1009F0750, (uint64_t)v66);
    swift_release(v70);
    v71 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
    v72 = v69;
    v73 = String._bridgeToObjectiveC()();
    v74 = (_QWORD *)swift_allocObject(&unk_100917680, 40, 7);
    v75 = v60;
    v74[2] = v60;
    v74[3] = v68;
    v74[4] = v72;
    v76 = v72;
    aBlock[4] = sub_1005FF06C;
    v93 = v74;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1002A7214;
    aBlock[3] = &unk_100917698;
    v77 = _Block_copy(aBlock);
    v78 = v93;
    swift_bridgeObjectRetain(v76);
    v79 = v75;
    objc_msgSend(v71, "isTrackedAsRecent:completion:", v73, v77, swift_release(v78).n128_f64[0]);
    _Block_release(v77);

    swift_bridgeObjectRelease(v88);
    v80 = swift_bridgeObjectRelease(v76);
    (*((void (**)(_BYTE *, uint64_t, __n128))v40 + 1))(v12, v62, v80);
  }
}

void sub_1005FEC10(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  _BYTE v14[24];

  if (a1)
  {
    v13 = a1;
    v2 = objc_msgSend(v13, "storeID");
    if (v2)
    {
      v3 = v2;
      v4 = objc_msgSend(v2, "stringValue");

      v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
      v7 = v6;

      swift_beginAccess(v1 + OBJC_IVAR___BKDownloadPurchaseMonitor_purchaseAttempts, v14, 33, 0);
      v8 = sub_1002BE2B4(v5, v7);
      v10 = v9;
      v12 = v11;
      swift_endAccess(v14);
      sub_1005FEED4(v8, v10, v12);
      swift_bridgeObjectRelease(v7);

    }
    else
    {

    }
  }
}

uint64_t initializeWithCopy for PurchaseAttempt(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain(v3);
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for PurchaseAttempt(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(void **)(a1 + 16);
  v7 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = v7;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for PurchaseAttempt(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for PurchaseAttempt(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PurchaseAttempt(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PurchaseAttempt()
{
  return &type metadata for PurchaseAttempt;
}

void sub_1005FEED4(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease(a2);

  }
}

uint64_t sub_1005FEF08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ProductionType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 64) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005FEF94(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ProductionType(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = v1[6];
  v10 = v1[7];
  v11 = (uint64_t)v1 + ((v4 + 64) & ~v4);
  v12 = (_QWORD *)swift_task_alloc(dword_1009F074C);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000AE34;
  return sub_1005FD3D8(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1005FF040()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1005FF06C(char a1, uint64_t a2)
{
  sub_1005FDB30(a1, a2);
}

uint64_t sub_1005FF078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for ProductionType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 56) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1005FF104(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ProductionType(0) - 8) + 80);
  sub_1005FD684(a1, v1[2], v1[3], v1[4], v1[5], v1[6], (uint64_t)v1 + ((v3 + 56) & ~v3));
}

uint64_t sub_1005FF14C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 56, 7);
}

double sub_1005FF188()
{
  uint64_t v0;

  return sub_1005FD100(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1005FF1A8()
{
  uint64_t v0;

  sub_1001FE9A0(v0 + 16);
  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for AudiobookNowPlayingHelperProvider()
{
  return objc_opt_self(_TtC5Books33AudiobookNowPlayingHelperProvider);
}

uint64_t sub_1005FF1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v11;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1005FF290()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

id sub_1005FF2BC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "removeObserver:", *(_QWORD *)(v0 + 24));
}

uint64_t sub_1005FF2CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = type metadata accessor for Notification(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject(&unk_100917818, v10 + v8, v9 | 7);
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain(a3);
  sub_1006498E4((void (*)(uint64_t))sub_1005FF428, v11);
  return swift_release(v11);
}

uint64_t sub_1005FF3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Notification(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1005FF428()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Notification(0) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(v0 + ((v1 + 32) & ~v1));
}

BOOL PresentationDonationItem.Intent.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

_QWORD *sub_1005FF488@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

void PresentationDonationItem.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.PresentationDonationItem", 30, "init()", 6, 0);
  __break(1u);
}

id PresentationDonationItem.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for PresentationDonationItem);
}

uint64_t type metadata accessor for PresentationDonationItem()
{
  return objc_opt_self(BKPresentationDonationItem);
}

void PresentationDonationTarget.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.PresentationDonationTarget", 32, "init()", 6, 0);
  __break(1u);
}

id PresentationDonationTarget.__deallocating_deinit()
{
  return sub_10023803C(type metadata accessor for PresentationDonationTarget);
}

uint64_t type metadata accessor for PresentationDonationTarget()
{
  return objc_opt_self(BKPresentationDonationTarget);
}

unint64_t sub_1005FF638()
{
  unint64_t result;

  result = qword_1009F0828;
  if (!qword_1009F0828)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PresentationDonationItem.Intent, &type metadata for PresentationDonationItem.Intent);
    atomic_store(result, (unint64_t *)&qword_1009F0828);
  }
  return result;
}

ValueMetadata *type metadata accessor for PresentationDonationItem.Intent()
{
  return &type metadata for PresentationDonationItem.Intent;
}

uint64_t sub_1005FF718()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100734530);
  v2 = swift_getKeyPath(&unk_100734558);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t property wrapper backing initializer of ReportIssueViewModel.items(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10004CFD4(&qword_1009F08E0);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_1005FF7CC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100734578);
  v2 = swift_getKeyPath(&unk_1007345A0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t property wrapper backing initializer of ReportIssueViewModel.selectedItemID(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  v2 = sub_10004CFD4(&qword_1009D2A80);
  return Published.init(initialValue:)(v4, v2);
}

uint64_t sub_1005FF880()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1007344E8);
  v2 = swift_getKeyPath(&unk_100734510);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t ReportIssueViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel__disableSendButton;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel__items;
  v4 = sub_10004CFD4(&qword_1009F08F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel__selectedItemID;
  v6 = sub_10004CFD4(&qword_1009D19E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel_textEntered + 8));
  return v0;
}

uint64_t ReportIssueViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel__disableSendButton;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel__items;
  v4 = sub_10004CFD4(&qword_1009F08F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel__selectedItemID;
  v6 = sub_10004CFD4(&qword_1009D19E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel_textEntered + 8));
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1005FFA64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v20 = sub_10004CFD4(&qword_1009D19E8);
  v1 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009F08F8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D4E70);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel__disableSendButton;
  LOBYTE(v21[0]) = 1;
  Published.init(initialValue:)(v21, &type metadata for Bool);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  v13 = v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel__items;
  v21[0] = _swiftEmptyArrayStorage;
  v14 = sub_10004CFD4(&qword_1009F08E0);
  Published.init(initialValue:)(v21, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v13, v7, v4);
  v15 = v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel__selectedItemID;
  v21[0] = 0;
  v21[1] = 0;
  v16 = sub_10004CFD4(&qword_1009D2A80);
  Published.init(initialValue:)(v21, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v1 + 32))(v15, v3, v20);
  v17 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books20ReportIssueViewModel_textEntered);
  *v17 = 0;
  v17[1] = 0;
  return v0;
}

uint64_t sub_1005FFC30()
{
  return type metadata accessor for ReportIssueViewModel(0);
}

uint64_t type metadata accessor for ReportIssueViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F0930;
  if (!qword_1009F0930)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ReportIssueViewModel);
  return result;
}

void sub_1005FFC74(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[4];

  sub_100443A4C();
  if (v3 <= 0x3F)
  {
    v8[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001F1044(319, (unint64_t *)&unk_1009F0940, &qword_1009F08E0);
    if (v5 <= 0x3F)
    {
      v8[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001F1044(319, (unint64_t *)&unk_1009D1800, &qword_1009D2A80);
      if (v7 <= 0x3F)
      {
        v8[2] = *(_QWORD *)(v6 - 8) + 64;
        v8[3] = &unk_100734428;
        swift_updateClassMetadata2(a1, 256, 4, v8, a1 + 80);
      }
    }
  }
}

uint64_t destroy for ReportIssueViewModel.Item(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  swift_bridgeObjectRelease(a1[7]);
  return swift_bridgeObjectRelease(a1[10]);
}

uint64_t initializeWithCopy for ReportIssueViewModel.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t assignWithCopy for ReportIssueViewModel.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v12 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

uint64_t assignWithTake for ReportIssueViewModel.Item(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v12;
  swift_bridgeObjectRelease(v13);
  return a1;
}

ValueMetadata *type metadata accessor for ReportIssueViewModel.Item()
{
  return &type metadata for ReportIssueViewModel.Item;
}

uint64_t sub_1005FFF60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = *v2;
  v5 = v2[1];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(a1, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v2[2];
  v7 = v2[3];
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = v2[4];
  v9 = v2[5];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease(v9);
  v10 = v2[6];
  v11 = v2[7];
  swift_bridgeObjectRetain(v11);
  String.hash(into:)(a1, v10, v11);
  swift_bridgeObjectRelease(v11);
  Hasher._combine(_:)(v2[8] & 1);
  v13 = v2[9];
  v12 = v2[10];
  swift_bridgeObjectRetain(v12);
  String.hash(into:)(a1, v13, v12);
  return swift_bridgeObjectRelease(v12);
}

Swift::Int sub_100600044()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[9];

  v1 = v0;
  Hasher.init(_seed:)(v13, 0);
  v2 = *v0;
  v3 = v1[1];
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v13, v2, v3);
  swift_bridgeObjectRelease(v3);
  v4 = v1[2];
  v5 = v1[3];
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v13, v4, v5);
  swift_bridgeObjectRelease(v5);
  v6 = v1[4];
  v7 = v1[5];
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v13, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = v1[6];
  v9 = v1[7];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(v13, v8, v9);
  swift_bridgeObjectRelease(v9);
  Hasher._combine(_:)(v1[8] & 1);
  v11 = v1[9];
  v10 = v1[10];
  swift_bridgeObjectRetain(v10);
  String.hash(into:)(v13, v11, v10);
  swift_bridgeObjectRelease(v10);
  return Hasher._finalize()();
}

Swift::Int sub_100600154(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::UInt8 v12;
  uint64_t v13;
  _QWORD v14[9];

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v12 = *((_BYTE *)v1 + 64);
  v10 = v1[10];
  v13 = v1[9];
  Hasher.init(_seed:)(v14, a1);
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v14, v2, v3);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRetain(v5);
  String.hash(into:)(v14, v4, v5);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v14, v6, v7);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(v14, v8, v9);
  swift_bridgeObjectRelease(v9);
  Hasher._combine(_:)(v12);
  swift_bridgeObjectRetain(v10);
  String.hash(into:)(v14, v13, v10);
  swift_bridgeObjectRelease(v10);
  return Hasher._finalize()();
}

uint64_t sub_100600270(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v5 = a1[1];
  v6 = a2[1];
  if (v4 == *a2 && v5 == v6)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, *a2, v6, 0);
}

unint64_t sub_1006002A4()
{
  unint64_t result;

  result = qword_1009F09D8;
  if (!qword_1009F09D8)
  {
    result = swift_getWitnessTable(&unk_100734480, &type metadata for ReportIssueViewModel.Item);
    atomic_store(result, (unint64_t *)&qword_1009F09D8);
  }
  return result;
}

uint64_t destroy for StepperButton(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  return swift_release(*(_QWORD *)(a1 + 32));
}

uint64_t initializeWithCopy for StepperButton(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  return a1;
}

uint64_t assignWithCopy for StepperButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain(v6);
  swift_release(v8);
  return a1;
}

uint64_t assignWithTake for StepperButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StepperButton(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StepperButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StepperButton()
{
  return &type metadata for StepperButton;
}

uint64_t sub_1006004C4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A2B0, 1);
}

uint64_t sub_1006004D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t KeyPath;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;

  v31 = a1;
  v2 = sub_10004CFD4(&qword_1009F09E0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10004CFD4(&qword_1009F09E8);
  __chkstk_darwin(v28);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10004CFD4(&qword_1009F09F0);
  __chkstk_darwin(v29);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_10004CFD4(&qword_1009F09F8);
  __chkstk_darwin(v30);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 24);
  v13 = *(_QWORD *)(v1 + 32);
  v33 = v1;
  swift_retain(v13);
  v14 = sub_10004CFD4(&qword_1009F0288);
  v15 = sub_100600B4C();
  v16 = Button.init(action:label:)(v12, v13, sub_100600B44, v32, v14, v15);
  v17 = *(unsigned __int8 *)(v1 + 16);
  if (v17 == 1)
    v18 = _s5Books11ChromeStyleC14secondaryColor7SwiftUI0E0Vvg_0();
  else
    v18 = static Color.primary.getter(v16);
  v19 = v18;
  KeyPath = swift_getKeyPath(&unk_100734628);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v7, v5, v2);
  v21 = (uint64_t *)&v7[*(int *)(v28 + 36)];
  *v21 = KeyPath;
  v21[1] = v19;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v22 = swift_getKeyPath(&unk_100734658);
  v23 = swift_allocObject(&unk_100917A48, 17, 7);
  *(_BYTE *)(v23 + 16) = v17;
  sub_10000B5E4((uint64_t)v7, (uint64_t)v9, &qword_1009F09E8);
  v24 = (uint64_t *)&v9[*(int *)(v29 + 36)];
  *v24 = v22;
  v24[1] = (uint64_t)sub_100234614;
  v24[2] = v23;
  sub_100010960((uint64_t)v7, &qword_1009F09E8);
  v25 = swift_getKeyPath(&unk_100734688);
  sub_10000B5E4((uint64_t)v9, (uint64_t)v11, &qword_1009F09F0);
  v26 = &v11[*(int *)(v30 + 36)];
  *(_QWORD *)v26 = v25;
  v26[8] = 0;
  sub_100010960((uint64_t)v9, &qword_1009F09F0);
  return sub_100600BF8((uint64_t)v11, v31);
}

uint64_t sub_100600770@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_10004CFD4(&qword_1009F0280);
  __chkstk_darwin(v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = static VerticalAlignment.center.getter(v7);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v8 = sub_10004CFD4(&qword_1009F0A10);
  v9 = sub_100600864(a1, (uint64_t)&v6[*(int *)(v8 + 44)]);
  v10 = static Alignment.center.getter(v9);
  sub_1005F33A4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a2, 0.0, 1, 0.0, 1, v10, v11);
  return sub_100010960((uint64_t)v6, &qword_1009F0280);
}

uint64_t sub_100600864@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v29 = a2;
  v3 = sub_10004CFD4(&qword_1009D38F8);
  __chkstk_darwin(v3);
  v5 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Image.Scale(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4((uint64_t *)&unk_1009F41C0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_10004CFD4(&qword_1009E79C0);
  __chkstk_darwin(v28);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  v15 = a1[1];
  swift_bridgeObjectRetain(v15);
  v17 = Image.init(systemName:)(v16, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for Image.Scale.large(_:), v6);
  KeyPath = swift_getKeyPath(&unk_1007346B8);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v5 + *(int *)(v3 + 28), v9, v6);
  *v5 = KeyPath;
  sub_10000B5E4((uint64_t)v5, (uint64_t)v12 + *(int *)(v10 + 36), &qword_1009D38F8);
  *v12 = v17;
  swift_retain(v17);
  sub_100010960((uint64_t)v5, &qword_1009D38F8);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_release(v17);
  v20 = static Font.body.getter(v19);
  static Font.Weight.semibold.getter(v20);
  v21 = Font.weight(_:)(v20);
  swift_release(v20);
  v22 = swift_getKeyPath(&unk_1007346E8);
  sub_10000B5E4((uint64_t)v12, (uint64_t)v14, (uint64_t *)&unk_1009F41C0);
  v23 = (uint64_t *)&v14[*(int *)(v28 + 36)];
  *v23 = v22;
  v23[1] = v21;
  v24 = sub_100010960((uint64_t)v12, (uint64_t *)&unk_1009F41C0);
  v25 = static Alignment.center.getter(v24);
  sub_1005F33FC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v29, 0.0, 1, INFINITY, 0, v25, v26);
  return sub_100010960((uint64_t)v14, &qword_1009E79C0);
}

uint64_t sub_100600B0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1006004D4(a1);
}

uint64_t sub_100600B44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100600770(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_100600B4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0A00;
  if (!qword_1009F0A00)
  {
    v1 = sub_100030B74(&qword_1009F0288);
    sub_100030B34(&qword_1009F0A08, &qword_1009F0280, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0A00);
  }
  return result;
}

uint64_t sub_100600BE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100600BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009F09F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100600C54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0A18;
  if (!qword_1009F0A18)
  {
    v1 = sub_100030B74(&qword_1009F09F8);
    sub_100600CD8();
    sub_100030B34((unint64_t *)&unk_1009D8600, &qword_1009D1CD0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0A18);
  }
  return result;
}

unint64_t sub_100600CD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0A20;
  if (!qword_1009F0A20)
  {
    v1 = sub_100030B74(&qword_1009F09F0);
    sub_100600D5C();
    sub_100030B34(&qword_1009D8510, &qword_1009D8518, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyTransformModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0A20);
  }
  return result;
}

unint64_t sub_100600D5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0A28;
  if (!qword_1009F0A28)
  {
    v1 = sub_100030B74(&qword_1009F09E8);
    sub_100030B34(&qword_1009F0A30, &qword_1009F09E0, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0A28);
  }
  return result;
}

uint64_t sub_100600DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100600E04);
}

uint64_t sub_100600E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_100600E80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100600E8C);
}

uint64_t sub_100600E8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

id sub_100600F00@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id result;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  ValueMetadata *v24;
  _UNKNOWN **v25;
  __int128 v26[2];
  __int128 v27[2];
  __int128 v28[3];

  sub_10002E418((uint64_t)a1, (uint64_t)v28);
  sub_10002E418((uint64_t)a2, (uint64_t)v27);
  sub_10002E418((uint64_t)a4, (uint64_t)v26);
  v10 = (void *)objc_opt_self(BKAppDelegate);
  v11 = objc_msgSend(v10, "delegate");
  v12 = objc_msgSend(v11, "serviceCenter");

  v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v14 = objc_msgSend(v10, "delegate");
  v15 = objc_msgSend(v14, "engagementManager");

  result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (result)
  {
    v17 = result;
    v18 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    v24 = &type metadata for MenuLibraryOperationProvider;
    v25 = &off_10090F400;
    v19 = (_QWORD *)swift_allocObject(&unk_100917AD0, 56, 7);
    *(_QWORD *)&v23 = v19;
    v19[2] = v12;
    v19[3] = v13;
    v19[4] = v15;
    v19[5] = v17;
    v19[6] = v18;
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(a2);
    _s5Books15CurrentPageViewVwxx_0(a1);
    v20 = a5 + *(int *)(type metadata accessor for MarkAsStillReadingActionItem(0) + 36);
    v21 = enum case for ContextActionType.markAsStillReading(_:);
    v22 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
    sub_100022840(v28, a5 + 40);
    sub_100022840(v27, a5);
    *(_QWORD *)(a5 + 80) = a3;
    sub_100022840(v26, a5 + 88);
    return (id)sub_100022840(&v23, a5 + 128);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100601120()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0[8];
  v2 = v0[9];
  sub_10003F198(v0 + 5, v1);
  if ((dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(v1, v2) & 1) == 0)
  {
    sub_1001EAEBC(&v17);
    if (!v18)
    {
      sub_1001EB7F4((uint64_t)&v17);
      return 0;
    }
    sub_1001EB834(&v17, &v20);
    v4 = v21;
    v5 = v22;
    sub_10003F198(&v20, v21);
    v6 = dispatch thunk of ContextAssetInfoProtocol.isMarkedFinished.getter(v4, v5);
    if (v6 == 2)
    {
      _s5Books15CurrentPageViewVwxx_0(&v20);
      return 0;
    }
    v7 = v6;
    v8 = v21;
    v9 = v22;
    sub_10003F198(&v20, v21);
    v10 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v8, v9);
    v11 = static ContextActionAssetType.== infix(_:_:)(v10, 4);
    sub_1001EB84C((uint64_t)&v20, (uint64_t)&v17);
    if ((v11 & 1) != 0)
    {
      _s5Books15CurrentPageViewVwxx_0(&v17);
    }
    else
    {
      v12 = v18;
      v13 = v19;
      sub_10003F198(&v17, v18);
      v14 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v12, v13);
      v15 = static ContextActionAssetType.== infix(_:_:)(v14, 5);
      _s5Books15CurrentPageViewVwxx_0(&v17);
      if ((v15 & 1) == 0)
      {
        v3 = v7 & 1;
        goto LABEL_12;
      }
    }
    v3 = 0;
LABEL_12:
    _s5Books15CurrentPageViewVwxx_0(&v20);
    return v3;
  }
  return 0;
}

uint64_t sub_100601280()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[19] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[20] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[21] = v3;
  v1[22] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[23] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[24] = v5;
  v1[25] = v6;
  return swift_task_switch(sub_100601314, v5, v6);
}

uint64_t sub_100601314()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  char *v17;

  sub_1001EAEBC((_OWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 88))
  {
    v1 = *(_QWORD **)(v0 + 152);
    sub_1001EB834((__int128 *)(v0 + 64), (_OWORD *)(v0 + 16));
    v2 = sub_10003F198(v1 + 16, v1[19]);
    v3 = v1[10];
    v4 = *(_OWORD *)v2;
    v5 = *((_OWORD *)v2 + 1);
    *(_QWORD *)(v0 + 144) = v2[4];
    *(_OWORD *)(v0 + 112) = v4;
    *(_OWORD *)(v0 + 128) = v5;
    v17 = (char *)&dword_1009E7340 + dword_1009E7340;
    v6 = (_QWORD *)swift_task_alloc(unk_1009E7344);
    *(_QWORD *)(v0 + 208) = v6;
    *v6 = v0;
    v6[1] = sub_1004CE124;
    return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))v17)(0, v0 + 16, v3, *(_QWORD *)(v0 + 152));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 184));
    v8 = sub_1001EB7F4(v0 + 64);
    v9 = static Logger.contextActionItem.getter(v8);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Action doesn't have sufficient information to handle action.", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
    v14 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 160);

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    v16 = swift_task_dealloc(*(_QWORD *)(v0 + 176));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v16);
  }
}

uint64_t sub_10060149C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009F0AEC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_100601280();
}

uint64_t sub_1006014E4()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

id sub_1006015F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackdropView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for BackdropView()
{
  return objc_opt_self(_TtC5Books12BackdropView);
}

unint64_t sub_100601640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0B18;
  if (!qword_1009F0B18)
  {
    v1 = objc_opt_self(CABackdropLayer);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009F0B18);
  }
  return result;
}

uint64_t sub_10060167C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int *v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v38 = a1;
  v39 = a2;
  v4 = type metadata accessor for Locale(0);
  v36 = *(_QWORD *)(v4 - 8);
  v37 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v33 - v8;
  v10 = type metadata accessor for String.LocalizationValue(0);
  v11 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  v35 = v11;
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - v15;
  v17 = sub_10004CFD4(&qword_1009D5038);
  swift_storeEnumTagMultiPayload(a3, v17, 0);
  v18 = (int *)type metadata accessor for CustomizeThemeButton(0);
  v19 = (char *)a3 + v18[5];
  *(_QWORD *)v19 = swift_getKeyPath(&unk_100734848);
  v19[8] = 0;
  v20 = (_QWORD *)((char *)a3 + v18[6]);
  v21 = String.LocalizationValue.init(stringLiteral:)(0x7A696D6F74737543, 0xE900000000000065);
  static Locale.current.getter(v21);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  v22 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
  v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v25 = v36;
  v26 = v37;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v6, v9, v37);
  v27 = String.init(localized:table:bundle:locale:comment:)(v13, 0, 0, v24, v6, "Customize Theme Button Title", 28, 2);
  v29 = v28;
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v16, v34);
  *v20 = v27;
  v20[1] = v29;
  v31 = (_QWORD *)((char *)a3 + v18[7]);
  v32 = v39;
  *v31 = v38;
  v31[1] = v32;
  return result;
}

uint64_t type metadata accessor for CustomizeThemeButton(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F0B78;
  if (!qword_1009F0B78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for CustomizeThemeButton);
  return result;
}

uint64_t *sub_10060190C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      *(_OWORD *)v4 = *(_OWORD *)a2;
      v8 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v9 = (char *)v4 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = v4;
      v13 = v7;
      v14 = 1;
    }
    else
    {
      v16 = *a2;
      *v4 = *a2;
      swift_retain(v16);
      v12 = v4;
      v13 = v7;
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v12, v13, v14);
    v17 = a3[5];
    v18 = a3[6];
    v19 = (char *)v4 + v17;
    v20 = (char *)a2 + v17;
    v21 = *(_QWORD *)v20;
    LOBYTE(v20) = v20[8];
    *(_QWORD *)v19 = v21;
    v19[8] = (char)v20;
    v22 = (uint64_t *)((char *)v4 + v18);
    v23 = (uint64_t *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = a3[7];
    v26 = (uint64_t *)((char *)v4 + v25);
    v27 = (uint64_t *)((char *)a2 + v25);
    v15 = v27[1];
    *v26 = *v27;
    v26[1] = v15;
    swift_retain(v21);
    swift_bridgeObjectRetain(v24);
  }
  swift_retain(v15);
  return v4;
}

double sub_100601A4C(_QWORD *a1, int *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double result;

  v4 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = (char *)a1 + *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v6 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release(*a1);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[5]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[6] + 8));
  *(_QWORD *)&result = swift_release(*(_QWORD *)((char *)a1 + a2[7] + 8)).n128_u64[0];
  return result;
}

_OWORD *sub_100601AF4(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a1;
    v12 = v6;
    v13 = 1;
  }
  else
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain(v14);
    v11 = a1;
    v12 = v6;
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v12, v13);
  v15 = a3[5];
  v16 = a3[6];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  v19 = *(_QWORD *)v18;
  LOBYTE(v18) = v18[8];
  *(_QWORD *)v17 = v19;
  v17[8] = (char)v18;
  v20 = (_QWORD *)((char *)a1 + v16);
  v21 = (_QWORD *)((char *)a2 + v16);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[7];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_retain(v19);
  swift_bridgeObjectRetain(v22);
  swift_retain(v26);
  return a1;
}

_OWORD *sub_100601C0C(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D5038);
    v6 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      v11 = a1;
      v12 = v6;
      v13 = 1;
    }
    else
    {
      v14 = *(_QWORD *)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_retain(v14);
      v11 = a1;
      v12 = v6;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
  }
  v15 = a3[5];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  LOBYTE(v17) = v17[8];
  v19 = *(_QWORD *)v16;
  *(_QWORD *)v16 = v18;
  v16[8] = (char)v17;
  swift_retain(v18);
  swift_release(v19);
  v20 = a3[6];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v23 = v22[1];
  v24 = v21[1];
  v21[1] = v23;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v24);
  v25 = a3[7];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = v27[1];
  v29 = v26[1];
  *v26 = *v27;
  v26[1] = v28;
  swift_retain(v28);
  swift_release(v29);
  return a1;
}

_OWORD *sub_100601D64(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = sub_10004CFD4(&qword_1009D5038);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    *a1 = *a2;
    v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v11 = a3[5];
  v12 = a3[6];
  v13 = (char *)a1 + v11;
  v14 = (char *)a2 + v11;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  return a1;
}

_OWORD *sub_100601E54(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, &qword_1009D5038);
    v6 = sub_10004CFD4(&qword_1009D5038);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for RoundedRectangle(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for RoundedCornerStyle(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v11 = a3[5];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  LOBYTE(v13) = v13[8];
  v15 = *(_QWORD *)v12;
  *(_QWORD *)v12 = v14;
  v12[8] = (char)v13;
  swift_release(v15);
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  v21 = v17[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease(v21);
  v22 = a3[7];
  v23 = *(_QWORD *)((char *)a1 + v22 + 8);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  swift_release(v23);
  return a1;
}

uint64_t sub_100601F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100601F90);
}

uint64_t sub_100601F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_10004CFD4(&qword_1009D5030);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_100602014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100602020);
}

uint64_t sub_100602020(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_10004CFD4(&qword_1009D5030);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_1006020A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_10025BB8C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\t";
    v4[2] = &unk_1007348A0;
    v4[3] = (char *)&value witness table for () + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_100602128(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A364, 1);
}

uint64_t sub_100602138@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t OpaqueTypeConformance2;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54[16];
  uint64_t v55;
  _QWORD v56[5];

  v52 = a1;
  v51 = type metadata accessor for AutomaticHoverEffect(0);
  v53 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v50 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for BorderlessButtonStyle(0);
  v4 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  v49 = v4;
  __chkstk_darwin(v3);
  v45 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ControlSize(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_10004CFD4(&qword_1009F0BB8);
  v10 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_10004CFD4(&qword_1009F0BC0);
  __chkstk_darwin(v42);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009F0BC8);
  v16 = *(_QWORD *)(v15 - 8);
  v46 = v15;
  v47 = v16;
  __chkstk_darwin(v15);
  v43 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CustomizeThemeButton(0) + 28));
  v19 = *v18;
  v20 = v18[1];
  v55 = v1;
  swift_retain(v20);
  v21 = sub_10004CFD4(&qword_1009F0BD0);
  v22 = sub_100602B2C();
  Button.init(action:label:)(v19, v20, sub_100602B24, v54, v21, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for ControlSize.regular(_:), v6);
  KeyPath = swift_getKeyPath(&unk_100734908);
  v24 = v42;
  v25 = (uint64_t *)&v14[*(int *)(v42 + 36)];
  v26 = sub_10004CFD4(&qword_1009D85F8);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))((char *)v25 + *(int *)(v26 + 28), v9, v6);
  *v25 = KeyPath;
  v27 = v44;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v44);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v28 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v27);
  v29 = v45;
  BorderlessButtonStyle.init()(v28);
  v30 = sub_100602E5C();
  v31 = sub_100008DB0((unint64_t *)&qword_1009EBC10, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  v32 = v43;
  v33 = v24;
  v34 = v48;
  View.buttonStyle<A>(_:)(v29, v24, v48, v30, v31);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v29, v34);
  v35 = sub_100010960((uint64_t)v14, &qword_1009F0BC0);
  v36 = v50;
  static CustomHoverEffect<>.automatic.getter(v35);
  v56[0] = v33;
  v56[1] = v34;
  v56[2] = v30;
  v56[3] = v31;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v56, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v38 = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v39 = v51;
  v40 = v46;
  View.hoverEffect<A>(_:isEnabled:)(v36, 1, v46, v51, OpaqueTypeConformance2, v38);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v32, v40);
}

uint64_t sub_1006024F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  _BYTE v71[32];
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;

  v2 = a1;
  v56 = a1;
  v69 = a2;
  v3 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v3);
  v68 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10004CFD4(&qword_1009F0C50);
  v58 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_10004CFD4(&qword_1009F0C18);
  __chkstk_darwin(v57);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_10004CFD4(&qword_1009F0C08);
  __chkstk_darwin(v61);
  v59 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_10004CFD4(&qword_1009F0BF8);
  __chkstk_darwin(v65);
  v62 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_10004CFD4(&qword_1009F0BE8);
  __chkstk_darwin(v64);
  v63 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_10004CFD4(&qword_1009F0BD0);
  __chkstk_darwin(v67);
  v66 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = static VerticalAlignment.center.getter(v13);
  v15.n128_f64[0] = sub_100602A38(v2, (uint64_t)&v70);
  v16 = v70;
  v17 = *(_QWORD *)v71;
  v18 = v71[8];
  v19 = *(_QWORD *)&v71[16];
  LOBYTE(v2) = static Edge.Set.all.getter(v15);
  v20 = EdgeInsets.init(_all:)(6.0);
  v70 = (unint64_t)v14;
  v71[0] = 1;
  *(_OWORD *)&v71[8] = v16;
  *(_QWORD *)&v71[24] = v17;
  LOBYTE(v72) = v18;
  *((_QWORD *)&v72 + 1) = v19;
  LOBYTE(v73) = v2;
  *((double *)&v73 + 1) = v20;
  *(_QWORD *)&v74 = v21;
  *((_QWORD *)&v74 + 1) = v22;
  *(_QWORD *)&v75 = v23;
  BYTE8(v75) = 0;
  v25 = static Font.Weight.semibold.getter(v24);
  v26 = sub_10004CFD4(&qword_1009F0C20);
  v27 = sub_100602DD0();
  View.fontWeight(_:)(*(_QWORD *)&v25, 0, v26, v27);
  swift_release(v16);
  sub_1001F5B28(*((uint64_t *)&v16 + 1), v17, v18);
  swift_bridgeObjectRelease(v19);
  v29 = static Color.primary.getter(v28);
  KeyPath = swift_getKeyPath(&unk_100734938);
  v31 = v58;
  v32 = v60;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v8, v6, v60);
  v33 = (uint64_t *)&v8[*(int *)(v57 + 36)];
  *v33 = KeyPath;
  v33[1] = v29;
  v34 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v6, v32);
  v35 = static Alignment.center.getter(v34);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)(&v70, 0x4065000000000000, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, v35, v36);
  v37 = v59;
  sub_10000B5E4((uint64_t)v8, v59, &qword_1009F0C18);
  v38 = (_OWORD *)(v37 + *(int *)(v61 + 36));
  v39 = v74;
  v38[4] = v73;
  v38[5] = v39;
  v38[6] = v75;
  v40 = *(_OWORD *)v71;
  *v38 = v70;
  v38[1] = v40;
  v41 = v72;
  v38[2] = *(_OWORD *)&v71[16];
  v38[3] = v41;
  sub_100010960((uint64_t)v8, &qword_1009F0C18);
  v42 = (uint64_t *)(v56 + *(int *)(type metadata accessor for CustomizeThemeButton(0) + 20));
  v43 = *v42;
  LOBYTE(KeyPath) = *((_BYTE *)v42 + 8);
  swift_retain(*v42);
  v45 = sub_1006682B0(v44, KeyPath);
  v46 = swift_release(v43);
  LOBYTE(v43) = static Edge.Set.all.getter(v46);
  v47 = v62;
  sub_10000B5E4(v37, v62, &qword_1009F0C08);
  v48 = v47 + *(int *)(v65 + 36);
  *(_QWORD *)v48 = v45;
  *(_BYTE *)(v48 + 8) = v43;
  sub_100010960(v37, &qword_1009F0C08);
  v49 = v68;
  sub_10066805C(v68);
  v50 = (uint64_t)v63;
  v51 = (uint64_t)&v63[*(int *)(v64 + 36)];
  sub_10025BC3C(v49, v51);
  *(_WORD *)(v51 + *(int *)(sub_10004CFD4(&qword_1009F4140) + 36)) = 256;
  sub_10000B5E4(v47, v50, &qword_1009F0BF8);
  sub_10025BC80(v49);
  sub_100010960(v47, &qword_1009F0BF8);
  sub_10066805C(v49);
  v52 = (uint64_t)v66;
  v53 = (uint64_t)&v66[*(int *)(v67 + 36)];
  sub_10025BC3C(v49, v53);
  *(_BYTE *)(v53 + *(int *)(sub_10004CFD4(&qword_1009D5140) + 36)) = 0;
  sub_10000B5E4(v50, v52, &qword_1009F0BE8);
  sub_10025BC80(v49);
  sub_100010960(v50, &qword_1009F0BE8);
  return sub_100602F00(v52, v69);
}

double sub_100602A38@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  double result;
  _QWORD v17[2];

  v4 = Image.init(systemName:)(1918985575, 0xE400000000000000);
  v5 = (_QWORD *)(a1 + *(int *)(type metadata accessor for CustomizeThemeButton(0) + 24));
  v6 = v5[1];
  v17[0] = *v5;
  v17[1] = v6;
  v7 = sub_1001F2108();
  v8 = swift_bridgeObjectRetain(v6);
  v9 = Text.init<A>(_:)(v17, &type metadata for String, v7, v8);
  v11 = v10;
  v13 = v12;
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v9;
  v15 = v14 & 1;
  *(_QWORD *)(a2 + 16) = v10;
  *(_BYTE *)(a2 + 24) = v14 & 1;
  *(_QWORD *)(a2 + 32) = v12;
  swift_retain(v4);
  sub_1001F596C(v9, v11, v15);
  swift_bridgeObjectRetain(v13);
  sub_1001F5B28(v9, v11, v15);
  swift_release(v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v13).n128_u64[0];
  return result;
}

uint64_t sub_100602B24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1006024F8(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_100602B2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0BD8;
  if (!qword_1009F0BD8)
  {
    v1 = sub_100030B74(&qword_1009F0BD0);
    sub_100602BB0();
    sub_100030B34(&qword_1009D5180, &qword_1009D5140, (uint64_t)&protocol conformance descriptor for _ContentShapeModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0BD8);
  }
  return result;
}

unint64_t sub_100602BB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0BE0;
  if (!qword_1009F0BE0)
  {
    v1 = sub_100030B74(&qword_1009F0BE8);
    sub_100602C34();
    sub_100030B34(&qword_1009D5178, &qword_1009F4140, (uint64_t)&protocol conformance descriptor for _ClipEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0BE0);
  }
  return result;
}

unint64_t sub_100602C34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0BF0;
  if (!qword_1009F0BF0)
  {
    v1 = sub_100030B74(&qword_1009F0BF8);
    sub_100602CB8();
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0BF0);
  }
  return result;
}

unint64_t sub_100602CB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0C00;
  if (!qword_1009F0C00)
  {
    v1 = sub_100030B74(&qword_1009F0C08);
    sub_100602D24();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0C00);
  }
  return result;
}

unint64_t sub_100602D24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1009F0C10;
  if (!qword_1009F0C10)
  {
    v1 = sub_100030B74(&qword_1009F0C18);
    v2[0] = sub_100030B74(&qword_1009F0C20);
    v2[1] = sub_100602DD0();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.fontWeight(_:)>>, 1);
    sub_100030B34(qword_1009D14D0, &qword_1009D83F0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0C10);
  }
  return result;
}

unint64_t sub_100602DD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0C28;
  if (!qword_1009F0C28)
  {
    v1 = sub_100030B74(&qword_1009F0C20);
    sub_100030B34(&qword_1009F0C30, &qword_1009F0C38, (uint64_t)&protocol conformance descriptor for HStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0C28);
  }
  return result;
}

unint64_t sub_100602E5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0C40;
  if (!qword_1009F0C40)
  {
    v1 = sub_100030B74(&qword_1009F0BC0);
    sub_100030B34(&qword_1009F0C48, &qword_1009F0BB8, (uint64_t)&protocol conformance descriptor for Button<A>);
    sub_100030B34(&qword_1009D85F0, &qword_1009D85F8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0C40);
  }
  return result;
}

uint64_t sub_100602F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009F0BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100602F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t OpaqueTypeConformance2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v0 = sub_100030B74(&qword_1009F0BC8);
  v1 = type metadata accessor for AutomaticHoverEffect(255);
  v5 = sub_100030B74(&qword_1009F0BC0);
  v6 = type metadata accessor for BorderlessButtonStyle(255);
  v7 = sub_100602E5C();
  v8 = sub_100008DB0((unint64_t *)&qword_1009EBC10, (uint64_t (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle, (uint64_t)&protocol conformance descriptor for BorderlessButtonStyle);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.buttonStyle<A>(_:)>>, 1);
  v3 = sub_100008DB0(&qword_1009D5998, (uint64_t (*)(uint64_t))&type metadata accessor for AutomaticHoverEffect, (uint64_t)&protocol conformance descriptor for AutomaticHoverEffect);
  v5 = v0;
  v6 = v1;
  v7 = OpaqueTypeConformance2;
  v8 = v3;
  return swift_getOpaqueTypeConformance2(&v5, &opaque type descriptor for <<opaque return type of View.hoverEffect<A>(_:isEnabled:)>>, 1);
}

uint64_t destroy for MicaButtonStyle(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
}

uint64_t initializeWithCopy for MicaButtonStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = v3;
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t assignWithCopy for MicaButtonStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 _s5IssueVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for MicaButtonStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease(v6);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for MicaButtonStyle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MicaButtonStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MicaButtonStyle()
{
  return &type metadata for MicaButtonStyle;
}

uint64_t sub_100603284(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A3A8, 1);
}

_QWORD *sub_100603294@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  int *v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  _QWORD *result;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __n128 v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  __int128 v38;

  v3 = v2;
  v6 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 24);
  v33 = ButtonStyleConfiguration.isPressed.getter(a1);
  v7 = *(_BYTE *)(v2 + 64);
  *a2 = swift_getKeyPath(&unk_1007349B8);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(a2, v8, 0);
  v9 = (int *)sub_10004CFD4(&qword_1009F0C58);
  v10 = (_QWORD *)((char *)a2 + v9[9]);
  v11 = type metadata accessor for ChromeStyle(0);
  v12 = sub_100288CBC();
  EnvironmentObject.init()(v11, v12);
  *v10 = v13;
  v10[1] = v14;
  v15 = *(_QWORD *)(v3 + 40);
  v16 = *(void **)v3;
  if (*(_QWORD *)v3)
  {
    v18 = *(_QWORD *)(v3 + 48);
    v17 = *(_QWORD *)(v3 + 56);
    v19 = *(_QWORD *)(v3 + 32);
    v20 = (char *)a2 + v9[10];
    swift_bridgeObjectRetain(*(_QWORD *)(v3 + 40));
    v21 = v16;
    v22 = ChromeStyle.orientationLockHintForegroundColor(locked:)(v7);

    KeyPath = swift_getKeyPath(&unk_1007349E8);
    v24 = static Alignment.center.getter(KeyPath);
    result = _FrameLayout.init(width:height:alignment:)(&v34, v6, 0, 0, 1, v24, v25);
    v27 = v34;
    v28 = v35;
    v29 = v36;
    v30 = v37;
    *(_QWORD *)v20 = v19;
    *((_QWORD *)v20 + 1) = v15;
    *((_QWORD *)v20 + 2) = v18;
    *((_QWORD *)v20 + 3) = v17;
    v20[32] = v7;
    *((_QWORD *)v20 + 5) = KeyPath;
    *((_QWORD *)v20 + 6) = v22;
    *((_QWORD *)v20 + 7) = v27;
    v20[64] = v28;
    *((_QWORD *)v20 + 9) = v29;
    v20[80] = v30;
    *(_OWORD *)(v20 + 88) = v38;
    *(_QWORD *)((char *)a2 + v9[11]) = v6;
    *(_QWORD *)((char *)a2 + v9[12]) = v5;
    *((_BYTE *)a2 + v9[13]) = v33 & 1;
    *((_BYTE *)a2 + v9[14]) = v7;
    *(_QWORD *)((char *)a2 + v9[15]) = 0;
  }
  else
  {
    v31 = *(_QWORD *)(v3 + 8);
    v32 = swift_bridgeObjectRetain(*(_QWORD *)(v3 + 40));
    result = (_QWORD *)EnvironmentObject.error()(0, v31, v11, v12, v32);
    __break(1u);
  }
  return result;
}

unint64_t sub_100603480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0C60;
  if (!qword_1009F0C60)
  {
    v1 = sub_100030B74(&qword_1009F0C58);
    result = swift_getWitnessTable(&unk_100716600, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0C60);
  }
  return result;
}

uint64_t sub_1006034CC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = type metadata accessor for ModifiedContent(0, a1, &type metadata for DebugBorder);
  sub_10060518C();
  swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t sub_10060354C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t sub_100603564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = a1;
  return View.modifier<A>(_:)(&v4, a2, &type metadata for OptionalAnimationModifierDeprecated, a3);
}

double View.onAlertPresentationChanged(isPresented:chromeStyle:)(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  double result;
  char v10;

  v10 = a1;
  v7 = swift_allocObject(&unk_100917C90, 24, 7);
  *(_QWORD *)(v7 + 16) = a2;
  v8 = a2;
  View.onChange<A>(of:perform:)(&v10, sub_1002E6704, v7, a3, &type metadata for Bool, a4, &protocol witness table for Bool);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

double sub_100603630@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double result;
  uint64_t v16;

  v5 = sub_10004CFD4(&qword_1009F0EC8);
  __chkstk_darwin(v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v16 - v9;
  v11 = *v2;
  if (UIAccessibilityIsReduceMotionEnabled())
    v11 = 0;
  v12 = swift_allocObject(&unk_100917F18, 24, 7);
  *(_QWORD *)(v12 + 16) = v11;
  v13 = sub_10004CFD4(&qword_1009F0ED0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v7, a1, v13);
  v14 = &v7[*(int *)(v5 + 36)];
  *(_QWORD *)v14 = sub_100414C5C;
  *((_QWORD *)v14 + 1) = v12;
  sub_100025B3C((uint64_t)v7, (uint64_t)v10, &qword_1009F0EC8);
  sub_100025B3C((uint64_t)v10, a2, &qword_1009F0EC8);
  *(_QWORD *)&result = swift_retain(v11).n128_u64[0];
  return result;
}

uint64_t sub_100603754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  _OWORD v24[3];

  v5 = sub_10004CFD4(&qword_1009F0D00);
  __chkstk_darwin(v5);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + 8);
  v10 = *(_BYTE *)(v2 + 16);
  v11 = *(_QWORD *)(v2 + 24);
  v12 = *(_BYTE *)v2 == 0;
  v13 = *(_BYTE *)(v2 + 32);
  if (*(_BYTE *)v2)
    v14 = *(_QWORD *)(v2 + 8);
  else
    v14 = *(_QWORD *)(v2 + 24);
  if (v12)
    v15 = v13;
  else
    v15 = v10;
  if (v12)
    v16 = v9;
  else
    v16 = v11;
  if (v12)
    v17 = v10;
  else
    v17 = v13;
  v18 = static Alignment.center.getter(v6);
  _FrameLayout.init(width:height:alignment:)(v24, v16, v17 & 1, v14, v15 & 1, v18, v19);
  v20 = sub_10004CFD4(&qword_1009F0D08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, a1, v20);
  v21 = &v8[*(int *)(v5 + 36)];
  v22 = v24[1];
  *(_OWORD *)v21 = v24[0];
  *((_OWORD *)v21 + 1) = v22;
  *((_OWORD *)v21 + 2) = v24[2];
  return sub_100025B3C((uint64_t)v8, a2, &qword_1009F0D00);
}

uint64_t sub_100603874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t result;
  double *v11;

  v5 = *(double *)(v2 + 8);
  v6 = *(double *)(v2 + 24);
  if (*(_BYTE *)(v2 + 16))
    v5 = 0.0;
  if (*(_BYTE *)(v2 + 32))
    v6 = 0.0;
  if (*(_BYTE *)v2)
    v7 = v5;
  else
    v7 = v6;
  if (*(_BYTE *)v2)
    v8 = v6;
  else
    v8 = v5;
  v9 = sub_10004CFD4(&qword_1009F0CF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, a1, v9);
  result = sub_10004CFD4(&qword_1009F0CF8);
  v11 = (double *)(a2 + *(int *)(result + 36));
  *v11 = v8;
  v11[1] = v7;
  return result;
}

uint64_t sub_100603914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  NSString v14;
  unsigned int v15;
  __n128 v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  void (*v29)(char *, uint64_t, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[5];

  v32 = a1;
  v34 = a3;
  v4 = sub_10004CFD4(&qword_1009F0E90);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_10004CFD4(&qword_1009F0E98);
  __chkstk_darwin(v33);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009F0EA0);
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "BOOLForKey:", v14);

  if (v15)
  {
    v16 = swift_retain(a2);
    v16.n128_u64[0] = 2.5;
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)(v35, 0, 0, _swiftEmptyArrayStorage, v16, 10.0, 0.0);
    v17 = *(double *)v35;
    v18 = v35[2];
    v19 = v35[3];
    v20 = v35[4];
    swift_retain(a2);
    v22 = static Alignment.center.getter(v21);
    v24 = v23;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v12, v32, v4);
    swift_release(a2);
    v25 = &v12[*(int *)(v10 + 36)];
    *(double *)v25 = v17 * 0.5;
    *((double *)v25 + 1) = v17;
    *((_QWORD *)v25 + 2) = v35[1];
    *((_QWORD *)v25 + 3) = v18;
    *((_QWORD *)v25 + 4) = v19;
    *((_QWORD *)v25 + 5) = v20;
    *((_QWORD *)v25 + 6) = a2;
    *((_WORD *)v25 + 28) = 256;
    *((_QWORD *)v25 + 8) = v22;
    *((_QWORD *)v25 + 9) = v24;
    sub_10000B5E4((uint64_t)v12, (uint64_t)v9, &qword_1009F0EA0);
    swift_storeEnumTagMultiPayload(v9, v33, 0);
    v26 = sub_1006055F4();
    v27 = sub_100030B34((unint64_t *)&unk_1009F0EB0, &qword_1009F0E90, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    _ConditionalContent<>.init(storage:)(v9, v10, v4, v26, v27);
    return sub_100010960((uint64_t)v12, &qword_1009F0EA0);
  }
  else
  {
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v29(v7, v32, v4);
    v29(v9, (uint64_t)v7, v4);
    swift_storeEnumTagMultiPayload(v9, v33, 1);
    v30 = sub_1006055F4();
    v31 = sub_100030B34((unint64_t *)&unk_1009F0EB0, &qword_1009F0E90, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    _ConditionalContent<>.init(storage:)(v9, v10, v4, v30, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_100603C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_100603914(a1, *v2, a2);
}

uint64_t sub_100603C30@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  __int128 v23;
  double v24;
  uint64_t v25;
  _BYTE v27[4];
  int v28;
  uint64_t v29;
  _OWORD v30[3];

  v28 = a2;
  v29 = a3;
  v4 = sub_10004CFD4(&qword_1009F0E20);
  __chkstk_darwin(v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10004CFD4(&qword_1009F0E28);
  __chkstk_darwin(v7);
  v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_10004CFD4(&qword_1009F0E30);
  __chkstk_darwin(v10);
  v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_10004CFD4(&qword_1009F0E38);
  __chkstk_darwin(v13);
  v15 = &v27[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = GeometryProxy.size.getter(v16);
  v19 = static Alignment.center.getter(v18);
  _FrameLayout.init(width:height:alignment:)(v30, *(_QWORD *)&v17, 0, 0, 1, v19, v20);
  v21 = sub_10004CFD4(&qword_1009F0E08);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v6, a1, v21);
  v22 = &v6[*(int *)(v4 + 36)];
  v23 = v30[1];
  *v22 = v30[0];
  v22[1] = v23;
  v22[2] = v30[2];
  sub_10000B5E4((uint64_t)v6, (uint64_t)v9, &qword_1009F0E20);
  *(_WORD *)&v9[*(int *)(v7 + 36)] = 257;
  sub_100010960((uint64_t)v6, &qword_1009F0E20);
  if ((v28 & 1) != 0)
    v24 = 1.0;
  else
    v24 = 0.0;
  sub_10000B5E4((uint64_t)v9, (uint64_t)v12, &qword_1009F0E28);
  *(double *)&v12[*(int *)(v10 + 36)] = v24;
  sub_100010960((uint64_t)v9, &qword_1009F0E28);
  v25 = sub_1001F5558(&qword_1009F0E40, &qword_1009F0E30, (void (*)(void))sub_100605294);
  View.accessibilityHidden(_:)(1, v10, v25);
  sub_100010960((uint64_t)v12, &qword_1009F0E30);
  return sub_100025B3C((uint64_t)v15, v29, &qword_1009F0E38);
}

uint64_t sub_100603EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  char v12;
  double v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)@<X0>(uint64_t@<X8>);
  uint64_t (*v18)@<X0>(uint64_t@<X8>);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (**v24)@<X0>(uint64_t@<X8>);
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v4 = sub_10004CFD4(&qword_1009F0E08);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009F0E10);
  __chkstk_darwin(v8);
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  v11 = (char *)&v26 - v10;
  v12 = *v2;
  if (*v2)
    v13 = 0.0;
  else
    v13 = 1.0;
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v15 = v14((char *)&v26 - v10, a1, v4);
  *(double *)&v11[*(int *)(v8 + 36)] = v13;
  v16 = static Alignment.center.getter(v15);
  v18 = v17;
  v14((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v19 = *(unsigned __int8 *)(v5 + 80);
  v20 = (v19 + 16) & ~v19;
  v21 = v20 + v6;
  v22 = swift_allocObject(&unk_100917E48, v21 + 1, v19 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v22 + v20, v7, v4);
  *(_BYTE *)(v22 + v21) = v12;
  v23 = v27;
  sub_10000B5E4((uint64_t)v11, v27, &qword_1009F0E10);
  v24 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v23 + *(int *)(sub_10004CFD4(&qword_1009F0E18) + 36));
  *v24 = sub_100605238;
  v24[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v22;
  v24[2] = (uint64_t (*)@<X0>(uint64_t@<X8>))v16;
  v24[3] = v18;
  return sub_100010960((uint64_t)v11, &qword_1009F0E10);
}

uint64_t sub_100604048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;

  v41 = a3;
  v5 = sub_10004CFD4(&qword_1009F0DD0);
  __chkstk_darwin(v5);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_10004CFD4(&qword_1009F0DD8);
  __chkstk_darwin(v38);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v40 = (uint64_t)&v36 - v11;
  v12 = sub_10004CFD4(&qword_1009F0DE0);
  __chkstk_darwin(v12);
  v39 = (uint64_t)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v36 - v15;
  v17 = sub_10004CFD4(&qword_1009F0DE8);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v18(v16, a1, v17);
  *(_WORD *)&v16[*(int *)(v12 + 36)] = 257;
  v19 = ((uint64_t (*)(char *, uint64_t, uint64_t))v18)(v7, a1, v17);
  v7[*(int *)(v5 + 36)] = 1;
  v37 = static Alignment.leading.getter(v19);
  v21 = v20;
  v22 = static VerticalAlignment.center.getter(v37);
  sub_100604354(a2, (uint64_t)&v42);
  v23 = v42;
  v36 = v43;
  v24 = v44;
  v25 = v45;
  v26 = v46;
  v27 = v48;
  v29 = v50;
  v28 = v51;
  LOBYTE(v42) = 0;
  v53 = v47;
  v52 = v49;
  sub_10000B5E4((uint64_t)v7, (uint64_t)v9, &qword_1009F0DD0);
  v30 = &v9[*(int *)(v38 + 36)];
  *(_QWORD *)v30 = v37;
  *((_QWORD *)v30 + 1) = v21;
  *((_QWORD *)v30 + 2) = v22;
  *((_QWORD *)v30 + 3) = 0;
  v30[32] = v42;
  *((_QWORD *)v30 + 5) = v23;
  *((_OWORD *)v30 + 3) = v36;
  *((_QWORD *)v30 + 8) = v24;
  *((_QWORD *)v30 + 9) = v25;
  *((_QWORD *)v30 + 10) = v26;
  v30[88] = v53;
  *((_QWORD *)v30 + 12) = v27;
  v30[104] = v52;
  *((_QWORD *)v30 + 14) = v29;
  *((_QWORD *)v30 + 15) = v28;
  sub_100010960((uint64_t)v7, &qword_1009F0DD0);
  v31 = v40;
  sub_100025B3C((uint64_t)v9, v40, &qword_1009F0DD8);
  v32 = v39;
  sub_10000B5E4((uint64_t)v16, v39, &qword_1009F0DE0);
  sub_10000B5E4(v31, (uint64_t)v9, &qword_1009F0DD8);
  v33 = v41;
  sub_10000B5E4(v32, v41, &qword_1009F0DE0);
  v34 = sub_10004CFD4((uint64_t *)&unk_1009F0DF0);
  sub_10000B5E4((uint64_t)v9, v33 + *(int *)(v34 + 48), &qword_1009F0DD8);
  sub_100010960(v31, &qword_1009F0DD8);
  sub_100010960((uint64_t)v16, &qword_1009F0DE0);
  sub_100010960((uint64_t)v9, &qword_1009F0DD8);
  return sub_100010960(v32, &qword_1009F0DE0);
}

double sub_100604354@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  char v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  double result;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  __int128 v54;

  v4 = type metadata accessor for LayoutDirection(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v45 - v9;
  v11 = sub_10004CFD4(&qword_1009D8A30);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v12 + 32) = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v13 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  v14.n128_u64[0] = 0;
  v15 = Color.opacity(_:)(v13, v14);
  swift_release(v13);
  *(_QWORD *)(v12 + 40) = v15;
  v50 = v12;
  specialized Array._endMutation()(v16);
  v17 = v50;
  sub_100667A20((uint64_t)v10);
  v18 = enum case for LayoutDirection.leftToRight(_:);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v19(v7, enum case for LayoutDirection.leftToRight(_:), v4);
  LOBYTE(v12) = static LayoutDirection.== infix(_:_:)(v10, v7);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v7, v4);
  v21 = ((uint64_t (*)(char *, uint64_t))v20)(v10, v4);
  if ((v12 & 1) != 0)
    v22 = static UnitPoint.leading.getter(v21);
  else
    v22 = static UnitPoint.trailing.getter(v21);
  v24 = v22;
  v25 = v23;
  sub_100667A20((uint64_t)v10);
  v19(v7, v18, v4);
  v26 = static LayoutDirection.== infix(_:_:)(v10, v7);
  v20(v7, v4);
  v27 = ((uint64_t (*)(char *, uint64_t))v20)(v10, v4);
  if ((v26 & 1) != 0)
    v28 = static UnitPoint.trailing.getter(v27);
  else
    v28 = static UnitPoint.leading.getter(v27);
  v30 = v28;
  v31 = v29;
  Gradient.init(colors:)(v17);
  LinearGradient.init(gradient:startPoint:endPoint:)(&v46, v32, v24, v25, v30, v31);
  v33 = v46;
  v45 = v47;
  v34 = v48;
  v35 = v49;
  v36 = type metadata accessor for ClipHorizontallyWithFadeout(0);
  v37 = *(_QWORD *)(a1 + *(int *)(v36 + 20));
  v38 = static Alignment.center.getter(v36);
  _FrameLayout.init(width:height:alignment:)(&v50, v37, 0, 0, 1, v38, v39);
  v40 = v50;
  v41 = v51;
  v42 = v52;
  v43 = v53;
  *(_QWORD *)a2 = v33;
  *(_OWORD *)(a2 + 8) = v45;
  *(_QWORD *)(a2 + 24) = v34;
  *(_QWORD *)(a2 + 32) = v35;
  *(_QWORD *)(a2 + 40) = v40;
  *(_BYTE *)(a2 + 48) = v41;
  *(_QWORD *)(a2 + 56) = v42;
  *(_BYTE *)(a2 + 64) = v43;
  result = *(double *)&v54;
  *(_OWORD *)(a2 + 72) = v54;
  return result;
}

uint64_t sub_1006045C8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v6;

  *a2 = static Axis.Set.horizontal.getter(a3);
  v6 = sub_10004CFD4(&qword_1009F0DC8);
  return sub_100604048(a1, v3, (uint64_t)&a2[*(int *)(v6 + 44)]);
}

void sub_100604618(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  Class isa;
  uint64_t v16;
  void *v17;
  uint64_t KeyPath;
  uint64_t v19;
  __n128 v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  id v24;

  v4 = type metadata accessor for ColorScheme(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v23 - v9;
  v11 = *a1;
  v12 = (void *)objc_opt_self(UIView);
  v13 = sub_10004CFD4(&qword_1009F0CD0);
  v14 = swift_allocObject(v13, 40, 7);
  *(_OWORD *)(v14 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v14 + 32) = sub_100009E04(0, &qword_1009F0CD8, UIAlertController_ptr);
  sub_10004CFD4((uint64_t *)&unk_1009F0CE0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v24 = objc_msgSend(v12, "appearanceWhenContainedInInstancesOfClasses:", isa, swift_bridgeObjectRelease(v14).n128_f64[0]);

  if (v11 == 1)
  {
    sub_100009E04(0, (unint64_t *)&qword_1009EC680, UIColor_ptr);
    v16 = ChromeStyle.accentColor.getter();
    v17 = (void *)UIColor.init(_:)(v16);
    objc_msgSend(v24, "setTintColor:", v17);

    KeyPath = swift_getKeyPath(&unk_100734A58);
    v19 = swift_getKeyPath(&unk_100734A80);
    static Published.subscript.getter(v10, a2, KeyPath, v19);
    swift_release(KeyPath);
    v20 = swift_release(v19);
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v5 + 104))(v7, enum case for ColorScheme.dark(_:), v4, v20);
    LOBYTE(KeyPath) = static ColorScheme.== infix(_:_:)(v10, v7);
    v21 = *(void (**)(char *, uint64_t))(v5 + 8);
    v21(v7, v4);
    v21(v10, v4);
    if ((KeyPath & 1) != 0)
      v22 = 2;
    else
      v22 = 1;
    objc_msgSend(v24, "setOverrideUserInterfaceStyle:", v22);

  }
  else
  {
    objc_msgSend(v24, "setTintColor:", 0);
    objc_msgSend(v24, "setOverrideUserInterfaceStyle:", 0);

  }
}

uint64_t sub_1006048A0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006048C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = sub_100030B74(&qword_1009D83C0);
  v3 = type metadata accessor for ModifiedContent(255, v1, v2);
  sub_100030B34(&qword_1009D83B8, &qword_1009D83C0, (uint64_t)&protocol conformance descriptor for _ValueActionModifier<A>);
  return swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v3);
}

ValueMetadata *type metadata accessor for OffsetWithPrimaryAxis()
{
  return &type metadata for OffsetWithPrimaryAxis;
}

uint64_t _s5Books21OffsetWithPrimaryAxisVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[33])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s5Books21OffsetWithPrimaryAxisVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FrameWithPrimaryAxis()
{
  return &type metadata for FrameWithPrimaryAxis;
}

uint64_t sub_100604A10(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A570, 1);
}

uint64_t sub_100604A20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A548, 1);
}

uint64_t *sub_100604A30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

double sub_100604B08(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(a1, v2) == 1)
  {
    v3 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*a1).n128_u64[0];
  }
  return result;
}

uint64_t *sub_100604B6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t *sub_100604C18(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, (uint64_t *)&unk_1009EE650);
    v6 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

char *sub_100604CDC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_100604D84(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, (uint64_t *)&unk_1009EE650);
    v6 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 20)] = *(_QWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_100604E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100604E50);
}

uint64_t sub_100604E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D8240);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_100604E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100604E9C);
}

uint64_t sub_100604E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009D8240);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ClipHorizontallyWithFadeout(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F0D68;
  if (!qword_1009F0D68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ClipHorizontallyWithFadeout);
  return result;
}

void sub_100604F1C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  sub_1001E34F4(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.Int64 + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
  }
}

uint64_t storeEnumTagSinglePayload for FixedClippedFlexibleHeight(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100604FDC + 4 * byte_100734A45[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100605010 + 4 * asc_100734A40[v4]))();
}

uint64_t sub_100605010(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100605018(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100605020);
  return result;
}

uint64_t sub_10060502C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100605034);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100605038(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100605040(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FixedClippedFlexibleHeight()
{
  return &type metadata for FixedClippedFlexibleHeight;
}

unint64_t sub_100605060()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0DA8;
  if (!qword_1009F0DA8)
  {
    v1 = sub_100030B74(&qword_1009F0CF8);
    sub_100030B34(&qword_1009F0DB0, &qword_1009F0CF0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0DA8);
  }
  return result;
}

unint64_t sub_1006050E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0DB8;
  if (!qword_1009F0DB8)
  {
    v1 = sub_100030B74(&qword_1009F0D00);
    sub_100030B34(&qword_1009F0DC0, &qword_1009F0D08, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0DB8);
  }
  return result;
}

uint64_t sub_10060516C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A600, 1);
}

uint64_t sub_10060517C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A5D8, 1);
}

unint64_t sub_10060518C()
{
  unint64_t result;

  result = qword_1009F0E00;
  if (!qword_1009F0E00)
  {
    result = swift_getWitnessTable(&unk_100734CE4, &type metadata for DebugBorder);
    atomic_store(result, (unint64_t *)&qword_1009F0E00);
  }
  return result;
}

uint64_t sub_1006051D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4(&qword_1009F0E08);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100605238@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_10004CFD4(&qword_1009F0E08) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_100603C30(v1 + v4, *(unsigned __int8 *)(v1 + v4 + *(_QWORD *)(v3 + 64)), a1);
}

uint64_t sub_100605294()
{
  return sub_1001F5558(&qword_1009F0E48, &qword_1009F0E28, (void (*)(void))sub_1006052B8);
}

unint64_t sub_1006052B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0E50;
  if (!qword_1009F0E50)
  {
    v1 = sub_100030B74(&qword_1009F0E20);
    sub_100030B34(&qword_1009F0E58, &qword_1009F0E08, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0E50);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugBorder()
{
  return &type metadata for DebugBorder;
}

uint64_t *initializeBufferWithCopyOfBuffer for OptionalAnimationModifierDeprecated(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  *a1 = *a2;
  swift_retain(v3);
  return a1;
}

uint64_t *assignWithCopy for OptionalAnimationModifierDeprecated(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v3);
  return a1;
}

uint64_t *assignWithTake for OptionalAnimationModifierDeprecated(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  swift_release(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for OptionalAnimationModifierDeprecated(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OptionalAnimationModifierDeprecated(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionalAnimationModifierDeprecated()
{
  return &type metadata for OptionalAnimationModifierDeprecated;
}

uint64_t sub_10060549C()
{
  return sub_100030B34(&qword_1009F0E60, &qword_1009F0E68, (uint64_t)&protocol conformance descriptor for ViewThatFits<A>);
}

unint64_t sub_1006054CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0E70;
  if (!qword_1009F0E70)
  {
    v1 = sub_100030B74(&qword_1009F0E18);
    sub_100605550();
    sub_100030B34(&qword_1009F0E80, &qword_1009F0E88, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0E70);
  }
  return result;
}

unint64_t sub_100605550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0E78;
  if (!qword_1009F0E78)
  {
    v1 = sub_100030B74(&qword_1009F0E10);
    sub_100030B34(&qword_1009F0E58, &qword_1009F0E08, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0E78);
  }
  return result;
}

uint64_t sub_1006055D4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A650, 1);
}

uint64_t sub_1006055E4(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A628, 1);
}

unint64_t sub_1006055F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0EA8;
  if (!qword_1009F0EA8)
  {
    v1 = sub_100030B74(&qword_1009F0EA0);
    sub_100030B34((unint64_t *)&unk_1009F0EB0, &qword_1009F0E90, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    sub_100030B34(&qword_1009ED508, &qword_1009F0EC0, (uint64_t)&protocol conformance descriptor for _OverlayModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0EA8);
  }
  return result;
}

uint64_t sub_100605690()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1006056B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0ED8;
  if (!qword_1009F0ED8)
  {
    v1 = sub_100030B74(&qword_1009F0EE0);
    sub_10060571C();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> Group<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0ED8);
  }
  return result;
}

unint64_t sub_10060571C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0EE8;
  if (!qword_1009F0EE8)
  {
    v1 = sub_100030B74(&qword_1009F0EF0);
    sub_1006055F4();
    sub_100030B34((unint64_t *)&unk_1009F0EB0, &qword_1009F0E90, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0EE8);
  }
  return result;
}

unint64_t sub_1006057A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F0EF8;
  if (!qword_1009F0EF8)
  {
    v1 = sub_100030B74(&qword_1009F0EC8);
    sub_100030B34((unint64_t *)&unk_1009F0F00, &qword_1009F0ED0, (uint64_t)&protocol conformance descriptor for _ViewModifier_Content<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F0EF8);
  }
  return result;
}

uint64_t sub_10060582C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100605850@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + 16), "sceneManager");
  *a1 = result;
  return result;
}

id sub_100605888@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return v2;
}

id sub_100605894@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + 16), "menuController");
  *a1 = result;
  return result;
}

double sub_1006058CC@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  __int128 v4;
  _OWORD v5[2];
  uint64_t v6;

  sub_100475A00((uint64_t)objc_msgSend(a1, "appLaunchCoordinator"), (uint64_t)objc_msgSend(a1, "sceneManager"), v5);
  result = *(double *)v5;
  v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 32) = v6;
  return result;
}

double sub_100605950@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1006058CC(*(void **)(v1 + 16), a1);
}

uint64_t sub_100605958@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ContentSizeCategoryManager(0);
  result = static ContentSizeCategoryManager.shared.getter();
  *a1 = result;
  return result;
}

_QWORD *sub_100605994(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  _QWORD *v17;

  v2 = type metadata accessor for UserFeature(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v17 = _swiftEmptyArrayStorage;
    sub_100366F00(0, v6, 0);
    v7 = v17;
    v8 = (uint64_t *)(a1 + 48);
    do
    {
      v9 = *(v8 - 2);
      v10 = *(v8 - 1);
      v11 = *v8;
      swift_bridgeObjectRetain(v10);
      v12 = swift_bridgeObjectRetain(v11);
      UserFeature.init(name:value:)(v9, v10, v11, v12);
      v17 = v7;
      v14 = v7[2];
      v13 = v7[3];
      if (v14 >= v13 >> 1)
      {
        sub_100366F00(v13 > 1, v14 + 1, 1);
        v7 = v17;
      }
      v7[2] = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v14, v5, v2);
      v8 += 3;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_100605AE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t static EventReporter.setupEventDataProvider()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  _QWORD v5[5];

  v2 = type metadata accessor for EventReporter(0, a2);
  v3 = (void *)static EventReporter.shared.getter(v2);
  v5[3] = &type metadata for EventDataProvider;
  v5[4] = sub_100605B60();
  dispatch thunk of EventReporter.add(dataProvider:)(v5);

  return _s5Books15CurrentPageViewVwxx_0(v5);
}

unint64_t sub_100605B60()
{
  unint64_t result;

  result = qword_1009F0F20;
  if (!qword_1009F0F20)
  {
    result = swift_getWitnessTable(&unk_100734D54, &type metadata for EventDataProvider);
    atomic_store(result, (unint64_t *)&qword_1009F0F20);
  }
  return result;
}

void sub_100605BA4(id a1, SEL a2)
{
  uint64_t v2;
  void *v3;
  _QWORD v4[5];

  v2 = type metadata accessor for EventReporter(0, a2);
  v3 = (void *)static EventReporter.shared.getter(v2);
  v4[3] = &type metadata for EventDataProvider;
  v4[4] = sub_100605B60();
  dispatch thunk of EventReporter.add(dataProvider:)(v4);

  _s5Books15CurrentPageViewVwxx_0(v4);
}

ValueMetadata *type metadata accessor for EventDataProvider()
{
  return &type metadata for EventDataProvider;
}

void sub_100605C10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void **a5)
{
  NSString v8;
  id v9;
  id v10;
  NSNumber v11;
  void *v12;

  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(a1, "libraryAssetWithAssetID:inManagedObjectContext:", v8, a4);

  if (v9)
  {
    v10 = v9;
    if (objc_msgSend(v10, "contentType") == 3)
    {
      objc_msgSend(v10, "pageCount");
      v11.super.super.isa = Int64._bridgeToObjectiveC()().super.super.isa;

    }
    else
    {

      v11.super.super.isa = 0;
    }
    v12 = *a5;
    *a5 = v11.super.super.isa;

  }
}

uint64_t sub_100605CDC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 216) = a1;
  return swift_task_switch(sub_100605CF4, 0, 0);
}

uint64_t sub_100605CF4()
{
  uint64_t v0;
  id v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = (id)BCGetUnsafeAppDelegateReference();
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    *(_OWORD *)(v0 + 168) = 0u;
    *(_OWORD *)(v0 + 184) = 0u;
  }
  sub_10004C7B4(v0 + 168, v0 + 136);
  if (*(_QWORD *)(v0 + 160))
  {
    v3 = sub_1005A82AC();
    if ((swift_dynamicCast(v0 + 200, v0 + 136, (char *)&type metadata for Any + 8, v3, 6) & 1) != 0)
    {
      *(_QWORD *)(v0 + 224) = *(_QWORD *)(v0 + 200);
      v4 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v0 + 232) = static MainActor.shared.getter(v4);
      v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
      return swift_task_switch(sub_100605E3C, v5, v6);
    }
  }
  else
  {
    sub_100010960(v0 + 136, (uint64_t *)&unk_1009D04E0);
  }
  v8 = *(_QWORD *)(v0 + 216);
  v9 = type metadata accessor for UserEmbeddingData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100605E3C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 240) = objc_msgSend(*(id *)(v0 + 224), "containerHost", swift_release(*(_QWORD *)(v0 + 232)).n128_f64[0]);
  return swift_task_switch(sub_100605E94, 0, 0);
}

uint64_t sub_100605E94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 240);
  sub_1000145A0((_QWORD *)(v0 + 96));

  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 128);
  sub_10003F198((_QWORD *)(v0 + 96), v2);
  v4 = sub_10004CFD4(&qword_1009F0F48);
  dispatch thunk of ResolverType.resolve<A>(_:)(v4, v4, v2, v3);
  if (*(_QWORD *)(v0 + 80))
  {
    sub_100022840((__int128 *)(v0 + 56), v0 + 16);
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 96));
    v5 = *(_QWORD *)(v0 + 40);
    v6 = *(_QWORD *)(v0 + 48);
    sub_10003F198((_QWORD *)(v0 + 16), v5);
    v7 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of UserEncodingServiceType.userEncodings()[1]);
    *(_QWORD *)(v0 + 248) = v7;
    *v7 = v0;
    v7[1] = sub_100605FDC;
    return dispatch thunk of UserEncodingServiceType.userEncodings()(v5, v6);
  }
  else
  {

    sub_100010960(v0 + 56, (uint64_t *)&unk_1009F0F50);
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 96));
    v9 = *(_QWORD *)(v0 + 216);
    v10 = type metadata accessor for UserEmbeddingData(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100605FDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 248);
  *(_QWORD *)(*v2 + 256) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1006060EC;
  }
  else
  {
    *(_QWORD *)(v4 + 264) = a1;
    v6 = sub_100606050;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_100606050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;
  __n128 v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 264);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(void **)(v0 + 224);
  v4 = sub_100605994(v1);
  v5 = swift_bridgeObjectRelease(v1);
  UserEmbeddingData.init(features:)(v4, v5);

  v6 = type metadata accessor for UserEmbeddingData(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v2, 0, 1, v6);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006060EC()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10060612C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100606198(a2, a3);
}

uint64_t sub_100606138(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009F0F34);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000AE34;
  v3[27] = a1;
  return swift_task_switch(sub_100605CF4, 0, 0);
}

void sub_100606198(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  unint64_t v6;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD aBlock[3];
  void *v16;
  uint64_t (*v17)();
  uint64_t v18;
  id v19;
  _OWORD v20[2];

  v4 = (id)BCGetUnsafeAppDelegateReference();
  if (v4)
  {
    v5 = v4;
    _bridgeAnyObjectToAny(_:)(v4);
    swift_unknownObjectRelease(v5);
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_10004C7B4((uint64_t)v20, (uint64_t)aBlock);
  if (v16)
  {
    v6 = sub_1005A82AC();
    if ((swift_dynamicCast(&v19, aBlock, (char *)&type metadata for Any + 8, v6, 6) & 1) != 0)
    {
      v7 = v19;
      v8 = objc_msgSend(v19, "libraryAssetProvider");
      *(_QWORD *)&v20[0] = 0;
      v9 = objc_msgSend(v8, "readOnlyChildContext");
      v10 = (_QWORD *)swift_allocObject(&unk_100918048, 56, 7);
      v10[2] = v8;
      v10[3] = a1;
      v10[4] = a2;
      v10[5] = v9;
      v10[6] = v20;
      v11 = swift_allocObject(&unk_100918070, 32, 7);
      *(_QWORD *)(v11 + 16) = sub_1006063FC;
      *(_QWORD *)(v11 + 24) = v10;
      v17 = sub_10004DE04;
      v18 = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100605AE4;
      v16 = &unk_100918088;
      v12 = _Block_copy(aBlock);
      v13 = v18;
      swift_unknownObjectRetain(v8);
      swift_bridgeObjectRetain(a2);
      v14 = v9;
      swift_retain(v11);
      objc_msgSend(v14, "performBlockAndWait:", v12, swift_release(v13).n128_f64[0]);
      swift_unknownObjectRelease(v8);

      _Block_release(v12);
      LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v11, "", 71, 29, 28, 1);
      swift_release(v11);
      if ((v14 & 1) != 0)
        __break(1u);
      else
        swift_release(v10);
    }
  }
  else
  {
    sub_100010960((uint64_t)aBlock, (uint64_t *)&unk_1009D04E0);
  }
}

uint64_t sub_1006063C8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 56, 7);
}

void sub_1006063FC()
{
  uint64_t v0;

  sub_100605C10(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void ***)(v0 + 48));
}

uint64_t sub_10060640C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10060641C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch(sub_100606434, 0, 0);
}

uint64_t sub_100606434()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = (uint64_t)objc_msgSend(*(id *)(*(_QWORD *)(v0 + 80) + 16), "activeStoreAccount");
  if (v1)
  {
    v2 = (void *)v1;
    v3 = objc_msgSend((id)v1, "ams_accountFlagValueForAccountFlag:", AMSAccountFlagPersonalization);
    if (v3)
    {
      v4 = v3;
      _bridgeAnyObjectToAny(_:)(v3);
      swift_unknownObjectRelease(v4);

    }
    else
    {

      *(_OWORD *)(v0 + 48) = 0u;
      *(_OWORD *)(v0 + 64) = 0u;
    }
    sub_10004C7B4(v0 + 48, v0 + 16);
    if (*(_QWORD *)(v0 + 40))
    {
      if ((swift_dynamicCast(v0 + 88, v0 + 16, (char *)&type metadata for Any + 8, &type metadata for Bool, 6) & 1) != 0)
      {
        v1 = *(unsigned __int8 *)(v0 + 88);
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
      }
    }
    else
    {
      sub_10004A7B8(v0 + 16);
    }
    v1 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_100606534()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc(dword_1009F100C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10028FC58;
  v3[10] = v2;
  return swift_task_switch(sub_100606434, 0, 0);
}

id sub_1006066A8()
{
  return sub_10023803C(type metadata accessor for FrozenSnapshotView);
}

uint64_t type metadata accessor for FrozenSnapshotView()
{
  return objc_opt_self(_TtC5Books18FrozenSnapshotView);
}

char *sub_1006066E4(int a1, id a2)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  char *v8;
  char *v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;

  if (a2)
  {
    objc_msgSend(a2, "frame");
    v4 = v3;
    v6 = v5;
  }
  else
  {
    v6 = 0.0;
    v4 = 0.0;
  }
  v7 = 0.0;
  v8 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FrozenSnapshotView()), "initWithFrame:", 0.0, 0.0, v4, v6);
  v9 = v8;
  if (a2)
  {
    objc_msgSend(a2, "_continuousCornerRadius");
    v7 = v10;
  }
  objc_msgSend(v8, "_setContinuousCornerRadius:", v7);

  v11 = objc_msgSend(v8, "layer");
  v12 = v11;
  if (!a2)
  {
    objc_msgSend(v11, "setMaskedCorners:", 0);

    v16 = objc_msgSend(v8, "layer");
    objc_msgSend(v16, "setMasksToBounds:", 1);
    goto LABEL_10;
  }
  v13 = objc_msgSend(a2, "layer");
  v14 = objc_msgSend(v13, "maskedCorners");

  objc_msgSend(v12, "setMaskedCorners:", v14);
  v15 = objc_msgSend(v8, "layer");
  objc_msgSend(v15, "setMasksToBounds:", 1);

  v16 = a2;
  v17 = objc_msgSend(v16, "snapshotViewAfterScreenUpdates:", 0);
  if (!v17)
  {
LABEL_10:

    v20 = OBJC_IVAR____TtC5Books18FrozenSnapshotView_childView;
    objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC5Books18FrozenSnapshotView_childView], "removeFromSuperview");
    v19 = *(void **)&v8[v20];
    *(_QWORD *)&v8[v20] = 0;
    goto LABEL_11;
  }
  v18 = v17;
  objc_msgSend(v8, "addSubview:", v17);
  v19 = *(void **)&v8[OBJC_IVAR____TtC5Books18FrozenSnapshotView_childView];
  *(_QWORD *)&v8[OBJC_IVAR____TtC5Books18FrozenSnapshotView_childView] = v18;

LABEL_11:
  return v8;
}

void sub_100606900(char *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  void *v9;

  if (!a3)
    goto LABEL_5;
  v4 = a3;
  v5 = objc_msgSend(v4, "snapshotViewAfterScreenUpdates:", 0);
  if (!v5)
  {

LABEL_5:
    v8 = OBJC_IVAR____TtC5Books18FrozenSnapshotView_childView;
    objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC5Books18FrozenSnapshotView_childView], "removeFromSuperview");
    v7 = *(void **)&a1[v8];
    *(_QWORD *)&a1[v8] = 0;
    goto LABEL_6;
  }
  v6 = v5;
  objc_msgSend(a1, "addSubview:", v5);
  v9 = *(void **)&a1[OBJC_IVAR____TtC5Books18FrozenSnapshotView_childView];
  *(_QWORD *)&a1[OBJC_IVAR____TtC5Books18FrozenSnapshotView_childView] = v6;

  v7 = v9;
LABEL_6:

}

char *sub_1006069B0(int a1)
{
  id *v1;

  return sub_1006066E4(a1, *v1);
}

void sub_1006069B8(char *a1, uint64_t a2)
{
  void **v2;

  sub_100606900(a1, a2, *v2);
}

uint64_t sub_1006069C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100606C90();
  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100606A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_100606C90();
  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100606A60(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100606C90();
  UIViewRepresentable.body.getter(a1, v2);
  __break(1u);
}

id sub_100606B7C()
{
  return sub_10023803C(type metadata accessor for BKFixedSizeImageView);
}

uint64_t type metadata accessor for BKFixedSizeImageView()
{
  return objc_opt_self(_TtC5Books20BKFixedSizeImageView);
}

void **initializeBufferWithCopyOfBuffer for UIViewContainerView(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for UIViewContainerView(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for UIViewContainerView(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for UIViewContainerView()
{
  return &type metadata for UIViewContainerView;
}

unint64_t sub_100606C4C()
{
  unint64_t result;

  result = qword_1009F1070;
  if (!qword_1009F1070)
  {
    result = swift_getWitnessTable(&unk_100734E44, &type metadata for UIViewContainerView);
    atomic_store(result, (unint64_t *)&qword_1009F1070);
  }
  return result;
}

unint64_t sub_100606C90()
{
  unint64_t result;

  result = qword_1009F1078;
  if (!qword_1009F1078)
  {
    result = swift_getWitnessTable(&unk_100734E94, &type metadata for UIViewContainerView);
    atomic_store(result, (unint64_t *)&qword_1009F1078);
  }
  return result;
}

double sub_100606E04()
{
  void *v0;
  id v1;
  double v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  CGRect v8;
  CGRect v9;
  CGRect v10;

  v1 = objc_msgSend(v0, "presentedView");
  v2 = 0.0;
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(v0, "containerView");
    if (v4)
    {
      v5 = v4;
      objc_msgSend(v4, "bounds");
      v2 = v6;
      objc_msgSend(v5, "bounds");
      CGRectGetWidth(v8);
      objc_msgSend(v5, "bounds");
      CGRectGetHeight(v9);
      objc_msgSend(v3, "bounds");
      CGRectGetHeight(v10);

    }
  }
  return v2;
}

uint64_t type metadata accessor for GoalPickerModalPresentationController()
{
  return objc_opt_self(_TtC5Books37GoalPickerModalPresentationController);
}

id sub_100606F1C(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  NSString v14;
  double v15;
  NSObject *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  double v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSString v36;
  double v37;
  NSObject *v38;
  id v39;
  id v40;
  id v41;
  NSObject *v42;
  NSObject *v43;
  NSObject *v44;
  NSObject *v45;
  id v46;
  NSObject *v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  os_log_type_t v54;
  uint8_t *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v70;
  NSObject *v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  id v75;

  v3 = a2 & 1;
  v4 = type metadata accessor for Logger(0);
  v73 = *(_QWORD *)(v4 - 8);
  v74 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100009B88();
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000002CLL, 0x80000001007D8A30);
  v7 = objc_msgSend(objc_allocWithZone((Class)BCAugmentedExperience), "init");
  v8 = objc_msgSend(a1, "endOfBookLocation");
  if (v8)
  {
    v9 = v8;
    static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v12 = objc_msgSend(objc_allocWithZone((Class)BCAugmentedExperiencePoint), "init");
    v13 = objc_allocWithZone((Class)BCCFI);
    v14 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v11).n128_u64[0];
    v75 = 0;
    v16 = objc_msgSend(v13, "initWithCFI:error:", v14, &v75, v15);

    v17 = v75;
    if (v16)
    {
      v18 = (void *)objc_opt_self(BCEPubBookPosition);
      v19 = v17;
      v20 = objc_msgSend(v18, "positionWithCFI:", v16);
      objc_msgSend(v12, "setExperiencePoint:", v20);

      v21 = objc_msgSend(a1, "endOfBookConfidence");
      if (v21)
      {
        v23 = v21;
        LODWORD(v75) = 0;
        BYTE4(v75) = 1;
        static Float._conditionallyBridgeFromObjectiveC(_:result:)(v21, &v75);

        LODWORD(v22) = (_DWORD)v75;
        if (BYTE4(v75))
          *(float *)&v22 = 1.0;
      }
      else
      {
        LODWORD(v22) = 1.0;
      }
      objc_msgSend(v12, "setConfidence:", v22);
      v31 = objc_msgSend(a1, "endOfBookValidRange");
      if (v31)
      {
        v32 = v31;
        v72 = v3;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        v34 = v33;

        v35 = objc_allocWithZone((Class)BCCFI);
        v36 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v37 = swift_bridgeObjectRelease(v34).n128_u64[0];
        v75 = 0;
        v38 = objc_msgSend(v35, "initWithCFI:error:", v36, &v75, v37);

        v39 = v75;
        if (v38)
        {
          v40 = v75;
          v41 = -[NSObject headCFI](v38, "headCFI");
          v42 = -[NSObject tailCFI](v38, "tailCFI");
          v43 = v42;
          if (v41)
          {
            if (v42)
            {
              v44 = v41;
              v71 = v44;
              v45 = v43;
              v46 = objc_msgSend(v18, "positionWithCFI:", v44);
              v47 = v45;
              v48 = objc_msgSend(v18, "positionWithCFI:", v45);
              v49 = objc_msgSend((id)objc_opt_self(BCBookSection), "bookSectionWithStartPosition:endPosition:", v46, v48);
              objc_msgSend(v12, "setValidRange:", v49);

              v43 = v71;
            }
            else
            {

              v43 = v38;
            }
          }
          else
          {

          }
        }
        else
        {
          v50 = v75;
          v51 = _convertNSErrorToError(_:)(v39);

          v53 = swift_willThrow(v52);
          v43 = Logger.logObject.getter(v53);
          v54 = static os_log_type_t.default.getter(v43);
          if (os_log_type_enabled(v43, v54))
          {
            v55 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v55 = 0;
            _os_log_impl((void *)&_mh_execute_header, v43, v54, "no validRangeCFI for end-of-book", v55, 2u);
            swift_slowDealloc(v55, -1, -1);
          }
          swift_errorRelease(v51);
        }

        v3 = v72;
      }
      objc_msgSend(v7, "setLocation:", v12);

    }
    else
    {
      v24 = v3;
      v25 = v75;
      v26 = _convertNSErrorToError(_:)(v17);

      swift_willThrow(v27);
      v16 = Logger.logObject.getter(v28);
      v29 = static os_log_type_t.default.getter(v16);
      if (os_log_type_enabled(v16, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v29, "no endOfBookCFI for end-of-book", v30, 2u);
        swift_slowDealloc(v30, -1, -1);
      }
      swift_errorRelease(v26);
      v3 = v24;
    }

  }
  v56 = objc_msgSend((id)objc_opt_self(BCAugmentedExperienceRegistry), "sharedRegistry");
  v57 = objc_msgSend(v56, "presenterForExperienceType:", 0);
  objc_msgSend(v7, "setPresenter:", v57);
  objc_msgSend(v7, "setDelay:", 0.0);
  objc_msgSend(v7, "setKind:", 0);
  objc_msgSend(v7, "setEnabled:", 1);
  objc_msgSend(v7, "setSkipToast:", 0);
  v58 = objc_msgSend(a1, "endOfBookVersion");
  if (v58)
  {
    v59 = v58;
    objc_msgSend(v7, "setVersion:", v58);

  }
  v60 = PageProgressDirection.rawValue.getter(v3);
  v62 = v61;
  v63 = 1;
  v65 = PageProgressDirection.rawValue.getter(1);
  v66 = v64;
  if (v60 != v65 || (v67 = v62, v62 != v64))
  {
    v63 = _stringCompareWithSmolCheck(_:_:expecting:)(v60, v62, v65, v64, 0);
    v67 = v66;
  }
  swift_bridgeObjectRelease(v62);
  objc_msgSend(v7, "setPageProgressionIsRTL:", v63 & 1, swift_bridgeObjectRelease(v67).n128_f64[0]);

  v68 = swift_unknownObjectRelease(v57);
  (*(void (**)(char *, uint64_t, __n128))(v73 + 8))(v6, v74, v68);
  return v7;
}

uint64_t sub_10060765C()
{
  void *v0;
  id v1;
  double v2;
  char v3;
  id v4;
  uint64_t v5;
  char v7;
  _BYTE v8[40];
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for SidebarTextFieldListCell();
  v1 = objc_msgSendSuper2(&v9, "_bridgedConfigurationState");
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  v3 = *((_BYTE *)v0 + OBJC_IVAR____TtC5Books24SidebarTextFieldListCell_shouldBeginEditing);
  if (qword_1009CEA58 != -1)
    swift_once(&qword_1009CEA58, sub_100607858);
  v7 = v3;
  v4 = (id)qword_100A1EF28;
  AnyHashable.init<A>(_:)(&v7, &type metadata for Bool, &protocol witness table for Bool);
  v5 = type metadata accessor for UICellConfigurationState(0);
  return dispatch thunk of UIConfigurationState.subscript.setter(v8, v4, v5, &protocol witness table for UICellConfigurationState);
}

id sub_100607808()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SidebarTextFieldListCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for SidebarTextFieldListCell()
{
  return objc_opt_self(_TtC5Books24SidebarTextFieldListCell);
}

NSString sub_100607858()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_100A1EF28 = (uint64_t)result;
  return result;
}

void sub_10060788C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD v32[5];
  unint64_t v33;

  v1 = a1;
  v33 = (unint64_t)_swiftEmptyArrayStorage;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    v3 = swift_bridgeObjectRetain(a1);
    v4 = __CocoaSet.makeIterator()(v2, v3);
    v5 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v6 = sub_1002B2BF4();
    v7 = Set.Iterator.init(_cocoa:)(v32, v4, v5, v6);
    v1 = v32[0];
    v29 = v32[1];
    v8 = v32[2];
    v9 = v32[3];
    v10 = v32[4];
  }
  else
  {
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v29 = a1 + 56;
    v8 = ~v11;
    v12 = -v11;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v10 = v13 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v9 = 0;
  }
  v14 = (unint64_t)(v8 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v10)
    {
      v15 = (v10 - 1) & v10;
      v16 = __clz(__rbit64(v10)) | (v9 << 6);
      v17 = v9;
      goto LABEL_32;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v23 >= v14)
      goto LABEL_37;
    v24 = *(_QWORD *)(v29 + 8 * v23);
    v17 = v9 + 1;
    if (!v24)
    {
      v17 = v9 + 2;
      if (v9 + 2 >= v14)
        goto LABEL_37;
      v24 = *(_QWORD *)(v29 + 8 * v17);
      if (!v24)
      {
        v17 = v9 + 3;
        if (v9 + 3 >= v14)
          goto LABEL_37;
        v24 = *(_QWORD *)(v29 + 8 * v17);
        if (!v24)
        {
          v17 = v9 + 4;
          if (v9 + 4 >= v14)
            goto LABEL_37;
          v24 = *(_QWORD *)(v29 + 8 * v17);
          if (!v24)
          {
            v17 = v9 + 5;
            if (v9 + 5 >= v14)
              goto LABEL_37;
            v24 = *(_QWORD *)(v29 + 8 * v17);
            if (!v24)
            {
              v25 = v9 + 6;
              while (v14 != v25)
              {
                v24 = *(_QWORD *)(v29 + 8 * v25++);
                if (v24)
                {
                  v17 = v25 - 1;
                  goto LABEL_31;
                }
              }
LABEL_37:
              sub_100299C3C(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v15 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_32:
    v22 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v16);
    v21 = v22;
    if (!v22)
      goto LABEL_37;
    while (1)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
      v27 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v26 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v27 >= v26 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
      v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v21);
      v7 = (_QWORD *)specialized Array._endMutation()(v28);
      v9 = v17;
      v10 = v15;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v18 = __CocoaSet.Iterator.next()(v7);
      if (v18)
      {
        v19 = v18;
        v30 = v18;
        v20 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
        swift_unknownObjectRetain(v19);
        swift_dynamicCast(&v31, &v30, (char *)&type metadata for Swift.AnyObject + 8, v20, 7);
        v21 = v31;
        swift_unknownObjectRelease(v19);
        v17 = v9;
        v15 = v10;
        if (v21)
          continue;
      }
      goto LABEL_37;
    }
  }
  __break(1u);
}

void sub_100607B80(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  NSString v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char **v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  unint64_t v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  NSString v67;
  void *v68;
  id v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t ObjCClassFromMetadata;
  id v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  NSString v88;
  void *v89;
  id v90;
  id v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  id v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  double v102;
  void *v103;
  char v104;
  double v105;
  double v106;
  id v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  id v132;
  void **aBlock;
  uint64_t v134;
  void (*v135)(uint64_t, void *);
  void *v136;
  void *v137;
  _QWORD *v138;

  v129 = a1;
  v130 = a2;
  v3 = type metadata accessor for Logger(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Locale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v115 - v12;
  v14 = type metadata accessor for String.LocalizationValue(0);
  v124 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v122 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v123 = (char *)&v115 - v17;
  v131 = v2;
  v18 = sub_1006085E4();
  if (!v18)
  {
    v34 = static Logger.contextActionItem.getter(0);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.fault.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "RemoveActionItem cannot handle due to missing sourceView or provider", v37, 2u);
      swift_slowDealloc(v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return;
  }
  v19 = v18;
  v117 = v14;
  v118 = v13;
  v120 = v7;
  v132 = (id)objc_opt_self(NSString);
  v20 = objc_msgSend(v132, "bk_localizedWarningStringForProvider:", v19);
  if (!v20)
    goto LABEL_5;
  v21 = v20;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v24 = v23;

  aBlock = (void **)v22;
  v134 = v24;
  v25 = sub_1001F15BC();
  if ((Collection.isNotEmpty.getter(&type metadata for String, v25) & 1) == 0)
  {
    swift_bridgeObjectRelease(v24);
LABEL_5:
    v24 = 0;
  }
  v26 = &v131[OBJC_IVAR____TtC5Books16RemoveActionItem_data];
  v27 = *(_QWORD *)&v131[OBJC_IVAR____TtC5Books16RemoveActionItem_data + 24];
  v28 = *(_QWORD *)&v131[OBJC_IVAR____TtC5Books16RemoveActionItem_data + 32];
  sub_10003F198(&v131[OBJC_IVAR____TtC5Books16RemoveActionItem_data], v27);
  v29 = dispatch thunk of ContextActionDataProtocol.sourceView.getter(v27, v28);
  if (v29)
  {
    v30 = (void *)v29;
    v31 = type metadata accessor for SwiftUISourceView(0);
    v32 = objc_msgSend(v30, "isKindOfClass:", swift_getObjCClassFromMetadata(v31));

    v33 = v32;
  }
  else
  {
    v33 = 1;
  }
  v38 = *((_QWORD *)v26 + 3);
  v39 = *((_QWORD *)v26 + 4);
  sub_10003F198(v26, v38);
  v40 = (void *)dispatch thunk of ContextActionDataProtocol.sourceBarButtonItem.getter(v38, v39);

  if (v40)
    v41 = 0;
  else
    v41 = v33;
  if (v24)
  {
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v24);
  }
  else
  {
    v42 = 0;
  }
  v116 = v10;
  v119 = v8;
  v121 = v26;
  v43 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v42, v41);

  v44 = objc_msgSend(v19, "actionItems");
  v45 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v45);

  if ((unint64_t)v46 >> 62)
  {
    if (v46 < 0)
      v70 = v46;
    else
      v70 = v46 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v46);
    v47 = _CocoaArrayWrapper.endIndex.getter(v70);
    swift_bridgeObjectRelease(v46);
    v128 = v19;
    if (!v47)
      goto LABEL_40;
  }
  else
  {
    v47 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    v128 = v19;
    if (!v47)
      goto LABEL_40;
  }
  if (v47 >= 1)
  {
    v48 = 0;
    v49 = v46 & 0xC000000000000001;
    v50 = &selRef_ignoredCurrentBookNotification;
    v126 = v46;
    v127 = v43;
    v125 = v47;
    do
    {
      if (v49)
        v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v48, v46);
      else
        v52 = *(id *)(v46 + 8 * v48 + 32);
      v53 = v52;
      v54 = objc_msgSend(v52, v50[404]);
      if (v54 == (id)8
        || (v55 = (unint64_t)v54,
            (v56 = objc_msgSend(v132, "bk_localizedStringForDeleteAction:deleteActionProvider:", v54, v19)) == 0))
      {
        v51 = v53;
      }
      else
      {
        v57 = v56;
        static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
        v59 = v58;

        if (v55 <= 5 && ((1 << v55) & 0x23) != 0)
        {
          v60 = 0;
          v61 = 2;
        }
        else
        {
          v61 = 0;
          v60 = 1;
        }
        v62 = (_QWORD *)swift_allocObject(&unk_100918290, 48, 7);
        v63 = v129;
        v64 = v130;
        v62[2] = v129;
        v62[3] = v64;
        v65 = v131;
        v62[4] = v131;
        v62[5] = v55;
        sub_10002ACF0(v63, v64);
        v66 = v65;
        v67 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v59);
        v137 = sub_1006111BC;
        v138 = v62;
        aBlock = _NSConcreteStackBlock;
        v134 = 1107296256;
        v135 = sub_1001EDBF0;
        v136 = &unk_1009182A8;
        v68 = _Block_copy(&aBlock);
        swift_release(v138);
        v51 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v67, v61, v68);
        _Block_release(v68);

        if (v60)
        {
          v69 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksKeyColor");
          objc_msgSend(v51, "_setTitleTextColor:", v69);

        }
        v43 = v127;
        objc_msgSend(v127, "addAction:", v51);

        v19 = v128;
        v47 = v125;
        v46 = v126;
        v50 = &selRef_ignoredCurrentBookNotification;
      }
      ++v48;

    }
    while (v47 != v48);
LABEL_40:
    swift_bridgeObjectRelease(v46);
    v71 = v123;
    v72 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
    v73 = v118;
    static Locale.current.getter(v72);
    v74 = v124;
    v75 = v122;
    v76 = v117;
    (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v122, v71, v117);
    v77 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v77);
    v79 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v80 = v119;
    v81 = v116;
    v82 = v120;
    (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v116, v73, v120);
    String.init(localized:table:bundle:locale:comment:)(v75, 0, 0, v79, v81, "Cancel", 6, 2);
    v84 = v83;
    (*(void (**)(char *, uint64_t))(v80 + 8))(v73, v82);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v71, v76);
    v85 = swift_allocObject(&unk_100918240, 32, 7);
    v86 = v129;
    v87 = v130;
    *(_QWORD *)(v85 + 16) = v129;
    *(_QWORD *)(v85 + 24) = v87;
    sub_10002ACF0(v86, v87);
    v88 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v84);
    v137 = sub_10061115C;
    v138 = (_QWORD *)v85;
    aBlock = _NSConcreteStackBlock;
    v134 = 1107296256;
    v135 = sub_1001EDBF0;
    v136 = &unk_100918258;
    v89 = _Block_copy(&aBlock);
    swift_release(v138);
    v90 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v88, 1, v89);
    _Block_release(v89);

    v91 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksKeyColor");
    objc_msgSend(v90, "_setTitleTextColor:", v91);

    objc_msgSend(v43, "addAction:", v90);
    v92 = v121;
    v93 = *((_QWORD *)v121 + 3);
    v94 = *((_QWORD *)v121 + 4);
    sub_10003F198(v121, v93);
    v95 = dispatch thunk of ContextActionDataProtocol.sourceView.getter(v93, v94);
    if (v95)
    {
      v96 = (void *)v95;
      v97 = objc_msgSend(v43, "presentationController");
      if (v97)
      {
        v98 = v97;
        objc_msgSend(v97, "setSourceView:", v96);

      }
      v99 = *((_QWORD *)v92 + 3);
      v100 = *((_QWORD *)v92 + 4);
      sub_10003F198(v92, v99);
      *(double *)&v101 = COERCE_DOUBLE(dispatch thunk of ContextActionDataProtocol.sourcePoint.getter(v99, v100));
      v103 = v128;
      if ((v104 & 1) != 0)
        goto LABEL_50;
      v105 = *(double *)&v101;
      v106 = v102;
      v107 = objc_msgSend(v43, "presentationController");
      if (!v107)
        goto LABEL_50;
      v108 = v107;
      objc_msgSend(v107, "setSourceRect:", v105, v106, 1.0, 1.0);
    }
    else
    {
      v109 = *((_QWORD *)v92 + 3);
      v110 = *((_QWORD *)v92 + 4);
      sub_10003F198(v92, v109);
      v111 = dispatch thunk of ContextActionDataProtocol.sourceBarButtonItem.getter(v109, v110);
      v103 = v128;
      if (!v111)
      {
LABEL_51:
        v113 = *(_QWORD *)&v131[OBJC_IVAR____TtC5Books16RemoveActionItem_context + 24];
        v114 = *(_QWORD *)&v131[OBJC_IVAR____TtC5Books16RemoveActionItem_context + 32];
        sub_10003F198(&v131[OBJC_IVAR____TtC5Books16RemoveActionItem_context], v113);
        dispatch thunk of ContextMenuPresentationContextProtocol.present(_:animated:)(v43, 1, v113, v114);

        return;
      }
      v96 = (void *)v111;
      v112 = objc_msgSend(v43, "presentationController");
      if (!v112)
      {
LABEL_50:

        goto LABEL_51;
      }
      v108 = v112;
      objc_msgSend(v112, "setBarButtonItem:", v96);
    }

    goto LABEL_50;
  }
  __break(1u);
}

double sub_100608518@<D0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  __int128 v9[2];
  char v10;
  __int128 v11[2];

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Books16RemoveActionItem_data);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books16RemoveActionItem_data + 24);
  v5 = v3[4];
  sub_10003F198(v3, v4);
  ContextActionDataProtocol.selectionMode.getter(v9, v4, v5);
  if ((v10 & 1) != 0)
  {
    sub_1001EB7C0((uint64_t)v9);
  }
  else
  {
    sub_100022840(v9, (uint64_t)v11);
    sub_100022840(v11, (uint64_t)v9);
    v6 = sub_10004CFD4(&qword_1009DD4B0);
    v7 = sub_10004CFD4((uint64_t *)&unk_1009DFD10);
    if ((swift_dynamicCast(a1, v9, v6, v7, 6) & 1) != 0)
      return result;
  }
  result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

id sub_1006085E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSSet v19;
  NSString v20;
  id v21;
  id v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  void *v27;

  v1 = v0;
  v27 = &_swiftEmptySetSingleton;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books16RemoveActionItem_data + 24);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books16RemoveActionItem_data + 32);
  sub_10003F198((_QWORD *)(v0 + OBJC_IVAR____TtC5Books16RemoveActionItem_data), v2);
  v4 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v2, v3);
  v5 = v4;
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    v7 = (void *)objc_opt_self(BKLibraryManager);
    v8 = v5 + 32;
    while (1)
    {
      sub_10002E418(v8, (uint64_t)v24);
      v9 = objc_msgSend(v7, "defaultManager");
      v10 = v25;
      v11 = v26;
      sub_10003F198(v24, v25);
      dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v10, v11);
      v13 = v12;
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend(v9, "libraryAssetOnMainQueueWithAssetID:", v14);

      swift_bridgeObjectRelease(v13);
      if (!v15)
        break;
      sub_10060BAE0((Swift::Int *)&v23, v15);

      _s5Books15CurrentPageViewVwxx_0(v24);
      v8 += 40;
      if (!--v6)
      {
        swift_bridgeObjectRelease(v5);
        v16 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v27);
    _s5Books15CurrentPageViewVwxx_0(v24);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v4);
    v16 = &_swiftEmptySetSingleton;
LABEL_7:
    sub_100608818(v1);
    v18 = v17;
    sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    sub_1002B2BF4();
    v19.super.isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v16);
    if (v18)
    {
      v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v18);
    }
    else
    {
      v20 = 0;
    }
    v21 = objc_msgSend(objc_allocWithZone((Class)BKDeleteActionItemsProvider), "initWithBooks:currentCollectionId:", v19.super.isa, v20);

  }
  return v21;
}

unint64_t sub_100608818(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;

  v2 = type metadata accessor for ContextActionSource(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - v7;
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v21 - v10);
  v12 = (_QWORD *)(a1 + OBJC_IVAR____TtC5Books16RemoveActionItem_data);
  v13 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books16RemoveActionItem_data + 24);
  v14 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5Books16RemoveActionItem_data + 32);
  sub_10003F198((_QWORD *)(a1 + OBJC_IVAR____TtC5Books16RemoveActionItem_data), v13);
  dispatch thunk of ContextActionDataProtocol.source.getter(v13, v14);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v3 + 88))(v11, v2) == enum case for ContextActionSource.library(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v11, v2);
    v15 = *v11;
    _s5Books15CurrentPageViewVwxx_0(v11 + 2);
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v16((char *)v11, v2);
    v17 = v12[3];
    v18 = v12[4];
    sub_10003F198(v12, v17);
    dispatch thunk of ContextActionDataProtocol.source.getter(v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ContextActionSource.wantToReadEntry(_:), v2);
    v19 = static ContextActionSource.== infix(_:_:)(v8, v5);
    v16(v5, v2);
    v16(v8, v2);
    if ((v19 & 1) != 0)
      return 0xD00000000000001ALL;
    else
      return 0;
  }
  return v15;
}

uint64_t sub_1006089E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books16RemoveActionItem_data + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books16RemoveActionItem_data + 32);
  sub_10003F198((_QWORD *)(v0 + OBJC_IVAR____TtC5Books16RemoveActionItem_data), v1);
  if ((dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(v1, v2) & 1) != 0)
    return 0;
  v3 = (uint64_t)sub_1006085E4();
  if (!v3)
    return v3;
  sub_100608518(&v23);
  v4 = v24;
  if (v24)
  {
    v5 = v25;
    sub_10003F198(&v23, v24);
    v6 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v4, v5);
    _s5Books15CurrentPageViewVwxx_0(&v23);
    if ((static ContextActionAssetType.== infix(_:_:)(v6, 4) & 1) != 0)
      goto LABEL_9;
  }
  else
  {
    sub_1001EB7F4((uint64_t)&v23);
  }
  sub_100608518(&v23);
  v7 = v24;
  if (v24)
  {
    v8 = v25;
    sub_10003F198(&v23, v24);
    v9 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v7, v8);
    _s5Books15CurrentPageViewVwxx_0(&v23);
    if ((static ContextActionAssetType.== infix(_:_:)(v9, 5) & 1) != 0)
    {
LABEL_9:

      return 0;
    }
  }
  else
  {
    sub_1001EB7F4((uint64_t)&v23);
  }
  v11 = objc_msgSend((id)v3, "actionItems");
  v12 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
    if (v14)
      goto LABEL_15;
LABEL_22:

    swift_bridgeObjectRelease(v13);
    v3 = 0;
LABEL_25:
    swift_bridgeObjectRelease(v13);
    return v3;
  }
LABEL_27:
  if (v13 < 0)
    v20 = v13;
  else
    v20 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v13, 2);
  v14 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_bridgeObjectRelease(v13);
  if (!v14)
    goto LABEL_22;
LABEL_15:
  v15 = 4;
  while (1)
  {
    if ((v13 & 0xC000000000000001) != 0)
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v13);
    else
      v16 = *(id *)(v13 + 8 * v15);
    v17 = v16;
    v18 = v15 - 3;
    if (__OFADD__(v15 - 4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    v19 = objc_msgSend(v16, "integerValue");
    if (v19 != (id)8)
      break;

    ++v15;
    if (v18 == v14)
      goto LABEL_22;
  }
  if ((unint64_t)v19 < 8)
  {
    swift_bridgeObjectRelease(v13);

    v3 = 1;
    goto LABEL_25;
  }
  v21 = v19;
  type metadata accessor for DeleteActionItem(0);
  *(_QWORD *)&v23 = v21;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v22, &v23, v22, &type metadata for Int);
  __break(1u);
  return result;
}

double sub_100608C78(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(unsigned __int8 *);
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  double result;
  uint64_t v21;

  v9 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v12 = swift_allocObject(&unk_100918308, 32, 7);
    *(_QWORD *)(v12 + 16) = a2;
    *(_QWORD *)(v12 + 24) = a3;
    v13 = sub_10030C01C;
  }
  else
  {
    v13 = 0;
    v12 = 0;
  }
  v14 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 1, 1, v14);
  type metadata accessor for MainActor(0);
  sub_10002ACF0(a2, a3);
  v15 = a4;
  v16 = sub_10002ACF0((uint64_t)v13, v12);
  v17 = static MainActor.shared.getter(v16);
  v18 = (_QWORD *)swift_allocObject(&unk_1009182E0, 64, 7);
  v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v15;
  v18[5] = a5;
  v18[6] = v13;
  v18[7] = v12;
  v19 = sub_10030C02C((uint64_t)v11, (uint64_t)&unk_1009F11A8, (uint64_t)v18);
  sub_10002AD00((uint64_t)v13, v12);
  *(_QWORD *)&result = swift_release(v19).n128_u64[0];
  return result;
}

uint64_t sub_100608DD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  _QWORD *v10;

  v7[2] = a6;
  v7[3] = a7;
  v9 = type metadata accessor for MainActor(0);
  v7[4] = v9;
  v7[5] = static MainActor.shared.getter(v9);
  v10 = (_QWORD *)swift_task_alloc(dword_1009F11B4);
  v7[6] = v10;
  *v10 = v7;
  v10[1] = sub_100608E50;
  return sub_100608F28(a5);
}

uint64_t sub_100608E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 48));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100608EC0, v2, v3);
}

uint64_t sub_100608EC0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  void (*v3)(char *, __n128);
  uint64_t v4;
  __n128 v5;
  char v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_release(*(_QWORD *)(v0 + 40));
  if (v1)
  {
    v3 = *(void (**)(char *, __n128))(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v7 = 1;
    v5 = swift_retain(v4);
    v3(&v7, v5);
    sub_10002AD00((uint64_t)v3, v4);
  }
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_100608F28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[28] = a1;
  v2[29] = v1;
  v3 = type metadata accessor for Logger(0);
  v2[30] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[31] = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[32] = swift_task_alloc(v5);
  v2[33] = swift_task_alloc(v5);
  v2[34] = swift_task_alloc(v5);
  v6 = type metadata accessor for ContextActionSource(0);
  v2[35] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[36] = v7;
  v2[37] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v2[38] = v8;
  v2[39] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v2[40] = v9;
  v2[41] = v10;
  return swift_task_switch(sub_100609004, v9, v10);
}

uint64_t sub_100609004()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)();
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t (*v97)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = sub_1006085E4();
  *(_QWORD *)(v0 + 336) = v1;
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 224);
    v4 = objc_msgSend(v1, "booksToDelete");
    v5 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v6 = sub_1002B2BF4();
    v7 = static Set._unconditionallyBridgeFromObjectiveC(_:)(v4, v5, v6);

    sub_10060788C(v7);
    v9 = v8;
    *(_QWORD *)(v0 + 344) = v8;
    swift_bridgeObjectRelease(v7);
    switch(v3)
    {
      case 0:
        v11 = *(_QWORD *)(v0 + 232);
        v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC5Books16RemoveActionItem_tracker);
        v13 = v11 + OBJC_IVAR____TtC5Books16RemoveActionItem_context;
        v14 = (_QWORD *)swift_task_alloc(dword_1009F11BC);
        *(_QWORD *)(v0 + 352) = v14;
        *v14 = v0;
        v14[1] = sub_1006098E8;
        v15 = 0;
        v16 = 7;
        return sub_10060A42C(v15, v16, (uint64_t)v2, v9, v12, v13);
      case 1:
        *(_QWORD *)(v0 + 368) = *(_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC5Books16RemoveActionItem_tracker);
        *(_QWORD *)(v0 + 376) = static MainActor.shared.getter(v10);
        v24 = (_QWORD *)swift_task_alloc(dword_1009EAB1C);
        *(_QWORD *)(v0 + 384) = v24;
        *v24 = v0;
        v24[1] = sub_100609A9C;
        return sub_100542FA4(v9);
      case 2:
        *(_QWORD *)(v0 + 400) = static MainActor.shared.getter(v10);
        v25 = (_QWORD *)swift_task_alloc(dword_1009EAB44);
        *(_QWORD *)(v0 + 408) = v25;
        *v25 = v0;
        v25[1] = sub_100609BC0;
        return sub_100543188(v9);
      case 3:
        *(_QWORD *)(v0 + 416) = static MainActor.shared.getter(v10);
        v26 = (_QWORD *)swift_task_alloc(dword_1009EAB24);
        *(_QWORD *)(v0 + 424) = v26;
        *v26 = v0;
        v26[1] = sub_100609CE8;
        return sub_1005465B0(v9);
      case 4:
        v27 = *(_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC5Books16RemoveActionItem_tracker);
        *(_QWORD *)(v0 + 432) = static MainActor.shared.getter(v10);
        v28 = (_QWORD *)swift_task_alloc(dword_1009EAB04);
        *(_QWORD *)(v0 + 440) = v28;
        *v28 = v0;
        v28[1] = sub_100609D9C;
        return sub_1005469A8(v9, v27);
      case 5:
        v29 = *(_QWORD *)(v0 + 232);
        v12 = *(_QWORD *)(v29 + OBJC_IVAR____TtC5Books16RemoveActionItem_tracker);
        v13 = v29 + OBJC_IVAR____TtC5Books16RemoveActionItem_context;
        v30 = (_QWORD *)swift_task_alloc(dword_1009F11BC);
        *(_QWORD *)(v0 + 360) = v30;
        *v30 = v0;
        v30[1] = sub_1006099C0;
        v15 = 5;
        v16 = 3;
        return sub_10060A42C(v15, v16, (uint64_t)v2, v9, v12, v13);
      case 6:
        v32 = *(_QWORD *)(v0 + 288);
        v31 = *(_QWORD *)(v0 + 296);
        v33 = *(_QWORD *)(v0 + 280);
        v34 = (_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC5Books16RemoveActionItem_data);
        v35 = v34[3];
        v36 = v34[4];
        sub_10003F198(v34, v35);
        dispatch thunk of ContextActionDataProtocol.source.getter(v35, v36);
        v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 88))(v31, v33);
        if (v37 != enum case for ContextActionSource.library(_:))
        {
          v53 = v37;
          v54 = enum case for ContextActionSource.wantToReadEntry(_:);
          swift_bridgeObjectRelease(v9);
          if (v53 == v54)
          {
            sub_100608518((_OWORD *)(v0 + 64));
            if (*(_QWORD *)(v0 + 88))
            {
              sub_1001EB834((__int128 *)(v0 + 64), (_OWORD *)(v0 + 16));
              v55 = *(_QWORD *)(v0 + 40);
              v56 = *(_QWORD *)(v0 + 48);
              sub_10003F198((_QWORD *)(v0 + 16), v55);
              v57 = dispatch thunk of ContextAssetInfoProtocol.isInWantToRead.getter(v55, v56);
              if (v57 != 2 && (v57 & 1) != 0)
              {
                v58 = *(_QWORD *)(v0 + 40);
                v59 = *(_QWORD *)(v0 + 48);
                sub_10003F198((_QWORD *)(v0 + 16), v58);
                v60 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v58, v59);
                v62 = v61;
                swift_bridgeObjectRelease(v61);
                v63 = HIBYTE(v62) & 0xF;
                if ((v62 & 0x2000000000000000) == 0)
                  v63 = v60 & 0xFFFFFFFFFFFFLL;
                if (v63)
                {
                  v64 = *(_QWORD *)(v0 + 232);
                  v65 = sub_10003F198((_QWORD *)(v64 + OBJC_IVAR____TtC5Books16RemoveActionItem_libraryOperationProvider), *(_QWORD *)(v64 + OBJC_IVAR____TtC5Books16RemoveActionItem_libraryOperationProvider + 24));
                  v66 = *(_QWORD *)(v64 + OBJC_IVAR____TtC5Books16RemoveActionItem_tracker);
                  v67 = v64 + OBJC_IVAR____TtC5Books16RemoveActionItem_context;
                  v68 = v65[1];
                  v97 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1009EAAF8
                                                                                            + dword_1009EAAF8);
                  v69 = (_QWORD *)swift_task_alloc(unk_1009EAAFC);
                  *(_QWORD *)(v0 + 496) = v69;
                  *v69 = v0;
                  v69[1] = sub_100609FD0;
                  return v97((uint64_t)v34, v0 + 16, v66, v67, v68);
                }
              }
              swift_release(*(_QWORD *)(v0 + 312));
              v89 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
            }
            else
            {
              swift_release(*(_QWORD *)(v0 + 312));
              v89 = sub_1001EB7F4(v0 + 64);
            }
            v90 = static Logger.contextActionItem.getter(v89);
            v91 = Logger.logObject.getter(v90);
            v92 = static os_log_type_t.fault.getter(v91);
            if (os_log_type_enabled(v91, v92))
            {
              v93 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v93 = 0;
              _os_log_impl((void *)&_mh_execute_header, v91, v92, "Fatal: Unable to remove from current selection due to missing assetInfo", v93, 2u);
              swift_slowDealloc(v93, -1, -1);
            }
            v94 = *(_QWORD *)(v0 + 264);
            v95 = *(_QWORD *)(v0 + 240);
            v96 = *(_QWORD *)(v0 + 248);

            (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v94, v95);
          }
          else
          {
            swift_release(*(_QWORD *)(v0 + 312));
            v79 = static Logger.contextActionItem.getter(v78);
            v80 = Logger.logObject.getter(v79);
            v81 = static os_log_type_t.fault.getter(v80);
            if (os_log_type_enabled(v80, v81))
            {
              v82 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v82 = 0;
              _os_log_impl((void *)&_mh_execute_header, v80, v81, "Fatal: Action doesn't have sufficient information to handle action.", v82, 2u);
              swift_slowDealloc(v82, -1, -1);
            }
            v84 = *(_QWORD *)(v0 + 288);
            v83 = *(_QWORD *)(v0 + 296);
            v85 = *(_QWORD *)(v0 + 280);
            v87 = *(_QWORD *)(v0 + 248);
            v86 = *(_QWORD *)(v0 + 256);
            v88 = *(_QWORD *)(v0 + 240);

            (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v86, v88);
            (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
          }
          goto LABEL_5;
        }
        v38 = *(_QWORD *)(v0 + 296);
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 288) + 96))(v38, *(_QWORD *)(v0 + 280));
        swift_bridgeObjectRelease(*(_QWORD *)(v38 + 8));
        sub_10004CFC4((_OWORD *)(v38 + 16), (_OWORD *)(v0 + 112));
        sub_10004CD0C(v0 + 112, v0 + 144);
        v39 = sub_100009E04(0, (unint64_t *)&qword_1009D7640, BKCollection_ptr);
        if ((swift_dynamicCast(v0 + 216, v0 + 144, (char *)&type metadata for Any + 8, v39, 6) & 1) == 0)
        {
          swift_release(*(_QWORD *)(v0 + 312));
          swift_bridgeObjectRelease(v9);
          v71 = static Logger.contextActionItem.getter(v70);
          v72 = Logger.logObject.getter(v71);
          v73 = static os_log_type_t.fault.getter(v72);
          if (os_log_type_enabled(v72, v73))
          {
            v74 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v74 = 0;
            _os_log_impl((void *)&_mh_execute_header, v72, v73, "Fatal: Unable to remove from current selection due to missing BKCollection", v74, 2u);
            swift_slowDealloc(v74, -1, -1);
          }
          v75 = *(_QWORD *)(v0 + 272);
          v76 = *(_QWORD *)(v0 + 240);
          v77 = *(_QWORD *)(v0 + 248);

          (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v75, v76);
          _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
          goto LABEL_5;
        }
        v40 = *(_QWORD *)(v0 + 304);
        v41 = *(_QWORD *)(v0 + 232);
        v42 = *(void **)(v0 + 216);
        *(_QWORD *)(v0 + 448) = v42;
        *(_QWORD *)(v0 + 456) = *(_QWORD *)(v41 + OBJC_IVAR____TtC5Books16RemoveActionItem_tracker);
        *(_QWORD *)(v0 + 464) = static MainActor.shared.getter(v42);
        v43 = dispatch thunk of Actor.unownedExecutor.getter(v40, &protocol witness table for MainActor);
        v45 = v44;
        *(_QWORD *)(v0 + 472) = v43;
        *(_QWORD *)(v0 + 480) = v44;
        v46 = sub_100609E50;
        v47 = v43;
LABEL_17:
        result = swift_task_switch(v46, v47, v45);
        break;
      case 7:
        v48 = *(_QWORD *)(v0 + 304);
        *(_QWORD *)(v0 + 504) = *(_QWORD *)(*(_QWORD *)(v0 + 232) + OBJC_IVAR____TtC5Books16RemoveActionItem_tracker);
        *(_QWORD *)(v0 + 512) = static MainActor.shared.getter(v10);
        v49 = dispatch thunk of Actor.unownedExecutor.getter(v48, &protocol witness table for MainActor);
        v51 = v50;
        v46 = sub_10060A09C;
        v47 = v49;
        v45 = v51;
        goto LABEL_17;
      case 8:
        v52 = *(_QWORD *)(v0 + 312);

        swift_release(v52);
        swift_bridgeObjectRelease(v9);
        goto LABEL_5;
      default:
        v22 = *(_QWORD *)(v0 + 224);
        type metadata accessor for DeleteActionItem(0);
        *(_QWORD *)(v0 + 208) = v22;
        return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v23, v0 + 208, v23, &type metadata for Int);
    }
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 312));
LABEL_5:
    v17 = *(_QWORD *)(v0 + 264);
    v18 = *(_QWORD *)(v0 + 272);
    v19 = *(_QWORD *)(v0 + 256);
    swift_task_dealloc(*(_QWORD *)(v0 + 296));
    swift_task_dealloc(v18);
    swift_task_dealloc(v17);
    v20 = swift_task_dealloc(v19);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v20);
  }
  return result;
}

uint64_t sub_1006098E8(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_BYTE *)(v2 + 184) = a1;
  *(_QWORD *)(v2 + 176) = v1;
  v3 = *(_QWORD *)(v2 + 344);
  swift_task_dealloc(*(_QWORD *)(v2 + 352));
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_100609944, *(_QWORD *)(v2 + 320), *(_QWORD *)(v2 + 328));
}

uint64_t sub_100609944()
{
  uint64_t v0;
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *(_BYTE *)(v0 + 184);
  swift_release(*(_QWORD *)(v0 + 312));
  v2 = *(void **)(v0 + 336);
  if ((v1 & 1) == 0)
    sub_10060AD94(*(id *)(v0 + 224), *(void **)(v0 + 336));

  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  v6 = swift_task_dealloc(v5);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_1006099C0(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  *(_BYTE *)(v2 + 200) = a1;
  *(_QWORD *)(v2 + 192) = v1;
  v3 = *(_QWORD *)(v2 + 344);
  swift_task_dealloc(*(_QWORD *)(v2 + 360));
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_100609A20, *(_QWORD *)(v2 + 320), *(_QWORD *)(v2 + 328));
}

uint64_t sub_100609A20()
{
  uint64_t v0;
  char v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *(_BYTE *)(v0 + 200);
  swift_release(*(_QWORD *)(v0 + 312));
  v2 = *(void **)(v0 + 336);
  if ((v1 & 1) == 0)
    sub_10060AD94(*(id *)(v0 + 224), *(void **)(v0 + 336));

  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  v6 = swift_task_dealloc(v5);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_100609A9C()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t **v2;
  uint64_t *v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc((*v0)[48]);
  v2 = (uint64_t **)swift_task_alloc(dword_1009EAB3C);
  v1[49] = (uint64_t)v2;
  *v2 = v4;
  v2[1] = (uint64_t *)sub_100609B08;
  return sub_100543914(v1[43], v1[46]);
}

uint64_t sub_100609B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 392));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100609B7C, v2, v3);
}

uint64_t sub_100609B7C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[43];
  swift_release(v0[47]);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1006113B4, v0[40], v0[41]);
}

uint64_t sub_100609BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 408));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100609C30, v2, v3);
}

uint64_t sub_100609C30()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[43];
  swift_release(v0[50]);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_100609C74, v0[40], v0[41]);
}

uint64_t sub_100609C74()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  swift_release(*(_QWORD *)(v0 + 312));
  v1 = *(void **)(v0 + 336);
  sub_10060AD94(*(id *)(v0 + 224), v1);

  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  v5 = swift_task_dealloc(v4);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

uint64_t sub_100609CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 424));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100609D58, v2, v3);
}

uint64_t sub_100609D58()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[43];
  swift_release(v0[52]);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1006113B4, v0[40], v0[41]);
}

uint64_t sub_100609D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 304);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 440));
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100609E0C, v2, v3);
}

uint64_t sub_100609E0C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[43];
  swift_release(v0[54]);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1006113B4, v0[40], v0[41]);
}

uint64_t sub_100609E50()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  _QWORD *v3;

  v1 = dword_1009EAB34;
  v2 = *(id *)(v0 + 448);
  v3 = (_QWORD *)swift_task_alloc(v1);
  *(_QWORD *)(v0 + 488) = v3;
  *v3 = v0;
  v3[1] = sub_100609EAC;
  return sub_100544F04(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456));
}

uint64_t sub_100609EAC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 488));
  return swift_task_switch(sub_100609EF8, *(_QWORD *)(v1 + 472), *(_QWORD *)(v1 + 480));
}

uint64_t sub_100609EF8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v1 = (void *)v0[56];
  v2 = v0[43];
  swift_release(v0[58]);

  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_100609F48, v0[40], v0[41]);
}

uint64_t sub_100609F48()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;

  v1 = *(void **)(v0 + 448);
  swift_release(*(_QWORD *)(v0 + 312));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
  v2 = *(void **)(v0 + 336);
  sub_10060AD94(*(id *)(v0 + 224), v2);

  v3 = *(_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v4);
  swift_task_dealloc(v3);
  v6 = swift_task_dealloc(v5);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_100609FD0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 496));
  return swift_task_switch(sub_10060A01C, *(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 328));
}

uint64_t sub_10060A01C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;

  swift_release(*(_QWORD *)(v0 + 312));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v1 = *(void **)(v0 + 336);
  sub_10060AD94(*(id *)(v0 + 224), v1);

  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  v4 = *(_QWORD *)(v0 + 256);
  swift_task_dealloc(*(_QWORD *)(v0 + 296));
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  v5 = swift_task_dealloc(v4);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v5);
}

uint64_t sub_10060A09C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;

  v1 = v0[63];
  v2 = v0[43];
  swift_release(v0[64]);
  sub_100545B7C(v2, v1);
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_1006113B4, v0[40], v0[41]);
}

uint64_t sub_10060A1A8()
{
  return type metadata accessor for RemoveActionItem(0);
}

uint64_t sub_10060A1B0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC5Books16RemoveActionItem_type;
  v4 = type metadata accessor for ContextActionType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_10060A1F8()
{
  return sub_1006089E0() & 1;
}

uint64_t sub_10060A21C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + 16) = *v0;
  v2 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v1 + 24) = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10060A28C, v3, v4);
}

uint64_t sub_10060A28C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  sub_100607B80(0, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10060A2C8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_10002E418(*v1 + OBJC_IVAR____TtC5Books16RemoveActionItem_context, a1);
}

uint64_t sub_10060A2F0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_10002E418(*v1 + OBJC_IVAR____TtC5Books16RemoveActionItem_data, a1);
}

void *sub_10060A318()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC5Books16RemoveActionItem_tracker);
  v2 = v1;
  return v1;
}

uint64_t sub_10060A348@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_10002E418(*v1 + OBJC_IVAR____TtC5Books16RemoveActionItem_figaroProvider, a1);
}

uint64_t sub_10060A370@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, void *a3@<X2>, _QWORD *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t result;

  v10 = a1[3];
  v11 = a1[4];
  v12 = sub_100063750((uint64_t)a1, v10);
  v14 = a2[3];
  v13 = a2[4];
  v15 = sub_100063750((uint64_t)a2, v14);
  v16 = sub_100610FDC(v12, v15, a3, a4, v5, v10, v14, v11, v13);

  _s5Books15CurrentPageViewVwxx_0(a2);
  result = _s5Books15CurrentPageViewVwxx_0(a1);
  *a5 = v16;
  return result;
}

uint64_t sub_10060A42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7[13] = a6;
  v7[14] = v6;
  v7[11] = a4;
  v7[12] = a5;
  v7[9] = a2;
  v7[10] = a3;
  v7[8] = a1;
  v8 = type metadata accessor for Locale(0);
  v7[15] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[16] = v9;
  v10 = (*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[17] = swift_task_alloc(v10);
  v7[18] = swift_task_alloc(v10);
  v11 = type metadata accessor for String.LocalizationValue(0);
  v7[19] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v7[20] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v7[21] = swift_task_alloc(v13);
  v7[22] = swift_task_alloc(v13);
  v14 = type metadata accessor for MainActor(0);
  v7[23] = static MainActor.shared.getter(v14);
  v15 = dispatch thunk of Actor.unownedExecutor.getter(v14, &protocol witness table for MainActor);
  v7[24] = v15;
  v7[25] = v16;
  return swift_task_switch(sub_10060A514, v15, v16);
}

uint64_t sub_10060A514()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  NSString v31;
  NSString v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  id v45;
  id v46;
  id v47;
  NSString v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  void *v67;
  _QWORD *v68;
  void (*v69)(uint64_t, uint64_t);
  id v70;
  id v71;
  id v72;
  uint64_t ObjCClassFromMetadata;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  void (*v75)(uint64_t, uint64_t, uint64_t);
  char *v76;

  if (objc_msgSend((id)v0[10], "canDeleteFromAllDevices")
    && (objc_msgSend((id)v0[10], "ubiquityCount") || objc_msgSend((id)v0[10], "iTunesUCount")))
  {
    v1 = v0[11];
    swift_release(v0[23]);
    if (v1 >> 62)
    {
      v57 = v0[11];
      if (v57 < 0)
        v58 = v0[11];
      else
        v58 = v1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v0[11]);
      v2 = _CocoaArrayWrapper.endIndex.getter(v58);
      swift_bridgeObjectRelease(v57);
    }
    else
    {
      v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v3 = v0[21];
    v4 = v0[22];
    v5 = v0[19];
    v6 = v0[20];
    v8 = v0[17];
    v7 = v0[18];
    v9 = v0[15];
    v10 = v0[16];
    if (v2 < 2)
    {
      v17 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000066, 0x80000001007D8BE0);
      static Locale.current.getter(v17);
      v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v75(v3, v4, v5);
      v18 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v18);
      v19 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v74(v8, v7, v9);
      String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v19, v8, "Are you sure you want to delete this book? It will be removed from iCloud and all your iCloud devices.", 102, 2);
    }
    else
    {
      v11 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000006ALL, 0x80000001007D8C70);
      static Locale.current.getter(v11);
      v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v75(v3, v4, v5);
      v12 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v12);
      v13 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v74(v8, v7, v9);
      String.init(localized:table:bundle:locale:comment:)(v3, 0, 0, v13, v8, "Are you sure you want to delete these books? They will be removed from iCloud and all your iCloud devices.", 106, 2);
    }
    v71 = v14;
    v69 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v69(v7, v9);
    v21 = v0[21];
    v20 = v0[22];
    v22 = v0[19];
    v23 = v0[17];
    v24 = v0[18];
    v25 = v0[15];
    v67 = (void *)v0[14];
    v68 = (_QWORD *)v0[13];
    v65 = (void *)v0[12];
    v66 = (void *)v0[10];
    v62 = v0[9];
    v63 = v0[11];
    v64 = v0[8];
    v26 = *(void (**)(uint64_t, uint64_t))(v0[20] + 8);
    v26(v20, v22);
    v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000013, 0x80000001007D8C50);
    static Locale.current.getter(v27);
    v75(v21, v20, v22);
    type metadata accessor for BundleFinder();
    v70 = (id)objc_opt_self(NSBundle);
    v28 = objc_msgSend(v70, "bundleForClass:", ObjCClassFromMetadata);
    v59 = v23;
    v74(v23, v24, v25);
    String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v28, v23, "Delete from iCloud?", 19, 2);
    v30 = v29;
    v69(v24, v25);
    v26(v20, v22);
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v30);
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v71);
    v72 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v31, v32, 1);

    v33 = String.LocalizationValue.init(stringLiteral:)(0x6C65636E6143, 0xE600000000000000);
    static Locale.current.getter(v33);
    v75(v21, v20, v22);
    v34 = objc_msgSend(v70, "bundleForClass:", ObjCClassFromMetadata);
    v60 = v25;
    v74(v59, v24, v25);
    String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v34, v59, "Cancel", 6, 2);
    v36 = v35;
    v69(v24, v25);
    v26(v20, v22);
    v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v36);
    v61 = (id)objc_opt_self(UIAlertAction);
    v38 = objc_msgSend(v61, "actionWithTitle:style:handler:", v37, 1, 0);

    v39 = objc_msgSend((id)objc_opt_self(UIColor), "bc_booksKeyColor");
    objc_msgSend(v38, "_setTitleTextColor:", v39);

    objc_msgSend(v72, "addAction:", v38);
    v40 = String.LocalizationValue.init(stringLiteral:)(0x6574656C6544, 0xE600000000000000);
    static Locale.current.getter(v40);
    v75(v21, v20, v22);
    v41 = objc_msgSend(v70, "bundleForClass:", ObjCClassFromMetadata);
    v74(v59, v24, v25);
    String.init(localized:table:bundle:locale:comment:)(v21, 0, 0, v41, v59, "Delete", 6, 2);
    v43 = v42;
    v69(v24, v60);
    v26(v20, v22);
    v44 = (_QWORD *)swift_allocObject(&unk_100918330, 64, 7);
    v44[2] = v63;
    v44[3] = v62;
    v44[4] = v65;
    v44[5] = v67;
    v44[6] = v64;
    v44[7] = v66;
    v45 = v65;
    v46 = v67;
    v47 = v66;
    swift_bridgeObjectRetain(v63);
    v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v43);
    v0[6] = sub_1006112F0;
    v0[7] = v44;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1001EDBF0;
    v0[5] = &unk_100918348;
    v49 = _Block_copy(v0 + 2);
    v50 = objc_msgSend(v61, "actionWithTitle:style:handler:", v48, 2, v49, swift_release(v0[7]).n128_f64[0]);
    _Block_release(v49);

    objc_msgSend(v72, "addAction:", v50);
    v51 = v68[3];
    v52 = v68[4];
    sub_10003F198(v68, v51);
    dispatch thunk of ContextMenuPresentationContextProtocol.present(_:animated:)(v72, 1, v51, v52);

    v53 = v0[21];
    v55 = v0[17];
    v54 = v0[18];
    swift_task_dealloc(v0[22]);
    swift_task_dealloc(v53);
    swift_task_dealloc(v54);
    v56 = swift_task_dealloc(v55);
    return ((uint64_t (*)(uint64_t, __n128))v0[1])(1, v56);
  }
  else
  {
    v76 = (char *)&dword_1009EAB28 + dword_1009EAB28;
    v15 = (_QWORD *)swift_task_alloc(unk_1009EAB2C);
    v0[26] = v15;
    *v15 = v0;
    v15[1] = sub_10060ACE8;
    return ((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))v76)(v0[9], v0[11], 0, v0[12]);
  }
}

uint64_t sub_10060ACE8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 208));
  return swift_task_switch(sub_10060AD34, *(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200));
}

uint64_t sub_10060AD34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_release(*(_QWORD *)(v0 + 184));
  v1 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  swift_task_dealloc(*(_QWORD *)(v0 + 176));
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

double sub_10060AD94(id a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  Class isa;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  double v58;
  id v59;
  uint64_t v60;
  _QWORD v61[2];
  __int128 v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  _QWORD *v67;
  void *v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  _QWORD v84[3];
  uint64_t v85;
  uint64_t v86;

  v5 = type metadata accessor for FigaroClickEvent.TargetType(0);
  v81 = *(_QWORD *)(v5 - 8);
  v82 = v5;
  __chkstk_darwin(v5);
  v80 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FigaroClickEvent.Location.Type(0);
  v78 = *(_QWORD *)(v7 - 8);
  v79 = v7;
  __chkstk_darwin(v7);
  v77 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FigaroActionType(0);
  v75 = *(_QWORD *)(v9 - 8);
  v76 = v9;
  __chkstk_darwin(v9);
  v11 = (_QWORD *)((char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for FigaroClickEvent.ActionContext(0);
  v73 = *(_QWORD *)(v12 - 8);
  v74 = v12;
  __chkstk_darwin(v12);
  v83 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FigaroClickEvent(0);
  v71 = *(_QWORD *)(v14 - 8);
  v72 = v14;
  __chkstk_darwin(v14);
  v70 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Books16RemoveActionItem_data);
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books16RemoveActionItem_data + 24);
  v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books16RemoveActionItem_data + 32);
  sub_10003F198((_QWORD *)(v2 + OBJC_IVAR____TtC5Books16RemoveActionItem_data), v17);
  if ((dispatch thunk of ContextActionDataProtocol.shouldReportFigaro.getter(v17, v18) & 1) == 0)
    return result;
  v20 = objc_msgSend(a2, "actionItems");
  v21 = sub_100009E04(0, (unint64_t *)&qword_1009DA820, NSNumber_ptr);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  if (!((unint64_t)v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v23)
      goto LABEL_4;
LABEL_11:
    v29 = v22;
LABEL_12:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v29).n128_u64[0];
    return result;
  }
LABEL_24:
  if (v22 < 0)
    v60 = v22;
  else
    v60 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v23 = _CocoaArrayWrapper.endIndex.getter(v60);
  swift_bridgeObjectRelease(v22);
  if (!v23)
    goto LABEL_11;
LABEL_4:
  v69 = a2;
  v24 = 0;
  a2 = (void *)(v22 & 0xC000000000000001);
  while (1)
  {
    v25 = a2 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v22) : *(id *)(v22 + 8 * v24 + 32);
    v26 = v25;
    v27 = objc_msgSend(v25, "integerValue");

    if (v27 == a1)
      break;
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    ++v24;
    if (v28 == v23)
      goto LABEL_11;
  }
  swift_bridgeObjectRelease(v22);
  v30 = v16[3];
  v31 = v16[4];
  sub_10003F198(v16, v30);
  v29 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v30, v31);
  v32 = *(_QWORD *)(v29 + 16);
  if (!v32)
    goto LABEL_12;
  v33 = v29 + 32;
  v66 = enum case for FigaroClickEvent.ActionContext.actionSheet(_:);
  v65 = enum case for FigaroActionType.custom(_:);
  v64 = enum case for FigaroClickEvent.Location.Type.button(_:);
  v63 = enum case for FigaroClickEvent.TargetType.button(_:);
  v61[0] = v29;
  swift_bridgeObjectRetain(v29);
  v62 = xmmword_10070CCA0;
  v61[1] = (char *)&type metadata for Any + 8;
  v68 = a1;
  v67 = v11;
  do
  {
    sub_10002E418(v33, (uint64_t)v84);
    v47 = v85;
    v48 = v86;
    sub_10003F198(v84, v85);
    v49 = dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v47, v48);
    if (v50)
    {
      v51 = v49;
      v52 = v50;
      (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v83, v66, v74);
      *v11 = 0x65766F6D6572;
      v11[1] = 0xE600000000000000;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v75 + 104))(v11, v65, v76);
      v53 = sub_10004CFD4(&qword_1009E8860);
      v54 = type metadata accessor for FigaroClickEvent.Location(0);
      v55 = a1;
      v56 = swift_allocObject(v53, ((*(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v54 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80) | 7);
      *(_OWORD *)(v56 + 16) = v62;
      v57 = (void *)objc_opt_self(NSString);
      *(_QWORD *)&v58 = swift_bridgeObjectRetain(v52).n128_u64[0];
      v59 = objc_msgSend(v57, "bk_localizedStringForDeleteAction:deleteActionProvider:", v55, v69, v58);
      if (v59)
      {
        v34 = v59;
        v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v59);
        v37 = v36;

      }
      else
      {
        v35 = 0;
        v37 = 0;
      }
      v38 = v77;
      (*(void (**)(char *, _QWORD, uint64_t))(v78 + 104))(v77, v64, v79);
      FigaroClickEvent.Location.init(adamId:name:locationPosition:locationType:)(v51, v52, v35, v37, v24, v38);
      v39 = v80;
      (*(void (**)(char *, _QWORD, uint64_t))(v81 + 104))(v80, v63, v82);
      v40 = sub_1004F6E50((uint64_t)_swiftEmptyArrayStorage);
      v41 = v70;
      v11 = v67;
      FigaroClickEvent.init(actionContext:actionDetails:actionType:actionURLString:locations:targetId:targetType:)(v83, v40, v67, 0, 0, v56, v51, v52, v39);
      v42 = sub_100008DB0(&qword_1009D7C20, (uint64_t (*)(uint64_t))&type metadata accessor for FigaroClickEvent, (uint64_t)&protocol conformance descriptor for FigaroClickEvent);
      v43 = v72;
      v44 = FigaroEventBuilding.build()(v72, v42);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v41, v43);
      v45 = (void *)objc_opt_self(JSAApplication);
      type metadata accessor for FigaroKey(0);
      sub_100008DB0(&qword_1009D05A8, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_10070DDC4);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v45, "recordNativeEvent:", isa, swift_bridgeObjectRelease(v44).n128_f64[0]);

      a1 = v68;
    }
    _s5Books15CurrentPageViewVwxx_0(v84);
    v33 += 40;
    --v32;
  }
  while (v32);
  *(_QWORD *)&result = swift_bridgeObjectRelease_n(v61[0], 2).n128_u64[0];
  return result;
}

double sub_10060B3C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v22;

  v12 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  type metadata accessor for MainActor(0);
  v16 = a4;
  swift_bridgeObjectRetain(a2);
  v18 = static MainActor.shared.getter(v17);
  v19 = (_QWORD *)swift_allocObject(&unk_100918380, 56, 7);
  v19[2] = v18;
  v19[3] = &protocol witness table for MainActor;
  v19[4] = a3;
  v19[5] = a2;
  v19[6] = a4;
  v20 = sub_10030C02C((uint64_t)v14, (uint64_t)&unk_1009F11C8, (uint64_t)v19);
  swift_release(v20);
  return sub_10060AD94(a6, a7);
}

uint64_t sub_10060B4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[5] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[6] = v8;
  v6[7] = v9;
  return swift_task_switch(sub_10060B548, v8, v9);
}

uint64_t sub_10060B548()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = unk_1009EAB2C;
  v4 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1009EAB28 + dword_1009EAB28);
  swift_bridgeObjectRetain(v0[3]);
  v2 = (_QWORD *)swift_task_alloc(v1);
  v0[8] = v2;
  *v2 = v0;
  v2[1] = sub_10060B5BC;
  return v4(v0[2], v0[3], 0, v0[4]);
}

uint64_t sub_10060B5BC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 24);
  swift_task_dealloc(*(_QWORD *)(*v0 + 64));
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_10020DB80, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_10060B614(uint64_t *a1, uint64_t a2)
{
  return sub_10060C01C(a1, a2, &qword_1009D0A98, (uint64_t)&type metadata for Int);
}

uint64_t sub_10060B628(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for ContentMessage.CFIUpdate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008DB0(&qword_1009F1158, v12, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
  swift_bridgeObjectRetain(v10);
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100008DB0(&qword_1009E3080, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_10060E264((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_10060B884(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008DB0(&qword_1009D7AE8, v12, (uint64_t)&protocol conformance descriptor for UUID);
  swift_bridgeObjectRetain(v10);
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100008DB0((unint64_t *)&unk_1009D7AF0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_10060E4B8((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_10060BAE0(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)(v8, v7);

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_10060CC04(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_10060D5BC(v29, &qword_1009F1150);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_10060E1E4((uint64_t)v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16, a2);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, a2);

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_10060E70C((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_10060BD84(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)(v8, v7);

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = type metadata accessor for BKTapActionView();
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_10060CE0C(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_10060D5BC(v29, &qword_1009D05F8);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_10060E1E4((uint64_t)v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      type metadata accessor for BKTapActionView();
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16, a2);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, a2);

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_10060E8B0((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

uint64_t sub_10060C008(uint64_t *a1, uint64_t a2)
{
  return sub_10060C01C(a1, a2, &qword_1009EBDE8, (uint64_t)&type metadata for UInt64);
}

uint64_t sub_10060C01C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;

  v7 = v4;
  v10 = *v4;
  v11 = static Hasher._hash(seed:_:)(*(_QWORD *)(v10 + 40), a2);
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v7);
    v19 = *v7;
    *v7 = 0x8000000000000000;
    sub_10060EA44(a2, v13, isUniquelyReferenced_nonNull_native, a3, a4);
    v18 = *v7;
    *v7 = v19;
    swift_bridgeObjectRelease(v18);
    result = 1;
    goto LABEL_8;
  }
  v14 = *(_QWORD *)(v10 + 48);
  if (*(_QWORD *)(v14 + 8 * v13) != a2)
  {
    v15 = ~v12;
    do
    {
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v14 + 8 * v13) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_10060C12C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  _QWORD v21[9];

  v7 = *v3;
  Hasher.init(_seed:)(v21, *(_QWORD *)(*v3 + 40));
  if (a3)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(a3);
    String.hash(into:)(v21, a2, a3);
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    Hasher._combine(_:)(0);
    swift_bridgeObjectRetain(v7);
  }
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_17:
    swift_bridgeObjectRelease(v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v21[0] = *v3;
    *v3 = 0x8000000000000000;
    swift_bridgeObjectRetain(a3);
    sub_10060EB78(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    v20 = *v3;
    *v3 = v21[0];
    swift_bridgeObjectRelease(v20);
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  v11 = ~v9;
  v12 = *(_QWORD *)(v7 + 48);
  while (1)
  {
    v13 = (_QWORD *)(v12 + 16 * v10);
    v14 = v13[1];
    if (v14)
      break;
    if (!a3)
      goto LABEL_16;
LABEL_7:
    v10 = (v10 + 1) & v11;
    if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_17;
  }
  if (!a3)
    goto LABEL_7;
  v15 = *v13 == a2 && v14 == a3;
  if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v13, v14, a2, a3, 0) & 1) == 0)
    goto LABEL_7;
  swift_bridgeObjectRelease(a3);
LABEL_16:
  swift_bridgeObjectRelease(v7);
  v16 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
  v17 = v16[1];
  *a1 = *v16;
  a1[1] = v17;
  swift_bridgeObjectRetain(v17);
  return 0;
}

uint64_t sub_10060C2F4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for ClusteringOptions.MediaType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008DB0(&qword_1009D05D0, v12, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
  swift_bridgeObjectRetain(v10);
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100008DB0(&qword_1009D05D8, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_10060ED2C((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_10060C550(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for SelectionInfo.ID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008DB0(&qword_1009F1180, v12, (uint64_t)&protocol conformance descriptor for SelectionInfo.ID);
  swift_bridgeObjectRetain(v10);
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100008DB0(&qword_1009F1188, (uint64_t (*)(uint64_t))&type metadata accessor for SelectionInfo.ID, (uint64_t)&protocol conformance descriptor for SelectionInfo.ID);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_10060EF80((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_10060C7AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for PageLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008DB0((unint64_t *)&unk_1009DF310, v12, (uint64_t)&protocol conformance descriptor for PageLocation);
  swift_bridgeObjectRetain(v10);
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100008DB0((unint64_t *)&unk_1009E8ED0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_10060F1D4((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_10060CA08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_10004CFD4(&qword_1009F1198);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v6 = __CocoaSet.makeIterator()(a1, v5);
    for (i = __CocoaSet.Iterator.next()(v6); i; i = __CocoaSet.Iterator.next()(result))
    {
      v21 = i;
      v15 = sub_10004CFD4(&qword_1009DF308);
      swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v15, 7);
      v16 = *(_QWORD *)(v4 + 16);
      if (*(_QWORD *)(v4 + 24) <= v16)
      {
        sub_10060D2E0(v16 + 1);
        v4 = v23;
      }
      v8 = v22;
      v21 = v22;
      result = dispatch thunk of Hashable._rawHashValue(seed:)(*(_QWORD *)(v4 + 40), v15, &protocol witness table for AnyKeyPath);
      v10 = v4 + 56;
      v11 = -1 << *(_BYTE *)(v4 + 32);
      v12 = result & ~v11;
      v13 = v12 >> 6;
      if (((-1 << v12) & ~*(_QWORD *)(v4 + 56 + 8 * (v12 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v4 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v17 = 0;
        v18 = (unint64_t)(63 - v11) >> 6;
        do
        {
          if (++v13 == v18 && (v17 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          v19 = v13 == v18;
          if (v13 == v18)
            v13 = 0;
          v17 |= v19;
          v20 = *(_QWORD *)(v10 + 8 * v13);
        }
        while (v20 == -1);
        v14 = __clz(__rbit64(~v20)) + (v13 << 6);
      }
      *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14) = v8;
      ++*(_QWORD *)(v4 + 16);
    }
    swift_release(v6);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_10060CC04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a2)
  {
    sub_10004CFD4(&qword_1009F1150);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v24 = v4;
    v6 = __CocoaSet.makeIterator()(a1, v5);
    v7 = __CocoaSet.Iterator.next()(v6);
    if (v7)
    {
      v8 = v7;
      v9 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
      do
      {
        v22 = v8;
        swift_dynamicCast(&v23, &v22, (char *)&type metadata for Swift.AnyObject + 8, v9, 7);
        v4 = v24;
        v17 = *(_QWORD *)(v24 + 16);
        if (*(_QWORD *)(v24 + 24) <= v17)
        {
          sub_10060D5BC(v17 + 1, &qword_1009F1150);
          v4 = v24;
        }
        v10 = v23;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v12 = v4 + 56;
        v13 = -1 << *(_BYTE *)(v4 + 32);
        v14 = result & ~v13;
        v15 = v14 >> 6;
        if (((-1 << v14) & ~*(_QWORD *)(v4 + 56 + 8 * (v14 >> 6))) != 0)
        {
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v4 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v15 == v19;
            if (v15 == v19)
              v15 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16) = v10;
        ++*(_QWORD *)(v4 + 16);
        v8 = __CocoaSet.Iterator.next()(result);
      }
      while (v8);
    }
    swift_release(v6);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_10060CE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a2)
  {
    sub_10004CFD4(&qword_1009D05F8);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v24 = v4;
    v6 = __CocoaSet.makeIterator()(a1, v5);
    v7 = __CocoaSet.Iterator.next()(v6);
    if (v7)
    {
      v8 = v7;
      v9 = type metadata accessor for BKTapActionView();
      do
      {
        v22 = v8;
        swift_dynamicCast(&v23, &v22, (char *)&type metadata for Swift.AnyObject + 8, v9, 7);
        v4 = v24;
        v17 = *(_QWORD *)(v24 + 16);
        if (*(_QWORD *)(v24 + 24) <= v17)
        {
          sub_10060D5BC(v17 + 1, &qword_1009D05F8);
          v4 = v24;
        }
        v10 = v23;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v12 = v4 + 56;
        v13 = -1 << *(_BYTE *)(v4 + 32);
        v14 = result & ~v13;
        v15 = v14 >> 6;
        if (((-1 << v14) & ~*(_QWORD *)(v4 + 56 + 8 * (v14 >> 6))) != 0)
        {
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v4 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v15 == v19;
            if (v15 == v19)
              v15 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v16) = v10;
        ++*(_QWORD *)(v4 + 16);
        v8 = __CocoaSet.Iterator.next()(result);
      }
      while (v8);
    }
    swift_release(v6);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

Swift::Int sub_10060D004(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  Swift::Int result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10004CFD4(&qword_1009EBDF0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    result = swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v9)
      {
        v16 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v10)
          goto LABEL_36;
        v19 = v33[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v10)
            goto LABEL_36;
          v19 = v33[v13];
          if (!v19)
          {
            v13 = v18 + 2;
            if (v18 + 2 >= v10)
              goto LABEL_36;
            v19 = v33[v13];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  v13 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v13 >= v10)
                    goto LABEL_36;
                  v19 = v33[v13];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v13 = v20;
            }
          }
        }
LABEL_26:
        v9 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v17);
      v22 = *v21;
      v23 = v21[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v22, v23);
      result = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v14);
      *v15 = v22;
      v15[1] = v23;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release(v3);
  *v2 = v6;
  return result;
}

uint64_t sub_10060D2E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  _QWORD *v32;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10004CFD4(&qword_1009F1198);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v31 = v2;
    v32 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    result = swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v32[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v32[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v32[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v31;
                v30 = 1 << *(_BYTE *)(v3 + 32);
                if (v30 > 63)
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v30;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v32[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v13 >= v10)
                    goto LABEL_36;
                  v18 = v32[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = *(_QWORD *)(v6 + 40);
      v22 = sub_10004CFD4(&qword_1009DF308);
      result = dispatch thunk of Hashable._rawHashValue(seed:)(v21, v22, &protocol witness table for AnyKeyPath);
      v23 = -1 << *(_BYTE *)(v6 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v11 + 8 * v25);
        }
        while (v29 == -1);
        v14 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release(v3);
  *v2 = v6;
  return result;
}

void sub_10060D5BC(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v31 = v3;
    v8 = 1 << *(_BYTE *)(v4 + 32);
    v9 = (_QWORD *)(v4 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v4 + 56);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 56;
    swift_retain(v4);
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v18 >= v12)
          goto LABEL_36;
        v19 = v9[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v12)
            goto LABEL_36;
          v19 = v9[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v12)
              goto LABEL_36;
            v19 = v9[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v12)
              {
LABEL_36:
                swift_release(v4);
                v3 = v31;
                v30 = 1 << *(_BYTE *)(v4 + 32);
                if (v30 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v9 = -1 << v30;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v9[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v14 >= v12)
                    goto LABEL_36;
                  v19 = v9[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_26:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      v22 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v7 + 40));
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  swift_release(v4);
  *v3 = v7;
}

void sub_10060D854(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 1);
  v7 = v6;
  if (*(_QWORD *)(v4 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v4 + 56);
    v10 = 1 << *(_BYTE *)(v4 + 32);
    v30 = -1 << v10;
    v31 = v3;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v4 + 56);
    v32 = 1 << *(_BYTE *)(v4 + 32);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = v6 + 56;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v18 >= v13)
          goto LABEL_36;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_36;
          v19 = v9[v8];
          if (!v19)
          {
            v8 = v18 + 2;
            if (v18 + 2 >= v13)
              goto LABEL_36;
            v19 = v9[v8];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v13)
              {
LABEL_36:
                if (v32 >= 64)
                  bzero((void *)(v4 + 56), 8 * v13);
                else
                  *v9 = v30;
                v3 = v31;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v9[v20];
              if (!v19)
              {
                while (1)
                {
                  v8 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_42;
                  if (v8 >= v13)
                    goto LABEL_36;
                  v19 = v9[v8];
                  ++v20;
                  if (v19)
                    goto LABEL_26;
                }
              }
              v8 = v20;
            }
          }
        }
LABEL_26:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      v22 = static Hasher._hash(seed:_:)(*(_QWORD *)(v7 + 40), v21);
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = v22 & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  swift_release(v4);
  *v3 = v7;
}

void sub_10060DAD0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10004CFD4(&qword_1009F1170);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_39;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_39;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_39;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_39:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_45;
                  if (v12 >= v10)
                    goto LABEL_39;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v22 = *v20;
      v21 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      if (v21)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain(v21);
        String.hash(into:)(v34, v22, v21);
        swift_bridgeObjectRelease(v21);
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_44;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v22;
      v14[1] = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_10060DDD8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  unint64_t *v48;
  uint64_t v49;

  v48 = a4;
  v49 = a5;
  v7 = v5;
  v47 = a2;
  v9 = a2(0);
  v46 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - v10;
  v12 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_10004CFD4(a3);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 1);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_39;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v45 = (_QWORD *)(v12 + 56);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v43 = v7;
  v44 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  swift_retain(v12);
  v20 = 0;
  while (1)
  {
    if (v18)
    {
      v22 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_26;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v24 >= v44)
      goto LABEL_35;
    v25 = v45[v24];
    ++v20;
    if (!v25)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v44)
        goto LABEL_35;
      v25 = v45[v20];
      if (!v25)
      {
        v20 = v24 + 2;
        if (v24 + 2 >= v44)
          goto LABEL_35;
        v25 = v45[v20];
        if (!v25)
          break;
      }
    }
LABEL_25:
    v18 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_26:
    v27 = v12;
    v28 = *(_QWORD *)(v12 + 48);
    v29 = *(_QWORD *)(v46 + 72);
    v30 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 32);
    v30(v11, v28 + v29 * v23, v9);
    v31 = *(_QWORD *)(v14 + 40);
    v32 = sub_100008DB0(v48, v47, v49);
    v33 = dispatch thunk of Hashable._rawHashValue(seed:)(v31, v9, v32);
    v34 = -1 << *(_BYTE *)(v14 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      v21 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v30((char *)(*(_QWORD *)(v14 + 48) + v21 * v29), (unint64_t)v11, v9);
    ++*(_QWORD *)(v14 + 16);
    v12 = v27;
  }
  v26 = v24 + 3;
  if (v26 < v44)
  {
    v25 = v45[v26];
    if (!v25)
    {
      while (1)
      {
        v20 = v26 + 1;
        if (__OFADD__(v26, 1))
          goto LABEL_41;
        if (v20 >= v44)
          goto LABEL_35;
        v25 = v45[v20];
        ++v26;
        if (v25)
          goto LABEL_25;
      }
    }
    v20 = v26;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v12);
  v7 = v43;
  v41 = 1 << *(_BYTE *)(v12 + 32);
  if (v41 > 63)
    bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v45 = -1 << v41;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_39:
  swift_release(v12);
  *v7 = v14;
}

unint64_t sub_10060E138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;

  v4 = *(_QWORD *)(a2 + 40);
  v5 = sub_10004CFD4(&qword_1009DF308);
  v6 = dispatch thunk of Hashable._rawHashValue(seed:)(v4, v5, &protocol witness table for AnyKeyPath);
  result = _HashTable.nextHole(atOrAfter:)(v6 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_10060E1E4(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_10060E264(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for ContentMessage.CFIUpdate(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10060DDD8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, &qword_1009F1160, &qword_1009F1158, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
  }
  else
  {
    if (v12 > v11)
    {
      sub_10060FAE0((uint64_t (*)(_QWORD))&type metadata accessor for ContentMessage.CFIUpdate, &qword_1009F1160);
      goto LABEL_12;
    }
    sub_100610A04(v13, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, &qword_1009F1160, &qword_1009F1158, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_100008DB0(&qword_1009F1158, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_100008DB0(&qword_1009E3080, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

uint64_t sub_10060E4B8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10060DDD8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_1009F1178, &qword_1009D7AE8, (uint64_t)&protocol conformance descriptor for UUID);
  }
  else
  {
    if (v12 > v11)
    {
      sub_10060FAE0((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_1009F1178);
      goto LABEL_12;
    }
    sub_100610A04(v13, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_1009F1178, &qword_1009D7AE8, (uint64_t)&protocol conformance descriptor for UUID);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_100008DB0(&qword_1009D7AE8, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_100008DB0((unint64_t *)&unk_1009D7AF0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_10060E70C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10060D5BC(v9, &qword_1009F1150);
  }
  else
  {
    if (v8 > v7)
    {
      sub_10060F5FC(&qword_1009F1150);
      goto LABEL_14;
    }
    sub_100610260(v9, &qword_1009F1150);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

void sub_10060E8B0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10060D5BC(v9, &qword_1009D05F8);
  }
  else
  {
    if (v8 > v7)
    {
      sub_10060F5FC(&qword_1009D05F8);
      goto LABEL_14;
    }
    sub_100610260(v9, &qword_1009D05F8);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = type metadata accessor for BKTapActionView();
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

uint64_t sub_10060EA44(uint64_t result, unint64_t a2, char a3, uint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v8 = result;
  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10060D854(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_10060F7A8(a4);
      goto LABEL_14;
    }
    sub_1006104D4(v11, a4);
  }
  v12 = *v5;
  result = static Hasher._hash(seed:_:)(*(_QWORD *)(*v5 + 40), v8);
  v13 = -1 << *(_BYTE *)(v12 + 32);
  a2 = result & ~v13;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v14 = *(_QWORD *)(v12 + 48);
    if (*(_QWORD *)(v14 + 8 * a2) == v8)
    {
LABEL_13:
      result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(a5);
      __break(1u);
    }
    else
    {
      v15 = ~v13;
      while (1)
      {
        a2 = (a2 + 1) & v15;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v14 + 8 * a2) == v8)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = v8;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
  return result;
}

void sub_10060EB78(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _QWORD v27[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_23;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_10060DAD0(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_10060F934();
      goto LABEL_23;
    }
    sub_100610730(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v27, *(_QWORD *)(*v4 + 40));
  if (a2)
  {
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(a2);
    String.hash(into:)(v27, a1, a2);
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = ~v14;
    v17 = *(_QWORD *)(v12 + 48);
    do
    {
      v18 = (_QWORD *)(v17 + 16 * a3);
      v19 = v18[1];
      if (v19)
      {
        if (a2)
        {
          v20 = *v18 == a1 && v19 == a2;
          if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v18, v19, a1, a2, 0) & 1) != 0)
          {
LABEL_22:
            v21 = sub_10004CFD4(&qword_1009D2A80);
            ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v21);
            __break(1u);
            break;
          }
        }
      }
      else if (!a2)
      {
        goto LABEL_22;
      }
      a3 = (a3 + 1) & v16;
    }
    while (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_23:
  v22 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v23 = (_QWORD *)(*(_QWORD *)(v22 + 48) + 16 * a3);
  *v23 = a1;
  v23[1] = a2;
  v24 = *(_QWORD *)(v22 + 16);
  v25 = __OFADD__(v24, 1);
  v26 = v24 + 1;
  if (v25)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v26;
}

uint64_t sub_10060ED2C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for ClusteringOptions.MediaType(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10060DDD8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, &qword_1009D05C8, &qword_1009D05D0, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
  }
  else
  {
    if (v12 > v11)
    {
      sub_10060FAE0((uint64_t (*)(_QWORD))&type metadata accessor for ClusteringOptions.MediaType, &qword_1009D05C8);
      goto LABEL_12;
    }
    sub_100610A04(v13, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, &qword_1009D05C8, &qword_1009D05D0, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_100008DB0(&qword_1009D05D0, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_100008DB0(&qword_1009D05D8, (uint64_t (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType, (uint64_t)&protocol conformance descriptor for ClusteringOptions.MediaType);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

uint64_t sub_10060EF80(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for SelectionInfo.ID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10060DDD8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for SelectionInfo.ID, &qword_1009F1190, &qword_1009F1180, (uint64_t)&protocol conformance descriptor for SelectionInfo.ID);
  }
  else
  {
    if (v12 > v11)
    {
      sub_10060FAE0((uint64_t (*)(_QWORD))&type metadata accessor for SelectionInfo.ID, &qword_1009F1190);
      goto LABEL_12;
    }
    sub_100610A04(v13, (uint64_t (*)(uint64_t))&type metadata accessor for SelectionInfo.ID, &qword_1009F1190, &qword_1009F1180, (uint64_t)&protocol conformance descriptor for SelectionInfo.ID);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_100008DB0(&qword_1009F1180, (uint64_t (*)(uint64_t))&type metadata accessor for SelectionInfo.ID, (uint64_t)&protocol conformance descriptor for SelectionInfo.ID);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_100008DB0(&qword_1009F1188, (uint64_t (*)(uint64_t))&type metadata accessor for SelectionInfo.ID, (uint64_t)&protocol conformance descriptor for SelectionInfo.ID);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

uint64_t sub_10060F1D4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;

  v31 = a1;
  v6 = type metadata accessor for PageLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v30 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_10060DDD8(v13, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, &qword_1009F1168, (unint64_t *)&unk_1009DF310, (uint64_t)&protocol conformance descriptor for PageLocation);
  }
  else
  {
    if (v12 > v11)
    {
      sub_10060FAE0((uint64_t (*)(_QWORD))&type metadata accessor for PageLocation, &qword_1009F1168);
      goto LABEL_12;
    }
    sub_100610A04(v13, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, &qword_1009F1168, (unint64_t *)&unk_1009DF310, (uint64_t)&protocol conformance descriptor for PageLocation);
  }
  v14 = *v3;
  v15 = *(_QWORD *)(*v3 + 40);
  v16 = sub_100008DB0((unint64_t *)&unk_1009DF310, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
  v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v6, v16);
  v18 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v17 & ~v18;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v19 = ~v18;
    v20 = *(_QWORD *)(v7 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v21(v10, *(_QWORD *)(v14 + 48) + v20 * a2, v6);
      v22 = sub_100008DB0((unint64_t *)&unk_1009E8ED0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v31, v6, v22);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v23 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v19;
    }
    while (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v24 = v31;
  v25 = *v30;
  *(_QWORD *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v25 + 48) + *(_QWORD *)(v7 + 72) * a2, v24, v6, v8);
  v27 = *(_QWORD *)(v25 + 16);
  v28 = __OFADD__(v27, 1);
  v29 = v27 + 1;
  if (!v28)
  {
    *(_QWORD *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void *sub_10060F428()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_10004CFD4(&qword_1009F1198);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release(v2);
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)swift_retain(v17);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10060F5D0()
{
  return sub_10060F7A8(&qword_1009D0A98);
}

void sub_10060F5DC()
{
  sub_10060FAE0((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_1009F1178);
}

void sub_10060F5F0()
{
  sub_10060F5FC(&qword_1009D05F8);
}

void sub_10060F5FC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v2 = v1;
  sub_10004CFD4(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)v6 >= v3 + 56 + 8 * v8)
    memmove(v6, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v14)
      goto LABEL_28;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_28;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
      {
        v10 = v20 + 2;
        if (v20 + 2 >= v14)
          goto LABEL_28;
        v21 = *(_QWORD *)(v7 + 8 * v10);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    v19 = v18;
  }
  v22 = v20 + 3;
  if (v22 >= v14)
    goto LABEL_28;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void *sub_10060F79C()
{
  return sub_10060F7A8(&qword_1009EBDE8);
}

void *sub_10060F7A8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v2 = v1;
  sub_10004CFD4(a1);
  v3 = *v1;
  v4 = static _SetStorage.copy(original:)(*v1);
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (void *)swift_release(v3);
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v7 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v7 + 8 * v10);
        if (!v18)
          break;
      }
    }
LABEL_27:
    v13 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v7 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v7 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_10060F934()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_10004CFD4(&qword_1009F1170);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_OWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_OWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    swift_bridgeObjectRetain(*((_QWORD *)&v17 + 1));
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_10060FAE0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - v7;
  sub_10004CFD4(a2);
  v9 = *v2;
  v10 = static _SetStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_30:
    *v4 = v11;
    return;
  }
  v28 = v4;
  v12 = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 56 + 8 * v14)
    memmove(v12, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    swift_release(v9);
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

Swift::Int sub_10060FD04(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  Swift::Int result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10004CFD4(&qword_1009EBDF0);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = swift_release(v3);
LABEL_38:
    *v2 = v6;
    return result;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  result = swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_27;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v32)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v32)
        goto LABEL_36;
      v19 = *(_QWORD *)(v8 + 8 * v13);
      if (!v19)
      {
        v13 = v18 + 2;
        if (v18 + 2 >= v32)
          goto LABEL_36;
        v19 = *(_QWORD *)(v8 + 8 * v13);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_27:
    v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v17);
    v22 = *v21;
    v23 = v21[1];
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain(v23);
    String.hash(into:)(v33, v22, v23);
    result = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v14);
    *v15 = v22;
    v15[1] = v23;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_36:
    result = swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v13 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v13 >= v32)
      goto LABEL_36;
    v19 = *(_QWORD *)(v8 + 8 * v13);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10060FFB0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10004CFD4(&qword_1009F1198);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    result = swift_release(v3);
LABEL_38:
    *v2 = v6;
    return result;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v30 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  result = swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_27;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v30)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v30)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v30)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_27:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v21 = *(_QWORD *)(v6 + 40);
    swift_retain(v20);
    v22 = sub_10004CFD4(&qword_1009DF308);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v21, v22, &protocol witness table for AnyKeyPath);
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v11 + 8 * v25);
      }
      while (v29 == -1);
      v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v30)
  {
LABEL_36:
    result = swift_release_n(v3, 2);
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v30)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_100610260(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  Swift::Int v21;
  id v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
LABEL_38:
    *v3 = v7;
    return;
  }
  v31 = v3;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = v4 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v4 + 56);
  v12 = (unint64_t)(v8 + 63) >> 6;
  v13 = v6 + 56;
  swift_retain(v4);
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_27;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v12)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v12)
        goto LABEL_36;
      v19 = *(_QWORD *)(v9 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v12)
          goto LABEL_36;
        v19 = *(_QWORD *)(v9 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_27:
    v21 = *(_QWORD *)(v7 + 40);
    v22 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    v23 = NSObject._rawHashValue(seed:)(v21);
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v26);
      }
      while (v30 == -1);
      v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v13 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v12)
  {
LABEL_36:
    swift_release_n(v4, 2);
    v3 = v31;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v12)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_1006104D4(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v5 = a1;
  else
    v5 = *(_QWORD *)(*v2 + 24);
  sub_10004CFD4(a2);
  v6 = static _SetStorage.resize(original:capacity:move:)(v4, v5, 0);
  v7 = v6;
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_release(v4);
LABEL_38:
    *v3 = v7;
    return;
  }
  v30 = v3;
  v8 = 0;
  v9 = v4 + 56;
  v10 = 1 << *(_BYTE *)(v4 + 32);
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v4 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  v14 = v6 + 56;
  while (1)
  {
    if (v12)
    {
      v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v17 = v16 | (v8 << 6);
      goto LABEL_27;
    }
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v13)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_36;
      v19 = *(_QWORD *)(v9 + 8 * v8);
      if (!v19)
      {
        v8 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_36;
        v19 = *(_QWORD *)(v9 + 8 * v8);
        if (!v19)
          break;
      }
    }
LABEL_26:
    v12 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_27:
    v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    v22 = static Hasher._hash(seed:_:)(*(_QWORD *)(v7 + 40), v21);
    v23 = -1 << *(_BYTE *)(v7 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v14 + 8 * v25);
      }
      while (v29 == -1);
      v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
  {
LABEL_36:
    swift_release(v4);
    v3 = v30;
    goto LABEL_38;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v8 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    v8 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v8 >= v13)
      goto LABEL_36;
    v19 = *(_QWORD *)(v9 + 8 * v8);
    ++v20;
    if (v19)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100610730(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_10004CFD4(&qword_1009F1170);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_41:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v17 >= v32)
      goto LABEL_39;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_39;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_39;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v22 = *v20;
    v21 = v20[1];
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    if (v21)
    {
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain_n(v21, 2);
      String.hash(into:)(v33, v22, v21);
      swift_bridgeObjectRelease(v21);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v22;
    v14[1] = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_39:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_41;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_39;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_43:
  __break(1u);
}

void sub_100610A04(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t (*v42)(uint64_t);
  unint64_t *v43;
  uint64_t v44;

  v43 = a4;
  v44 = a5;
  v7 = v5;
  v42 = a2;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v39 - v11;
  v13 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_10004CFD4(a3);
  v14 = static _SetStorage.resize(original:capacity:move:)(v13, a1, 0);
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
    swift_release(v13);
LABEL_37:
    *v7 = v15;
    return;
  }
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 56);
  v39 = v7;
  v40 = v13 + 56;
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v41 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 56;
  swift_retain(v13);
  v21 = 0;
  while (1)
  {
    if (v19)
    {
      v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_26;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v41)
      goto LABEL_35;
    v26 = *(_QWORD *)(v40 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v41)
        goto LABEL_35;
      v26 = *(_QWORD *)(v40 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v41)
          goto LABEL_35;
        v26 = *(_QWORD *)(v40 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_25:
    v19 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_26:
    v28 = *(_QWORD *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, *(_QWORD *)(v13 + 48) + v28 * v24, v9);
    v29 = *(_QWORD *)(v15 + 40);
    v30 = sub_100008DB0(v43, v42, v44);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v9, v30);
    v32 = -1 << *(_BYTE *)(v15 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v20 + 8 * (v33 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v20 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v20 + 8 * v34);
      }
      while (v38 == -1);
      v22 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v20 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 48) + v22 * v28, v12, v9);
    ++*(_QWORD *)(v15 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v41)
  {
LABEL_35:
    swift_release_n(v13, 2);
    v7 = v39;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v40 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v41)
      goto LABEL_35;
    v26 = *(_QWORD *)(v40 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

id sub_100610D20(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4, char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_class *ObjectType;
  _QWORD *v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id result;
  id v32;
  id v33;
  char *v34;
  _QWORD *v35;
  id v36;
  objc_super v37;
  _QWORD v38[5];
  _QWORD v39[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v39[3] = a6;
  v39[4] = a8;
  v18 = sub_1000257F8(v39);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(v18, a1, a6);
  v38[3] = a7;
  v38[4] = a9;
  v19 = sub_1000257F8(v38);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(v19, a2, a7);
  *(_QWORD *)&a5[OBJC_IVAR____TtC5Books16RemoveActionItem_attributes] = 2;
  v20 = &a5[OBJC_IVAR____TtC5Books16RemoveActionItem_type];
  v21 = enum case for ContextActionType.remove(_:);
  v22 = type metadata accessor for ContextActionType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  sub_10002E418((uint64_t)v39, (uint64_t)&a5[OBJC_IVAR____TtC5Books16RemoveActionItem_data]);
  sub_10002E418((uint64_t)v38, (uint64_t)&a5[OBJC_IVAR____TtC5Books16RemoveActionItem_context]);
  *(_QWORD *)&a5[OBJC_IVAR____TtC5Books16RemoveActionItem_tracker] = a3;
  sub_10002E418((uint64_t)a4, (uint64_t)&a5[OBJC_IVAR____TtC5Books16RemoveActionItem_figaroProvider]);
  v23 = (void *)objc_opt_self(BKAppDelegate);
  v24 = a3;
  v25 = a5;
  v26 = objc_msgSend(v23, "delegate");
  v27 = objc_msgSend(v26, "serviceCenter");

  v28 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v29 = objc_msgSend(v23, "delegate");
  v30 = objc_msgSend(v29, "engagementManager");

  result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (result)
  {
    v32 = result;
    v33 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    v34 = &v25[OBJC_IVAR____TtC5Books16RemoveActionItem_libraryOperationProvider];
    *((_QWORD *)v34 + 3) = &type metadata for MenuLibraryOperationProvider;
    *((_QWORD *)v34 + 4) = &off_10090F400;
    v35 = (_QWORD *)swift_allocObject(&unk_100918218, 56, 7);
    *(_QWORD *)v34 = v35;
    v35[2] = v27;
    v35[3] = v28;
    v35[4] = v30;
    v35[5] = v32;
    v35[6] = v33;

    v37.receiver = v25;
    v37.super_class = ObjectType;
    v36 = objc_msgSendSuper2(&v37, "init");
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(v38);
    _s5Books15CurrentPageViewVwxx_0(v39);
    return v36;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100610FDC(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  Class v21;
  char *v22;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;

  v26 = a4;
  v27 = a8;
  v25 = a3;
  v13 = *(_QWORD *)(a7 - 8);
  __chkstk_darwin(a1);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (char *)objc_allocWithZone(v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, a1, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, a7);
  return sub_100610D20((uint64_t)v20, (uint64_t)v15, v25, v26, v22, a6, a7, v27, a9);
}

uint64_t sub_1006110EC()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100611130()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10061115C()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t result;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 16);
  if (v1)
    return v1(0);
  return result;
}

uint64_t sub_100611188()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

double sub_1006111BC(uint64_t a1)
{
  uint64_t v1;

  return sub_100608C78(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1006111C8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  if (*(_QWORD *)(v0 + 48))
    swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100611204(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc(dword_1009F11A4);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1001FC2C4;
  return sub_100608DD8(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100611290()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006112B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 64, 7);
}

double sub_1006112F0(uint64_t a1)
{
  uint64_t v1;

  return sub_10060B3C0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t sub_100611300()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100611334(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009F11C4);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000AE34;
  return sub_10060B4D8(a1, v4, v5, v6, v7, v8);
}

void sub_1006113C8()
{
  qword_100A1EF38 = (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_1006113DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v0 = sub_10004CFD4(&qword_1009F1378);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10061B4D8();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002CLL, 0x80000001007D9B00, &type metadata for AudiobookSleepTimerIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AudiobookSleepTimerIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000023, 0x80000001007D9B30, &type metadata for AudiobookSleepTimerIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AudiobookSleepTimerIntent, v4);
  v6(v3, v0);
  v8 = sub_10004CFD4(&qword_1009F1388);
  v9 = swift_allocObject(v8, 48, 7);
  *(_OWORD *)(v9 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v9 + 32) = v5;
  *(_QWORD *)(v9 + 40) = v7;
  v10 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t sub_10061153C(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_100735338, (uint64_t (*)(void))sub_100371B54, (uint64_t (*)(__n128))sub_10061B4D8, (uint64_t)sub_100611560);
}

uint64_t sub_100611560()
{
  return sub_1006189F0();
}

uint64_t sub_10061157C(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  Swift::String v21;
  void (*v22)(char *, uint64_t);
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  Swift::String v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  Swift::String v39;
  uint64_t v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  Swift::String v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v77 = sub_10004CFD4(&qword_1009F1378);
  v75 = *(void (**)(char *, uint64_t))(v77 - 8);
  __chkstk_darwin(v77);
  v3 = (char *)&v67 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009F1380);
  __chkstk_darwin(v4);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10061B4D8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for AudiobookSleepTimerIntent, v7);
  v8._countAndFlagsBits = 0xD000000000000016;
  v8._object = (void *)0x80000001007D9AA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100735360);
  v76 = sub_10061B578(&qword_1009F1358, &qword_1009F1360, (void (*)(void))sub_10061B5DC);
  v78 = a1;
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v76);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v4, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AudiobookSleepTimerIntent, v7);
  v13 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AudiobookSleepTimerIntent, v7);
  v14 = (void (*)(char *, uint64_t))*((_QWORD *)v75 + 1);
  v74 = v13;
  v75 = v14;
  v15 = v77;
  v14(v3, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(35, 1, &type metadata for AudiobookSleepTimerIntent, v7);
  v16._countAndFlagsBits = 0xD000000000000016;
  v16._object = (void *)0x80000001007D9AA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100735360);
  v18 = v76;
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v17, v76);
  v20 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0x696D2065726F6D20;
  v21._object = (void *)0xED0000736574756ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AudiobookSleepTimerIntent, v7);
  v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AudiobookSleepTimerIntent, v7);
  v22 = v75;
  v75(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for AudiobookSleepTimerIntent, v7);
  v23._countAndFlagsBits = 0xD000000000000010;
  v23._object = (void *)0x80000001007D9AC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = swift_getKeyPath(&unk_100735360);
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v24, v18);
  v26 = swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v4, v26);
  swift_release(v25);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AudiobookSleepTimerIntent, v7);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AudiobookSleepTimerIntent, v7);
  v28 = v77;
  v22(v3, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for AudiobookSleepTimerIntent, v7);
  v29._countAndFlagsBits = 0xD000000000000010;
  v29._object = (void *)0x80000001007D9AC0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v30 = swift_getKeyPath(&unk_100735360);
  v31 = v76;
  v32 = _AssistantIntent.IntentProjection.subscript.getter(v30, v76);
  v33 = swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v32, v4, v33);
  swift_release(v32);
  v34._countAndFlagsBits = 0x696D2065726F6D20;
  v34._object = (void *)0xED0000736574756ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AudiobookSleepTimerIntent, v7);
  v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AudiobookSleepTimerIntent, v7);
  v22(v3, v28);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for AudiobookSleepTimerIntent, v7);
  v35._countAndFlagsBits = 0x6F622065736F6C43;
  v35._object = (void *)0xEE00206E69206B6FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  v36 = swift_getKeyPath(&unk_100735360);
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v36, v31);
  v38 = swift_release(v36);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v4, v38);
  swift_release(v37);
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AudiobookSleepTimerIntent, v7);
  v70 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AudiobookSleepTimerIntent, v7);
  v40 = v77;
  v22(v3, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1, &type metadata for AudiobookSleepTimerIntent, v7);
  v41._countAndFlagsBits = 0x6F622065736F6C43;
  v41._object = (void *)0xEE00206E69206B6FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath(&unk_100735360);
  v43 = v76;
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v42, v76);
  v45 = swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v4, v45);
  swift_release(v44);
  v46._countAndFlagsBits = 0x696D2065726F6D20;
  v46._object = (void *)0xED0000736574756ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AudiobookSleepTimerIntent, v7);
  v69 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AudiobookSleepTimerIntent, v7);
  v75(v3, v40);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(27, 1, &type metadata for AudiobookSleepTimerIntent, v7);
  v47._countAndFlagsBits = 0xD00000000000001BLL;
  v67 = 0xD00000000000001BLL;
  v47._object = (void *)0x80000001007D9AE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  v48 = swift_getKeyPath(&unk_100735360);
  v49 = _AssistantIntent.IntentProjection.subscript.getter(v48, v43);
  v50 = swift_release(v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v49, v4, v50);
  swift_release(v49);
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AudiobookSleepTimerIntent, v7);
  v68 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AudiobookSleepTimerIntent, v7);
  v52 = v77;
  v53 = v75;
  v75(v3, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(40, 1, &type metadata for AudiobookSleepTimerIntent, v7);
  v54._countAndFlagsBits = v67;
  v54._object = (void *)0x80000001007D9AE0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  v55 = swift_getKeyPath(&unk_100735360);
  v56 = _AssistantIntent.IntentProjection.subscript.getter(v55, v76);
  v57 = swift_release(v55);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v56, v4, v57);
  swift_release(v56);
  v58._countAndFlagsBits = 0x696D2065726F6D20;
  v58._object = (void *)0xED0000736574756ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for AudiobookSleepTimerIntent, v7);
  v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for AudiobookSleepTimerIntent, v7);
  v53(v3, v52);
  v60 = sub_10004CFD4(&qword_1009F1388);
  v61 = swift_allocObject(v60, 96, 7);
  *(_OWORD *)(v61 + 16) = xmmword_100711990;
  v62 = v73;
  *(_QWORD *)(v61 + 32) = v74;
  *(_QWORD *)(v61 + 40) = v62;
  v63 = v71;
  *(_QWORD *)(v61 + 48) = v72;
  *(_QWORD *)(v61 + 56) = v63;
  v64 = v69;
  *(_QWORD *)(v61 + 64) = v70;
  *(_QWORD *)(v61 + 72) = v64;
  *(_QWORD *)(v61 + 80) = v68;
  *(_QWORD *)(v61 + 88) = v59;
  v65 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v61);
  return v65;
}

uint64_t sub_100611DA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = sub_10004CFD4(&qword_1009F1360);
  __chkstk_darwin(v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v9 - v6;
  sub_10061B628(a1, (uint64_t)&v9 - v6);
  sub_10061B628((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter(v4);
  return sub_10061B670((uint64_t)v7);
}

uint64_t sub_100611E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100735338);
  v5 = sub_100371B54();
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_10061B4D8();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_100611FE8, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v9 = *(void (**)(char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  v10 = swift_getKeyPath(&unk_100735360);
  v11 = sub_10061B578(&qword_1009F1358, &qword_1009F1360, (void (*)(void))sub_10061B5DC);
  v12 = _AssistantIntent.IntentProjection.subscript.getter(v10, v11);
  swift_release(v10);
  _AssistantIntent.Value.init<A>(for:builder:)(v12, sub_100611FFC, 0, v7);
  v13 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  v9(v3, v0);
  v14 = sub_10004CFD4(&qword_1009F11F0);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v15 + 32) = v8;
  *(_QWORD *)(v15 + 40) = v13;
  v16 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v15);
  return v16;
}

uint64_t sub_100611FE8()
{
  return sub_1006189F0();
}

uint64_t sub_100611FFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6E6F636573203036, 0xEA00000000007364);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6574756E694D2032, 0xE900000000000073);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x74756E694D203531, 0xEA00000000007365);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x72756F482031, 0xE600000000000000);
  v4 = sub_10004CFD4(&qword_1009F11F8);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1007147F0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_1006120EC(uint64_t a1, uint64_t a2)
{
  return sub_1001F9E00(a1, a2, &qword_1009CEA60, &qword_100A1EF38, (uint64_t)sub_1006113C8);
}

void sub_100612108()
{
  qword_100A1EF40 = (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_10061211C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_10004CFD4(&qword_1009F1338);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009F1348);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100066120();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(7, 1, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v7._countAndFlagsBits = 0x20656C62616E45;
  v7._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100735310);
  v9 = sub_1003A02A4();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v14._countAndFlagsBits = 0x206E6F206E727554;
  v14._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_100735310);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v20._countAndFlagsBits = 0x206E727554;
  v20._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_100735310);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 7237408;
  v24._object = (void *)0xE300000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v19(v2, v13);
  v26 = sub_10004CFD4(&qword_1009F1340);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100712B60;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_1006124A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1007352E8);
  v5 = sub_100008DB0(&qword_1009F1318, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_100066120();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006125C8, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_10004CFD4(&qword_1009F11F0);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_1006125C8()
{
  return sub_1006189F0();
}

uint64_t sub_1006125DC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  uint64_t v13;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  Swift::String v18;
  void (*v19)(char *, uint64_t);
  Swift::String v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_10004CFD4(&qword_1009F1338);
  v32 = *(_QWORD *)(v0 - 8);
  v33 = v0;
  __chkstk_darwin(v0);
  v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009F1348);
  __chkstk_darwin(v3);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100066120();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v7._countAndFlagsBits = 0x20656C6261736944;
  v7._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_100735310);
  v9 = sub_1003A02A4();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v34 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v13 = v33;
  v31 = *(void (**)(char *, uint64_t))(v32 + 8);
  v31(v2, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v14._countAndFlagsBits = 0x66666F206E727554;
  v14._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  v15 = swift_getKeyPath(&unk_100735310);
  v16 = _AssistantIntent.IntentProjection.subscript.getter(v15, v9);
  v17 = swift_release(v15);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v16, v3, v17);
  swift_release(v16);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v32 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v19 = v31;
  v31(v2, v13);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v20._countAndFlagsBits = 0x206E727554;
  v20._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v21 = swift_getKeyPath(&unk_100735310);
  v22 = _AssistantIntent.IntentProjection.subscript.getter(v21, v9);
  v23 = swift_release(v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v22, v3, v23);
  swift_release(v22);
  v24._countAndFlagsBits = 1717989152;
  v24._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for BookReaderChangePageNavigationIntent, v6);
  v19(v2, v13);
  v26 = sub_10004CFD4(&qword_1009F1340);
  v27 = swift_allocObject(v26, 56, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100712B60;
  v28 = v32;
  *(_QWORD *)(v27 + 32) = v34;
  *(_QWORD *)(v27 + 40) = v28;
  *(_QWORD *)(v27 + 48) = v25;
  v29 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v27);
  return v29;
}

uint64_t sub_100612964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1007352E8);
  v5 = sub_100008DB0(&qword_1009F1318, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_100066120();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_100612A8C, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_10004CFD4(&qword_1009F11F0);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_100612A8C()
{
  return sub_1006189F0();
}

uint64_t sub_100612AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v0 = sub_10004CFD4(&qword_1009F1338);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100066120();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000020, 0x80000001007D99D0, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001007D9A00, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001DLL, 0x80000001007D9A20, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000024, 0x80000001007D9A40, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000022, 0x80000001007D9A70, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v6(v3, v0);
  v11 = sub_10004CFD4(&qword_1009F1340);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10071B8B0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)(v12 + 48) = v8;
  *(_QWORD *)(v12 + 56) = v9;
  *(_QWORD *)(v12 + 64) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_100612CE0(uint64_t a1)
{
  return sub_100612CF4(a1, (uint64_t)sub_1006125C8, (uint64_t)sub_100612E88);
}

uint64_t sub_100612CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v5 = type metadata accessor for _AssistantIntent.Value(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_1007352E8);
  v10 = sub_100008DB0(&qword_1009F1318, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  swift_release(KeyPath);
  v12 = sub_100066120();
  _AssistantIntent.Value.init<A>(for:builder:)(v11, a2, 0, v12);
  v13 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v8);
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  v15 = swift_getKeyPath(&unk_100735310);
  v16 = sub_1003A02A4();
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v15, v16);
  swift_release(v15);
  _AssistantIntent.Value.init<A>(for:builder:)(v17, a3, 0, v12);
  v18 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v8);
  v14(v8, v5);
  v19 = sub_10004CFD4(&qword_1009F11F0);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v20 + 32) = v13;
  *(_QWORD *)(v20 + 40) = v18;
  v21 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v20);
  return v21;
}

uint64_t sub_100612E88()
{
  return sub_1006189F0();
}

uint64_t sub_100612EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v0 = sub_10004CFD4(&qword_1009F1338);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100066120();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000020, 0x80000001007D98F0, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v16 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001007D9920, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000013, 0x80000001007D9940, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000014, 0x80000001007D9960, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001ELL, 0x80000001007D9980, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000022, 0x80000001007D99A0, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v5(v3, v0);
  v11 = sub_10004CFD4(&qword_1009F1340);
  v12 = swift_allocObject(v11, 80, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1007133E0;
  *(_QWORD *)(v12 + 32) = v16;
  *(_QWORD *)(v12 + 40) = v6;
  *(_QWORD *)(v12 + 48) = v7;
  *(_QWORD *)(v12 + 56) = v8;
  *(_QWORD *)(v12 + 64) = v9;
  *(_QWORD *)(v12 + 72) = v10;
  v13 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v13;
}

uint64_t sub_100613130(uint64_t a1)
{
  return sub_100612CF4(a1, (uint64_t)sub_1006125C8, (uint64_t)sub_100613144);
}

uint64_t sub_100613144()
{
  return sub_1006189F0();
}

uint64_t sub_100613160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_10004CFD4(&qword_1009F1338);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100066120();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000015, 0x80000001007D9890, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000012, 0x80000001007D98B0, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000015, 0x80000001007D98D0, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v6(v3, v0);
  v9 = sub_10004CFD4(&qword_1009F1340);
  v10 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100712B60;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v8;
  v11 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_10061330C(uint64_t a1)
{
  return sub_100612CF4(a1, (uint64_t)sub_100613320, (uint64_t)sub_100613144);
}

uint64_t sub_100613320()
{
  return sub_1006189F0();
}

uint64_t sub_100613334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_10004CFD4(&qword_1009F1338);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100066120();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000028, 0x80000001007D9860, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_10004CFD4(&qword_1009F1340);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100613440(uint64_t a1)
{
  return sub_100612CF4(a1, (uint64_t)sub_100612A8C, (uint64_t)sub_100613144);
}

uint64_t sub_100613454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_10004CFD4(&qword_1009F1338);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100066120();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000028, 0x80000001007D9830, &type metadata for BookReaderChangePageNavigationIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderChangePageNavigationIntent, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_10004CFD4(&qword_1009F1340);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100613560(uint64_t a1)
{
  return sub_100612CF4(a1, (uint64_t)sub_100612A8C, (uint64_t)sub_100612E88);
}

uint64_t sub_100613574(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  Swift::String v21;
  uint64_t v22;
  Swift::String v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __n128 v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __n128 v33;
  Swift::String v34;
  void (*v35)(char *, uint64_t);
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  Swift::String v45;
  uint64_t v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  __n128 v56;
  Swift::String v57;
  Swift::String v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  Swift::String v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  Swift::String v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  Swift::String v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);

  v91 = sub_10004CFD4(&qword_1009F1320);
  v2 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v4 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009F1328);
  __chkstk_darwin(v5);
  v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100204890();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for BookReaderChangeThemeIntent, v8);
  v9._object = (void *)0x80000001007D9790;
  v9._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_1007352C0);
  v11 = sub_100204010();
  v89 = a1;
  v90 = v11;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderChangeThemeIntent, v8);
  v88 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderChangeThemeIntent, v8);
  v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16 = v91;
  v15(v4, v91);
  v92 = v15;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for BookReaderChangeThemeIntent, v8);
  v17._countAndFlagsBits = 0x6B6F6F6220747550;
  v17._object = (void *)0xEC000000206E6F20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  v18 = swift_getKeyPath(&unk_1007352C0);
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v90);
  v20 = swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v5, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderChangeThemeIntent, v8);
  v87 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderChangeThemeIntent, v8);
  v22 = v16;
  v15(v4, v16);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for BookReaderChangeThemeIntent, v8);
  v23._object = (void *)0x80000001007D97B0;
  v23._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = swift_getKeyPath(&unk_1007352C0);
  v25 = v90;
  v26 = _AssistantIntent.IntentProjection.subscript.getter(v24, v90);
  v27 = swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v26, v5, v27);
  swift_release(v26);
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderChangeThemeIntent, v8);
  v86 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderChangeThemeIntent, v8);
  v92(v4, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1, &type metadata for BookReaderChangeThemeIntent, v8);
  v29._countAndFlagsBits = 0x20796D20656B614DLL;
  v29._object = (void *)0xED0000206B6F6F62;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v30 = swift_getKeyPath(&unk_1007352C0);
  v31 = v25;
  v32 = _AssistantIntent.IntentProjection.subscript.getter(v30, v25);
  v33 = swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v32, v5, v33);
  swift_release(v32);
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderChangeThemeIntent, v8);
  v85 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderChangeThemeIntent, v8);
  v35 = v92;
  v92(v4, v91);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(4, 1, &type metadata for BookReaderChangeThemeIntent, v8);
  v36._countAndFlagsBits = 543519573;
  v36._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  v37 = swift_getKeyPath(&unk_1007352C0);
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v37, v31);
  v39 = swift_release(v37);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v5, v39);
  swift_release(v38);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderChangeThemeIntent, v8);
  v84 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderChangeThemeIntent, v8);
  v35(v4, v91);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for BookReaderChangeThemeIntent, v8);
  v41._countAndFlagsBits = 0xD000000000000013;
  v41._object = (void *)0x80000001007D97D0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath(&unk_1007352C0);
  v43 = _AssistantIntent.IntentProjection.subscript.getter(v42, v90);
  v44 = swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v43, v5, v44);
  swift_release(v43);
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderChangeThemeIntent, v8);
  v83 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderChangeThemeIntent, v8);
  v46 = v91;
  v92(v4, v91);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for BookReaderChangeThemeIntent, v8);
  v47._object = (void *)0x80000001007D97F0;
  v47._countAndFlagsBits = 0x1000000000000016;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v47);
  v48 = swift_getKeyPath(&unk_1007352C0);
  v49 = _AssistantIntent.IntentProjection.subscript.getter(v48, v90);
  v50 = swift_release(v48);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v49, v5, v50);
  swift_release(v49);
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v51);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderChangeThemeIntent, v8);
  v82 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderChangeThemeIntent, v8);
  v92(v4, v46);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for BookReaderChangeThemeIntent, v8);
  v52._countAndFlagsBits = 0x7420686374697753;
  v52._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  v53 = swift_getKeyPath(&unk_1007352C0);
  v54 = v90;
  v55 = _AssistantIntent.IntentProjection.subscript.getter(v53, v90);
  v56 = swift_release(v53);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v55, v5, v56);
  swift_release(v55);
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v57);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderChangeThemeIntent, v8);
  v81 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderChangeThemeIntent, v8);
  v92(v4, v91);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for BookReaderChangeThemeIntent, v8);
  v58._countAndFlagsBits = 0xD000000000000018;
  v58._object = (void *)0x80000001007D9810;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  v59 = swift_getKeyPath(&unk_1007352C0);
  v60 = _AssistantIntent.IntentProjection.subscript.getter(v59, v54);
  v61 = swift_release(v59);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v60, v5, v61);
  swift_release(v60);
  v62._countAndFlagsBits = 0;
  v62._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v62);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderChangeThemeIntent, v8);
  v80 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderChangeThemeIntent, v8);
  v63 = v91;
  v64 = v92;
  v92(v4, v91);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for BookReaderChangeThemeIntent, v8);
  v65._countAndFlagsBits = 543519573;
  v65._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v65);
  v66 = swift_getKeyPath(&unk_1007352C0);
  v67 = _AssistantIntent.IntentProjection.subscript.getter(v66, v54);
  v68 = swift_release(v66);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v67, v5, v68);
  swift_release(v67);
  v69._countAndFlagsBits = 0x6F6F6220726F6620;
  v69._object = (void *)0xEE0074786574206BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v69);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderChangeThemeIntent, v8);
  v70 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderChangeThemeIntent, v8);
  v64(v4, v63);
  v71 = sub_10004CFD4(&qword_1009F1330);
  v72 = swift_allocObject(v71, 112, 7);
  *(_OWORD *)(v72 + 16) = xmmword_100735070;
  v73 = v87;
  *(_QWORD *)(v72 + 32) = v88;
  *(_QWORD *)(v72 + 40) = v73;
  v74 = v85;
  *(_QWORD *)(v72 + 48) = v86;
  *(_QWORD *)(v72 + 56) = v74;
  v75 = v83;
  *(_QWORD *)(v72 + 64) = v84;
  *(_QWORD *)(v72 + 72) = v75;
  v76 = v81;
  *(_QWORD *)(v72 + 80) = v82;
  *(_QWORD *)(v72 + 88) = v76;
  *(_QWORD *)(v72 + 96) = v80;
  *(_QWORD *)(v72 + 104) = v70;
  v77 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v72);
  return v77;
}

uint64_t sub_100613EA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100735298);
  v5 = sub_100008DB0(&qword_1009F1318, (uint64_t (*)(uint64_t))&type metadata accessor for ChangeOperation, (uint64_t)&protocol conformance descriptor for ChangeOperation);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_100204890();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_1006125C8, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_10004CFD4(&qword_1009F11F0);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_100613FD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  Swift::String v21;
  void (*v22)(char *, uint64_t);
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  Swift::String v27;
  uint64_t v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  Swift::String v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  Swift::String v52;
  void (*v53)(char *, uint64_t);
  Swift::String v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  Swift::String v58;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  Swift::String v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v93 = a1;
  v94 = sub_10004CFD4(&qword_1009F1300);
  v1 = *(_QWORD *)(v94 - 8);
  __chkstk_darwin(v94);
  v3 = (char *)&v81 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009F1308);
  __chkstk_darwin(v4);
  v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1003D7E94();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for UpdateBookSettingsIntent, v7);
  v8._object = (void *)0x80000001007D9790;
  v8._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100735270);
  v10 = sub_10061B578(&qword_1009F12F0, &qword_1009F12F8, (void (*)(void))sub_100204010);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for UpdateBookSettingsIntent, v7);
  v14 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for UpdateBookSettingsIntent, v7);
  v15 = *(void (**)(char *, uint64_t))(v1 + 8);
  v90 = v14;
  v91 = v15;
  v16 = v94;
  v15(v3, v94);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for UpdateBookSettingsIntent, v7);
  v17._countAndFlagsBits = 0x6B6F6F6220747550;
  v17._object = (void *)0xEC000000206E6F20;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  v18 = swift_getKeyPath(&unk_100735270);
  v92 = v10;
  v19 = _AssistantIntent.IntentProjection.subscript.getter(v18, v10);
  v20 = swift_release(v18);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for UpdateBookSettingsIntent, v7);
  v89 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for UpdateBookSettingsIntent, v7);
  v22 = v91;
  v91(v3, v16);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(21, 1, &type metadata for UpdateBookSettingsIntent, v7);
  v23._object = (void *)0x80000001007D97B0;
  v23._countAndFlagsBits = 0xD000000000000015;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = swift_getKeyPath(&unk_100735270);
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v24, v10);
  v26 = swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v4, v26);
  swift_release(v25);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for UpdateBookSettingsIntent, v7);
  v88 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for UpdateBookSettingsIntent, v7);
  v28 = v94;
  v22(v3, v94);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(13, 1, &type metadata for UpdateBookSettingsIntent, v7);
  v29._countAndFlagsBits = 0x20796D20656B614DLL;
  v29._object = (void *)0xED0000206B6F6F62;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v30 = swift_getKeyPath(&unk_100735270);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v92);
  v32 = swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v4, v32);
  swift_release(v31);
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for UpdateBookSettingsIntent, v7);
  v87 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for UpdateBookSettingsIntent, v7);
  v34 = v28;
  v35 = v91;
  v91(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(4, 1, &type metadata for UpdateBookSettingsIntent, v7);
  v36._countAndFlagsBits = 543519573;
  v36._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  v37 = swift_getKeyPath(&unk_100735270);
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v37, v92);
  v39 = swift_release(v37);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v4, v39);
  swift_release(v38);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for UpdateBookSettingsIntent, v7);
  v86 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for UpdateBookSettingsIntent, v7);
  v35(v3, v94);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for UpdateBookSettingsIntent, v7);
  v41._countAndFlagsBits = 0xD000000000000013;
  v41._object = (void *)0x80000001007D97D0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath(&unk_100735270);
  v43 = v92;
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v42, v92);
  v45 = swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v4, v45);
  swift_release(v44);
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for UpdateBookSettingsIntent, v7);
  v85 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for UpdateBookSettingsIntent, v7);
  v47 = v94;
  v91(v3, v94);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for UpdateBookSettingsIntent, v7);
  v48._object = (void *)0x80000001007D97F0;
  v48._countAndFlagsBits = 0x1000000000000016;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v49 = swift_getKeyPath(&unk_100735270);
  v50 = _AssistantIntent.IntentProjection.subscript.getter(v49, v43);
  v51 = swift_release(v49);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v50, v4, v51);
  swift_release(v50);
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for UpdateBookSettingsIntent, v7);
  v84 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for UpdateBookSettingsIntent, v7);
  v53 = v91;
  v91(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for UpdateBookSettingsIntent, v7);
  v54._countAndFlagsBits = 0x7420686374697753;
  v54._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v54);
  v55 = swift_getKeyPath(&unk_100735270);
  v56 = _AssistantIntent.IntentProjection.subscript.getter(v55, v92);
  v57 = swift_release(v55);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v56, v4, v57);
  swift_release(v56);
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v58);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for UpdateBookSettingsIntent, v7);
  v83 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for UpdateBookSettingsIntent, v7);
  v53(v3, v94);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(24, 1, &type metadata for UpdateBookSettingsIntent, v7);
  v59._countAndFlagsBits = 0xD000000000000018;
  v59._object = (void *)0x80000001007D9810;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v59);
  v60 = swift_getKeyPath(&unk_100735270);
  v61 = v92;
  v62 = _AssistantIntent.IntentProjection.subscript.getter(v60, v92);
  v63 = swift_release(v60);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v62, v4, v63);
  swift_release(v62);
  v64._countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v64);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for UpdateBookSettingsIntent, v7);
  v82 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for UpdateBookSettingsIntent, v7);
  v65 = v94;
  v66 = v91;
  v91(v3, v94);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(18, 1, &type metadata for UpdateBookSettingsIntent, v7);
  v67._countAndFlagsBits = 543519573;
  v67._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v67);
  v68 = swift_getKeyPath(&unk_100735270);
  v69 = _AssistantIntent.IntentProjection.subscript.getter(v68, v61);
  v70 = swift_release(v68);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v69, v4, v70);
  swift_release(v69);
  v71._countAndFlagsBits = 0x6F6F6220726F6620;
  v71._object = (void *)0xEE0074786574206BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v71);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for UpdateBookSettingsIntent, v7);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for UpdateBookSettingsIntent, v7);
  v66(v3, v65);
  v73 = sub_10004CFD4(&qword_1009F1310);
  v74 = swift_allocObject(v73, 112, 7);
  *(_OWORD *)(v74 + 16) = xmmword_100735070;
  v75 = v89;
  *(_QWORD *)(v74 + 32) = v90;
  *(_QWORD *)(v74 + 40) = v75;
  v76 = v87;
  *(_QWORD *)(v74 + 48) = v88;
  *(_QWORD *)(v74 + 56) = v76;
  v77 = v85;
  *(_QWORD *)(v74 + 64) = v86;
  *(_QWORD *)(v74 + 72) = v77;
  v78 = v83;
  *(_QWORD *)(v74 + 80) = v84;
  *(_QWORD *)(v74 + 88) = v78;
  *(_QWORD *)(v74 + 96) = v82;
  *(_QWORD *)(v74 + 104) = v72;
  v79 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v74);
  return v79;
}

uint64_t sub_100614914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100735270);
  v5 = sub_10061B578(&qword_1009F12F0, &qword_1009F12F8, (void (*)(void))sub_100204010);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_1003D7E94();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_100614A3C, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_10004CFD4(&qword_1009F11F0);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_100614A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C616E696769724FLL, 0xE800000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7465697551, 0xE500000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7265706150, 0xE500000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1684827970, 0xE400000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1835819331, 0xE400000000000000);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7375636F46, 0xE500000000000000);
  v6 = sub_10004CFD4(&qword_1009F11F8);
  v7 = swift_allocObject(v6, 80, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1007133E0;
  *(_QWORD *)(v7 + 32) = v0;
  *(_QWORD *)(v7 + 40) = v1;
  *(_QWORD *)(v7 + 48) = v2;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v5;
  v8 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100614B40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  void (*v26)(char *, uint64_t);
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  Swift::String v36;
  Swift::String v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  __n128 v41;
  Swift::String v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;

  v67 = sub_10004CFD4(&qword_1009F12D8);
  v2 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v4 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009F12E8);
  __chkstk_darwin(v5);
  v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100483970();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v9._countAndFlagsBits = 2125639;
  v9._object = (void *)0xE300000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_100735248);
  v11 = sub_100482B30();
  v64 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 0x65676170206120;
  v14._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v66 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15 = v67;
  v66(v4, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v16._countAndFlagsBits = 0x206E727554;
  v16._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100735248);
  v65 = v11;
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v11);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v5, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0x65676170206120;
  v20._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v66(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v21._countAndFlagsBits = 0x2065676150;
  v21._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100735248);
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v11);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v5, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v26 = v66;
  v66(v4, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath(&unk_100735248);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v65);
  v30 = swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v5, v30);
  swift_release(v29);
  v31._countAndFlagsBits = 0x6567617020;
  v31._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v60 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v26(v4, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v32._countAndFlagsBits = 0x206F742065766F4DLL;
  v32._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  v33 = swift_getKeyPath(&unk_100735248);
  v34 = _AssistantIntent.IntentProjection.subscript.getter(v33, v65);
  v35 = swift_release(v33);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v34, v5, v35);
  swift_release(v34);
  v36._countAndFlagsBits = 0x6567617020;
  v36._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v26(v4, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(12, 1, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v37._countAndFlagsBits = 0x2065766F4DLL;
  v37._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  v38 = swift_getKeyPath(&unk_100735248);
  v39 = v65;
  v40 = _AssistantIntent.IntentProjection.subscript.getter(v38, v65);
  v41 = swift_release(v38);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v40, v5, v41);
  swift_release(v40);
  v42._countAndFlagsBits = 0x65676170206120;
  v42._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v58 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v44 = v66;
  v43 = v67;
  v66(v4, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(17, 1, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v45._countAndFlagsBits = 0x206F742070696C46;
  v45._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v45);
  v46 = swift_getKeyPath(&unk_100735248);
  v47 = _AssistantIntent.IntentProjection.subscript.getter(v46, v39);
  v48 = swift_release(v46);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v47, v5, v48);
  swift_release(v47);
  v49._countAndFlagsBits = 0x6567617020;
  v49._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v49);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v50 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for BookReaderNavigatePageInBookIntent, v8);
  v44(v4, v43);
  v51 = sub_10004CFD4(&qword_1009F12E0);
  v52 = swift_allocObject(v51, 88, 7);
  *(_OWORD *)(v52 + 16) = xmmword_100723930;
  v53 = v62;
  *(_QWORD *)(v52 + 32) = v63;
  *(_QWORD *)(v52 + 40) = v53;
  v54 = v60;
  *(_QWORD *)(v52 + 48) = v61;
  *(_QWORD *)(v52 + 56) = v54;
  v55 = v58;
  *(_QWORD *)(v52 + 64) = v59;
  *(_QWORD *)(v52 + 72) = v55;
  *(_QWORD *)(v52 + 80) = v50;
  v56 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v52);
  return v56;
}

uint64_t sub_100615210(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_100735248, (uint64_t (*)(void))sub_100482B30, (uint64_t (*)(__n128))sub_100483970, (uint64_t)sub_100615358);
}

uint64_t sub_100615234(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(__n128), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v9 = type metadata accessor for _AssistantIntent.Value(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(a2);
  v14 = a3();
  v15 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v14);
  v16 = swift_release(KeyPath);
  v17 = a4(v16);
  _AssistantIntent.Value.init<A>(for:builder:)(v15, a5, 0, v17);
  v18 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v19 = sub_10004CFD4(&qword_1009F11F0);
  v20 = swift_allocObject(v19, 40, 7);
  *(_OWORD *)(v20 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v20 + 32) = v18;
  v21 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v20);
  return v21;
}

uint64_t sub_100615358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x73756F6976657270, 0xE800000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1954047342, 0xE400000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x64726177726F66, 0xE700000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x647261776B636162, 0xE800000000000000);
  v4 = sub_10004CFD4(&qword_1009F11F8);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1007147F0;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v1;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v3;
  v6 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v5);
  return v6;
}

uint64_t sub_10061542C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_10004CFD4(&qword_1009F12D8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100483970();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x656874206E727554, 0xED00006567617020, &type metadata for BookReaderNavigatePageInBookIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for BookReaderNavigatePageInBookIntent, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_10004CFD4(&qword_1009F12E0);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100615540(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_100735248, (uint64_t (*)(void))sub_100482B30, (uint64_t (*)(__n128))sub_100483970, (uint64_t)sub_100615564);
}

uint64_t sub_100615564()
{
  return sub_1006189F0();
}

uint64_t sub_100615574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = sub_10004CFD4(&qword_1009F12C8);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1004DF620();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x20796D206E65704FLL, 0xEC0000006B6F6F62, &type metadata for OpenMostRecentBookIntent, v4);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMostRecentBookIntent, v4);
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000018, 0x80000001007D9690, &type metadata for OpenMostRecentBookIntent, v4);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMostRecentBookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000016, 0x80000001007D96B0, &type metadata for OpenMostRecentBookIntent, v4);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMostRecentBookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000013, 0x80000001007D96D0, &type metadata for OpenMostRecentBookIntent, v4);
  v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMostRecentBookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000010, 0x80000001007D96F0, &type metadata for OpenMostRecentBookIntent, v4);
  v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMostRecentBookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x80000001007D9710, &type metadata for OpenMostRecentBookIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMostRecentBookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x80000001007D9730, &type metadata for OpenMostRecentBookIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMostRecentBookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000018, 0x80000001007D9750, &type metadata for OpenMostRecentBookIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMostRecentBookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007D9770, &type metadata for OpenMostRecentBookIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenMostRecentBookIntent, v4);
  v5(v3, v0);
  v11 = sub_10004CFD4(&qword_1009F12D0);
  v12 = swift_allocObject(v11, 104, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10070CC80;
  v13 = v19;
  *(_QWORD *)(v12 + 32) = v20;
  *(_QWORD *)(v12 + 40) = v13;
  v14 = v17;
  *(_QWORD *)(v12 + 48) = v18;
  *(_QWORD *)(v12 + 56) = v14;
  *(_QWORD *)(v12 + 64) = v6;
  *(_QWORD *)(v12 + 72) = v7;
  *(_QWORD *)(v12 + 80) = v8;
  *(_QWORD *)(v12 + 88) = v9;
  *(_QWORD *)(v12 + 96) = v10;
  v15 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v15;
}

uint64_t sub_1006158F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  void (*v32)(char *, uint64_t);
  Swift::String v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  Swift::String v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;

  v68 = a1;
  v67 = sub_10004CFD4(&qword_1009F12B0);
  v1 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009F12B8);
  __chkstk_darwin(v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100565DB8();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for OpenSpecificBookIntent, v7);
  v8._countAndFlagsBits = 0x6F6F62206E65704FLL;
  v8._object = (void *)0xEA0000000000206BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100735220);
  v10 = sub_1001F8AB0();
  v65 = v10;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenSpecificBookIntent, v7);
  v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenSpecificBookIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v67;
  v14(v3, v67);
  v66 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for OpenSpecificBookIntent, v7);
  v16._countAndFlagsBits = 0x206E65704FLL;
  v16._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100735220);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenSpecificBookIntent, v7);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenSpecificBookIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for OpenSpecificBookIntent, v7);
  v21._countAndFlagsBits = 0x6572207472617453;
  v21._object = (void *)0xEE0020676E696461;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100735220);
  v23 = v65;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v65);
  v25 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4, v25);
  swift_release(v24);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenSpecificBookIntent, v7);
  v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenSpecificBookIntent, v7);
  v66(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for OpenSpecificBookIntent, v7);
  v27._countAndFlagsBits = 0x2064616552;
  v27._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath(&unk_100735220);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v23);
  v30 = swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v4, v30);
  swift_release(v29);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenSpecificBookIntent, v7);
  v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenSpecificBookIntent, v7);
  v32 = v66;
  v66(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for OpenSpecificBookIntent, v7);
  v33._countAndFlagsBits = 0x7420746E61772049;
  v33._object = (void *)0xEF2064616572206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(&unk_100735220);
  v35 = v65;
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v34, v65);
  v37 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v4, v37);
  swift_release(v36);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenSpecificBookIntent, v7);
  v60 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenSpecificBookIntent, v7);
  v32(v3, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for OpenSpecificBookIntent, v7);
  v39._countAndFlagsBits = 0x7261747320746547;
  v39._object = (void *)0xEF206E6F20646574;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  v40 = swift_getKeyPath(&unk_100735220);
  v41 = _AssistantIntent.IntentProjection.subscript.getter(v40, v35);
  v42 = swift_release(v40);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v41, v4, v42);
  swift_release(v41);
  v43._countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenSpecificBookIntent, v7);
  v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenSpecificBookIntent, v7);
  v44 = v66;
  v45 = v67;
  v66(v3, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for OpenSpecificBookIntent, v7);
  v46._object = (void *)0x80000001007D9670;
  v46._countAndFlagsBits = 0xD000000000000019;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v47 = swift_getKeyPath(&unk_100735220);
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v47, v35);
  v49 = swift_release(v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v4, v49);
  swift_release(v48);
  v50._countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenSpecificBookIntent, v7);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenSpecificBookIntent, v7);
  v44(v3, v45);
  v52 = sub_10004CFD4(&qword_1009F12C0);
  v53 = swift_allocObject(v52, 88, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100723930;
  v54 = v63;
  *(_QWORD *)(v53 + 32) = v64;
  *(_QWORD *)(v53 + 40) = v54;
  v55 = v61;
  *(_QWORD *)(v53 + 48) = v62;
  *(_QWORD *)(v53 + 56) = v55;
  v56 = v59;
  *(_QWORD *)(v53 + 64) = v60;
  *(_QWORD *)(v53 + 72) = v56;
  *(_QWORD *)(v53 + 80) = v51;
  v57 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v53);
  return v57;
}

__n128 sub_100615FD4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _QWORD v9[2];
  char v10;
  __n128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;

  IntentParameter.wrappedValue.getter(v9);
  v2 = v9[1];
  v3 = v10;
  v4 = v14;
  result = v11;
  v6 = v12;
  v7 = v13;
  v8 = v15;
  *(_QWORD *)a1 = v9[0];
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(__n128 *)(a1 + 24) = result;
  *(_OWORD *)(a1 + 40) = v6;
  *(_OWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 72) = v4;
  *(_OWORD *)(a1 + 80) = v8;
  return result;
}

uint64_t sub_10061603C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *a1;
  v2 = a1[1];
  v3 = *((_BYTE *)a1 + 16);
  v5 = a1[3];
  v4 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = a1[8];
  v11 = a1[9];
  v10 = a1[10];
  v12 = a1[11];
  v14[0] = v1;
  v14[1] = v2;
  v15 = v3;
  v16 = v5;
  v17 = v4;
  v18 = v6;
  v19 = v7;
  v20 = v8;
  v21 = v9;
  v22 = v11;
  v23 = v10;
  v24 = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v2);
  swift_retain(v5);
  swift_retain(v4);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_retain(v11);
  return IntentParameter.wrappedValue.setter(v14);
}

uint64_t sub_100616104(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_100735220, (uint64_t (*)(void))sub_1001F8AB0, (uint64_t (*)(__n128))sub_100565DB8, (uint64_t)sub_100616128);
}

uint64_t sub_100616128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x80000001007D8CE0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x62626F4820656854, 0xEA00000000007469);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1701737796, 0xE400000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x64616F5220656854, 0xE800000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20646E6120726157, 0xED00006563616550);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6465766F6C6542, 0xE700000000000000);
  v6 = sub_10004CFD4(&qword_1009F11F8);
  v7 = swift_allocObject(v6, 80, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1007133E0;
  *(_QWORD *)(v7 + 32) = v0;
  *(_QWORD *)(v7 + 40) = v1;
  *(_QWORD *)(v7 + 48) = v2;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v5;
  v8 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100616254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v0 = sub_10004CFD4(&qword_1009F12A0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100524108();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000016, 0x80000001007D12A0, &type metadata for OpenTableOfContentsIntent, v4);
  v26 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000010, 0x80000001007D9480, &type metadata for OpenTableOfContentsIntent, v4);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000020, 0x80000001007D94A0, &type metadata for OpenTableOfContentsIntent, v4);
  v24 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001DLL, 0x80000001007D94D0, &type metadata for OpenTableOfContentsIntent, v4);
  v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x656874206E65704FLL, 0xEC000000434F5420, &type metadata for OpenTableOfContentsIntent, v4);
  v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000021, 0x80000001007D94F0, &type metadata for OpenTableOfContentsIntent, v4);
  v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000023, 0x80000001007D9520, &type metadata for OpenTableOfContentsIntent, v4);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001FLL, 0x80000001007D9550, &type metadata for OpenTableOfContentsIntent, v4);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001DLL, 0x80000001007D9570, &type metadata for OpenTableOfContentsIntent, v4);
  v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000020, 0x80000001007D9590, &type metadata for OpenTableOfContentsIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000025, 0x80000001007D95C0, &type metadata for OpenTableOfContentsIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000032, 0x80000001007D95F0, &type metadata for OpenTableOfContentsIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x100000000000003CLL, 0x80000001007D9630, &type metadata for OpenTableOfContentsIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTableOfContentsIntent, v4);
  v5(v3, v0);
  v11 = sub_10004CFD4(&qword_1009F12A8);
  v12 = swift_allocObject(v11, 136, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100735080;
  v13 = v25;
  *(_QWORD *)(v12 + 32) = v26;
  *(_QWORD *)(v12 + 40) = v13;
  v14 = v23;
  *(_QWORD *)(v12 + 48) = v24;
  *(_QWORD *)(v12 + 56) = v14;
  v15 = v21;
  *(_QWORD *)(v12 + 64) = v22;
  *(_QWORD *)(v12 + 72) = v15;
  v16 = v19;
  *(_QWORD *)(v12 + 80) = v20;
  *(_QWORD *)(v12 + 88) = v16;
  *(_QWORD *)(v12 + 96) = v6;
  *(_QWORD *)(v12 + 104) = v7;
  *(_QWORD *)(v12 + 112) = v8;
  *(_QWORD *)(v12 + 120) = v9;
  *(_QWORD *)(v12 + 128) = v10;
  v17 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v17;
}

uint64_t sub_1006166F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  Swift::String v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = sub_10004CFD4(&qword_1009F1288);
  v0 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009F1298);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1003A8BC0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for ChangeFontSizeIntent, v6);
  v7._countAndFlagsBits = 0x6F6F6220656B614DLL;
  v7._object = (void *)0xEF20746E6F66206BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_1007351F8);
  v9 = sub_1003CD1B0();
  v10 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v9);
  v11 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v10, v3, v11);
  swift_release(v10);
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v12);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ChangeFontSizeIntent, v6);
  v25 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ChangeFontSizeIntent, v6);
  v13 = *(void (**)(char *, uint64_t))(v0 + 8);
  v14 = v26;
  v13(v2, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for ChangeFontSizeIntent, v6);
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  v16 = swift_getKeyPath(&unk_1007351F8);
  v17 = _AssistantIntent.IntentProjection.subscript.getter(v16, v9);
  v18 = swift_release(v16);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v17, v3, v18);
  swift_release(v17);
  v19._countAndFlagsBits = 0x7478657420;
  v19._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v5, &type metadata for ChangeFontSizeIntent, v6);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v2, &type metadata for ChangeFontSizeIntent, v6);
  v13(v2, v14);
  v21 = sub_10004CFD4(&qword_1009F1290);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v22 + 32) = v25;
  *(_QWORD *)(v22 + 40) = v20;
  v23 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v22);
  return v23;
}

uint64_t sub_1006169B0(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_1007351F8, (uint64_t (*)(void))sub_1003CD1B0, (uint64_t (*)(__n128))sub_1003A8BC0, (uint64_t)sub_1006169D4);
}

uint64_t sub_1006169D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6573616572636E69, 0xE800000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6573616572636564, 0xE800000000000000);
  v2 = sub_10004CFD4(&qword_1009F11F8);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v3 + 32) = v0;
  *(_QWORD *)(v3 + 40) = v1;
  v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t sub_100616A70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v0 = sub_10004CFD4(&qword_1009F1288);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1003A8BC0();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000012, 0x80000001007B9DC0, &type metadata for ChangeFontSizeIntent, v4);
  v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x80000001007D9360, &type metadata for ChangeFontSizeIntent, v4);
  v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000010, 0x80000001007D9380, &type metadata for ChangeFontSizeIntent, v4);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000014, 0x80000001007D93A0, &type metadata for ChangeFontSizeIntent, v4);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001007D93C0, &type metadata for ChangeFontSizeIntent, v4);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000016, 0x80000001007D93E0, &type metadata for ChangeFontSizeIntent, v4);
  v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000015, 0x80000001007D9400, &type metadata for ChangeFontSizeIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x80000001007D9420, &type metadata for ChangeFontSizeIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000019, 0x80000001007D9440, &type metadata for ChangeFontSizeIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000018, 0x80000001007D9460, &type metadata for ChangeFontSizeIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  v11 = sub_10004CFD4(&qword_1009F1290);
  v12 = swift_allocObject(v11, 112, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100735070;
  v13 = v21;
  *(_QWORD *)(v12 + 32) = v22;
  *(_QWORD *)(v12 + 40) = v13;
  v14 = v19;
  *(_QWORD *)(v12 + 48) = v20;
  *(_QWORD *)(v12 + 56) = v14;
  *(_QWORD *)(v12 + 64) = v18;
  *(_QWORD *)(v12 + 72) = v6;
  *(_QWORD *)(v12 + 80) = v7;
  *(_QWORD *)(v12 + 88) = v8;
  *(_QWORD *)(v12 + 96) = v9;
  *(_QWORD *)(v12 + 104) = v10;
  v15 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v15;
}

uint64_t sub_100616E28(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_1007351F8, (uint64_t (*)(void))sub_1003CD1B0, (uint64_t (*)(__n128))sub_1003A8BC0, (uint64_t)sub_100616E4C);
}

uint64_t sub_100616E4C()
{
  return sub_1006189F0();
}

uint64_t sub_100616E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = sub_10004CFD4(&qword_1009F1288);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1003A8BC0();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000012, 0x80000001007D9260, &type metadata for ChangeFontSizeIntent, v4);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x2073692074786554, 0xEF676962206F6F74, &type metadata for ChangeFontSizeIntent, v4);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x80000001007D9280, &type metadata for ChangeFontSizeIntent, v4);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000017, 0x80000001007D92A0, &type metadata for ChangeFontSizeIntent, v4);
  v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000016, 0x80000001007D92C0, &type metadata for ChangeFontSizeIntent, v4);
  v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000010, 0x80000001007D92E0, &type metadata for ChangeFontSizeIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007D9300, &type metadata for ChangeFontSizeIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000015, 0x80000001007D9320, &type metadata for ChangeFontSizeIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000015, 0x80000001007D9340, &type metadata for ChangeFontSizeIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for ChangeFontSizeIntent, v4);
  v5(v3, v0);
  v11 = sub_10004CFD4(&qword_1009F1290);
  v12 = swift_allocObject(v11, 104, 7);
  *(_OWORD *)(v12 + 16) = xmmword_10070CC80;
  v13 = v19;
  *(_QWORD *)(v12 + 32) = v20;
  *(_QWORD *)(v12 + 40) = v13;
  v14 = v17;
  *(_QWORD *)(v12 + 48) = v18;
  *(_QWORD *)(v12 + 56) = v14;
  *(_QWORD *)(v12 + 64) = v6;
  *(_QWORD *)(v12 + 72) = v7;
  *(_QWORD *)(v12 + 80) = v8;
  *(_QWORD *)(v12 + 88) = v9;
  *(_QWORD *)(v12 + 96) = v10;
  v15 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v15;
}

uint64_t sub_1006171DC(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_1007351F8, (uint64_t (*)(void))sub_1003CD1B0, (uint64_t (*)(__n128))sub_1003A8BC0, (uint64_t)sub_100617200);
}

uint64_t sub_100617200()
{
  return sub_1006189F0();
}

uint64_t sub_100617218(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  void (*v32)(char *, uint64_t);
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  __n128 v42;
  Swift::String v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;

  v68 = a1;
  v67 = sub_10004CFD4(&qword_1009F1270);
  v1 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009F1280);
  __chkstk_darwin(v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1000689E0();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for OpenDefaultCollectionIntent, v7);
  v8._countAndFlagsBits = 0x20794D206E65704FLL;
  v8._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_1007351D0);
  v10 = sub_10032A408();
  v65 = v10;
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenDefaultCollectionIntent, v7);
  v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v67;
  v14(v3, v67);
  v66 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(16, 1, &type metadata for OpenDefaultCollectionIntent, v7);
  v16._countAndFlagsBits = 0x206E65704FLL;
  v16._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_1007351D0);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0x7463656C6C6F4320;
  v20._object = (void *)0xEB000000006E6F69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenDefaultCollectionIntent, v7);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for OpenDefaultCollectionIntent, v7);
  v21._countAndFlagsBits = 0x656874206E65704FLL;
  v21._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_1007351D0);
  v23 = v65;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v65);
  v25 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4, v25);
  swift_release(v24);
  v26._countAndFlagsBits = 0x7463656C6C6F4320;
  v26._object = (void *)0xEB000000006E6F69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenDefaultCollectionIntent, v7);
  v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v7);
  v66(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(26, 1, &type metadata for OpenDefaultCollectionIntent, v7);
  v27._countAndFlagsBits = 0x20656D20656B6154;
  v27._object = (void *)0xEF20656874206F74;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath(&unk_1007351D0);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v23);
  v30 = swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v4, v30);
  swift_release(v29);
  v31._countAndFlagsBits = 0x7463656C6C6F4320;
  v31._object = (void *)0xEB000000006E6F69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenDefaultCollectionIntent, v7);
  v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v7);
  v32 = v66;
  v66(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for OpenDefaultCollectionIntent, v7);
  v33._countAndFlagsBits = 0x2079616C70736944;
  v33._object = (void *)0xEB0000000020796DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(&unk_1007351D0);
  v35 = _AssistantIntent.IntentProjection.subscript.getter(v34, v65);
  v36 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v35, v4, v36);
  swift_release(v35);
  v37._countAndFlagsBits = 0x7463656C6C6F4320;
  v37._object = (void *)0xEB000000006E6F69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v37);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenDefaultCollectionIntent, v7);
  v60 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v7);
  v32(v3, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(41, 1, &type metadata for OpenDefaultCollectionIntent, v7);
  v38._object = (void *)0x80000001007D9240;
  v38._countAndFlagsBits = 0xD00000000000001ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  v39 = swift_getKeyPath(&unk_1007351D0);
  v40 = v65;
  v41 = _AssistantIntent.IntentProjection.subscript.getter(v39, v65);
  v42 = swift_release(v39);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v41, v4, v42);
  swift_release(v41);
  v43._countAndFlagsBits = 0x7463656C6C6F6320;
  v43._object = (void *)0xEB000000006E6F69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v43);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenDefaultCollectionIntent, v7);
  v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v7);
  v45 = v66;
  v44 = v67;
  v66(v3, v67);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for OpenDefaultCollectionIntent, v7);
  v46._countAndFlagsBits = 0x206E65704FLL;
  v46._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v47 = swift_getKeyPath(&unk_1007351D0);
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v47, v40);
  v49 = swift_release(v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v4, v49);
  swift_release(v48);
  v50._object = (void *)0xE900000000000073;
  v50._countAndFlagsBits = 0x6B6F6F62206E6920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for OpenDefaultCollectionIntent, v7);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v7);
  v45(v3, v44);
  v52 = sub_10004CFD4(&qword_1009F1278);
  v53 = swift_allocObject(v52, 88, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100723930;
  v54 = v63;
  *(_QWORD *)(v53 + 32) = v64;
  *(_QWORD *)(v53 + 40) = v54;
  v55 = v61;
  *(_QWORD *)(v53 + 48) = v62;
  *(_QWORD *)(v53 + 56) = v55;
  v56 = v59;
  *(_QWORD *)(v53 + 64) = v60;
  *(_QWORD *)(v53 + 72) = v56;
  *(_QWORD *)(v53 + 80) = v51;
  v57 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v53);
  return v57;
}

uint64_t sub_10061795C(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_1007351D0, (uint64_t (*)(void))sub_10032A408, (uint64_t (*)(__n128))sub_1000689E0, (uint64_t)sub_100617980);
}

uint64_t sub_100617980()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(7105601, 0xE300000000000000);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x206F7420746E6157, 0xEC00000064616552);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x64656873696E6946, 0xEE00736B6F6F4220);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x736B6F6F42, 0xE500000000000000);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F6F626F69647541, 0xEA0000000000736BLL);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1933984848, 0xE400000000000000);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6C706D615320794DLL, 0xEA00000000007365);
  v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x64616F6C6E776F44, 0xEA00000000006465);
  v8 = sub_10004CFD4(&qword_1009F11F8);
  v9 = swift_allocObject(v8, 96, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100711990;
  *(_QWORD *)(v9 + 32) = v0;
  *(_QWORD *)(v9 + 40) = v1;
  *(_QWORD *)(v9 + 48) = v2;
  *(_QWORD *)(v9 + 56) = v3;
  *(_QWORD *)(v9 + 64) = v4;
  *(_QWORD *)(v9 + 72) = v5;
  *(_QWORD *)(v9 + 80) = v6;
  *(_QWORD *)(v9 + 88) = v7;
  v10 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v9);
  return v10;
}

uint64_t sub_100617AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_10004CFD4(&qword_1009F1270);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000689E0();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000017, 0x80000001007D91A0, &type metadata for OpenDefaultCollectionIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000035, 0x80000001007D91C0, &type metadata for OpenDefaultCollectionIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x100000000000003CLL, 0x80000001007D9200, &type metadata for OpenDefaultCollectionIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v4);
  v6(v3, v0);
  v9 = sub_10004CFD4(&qword_1009F1278);
  v10 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100712B60;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v8;
  v11 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_100617C9C(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_1007351D0, (uint64_t (*)(void))sub_10032A408, (uint64_t (*)(__n128))sub_1000689E0, (uint64_t)sub_100617CC0);
}

uint64_t sub_100617CC0()
{
  return sub_1006189F0();
}

uint64_t sub_100617CE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_10004CFD4(&qword_1009F1270);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000689E0();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002ELL, 0x80000001007D9170, &type metadata for OpenDefaultCollectionIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_10004CFD4(&qword_1009F1278);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100617DF0(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_1007351D0, (uint64_t (*)(void))sub_10032A408, (uint64_t (*)(__n128))sub_1000689E0, (uint64_t)sub_100617E14);
}

uint64_t sub_100617E14()
{
  return sub_1006189F0();
}

uint64_t sub_100617E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_10004CFD4(&qword_1009F1270);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1000689E0();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x1000000000000052, 0x80000001007D9110, &type metadata for OpenDefaultCollectionIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenDefaultCollectionIntent, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_10004CFD4(&qword_1009F1278);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100617F3C(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_1007351D0, (uint64_t (*)(void))sub_10032A408, (uint64_t (*)(__n128))sub_1000689E0, (uint64_t)sub_100617F60);
}

uint64_t sub_100617F60()
{
  return sub_1006189F0();
}

uint64_t sub_100617F80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  Swift::String v9;
  uint64_t KeyPath;
  unint64_t v11;
  uint64_t v12;
  __n128 v13;
  Swift::String v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  Swift::String v27;
  void (*v28)(char *, uint64_t);
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  __n128 v38;
  Swift::String v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v63 = sub_10004CFD4(&qword_1009F1258);
  v2 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009F1268);
  __chkstk_darwin(v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100069B58();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(9, 1, &type metadata for OpenTabBarItemIntent, v8);
  v9._countAndFlagsBits = 0x206E65704FLL;
  v9._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  KeyPath = swift_getKeyPath(&unk_1007351A8);
  v11 = sub_1002229B0();
  v62 = a1;
  v12 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v11);
  v13 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v12, v5, v13);
  swift_release(v12);
  v14._countAndFlagsBits = 1650545696;
  v14._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for OpenTabBarItemIntent, v8);
  v15 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for OpenTabBarItemIntent, v8);
  v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v59 = v15;
  v60 = v16;
  v17 = v63;
  v16(v4, v63);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for OpenTabBarItemIntent, v8);
  v18._countAndFlagsBits = 0x206E65704FLL;
  v18._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_1007351A8);
  v61 = v11;
  v20 = _AssistantIntent.IntentProjection.subscript.getter(v19, v11);
  v21 = swift_release(v19);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v20, v5, v21);
  swift_release(v20);
  v22._countAndFlagsBits = 0x6567615020;
  v22._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for OpenTabBarItemIntent, v8);
  v58 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for OpenTabBarItemIntent, v8);
  v60(v4, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for OpenTabBarItemIntent, v8);
  v23._countAndFlagsBits = 0x20796D206E65704FLL;
  v23._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  v24 = swift_getKeyPath(&unk_1007351A8);
  v25 = _AssistantIntent.IntentProjection.subscript.getter(v24, v11);
  v26 = swift_release(v24);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v25, v5, v26);
  swift_release(v25);
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for OpenTabBarItemIntent, v8);
  v57 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for OpenTabBarItemIntent, v8);
  v28 = v60;
  v60(v4, v17);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(22, 1, &type metadata for OpenTabBarItemIntent, v8);
  v29._object = (void *)0x80000001007D90F0;
  v29._countAndFlagsBits = 0xD000000000000012;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  v30 = swift_getKeyPath(&unk_1007351A8);
  v31 = _AssistantIntent.IntentProjection.subscript.getter(v30, v61);
  v32 = swift_release(v30);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v31, v5, v32);
  swift_release(v31);
  v33._countAndFlagsBits = 1650545696;
  v33._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for OpenTabBarItemIntent, v8);
  v56 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for OpenTabBarItemIntent, v8);
  v28(v4, v63);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 1, &type metadata for OpenTabBarItemIntent, v8);
  v34._countAndFlagsBits = 0x206F74206F47;
  v34._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  v35 = swift_getKeyPath(&unk_1007351A8);
  v36 = v61;
  v37 = _AssistantIntent.IntentProjection.subscript.getter(v35, v61);
  v38 = swift_release(v35);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v37, v5, v38);
  swift_release(v37);
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for OpenTabBarItemIntent, v8);
  v55 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for OpenTabBarItemIntent, v8);
  v40 = v63;
  v28(v4, v63);
  v41 = v28;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(8, 1, &type metadata for OpenTabBarItemIntent, v8);
  v42._countAndFlagsBits = 0x206F74206E65704FLL;
  v42._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v42);
  v43 = swift_getKeyPath(&unk_1007351A8);
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v43, v36);
  v45 = swift_release(v43);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v5, v45);
  swift_release(v44);
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v7, &type metadata for OpenTabBarItemIntent, v8);
  v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v4, &type metadata for OpenTabBarItemIntent, v8);
  v41(v4, v40);
  v48 = sub_10004CFD4(&qword_1009F1260);
  v49 = swift_allocObject(v48, 80, 7);
  *(_OWORD *)(v49 + 16) = xmmword_1007133E0;
  v50 = v58;
  *(_QWORD *)(v49 + 32) = v59;
  *(_QWORD *)(v49 + 40) = v50;
  v51 = v56;
  *(_QWORD *)(v49 + 48) = v57;
  *(_QWORD *)(v49 + 56) = v51;
  *(_QWORD *)(v49 + 64) = v55;
  *(_QWORD *)(v49 + 72) = v47;
  v52 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v49);
  return v52;
}

uint64_t sub_100618574(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_1007351A8, (uint64_t (*)(void))sub_1002229B0, (uint64_t (*)(__n128))sub_100069B58, (uint64_t)sub_100618598);
}

uint64_t sub_100618598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x20676E6964616552, 0xEB00000000776F4ELL);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x7972617262694CLL, 0xE700000000000000);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F7453206B6F6F42, 0xEA00000000006572);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x6F6F626F69647541, 0xEF65726F7453206BLL);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x686372616553, 0xE600000000000000);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x61676E614DLL, 0xE500000000000000);
  v6 = sub_10004CFD4(&qword_1009F11F8);
  v7 = swift_allocObject(v6, 80, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1007133E0;
  *(_QWORD *)(v7 + 32) = v0;
  *(_QWORD *)(v7 + 40) = v1;
  *(_QWORD *)(v7 + 48) = v2;
  *(_QWORD *)(v7 + 56) = v3;
  *(_QWORD *)(v7 + 64) = v4;
  *(_QWORD *)(v7 + 72) = v5;
  v8 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_1006186C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_10004CFD4(&qword_1009F1258);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100069B58();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000002BLL, 0x80000001007D90C0, &type metadata for OpenTabBarItemIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTabBarItemIntent, v4);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x726F66206B6F6F4CLL, 0xEE00736B6F6F6220, &type metadata for OpenTabBarItemIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTabBarItemIntent, v4);
  v6(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x6F6F6220646E6946, 0xEA0000000000736BLL, &type metadata for OpenTabBarItemIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTabBarItemIntent, v4);
  v6(v3, v0);
  v9 = sub_10004CFD4(&qword_1009F1260);
  v10 = swift_allocObject(v9, 56, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100712B60;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v8;
  v11 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_100618878(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_1007351A8, (uint64_t (*)(void))sub_1002229B0, (uint64_t (*)(__n128))sub_100069B58, (uint64_t)sub_10061889C);
}

uint64_t sub_10061889C()
{
  return sub_1006189F0();
}

uint64_t sub_1006188B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_10004CFD4(&qword_1009F1258);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100069B58();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000033, 0x80000001007D9080, &type metadata for OpenTabBarItemIntent, v4);
  v5 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for OpenTabBarItemIntent, v4);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v6 = sub_10004CFD4(&qword_1009F1260);
  v7 = swift_allocObject(v6, 40, 7);
  *(_OWORD *)(v7 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v7 + 32) = v5;
  v8 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_1006189BC(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_1007351A8, (uint64_t (*)(void))sub_1002229B0, (uint64_t (*)(__n128))sub_100069B58, (uint64_t)sub_1006189E0);
}

uint64_t sub_1006189E0()
{
  return sub_1006189F0();
}

uint64_t sub_1006189F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  v1 = sub_10004CFD4(&qword_1009F11F8);
  v2 = swift_allocObject(v1, 40, 7);
  *(_OWORD *)(v2 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v2 + 32) = v0;
  v3 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v2);
  return v3;
}

uint64_t sub_100618A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v0 = sub_10004CFD4(&qword_1009F1248);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10061B12C();
  _AssistantIntent.Phrase.init(stringLiteral:)(0x7561206573756150, 0xEF6B6F6F626F6964, &type metadata for PauseCurrentAudiobookIntent, v4);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PauseCurrentAudiobookIntent, v4);
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x80000001007D8FB0, &type metadata for PauseCurrentAudiobookIntent, v4);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PauseCurrentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000012, 0x80000001007D8FD0, &type metadata for PauseCurrentAudiobookIntent, v4);
  v17 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PauseCurrentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x6F62206573756150, 0xEA00000000006B6FLL, &type metadata for PauseCurrentAudiobookIntent, v4);
  v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PauseCurrentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x80000001007D8FF0, &type metadata for PauseCurrentAudiobookIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PauseCurrentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000018, 0x80000001007D9010, &type metadata for PauseCurrentAudiobookIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PauseCurrentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000028, 0x80000001007D9030, &type metadata for PauseCurrentAudiobookIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PauseCurrentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0x100000000000001CLL, 0x80000001007D9060, &type metadata for PauseCurrentAudiobookIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PauseCurrentAudiobookIntent, v4);
  v5(v3, v0);
  v11 = sub_10004CFD4(&qword_1009F1250);
  v12 = swift_allocObject(v11, 96, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100711990;
  v13 = v18;
  *(_QWORD *)(v12 + 32) = v19;
  *(_QWORD *)(v12 + 40) = v13;
  *(_QWORD *)(v12 + 48) = v17;
  *(_QWORD *)(v12 + 56) = v6;
  *(_QWORD *)(v12 + 64) = v7;
  *(_QWORD *)(v12 + 72) = v8;
  *(_QWORD *)(v12 + 80) = v9;
  *(_QWORD *)(v12 + 88) = v10;
  v14 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v14;
}

uint64_t sub_100618D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v0 = sub_10004CFD4(&qword_1009F1238);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10061B170();
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000011, 0x80000001007D8E60, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v22 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000022, 0x80000001007D8E80, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v21 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001007D8EB0, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v20 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000018, 0x80000001007D8ED0, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v19 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000012, 0x80000001007D8EF0, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007D8F10, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v6 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000013, 0x80000001007D8F30, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v7 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD000000000000013, 0x80000001007D8F50, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v8 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001DLL, 0x80000001007D8F70, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v9 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v5(v3, v0);
  _AssistantIntent.Phrase.init(stringLiteral:)(0xD00000000000001BLL, 0x80000001007D8F90, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v10 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlayMostRecentAudiobookIntent, v4);
  v5(v3, v0);
  v11 = sub_10004CFD4(&qword_1009F1240);
  v12 = swift_allocObject(v11, 112, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100735070;
  v13 = v21;
  *(_QWORD *)(v12 + 32) = v22;
  *(_QWORD *)(v12 + 40) = v13;
  v14 = v19;
  *(_QWORD *)(v12 + 48) = v20;
  *(_QWORD *)(v12 + 56) = v14;
  *(_QWORD *)(v12 + 64) = v18;
  *(_QWORD *)(v12 + 72) = v6;
  *(_QWORD *)(v12 + 80) = v7;
  *(_QWORD *)(v12 + 88) = v8;
  *(_QWORD *)(v12 + 96) = v9;
  *(_QWORD *)(v12 + 104) = v10;
  v15 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v12);
  return v15;
}

uint64_t sub_10061913C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  unint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  Swift::String v25;
  uint64_t v26;
  Swift::String v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  Swift::String v31;
  void (*v32)(char *, uint64_t);
  Swift::String v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __n128 v37;
  Swift::String v38;
  uint64_t v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  Swift::String v44;
  void (*v45)(char *, uint64_t);
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;

  v68 = a1;
  v66 = sub_10004CFD4(&qword_1009F1220);
  v1 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009F1228);
  __chkstk_darwin(v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10053774C();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(15, 1, &type metadata for PlaySpecificAudiobookIntent, v7);
  v8._countAndFlagsBits = 0x647561206E65704FLL;
  v8._object = (void *)0xEF206B6F6F626F69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100735180);
  v10 = sub_10061B1F8();
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for PlaySpecificAudiobookIntent, v7);
  v64 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlaySpecificAudiobookIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v66;
  v14(v3, v66);
  v67 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for PlaySpecificAudiobookIntent, v7);
  v16._object = (void *)0x80000001007D8DC0;
  v16._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100735180);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for PlaySpecificAudiobookIntent, v7);
  v63 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlaySpecificAudiobookIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(19, 1, &type metadata for PlaySpecificAudiobookIntent, v7);
  v21._object = (void *)0x80000001007D8DE0;
  v21._countAndFlagsBits = 0xD000000000000013;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100735180);
  v65 = v10;
  v23 = _AssistantIntent.IntentProjection.subscript.getter(v22, v10);
  v24 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v23, v4, v24);
  swift_release(v23);
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v25);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for PlaySpecificAudiobookIntent, v7);
  v62 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlaySpecificAudiobookIntent, v7);
  v26 = v66;
  v67(v3, v66);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(10, 1, &type metadata for PlaySpecificAudiobookIntent, v7);
  v27._countAndFlagsBits = 0x74206E657473694CLL;
  v27._object = (void *)0xEA0000000000206FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  v28 = swift_getKeyPath(&unk_100735180);
  v29 = _AssistantIntent.IntentProjection.subscript.getter(v28, v10);
  v30 = swift_release(v28);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v29, v4, v30);
  swift_release(v29);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v31);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for PlaySpecificAudiobookIntent, v7);
  v61 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlaySpecificAudiobookIntent, v7);
  v32 = v67;
  v67(v3, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for PlaySpecificAudiobookIntent, v7);
  v33._countAndFlagsBits = 0xD000000000000014;
  v33._object = (void *)0x80000001007D8E00;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v33);
  v34 = swift_getKeyPath(&unk_100735180);
  v35 = v65;
  v36 = _AssistantIntent.IntentProjection.subscript.getter(v34, v65);
  v37 = swift_release(v34);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v36, v4, v37);
  swift_release(v36);
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v38);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for PlaySpecificAudiobookIntent, v7);
  v60 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlaySpecificAudiobookIntent, v7);
  v39 = v66;
  v32(v3, v66);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for PlaySpecificAudiobookIntent, v7);
  v40._object = (void *)0x80000001007D8E20;
  v40._countAndFlagsBits = 0xD00000000000001DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  v41 = swift_getKeyPath(&unk_100735180);
  v42 = _AssistantIntent.IntentProjection.subscript.getter(v41, v35);
  v43 = swift_release(v41);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v42, v4, v43);
  swift_release(v42);
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v44);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for PlaySpecificAudiobookIntent, v7);
  v59 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlaySpecificAudiobookIntent, v7);
  v45 = v67;
  v67(v3, v39);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(29, 1, &type metadata for PlaySpecificAudiobookIntent, v7);
  v46._object = (void *)0x80000001007D8E40;
  v46._countAndFlagsBits = 0xD00000000000001DLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  v47 = swift_getKeyPath(&unk_100735180);
  v48 = _AssistantIntent.IntentProjection.subscript.getter(v47, v65);
  v49 = swift_release(v47);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v48, v4, v49);
  swift_release(v48);
  v50._countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v50);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for PlaySpecificAudiobookIntent, v7);
  v51 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for PlaySpecificAudiobookIntent, v7);
  v45(v3, v39);
  v52 = sub_10004CFD4(&qword_1009F1230);
  v53 = swift_allocObject(v52, 88, 7);
  *(_OWORD *)(v53 + 16) = xmmword_100723930;
  v54 = v63;
  *(_QWORD *)(v53 + 32) = v64;
  *(_QWORD *)(v53 + 40) = v54;
  v55 = v61;
  *(_QWORD *)(v53 + 48) = v62;
  *(_QWORD *)(v53 + 56) = v55;
  v56 = v59;
  *(_QWORD *)(v53 + 64) = v60;
  *(_QWORD *)(v53 + 72) = v56;
  *(_QWORD *)(v53 + 80) = v51;
  v57 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v53);
  return v57;
}

__n128 sub_100619834@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  __n128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  char v14;

  IntentParameter.wrappedValue.getter(&v8);
  v2 = v12;
  v3 = v14;
  result = v9;
  v5 = v10;
  v6 = v11;
  v7 = v13;
  *(_QWORD *)a1 = v8;
  *(__n128 *)(a1 + 8) = result;
  *(_OWORD *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 56) = v2;
  *(_OWORD *)(a1 + 64) = v7;
  *(_BYTE *)(a1 + 80) = v3;
  return result;
}

uint64_t sub_100619898(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[10];
  char v13;

  v1 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v9 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v10 = *(_BYTE *)(a1 + 80);
  v12[0] = *(_QWORD *)a1;
  v12[1] = v1;
  v12[2] = v3;
  v12[3] = v2;
  v12[4] = v4;
  v12[5] = v5;
  v12[6] = v6;
  v12[7] = v7;
  v12[8] = v9;
  v12[9] = v8;
  v13 = v10;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v1);
  swift_retain(v3);
  swift_retain(v2);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  return IntentParameter.wrappedValue.setter(v12);
}

uint64_t sub_10061994C(uint64_t a1)
{
  return sub_100615234(a1, (uint64_t)&unk_100735180, (uint64_t (*)(void))sub_10061B1F8, (uint64_t (*)(__n128))sub_10053774C, (uint64_t)sub_10061B6B8);
}

uint64_t sub_100619970(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  Swift::String v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  Swift::String v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  Swift::String v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  Swift::String v40;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __n128 v45;
  Swift::String v46;
  uint64_t v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  Swift::String v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  Swift::String v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;

  v79 = a1;
  v77 = sub_10004CFD4(&qword_1009F1200);
  v1 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v3 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009F1208);
  __chkstk_darwin(v4);
  v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10046EAE4();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(11, 1, &type metadata for SearchBooksAppIntent, v7);
  v8._countAndFlagsBits = 0x6620686372616553;
  v8._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  KeyPath = swift_getKeyPath(&unk_100735158);
  v10 = sub_100008DB0(&qword_1009F11E8, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v11 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v10);
  v12 = swift_release(KeyPath);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v11, v4, v12);
  swift_release(v11);
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SearchBooksAppIntent, v7);
  v75 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SearchBooksAppIntent, v7);
  v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v15 = v77;
  v14(v3, v77);
  v78 = v14;
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(25, 1, &type metadata for SearchBooksAppIntent, v7);
  v16._countAndFlagsBits = 0xD000000000000019;
  v16._object = (void *)0x80000001007D8D40;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  v17 = swift_getKeyPath(&unk_100735158);
  v18 = _AssistantIntent.IntentProjection.subscript.getter(v17, v10);
  v19 = swift_release(v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v18, v4, v19);
  swift_release(v18);
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SearchBooksAppIntent, v7);
  v74 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SearchBooksAppIntent, v7);
  v14(v3, v15);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for SearchBooksAppIntent, v7);
  v21._object = (void *)0x80000001007D8D60;
  v21._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  v22 = swift_getKeyPath(&unk_100735158);
  v23 = v10;
  v76 = v10;
  v24 = _AssistantIntent.IntentProjection.subscript.getter(v22, v10);
  v25 = swift_release(v22);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v24, v4, v25);
  swift_release(v24);
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SearchBooksAppIntent, v7);
  v73 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SearchBooksAppIntent, v7);
  v27 = v77;
  v78(v3, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for SearchBooksAppIntent, v7);
  v28._countAndFlagsBits = 0x65687420646E6946;
  v28._object = (void *)0xEE00206B6F6F6220;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  v29 = swift_getKeyPath(&unk_100735158);
  v30 = _AssistantIntent.IntentProjection.subscript.getter(v29, v23);
  v31 = swift_release(v29);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v30, v4, v31);
  swift_release(v30);
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SearchBooksAppIntent, v7);
  v72 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SearchBooksAppIntent, v7);
  v33 = v27;
  v34 = v27;
  v35 = v78;
  v78(v3, v34);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for SearchBooksAppIntent, v7);
  v36._countAndFlagsBits = 0x20646E6946;
  v36._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  v37 = swift_getKeyPath(&unk_100735158);
  v38 = _AssistantIntent.IntentProjection.subscript.getter(v37, v76);
  v39 = swift_release(v37);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v38, v4, v39);
  swift_release(v38);
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SearchBooksAppIntent, v7);
  v71 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SearchBooksAppIntent, v7);
  v35(v3, v33);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(23, 1, &type metadata for SearchBooksAppIntent, v7);
  v41._countAndFlagsBits = 0xD000000000000017;
  v41._object = (void *)0x80000001007D8D80;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v41);
  v42 = swift_getKeyPath(&unk_100735158);
  v43 = v76;
  v44 = _AssistantIntent.IntentProjection.subscript.getter(v42, v76);
  v45 = swift_release(v42);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v44, v4, v45);
  swift_release(v44);
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v46);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SearchBooksAppIntent, v7);
  v70 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SearchBooksAppIntent, v7);
  v47 = v77;
  v78(v3, v77);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(14, 1, &type metadata for SearchBooksAppIntent, v7);
  v48._countAndFlagsBits = 0x6F6F626F69647541;
  v48._object = (void *)0xEE0020796220736BLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v48);
  v49 = swift_getKeyPath(&unk_100735158);
  v50 = _AssistantIntent.IntentProjection.subscript.getter(v49, v43);
  v51 = swift_release(v49);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v50, v4, v51);
  swift_release(v50);
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v52);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SearchBooksAppIntent, v7);
  v69 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SearchBooksAppIntent, v7);
  v53 = v47;
  v54 = v78;
  v78(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)(20, 1, &type metadata for SearchBooksAppIntent, v7);
  v55._object = (void *)0x80000001007D8DA0;
  v55._countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v55);
  v56 = swift_getKeyPath(&unk_100735158);
  v57 = _AssistantIntent.IntentProjection.subscript.getter(v56, v43);
  v58 = swift_release(v56);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)(v57, v4, v58);
  swift_release(v57);
  v59._countAndFlagsBits = 0;
  v59._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v59);
  _AssistantIntent.Phrase.init(stringInterpolation:)(v6, &type metadata for SearchBooksAppIntent, v7);
  v60 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)(v3, &type metadata for SearchBooksAppIntent, v7);
  v54(v3, v53);
  v61 = sub_10004CFD4(&qword_1009F1210);
  v62 = swift_allocObject(v61, 96, 7);
  *(_OWORD *)(v62 + 16) = xmmword_100711990;
  v63 = v74;
  *(_QWORD *)(v62 + 32) = v75;
  *(_QWORD *)(v62 + 40) = v63;
  v64 = v72;
  *(_QWORD *)(v62 + 48) = v73;
  *(_QWORD *)(v62 + 56) = v64;
  v65 = v70;
  *(_QWORD *)(v62 + 64) = v71;
  *(_QWORD *)(v62 + 72) = v65;
  *(_QWORD *)(v62 + 80) = v69;
  *(_QWORD *)(v62 + 88) = v60;
  v66 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v62);
  return v66;
}

uint64_t sub_10061A154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v15;

  v6 = a5(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v15 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v15 - v11, a1, v6);
  v13(v10, (uint64_t)v12, v6);
  IntentParameter.wrappedValue.setter(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t sub_10061A224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = type metadata accessor for _AssistantIntent.Value(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath(&unk_100735158);
  v5 = sub_100008DB0(&qword_1009F11E8, (uint64_t (*)(uint64_t))&type metadata accessor for StringSearchCriteria, (uint64_t)&protocol conformance descriptor for StringSearchCriteria);
  v6 = _AssistantIntent.IntentProjection.subscript.getter(KeyPath, v5);
  swift_release(KeyPath);
  v7 = sub_10046EAE4();
  _AssistantIntent.Value.init<A>(for:builder:)(v6, sub_10061A34C, 0, v7);
  v8 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)(v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v9 = sub_10004CFD4(&qword_1009F11F0);
  v10 = swift_allocObject(v9, 40, 7);
  *(_OWORD *)(v10 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v10 + 32) = v8;
  v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v10);
  return v11;
}

uint64_t sub_10061A34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x80000001007D8CE0);
  v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x62626F4820656854, 0xEA00000000007469);
  v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(1701737796, 0xE400000000000000);
  v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x626F5220796E6F54, 0xEC000000736E6962);
  v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000017, 0x80000001007D8D00);
  v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0xD000000000000013, 0x80000001007D8D20);
  v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)(0x206F7420646F6F47, 0xED00007461657247);
  v7 = sub_10004CFD4(&qword_1009F11F8);
  v8 = swift_allocObject(v7, 88, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100723930;
  *(_QWORD *)(v8 + 32) = v0;
  *(_QWORD *)(v8 + 40) = v1;
  *(_QWORD *)(v8 + 48) = v2;
  *(_QWORD *)(v8 + 56) = v3;
  *(_QWORD *)(v8 + 64) = v4;
  *(_QWORD *)(v8 + 72) = v5;
  *(_QWORD *)(v8 + 80) = v6;
  v9 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease(v8);
  return v9;
}

uint64_t sub_10061A4B0(uint64_t a1, uint64_t a2)
{
  return sub_1001F9E00(a1, a2, &qword_1009CEA68, &qword_100A1EF40, (uint64_t)sub_100612108);
}

ValueMetadata *type metadata accessor for BooksAssistantIntents()
{
  return &type metadata for BooksAssistantIntents;
}

ValueMetadata *type metadata accessor for BooksNonMacAssistantIntentsProvider()
{
  return &type metadata for BooksNonMacAssistantIntentsProvider;
}

uint64_t sub_10061A4EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v14;
  uint64_t v15;

  v0 = type metadata accessor for _AssistantIntent(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100674BB0();
  v15 = v4;
  v5 = sub_10061B4D8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v14, sub_1006113DC, 0, sub_10061153C, 0, &type metadata for AudiobookSleepTimerIntent, v5);
  v6 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  v14 = sub_100674BB0();
  v15 = v8;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v14, sub_10061157C, 0, sub_100611E54, 0, &type metadata for AudiobookSleepTimerIntent, v5);
  v9 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v7(v3, v0);
  v10 = sub_10004CFD4(&qword_1009F11E0);
  v11 = swift_allocObject(v10, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v11 + 32) = v6;
  *(_QWORD *)(v11 + 40) = v9;
  v12 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease(v11);
  return v12;
}

uint64_t sub_10061A640()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  void (*v6)(char *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  uint64_t v109;

  v0 = type metadata accessor for _AssistantIntent(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v107 = sub_1003A0DB8();
  *((_QWORD *)&v107 + 1) = v4;
  v5 = sub_100066120();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_10061211C, 0, sub_1006124A0, 0, &type metadata for BookReaderChangePageNavigationIntent, v5);
  v106 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_1003A0DB8();
  *((_QWORD *)&v107 + 1) = v7;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_1006125DC, 0, sub_100612964, 0, &type metadata for BookReaderChangePageNavigationIntent, v5);
  v105 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_1003A0DB8();
  *((_QWORD *)&v107 + 1) = v8;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100612AA4, 0, sub_100612CE0, 0, &type metadata for BookReaderChangePageNavigationIntent, v5);
  v104 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_1003A0DB8();
  *((_QWORD *)&v107 + 1) = v9;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100612EA8, 0, sub_100613130, 0, &type metadata for BookReaderChangePageNavigationIntent, v5);
  v103 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_1003A0DB8();
  *((_QWORD *)&v107 + 1) = v10;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100613160, 0, sub_10061330C, 0, &type metadata for BookReaderChangePageNavigationIntent, v5);
  v102 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_1003A0DB8();
  *((_QWORD *)&v107 + 1) = v11;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100613334, 0, sub_100613440, 0, &type metadata for BookReaderChangePageNavigationIntent, v5);
  v101 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_1003A0DB8();
  *((_QWORD *)&v107 + 1) = v12;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100613454, 0, sub_100613560, 0, &type metadata for BookReaderChangePageNavigationIntent, v5);
  v100 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_10020502C();
  *((_QWORD *)&v107 + 1) = v13;
  v14 = sub_100204890();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100613574, 0, sub_100613EA8, 0, &type metadata for BookReaderChangeThemeIntent, v14);
  v99 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  sub_1003D8B08((uint64_t *)&v107);
  v15 = sub_1003D7E94();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100613FD0, 0, sub_100614914, 0, &type metadata for UpdateBookSettingsIntent, v15);
  v98 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_100483530();
  *((_QWORD *)&v107 + 1) = v16;
  v17 = sub_100483970();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100614B40, 0, sub_100615210, 0, &type metadata for BookReaderNavigatePageInBookIntent, v17);
  v97 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_100483530();
  *((_QWORD *)&v107 + 1) = v18;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_10061542C, 0, sub_100615540, 0, &type metadata for BookReaderNavigatePageInBookIntent, v17);
  v96 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  sub_10004CFD4(&qword_1009D2100);
  v19 = type metadata accessor for AppDependencyManager(0);
  v107 = 0u;
  v108 = 0u;
  v109 = 0;
  v24 = static AppDependencyManager.shared.getter(v19, v20, v21, v22, v23);
  *(_QWORD *)&v107 = AppDependency.__allocating_init(key:manager:)(&v107, v24);
  v25 = sub_1004DF620();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100615574, 0, &j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for OpenMostRecentBookIntent, v25);
  v95 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_100565948();
  *((_QWORD *)&v107 + 1) = v26;
  v27 = sub_100565DB8();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_1006158F0, 0, sub_100616104, 0, &type metadata for OpenSpecificBookIntent, v27);
  v94 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_100523C94();
  *((_QWORD *)&v107 + 1) = v28;
  v29 = sub_100524108();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100616254, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for OpenTableOfContentsIntent, v29);
  v93 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_1003A8520();
  *((_QWORD *)&v107 + 1) = v30;
  *(_QWORD *)&v108 = v31;
  v32 = sub_1003A8BC0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_1006166F8, 0, sub_1006169B0, 0, &type metadata for ChangeFontSizeIntent, v32);
  v92 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_1003A8520();
  *((_QWORD *)&v107 + 1) = v33;
  *(_QWORD *)&v108 = v34;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100616A70, 0, sub_100616E28, 0, &type metadata for ChangeFontSizeIntent, v32);
  v91 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_1003A8520();
  *((_QWORD *)&v107 + 1) = v35;
  *(_QWORD *)&v108 = v36;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100616E64, 0, sub_1006171DC, 0, &type metadata for ChangeFontSizeIntent, v32);
  v90 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_10032C2EC();
  *((_QWORD *)&v107 + 1) = v37;
  v38 = sub_1000689E0();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100617218, 0, sub_10061795C, 0, &type metadata for OpenDefaultCollectionIntent, v38);
  v89 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_10032C2EC();
  *((_QWORD *)&v107 + 1) = v39;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100617AF0, 0, sub_100617C9C, 0, &type metadata for OpenDefaultCollectionIntent, v38);
  v88 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_10032C2EC();
  *((_QWORD *)&v107 + 1) = v40;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100617CE4, 0, sub_100617DF0, 0, &type metadata for OpenDefaultCollectionIntent, v38);
  v87 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_10032C2EC();
  *((_QWORD *)&v107 + 1) = v41;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100617E30, 0, sub_100617F3C, 0, &type metadata for OpenDefaultCollectionIntent, v38);
  v86 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_100223FCC();
  *((_QWORD *)&v107 + 1) = v42;
  v43 = sub_100069B58();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100617F80, 0, sub_100618574, 0, &type metadata for OpenTabBarItemIntent, v43);
  v44 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_100223FCC();
  *((_QWORD *)&v107 + 1) = v45;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_1006186C8, 0, sub_100618878, 0, &type metadata for OpenTabBarItemIntent, v43);
  v46 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_100223FCC();
  *((_QWORD *)&v107 + 1) = v47;
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_1006188B0, 0, sub_1006189BC, 0, &type metadata for OpenTabBarItemIntent, v43);
  v48 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v49 = ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
  v109 = 0;
  v107 = 0u;
  v108 = 0u;
  v54 = static AppDependencyManager.shared.getter(v49, v50, v51, v52, v53);
  *(_QWORD *)&v107 = AppDependency.__allocating_init(key:manager:)(&v107, v54);
  v55 = sub_10061B12C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100618A50, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for PauseCurrentAudiobookIntent, v55);
  v56 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v57 = ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
  v109 = 0;
  v107 = 0u;
  v108 = 0u;
  v62 = static AppDependencyManager.shared.getter(v57, v58, v59, v60, v61);
  *(_QWORD *)&v107 = AppDependency.__allocating_init(key:manager:)(&v107, v62);
  v63 = sub_10061B170();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100618D84, 0, &j_j___s10AppIntents16_AssistantIntentV21ParameterValueBuilderO10buildBlockSayAC0F0VGyFZ, 0, &type metadata for PlayMostRecentAudiobookIntent, v63);
  v64 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_1005377CC();
  *((_QWORD *)&v107 + 1) = v65;
  v66 = sub_10053774C();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_10061913C, 0, sub_10061994C, 0, &type metadata for PlaySpecificAudiobookIntent, v66);
  v67 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  *(_QWORD *)&v107 = sub_10046F314();
  *((_QWORD *)&v107 + 1) = v68;
  v69 = sub_10046EAE4();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)(&v107, sub_100619970, 0, sub_10061A224, 0, &type metadata for SearchBooksAppIntent, v69);
  v70 = static _AssistantIntent.Builder.buildExpression(_:)(v3);
  v6(v3, v0);
  v71 = sub_10004CFD4(&qword_1009F11E0);
  v72 = swift_allocObject(v71, 256, 7);
  *(_OWORD *)(v72 + 16) = xmmword_100735090;
  v73 = v105;
  *(_QWORD *)(v72 + 32) = v106;
  *(_QWORD *)(v72 + 40) = v73;
  v74 = v103;
  *(_QWORD *)(v72 + 48) = v104;
  *(_QWORD *)(v72 + 56) = v74;
  v75 = v101;
  *(_QWORD *)(v72 + 64) = v102;
  *(_QWORD *)(v72 + 72) = v75;
  v76 = v99;
  *(_QWORD *)(v72 + 80) = v100;
  *(_QWORD *)(v72 + 88) = v76;
  v77 = v97;
  *(_QWORD *)(v72 + 96) = v98;
  *(_QWORD *)(v72 + 104) = v77;
  v78 = v95;
  *(_QWORD *)(v72 + 112) = v96;
  *(_QWORD *)(v72 + 120) = v78;
  v79 = v93;
  *(_QWORD *)(v72 + 128) = v94;
  *(_QWORD *)(v72 + 136) = v79;
  v80 = v91;
  *(_QWORD *)(v72 + 144) = v92;
  *(_QWORD *)(v72 + 152) = v80;
  v81 = v89;
  *(_QWORD *)(v72 + 160) = v90;
  *(_QWORD *)(v72 + 168) = v81;
  v82 = v87;
  *(_QWORD *)(v72 + 176) = v88;
  *(_QWORD *)(v72 + 184) = v82;
  *(_QWORD *)(v72 + 192) = v86;
  *(_QWORD *)(v72 + 200) = v44;
  *(_QWORD *)(v72 + 208) = v46;
  *(_QWORD *)(v72 + 216) = v48;
  *(_QWORD *)(v72 + 224) = v56;
  *(_QWORD *)(v72 + 232) = v64;
  *(_QWORD *)(v72 + 240) = v67;
  *(_QWORD *)(v72 + 248) = v70;
  v83 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease(v72);
  return v83;
}

unint64_t sub_10061B12C()
{
  unint64_t result;

  result = qword_1009F11D0;
  if (!qword_1009F11D0)
  {
    result = swift_getWitnessTable(&unk_1007367B0, &type metadata for PauseCurrentAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F11D0);
  }
  return result;
}

unint64_t sub_10061B170()
{
  unint64_t result;

  result = qword_1009F11D8;
  if (!qword_1009F11D8)
  {
    result = swift_getWitnessTable(&unk_100735F60, &type metadata for PlayMostRecentAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F11D8);
  }
  return result;
}

_QWORD *sub_10061B1B4@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_10061B1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10061A154(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for StringSearchCriteria);
}

unint64_t sub_10061B1F8()
{
  unint64_t result;

  result = qword_1009F1218;
  if (!qword_1009F1218)
  {
    result = swift_getWitnessTable(&unk_1007358E8, &type metadata for AudiobookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009F1218);
  }
  return result;
}

_QWORD *sub_10061B240@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

_QWORD *sub_10061B27C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10061B2B4(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_10061B2F0@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10061B328(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_10061B35C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10061B394(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t sub_10061B3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10061A154(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ChangeOperation);
}

_QWORD *sub_10061B3E4@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10061B41C(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

uint64_t sub_10061B450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10061A154(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for ChangeOperation);
}

_QWORD *sub_10061B46C@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;

  result = IntentParameter.wrappedValue.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_10061B4A4(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

unint64_t sub_10061B4D8()
{
  unint64_t result;

  result = qword_1009F1350;
  if (!qword_1009F1350)
  {
    result = swift_getWitnessTable(&unk_100737E40, &type metadata for AudiobookSleepTimerIntent);
    atomic_store(result, (unint64_t *)&qword_1009F1350);
  }
  return result;
}

uint64_t sub_10061B520(char *a1)
{
  char v2;

  v2 = *a1;
  return IntentParameter.wrappedValue.setter(&v2);
}

_QWORD *sub_10061B554@<X0>(_QWORD *a1@<X8>)
{
  return IntentParameter.wrappedValue.getter(a1);
}

uint64_t sub_10061B578(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_100030B74(a2);
    a3();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> A?, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10061B5DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F1368;
  if (!qword_1009F1368)
  {
    v1 = sub_100030B74(&qword_1009F1370);
    result = swift_getWitnessTable(&protocol conformance descriptor for Measurement<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F1368);
  }
  return result;
}

uint64_t sub_10061B628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009F1360);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10061B670(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009F1360);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10061B6C8(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int16 a9)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  void *v24;
  Class isa;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Class v29;
  id v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v42[4];
  int v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;

  v50 = a8;
  v51 = a7;
  v53 = a4;
  v52 = a3;
  v48 = a1;
  v49 = a2;
  v11 = type metadata accessor for Locale(0);
  __chkstk_darwin(v11);
  v13 = &v42[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for String.LocalizationValue(0);
  v46 = *(_QWORD *)(v14 - 8);
  v47 = v14;
  v15 = __chkstk_darwin(v14);
  v17 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v45 = type metadata accessor for String.LocalizationOptions(0, v15);
  v18 = *(_QWORD *)(v45 - 8);
  __chkstk_darwin(v45);
  v20 = &v42[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  v23 = &v42[-v22];
  v24 = (void *)objc_opt_self(NSBundle);
  v44 = objc_msgSend(v24, "mainBundle");
  isa = (Class)objc_msgSend(v44, "localizations");
  if (!isa)
  {
    v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, &type metadata for String);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v26);
  }
  v43 = a9;
  v27 = sub_10004CFD4((uint64_t *)&unk_1009D8830);
  v28 = swift_allocObject(v27, 48, 7);
  *(_OWORD *)(v28 + 16) = xmmword_10070CCA0;
  *(_QWORD *)(v28 + 32) = a5;
  *(_QWORD *)(v28 + 40) = a6;
  v29 = Array._bridgeToObjectiveC()().super.isa;
  v30 = objc_msgSend(v24, "preferredLocalizationsFromArray:forPreferences:", isa, v29, swift_bridgeObjectRelease(v28).n128_f64[0]);

  v31 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, &type metadata for String);
  if (v31[2])
  {
    v32 = v31[4];
    v33 = v31[5];
    swift_bridgeObjectRetain(v33);
  }
  else
  {
    v32 = 0;
    v33 = 0;
  }
  v34 = swift_bridgeObjectRelease(v31);
  String.LocalizationOptions.init()(v34);
  String.LocalizationOptions._localization.setter(v32, v33);
  v36 = v46;
  v35 = v47;
  v37 = v53;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v46 + 16))(v17, v53, v47);
  v38 = v45;
  v39 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 16))(v20, v23, v45);
  static Locale.current.getter(v39);
  v40 = String.init(localized:defaultValue:options:table:bundle:locale:comment:)(v48, v49, v52, v17, v20, 0, 0, 0, v13, v51, v50, v43 & 0x1FF);

  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v35);
  (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v23, v38);
  return v40;
}

void *BKMessagesDebugProvider.enabled.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.enabled;
}

unint64_t static BKMessagesDebugProvider.enabled.getter()
{
  return 0xD00000000000001ELL;
}

void *BKMessagesDebugProvider.signIntoItunes.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.signIntoItunes;
}

unint64_t static BKMessagesDebugProvider.signIntoItunes.getter()
{
  return 0xD000000000000010;
}

void *BKMessagesDebugProvider.signIntoItunesCatalyst.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.signIntoItunesCatalyst;
}

unint64_t static BKMessagesDebugProvider.signIntoItunesCatalyst.getter()
{
  return 0xD000000000000018;
}

const char *BKMessagesDebugProvider.readSample.unsafeMutableAddressor()
{
  return "BMReadSample";
}

uint64_t static BKMessagesDebugProvider.readSample.getter()
{
  return 0x6153646165524D42;
}

void *BKMessagesDebugProvider.listenPreview.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.listenPreview;
}

uint64_t static BKMessagesDebugProvider.listenPreview.getter()
{
  return 0x6E657473694C4D42;
}

const char *BKMessagesDebugProvider.addToWTR.unsafeMutableAddressor()
{
  return "BMAddToWTR";
}

uint64_t static BKMessagesDebugProvider.addToWTR.getter()
{
  return 0x576F546464414D42;
}

void *BKMessagesDebugProvider.listenOnCarplay.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.listenOnCarplay;
}

unint64_t static BKMessagesDebugProvider.listenOnCarplay.getter()
{
  return 0xD000000000000011;
}

void *BKMessagesDebugProvider.appleWatchMessage.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.appleWatchMessage;
}

unint64_t static BKMessagesDebugProvider.appleWatchMessage.getter()
{
  return 0xD000000000000013;
}

void *BKMessagesDebugProvider.supplementalContent.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.supplementalContent;
}

unint64_t static BKMessagesDebugProvider.supplementalContent.getter()
{
  return 0xD000000000000015;
}

void *BKMessagesDebugProvider.enableCoaching.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.enableCoaching;
}

unint64_t static BKMessagesDebugProvider.enableCoaching.getter()
{
  return 0xD000000000000010;
}

void *BKMessagesDebugProvider.wtrGenericNotification.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.wtrGenericNotification;
}

unint64_t static BKMessagesDebugProvider.wtrGenericNotification.getter()
{
  return 0xD000000000000018;
}

void *BKMessagesDebugProvider.wtrPriceDropSettings.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.wtrPriceDropSettings;
}

unint64_t static BKMessagesDebugProvider.wtrPriceDropSettings.getter()
{
  return 0xD000000000000016;
}

void *BKMessagesDebugProvider.wtrPriceDropNotify.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.wtrPriceDropNotify;
}

unint64_t static BKMessagesDebugProvider.wtrPriceDropNotify.getter()
{
  return 0xD000000000000014;
}

void *BKMessagesDebugProvider.sgIntro.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.sgIntro;
}

unint64_t static BKMessagesDebugProvider.sgIntro.getter()
{
  return 0xD000000000000011;
}

void *BKMessagesDebugProvider.sgReportAConcern.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.sgReportAConcern;
}

unint64_t static BKMessagesDebugProvider.sgReportAConcern.getter()
{
  return 0xD000000000000012;
}

void *BKMessagesDebugProvider.readerThemeMessage.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.readerThemeMessage;
}

unint64_t static BKMessagesDebugProvider.readerThemeMessage.getter()
{
  return 0xD000000000000014;
}

void *BKMessagesDebugProvider.easyNavigationMessage.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.easyNavigationMessage;
}

unint64_t static BKMessagesDebugProvider.easyNavigationMessage.getter()
{
  return 0xD000000000000017;
}

void *BKMessagesDebugProvider.lockingBookOrientationMessage.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.lockingBookOrientationMessage;
}

unint64_t static BKMessagesDebugProvider.lockingBookOrientationMessage.getter()
{
  return 0xD00000000000001FLL;
}

void *BKMessagesDebugProvider.bookmarkShortcutMessage.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.bookmarkShortcutMessage;
}

unint64_t static BKMessagesDebugProvider.bookmarkShortcutMessage.getter()
{
  return 0xD000000000000018;
}

void *BKMessagesDebugProvider.readingGoalMessage.unsafeMutableAddressor()
{
  return &static BKMessagesDebugProvider.readingGoalMessage;
}

unint64_t static BKMessagesDebugProvider.readingGoalMessage.getter()
{
  return 0xD000000000000014;
}

id sub_10061C078()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BKMessagesDebugProvider()), "init");
  qword_100A1EF48 = (uint64_t)result;
  return result;
}

id BKMessagesDebugProvider.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BKMessagesDebugProvider();
  return objc_msgSendSuper2(&v2, "init");
}

id BKMessagesDebugProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BKMessagesDebugProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_10061C148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  NSString v16;
  NSString v17;
  id v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void (**v21)(char *, uint64_t);
  char *v22;
  void *v23;
  NSURL *v24;
  void *v25;
  void *v26;
  unint64_t v27;
  NSDictionary v28;
  Class isa;
  unint64_t v30;
  Class v31;
  id v32;
  id v33;
  NSString v34;
  NSString v35;
  id v36;
  void (*v37)(char *, uint64_t);
  void (**v38)(char *, uint64_t);
  NSURL *v39;
  void *v40;
  void *v41;
  unint64_t v42;
  Class v43;
  unint64_t v44;
  Class v45;
  void (**v47)(char *, uint64_t);
  char *v48;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v5 = (char *)&v47 - v4;
  v6 = type metadata accessor for URL(0);
  v7 = *(char **)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v47 = (void (**)(char *, uint64_t))((char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v47 - v11;
  __chkstk_darwin(v10);
  v48 = (char *)&v47 - v13;
  v14 = (void *)objc_opt_self(NSBundle);
  v15 = objc_msgSend(v14, "mainBundle");
  v16 = String._bridgeToObjectiveC()();
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend(v15, "URLForResource:withExtension:", v16, v17);

  if (v18)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v18);

    v19 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v7 + 4);
    v19(v5, v12, v6);
    v20 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v7 + 7);
    v20(v5, 0, 1, v6);
    v21 = (void (**)(char *, uint64_t))v7;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v7 + 6))(v5, 1, v6) != 1)
    {
      v22 = v48;
      v19(v48, v5, v6);
      v23 = (void *)objc_opt_self(AMSUIMessageRequest);
      URL._bridgeToObjectiveC()(v24);
      v26 = v25;
      v27 = sub_1000560A8((uint64_t)_swiftEmptyArrayStorage);
      v28.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v47 = v21;
      isa = v28.super.isa;
      swift_bridgeObjectRelease(v27);
      v30 = sub_1000560A8((uint64_t)_swiftEmptyArrayStorage);
      v31 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v30);
      v32 = objc_msgSend(v23, "bk_fromJSONURL:localizedTexts:localizedActionTitles:", v26, isa, v31);

      v47[1](v22, v6);
      return v32;
    }
  }
  else
  {
    v20 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v7 + 7);
    v20(v5, 1, 1, v6);
    v21 = (void (**)(char *, uint64_t))v7;
  }
  sub_10000B518((uint64_t)v5);
  v33 = objc_msgSend(v14, "mainBundle");
  v34 = String._bridgeToObjectiveC()();
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v33, "URLForResource:withExtension:", v34, v35);

  if (v36)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v36);

    v37 = v21[4];
    ((void (*)(char *, char *, uint64_t))v37)(v3, v12, v6);
    v20(v3, 0, 1, v6);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v21[6])(v3, 1, v6) != 1)
    {
      v38 = v47;
      ((void (*)(void (**)(char *, uint64_t), char *, uint64_t))v37)(v47, v3, v6);
      v48 = (char *)objc_opt_self(AMSUIMessageRequest);
      URL._bridgeToObjectiveC()(v39);
      v41 = v40;
      v42 = sub_1000560A8((uint64_t)_swiftEmptyArrayStorage);
      v43 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v42);
      v44 = sub_1000560A8((uint64_t)_swiftEmptyArrayStorage);
      v45 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v44);
      v32 = objc_msgSend(v48, "bk_fromJSONURL:localizedTexts:localizedActionTitles:", v41, v43, v45);

      v21[1]((char *)v38, v6);
      return v32;
    }
  }
  else
  {
    v20(v3, 1, 1, v6);
  }
  sub_10000B518((uint64_t)v3);
  return 0;
}

void _s5Books23BKMessagesDebugProviderC19fetchDialogRequests3for10completionyShySSG_ySDySSSo16AMSDialogRequestCG_s5Error_pSgtcSgtF_0(uint64_t a1, void (*a2)(_QWORD *, _QWORD), uint64_t a3)
{
  unint64_t v3;
  id v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  unsigned int v22;
  id v23;
  id v24;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  char v27;
  uint64_t v28;
  _BOOL8 v29;
  BOOL v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v43;
  id v44;

  if (!a2)
    return;
  swift_retain(a3);
  v3 = sub_1000316DC((uint64_t)&off_1008F0428);
  v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v5 = 0;
  v6 = *(_QWORD *)(v3 + 64);
  v43 = v3 + 64;
  v44 = v4;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v10 = (unint64_t)(v7 + 63) >> 6;
  if ((v8 & v6) != 0)
    goto LABEL_8;
LABEL_9:
  while (2)
  {
    v13 = v5 + 1;
    if (!__OFADD__(v5, 1))
    {
      if (v13 < v10)
      {
        v14 = *(_QWORD *)(v43 + 8 * v13);
        ++v5;
        if (v14)
          goto LABEL_22;
        v5 = v13 + 1;
        if (v13 + 1 >= v10)
          goto LABEL_38;
        v14 = *(_QWORD *)(v43 + 8 * v5);
        if (v14)
          goto LABEL_22;
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          goto LABEL_38;
        v14 = *(_QWORD *)(v43 + 8 * v5);
        if (v14)
        {
LABEL_22:
          v9 = (v14 - 1) & v14;
          for (i = __clz(__rbit64(v14)) + (v5 << 6); ; i = v11 | (v5 << 6))
          {
            v16 = 16 * i;
            v17 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v16 + 8);
            v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v16);
            v20 = *v18;
            v19 = v18[1];
            swift_bridgeObjectRetain(v17);
            swift_bridgeObjectRetain(v19);
            v21 = String._bridgeToObjectiveC()();
            v22 = objc_msgSend(v44, "BOOLForKey:", v21);

            if (!v22 || (sub_1003242F8(v20, v19, a1) & 1) == 0)
              break;
            v23 = sub_10061C148();
            swift_bridgeObjectRelease(v17);
            if (!v23)
              goto LABEL_7;
            v24 = v23;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyDictionarySingleton);
            v26 = sub_10004CE80(v20, v19);
            v28 = _swiftEmptyDictionarySingleton[2];
            v29 = (v27 & 1) == 0;
            v30 = __OFADD__(v28, v29);
            v31 = v28 + v29;
            if (v30)
              goto LABEL_42;
            v32 = v27;
            if (_swiftEmptyDictionarySingleton[3] >= v31)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v39 = v26;
                sub_1002C0288();
                v26 = v39;
              }
            }
            else
            {
              sub_10037B478(v31, isUniquelyReferenced_nonNull_native);
              v26 = sub_10004CE80(v20, v19);
              if ((v32 & 1) != (v33 & 1))
                goto LABEL_44;
            }
            if ((v32 & 1) != 0)
            {
              v34 = _swiftEmptyDictionarySingleton[7];
              v35 = 8 * v26;

              *(_QWORD *)(v34 + v35) = v24;
            }
            else
            {
              _swiftEmptyDictionarySingleton[(v26 >> 6) + 8] |= 1 << v26;
              v36 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v26);
              *v36 = v20;
              v36[1] = v19;
              *(_QWORD *)(_swiftEmptyDictionarySingleton[7] + 8 * v26) = v24;
              v37 = _swiftEmptyDictionarySingleton[2];
              v30 = __OFADD__(v37, 1);
              v38 = v37 + 1;
              if (v30)
                goto LABEL_43;
              _swiftEmptyDictionarySingleton[2] = v38;
              swift_bridgeObjectRetain(v19);
            }

            swift_bridgeObjectRelease(v19);
            swift_bridgeObjectRelease(0x8000000000000000);
            if (!v9)
              goto LABEL_9;
LABEL_8:
            v11 = __clz(__rbit64(v9));
            v9 &= v9 - 1;
          }
          swift_bridgeObjectRelease(v17);
LABEL_7:
          swift_bridgeObjectRelease(v19);
          if (!v9)
            continue;
          goto LABEL_8;
        }
        v15 = v13 + 3;
        if (v15 < v10)
        {
          v14 = *(_QWORD *)(v43 + 8 * v15);
          if (v14)
          {
            v5 = v15;
            goto LABEL_22;
          }
          while (1)
          {
            v5 = v15 + 1;
            if (__OFADD__(v15, 1))
              goto LABEL_41;
            if (v5 >= v10)
              break;
            v14 = *(_QWORD *)(v43 + 8 * v5);
            ++v15;
            if (v14)
              goto LABEL_22;
          }
        }
      }
LABEL_38:
      swift_release(v3);
      a2(_swiftEmptyDictionarySingleton, 0);
      swift_bridgeObjectRelease(_swiftEmptyDictionarySingleton);
      sub_10002AD00((uint64_t)a2, a3);

      return;
    }
    break;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t type metadata accessor for BKMessagesDebugProvider()
{
  return objc_opt_self(_TtC5Books23BKMessagesDebugProvider);
}

uint64_t sub_10061CA0C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v16, qword_100A1EF50);
  sub_100048F64(v16, (uint64_t)qword_100A1EF50);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x646F4D2079616C50, 0xE900000000000065);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Type display representation for enum that defines 'Play Audiobook' modes, e.g. most recent vs specific audiobook", 112, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

unint64_t sub_10061CC20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  unint64_t result;
  _QWORD v31[2];
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v0 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v0);
  v39 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v2);
  v38 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v36 = *(_QWORD *)(v40 - 8);
  __chkstk_darwin(v40);
  v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  __chkstk_darwin(v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009F1588);
  v17 = sub_10004CFD4(&qword_1009D0900);
  v18 = *(_QWORD *)(v17 - 8);
  v35 = *(_QWORD *)(v18 + 72);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v19 + 32) & ~v19;
  v21 = swift_allocObject(v16, v20 + 2 * v35, v19 | 7);
  v37 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_10070FC00;
  v22 = v21 + v20;
  v31[1] = v21 + v20 + *(int *)(v17 + 48);
  *(_BYTE *)(v21 + v20) = 0;
  v23 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007DA0B0);
  static Locale.current.getter(v23);
  v34 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v36 = *(_QWORD *)(v36 + 104);
  v24 = v5;
  ((void (*)(char *))v36)(v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "'Play Mode' enum case - target the most recent audiobook.", 57, 2);
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v25 = v38;
  v32(v38, 1, 1, v12);
  v26 = type metadata accessor for DisplayRepresentation.Image(0);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v28 = v39;
  v27(v39, 1, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v25, v28);
  *(_BYTE *)(v22 + v35) = 1;
  v29 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007DA110);
  static Locale.current.getter(v29);
  ((void (*)(char *, _QWORD, uint64_t))v36)(v24, v34, v40);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v24, "'Play Mode' enum case - target a specific audiobook.", 52, 2);
  v32(v25, 1, 1, v33);
  v27(v28, 1, 1, v26);
  DisplayRepresentation.init(title:subtitle:image:)(v15, v25, v28);
  result = sub_1001DBC44(v37);
  qword_100A1EF68 = result;
  return result;
}

unint64_t sub_10061CFDC()
{
  unint64_t result;

  result = qword_1009F13B8;
  if (!qword_1009F13B8)
  {
    result = swift_getWitnessTable(&unk_1007353EC, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F13B8);
  }
  return result;
}

uint64_t sub_10061D020@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008F11A8, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

unint64_t sub_10061D080()
{
  unint64_t result;

  result = qword_1009F13C0;
  if (!qword_1009F13C0)
  {
    result = swift_getWitnessTable(&unk_1007354CC, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F13C0);
  }
  return result;
}

unint64_t sub_10061D0C8()
{
  unint64_t result;

  result = qword_1009F13C8;
  if (!qword_1009F13C8)
  {
    result = swift_getWitnessTable(&unk_100735504, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F13C8);
  }
  return result;
}

unint64_t sub_10061D110()
{
  unint64_t result;

  result = qword_1009F13D0;
  if (!qword_1009F13D0)
  {
    result = swift_getWitnessTable(&unk_100735454, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F13D0);
  }
  return result;
}

unint64_t sub_10061D158()
{
  unint64_t result;

  result = qword_1009F13D8;
  if (!qword_1009F13D8)
  {
    result = swift_getWitnessTable(&unk_100735534, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F13D8);
  }
  return result;
}

unint64_t sub_10061D1A0()
{
  unint64_t result;

  result = qword_1009F13E0;
  if (!qword_1009F13E0)
  {
    result = swift_getWitnessTable(&unk_10073555C, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F13E0);
  }
  return result;
}

unint64_t sub_10061D1E8()
{
  unint64_t result;

  result = qword_1009F13E8;
  if (!qword_1009F13E8)
  {
    result = swift_getWitnessTable(&unk_100735584, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F13E8);
  }
  return result;
}

unint64_t sub_10061D230()
{
  unint64_t result;

  result = qword_1009F13F0;
  if (!qword_1009F13F0)
  {
    result = swift_getWitnessTable(&unk_1007355DC, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F13F0);
  }
  return result;
}

uint64_t sub_10061D274@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CEA78, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1EF50, (uint64_t)sub_10061CA0C, a1);
}

uint64_t sub_10061D298(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10061D2D8();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppEnum.defaultResolverSpecification>>, 1);
}

unint64_t sub_10061D2D8()
{
  unint64_t result;

  result = qword_1009F13F8;
  if (!qword_1009F13F8)
  {
    result = swift_getWitnessTable(&unk_10073548C, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F13F8);
  }
  return result;
}

uint64_t sub_10061D31C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10061D2D8();
  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10061D358()
{
  unint64_t result;

  result = qword_1009F1400;
  if (!qword_1009F1400)
  {
    result = swift_getWitnessTable(&unk_10073561C, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F1400);
  }
  return result;
}

unint64_t sub_10061D3A0()
{
  unint64_t result;

  result = qword_1009F1408;
  if (!qword_1009F1408)
  {
    result = swift_getWitnessTable(&unk_100735644, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F1408);
  }
  return result;
}

unint64_t sub_10061D3E8()
{
  unint64_t result;

  result = qword_1009F1410;
  if (!qword_1009F1410)
  {
    result = swift_getWitnessTable(&unk_100735414, &type metadata for PlayAudiobookIntent.PlayMode);
    atomic_store(result, (unint64_t *)&qword_1009F1410);
  }
  return result;
}

double sub_10061D42C()
{
  double result;

  if (qword_1009CEA80 != -1)
    swift_once(&qword_1009CEA80, sub_10061CC20);
  *(_QWORD *)&result = swift_bridgeObjectRetain(qword_100A1EF68).n128_u64[0];
  return result;
}

uint64_t sub_10061D46C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10061D230();
  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10061D4A4()
{
  return sub_100030B34(&qword_1009F1418, &qword_1009F1420, (uint64_t)&protocol conformance descriptor for [A]);
}

void sub_10061D4D0(_QWORD *a1@<X8>)
{
  *a1 = &off_1008EFD58;
}

unint64_t sub_10061D4E4()
{
  unint64_t result;

  result = qword_1009F1428;
  if (!qword_1009F1428)
  {
    result = swift_getWitnessTable(&unk_100735734, &type metadata for PlayAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F1428);
  }
  return result;
}

unint64_t sub_10061D52C()
{
  unint64_t result;

  result = qword_1009F1430;
  if (!qword_1009F1430)
  {
    result = swift_getWitnessTable(&unk_10073575C, &type metadata for PlayAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F1430);
  }
  return result;
}

uint64_t sub_10061D570(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A958, 1);
}

uint64_t sub_10061D580(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087A930, 1);
}

uint64_t sub_10061D590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1EF70);
  sub_100048F64(v10, (uint64_t)qword_100A1EF70);
  v11 = String.LocalizationValue.init(stringLiteral:)(0x6475412079616C50, 0xEE006B6F6F626F69);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for 'Play Audiobook' AppIntent.", 37, 2);
}

uint64_t sub_10061D70C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  unint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v42 = a1;
  v1 = sub_10004CFD4(&qword_1009F1538);
  v2 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  v41 = v2;
  __chkstk_darwin(v1);
  v38 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v39 = (char *)&v32 - v5;
  v6 = sub_10004CFD4(&qword_1009F1540);
  v36 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - v10;
  __chkstk_darwin(v12);
  v37 = (char *)&v32 - v13;
  v44 = 0;
  v14 = sub_10004CFD4(&qword_1009F1548);
  v15 = sub_100358FD8();
  v34 = v15;
  v16 = sub_10061D1E8();
  v33 = v16;
  v17 = sub_100030B34(&qword_1009F1550, &qword_1009F1548, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  v32 = v17;
  ParameterSummaryCaseCondition.init(_:_:)(&v44, sub_10061DA80, 0, &type metadata for PlayAudiobookIntent, &type metadata for PlayAudiobookIntent.PlayMode, v14, v15, v16, v17);
  v18 = sub_100030B34(&qword_1009F1558, &qword_1009F1540, (uint64_t)&protocol conformance descriptor for ParameterSummaryCaseCondition<A, B, C>);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v11, &type metadata for PlayAudiobookIntent, &type metadata for PlayAudiobookIntent.PlayMode, v6, v18);
  v19 = *(void (**)(char *, uint64_t))(v36 + 8);
  v19(v11, v6);
  v43 = 1;
  v35 = v14;
  v21 = v33;
  v20 = v34;
  ParameterSummaryCaseCondition.init(_:_:)(&v43, sub_10061DA84, 0, &type metadata for PlayAudiobookIntent, &type metadata for PlayAudiobookIntent.PlayMode, v14, v34, v33, v17);
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v8, &type metadata for PlayAudiobookIntent, &type metadata for PlayAudiobookIntent.PlayMode, v6, v18);
  v19(v8, v6);
  v22 = v38;
  v23 = v21;
  v24 = v32;
  ParameterSummaryDefaultCaseCondition.init(_:)(sub_10061DA80, 0, &type metadata for PlayAudiobookIntent, &type metadata for PlayAudiobookIntent.PlayMode, v14, v20, v21, v32);
  v25 = sub_100030B34(&qword_1009F1560, &qword_1009F1538, (uint64_t)&protocol conformance descriptor for ParameterSummaryDefaultCaseCondition<A, B, C>);
  v27 = v39;
  v26 = v40;
  static ParameterSummaryCaseBuilder.buildExpression<A>(_:)(v22, &type metadata for PlayAudiobookIntent, &type metadata for PlayAudiobookIntent.PlayMode, v40, v25);
  v28 = *(void (**)(char *, uint64_t))(v41 + 8);
  v28(v22, v26);
  v31 = v24;
  v29 = v37;
  static ParameterSummaryCaseBuilder.buildBlock<A, B, C>(_:_:_:)(v37, v11, v27, &type metadata for PlayAudiobookIntent, &type metadata for PlayAudiobookIntent.PlayMode, v6, v6, v35, v23, v18, v18, v31);
  v28(v27, v26);
  v19(v11, v6);
  return ((uint64_t (*)(char *, uint64_t))v19)(v29, v6);
}

uint64_t sub_10061DA84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[2];

  v25[1] = a1;
  v1 = sub_10004CFD4(&qword_1009F1568);
  __chkstk_darwin(v1);
  v3 = (char *)v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009F1570);
  __chkstk_darwin(v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009F1548);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v25 - v12;
  v14 = sub_100358FD8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(6, 2, &type metadata for PlayAudiobookIntent, v14);
  v15._countAndFlagsBits = 0x2079616C50;
  v15._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100735B30);
  v17 = sub_10004CFD4(&qword_1009F1578);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 32;
  v18._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  v19 = swift_getKeyPath(&unk_100735B58);
  v20 = sub_10004CFD4(&qword_1009F1580);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(v19, v4, v20);
  swift_release(v19);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v21);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for PlayAudiobookIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for PlayAudiobookIntent, v14);
  v22 = sub_100030B34(&qword_1009F1550, &qword_1009F1548, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for PlayAudiobookIntent, v7, v22);
  v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for PlayAudiobookIntent, v7, v22);
  return ((uint64_t (*)(char *, uint64_t))v23)(v13, v7);
}

uint64_t sub_10061DD08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  Swift::String v15;
  uint64_t KeyPath;
  uint64_t v17;
  Swift::String v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  _QWORD v22[2];

  v22[1] = a1;
  v1 = sub_10004CFD4(&qword_1009F1568);
  __chkstk_darwin(v1);
  v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009F1570);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009F1548);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v22 - v12;
  v14 = sub_100358FD8();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)(5, 1, &type metadata for PlayAudiobookIntent, v14);
  v15._countAndFlagsBits = 0x2079616C50;
  v15._object = (void *)0xE500000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v15);
  KeyPath = swift_getKeyPath(&unk_100735B30);
  v17 = sub_10004CFD4(&qword_1009F1578);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)(KeyPath, v4, v17);
  swift_release(KeyPath);
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v18);
  ParameterSummaryString.init(stringInterpolation:)(v6, &type metadata for PlayAudiobookIntent, v14);
  IntentParameterSummary.init(_:table:)(v3, 0x6E65746E49707041, 0xEA00000000007374, &type metadata for PlayAudiobookIntent, v14);
  v19 = sub_100030B34(&qword_1009F1550, &qword_1009F1548, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
  static ParameterSummaryBuilder.buildExpression<A>(_:)(v10, &type metadata for PlayAudiobookIntent, v7, v19);
  v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v10, v7);
  static ParameterSummaryBuilder.buildBlock<A>(_:)(v13, &type metadata for PlayAudiobookIntent, v7, v19);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
}

uint64_t sub_10061DF48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[36] = a3;
  v4[37] = a4;
  v4[34] = a1;
  v4[35] = a2;
  v5 = sub_10004CFD4(&qword_1009D1330);
  v4[38] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for AppIntentError(0);
  v4[39] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[40] = v7;
  v4[41] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10061DFD0, 0, 0);
}

uint64_t sub_10061DFD0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[42] = objc_opt_self(UIApplication);
  v1 = type metadata accessor for MainActor(0);
  v0[43] = v1;
  v0[44] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_10061E04C, v2, v3);
}

uint64_t sub_10061E04C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 360) = objc_msgSend(*(id *)(v0 + 336), "sharedApplication", swift_release(*(_QWORD *)(v0 + 352)).n128_f64[0]);
  return swift_task_switch(sub_10061E0A8, 0, 0);
}

uint64_t sub_10061E0A8()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 360);
  v2 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v0 + 368) = objc_msgSend(v1, "beginBackgroundTaskWithName:expirationHandler:", v2, 0);

  IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 97));
  if ((*(_BYTE *)(v0 + 97) & 1) != 0)
  {
    IntentParameter.wrappedValue.getter((_QWORD *)(v0 + 104));
    v3 = *(_QWORD *)(v0 + 104);
    v4 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 432) = v3;
    *(_QWORD *)(v0 + 440) = v4;
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 128);
    *(_QWORD *)(v0 + 448) = v5;
    *(_QWORD *)(v0 + 456) = v6;
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 144);
    *(_QWORD *)(v0 + 464) = v7;
    *(_QWORD *)(v0 + 472) = v8;
    v9 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 160);
    *(_QWORD *)(v0 + 480) = v9;
    *(_QWORD *)(v0 + 488) = v10;
    v12 = *(_QWORD *)(v0 + 168);
    v11 = *(_QWORD *)(v0 + 176);
    *(_QWORD *)(v0 + 496) = v12;
    *(_QWORD *)(v0 + 504) = v11;
    v13 = *(_BYTE *)(v0 + 184);
    *(_BYTE *)(v0 + 98) = v13;
    if (v4)
    {
      *(_QWORD *)(v0 + 16) = v3;
      *(_QWORD *)(v0 + 24) = v4;
      *(_QWORD *)(v0 + 32) = v5;
      *(_QWORD *)(v0 + 40) = v6;
      *(_QWORD *)(v0 + 48) = v7;
      *(_QWORD *)(v0 + 56) = v8;
      *(_QWORD *)(v0 + 64) = v9;
      *(_QWORD *)(v0 + 72) = v10;
      *(_QWORD *)(v0 + 80) = v12;
      *(_QWORD *)(v0 + 88) = v11;
      *(_BYTE *)(v0 + 96) = v13 & 1;
      AppDependency.wrappedValue.getter((_QWORD *)(v0 + 192));
      v30 = *(_OWORD *)(v0 + 208);
      *(_OWORD *)(v0 + 512) = *(_OWORD *)(v0 + 192);
      *(_OWORD *)(v0 + 528) = v30;
      *(_QWORD *)(v0 + 544) = *(_QWORD *)(v0 + 224);
      v32 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1009E5078 + dword_1009E5078);
      v14 = (_QWORD *)swift_task_alloc(unk_1009E507C);
      *(_QWORD *)(v0 + 552) = v14;
      *v14 = v0;
      v14[1] = sub_10061E4D4;
      return v32(v0 + 16, v30);
    }
    else
    {
      v20 = *(_QWORD *)(v0 + 320);
      v19 = *(_QWORD *)(v0 + 328);
      v21 = *(_QWORD *)(v0 + 304);
      v22 = *(_QWORD *)(v0 + 312);
      v23 = IntentParameter.projectedValue.getter(v11);
      v24 = type metadata accessor for IntentDialog(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v21, 1, 1, v24);
      IntentParameter.needsValueError(_:)(v21);
      swift_release(v23);
      sub_100010960(v21, &qword_1009D1330);
      v25 = sub_1001FC22C();
      swift_allocError(v22, v25, 0, 0);
      v27 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v26, v19, v22);
      swift_willThrow(v27);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v22);
      v28 = *(_QWORD *)(v0 + 304);
      swift_task_dealloc(*(_QWORD *)(v0 + 328));
      v29 = swift_task_dealloc(v28);
      return (*(uint64_t (**)(__n128))(v0 + 8))(v29);
    }
  }
  else
  {
    AppDependency.wrappedValue.getter((_QWORD *)(v0 + 232));
    v16 = *(_QWORD *)(v0 + 240);
    *(_QWORD *)(v0 + 376) = *(_QWORD *)(v0 + 232);
    *(_QWORD *)(v0 + 384) = v16;
    v31 = *(_OWORD *)(v0 + 248);
    *(_OWORD *)(v0 + 392) = v31;
    v17 = *(_QWORD *)(v0 + 264);
    *(_QWORD *)(v0 + 408) = v17;
    v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1009E5030 + dword_1009E5030);
    v18 = (_QWORD *)swift_task_alloc(unk_1009E5034);
    *(_QWORD *)(v0 + 416) = v18;
    *v18 = v0;
    v18[1] = sub_10061E360;
    return v33(v16, v31, v17);
  }
}

uint64_t sub_10061E360()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 416);
  *(_QWORD *)(*v1 + 424) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10061E460;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 400);
    v6 = *(_QWORD *)(v2 + 408);
    v7 = *(_QWORD *)(v2 + 384);
    v8 = *(void **)(v2 + 392);

    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v6);
    v4 = sub_10061E400;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10061E400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 344);
  *(_QWORD *)(v1 + 568) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10061E6F4, v3, v4);
}

uint64_t sub_10061E460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 400);
  v2 = *(_QWORD *)(v0 + 408);
  v3 = *(_QWORD *)(v0 + 384);
  v4 = *(void **)(v0 + 392);

  swift_unknownObjectRelease(v3);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  v5 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10061E4D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 552);
  *(_QWORD *)(*v1 + 560) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_10061E608;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 544);
    v6 = *(_QWORD *)(v2 + 536);
    v7 = *(void **)(v2 + 528);
    v8 = *(_QWORD *)(v2 + 520);

    swift_unknownObjectRelease(v8);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v5);
    v4 = sub_10061E57C;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_10061E57C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_100620F24(v0[54], v0[55], v0[56], v0[57], v0[58], v0[59], v0[60], v0[61], v0[62], v0[63]);
  v2 = v0[43];
  v0[71] = static MainActor.shared.getter(v1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_10061E6F4, v3, v4);
}

uint64_t sub_10061E608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v0 + 536);
  v3 = *(void **)(v0 + 528);
  v4 = *(_QWORD *)(v0 + 520);
  v12 = *(_QWORD *)(v0 + 496);
  v13 = *(_QWORD *)(v0 + 504);
  v16 = *(_QWORD *)(v0 + 480);
  v17 = *(_QWORD *)(v0 + 488);
  v5 = *(_QWORD *)(v0 + 456);
  v14 = *(_QWORD *)(v0 + 464);
  v15 = *(_QWORD *)(v0 + 472);
  v6 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 448);
  v8 = *(_QWORD *)(v0 + 432);

  swift_unknownObjectRelease(v4);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  sub_100620F24(v8, v6, v7, v5, v14, v15, v16, v17, v12, v13);
  v9 = *(_QWORD *)(v0 + 304);
  swift_task_dealloc(*(_QWORD *)(v0 + 328));
  v10 = swift_task_dealloc(v9);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v10);
}

uint64_t sub_10061E6F4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 576) = objc_msgSend(*(id *)(v0 + 336), "sharedApplication", swift_release(*(_QWORD *)(v0 + 568)).n128_f64[0]);
  return swift_task_switch(sub_10061E750, 0, 0);
}

uint64_t sub_10061E750()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 576);
  v2 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 304);
  objc_msgSend(v1, "endBackgroundTask:", *(_QWORD *)(v0 + 368));

  static IntentResult.result<>()(v4);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10061E7C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CEA88, (uint64_t (*)(_QWORD))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100A1EF70, (uint64_t)sub_10061D590, a1);
}

uint64_t sub_10061E7E8(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;

  KeyPath = swift_getKeyPath(&unk_100735B30);
  v4 = sub_10004CFD4(&qword_1009F1528);
  v5 = sub_100030B34(&qword_1009F1530, &qword_1009F1528, (uint64_t)&protocol conformance descriptor for ParameterSummaryTupleCaseCondition<A, B, C>);
  return ParameterSummarySwitchCondition.init(_:_:)(KeyPath, sub_10061D70C, 0, v4, a2, v5);
}

uint64_t sub_10061E874(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *v1;
  v5 = v1[1];
  v6 = v1[2];
  v7 = (_QWORD *)swift_task_alloc(dword_1009F1524);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return sub_10061DF48(a1, v4, v5, v6);
}

uint64_t sub_10061E8E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = sub_1006208E8();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

unint64_t sub_10061E90C()
{
  unint64_t result;

  result = qword_1009F1440;
  if (!qword_1009F1440)
  {
    result = swift_getWitnessTable(&unk_100735778, &type metadata for PlayAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F1440);
  }
  return result;
}

uint64_t sub_10061E950(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100358FD8();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10061E980()
{
  unint64_t result;

  result = qword_1009F1448;
  if (!qword_1009F1448)
  {
    result = swift_getWitnessTable(&unk_1007357F8, &type metadata for AudiobookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009F1448);
  }
  return result;
}

unint64_t sub_10061E9C8()
{
  unint64_t result;

  result = qword_1009F1450;
  if (!qword_1009F1450)
  {
    result = swift_getWitnessTable(&unk_100735830, &type metadata for AudiobookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009F1450);
  }
  return result;
}

unint64_t sub_10061EA10()
{
  unint64_t result;

  result = qword_1009F1458;
  if (!qword_1009F1458)
  {
    result = swift_getWitnessTable(&unk_100735860, &type metadata for AudiobookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009F1458);
  }
  return result;
}

unint64_t sub_10061EA58()
{
  unint64_t result;

  result = qword_1009F1460;
  if (!qword_1009F1460)
  {
    result = swift_getWitnessTable(&unk_1007359C8, &type metadata for AudiobookEntityStringQuery);
    atomic_store(result, (unint64_t *)&qword_1009F1460);
  }
  return result;
}

uint64_t sub_10061EA9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _OWORD v7[2];
  uint64_t v8;

  sub_10004CFD4(&qword_1009D2100);
  v0 = type metadata accessor for AppDependencyManager(0);
  memset(v7, 0, sizeof(v7));
  v8 = 0;
  v5 = static AppDependencyManager.shared.getter(v0, v1, v2, v3, v4);
  result = AppDependency.__allocating_init(key:manager:)(v7, v5);
  qword_100A1EF88 = result;
  return result;
}

uint64_t sub_10061EB00()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v0 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v0);
  v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v3 = *(_QWORD *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Locale(0);
  __chkstk_darwin(v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TypeDisplayRepresentation(0);
  sub_10001BFD8(v16, qword_100A1EF90);
  sub_100048F64(v16, (uint64_t)qword_100A1EF90);
  v17 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xE90000000000006BLL);
  static Locale.current.getter(v17);
  (*(void (**)(char *, _QWORD, _QWORD))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v19[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v11, 0, 0, v8, v5, "Type display representation for AppEntity that represents a audiobook", 69, 2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v2, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)(v15, v2);
}

_QWORD *sub_10061ED14@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *result;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v30[1] = a1;
  v3 = sub_10004CFD4(&qword_1009D1378);
  __chkstk_darwin(v3);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v30 - v10;
  v12 = type metadata accessor for LocalizedStringResource(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v30 - v17;
  EntityProperty.wrappedValue.getter(&v31, v19);
  v21 = v32;
  if (v32)
  {
    v22 = v31;
  }
  else
  {
    v22 = *v2;
    v21 = v2[1];
    v20 = swift_bridgeObjectRetain(v21);
  }
  v23 = LocalizedStringResource.init(stringLiteral:)(v22, v21, v20);
  EntityProperty.wrappedValue.getter(&v31, v23);
  v24 = v32;
  swift_bridgeObjectRelease(v32);
  if (!v24)
  {
    v28 = 1;
    goto LABEL_8;
  }
  result = EntityProperty.wrappedValue.getter(&v31, v25);
  if (v32)
  {
    LocalizedStringResource.init(stringLiteral:)(v31, v32, v27);
    v28 = 0;
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v28, 1, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
    sub_1001FC148((uint64_t)v11, (uint64_t)v8);
    v29 = type metadata accessor for DisplayRepresentation.Image(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v5, 1, 1, v29);
    DisplayRepresentation.init(title:subtitle:image:)(v15, v8, v5);
    sub_100010960((uint64_t)v11, &qword_1009D1338);
    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
  }
  __break(1u);
  return result;
}

double sub_10061EF4C@<D0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  double result;

  if (qword_1009CEA90 != -1)
    swift_once(&qword_1009CEA90, sub_10061EA9C);
  v2 = qword_100A1EF88;
  *a1 = qword_100A1EF88;
  *(_QWORD *)&result = swift_retain(v2).n128_u64[0];
  return result;
}

unint64_t sub_10061EFA0()
{
  unint64_t result;

  result = qword_1009F1468;
  if (!qword_1009F1468)
  {
    result = swift_getWitnessTable(&unk_100735898, &type metadata for AudiobookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009F1468);
  }
  return result;
}

unint64_t sub_10061EFE8()
{
  unint64_t result;

  result = qword_1009F1470;
  if (!qword_1009F1470)
  {
    result = swift_getWitnessTable(&unk_1007358C0, &type metadata for AudiobookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009F1470);
  }
  return result;
}

unint64_t sub_10061F034()
{
  unint64_t result;

  result = qword_1009F1478;
  if (!qword_1009F1478)
  {
    result = swift_getWitnessTable(&unk_100735940, &type metadata for AudiobookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009F1478);
  }
  return result;
}

uint64_t sub_10061F078@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E9C50(&qword_1009CEA98, (uint64_t (*)(_QWORD))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100A1EF90, (uint64_t)sub_10061EB00, a1);
}

uint64_t sub_10061F09C()
{
  return sub_100030B34(&qword_1009F1480, &qword_1009F1488, (uint64_t)&protocol conformance descriptor for EmptyResolverSpecification<A>);
}

uint64_t sub_10061F0C8(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_100537C34();
  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_10061F104()
{
  unint64_t result;

  result = qword_1009F1490;
  if (!qword_1009F1490)
  {
    result = swift_getWitnessTable(&unk_100735970, &type metadata for AudiobookAppEntity);
    atomic_store(result, (unint64_t *)&qword_1009F1490);
  }
  return result;
}

uint64_t sub_10061F14C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10061F034();
  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10061F184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;

  v4[9] = a1;
  v4[10] = a2;
  v5 = *v3;
  v4[11] = a3;
  v4[12] = v5;
  return swift_task_switch(sub_10061F1A4, 0, 0);
}

uint64_t sub_10061F1A4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[11];
  AppDependency.wrappedValue.getter(v0 + 2);
  v2 = (_QWORD *)swift_task_alloc(dword_1009E5054);
  v0[13] = v2;
  *v2 = v0;
  v2[1] = sub_1001F8D34;
  return sub_10047244C(v0[10], v1);
}

unint64_t sub_10061F214()
{
  unint64_t result;

  result = qword_1009F14A0;
  if (!qword_1009F14A0)
  {
    result = swift_getWitnessTable(&unk_100735A20, &type metadata for AudiobookEntityStringQuery);
    atomic_store(result, (unint64_t *)&qword_1009F14A0);
  }
  return result;
}

unint64_t sub_10061F25C()
{
  unint64_t result;

  result = qword_1009F14A8[0];
  if (!qword_1009F14A8[0])
  {
    result = swift_getWitnessTable(&unk_100735A80, &type metadata for AudiobookEntityStringQuery);
    atomic_store(result, qword_1009F14A8);
  }
  return result;
}

uint64_t sub_10061F2A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = v3;
  return swift_task_switch(sub_10061F2C0, 0, 0);
}

uint64_t sub_10061F2C0()
{
  _QWORD *v0;
  _QWORD *v1;

  AppDependency.wrappedValue.getter(v0 + 2);
  v1 = (_QWORD *)swift_task_alloc(dword_1009E5074);
  v0[11] = v1;
  *v1 = v0;
  v1[1] = sub_1001F8F40;
  return sub_100472A88(v0[9]);
}

uint64_t sub_10061F320(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = v3;
  return swift_task_switch(sub_10061F33C, 0, 0);
}

uint64_t sub_10061F33C()
{
  uint64_t v0;
  _QWORD *v1;

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = (_QWORD *)swift_task_alloc(dword_1009E5054);
  *(_QWORD *)(v0 + 88) = v1;
  *v1 = v0;
  v1[1] = sub_1001F9044;
  return sub_10047244C(0, 0);
}

unint64_t sub_10061F3A0()
{
  unint64_t result;

  result = qword_1009F14C0;
  if (!qword_1009F14C0)
  {
    result = swift_getWitnessTable(&unk_100735AA8, &type metadata for AudiobookEntityStringQuery);
    atomic_store(result, (unint64_t *)&qword_1009F14C0);
  }
  return result;
}

unint64_t sub_10061F3E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F14C8[0];
  if (!qword_1009F14C8[0])
  {
    v1 = sub_100030B74(&qword_1009E5058);
    sub_10061B1F8();
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, qword_1009F14C8);
  }
  return result;
}

uint64_t sub_10061F44C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  unint64_t v6;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to EntityQuery.results()[1]);
  *(_QWORD *)(v2 + 16) = v5;
  v6 = sub_10061EA58();
  *v5 = v2;
  v5[1] = sub_1001FC2C4;
  return EntityQuery.results()(a1, a2, v6);
}

ValueMetadata *type metadata accessor for AudiobookEntityStringQuery()
{
  return &type metadata for AudiobookEntityStringQuery;
}

uint64_t destroy for AudiobookAppEntity(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[2]);
  swift_release(a1[3]);
  swift_release(a1[4]);
  swift_release(a1[5]);
  swift_release(a1[6]);
  swift_release(a1[7]);
  return swift_bridgeObjectRelease(a1[9]);
}

uint64_t initializeWithCopy for AudiobookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain(v3);
  swift_retain(v4);
  swift_retain(v5);
  swift_retain(v6);
  swift_retain(v7);
  swift_retain(v8);
  swift_retain(v9);
  swift_bridgeObjectRetain(v10);
  return a1;
}

uint64_t assignWithCopy for AudiobookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_retain(v8);
  swift_release(v9);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v10;
  swift_retain(v10);
  swift_release(v11);
  v12 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  swift_retain(v12);
  swift_release(v13);
  v14 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v14;
  swift_retain(v14);
  swift_release(v15);
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v16;
  swift_retain(v16);
  swift_release(v17);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v18 = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t assignWithTake for AudiobookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release(v4);
  swift_release(*(_QWORD *)(a1 + 24));
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release(v5);
  swift_release(*(_QWORD *)(a1 + 40));
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v7);
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for AudiobookAppEntity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiobookAppEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiobookAppEntity()
{
  return &type metadata for AudiobookAppEntity;
}

ValueMetadata *type metadata accessor for PlayAudiobookIntent()
{
  return &type metadata for PlayAudiobookIntent;
}

uint64_t storeEnumTagSinglePayload for PlayAudiobookIntent.PlayMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10061F870 + 4 * byte_1007353E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10061F8A4 + 4 * asc_1007353E0[v4]))();
}

uint64_t sub_10061F8A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10061F8AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10061F8B4);
  return result;
}

uint64_t sub_10061F8C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10061F8C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10061F8CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10061F8D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlayAudiobookIntent.PlayMode()
{
  return &type metadata for PlayAudiobookIntent.PlayMode;
}

uint64_t sub_10061F8F0()
{
  return sub_100030B34(&qword_1009F14E0, &qword_1009F14E8, (uint64_t)&protocol conformance descriptor for ParameterSummarySwitchCondition<A, B, C>);
}

uint64_t sub_10061F91C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  v5 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a2;
  v7 = a2[1];
  *(_QWORD *)(v2 + 24) = v5;
  *(_QWORD *)(v2 + 32) = v6;
  *(_QWORD *)(v2 + 40) = v7;
  *(_OWORD *)(v2 + 48) = *((_OWORD *)a2 + 4);
  *(_BYTE *)(v2 + 72) = *((_BYTE *)a2 + 80);
  return swift_task_switch(sub_10061F994, 0, 0);
}

uint64_t sub_10061F994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v5;
  NSString v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;

  if (*(_BYTE *)(v0 + 72) == 1)
  {
    v1 = type metadata accessor for MainActor(0);
    *(_QWORD *)(v0 + 64) = static MainActor.shared.getter(v1);
    v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
    return swift_task_switch(sub_10061FB0C, v2, v3);
  }
  else
  {
    if (*(_QWORD *)(v0 + 56))
    {
      v5 = (void *)objc_opt_self(AEBookInfo);
      v6 = String._bridgeToObjectiveC()();
      v7 = 1;
      v8 = objc_msgSend(v5, "storeURLForBookStoreId:isAudiobook:", v6, 1);

      if (v8)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)(v8);

        v7 = 0;
      }
      v10 = *(_QWORD *)(v0 + 16);
      v9 = *(_QWORD *)(v0 + 24);
      v11 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, v7, 1, v11);
      sub_100025B3C(v9, v10, (uint64_t *)&unk_1009D23D0);
    }
    else
    {
      v12 = *(_QWORD *)(v0 + 16);
      v13 = type metadata accessor for URL(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    }
    v14 = swift_task_dealloc(*(_QWORD *)(v0 + 24));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v14);
  }
}

uint64_t sub_10061FB0C()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 64));
  sub_1001F8570(v1);
  v2 = swift_task_dealloc(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_10061FB68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, unsigned __int8 a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v50 = a6;
  v51 = a8;
  v55 = a7;
  v48 = a2;
  v49 = a5;
  v46 = a3;
  v47 = a4;
  v52 = a9;
  v53 = a1;
  v54 = a10;
  v10 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Locale(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for LocalizedStringResource(0);
  __chkstk_darwin(v20);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004CFD4(&qword_1009D20B8);
  v23 = String.LocalizationValue.init(stringLiteral:)(0x656C746954, 0xE500000000000000);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v26 = v10;
  v25(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Shortcuts Find Books 'title' filter label", 41, 2);
  v45 = EntityProperty<>.init(title:)(v22);
  swift_retain(v45);
  v27 = String.LocalizationValue.init(stringLiteral:)(0x5420736569726553, 0xEC000000656C7469);
  static Locale.current.getter(v27);
  v25(v13, v24, v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Shortcuts Find Books 'series title' filter label", 48, 2);
  v44 = EntityProperty<>.init(title:)(v22);
  swift_retain(v44);
  v28 = String.LocalizationValue.init(stringLiteral:)(0x726F68747541, 0xE600000000000000);
  static Locale.current.getter(v28);
  v25(v13, v24, v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Shortcuts Find Books 'author' filter label", 42, 2);
  v43 = EntityProperty<>.init(title:)(v22);
  swift_retain(v43);
  v29 = String.LocalizationValue.init(stringLiteral:)(0x65726E6547, 0xE500000000000000);
  static Locale.current.getter(v29);
  v25(v13, v24, v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Shortcuts Find Books 'genre' filter label", 41, 2);
  v30 = EntityProperty<>.init(title:)(v22);
  sub_10004CFD4(&qword_1009D20C0);
  swift_retain(v30);
  v31 = String.LocalizationValue.init(stringLiteral:)(0x6573616863727550, 0xED00006574614420);
  static Locale.current.getter(v31);
  v25(v13, v24, v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Shortcuts Find Books 'purchase date' filter label", 49, 2);
  v32 = EntityProperty<>.init(title:)(v22);
  sub_10004CFD4(&qword_1009F14F0);
  swift_retain(v32);
  v33 = String.LocalizationValue.init(stringLiteral:)(0x6C62616572616853, 0xED00004C52552065);
  static Locale.current.getter(v33);
  v25(v13, v24, v26);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v19, 0, 0, v16, v13, "Book AppEntity shareable store URL property", 43, 2);
  v34 = sub_100030B34(&qword_1009F1500, &qword_1009F1508, (uint64_t)&protocol conformance descriptor for _EntityDeferredPropertyValue<A, B>);
  v35 = EntityProperty<>.init(title:_get:)(v22, &unk_1009F14F8, 0, v34);
  v56 = v46;
  v57 = v47;
  swift_retain_n(v35, 2);
  v36 = v48;
  swift_bridgeObjectRetain_n(v48, 2);
  v37 = v45;
  swift_retain(v45);
  v38 = v44;
  swift_retain(v44);
  v39 = v43;
  swift_retain(v43);
  swift_retain(v30);
  swift_retain(v32);
  EntityProperty.wrappedValue.setter(&v56);
  swift_bridgeObjectRelease(0);
  swift_release(v35);
  swift_release(v32);
  swift_release(v30);
  swift_release(v39);
  swift_release(v38);
  swift_release(v37);
  swift_bridgeObjectRelease(v36);
  v56 = v49;
  v57 = v50;
  swift_bridgeObjectRetain(v36);
  swift_retain(v37);
  swift_retain(v38);
  swift_retain(v39);
  swift_retain(v30);
  swift_retain(v32);
  swift_retain(v35);
  EntityProperty.wrappedValue.setter(&v56);
  swift_bridgeObjectRelease(0);
  swift_release(v35);
  swift_release(v32);
  swift_release(v30);
  swift_release(v39);
  swift_release(v38);
  swift_release(v37);
  swift_bridgeObjectRelease(v36);
  v40 = v51;
  swift_bridgeObjectRetain(v51);
  swift_bridgeObjectRetain(v36);
  swift_retain(v37);
  swift_retain(v38);
  swift_retain(v39);
  swift_retain(v30);
  swift_retain(v32);
  swift_bridgeObjectRelease(v40);
  swift_release(v35);
  swift_bridgeObjectRelease_n(v36, 2);
  swift_release_n(v37, 2);
  swift_release_n(v38, 2);
  swift_release_n(v39, 2);
  swift_release_n(v30, 2);
  result = swift_release_n(v32, 2);
  v42 = v52;
  *v52 = v53;
  v42[1] = v36;
  v42[2] = v37;
  v42[3] = v38;
  v42[4] = v39;
  v42[5] = v30;
  v42[6] = v32;
  v42[7] = v35;
  v42[8] = v55;
  v42[9] = v40;
  *((_BYTE *)v42 + 80) = v54;
  return result;
}

uint64_t sub_1006201AC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  char *v31;
  char *v32;
  char *v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v60;
  void (*v61)(char *, uint64_t, uint64_t);
  uint64_t v62;
  void (*v63)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int v67;
  uint64_t v68;
  char *v69;
  int v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  char v82;

  v71 = a2;
  v70 = a1 & 1;
  v76 = type metadata accessor for InputConnectionBehavior(0);
  v68 = *(_QWORD *)(v76 - 8);
  __chkstk_darwin(v76);
  v75 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v3);
  v74 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v73 = (char *)&v60 - v6;
  v7 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v7);
  v72 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Locale(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocalizedStringResource(0);
  v20 = *(_QWORD *)(v19 - 8);
  v64 = v19;
  __chkstk_darwin(v19);
  v69 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v60 = (char *)&v60 - v23;
  v65 = sub_10004CFD4(&qword_1009F1510);
  v24 = String.LocalizationValue.init(stringLiteral:)(1701869908, 0xE400000000000000);
  static Locale.current.getter(v24);
  v25 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  v62 = v9;
  v26(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  v61 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "'Play Audiobook' parameter that controls mode - most recent vs specific audiobook.", 82, 2);
  v27 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x80000001007D9EF0);
  static Locale.current.getter(v27);
  v26(v12, v25, v9);
  v28 = v72;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Description of the mode parameter on the Play Audiobook AppIntent", 65, 2);
  v63 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v63(v28, 0, 1, v19);
  LOBYTE(v77) = 0;
  v29 = type metadata accessor for IntentDialog(0);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v66 = v30;
  v31 = v73;
  v30(v73, 1, 1, v29);
  v32 = v74;
  v30(v74, 1, 1, v29);
  v67 = enum case for InputConnectionBehavior.default(_:);
  v68 = *(_QWORD *)(v68 + 104);
  v33 = v75;
  ((void (*)(char *))v68)(v75);
  v34 = sub_10061D2D8();
  v35 = v60;
  v36 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v60, v28, &v77, v31, v32, v33, &off_1008F0948, v34);
  v65 = sub_10004CFD4(&qword_1009F1518);
  swift_retain(v36);
  v37 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xE90000000000006BLL);
  static Locale.current.getter(v37);
  v38 = v62;
  v39 = v61;
  v61(v12, v25, v62);
  v40 = v35;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "'Play Audiobook' parameter that specifies the audiobook to play.", 64, 2);
  v41 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x80000001007D9F90);
  static Locale.current.getter(v41);
  v39(v12, v25, v38);
  v42 = v72;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "Description of the target parameter of the Play Audiobook AppIntent", 67, 2);
  v63(v42, 0, 1, v64);
  v82 = 0;
  v80 = 0u;
  v81 = 0u;
  v78 = 0u;
  v79 = 0u;
  v77 = 0u;
  v43 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x80000001007D1B70);
  static Locale.current.getter(v43);
  v39(v12, v25, v38);
  v44 = v69;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v18, 0, 0, v15, v12, "'Play Audiobook' prompt when running in 'specific' mode with no audiobook selected.", 83, 2);
  v45 = v73;
  IntentDialog.init(_:)(v44);
  v46 = v66;
  v66(v45, 0, 1, v29);
  v47 = v74;
  v46(v74, 1, 1, v29);
  v48 = v75;
  ((void (*)(char *, _QWORD, uint64_t))v68)(v75, v67, v76);
  v49 = sub_100537C34();
  v50 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v40, v42, &v77, v45, v47, v48, v49);
  sub_10004CFD4(&qword_1009D2100);
  type metadata accessor for AppDependencyManager(0);
  v77 = 0u;
  v78 = 0u;
  *(_QWORD *)&v79 = 0;
  v51 = swift_retain(v50);
  v56 = static AppDependencyManager.shared.getter(v51, v52, v53, v54, v55);
  v57 = AppDependency.__allocating_init(key:manager:)(&v77, v56);
  LOBYTE(v77) = v70;
  swift_retain(v36);
  swift_retain(v50);
  swift_retain(v57);
  IntentParameter.wrappedValue.setter(&v77);
  swift_release(v50);
  swift_release(v36);
  v58 = v71;
  sub_100025B3C(v71, (uint64_t)&v77, (uint64_t *)&unk_1009F1590);
  swift_retain(v36);
  swift_retain(v50);
  swift_retain(v57);
  sub_100621094(v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100621004);
  IntentParameter.wrappedValue.setter(&v77);
  sub_100621094(v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100620F24);
  swift_release_n(v57, 2);
  swift_release_n(v50, 2);
  swift_release_n(v36, 2);
  return v36;
}

uint64_t sub_1006208E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  char *v30;
  char *v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  void (*v57)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  void (*v61)(char *);
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  char v73;

  v67 = type metadata accessor for InputConnectionBehavior(0);
  v62 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = (char *)&v53 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_10004CFD4(&qword_1009D1330);
  __chkstk_darwin(v1);
  v65 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v64 = (char *)&v53 - v4;
  v5 = sub_10004CFD4(&qword_1009D1338);
  __chkstk_darwin(v5);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Locale(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for LocalizedStringResource(0);
  v19 = *(_QWORD *)(v18 - 8);
  v58 = v18;
  __chkstk_darwin(v18);
  v63 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v53 = (char *)&v53 - v22;
  v59 = sub_10004CFD4(&qword_1009F1510);
  v23 = String.LocalizationValue.init(stringLiteral:)(1701869908, 0xE400000000000000);
  static Locale.current.getter(v23);
  v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v55 = v8;
  v25(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  v54 = v25;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Play Audiobook' parameter that controls mode - most recent vs specific audiobook.", 82, 2);
  v26 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000040, 0x80000001007D9EF0);
  static Locale.current.getter(v26);
  v25(v11, v24, v8);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Description of the mode parameter on the Play Audiobook AppIntent", 65, 2);
  v57 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56);
  v57(v7, 0, 1, v18);
  LOBYTE(v68) = 0;
  v27 = type metadata accessor for IntentDialog(0);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v56 = v28;
  v29 = v64;
  v28(v64, 1, 1, v27);
  v30 = v65;
  v28(v65, 1, 1, v27);
  v60 = enum case for InputConnectionBehavior.default(_:);
  v61 = *(void (**)(char *))(v62 + 104);
  v31 = v66;
  v61(v66);
  v32 = sub_10061D2D8();
  v33 = v53;
  v62 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)(v53, v7, &v68, v29, v30, v31, &off_1008F11F8, v32);
  v59 = sub_10004CFD4(&qword_1009F1518);
  v34 = String.LocalizationValue.init(stringLiteral:)(0x6F6F626F69647541, 0xE90000000000006BLL);
  static Locale.current.getter(v34);
  v35 = v55;
  v36 = v54;
  v54(v11, v24, v55);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Play Audiobook' parameter that specifies the audiobook to play.", 64, 2);
  v37 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000037, 0x80000001007D9F90);
  static Locale.current.getter(v37);
  v36(v11, v24, v35);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "Description of the target parameter of the Play Audiobook AppIntent", 67, 2);
  v57(v7, 0, 1, v58);
  v73 = 0;
  v71 = 0u;
  v72 = 0u;
  v69 = 0u;
  v70 = 0u;
  v68 = 0u;
  v38 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000024, 0x80000001007D1B70);
  static Locale.current.getter(v38);
  v36(v11, v24, v35);
  v39 = v63;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)(v17, 0, 0, v14, v11, "'Play Audiobook' prompt when running in 'specific' mode with no audiobook selected.", 83, 2);
  v40 = v64;
  IntentDialog.init(_:)(v39);
  v41 = v40;
  v42 = v56;
  v56(v40, 0, 1, v27);
  v43 = v65;
  v42(v65, 1, 1, v27);
  v44 = v66;
  ((void (*)(char *, _QWORD, uint64_t))v61)(v66, v60, v67);
  v45 = sub_100537C34();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)(v33, v7, &v68, v41, v43, v44, v45);
  sub_10004CFD4(&qword_1009D2100);
  v46 = type metadata accessor for AppDependencyManager(0);
  v68 = 0u;
  v69 = 0u;
  *(_QWORD *)&v70 = 0;
  v51 = static AppDependencyManager.shared.getter(v46, v47, v48, v49, v50);
  AppDependency.__allocating_init(key:manager:)(&v68, v51);
  return v62;
}

uint64_t sub_100620F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_release(a3);
    swift_release(a4);
    swift_release(a5);
    swift_release(a6);
    swift_release(a7);
    swift_release(a8);
    return swift_bridgeObjectRelease(a10);
  }
  return result;
}

uint64_t sub_100620FB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100620FDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100621004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain(a10);
    swift_bridgeObjectRetain(a2);
    swift_retain(a3);
    swift_retain(a4);
    swift_retain(a5);
    swift_retain(a6);
    swift_retain(a7);
    return swift_retain(a8);
  }
  return result;
}

uint64_t sub_100621094(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 80);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v4);
  return a1;
}

char *sub_1006211A0(void *a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  id v12;
  void *v13;
  char *result;
  char *v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  char v32[40];
  objc_super v33;

  *(_QWORD *)&v1[OBJC_IVAR___BKFinishedAssetManager_libraryManager] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BKFinishedAssetManager_objectMonitor] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BKFinishedAssetManager_assetCache] = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BKFinishedAssetManager_enablementObservation] = 0;
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x64656873696E6946, 0xEE00737465737341);
  v33.receiver = v1;
  v33.super_class = (Class)type metadata accessor for FinishedAssetManager(0);
  v3 = (char *)objc_msgSendSuper2(&v33, "init");
  v4 = OBJC_IVAR___BKFinishedAssetManager_libraryManager;
  v5 = *(void **)&v3[OBJC_IVAR___BKFinishedAssetManager_libraryManager];
  *(_QWORD *)&v3[OBJC_IVAR___BKFinishedAssetManager_libraryManager] = a1;
  v6 = v3;
  v7 = a1;

  v8 = type metadata accessor for FinishedAssetCache(0);
  v9 = swift_allocObject(v8, *(unsigned int *)(v8 + 48), *(unsigned __int16 *)(v8 + 52));
  swift_defaultActor_initialize(v9);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x64656873696E6946, 0xEE00737465737341);
  v10 = *(_QWORD *)&v6[OBJC_IVAR___BKFinishedAssetManager_assetCache];
  *(_QWORD *)&v6[OBJC_IVAR___BKFinishedAssetManager_assetCache] = v9;
  *(_QWORD *)&v11 = swift_release(v10).n128_u64[0];
  v12 = *(id *)&v3[v4];
  if (!v12
    || (v12 = objc_msgSend(v12, "predicateForLocalLibraryAssets", v11)) == 0)
  {
    v28 = Logger.logObject.getter(v12);
    v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "No predicate available for finished asset monitoring", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    goto LABEL_8;
  }
  v13 = v12;
  result = (char *)objc_msgSend(v7, "persistentStoreCoordinator");
  if (result)
  {
    v15 = result;
    KeyPath = swift_getKeyPath(&unk_100735C18);
    v17 = sub_10004CFD4((uint64_t *)&unk_1009D4750);
    inited = swift_initStackObject(v17, v32);
    *(_OWORD *)(inited + 16) = xmmword_1007118F0;
    v19 = swift_getKeyPath(&unk_100735C50);
    *(_QWORD *)(inited + 32) = v19;
    specialized Array._endMutation()(v19);
    v20 = v13;
    v21 = sub_100026EA4(inited);
    swift_bridgeObjectRelease(inited);
    v22 = v6;
    v23 = sub_1003ACCE8(v15, v20, KeyPath, v21, v22);

    swift_release(KeyPath);
    v24 = *(void **)&v22[OBJC_IVAR___BKFinishedAssetManager_objectMonitor];
    *(_QWORD *)&v22[OBJC_IVAR___BKFinishedAssetManager_objectMonitor] = v23;

    v31 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v25 = swift_getKeyPath(&unk_100735CA8);
    v26 = swift_allocObject(&unk_100918B48, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16);
    v27 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)(v25, 1, sub_100625C78, v26, &protocol witness table for NSObject);

    swift_release(v26);
    swift_release(v25);

    v7 = *(id *)&v22[OBJC_IVAR___BKFinishedAssetManager_enablementObservation];
    *(_QWORD *)&v22[OBJC_IVAR___BKFinishedAssetManager_enablementObservation] = v27;
LABEL_8:

    return v6;
  }
  __break(1u);
  return result;
}

uint64_t FinishedAssetCache.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = swift_allocObject(v0, *(unsigned int *)(v0 + 48), *(unsigned __int16 *)(v0 + 52));
  swift_defaultActor_initialize();
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x64656873696E6946, 0xEE00737465737341);
  return v1;
}

void sub_1006215B8(void **a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  void *v7;
  id v8;
  NSString v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  _QWORD aBlock[5];
  uint64_t v15;
  char v16[24];

  v3 = *a1;
  v4 = a3 + 16;
  swift_beginAccess(a3 + 16, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    if (objc_msgSend(v3, "BKFinishedAssetRemovalEnabledKey"))
    {
      v7 = *(void **)&v6[OBJC_IVAR___BKFinishedAssetManager_libraryManager];
      if (v7)
      {
        v8 = v7;
        v9 = String._bridgeToObjectiveC()();
        v10 = swift_allocObject(&unk_100918B70, 24, 7);
        *(_QWORD *)(v10 + 16) = v6;
        aBlock[4] = sub_100625CA4;
        v15 = v10;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1001EDBF0;
        aBlock[3] = &unk_100918B88;
        v11 = _Block_copy(aBlock);
        v12 = v15;
        v13 = v6;
        objc_msgSend(v8, "performNamed:workerQueueBlock:", v9, v11, swift_release(v12).n128_f64[0]);
        _Block_release(v11);

      }
    }
    else
    {
      sub_100623390();
    }

  }
}

Swift::Void __swiftcall FinishedAssetManager.removeFinishedDownloads(threshhold:)(Swift::Double threshhold)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;

  v3 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v7 = objc_msgSend(v6, "BKFinishedAssetRemovalEnabledKey");

  if ((v7 & 1) != 0)
  {
    v9 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v5, 1, 1, v9);
    v10 = swift_allocObject(&unk_100918AD0, 48, 7);
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_QWORD *)(v10 + 32) = v1;
    *(Swift::Double *)(v10 + 40) = threshhold;
    v11 = v1;
    v12 = sub_10030C02C((uint64_t)v5, (uint64_t)&unk_1009F15C0, v10);
    swift_release(v12);
  }
  else
  {
    v16 = Logger.logObject.getter(v8);
    v13 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v13, "Removal of finished assets disabled. Bailing out", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

  }
}

uint64_t sub_1006218C0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *(double *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 16) = a5;
  v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType(0);
  *(_QWORD *)(v5 + 32) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 40) = v7;
  *(_QWORD *)(v5 + 48) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009F1758);
  *(_QWORD *)(v5 + 56) = v8;
  v9 = (*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v5 + 64) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 72) = swift_task_alloc(v9);
  *(_QWORD *)(v5 + 80) = swift_task_alloc(v9);
  return swift_task_switch(sub_100621968, 0, 0);
}

uint64_t sub_100621968(uint64_t a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  id v6;
  NSString v7;
  NSString v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  NSString v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;

  *(_QWORD *)(v1 + 88) = OBJC_IVAR___BKFinishedAssetManager_logger;
  v2 = Logger.logObject.getter(a1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Removing finished downloads older than threshold", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = objc_msgSend((id)objc_opt_self(BCBackgroundTaskAssertion), "sharedAssertion");
  *(_QWORD *)(v1 + 96) = v5;
  if (v5)
  {
    v6 = v5;
    v7 = String._bridgeToObjectiveC()();
    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v6, "claimAssertionForIdentifier:description:", v7, v8);

  }
  v9 = *(_QWORD *)(v1 + 16);
  v10 = OBJC_IVAR___BKFinishedAssetManager_assetCache;
  *(_QWORD *)(v1 + 104) = OBJC_IVAR___BKFinishedAssetManager_assetCache;
  v11 = *(_QWORD *)(v9 + v10);
  *(_QWORD *)(v1 + 112) = v11;
  if (v11)
  {
    swift_retain(v11);
    return swift_task_switch(sub_100621BE8, v11, 0);
  }
  else
  {
    v13 = Logger.logObject.getter(v5);
    v14 = static os_log_type_t.default.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "No items removed", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }
    v16 = *(_QWORD *)(v1 + 96);

    if (v16)
    {
      v17 = *(id *)(v1 + 96);
      v18 = String._bridgeToObjectiveC()();
      objc_msgSend(v17, "releaseAssertionForIdentifier:", v18);

    }
    v19 = *(_QWORD *)(v1 + 72);
    v20 = *(_QWORD *)(v1 + 64);
    v21 = *(_QWORD *)(v1 + 48);
    swift_task_dealloc(*(_QWORD *)(v1 + 80));
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    v22 = swift_task_dealloc(v21);
    return (*(uint64_t (**)(__n128))(v1 + 8))(v22);
  }
}

uint64_t sub_100621BE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 120) = _s5Books18FinishedAssetCacheC9allAssetsSDySS10Foundation4DateVGyF_0();
  swift_release(v1);
  return swift_task_switch(sub_100621C30, 0, 0);
}

void sub_100621C30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  id v58;
  NSString v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  _QWORD *v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  _QWORD *v76;

  v65 = v0 + 21;
  v1 = v0[15];
  v70 = v0[9];
  v71 = v0[10];
  v68 = v0[7];
  v69 = v0[8];
  v2 = v0[3];
  v3 = swift_task_alloc(32);
  *(_QWORD *)(v3 + 16) = v2;
  v4 = sub_100624D50(v1, (uint64_t (*)(uint64_t, uint64_t, char *, __n128))sub_100625E68, v3);
  swift_bridgeObjectRelease(v1);
  swift_task_dealloc(v3);
  v66 = v4 + 64;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(v4 + 64);
  v67 = (unint64_t)(63 - v6) >> 6;
  v73 = v4;
  swift_retain(v4);
  v8 = 0;
  v9 = _swiftEmptyArrayStorage;
  v72 = v0;
  while (1)
  {
    v0[16] = v9;
    v76 = v9;
    if (v7)
    {
      v74 = (v7 - 1) & v7;
      v75 = v8;
      v10 = __clz(__rbit64(v7)) | (v8 << 6);
      goto LABEL_22;
    }
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v11 >= v67)
      goto LABEL_27;
    v12 = *(_QWORD *)(v66 + 8 * v11);
    v13 = v8 + 1;
    if (!v12)
    {
      v13 = v8 + 2;
      if (v8 + 2 >= v67)
        goto LABEL_27;
      v12 = *(_QWORD *)(v66 + 8 * v13);
      if (!v12)
      {
        v13 = v8 + 3;
        if (v8 + 3 >= v67)
          goto LABEL_27;
        v12 = *(_QWORD *)(v66 + 8 * v13);
        if (!v12)
        {
          v13 = v8 + 4;
          if (v8 + 4 >= v67)
            goto LABEL_27;
          v12 = *(_QWORD *)(v66 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_21:
    v74 = (v12 - 1) & v12;
    v75 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_22:
    v16 = (uint64_t *)v0[9];
    v15 = (char *)v0[10];
    v17 = (char *)v0[8];
    v18 = *(_QWORD *)(v73 + 56);
    v19 = (uint64_t *)(*(_QWORD *)(v73 + 48) + 16 * v10);
    v20 = *v19;
    v21 = v19[1];
    v22 = type metadata accessor for Date(0);
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
    v24(&v15[*(int *)(v68 + 48)], v18 + *(_QWORD *)(v23 + 72) * v10, v22);
    *(_QWORD *)v15 = v20;
    *(_QWORD *)(v71 + 8) = v21;
    sub_100025B3C((uint64_t)v15, (uint64_t)v16, &qword_1009F1758);
    v25 = *(int *)(v68 + 48);
    v26 = &v17[v25];
    v27 = (char *)v16 + v25;
    v28 = *v16;
    v29 = *(_QWORD *)(v70 + 8);
    *(_QWORD *)v17 = v28;
    *(_QWORD *)(v69 + 8) = v29;
    v24(&v17[v25], (unint64_t)v27, v22);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v29);
    v9 = v76;
    if ((swift_isUniquelyReferenced_nonNull_native(v76) & 1) == 0)
      v9 = sub_100043ED0(0, v76[2] + 1, 1, v76);
    v31 = v9[2];
    v30 = v9[3];
    v0 = v72;
    if (v31 >= v30 >> 1)
      v9 = sub_100043ED0((_QWORD *)(v30 > 1), v31 + 1, 1, v9);
    v32 = v72[9];
    v9[2] = v31 + 1;
    v33 = &v9[2 * v31];
    v33[4] = v28;
    v33[5] = v29;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    sub_100010960(v32, &qword_1009F1758);
    v7 = v74;
    v8 = v75;
  }
  v14 = v8 + 5;
  if (v8 + 5 >= v67)
  {
LABEL_27:
    swift_release_n(v73, 2);
    if (!v9[2])
    {
      swift_bridgeObjectRelease(v9);
      v52 = v0;
      v54 = Logger.logObject.getter(v53);
      v55 = static os_log_type_t.default.getter(v54);
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "No items removed", v56, 2u);
        swift_slowDealloc(v56, -1, -1);
      }
      v57 = v0[12];

      if (v57)
      {
        v58 = (id)v52[12];
        v59 = String._bridgeToObjectiveC()();
        objc_msgSend(v58, "releaseAssertionForIdentifier:", v59);

      }
      goto LABEL_39;
    }
    v34 = v0[2];
    v35 = *(void **)(v34 + OBJC_IVAR___BKFinishedAssetManager_libraryManager);
    if (v35)
    {
      v36 = objc_msgSend(v35, "assetInsertDeleteContext");
      v37 = v0[2];
      v0[17] = v36;
      v38 = *(_QWORD *)(v37 + v0[13]);
      v0[18] = v38;
      if (!v38)
      {
        v39 = v36;
        if (v36)
        {
          v40 = v0[16];
          v41 = (void *)v0[12];
          v43 = v0[5];
          v42 = v0[6];
          v44 = v0[4];
          v45 = swift_allocObject(&unk_100918B48, 24, 7);
          swift_unknownObjectWeakInit(v45 + 16);
          v46 = (_QWORD *)swift_allocObject(&unk_100918C88, 48, 7);
          v0[19] = v46;
          v46[2] = v45;
          v46[3] = v41;
          v46[4] = v40;
          v46[5] = v39;
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v42, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v44);
          v47 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
          v48 = v39;
          v49 = v41;
          v48;
          v50 = (_QWORD *)swift_task_alloc(v47);
          v0[20] = v50;
          v51 = sub_10004CFD4(&qword_1009DA1E8);
          *v50 = v0;
          v50[1] = sub_100622428;
          NSManagedObjectContext.perform<A>(schedule:_:)(v65, v0[6], sub_100625EDC, v46, v51);
          return;
        }
        goto LABEL_38;
      }
    }
    else
    {
      v0[17] = 0;
      v38 = *(_QWORD *)(v34 + v0[13]);
      v0[18] = v38;
      if (!v38)
      {
LABEL_38:
        v60 = (void *)v0[12];
        swift_bridgeObjectRelease(v0[16]);

        v52 = v0;
LABEL_39:
        v61 = v52[9];
        v62 = v52[8];
        v63 = v52[6];
        swift_task_dealloc(v52[10]);
        swift_task_dealloc(v61);
        swift_task_dealloc(v62);
        v64 = swift_task_dealloc(v63);
        ((void (*)(__n128))v52[1])(v64);
        return;
      }
    }
    swift_retain(v38);
    swift_task_switch(sub_100622254, v38, 0);
    return;
  }
  v12 = *(_QWORD *)(v66 + 8 * v14);
  if (v12)
  {
    v13 = v8 + 5;
    goto LABEL_21;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v67)
      goto LABEL_27;
    v12 = *(_QWORD *)(v66 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_21;
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_100622254()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  _s5Books18FinishedAssetCacheC12removeAssetsyySaySSGF_0(*(_QWORD *)(v0 + 128));
  swift_release(v1);
  return swift_task_switch(sub_10062229C, 0, 0);
}

uint64_t sub_10062229C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;

  v1 = *(void **)(v0 + 136);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 128);
    v3 = *(void **)(v0 + 96);
    v5 = *(_QWORD *)(v0 + 40);
    v4 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 32);
    v7 = swift_allocObject(&unk_100918B48, 24, 7);
    swift_unknownObjectWeakInit(v7 + 16);
    v8 = (_QWORD *)swift_allocObject(&unk_100918C88, 48, 7);
    *(_QWORD *)(v0 + 152) = v8;
    v8[2] = v7;
    v8[3] = v3;
    v8[4] = v2;
    v8[5] = v1;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v4, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v6);
    v9 = async function pointer to NSManagedObjectContext.perform<A>(schedule:_:)[1];
    v10 = v1;
    v11 = v3;
    v10;
    v12 = (_QWORD *)swift_task_alloc(v9);
    *(_QWORD *)(v0 + 160) = v12;
    v13 = sub_10004CFD4(&qword_1009DA1E8);
    *v12 = v0;
    v12[1] = sub_100622428;
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 168, *(_QWORD *)(v0 + 48), sub_100625EDC, v8, v13);
  }
  else
  {
    v15 = *(void **)(v0 + 96);
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 128));

    v16 = *(_QWORD *)(v0 + 72);
    v17 = *(_QWORD *)(v0 + 64);
    v18 = *(_QWORD *)(v0 + 48);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    v19 = swift_task_dealloc(v18);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v19);
  }
}

uint64_t sub_100622428()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 152);
  v2 = *(void **)(*(_QWORD *)v0 + 136);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 160));
  swift_release(v1);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch(sub_1006224B4, 0, 0);
}

uint64_t sub_1006224B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 136);

  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 48);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10062251C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t Strong;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  NSString v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void *v41;
  id v42;
  Class isa;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  os_log_type_t v51;
  char *v52;
  _BYTE *v53;
  uint64_t aBlock[5];
  uint64_t v55;
  char v56[24];
  uint64_t v57;
  uint64_t v58;

  v10 = a1 + 16;
  swift_beginAccess(a1 + 16, v56, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v50 = a2;
    v52 = (char *)Strong;
    v53 = a5;
    v12 = objc_allocWithZone((Class)NSFetchRequest);
    v13 = String._bridgeToObjectiveC()();
    v14 = objc_msgSend(v12, "initWithEntityName:", v13);

    objc_msgSend(v14, "setReturnsObjectsAsFaults:", 0);
    sub_100009E04(0, &qword_1009E3A10, NSPredicate_ptr);
    v15 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
    v16 = swift_allocObject(v15, 312, 7);
    *(_OWORD *)(v16 + 16) = xmmword_100723930;
    *(_QWORD *)(v16 + 56) = &type metadata for String;
    v17 = sub_10002BE50();
    *(_QWORD *)(v16 + 64) = v17;
    *(_QWORD *)(v16 + 32) = 0x44497465737361;
    *(_QWORD *)(v16 + 40) = 0xE700000000000000;
    v18 = a4;
    v19 = sub_10004CFD4((uint64_t *)&unk_1009E8850);
    *(_QWORD *)(v16 + 96) = v19;
    v20 = sub_100625EF8();
    *(_QWORD *)(v16 + 72) = a3;
    *(_QWORD *)(v16 + 136) = &type metadata for String;
    *(_QWORD *)(v16 + 144) = v17;
    *(_QWORD *)(v16 + 104) = v20;
    *(_QWORD *)(v16 + 112) = 0xD000000000000019;
    *(_QWORD *)(v16 + 120) = 0x80000001007DA380;
    *(_QWORD *)(v16 + 176) = &type metadata for String;
    *(_QWORD *)(v16 + 184) = v17;
    *(_QWORD *)(v16 + 152) = 0x44497465737361;
    *(_QWORD *)(v16 + 160) = 0xE700000000000000;
    v21 = v14;
    *(_QWORD *)(v16 + 216) = v19;
    *(_QWORD *)(v16 + 224) = v20;
    *(_QWORD *)(v16 + 192) = a3;
    *(_QWORD *)(v16 + 256) = &type metadata for String;
    *(_QWORD *)(v16 + 264) = v17;
    *(_QWORD *)(v16 + 232) = 0x6574617473;
    *(_QWORD *)(v16 + 240) = 0xE500000000000000;
    *(_QWORD *)(v16 + 296) = &type metadata for Int16;
    *(_QWORD *)(v16 + 304) = &protocol witness table for Int16;
    *(_WORD *)(v16 + 272) = 1;
    swift_bridgeObjectRetain_n(a3, 2);
    v22 = (void *)NSPredicate.init(format:_:)(0xD000000000000028, 0x80000001007DA350, v16);
    objc_msgSend(v14, "setPredicate:", v22);

    if (v18)
    {
      v24 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
      v25 = NSManagedObjectContext.fetch<A>(_:)(v14, v24);
      v26 = v52;
      if (!v5)
      {
        v31 = v25;
        v32 = swift_bridgeObjectRetain_n(v25, 4);
        v33 = Logger.logObject.getter(v32);
        v34 = static os_log_type_t.default.getter(v33);
        if (os_log_type_enabled(v33, v34))
        {
          v51 = v34;
          v35 = swift_slowAlloc(22, -1);
          v49 = swift_slowAlloc(32, -1);
          aBlock[0] = v49;
          *(_DWORD *)v35 = 134218242;
          if ((unint64_t)v31 >> 62)
          {
            if (v31 < 0)
              v48 = v31;
            else
              v48 = v31 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v31);
            v36 = _CocoaArrayWrapper.endIndex.getter(v48);
            swift_bridgeObjectRelease(v31);
          }
          else
          {
            v36 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease(v31);
          v57 = v36;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v35 + 4, v35 + 12);
          swift_bridgeObjectRelease(v31);
          *(_WORD *)(v35 + 12) = 2080;
          swift_bridgeObjectRetain(v31);
          v38 = Array.description.getter(v37, v24);
          v40 = v39;
          swift_bridgeObjectRelease(v31);
          v57 = sub_100040F58(v38, v40, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, &v58, v35 + 14, v35 + 22);
          swift_bridgeObjectRelease_n(v31, 2);
          swift_bridgeObjectRelease(v40);
          _os_log_impl((void *)&_mh_execute_header, v33, v51, "Removing %ld downloads for assets %s", (uint8_t *)v35, 0x16u);
          swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v49, -1, -1);
          swift_slowDealloc(v35, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v31, 4);
        }
        v41 = *(void **)&v52[OBJC_IVAR___BKFinishedAssetManager_libraryManager];
        if (v41)
        {
          v42 = v41;
          isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease(v31);
          v44 = swift_allocObject(&unk_100918CB0, 24, 7);
          *(_QWORD *)(v44 + 16) = v50;
          aBlock[4] = (uint64_t)sub_100625F44;
          v55 = v44;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_1000147F0;
          aBlock[3] = (uint64_t)&unk_100918CC8;
          v45 = _Block_copy(aBlock);
          v46 = v55;
          v47 = v50;
          objc_msgSend(v42, "deleteAssets:exhaustive:completion:", isa, 0, v45, swift_release(v46).n128_f64[0]);

          _Block_release(v45);
          v21 = isa;
        }
        else
        {

          swift_bridgeObjectRelease(v31);
        }
LABEL_13:
        a5 = v53;
        goto LABEL_14;
      }
      v23 = swift_errorRelease(v5);
    }
    else
    {
      v26 = v52;
    }
    v27 = Logger.logObject.getter(v23);
    v28 = static os_log_type_t.error.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to fetch finished libraryAssets", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    if (v50)
    {
      v30 = String._bridgeToObjectiveC()();
      objc_msgSend(v50, "releaseAssertionForIdentifier:", v30);

    }
    goto LABEL_13;
  }
  if (a2)
  {
    v21 = String._bridgeToObjectiveC()();
    objc_msgSend(a2, "releaseAssertionForIdentifier:", v21);
LABEL_14:

  }
  *a5 = 0;
}

void sub_100622B68(void *a1)
{
  id v2;

  if (a1)
  {
    v2 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "releaseAssertionForIdentifier:", v2);

  }
}

double FinishedAssetManager.managedObjectBackgroundMonitor(_:didSaveNotify:)(uint64_t a1, void *a2)
{
  return sub_100625108(a2);
}

void sub_100622C18(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  char v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  __n128 v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  unint64_t v63;
  char v64[24];
  uint64_t v65[3];

  v9 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 >= 0)
      v53 = a1 & 0xFFFFFFFFFFFFFF8;
    else
      v53 = a1;
    swift_bridgeObjectRetain(a1);
    v12 = _CocoaArrayWrapper.endIndex.getter(v53);
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v13 = swift_bridgeObjectRetain(a1);
  }
  v61 = (_QWORD *)(a4 + 16);
  v62 = (_QWORD *)(a5 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease(a1);
    goto LABEL_31;
  }
  if (v12 < 1)
  {
    __break(1u);
    return;
  }
  v55 = v11;
  v56 = a3;
  v14 = 0;
  v59 = &a3[OBJC_IVAR___BKFinishedAssetManager_logger];
  v63 = a1 & 0xC000000000000001;
  v13.n128_u64[0] = 136315138;
  v58 = v13;
  v57 = (char *)&type metadata for Any + 8;
  v60 = v12;
  do
  {
    if (v63)
      v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v14, a1);
    else
      v16 = *(id *)(a1 + 8 * v14 + 32);
    v17 = v16;
    v18 = objc_msgSend(v16, "assetID");
    if (v18)
    {
      v19 = v18;
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v22 = v21;

      if ((objc_msgSend(v17, "isFinished") & 1) != 0)
      {
        v23 = v61;
        swift_beginAccess(v61, v65, 33, 0);
        v24 = (_QWORD *)*v23;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v23);
        *v23 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v24 = sub_100043ED0(0, v24[2] + 1, 1, v24);
          *v61 = v24;
        }
        v27 = v24[2];
        v26 = v24[3];
        v28 = v27 + 1;
        if (v27 < v26 >> 1)
          goto LABEL_9;
        v29 = sub_100043ED0((_QWORD *)(v26 > 1), v27 + 1, 1, v24);
        v24 = v29;
        v30 = v61;
      }
      else
      {
        v42 = v62;
        swift_beginAccess(v62, v65, 33, 0);
        v24 = (_QWORD *)*v42;
        v43 = swift_isUniquelyReferenced_nonNull_native(*v42);
        *v42 = v24;
        if ((v43 & 1) == 0)
        {
          v24 = sub_100043ED0(0, v24[2] + 1, 1, v24);
          *v62 = v24;
        }
        v27 = v24[2];
        v44 = v24[3];
        v28 = v27 + 1;
        if (v27 < v44 >> 1)
          goto LABEL_9;
        v29 = sub_100043ED0((_QWORD *)(v44 > 1), v27 + 1, 1, v24);
        v24 = v29;
        v30 = v62;
      }
      *v30 = v29;
LABEL_9:
      v24[2] = v28;
      v15 = &v24[2 * v27];
      v15[4] = v20;
      v15[5] = v22;
      swift_endAccess(v65);

      goto LABEL_10;
    }
    v31 = v17;
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = a1;
      v35 = swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      v65[0] = v36;
      *(_DWORD *)v35 = v58.n128_u32[0];
      v37 = objc_msgSend(v31, "title");
      if (v37)
      {
        v38 = v37;
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        v41 = v40;

      }
      else
      {
        v41 = 0xEF3E656C74697420;
        v39 = 0x6E776F6E6B6E753CLL;
      }
      *(_QWORD *)(v35 + 4) = sub_100040F58(v39, v41, v65);
      swift_bridgeObjectRelease(v41);

      _os_log_impl((void *)&_mh_execute_header, v32, v33, "No assetID for asset %s. Skipping asset", (uint8_t *)v35, 0xCu);
      swift_arrayDestroy(v36, 1, v57);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);

      a1 = v34;
      v12 = v60;
    }
    else
    {

      v12 = v60;
    }
LABEL_10:
    ++v14;
  }
  while (v12 != v14);
  swift_bridgeObjectRelease(a1);
  v11 = v55;
  a3 = v56;
LABEL_31:
  v45 = v61;
  swift_beginAccess(v61, v65, 0, 0);
  v46 = *v45;
  v47 = v62;
  swift_beginAccess(v62, v64, 0, 0);
  v48 = *v47;
  v49 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v11, 1, 1, v49);
  v50 = (_QWORD *)swift_allocObject(&unk_100918C60, 56, 7);
  v50[2] = 0;
  v50[3] = 0;
  v50[4] = v46;
  v50[5] = a3;
  v50[6] = v48;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRetain(v48);
  v51 = a3;
  v52 = sub_10030C02C((uint64_t)v11, (uint64_t)&unk_1009F1750, (uint64_t)v50);
  swift_release(v52);
}

uint64_t sub_1006230F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch(sub_100623110, 0, 0);
}

uint64_t sub_100623110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();

  if (*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16))
  {
    v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___BKFinishedAssetManager_assetCache);
    *(_QWORD *)(v0 + 40) = v1;
    if (v1)
    {
      swift_retain(v1);
      v2 = sub_1006231B8;
      return swift_task_switch(v2, v1, 0);
    }
  }
  if (*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16))
  {
    v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___BKFinishedAssetManager_assetCache);
    *(_QWORD *)(v0 + 48) = v1;
    if (v1)
    {
      swift_retain(v1);
      v2 = sub_100623274;
      return swift_task_switch(v2, v1, 0);
    }
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006231B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  _s5Books18FinishedAssetCacheC9addAssetsyySaySSGF_0(*(_QWORD *)(v0 + 16));
  swift_release(v1);
  return swift_task_switch(sub_100623200, 0, 0);
}

uint64_t sub_100623200()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16))
    return (*(uint64_t (**)(void))(v0 + 8))();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___BKFinishedAssetManager_assetCache);
  *(_QWORD *)(v0 + 48) = v1;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  swift_retain(v1);
  return swift_task_switch(sub_100623274, v1, 0);
}

uint64_t sub_100623274()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 48);
  _s5Books18FinishedAssetCacheC12removeAssetsyySaySSGF_0(*(_QWORD *)(v0 + 32));
  v2 = swift_release(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

double sub_1006232B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double sub_100623390()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  _QWORD v23[4];

  v1 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v1);
  v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for TaskPriority(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject(&unk_100918AF8, 40, 7);
  v6[2] = 0;
  v7 = v6 + 2;
  v6[3] = 0;
  v6[4] = v0;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v9 = v0;
  if (v8 == 1)
  {
    sub_100010960((uint64_t)v3, &qword_1009D3150);
    v10 = 0;
    v11 = 0;
    v12 = 7168;
  }
  else
  {
    v13 = TaskPriority.rawValue.getter(v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    v12 = v13 | 0x1C00;
    v14 = *v7;
    if (*v7)
    {
      v15 = v6[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v14);
      v10 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v15);
      v11 = v17;
      swift_unknownObjectRelease(v14);
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
  }
  v18 = swift_allocObject(&unk_100918B20, 32, 7);
  *(_QWORD *)(v18 + 16) = &unk_1009F1728;
  *(_QWORD *)(v18 + 24) = v6;
  v19 = sub_10004CFD4(&qword_1009DA1E8);
  if (v11 | v10)
  {
    v23[0] = 0;
    v23[1] = 0;
    v20 = v23;
    v23[2] = v10;
    v23[3] = v11;
  }
  else
  {
    v20 = 0;
  }
  v21 = swift_task_create(v12, v20, v19, &unk_1009DA1E0, v18);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100623568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch(sub_100623580, 0, 0);
}

uint64_t sub_100623580()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___BKFinishedAssetManager_assetCache);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    swift_retain(v1);
    return swift_task_switch(sub_1006235F4, v1, 0);
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1006235F4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Class isa;
  NSString v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  type metadata accessor for Date(0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setObject:forKey:", isa, v4);

  swift_release(v1);
  return swift_task_switch(sub_1005C7A28, 0, 0);
}

void sub_1006236D0(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  Class isa;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  void *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;

  v66 = a2;
  v72 = a1;
  v2 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v2);
  v71 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v70 = (uint64_t)&v64 - v5;
  v6 = type metadata accessor for Date(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v69 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v64 - v10;
  v12 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v12);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_allocWithZone((Class)NSFetchRequest);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithEntityName:", v16);

  objc_msgSend(v17, "setReturnsObjectsAsFaults:", 0);
  v18 = sub_10004CFD4(&qword_1009D4B80);
  v19 = swift_allocObject(v18, 96, 7);
  *(_OWORD *)(v19 + 16) = xmmword_10070FC00;
  *(_QWORD *)(v19 + 32) = 0x44497465737361;
  *(_QWORD *)(v19 + 40) = 0xE700000000000000;
  *(_QWORD *)(v19 + 88) = &type metadata for String;
  *(_QWORD *)(v19 + 56) = &type metadata for String;
  strcpy((char *)(v19 + 64), "dateFinished");
  *(_BYTE *)(v19 + 77) = 0;
  *(_WORD *)(v19 + 78) = -5120;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v17, "setPropertiesToFetch:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

  sub_100009E04(0, &qword_1009E3A10, NSPredicate_ptr);
  v21 = sub_10004CFD4((uint64_t *)&unk_1009D1970);
  v22 = swift_allocObject(v21, 232, 7);
  *(_OWORD *)(v22 + 16) = xmmword_10071B8B0;
  *(_QWORD *)(v22 + 56) = &type metadata for String;
  v23 = sub_10002BE50();
  *(_QWORD *)(v22 + 32) = 0x6873696E69467369;
  *(_QWORD *)(v22 + 40) = 0xEA00000000006465;
  *(_QWORD *)(v22 + 96) = &type metadata for String;
  *(_QWORD *)(v22 + 104) = v23;
  *(_QWORD *)(v22 + 64) = v23;
  strcpy((char *)(v22 + 72), "dateFinished");
  *(_BYTE *)(v22 + 85) = 0;
  *(_WORD *)(v22 + 86) = -5120;
  *(_QWORD *)(v22 + 136) = &type metadata for String;
  *(_QWORD *)(v22 + 144) = v23;
  *(_QWORD *)(v22 + 112) = 0xD000000000000015;
  *(_QWORD *)(v22 + 120) = 0x80000001007DA2F0;
  *(_QWORD *)(v22 + 176) = &type metadata for String;
  *(_QWORD *)(v22 + 184) = v23;
  *(_QWORD *)(v22 + 152) = 0x6574617473;
  *(_QWORD *)(v22 + 160) = 0xE500000000000000;
  *(_QWORD *)(v22 + 216) = &type metadata for Int16;
  *(_QWORD *)(v22 + 224) = &protocol witness table for Int16;
  *(_WORD *)(v22 + 192) = 1;
  v24 = (void *)NSPredicate.init(format:_:)(0xD000000000000039, 0x80000001007DA2B0, v22);
  objc_msgSend(v17, "setPredicate:", v24);

  v25 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  v26 = NSManagedObjectContext.fetch<A>(_:)(v17, v25);
  v27 = v26;
  v67 = v11;
  v65 = v14;
  if ((unint64_t)v26 >> 62)
  {
    if (v26 < 0)
      v63 = v26;
    else
      v63 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v28 = _CocoaArrayWrapper.endIndex.getter(v63);
  }
  else
  {
    v28 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v26);
  }
  v29 = (uint64_t)v65;
  v30 = v66;
  v31 = (uint64_t)v71;
  v64 = v17;
  if (!v28)
  {
    v46 = (char *)_swiftEmptyArrayStorage;
    v34 = _swiftEmptyArrayStorage;
LABEL_34:
    swift_bridgeObjectRelease_n(v27, 2);
    v58 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v29, 1, 1, v58);
    v59 = v29;
    v60 = (_QWORD *)swift_allocObject(&unk_100918BC0, 56, 7);
    v60[2] = 0;
    v60[3] = 0;
    v60[4] = v30;
    v60[5] = v34;
    v60[6] = v46;
    v61 = v30;
    v62 = sub_10030C178(v59, (uint64_t)&unk_1009F1738, (uint64_t)v60);
    swift_release(v62);

    return;
  }
  if (v28 >= 1)
  {
    v32 = v28;
    v33 = 0;
    v72 = v27 & 0xC000000000000001;
    v34 = _swiftEmptyArrayStorage;
    do
    {
      if (v72)
        v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v33, v27);
      else
        v35 = *(id *)(v27 + 8 * v33 + 32);
      v36 = v35;
      v37 = objc_msgSend(v35, "assetID", v64);
      if (v37)
      {
        v38 = v37;
        v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
        v41 = v40;

        if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
          v34 = sub_100043ED0(0, v34[2] + 1, 1, v34);
        v43 = v34[2];
        v42 = v34[3];
        if (v43 >= v42 >> 1)
          v34 = sub_100043ED0((_QWORD *)(v42 > 1), v43 + 1, 1, v34);
        v34[2] = v43 + 1;
        v44 = &v34[2 * v43];
        v44[4] = v39;
        v44[5] = v41;
        v31 = (uint64_t)v71;
      }
      else
      {

      }
      ++v33;
    }
    while (v32 != v33);
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRetain(v27);
    v45 = 0;
    v46 = (char *)_swiftEmptyArrayStorage;
    v68 = v32;
    do
    {
      if (v72)
        v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v45, v27);
      else
        v48 = *(id *)(v27 + 8 * v45 + 32);
      v49 = v48;
      v50 = objc_msgSend(v48, "dateFinished");
      if (v50)
      {
        v51 = v50;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v50);

        v52 = 0;
      }
      else
      {
        v52 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v31, v52, 1, v6);
      v53 = v70;
      sub_100025B3C(v31, v70, &qword_1009D7440);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v53, 1, v6) == 1)
      {
        sub_100010960(v53, &qword_1009D7440);
        v47 = v68;
      }
      else
      {
        v54 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
        v55 = v67;
        v54(v67, v53, v6);
        v54(v69, (uint64_t)v55, v6);
        if ((swift_isUniquelyReferenced_nonNull_native(v46) & 1) == 0)
          v46 = (char *)sub_1005B23AC(0, *((_QWORD *)v46 + 2) + 1, 1, (unint64_t)v46);
        v47 = v68;
        v57 = *((_QWORD *)v46 + 2);
        v56 = *((_QWORD *)v46 + 3);
        if (v57 >= v56 >> 1)
          v46 = (char *)sub_1005B23AC(v56 > 1, v57 + 1, 1, (unint64_t)v46);
        *((_QWORD *)v46 + 2) = v57 + 1;
        v54(&v46[((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v57], (uint64_t)v69, v6);
        v31 = (uint64_t)v71;
      }
      ++v45;
    }
    while (v47 != v45);
    v29 = (uint64_t)v65;
    v30 = v66;
    goto LABEL_34;
  }
  __break(1u);
}

uint64_t sub_100623E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch(sub_100623E90, 0, 0);
}

uint64_t sub_100623E90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR___BKFinishedAssetManager_assetCache);
  *(_QWORD *)(v0 + 48) = v1;
  if (v1)
  {
    swift_retain(v1);
    return swift_task_switch(sub_100623F04, v1, 0);
  }
  else
  {
    **(_BYTE **)(v0 + 16) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100623F04()
{
  Swift::OpaquePointer *v0;
  void *rawValue;

  rawValue = v0[6]._rawValue;
  FinishedAssetCache.addAssets(_:dates:)(v0[4], v0[5]);
  swift_release(rawValue);
  return swift_task_switch(sub_100623F4C, 0, 0);
}

uint64_t sub_100623F4C()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 48) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id FinishedAssetManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FinishedAssetManager(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

void FinishedAssetCache.dataDict.setter(uint64_t a1)
{
  id v2;
  Class isa;
  id v4;

  v2 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  type metadata accessor for Date(0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setObject:forKey:", isa, v4);

}

void (*FinishedAssetCache.dataDict.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  *a1 = _s5Books18FinishedAssetCacheC9allAssetsSDySS10Foundation4DateVGyF_0();
  return sub_100624114;
}

void sub_100624114(_QWORD *a1, char a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  Class isa;
  NSString v9;
  Class v10;
  NSString v11;
  id v12;

  v4 = *a1;
  v5 = (void *)objc_opt_self(NSUserDefaults);
  v6 = v5;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain(v4);
    v7 = objc_msgSend(v6, "standardUserDefaults");
    type metadata accessor for Date(0);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setObject:forKey:", isa, v9);

    swift_bridgeObjectRelease(*a1);
  }
  else
  {
    v12 = objc_msgSend(v5, "standardUserDefaults");
    type metadata accessor for Date(0);
    v10 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v4);
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v12, "setObject:forKey:", v10, v11);

  }
}

uint64_t FinishedAssetCache.init()()
{
  uint64_t v0;

  swift_defaultActor_initialize(v0);
  Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0x64656873696E6946, 0xEE00737465737341);
  return v0;
}

Swift::Void __swiftcall FinishedAssetCache.addAssets(_:dates:)(Swift::OpaquePointer _, Swift::OpaquePointer dates)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  __n128 v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v23;
  char v24;
  char v25;
  int isUniquelyReferenced_nonNull_native;
  __n128 v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  os_log_type_t v43;
  uint8_t *v44;
  id v45;
  Class isa;
  NSString v47;
  uint64_t v48;
  void *rawValue;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t, __n128);
  char *v55;
  id v56;
  _QWORD *v57;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v55 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  v12 = (char *)&v48 - v11;
  v13 = *((_QWORD *)_._rawValue + 2);
  if (v13 != *((_QWORD *)dates._rawValue + 2))
  {
    v56 = (id)Logger.logObject.getter(v9);
    v43 = static os_log_type_t.error.getter(v56);
    if (os_log_type_enabled((os_log_t)v56, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v56, v43, "Different size for assetIDs and dates. Not adding anything to the cache", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }

    return;
  }
  v51 = v10;
  v14 = _s5Books18FinishedAssetCacheC9allAssetsSDySS10Foundation4DateVGyF_0();
  if (!v13)
  {
LABEL_27:
    v45 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v14);
    v47 = String._bridgeToObjectiveC()();
    objc_msgSend(v45, "setObject:forKey:", isa, v47);

    return;
  }
  v15 = (char *)dates._rawValue
      + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v56 = *(id *)(v5 + 72);
  v54 = *(void (**)(char *, char *, uint64_t, __n128))(v5 + 16);
  v16 = swift_bridgeObjectRetain(_._rawValue);
  rawValue = _._rawValue;
  v50 = v5;
  v17 = (uint64_t *)((char *)_._rawValue + 40);
  v52 = v12;
  v53 = v4;
  while (1)
  {
    v21 = *(v17 - 1);
    v20 = *v17;
    v54(v12, v15, v4, v16);
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v12, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
    {
      swift_bridgeObjectRetain(v20);
      sub_100010960((uint64_t)v12, &qword_1009D7440);
      swift_bridgeObjectRetain(v14);
      v23 = sub_10004CE80(v21, v20);
      v25 = v24;
      swift_bridgeObjectRelease(v14);
      if ((v25 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v14);
        v57 = v14;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1002C2B18();
          v14 = v57;
        }
        v27 = swift_bridgeObjectRelease(*(_QWORD *)(v14[6] + 16 * v23 + 8));
        v19 = v51;
        v4 = v53;
        (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v5 + 32))(v51, v14[7] + v23 * (_QWORD)v56, v53, v27);
        sub_1002BF510(v23, (uint64_t)v14);
        swift_bridgeObjectRelease(0x8000000000000000);
        v18 = 0;
      }
      else
      {
        v18 = 1;
        v4 = v53;
        v19 = v51;
      }
      v22((char *)v19, v18, 1, v4);
      swift_bridgeObjectRelease(v20);
      sub_100010960(v19, &qword_1009D7440);
      goto LABEL_6;
    }
    v28 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v28(v55, v12, v4);
    swift_bridgeObjectRetain(v20);
    v29 = swift_isUniquelyReferenced_nonNull_native(v14);
    v57 = v14;
    v31 = sub_10004CE80(v21, v20);
    v32 = v14[2];
    v33 = (v30 & 1) == 0;
    v34 = v32 + v33;
    if (__OFADD__(v32, v33))
      break;
    v35 = v30;
    if (v14[3] >= v34)
    {
      if ((v29 & 1) == 0)
        sub_1002C2B18();
    }
    else
    {
      sub_10037EC1C(v34, v29);
      v36 = sub_10004CE80(v21, v20);
      if ((v35 & 1) != (v37 & 1))
        goto LABEL_30;
      v31 = v36;
    }
    v4 = v53;
    v38 = v57;
    if ((v35 & 1) != 0)
    {
      v5 = v50;
      (*(void (**)(unint64_t, char *, uint64_t))(v50 + 40))(v57[7] + v31 * (_QWORD)v56, v55, v53);
    }
    else
    {
      v57[(v31 >> 6) + 8] |= 1 << v31;
      v39 = (uint64_t *)(v38[6] + 16 * v31);
      *v39 = v21;
      v39[1] = v20;
      v28((char *)(v38[7] + v31 * (_QWORD)v56), v55, v4);
      v40 = v38[2];
      v41 = __OFADD__(v40, 1);
      v42 = v40 + 1;
      if (v41)
        goto LABEL_29;
      v38[2] = v42;
      swift_bridgeObjectRetain(v20);
      v5 = v50;
    }
    v14 = v57;
    swift_bridgeObjectRelease(v20);
    v16 = swift_bridgeObjectRelease(0x8000000000000000);
LABEL_6:
    v12 = v52;
    v17 += 2;
    v15 = (char *)v56 + (_QWORD)v15;
    if (!--v13)
    {
      swift_bridgeObjectRelease(rawValue);
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

Swift::Void __swiftcall FinishedAssetCache.clear()()
{
  id v0;
  Class isa;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  type metadata accessor for Date(0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setObject:forKey:", isa, v2);

}

uint64_t FinishedAssetCache.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books18FinishedAssetCache_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t FinishedAssetCache.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books18FinishedAssetCache_logger;
  v2 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy(v0);
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10062495C()
{
  return sub_10000EB10(48);
}

uint64_t sub_100624964(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  _QWORD *v8;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009F15BC);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1001FC2C4;
  return sub_1006218C0(v7, a1, v4, v5, v6);
}

_QWORD *_s5Books18FinishedAssetCacheC9allAssetsSDySS10Foundation4DateVGyF_0()
{
  id v0;
  NSString v1;
  id v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;
  _OWORD v7[2];
  _OWORD v8[2];

  v0 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "objectForKey:", v1);

  if (!v2)
    return _swiftEmptyDictionarySingleton;
  _bridgeAnyObjectToAny(_:)(v2);
  swift_unknownObjectRelease(v2);
  sub_10004CFC4(v7, v8);
  sub_10004CD0C((uint64_t)v8, (uint64_t)v7);
  v3 = sub_10004CFD4(&qword_1009F1740);
  if (swift_dynamicCast(&v6, v7, (char *)&type metadata for Any + 8, v3, 6))
    v4 = v6;
  else
    v4 = _swiftEmptyDictionarySingleton;
  _s5Books15CurrentPageViewVwxx_0(v8);
  return v4;
}

void sub_100624AFC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, char *, __n128))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, char *, __n128);
  _QWORD *v31;

  v25 = a2;
  v30 = a4;
  v26 = a1;
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v31 = (_QWORD *)a3;
  v10 = *(_QWORD *)(a3 + 64);
  v27 = 0;
  v28 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v29 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v29)
      goto LABEL_24;
    v21 = *(_QWORD *)(v28 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v29)
        goto LABEL_24;
      v21 = *(_QWORD *)(v28 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v29)
          goto LABEL_24;
        v21 = *(_QWORD *)(v28 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_20:
    v13 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_5:
    v16 = (uint64_t *)(v31[6] + 16 * v15);
    v17 = *v16;
    v18 = v16[1];
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v31[7] + *(_QWORD *)(v6 + 72) * v15, v5);
    v19 = swift_bridgeObjectRetain(v18);
    LOBYTE(v17) = v30(v17, v18, v8, v19);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease(v18);
    if ((v17 & 1) != 0)
    {
      *(unint64_t *)((char *)v26 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
LABEL_24:
        sub_10029A35C(v26, v25, v27, v31);
        return;
      }
    }
  }
  v22 = v20 + 3;
  if (v22 >= v29)
    goto LABEL_24;
  v21 = *(_QWORD *)(v28 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v29)
      goto LABEL_24;
    v21 = *(_QWORD *)(v28 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_100624D50(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, char *, __n128), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  v6 = isStackAllocationSafe;
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = v7 & 0x3F;
  v9 = (1 << v7) + 63;
  v10 = v9 >> 6;
  v11 = 8 * (v9 >> 6);
  if (v8 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v9 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0), v11);
    sub_100624AFC((unint64_t *)((char *)&v16 - ((v11 + 15) & 0x3FFFFFFFFFFFFFF0)), v10, v6, a2);
    if (v3)
      swift_willThrow(v12);
    else
      return v12;
  }
  else
  {
    v13 = (void *)swift_slowAlloc(v11, -1);
    bzero(v13, v11);
    sub_100624AFC((unint64_t *)v13, v10, v6, a2);
    a3 = v14;
    swift_slowDealloc(v13, -1, -1);
  }
  return a3;
}

void _s5Books18FinishedAssetCacheC12removeAssetsyySaySSGF_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Class isa;
  NSString v20;
  uint64_t v21;
  _QWORD *v22;

  v2 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s5Books18FinishedAssetCacheC9allAssetsSDySS10Foundation4DateVGyF_0();
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain(a1);
    v21 = a1;
    v7 = (uint64_t *)(a1 + 40);
    do
    {
      v10 = *(v7 - 1);
      v9 = *v7;
      swift_bridgeObjectRetain(*v7);
      swift_bridgeObjectRetain(v5);
      v11 = sub_10004CE80(v10, v9);
      v13 = v12;
      swift_bridgeObjectRelease(v5);
      if ((v13 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v5);
        v22 = v5;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1002C2B18();
          v5 = v22;
        }
        swift_bridgeObjectRelease(*(_QWORD *)(v5[6] + 16 * v11 + 8));
        v15 = v5[7];
        v16 = type metadata accessor for Date(0);
        v17 = *(_QWORD *)(v16 - 8);
        (*(void (**)(char *, unint64_t, uint64_t))(v17 + 32))(v4, v15 + *(_QWORD *)(v17 + 72) * v11, v16);
        sub_1002BF510(v11, (uint64_t)v5);
        swift_bridgeObjectRelease(0x8000000000000000);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v4, 0, 1, v16);
      }
      else
      {
        v8 = type metadata accessor for Date(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
      }
      v7 += 2;
      sub_100010960((uint64_t)v4, &qword_1009D7440);
      swift_bridgeObjectRelease(v9);
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease(v21);
  }
  v18 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  type metadata accessor for Date(0);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v5);
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setObject:forKey:", isa, v20);

}

double sub_100625108(void *a1)
{
  char *v1;
  char *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  Class isa;
  _QWORD *v31;
  void *v32;
  _QWORD *v33;
  char *v34;
  double result;
  char v36[24];
  void **aBlock;
  _QWORD v38[4];
  _QWORD *v39;
  char v40[24];
  _QWORD *v41;

  v2 = v1;
  v4 = _swiftEmptyArrayStorage;
  v41 = _swiftEmptyArrayStorage;
  v5 = swift_allocObject(&unk_100918BE8, 24, 7);
  *(_QWORD *)(v5 + 16) = _swiftEmptyArrayStorage;
  v6 = swift_allocObject(&unk_100918BE8, 24, 7);
  *(_QWORD *)(v6 + 16) = _swiftEmptyArrayStorage;
  v7 = objc_msgSend(a1, "updatedObjects");
  if (v7)
  {
    v8 = v7;
    v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, (char *)&type metadata for Any + 8);

    v10 = sub_100015520(v9);
    swift_bridgeObjectRelease(v9);
    if (v10)
      v4 = v10;
  }
  sub_10037583C((uint64_t)v4);
  v11 = objc_msgSend(a1, "addedObjects");
  v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    v13 = v11;
    v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, (char *)&type metadata for Any + 8);

    v15 = sub_100015520(v14);
    swift_bridgeObjectRelease(v14);
    if (v15)
      v12 = v15;
  }
  sub_10037583C((uint64_t)v12);
  v16 = objc_msgSend(a1, "deletedObjects");
  v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    v18 = v16;
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, (char *)&type metadata for Any + 8);

    v20 = sub_100015520(v19);
    swift_bridgeObjectRelease(v19);
    if (v20)
      v17 = v20;
  }
  sub_10037583C((uint64_t)v17);
  v21 = v41;
  swift_bridgeObjectRetain(v41);
  swift_retain(v5);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(22, -1);
    *(_DWORD *)v25 = 134218240;
    aBlock = (void **)v21[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v38, v25 + 4, v25 + 12);
    swift_bridgeObjectRelease(v21);
    *(_WORD *)(v25 + 12) = 2048;
    swift_beginAccess(v5 + 16, v36, 0, 0);
    aBlock = *(void ***)(*(_QWORD *)(v5 + 16) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v38, v25 + 14, v25 + 22);
    swift_release(v5);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%ld assets updated. %ld assets removed", (uint8_t *)v25, 0x16u);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(v41);
    swift_release(v5);
  }
  v26 = *(void **)&v2[OBJC_IVAR___BKFinishedAssetManager_libraryManager];
  if (v26)
  {
    swift_beginAccess(&v41, v40, 0, 0);
    v27 = (uint64_t)v41;
    v28 = v26;
    v29 = sub_100366218(v27);
    swift_bridgeObjectRelease(v27);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v29);
    v31 = (_QWORD *)swift_allocObject(&unk_100918C10, 40, 7);
    v31[2] = v2;
    v31[3] = v6;
    v31[4] = v5;
    v38[3] = sub_100625DB8;
    v39 = v31;
    aBlock = _NSConcreteStackBlock;
    v38[0] = 1107296256;
    v38[1] = sub_1006232B0;
    v38[2] = &unk_100918C28;
    v32 = _Block_copy(&aBlock);
    v33 = v39;
    swift_retain(v5);
    v34 = v2;
    swift_retain(v6);
    objc_msgSend(v28, "fetchLibraryAssetsFromAssetIDs:handler:", isa, v32, swift_release(v33).n128_f64[0]);
    _Block_release(v32);

  }
  else
  {
    swift_bridgeObjectRelease(v21);
  }
  swift_release(v6);
  *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for FinishedAssetManager(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009F1618, (uint64_t)&nominal type descriptor for FinishedAssetManager);
}

void _s5Books18FinishedAssetCacheC9addAssetsyySaySSGF_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  int isUniquelyReferenced_nonNull_native;
  __n128 v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  void *v48;
  id v49;
  Class isa;
  NSString v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  _QWORD *v59;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v56 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v5);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v57 = (char *)&v52 - v9;
  __chkstk_darwin(v10);
  v12 = (char *)&v52 - v11;
  v13 = _s5Books18FinishedAssetCacheC9allAssetsSDySS10Foundation4DateVGyF_0();
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
  {
LABEL_31:
    v48 = (void *)objc_opt_self(NSUserDefaults);
    v49 = objc_msgSend(v48, "standardUserDefaults", swift_bridgeObjectRetain(v13).n128_f64[0]);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v13);
    v51 = String._bridgeToObjectiveC()();
    objc_msgSend(v49, "setObject:forKey:", isa, v51);
    swift_bridgeObjectRelease(v13);

    return;
  }
  v58 = v12;
  v15 = swift_bridgeObjectRetain(a1);
  v53 = a1;
  v54 = v7;
  v16 = (uint64_t *)(a1 + 40);
  v55 = v2;
  v17 = (uint64_t)v57;
  while (1)
  {
    v21 = *(v16 - 1);
    v20 = *v16;
    if (v13[2])
    {
      swift_bridgeObjectRetain(*v16);
      v22 = sub_10004CE80(v21, v20);
      if ((v23 & 1) != 0)
      {
        v24 = (uint64_t)v58;
        (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v58, v13[7] + *(_QWORD *)(v3 + 72) * v22, v2);
        v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
        v25(v24, 0, 1, v2);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v24, 1, v2) != 1)
        {
          swift_bridgeObjectRelease(v20);
          sub_100010960(v24, &qword_1009D7440);
          goto LABEL_6;
        }
      }
      else
      {
        v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
        v24 = (uint64_t)v58;
        v25((uint64_t)v58, 1, 1, v2);
      }
    }
    else
    {
      v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v24 = (uint64_t)v58;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v25)(v58, 1, 1, v2, v15);
      swift_bridgeObjectRetain(v20);
    }
    v26 = sub_100010960(v24, &qword_1009D7440);
    static Date.now.getter(v26);
    v25(v17, 0, 1, v2);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v17, 1, v2) == 1)
    {
      sub_100010960(v17, &qword_1009D7440);
      swift_bridgeObjectRetain(v13);
      v27 = sub_10004CE80(v21, v20);
      v29 = v28;
      swift_bridgeObjectRelease(v13);
      if ((v29 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
        v59 = v13;
        v19 = (uint64_t)v54;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1002C2B18();
          v13 = v59;
        }
        v31 = swift_bridgeObjectRelease(*(_QWORD *)(v13[6] + 16 * v27 + 8));
        v2 = v55;
        (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v3 + 32))(v19, v13[7] + *(_QWORD *)(v3 + 72) * v27, v55, v31);
        sub_1002BF510(v27, (uint64_t)v13);
        swift_bridgeObjectRelease(0x8000000000000000);
        v18 = 0;
      }
      else
      {
        v18 = 1;
        v19 = (uint64_t)v54;
        v2 = v55;
      }
      v25(v19, v18, 1, v2);
      swift_bridgeObjectRelease(v20);
      sub_100010960(v19, &qword_1009D7440);
      goto LABEL_5;
    }
    v32 = v3;
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 32);
    v33(v56, v17, v2);
    v34 = swift_isUniquelyReferenced_nonNull_native(v13);
    v59 = v13;
    v36 = sub_10004CE80(v21, v20);
    v37 = v13[2];
    v38 = (v35 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
      break;
    v40 = v35;
    if (v13[3] >= v39)
    {
      if ((v34 & 1) != 0)
      {
        v43 = v59;
        if ((v35 & 1) == 0)
          goto LABEL_22;
      }
      else
      {
        sub_1002C2B18();
        v43 = v59;
        if ((v40 & 1) == 0)
          goto LABEL_22;
      }
    }
    else
    {
      sub_10037EC1C(v39, v34);
      v41 = sub_10004CE80(v21, v20);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_34;
      v36 = v41;
      v43 = v59;
      if ((v40 & 1) == 0)
      {
LABEL_22:
        v43[(v36 >> 6) + 8] |= 1 << v36;
        v44 = (uint64_t *)(v43[6] + 16 * v36);
        *v44 = v21;
        v44[1] = v20;
        v2 = v55;
        v33((char *)(v43[7] + *(_QWORD *)(v32 + 72) * v36), (uint64_t)v56, v55);
        v45 = v43[2];
        v46 = __OFADD__(v45, 1);
        v47 = v45 + 1;
        if (v46)
          goto LABEL_33;
        v43[2] = v47;
        swift_bridgeObjectRetain(v20);
        v3 = v32;
        goto LABEL_27;
      }
    }
    v3 = v32;
    v2 = v55;
    (*(void (**)(unint64_t, char *, uint64_t))(v32 + 40))(v43[7] + *(_QWORD *)(v32 + 72) * v36, v56, v55);
LABEL_27:
    v13 = v59;
    swift_bridgeObjectRelease(v20);
    v15 = swift_bridgeObjectRelease(0x8000000000000000);
LABEL_5:
    v17 = (uint64_t)v57;
LABEL_6:
    v16 += 2;
    if (!--v14)
    {
      swift_bridgeObjectRelease(v53);
      goto LABEL_31;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_100625A50()
{
  return type metadata accessor for FinishedAssetManager(0);
}

uint64_t sub_100625A58(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = "\b";
  v4[3] = "\b";
  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100625AD4()
{
  return type metadata accessor for FinishedAssetCache(0);
}

uint64_t type metadata accessor for FinishedAssetCache(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009F1650, (uint64_t)&nominal type descriptor for FinishedAssetCache);
}

uint64_t sub_100625AF0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for Logger(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100625B68()
{
  return sub_10000EB10(40);
}

uint64_t sub_100625B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc(dword_1009F1724);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AE34;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch(sub_100623580, 0, 0);
}

uint64_t sub_100625BD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

const char *sub_100625C04()
{
  return "BKFinishedAssetRemovalEnabledKey";
}

id sub_100625C10@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "BKFinishedAssetRemovalEnabledKey");
  *a2 = (_BYTE)result;
  return result;
}

id sub_100625C40(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setBKFinishedAssetRemovalEnabledKey:", *a1);
}

uint64_t sub_100625C54()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100625C78(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1006215B8(a1, a2, v2);
}

uint64_t sub_100625C80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100625CA4(unint64_t a1)
{
  uint64_t v1;

  sub_1006236D0(a1, *(void **)(v1 + 16));
}

uint64_t sub_100625CAC()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100625CE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc(dword_1009F1734);
  v6 = *(_OWORD *)(v1 + 32);
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_1001FC2C4;
  *(_QWORD *)(v5 + 40) = v4;
  *(_OWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch(sub_100623E90, 0, 0);
}

uint64_t sub_100625D60()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100625D84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100625DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_100622C18(a1, a2, *(char **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_100625DC4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100625E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc(dword_1009F174C);
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1001FC2C4;
  *(_QWORD *)(v3 + 32) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  return swift_task_switch(sub_100623110, 0, 0);
}

BOOL sub_100625E68()
{
  uint64_t v0;
  double v1;

  v1 = *(double *)(v0 + 16);
  return v1 < -Date.timeIntervalSinceNow.getter();
}

uint64_t sub_100625EA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

void sub_100625EDC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_10062251C(*(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

unint64_t sub_100625EF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E9618;
  if (!qword_1009E9618)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009E8850);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, &qword_1009E9618);
  }
  return result;
}

void sub_100625F44()
{
  uint64_t v0;

  sub_100622B68(*(void **)(v0 + 16));
}

uint64_t sub_100625F60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v1 = type metadata accessor for ContextActionSource(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v18 - v6;
  v8 = type metadata accessor for InternalTapToRadarActionItem(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = static Capabilities.isInternalBuild.getter(v11);
  sub_100627168(v0, (uint64_t)v10);
  if ((v12 & 1) != 0)
  {
    v13 = v10[8];
    v14 = v10[9];
    sub_10003F198(v10 + 5, v13);
    dispatch thunk of ContextActionDataProtocol.source.getter(v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for ContextActionSource.productPage(_:), v1);
    v15 = static ContextActionSource.== infix(_:_:)(v7, v4);
    v16 = *(void (**)(char *, uint64_t))(v2 + 8);
    v16(v4, v1);
    v16(v7, v1);
  }
  else
  {
    v15 = 0;
  }
  sub_1006271AC((uint64_t)v10);
  return v15 & 1;
}

uint64_t sub_1006260B4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1[31] = v0;
  v2 = type metadata accessor for CommandExecutionLocation(0);
  v1[32] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[33] = v3;
  v1[34] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for RadarDiagnostics(0);
  v1[35] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[36] = v5;
  v1[37] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009F18B0);
  v1[38] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009F18B8);
  v1[39] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RadarComponent(0);
  v1[40] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v1[41] = v9;
  v1[42] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RadarAttachment(0);
  v1[43] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v1[44] = v11;
  v1[45] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  v1[46] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MainActor(0);
  v1[47] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  return swift_task_switch(sub_10062622C, v14, v15);
}

void sub_10062622C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  objc_class *v8;
  UIWindowScene v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  Swift::String v22;
  uint64_t v23;
  uint64_t v24;
  Swift::String v25;
  void *object;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  Swift::String v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  void *v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  uint64_t v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t ObjectType;
  void *v116;
  uint64_t v117;
  void (*v118)(uint64_t);
  unint64_t v119;
  objc_class *isa;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  Swift::String v124;
  uint64_t v125;
  void *v126;

  v1 = *(_QWORD **)(v0 + 248);
  swift_release(*(_QWORD *)(v0 + 376));
  v2 = v1[3];
  v3 = v1[4];
  sub_10003F198(v1, v2);
  v4 = (void *)dispatch thunk of ContextMenuPresentationContextProtocol.currentViewController.getter(v2, v3);
  if (!v4)
    goto LABEL_32;
  v5 = v4;
  v6 = objc_msgSend(v4, "view");

  if (!v6)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v7 = objc_msgSend(v6, "window");

  if (!v7)
  {
LABEL_32:
    v98 = *(_QWORD *)(v0 + 360);
    v99 = *(_QWORD *)(v0 + 336);
    v101 = *(_QWORD *)(v0 + 304);
    v100 = *(_QWORD *)(v0 + 312);
    v102 = *(_QWORD *)(v0 + 296);
    v103 = *(_QWORD *)(v0 + 272);
    swift_task_dealloc(*(_QWORD *)(v0 + 368));
    swift_task_dealloc(v98);
    swift_task_dealloc(v99);
    swift_task_dealloc(v100);
    swift_task_dealloc(v101);
    swift_task_dealloc(v102);
    v104 = swift_task_dealloc(v103);
    (*(void (**)(__n128))(v0 + 8))(v104);
    return;
  }
  v8 = (objc_class *)objc_msgSend(v7, "windowScene");
  if (!v8)
  {

    goto LABEL_32;
  }
  v9.super.super.super.isa = v8;
  v10 = *(_QWORD **)(v0 + 248);
  v123 = (_QWORD *)(v0 + 96);
  v11 = v10[8];
  v12 = v10[9];
  sub_10003F198(v10 + 5, v11);
  v13 = dispatch thunk of ContextActionDataProtocol.assetInfos.getter(v11, v12);
  v14 = v13;
  isa = v9.super.super.super.isa;
  if (!*(_QWORD *)(v13 + 16))
  {
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    swift_bridgeObjectRelease(v13);
    goto LABEL_22;
  }
  sub_10002E418(v13 + 32, v0 + 56);
  swift_bridgeObjectRelease(v14);
  if (!*(_QWORD *)(v0 + 80))
  {
LABEL_22:
    sub_100010960(v0 + 56, qword_1009D4378);
    goto LABEL_25;
  }
  v15 = (_QWORD *)(v0 + 16);
  sub_100022840((__int128 *)(v0 + 56), v0 + 16);
  v124._countAndFlagsBits = 0;
  v124._object = (void *)0xE000000000000000;
  v16 = *(_QWORD *)(v0 + 40);
  v17 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), v16);
  v18 = dispatch thunk of ContextAssetInfoProtocol.title.getter(v16, v17);
  if (v19)
  {
    v20 = v19;
  }
  else
  {
    v18 = 0x6C746954206F4E3CLL;
    v20 = 0xEA00000000003E65;
  }
  v21 = v20;
  String.append(_:)(*(Swift::String *)&v18);
  swift_bridgeObjectRelease(v20);
  v22._countAndFlagsBits = 10272;
  v22._object = (void *)0xE200000000000000;
  String.append(_:)(v22);
  v23 = *(_QWORD *)(v0 + 40);
  v24 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), v23);
  v25._countAndFlagsBits = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v23, v24);
  object = v25._object;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(object);
  v27._countAndFlagsBits = 41;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  String.append(_:)(v124);
  swift_bridgeObjectRelease(v124._object);
  v28._object = (void *)0x80000001007DA400;
  v28._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v28);
  v124._countAndFlagsBits = 0;
  v124._object = (void *)0xE000000000000000;
  v29 = *(_QWORD *)(v0 + 40);
  v30 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), v29);
  v31 = dispatch thunk of ContextAssetInfoProtocol.shareableURLString.getter(v29, v30);
  if (v32)
  {
    v33 = v32;
  }
  else
  {
    v31 = 0x3E4C5255206F4E3CLL;
    v33 = 0xE800000000000000;
  }
  v34 = v33;
  String.append(_:)(*(Swift::String *)&v31);
  swift_bridgeObjectRelease(v33);
  v35._countAndFlagsBits = 2570;
  v35._object = (void *)0xE200000000000000;
  String.append(_:)(v35);
  String.append(_:)(v124);
  swift_bridgeObjectRelease(v124._object);
  v36 = *(_QWORD *)(v0 + 40);
  v37 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), v36);
  if ((dispatch thunk of ContextAssetInfoProtocol.supportsUnifiedProductPage.getter(v36, v37) & 1) != 0)
  {
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease(0xE000000000000000);
    v124._countAndFlagsBits = 0xD000000000000013;
    v124._object = (void *)0x80000001007DA420;
    v38 = *(_QWORD *)(v0 + 40);
    v39 = *(_QWORD *)(v0 + 48);
    sub_10003F198((_QWORD *)(v0 + 16), v38);
    v40 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v38, v39);
    v41 = *(_QWORD *)(v40 + 16);
    swift_bridgeObjectRelease(v40);
    *(_QWORD *)(v0 + 240) = v41;
    v42._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v43 = v42._object;
    String.append(_:)(v42);
    swift_bridgeObjectRelease(v43);
    v44._countAndFlagsBits = 670249;
    v44._object = (void *)0xE300000000000000;
    String.append(_:)(v44);
    String.append(_:)(v124);
    swift_bridgeObjectRelease(v124._object);
    v45 = *(_QWORD *)(v0 + 40);
    v46 = *(_QWORD *)(v0 + 48);
    sub_10003F198((_QWORD *)(v0 + 16), v45);
    v121 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v45, v46);
    v47 = *(_QWORD *)(v121 + 16);
    if (v47)
    {
      v48 = (_QWORD *)(v121 + 32);
      do
      {
        v53 = *(_QWORD *)(v0 + 368);
        v124._countAndFlagsBits = 8234;
        v124._object = (void *)0xE200000000000000;
        v54 = v48[3];
        v55 = v48[4];
        sub_10003F198(v48, v54);
        AssetInfo.sharableURL.getter(v54, v55);
        v56 = type metadata accessor for URL(0);
        v57 = *(_QWORD *)(v56 - 8);
        v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v53, 1, v56);
        v59 = *(_QWORD *)(v0 + 368);
        if ((_DWORD)v58 == 1)
        {
          sub_100010960(*(_QWORD *)(v0 + 368), (uint64_t *)&unk_1009D23D0);
          v49 = (void *)0xE800000000000000;
          v50 = 0x3E4C5255206F4E3CLL;
        }
        else
        {
          v50 = URL.absoluteString.getter(v58);
          v49 = v60;
          (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v59, v56);
        }
        v51._countAndFlagsBits = v50;
        v51._object = v49;
        String.append(_:)(v51);
        swift_bridgeObjectRelease(v49);
        v52._countAndFlagsBits = 10;
        v52._object = (void *)0xE100000000000000;
        String.append(_:)(v52);
        String.append(_:)(v124);
        swift_bridgeObjectRelease(v124._object);
        v48 += 5;
        --v47;
      }
      while (v47);
    }
    swift_bridgeObjectRelease(v121);
    v15 = (_QWORD *)(v0 + 16);
  }
  _s5Books15CurrentPageViewVwxx_0(v15);
  v9.super.super.super.isa = isa;
LABEL_25:
  v62 = *(_QWORD *)(v0 + 352);
  v61 = *(uint64_t **)(v0 + 360);
  v63 = *(_QWORD *)(v0 + 344);
  v64 = swift_allocObject(&unk_100918D10, 24, 7);
  *(_QWORD *)(v64 + 16) = v7;
  *v61 = v64;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v62 + 104))(v61, enum case for RadarAttachment.screenshot(_:), v63);
  v65 = v7;
  v66 = sub_1005B23C0(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  v68 = *(_QWORD *)(v66 + 16);
  v67 = *(_QWORD *)(v66 + 24);
  if (v68 >= v67 >> 1)
    v66 = sub_1005B23C0(v67 > 1, v68 + 1, 1, v66);
  v70 = *(_QWORD *)(v0 + 352);
  v69 = *(_QWORD *)(v0 + 360);
  v71 = *(_QWORD *)(v0 + 344);
  *(_QWORD *)(v66 + 16) = v68 + 1;
  v119 = v66;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v70 + 32))(v66+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(_QWORD *)(v70 + 72) * v68, v69, v71);
  v72 = objc_msgSend((id)objc_opt_self(BKAppDelegate), "delegate");
  v73 = objc_msgSend(v72, "containerHost");

  sub_1000145A0(v123);
  v74 = *(_QWORD *)(v0 + 120);
  v75 = *(_QWORD *)(v0 + 128);
  sub_10003F198(v123, v74);
  v76 = sub_10004CFD4(&qword_1009F18C0);
  dispatch thunk of ResolverType.resolve<A>(_:)(v76, v76, v74, v75);
  v77 = *(_QWORD *)(v0 + 216);
  if (!v77)
    goto LABEL_34;
  v122 = *(_QWORD *)(v0 + 224);
  v78 = type metadata accessor for SceneProvider(0);
  swift_allocObject(v78, *(unsigned int *)(v78 + 48), *(unsigned __int16 *)(v78 + 52));
  v79 = SceneProvider.init()();
  SceneProvider.register(_:)(v9);
  if (qword_1009CEAA0 != -1)
    swift_once(&qword_1009CEAA0, sub_100626E28);
  v116 = v65;
  v81 = *(_QWORD *)(v0 + 328);
  v80 = *(_QWORD *)(v0 + 336);
  v117 = sub_100048F64(*(_QWORD *)(v0 + 320), (uint64_t)static RadarComponent.iBooksStoreAll);
  v118 = *(void (**)(uint64_t))(v81 + 16);
  v118(v80);
  v82 = *(_QWORD *)(v0 + 120);
  v83 = *(_QWORD *)(v0 + 128);
  sub_10003F198(v123, v82);
  v84 = sub_10004CFD4(&qword_1009F18C8);
  dispatch thunk of ResolverType.resolve<A>(_:)(v84, v84, v82, v83);
  if (*(_QWORD *)(v0 + 160))
  {
    v85 = *(_QWORD *)(v0 + 336);
    v105 = *(_QWORD *)(v0 + 320);
    v106 = *(_QWORD *)(v0 + 328);
    v86 = *(_QWORD *)(v0 + 304);
    v109 = *(_QWORD *)(v0 + 296);
    v107 = *(_QWORD *)(v0 + 288);
    v110 = *(_QWORD *)(v0 + 280);
    v111 = *(_QWORD *)(v0 + 312);
    v112 = *(_QWORD *)(v0 + 264);
    v113 = *(_QWORD *)(v0 + 272);
    v114 = *(_QWORD *)(v0 + 256);
    ObjectType = swift_getObjectType();
    v125 = v78;
    v126 = &protocol witness table for SceneProvider;
    v124._countAndFlagsBits = v79;
    v87 = type metadata accessor for RadarCommandHandler(0);
    swift_allocObject(v87, *(unsigned int *)(v87 + 48), *(unsigned __int16 *)(v87 + 52));
    v88 = swift_retain(v79);
    v89 = RadarCommandHandler.init(component:attachmentResolver:sceneProvider:)(v85, v0 + 136, &v124, v88);
    *(_QWORD *)(v0 + 232) = v89;
    sub_10004CFD4(&qword_1009F18D0);
    v90 = ((uint64_t (*)(void))static Commands.reportRadar.getter)();
    v91 = type metadata accessor for Radar(0);
    dispatch thunk of CommandCenterType.register<A, B>(handler:for:)(v0 + 232, v90, v91, v87, &protocol witness table for RadarCommandHandler, ObjectType, v122);
    swift_release(v90);
    v92 = swift_release(v89);
    v108 = static Commands.reportRadar.getter(v92);
    ((void (*)(uint64_t, uint64_t, uint64_t))v118)(v86, v117, v105);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v106 + 56))(v86, 0, 1, v105);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v107 + 104))(v109, enum case for RadarDiagnostics.sysdiagnose(_:), v110);
    v93 = swift_bridgeObjectRetain(0x80000001007DA3C0);
    Radar.init(component:title:includeDevicePrefixInTitle:description:attachments:diagnostics:)(v86, 0x5254545F5050555BLL, 0xEA0000000000205DLL, 1, 0xD000000000000036, 0x80000001007DA3C0, v119, v109, v93);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v111, 0, 1, v91);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v112 + 104))(v113, enum case for CommandExecutionLocation.contextMenu(_:), v114);
    v94 = type metadata accessor for NulCommandTracker();
    v95 = swift_allocObject(v94, 16, 7);
    v125 = v94;
    v126 = (void *)sub_100627124();
    v124._countAndFlagsBits = v95;
    *(_OWORD *)(v0 + 176) = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    *(_BYTE *)(v0 + 208) = 1;
    v96 = type metadata accessor for CommandExecutionSource(0);
    swift_allocObject(v96, *(unsigned int *)(v96 + 48), *(unsigned __int16 *)(v96 + 52));
    v97 = CommandExecutionSource.init(location:tracker:sourceView:sourceRect:sourceItem:onExecute:)(v113, &v124, 0, v0 + 176, 0, 0, 0);
    dispatch thunk of CommandCenterType.execute<A>(command:context:source:)(v108, v111, v97, v91, ObjectType, v122);

    swift_release(v79);
    swift_release(v97);
    swift_release(v108);

    swift_unknownObjectRelease(v77);
    sub_100010960(*(_QWORD *)(v0 + 312), &qword_1009F18B8);
    _s5Books15CurrentPageViewVwxx_0(v123);
    swift_bridgeObjectRelease(0x80000001007DA3C0);
    goto LABEL_32;
  }
LABEL_35:
  __break(1u);
}

uint64_t RadarComponent.iBooksStoreAll.unsafeMutableAddressor()
{
  uint64_t v0;

  if (qword_1009CEAA0 != -1)
    swift_once(&qword_1009CEAA0, sub_100626E28);
  v0 = type metadata accessor for RadarComponent(0);
  return sub_100048F64(v0, (uint64_t)static RadarComponent.iBooksStoreAll);
}

uint64_t sub_100626D48()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009F18AC);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_1006260B4();
}

uint64_t sub_100626D8C@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = a6 + *(int *)(a5 + 32);
  v12 = enum case for ContextActionType.internalTapToRadar(_:);
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  sub_100022840(a1, a6 + 40);
  sub_100022840(a2, a6);
  *(_QWORD *)(a6 + 80) = a3;
  return sub_100022840(a4, a6 + 88);
}

uint64_t sub_100626E28()
{
  uint64_t v0;

  v0 = type metadata accessor for RadarComponent(0);
  sub_10001BFD8(v0, static RadarComponent.iBooksStoreAll);
  sub_100048F64(v0, (uint64_t)static RadarComponent.iBooksStoreAll);
  return RadarComponent.init(componentName:componentIdentifier:componentVersion:)(0x5320736B6F6F4269, 0xEC00000065726F74, 0x31363433323031, 0xE700000000000000, 7105601, 0xE300000000000000);
}

uint64_t static RadarComponent.iBooksStoreAll.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CEAA0 != -1)
    swift_once(&qword_1009CEAA0, sub_100626E28);
  v2 = type metadata accessor for RadarComponent(0);
  v3 = sub_100048F64(v2, (uint64_t)static RadarComponent.iBooksStoreAll);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t type metadata accessor for NulCommandTracker()
{
  return objc_opt_self(_TtC5Books17NulCommandTracker);
}

uint64_t sub_100626F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100626F48);
}

uint64_t sub_100626F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_100626FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100626FD0);
}

uint64_t sub_100626FD0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for InternalTapToRadarActionItem(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F1850;
  if (!qword_1009F1850)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for InternalTapToRadarActionItem);
  return result;
}

uint64_t sub_100627080(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = "(";
  v4[1] = "(";
  v4[2] = &unk_100735D48;
  v4[3] = "(";
  result = type metadata accessor for ContextActionType(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100627100()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100627124()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F18D8;
  if (!qword_1009F18D8)
  {
    v1 = type metadata accessor for NulCommandTracker();
    result = swift_getWitnessTable(&protocol conformance descriptor for NulCommandTracker, v1);
    atomic_store(result, (unint64_t *)&qword_1009F18D8);
  }
  return result;
}

uint64_t sub_100627168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InternalTapToRadarActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006271AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InternalTapToRadarActionItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1006271EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain(v3);
  return a1;
}

_QWORD *assignWithCopy for DebugInfoBarOverlayModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for DebugInfoBarOverlayModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  v5 = a1[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for DebugInfoBarOverlayModifier()
{
  return &type metadata for DebugInfoBarOverlayModifier;
}

uint64_t sub_1006272C0(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087AB50, 1);
}

uint64_t sub_1006272D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009F18E0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

unint64_t sub_100627314()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F18E8;
  if (!qword_1009F18E8)
  {
    v1 = sub_100030B74(&qword_1009F18E0);
    result = swift_getWitnessTable(&protocol conformance descriptor for _ViewModifier_Content<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F18E8);
  }
  return result;
}

uint64_t sub_100627360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10062736C);
}

uint64_t sub_10062736C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1006273E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006273F4);
}

uint64_t sub_1006273F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

id sub_100627468@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id result;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  ValueMetadata *v24;
  _UNKNOWN **v25;
  __int128 v26[2];
  __int128 v27[2];
  __int128 v28[3];

  sub_10002E418((uint64_t)a1, (uint64_t)v28);
  sub_10002E418((uint64_t)a2, (uint64_t)v27);
  sub_10002E418((uint64_t)a4, (uint64_t)v26);
  v10 = (void *)objc_opt_self(BKAppDelegate);
  v11 = objc_msgSend(v10, "delegate");
  v12 = objc_msgSend(v11, "serviceCenter");

  v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v14 = objc_msgSend(v10, "delegate");
  v15 = objc_msgSend(v14, "engagementManager");

  result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (result)
  {
    v17 = result;
    v18 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    v24 = &type metadata for MenuLibraryOperationProvider;
    v25 = &off_10090F400;
    v19 = (_QWORD *)swift_allocObject(&unk_100918E88, 56, 7);
    *(_QWORD *)&v23 = v19;
    v19[2] = v12;
    v19[3] = v13;
    v19[4] = v15;
    v19[5] = v17;
    v19[6] = v18;
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(a2);
    _s5Books15CurrentPageViewVwxx_0(a1);
    v20 = a5 + *(int *)(type metadata accessor for EditFinishedDateActionItem(0) + 36);
    v21 = enum case for ContextActionType.editFinishedDate(_:);
    v22 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
    sub_100022840(v28, a5 + 40);
    sub_100022840(v27, a5);
    *(_QWORD *)(a5 + 80) = a3;
    sub_100022840(v26, a5 + 88);
    return (id)sub_100022840(&v23, a5 + 128);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100627688()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  sub_1001EAEBC(&v14);
  if (!v15)
  {
    sub_100010960((uint64_t)&v14, qword_1009D1448);
    return 0;
  }
  sub_1001EB834(&v14, &v17);
  v0 = v18;
  v1 = v19;
  sub_10003F198(&v17, v18);
  v2 = dispatch thunk of ContextAssetInfoProtocol.isMarkedFinished.getter(v0, v1);
  if (v2 != 2)
  {
    v4 = v2;
    v5 = v18;
    v6 = v19;
    sub_10003F198(&v17, v18);
    v7 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v5, v6);
    v8 = static ContextActionAssetType.== infix(_:_:)(v7, 4);
    sub_1001EB84C((uint64_t)&v17, (uint64_t)&v14);
    if ((v8 & 1) != 0)
    {
      _s5Books15CurrentPageViewVwxx_0(&v14);
    }
    else
    {
      v9 = v15;
      v10 = v16;
      sub_10003F198(&v14, v15);
      v11 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v9, v10);
      v12 = static ContextActionAssetType.== infix(_:_:)(v11, 5);
      _s5Books15CurrentPageViewVwxx_0(&v14);
      if ((v12 & 1) == 0)
      {
        v3 = v4 & 1;
        goto LABEL_10;
      }
    }
    v3 = 0;
LABEL_10:
    _s5Books15CurrentPageViewVwxx_0(&v17);
    return v3;
  }
  _s5Books15CurrentPageViewVwxx_0(&v17);
  return 0;
}

uint64_t sub_1006277BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjCClassFromMetadata;
  id v21;
  _BYTE v23[16];
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  v0 = type metadata accessor for Locale(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v23[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v6 = &v23[-v5];
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v23[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v13 = &v23[-v12];
  sub_1001EAEBC(&v24);
  if (v25)
  {
    sub_1001EB834(&v24, &v26);
    sub_10003F198(&v26, v27);
    v14 = sub_1002983B4();
    if (v14 != 2 && (v14 & 1) == 0)
    {
      v18 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000011, 0x80000001007DA4D0);
      static Locale.current.getter(v18);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
      v19 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v19);
      v21 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v1 + 16))(v3, v6, v0);
      v17 = String.init(localized:table:bundle:locale:comment:)(v10, 0, 0, v21, v3, "Context Menu: Set Finished Date", 31, 2);
      (*(void (**)(_BYTE *, uint64_t))(v1 + 8))(v6, v0);
    }
    else
    {
      String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007DA480);
      v16 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v10, v13, v7);
      static Locale.current.getter(v16);
      v17 = String.init(localized:defaultValue:table:bundle:locale:comment:)("Edit_Finished_Date_Context_Menu", 31, 2, v10, 0, 0, 0, v6, "Context Menu: Edit Finished Date", 32, 2);
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);
    _s5Books15CurrentPageViewVwxx_0(&v26);
  }
  else
  {
    sub_100010960((uint64_t)&v24, qword_1009D1448);
    return 0;
  }
  return v17;
}

uint64_t sub_100627A80()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[29] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[30] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[31] = v3;
  v1[32] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[33] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[34] = v5;
  v1[35] = v6;
  return swift_task_switch(sub_100627B14, v5, v6);
}

uint64_t sub_100627B14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char *v18;

  sub_10002E418(*(_QWORD *)(v0 + 232), v0 + 192);
  v1 = sub_10004CFD4(&qword_1009D2848);
  v2 = sub_10004CFD4(&qword_1009D2850);
  if ((swift_dynamicCast(v0 + 152, v0 + 192, v1, v2, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 184) = 0;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    goto LABEL_6;
  }
  if (!*(_QWORD *)(v0 + 176))
  {
LABEL_6:
    swift_release(*(_QWORD *)(v0 + 264));
    v9 = sub_100010960(v0 + 152, qword_1009D2858);
    goto LABEL_7;
  }
  sub_100022840((__int128 *)(v0 + 152), v0 + 112);
  sub_1001EAEBC((_OWORD *)(v0 + 64));
  if (*(_QWORD *)(v0 + 88))
  {
    v3 = *(_QWORD *)(v0 + 232);
    sub_1001EB834((__int128 *)(v0 + 64), (_OWORD *)(v0 + 16));
    v4 = sub_10003F198((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    v5 = v3 + 40;
    v6 = *(_QWORD *)(v3 + 80);
    v18 = (char *)&dword_1009F19A8 + dword_1009F19A8;
    v7 = (_QWORD *)swift_task_alloc(unk_1009F19AC);
    *(_QWORD *)(v0 + 288) = v7;
    *v7 = v0;
    v7[1] = sub_100627D2C;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD *))v18)(v0 + 16, v5, v6, v4);
  }
  swift_release(*(_QWORD *)(v0 + 264));
  sub_100010960(v0 + 64, qword_1009D1448);
  v9 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
LABEL_7:
  v10 = static Logger.contextActionItem.getter(v9);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.error.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Action doesn't have sufficient context or assetInfo to handle action.", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }
  v15 = *(_QWORD *)(v0 + 248);
  v14 = *(_QWORD *)(v0 + 256);
  v16 = *(_QWORD *)(v0 + 240);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  v17 = swift_task_dealloc(*(_QWORD *)(v0 + 256));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v17);
}

uint64_t sub_100627D2C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 288));
  return swift_task_switch(sub_100627D78, *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 280));
}

uint64_t sub_100627D78()
{
  uint64_t v0;
  __n128 v1;

  swift_release(*(_QWORD *)(v0 + 264));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
  v1 = swift_task_dealloc(*(_QWORD *)(v0 + 256));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_100627DD0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009F19A4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_100627A80();
}

uint64_t sub_100627E18()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100627E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4[16] = a3;
  v4[17] = a4;
  v4[15] = a1;
  v5 = sub_10004CFD4(&qword_1009D76B0);
  v4[18] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for PageData(0);
  v4[19] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActionOrigin.Kind(0);
  v4[20] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[21] = v8;
  v4[22] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionOrigin(0);
  v4[23] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v4[24] = v10;
  v4[25] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v4[26] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v4[27] = v12;
  v4[28] = v13;
  return swift_task_switch(sub_100627F60, v12, v13);
}

uint64_t sub_100627F60()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;

  v1 = *(void **)(v0 + 128);
  if (v1)
  {
    v2 = *(_QWORD **)(v0 + 120);
    v3 = v2[3];
    v4 = v2[4];
    sub_10003F198(v2, v3);
    v5 = v1;
    dispatch thunk of ContextAssetInfoProtocol.toFoundationAssetInfo()((_QWORD *)(v0 + 56), v3, v4);
    if (*(_QWORD *)(v0 + 80))
    {
      v7 = *(_QWORD *)(v0 + 168);
      v6 = *(_QWORD *)(v0 + 176);
      v8 = *(_QWORD *)(v0 + 160);
      sub_100022840((__int128 *)(v0 + 56), v0 + 16);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v6, enum case for ActionOrigin.Kind.lockup(_:), v8);
      ActionOrigin.init(sectionID:sectionName:contentID:kind:seriesID:genreID:collectionID:authorID:flowcaseID:brickID:)(0, 0, 0, 0, 0, 0, v6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      v9 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.withSyncDependenciesForSwiftUI.getter[1]);
      *(_QWORD *)(v0 + 232) = v9;
      *v9 = v0;
      v9[1] = sub_10062823C;
      return BaseObjectGraph.withSyncDependenciesForSwiftUI.getter();
    }
    swift_release(*(_QWORD *)(v0 + 208));
    sub_100010960(v0 + 56, &qword_1009EC950);
    if (qword_1009CE4E8 != -1)
      swift_once(&qword_1009CE4E8, sub_10044C420);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100048F64(v15, (uint64_t)qword_1009E3EE0);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.fault.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to convert ContextAssetInfo to BookFoundation.AssetInfo", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 208));
    if (qword_1009CE4E8 != -1)
      swift_once(&qword_1009CE4E8, sub_10044C420);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100048F64(v11, (uint64_t)qword_1009E3EE0);
    v5 = Logger.logObject.getter(v12);
    v13 = static os_log_type_t.fault.getter(v5);
    if (os_log_type_enabled(v5, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v13, "Can't present Edit Finished Date sheet when tracker is nil", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }
  }

  v20 = *(_QWORD *)(v0 + 176);
  v22 = *(_QWORD *)(v0 + 144);
  v21 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  v23 = swift_task_dealloc(v22);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v23);
}

uint64_t sub_10062823C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 232);
  *(_QWORD *)(*(_QWORD *)v2 + 240) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[27];
    v7 = v4[28];
    v8 = sub_1006284AC;
  }
  else
  {
    v4[31] = a1;
    v6 = v4[27];
    v7 = v4[28];
    v8 = sub_1006282B0;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1006282B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t OpaqueTypeConformance2;
  void *v14;
  void *Strong;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char v23;
  uint64_t v24;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 200);
  v4 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  v7 = *(void **)(v0 + 128);
  v24 = *(_QWORD *)(v0 + 136);
  swift_release(*(_QWORD *)(v0 + 208));
  v8 = v7;
  PageData.init(pageID:pageType:)(0, 0xE000000000000000, 0xD000000000000010, 0x80000001007DA440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, v2, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v6, 0, 1, v4);
  v9 = swift_task_alloc(32);
  *(_QWORD *)(v9 + 16) = v0 + 16;
  objc_allocWithZone((Class)type metadata accessor for AutoSizingSheetHostingController(0));
  v10 = sub_10004CFD4(&qword_1009F19B0);
  v11 = type metadata accessor for EditFinishedDateSheetRootView(255);
  v12 = sub_10044FE40();
  *(_QWORD *)(v0 + 96) = v11;
  *(_QWORD *)(v0 + 104) = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v0 + 96, &opaque type descriptor for <<opaque return type of View.restrictedDynamicTypeSize(min:max:)>>, 1);
  v23 = 0;
  v14 = (void *)AutoSizingSheetHostingController.init<A>(idealWidth:shouldShowCloseButton:objectGraph:parentTracker:trackerName:pageData:origin:shouldReportFigaro:rootView:)(0, 1, 1, v1, v8, 0x694673416B72614DLL, 0xEE0064656873696ELL, v5, v6, v23, sub_1006286C8, v9, v10, OpaqueTypeConformance2);
  swift_task_dealloc(v9);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v24);
  v16 = *(void **)(v0 + 128);
  if (Strong)
  {
    v17 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v14, 1, 0);

  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v18 = *(_QWORD *)(v0 + 176);
  v20 = *(_QWORD *)(v0 + 144);
  v19 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  v21 = swift_task_dealloc(v20);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v21);
}

uint64_t sub_1006284AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  void *v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  void *v18;

  swift_release(*(_QWORD *)(v0 + 208));
  if (qword_1009CE4E8 != -1)
    swift_once(&qword_1009CE4E8, sub_10044C420);
  v1 = *(_QWORD *)(v0 + 240);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009E3EE0);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(void **)(v0 + 128);
  if (v6)
  {
    v18 = *(void **)(v0 + 128);
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    v11 = _convertErrorToNSError(_:)(v7);
    *(_QWORD *)(v0 + 112) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v9 + 4, v9 + 12);
    *v10 = v11;
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to create Edit Finished Date: %@", v9, 0xCu);
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_errorRelease(v7);
    swift_errorRelease(v7);
  }
  swift_errorRelease(v7);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v13 = *(_QWORD *)(v0 + 176);
  v15 = *(_QWORD *)(v0 + 144);
  v14 = *(_QWORD *)(v0 + 152);
  swift_task_dealloc(*(_QWORD *)(v0 + 200));
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  v16 = swift_task_dealloc(v15);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v16);
}

uint64_t sub_1006286C8(uint64_t a1)
{
  uint64_t v1;

  return sub_10044C910(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_1006286D4()
{
  unint64_t result;

  result = qword_1009F19B8;
  if (!qword_1009F19B8)
  {
    result = swift_getWitnessTable(&unk_100736018, &type metadata for PlayMostRecentAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F19B8);
  }
  return result;
}

unint64_t sub_10062871C()
{
  unint64_t result;

  result = qword_1009F19C0;
  if (!qword_1009F19C0)
  {
    result = swift_getWitnessTable(&unk_100736040, &type metadata for PlayMostRecentAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F19C0);
  }
  return result;
}

uint64_t sub_100628760(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087ABE4, 1);
}

uint64_t sub_100628770(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087ABBC, 1);
}

uint64_t sub_100628780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1EFC0);
  sub_100048F64(v10, (uint64_t)qword_100A1EFC0);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD00000000000001ALL, 0x80000001007C2630);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for 'Play Most Recent Audiobook' AppIntent.", 49, 2);
}

uint64_t sub_1006288F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return swift_task_switch(sub_10062890C, 0, 0);
}

uint64_t sub_10062890C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[9] = objc_opt_self(UIApplication);
  v1 = type metadata accessor for MainActor(0);
  v0[10] = v1;
  v0[11] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100628988, v2, v3);
}

uint64_t sub_100628988()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 96) = objc_msgSend(*(id *)(v0 + 72), "sharedApplication", swift_release(*(_QWORD *)(v0 + 88)).n128_f64[0]);
  return swift_task_switch(sub_1006289E4, 0, 0);
}

uint64_t sub_1006289E4()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  __int128 v7;
  char *v8;

  v1 = *(void **)(v0 + 96);
  v2 = String._bridgeToObjectiveC()();
  *(_QWORD *)(v0 + 104) = objc_msgSend(v1, "beginBackgroundTaskWithName:expirationHandler:", v2, 0);

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
  v3 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 120) = v3;
  v7 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 128) = v7;
  v4 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 144) = v4;
  v8 = (char *)&dword_1009E5030 + dword_1009E5030;
  v5 = (_QWORD *)swift_task_alloc(unk_1009E5034);
  *(_QWORD *)(v0 + 152) = v5;
  *v5 = v0;
  v5[1] = sub_100628AD4;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v8)(v3, v7, v4);
}

uint64_t sub_100628AD4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 152);
  *(_QWORD *)(*v1 + 160) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_100628C84;
  }
  else
  {
    v5 = *(_QWORD *)(v2 + 136);
    v6 = *(_QWORD *)(v2 + 144);
    v7 = *(_QWORD *)(v2 + 120);
    v8 = *(void **)(v2 + 128);

    swift_unknownObjectRelease(v7);
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v6);
    v4 = sub_100628B74;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100628B74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v1 + 168) = static MainActor.shared.getter(a1);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  return swift_task_switch(sub_100628BD4, v3, v4);
}

uint64_t sub_100628BD4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = objc_msgSend(*(id *)(v0 + 72), "sharedApplication", swift_release(*(_QWORD *)(v0 + 168)).n128_f64[0]);
  return swift_task_switch(sub_100628C30, 0, 0);
}

uint64_t sub_100628C30()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 176);
  objc_msgSend(v1, "endBackgroundTask:", *(_QWORD *)(v0 + 104));

  static IntentResult.result<>()(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100628C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(void **)(v0 + 128);

  swift_unknownObjectRelease(v3);
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100628CE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CEAA8 != -1)
    swift_once(&qword_1009CEAA8, sub_100628780);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1EFC0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_100628D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009F19F0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  ParameterSummaryString.init(stringLiteral:)(0xD000000000000010, 0x80000001007DA510, a1, a2, v5);
  return IntentParameterSummary.init(_:table:)(v7, 0x6E65746E49707041, 0xEA00000000007374, a1, a2);
}

uint64_t sub_100628E10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1009F19EC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_10000AE34;
  v5[7] = a1;
  v5[8] = v4;
  return swift_task_switch(sub_10062890C, 0, 0);
}

unint64_t sub_100628E78()
{
  unint64_t result;

  result = qword_1009F19D0;
  if (!qword_1009F19D0)
  {
    result = swift_getWitnessTable(&unk_10073605C, &type metadata for PlayMostRecentAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F19D0);
  }
  return result;
}

uint64_t sub_100628EBC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10061B170();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for PlayMostRecentAudiobookIntent()
{
  return &type metadata for PlayMostRecentAudiobookIntent;
}

uint64_t sub_100628EF8()
{
  return sub_100030B34(&qword_1009F19D8, &qword_1009F19E0, (uint64_t)&protocol conformance descriptor for IntentParameterSummary<A>);
}

BOOL sub_100628F24(uint64_t (*a1)(char *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedConformanceWitness;
  int v24;
  char v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *);
  uint64_t v33;
  char *v34;

  v32 = a1;
  v33 = a2;
  v3 = type metadata accessor for SpreadPaginationEntity(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009F1BB8);
  v11 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  __chkstk_darwin(v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009F1BC0);
  v15 = *(_QWORD *)(v14 - 8);
  v30 = v14;
  v31 = v15;
  v16 = __chkstk_darwin(v14);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (*(uint64_t (**)(char *, char *, uint64_t, double))(v11 + 16))(v13, v34, v10, v16);
  v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(swift_getOpaqueTypeConformance2(v19, &opaque type descriptor for <<opaque return type of BookPaginationEntity.spreads>>, 1)+ 8)+ 8)+ 8);
  v34 = v18;
  v21 = v29;
  dispatch thunk of Sequence.makeIterator()(v29, v20);
  v22 = v30;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness(v20, v21, v30, &protocol requirements base descriptor for Sequence, &associated conformance descriptor for Sequence.Sequence.Iterator: IteratorProtocol);
  do
  {
    dispatch thunk of IteratorProtocol.next()(v22, AssociatedConformanceWitness);
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3);
    if (v24 == 1)
      break;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    v25 = v32(v6);
    if (v2)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      break;
    }
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  while ((v26 & 1) == 0);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v34, v22);
  return v24 != 1;
}

uint64_t sub_10062917C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t (*v48)(char *, char *, uint64_t);
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  char v55;
  char *v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;

  v2 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v2);
  v68 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v71 = (char *)&v62 - v5;
  __chkstk_darwin(v6);
  v67 = (char *)&v62 - v7;
  __chkstk_darwin(v8);
  v70 = (char *)&v62 - v9;
  v10 = type metadata accessor for PageLocation(0);
  v72 = *(_QWORD *)(v10 - 8);
  v73 = v10;
  __chkstk_darwin(v10);
  v64 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v66 = (char *)&v62 - v13;
  __chkstk_darwin(v14);
  v63 = (char *)&v62 - v15;
  __chkstk_darwin(v16);
  v65 = (char *)&v62 - v17;
  v18 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v18);
  v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for SpreadPaginationEntity(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v24 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v62 - v26;
  __chkstk_darwin(v28);
  v30 = (char *)&v62 - v29;
  v31 = type metadata accessor for CurrentLocationController(0);
  v32 = sub_100008DB0(&qword_1009E3400, type metadata accessor for CurrentLocationController, (uint64_t)&unk_100736270);
  LocationControlling.destination(for:)(a1, v31, v32);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) != 1)
  {
    v35 = *(uint64_t (**)(char *, char *, uint64_t))(v22 + 32);
    v69 = v30;
    v36 = v35(v30, v20, v21);
    if ((LocationMovement.direction.getter(v36) & 1) != 0)
    {
      v44 = sub_1006296E8((uint64_t)v24);
      v45 = v71;
      SpreadPaginationEntity.firstLocation.getter(v44);
      v39 = *(void (**)(char *, uint64_t))(v22 + 8);
      v39(v24, v21);
      v46 = v72;
      v40 = v73;
      v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
      if (v47(v45, 1, v73) == 1)
      {
        v39(v69, v21);
        v33 = &qword_1009E3508;
        v34 = (uint64_t)v45;
        goto LABEL_14;
      }
      v52 = *(uint64_t (**)(char *, char *, uint64_t))(v46 + 32);
      v53 = v66;
      v54 = v52(v66, v45, v40);
      v38 = v68;
      v51 = v69;
      SpreadPaginationEntity.lastLocation.getter(v54);
      if (v47(v38, 1, v40) == 1)
      {
        (*(void (**)(char *, uint64_t))(v46 + 8))(v53, v40);
        goto LABEL_12;
      }
      v60 = v64;
      v52(v64, v38, v40);
      v61 = sub_100008DB0(&qword_1009F1B80, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
      v55 = dispatch thunk of static Comparable.< infix(_:_:)(v60, v53, v40, v61);
      v58 = *(void (**)(char *, uint64_t))(v46 + 8);
      v58(v60, v40);
      v59 = v53;
    }
    else
    {
      v37 = sub_1006296E8((uint64_t)v27);
      v38 = v70;
      SpreadPaginationEntity.lastLocation.getter(v37);
      v39 = *(void (**)(char *, uint64_t))(v22 + 8);
      v39(v27, v21);
      v41 = v72;
      v40 = v73;
      v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
      if (v42(v38, 1, v73) == 1)
      {
        v43 = v69;
LABEL_13:
        v39(v43, v21);
        v33 = &qword_1009E3508;
        v34 = (uint64_t)v38;
        goto LABEL_14;
      }
      v48 = *(uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
      v49 = v65;
      v50 = v48(v65, v38, v40);
      v38 = v67;
      v51 = v69;
      SpreadPaginationEntity.firstLocation.getter(v50);
      if (v42(v38, 1, v40) == 1)
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v49, v40);
LABEL_12:
        v43 = v51;
        goto LABEL_13;
      }
      v57 = v63;
      v48(v63, v38, v40);
      v55 = static PageLocation.< infix(_:_:)(v49, v57);
      v58 = *(void (**)(char *, uint64_t))(v41 + 8);
      v58(v57, v40);
      v59 = v49;
    }
    v58(v59, v40);
    v39(v69, v21);
    return v55 & 1;
  }
  v33 = (uint64_t *)&unk_1009E8E70;
  v34 = (uint64_t)v20;
LABEL_14:
  sub_100010960(v34, v33);
  v55 = 0;
  return v55 & 1;
}

uint64_t sub_100629668()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009F1A00);
  sub_100048F64(v0, (uint64_t)qword_1009F1A00);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000025, 0x80000001007CC5A0);
}

uint64_t sub_1006296E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  void (*v20)(_QWORD *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  void (*v44)(char *, uint64_t, __n128);
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  __n128 v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  int v56;
  char *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v63 = a1;
  v62 = type metadata accessor for SpreadPaginationEntity(0);
  v2 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v60 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v61 = (char *)&v54 - v5;
  v6 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v6);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Location(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for PageLocation(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v59 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)&v54 - v17;
  v19 = CurrentValueSubject.value.getter(v12);
  Location.pageLocation.getter(v19);
  v20 = *(void (**)(_QWORD *, uint64_t))(v10 + 8);
  v21 = v2;
  v22 = v62;
  v20(v12, v9);
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
  ObjectType = swift_getObjectType();
  v25 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v23);
  BookPaginationEntity.spread(containing:)(v18);
  v26 = swift_release(v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v21 + 48))(v8, 1, v22, v26) == 1)
  {
    sub_100010960((uint64_t)v8, (uint64_t *)&unk_1009E8E70);
    v27 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v23);
    v28 = v61;
    BookPaginationEntity.adjustedSpread(containing:)(v18);
    swift_release(v27);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v29 = type metadata accessor for Logger(0);
    sub_100048F64(v29, (uint64_t)qword_1009F1A00);
    v30 = v14;
    v31 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
    v32 = v59;
    v31(v59, v18, v13);
    v33 = v60;
    v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 16))(v60, v28, v22);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc(22, -1);
      v58 = swift_slowAlloc(64, -1);
      v65 = v58;
      *(_DWORD *)v38 = 136315394;
      v55 = v30;
      v39 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
      v56 = v37;
      v40 = dispatch thunk of CustomStringConvertible.description.getter(v13, v39);
      v42 = v41;
      v64 = sub_100040F58(v40, v41, &v65);
      v57 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v38 + 4, v38 + 12);
      v43 = swift_bridgeObjectRelease(v42);
      v44 = *(void (**)(char *, uint64_t, __n128))(v55 + 8);
      v44(v32, v13, v43);
      v45 = (void (*)(char *, uint64_t))v44;
      *(_WORD *)(v38 + 12) = 2080;
      v46 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
      v47 = dispatch thunk of CustomStringConvertible.description.getter(v22, v46);
      v49 = v48;
      v64 = sub_100040F58(v47, v48, &v65);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v64, &v65, v38 + 14, v38 + 22);
      v50 = swift_bridgeObjectRelease(v49);
      (*(void (**)(char *, uint64_t, __n128))(v21 + 8))(v33, v22, v50);
      v51 = v58;
      swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v38, -1, -1);

      v45(v57, v13);
      v8 = v61;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v21 + 8))(v33, v22);
      v52 = *(void (**)(char *, uint64_t))(v30 + 8);
      v52(v32, v13);
      v52(v18, v13);
      v8 = v28;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v63, v8, v22);
}

uint64_t sub_100629BC8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  uint64_t (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  void (*v53)(char *, uint64_t, __n128);
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  _QWORD *v65;
  uint8_t *v66;
  uint64_t v67;
  char *v68;
  uint64_t (*v69)(char *, char *, uint8_t *);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  char *v75;
  void (*v76)(char *, char *, uint8_t *);
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint8_t *v80;
  void (*v81)(uint64_t, uint8_t *);
  void *v82;
  _QWORD *v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  __n128 v98;
  void (*v99)(char *, uint64_t, __n128);
  _QWORD *v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  void (*v103)(char *, uint64_t);
  void (*v104)(char *, uint64_t);
  char *v105;
  uint64_t v106;
  uint64_t v108;
  char *v109;
  char *v110;
  uint8_t *v111;
  void (*v112)(char *, uint64_t);
  char *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, unint64_t, uint8_t *);
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  uint8_t *v126;
  _QWORD *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134[3];
  void *v135;
  uint64_t v136;

  v1 = v0;
  v2 = type metadata accessor for ContentMessage.CFIUpdate(0);
  v3 = *(_QWORD **)(v2 - 8);
  v126 = (uint8_t *)v2;
  v127 = v3;
  __chkstk_darwin(v2);
  v123 = (char *)&v115 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v122 = (uint64_t)&v115 - v6;
  __chkstk_darwin(v7);
  v121 = (char *)&v115 - v8;
  __chkstk_darwin(v9);
  v124 = (char *)&v115 - v10;
  __chkstk_darwin(v11);
  v125 = (char *)&v115 - v12;
  __chkstk_darwin(v13);
  v128 = (char *)&v115 - v14;
  v15 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v15);
  v17 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v115 - v19;
  v21 = type metadata accessor for PageLocation(0);
  v22 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v130 = (char *)&v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v115 - v25;
  v27 = type metadata accessor for SpreadPaginationEntity(0);
  v131 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v29 = (char *)&v115 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v129 = (char *)&v115 - v31;
  __chkstk_darwin(v32);
  v34 = (char *)&v115 - v33;
  v35 = sub_1006296E8((uint64_t)&v115 - v33);
  SpreadPaginationEntity.firstLocation.getter(v35);
  v36 = v22;
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v37(v20, 1, v21) == 1)
  {
    v17 = v20;
LABEL_5:
    sub_100010960((uint64_t)v17, &qword_1009E3508);
    v41 = v131;
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v42 = type metadata accessor for Logger(0);
    sub_100048F64(v42, (uint64_t)qword_1009F1A00);
    v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v41 + 16))(v29, v34, v27);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.error.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = swift_slowAlloc(32, -1);
      v134[0] = v47;
      *(_DWORD *)v46 = 136446210;
      v130 = v34;
      v48 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
      v49 = dispatch thunk of CustomStringConvertible.description.getter(v27, v48);
      v51 = v50;
      v135 = (void *)sub_100040F58(v49, v50, v134);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v135, &v136, v46 + 4, v46 + 12);
      v52 = swift_bridgeObjectRelease(v51);
      v53 = *(void (**)(char *, uint64_t, __n128))(v131 + 8);
      v53(v29, v27, v52);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Failed to update visible CFI range: unable to get first/last location from spread %{public}s", v46, 0xCu);
      swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v46, -1, -1);

      ((void (*)(char *, uint64_t))v53)(v130, v27);
    }
    else
    {

      v54 = *(void (**)(char *, uint64_t))(v41 + 8);
      v54(v29, v27);
      v54(v34, v27);
    }
    return sub_1006345F4();
  }
  v120 = v27;
  v38 = v1;
  v39 = *(uint64_t (**)(char *, char *, uint64_t))(v36 + 32);
  v40 = v39(v26, v20, v21);
  SpreadPaginationEntity.lastLocation.getter(v40);
  if (v37(v17, 1, v21) == 1)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v21);
    v27 = v120;
    goto LABEL_5;
  }
  v118 = v36;
  v119 = v21;
  v55 = v130;
  v56 = ((uint64_t (*)(char *, char *))v39)(v130, v17);
  v135 = &_swiftEmptySetSingleton;
  v57 = PageLocation.documentOrdinal.getter(v56);
  v58 = v38;
  v59 = &v38[OBJC_IVAR____TtC5Books25CurrentLocationController_cfiUpdatesByOrdinal];
  swift_beginAccess(&v38[OBJC_IVAR____TtC5Books25CurrentLocationController_cfiUpdatesByOrdinal], v134, 0, 0);
  v60 = *(_QWORD *)v59;
  v61 = v120;
  if (*(_QWORD *)(*(_QWORD *)v59 + 16))
  {
    v62 = sub_1002BB7F4(v57);
    if ((v63 & 1) != 0)
    {
      v117 = v26;
      v64 = *(_QWORD *)(v60 + 56);
      v66 = v126;
      v65 = v127;
      v67 = v127[9];
      v68 = v125;
      v116 = (void (*)(char *, unint64_t, uint8_t *))v127[2];
      v116(v125, v64 + v67 * v62, v126);
      v69 = (uint64_t (*)(char *, char *, uint8_t *))v65[4];
      v70 = v69(v128, v68, v66);
      v71 = PageLocation.documentOrdinal.getter(v70);
      v72 = *(_QWORD *)v59;
      if (*(_QWORD *)(*(_QWORD *)v59 + 16))
      {
        v73 = sub_1002BB7F4(v71);
        if ((v74 & 1) != 0)
        {
          v75 = v121;
          v76 = (void (*)(char *, char *, uint8_t *))v116;
          v116(v121, *(_QWORD *)(v72 + 56) + v73 * v67, v66);
          v77 = v124;
          v69(v124, v75, v66);
          v78 = (uint64_t)v123;
          v76(v123, v128, v66);
          v79 = v122;
          sub_10060B628(v122, v78);
          v80 = v66;
          v81 = (void (*)(uint64_t, uint8_t *))v127[1];
          v81(v79, v80);
          v76((char *)v78, v77, v80);
          sub_10060B628(v79, v78);
          v81(v79, v80);
          v82 = v135;
          v83 = sub_10042750C((uint64_t)v135);
          swift_bridgeObjectRelease(v82);
          CurrentValueSubject.value.getter(&v133);
          v84 = (uint64_t)v133;
          LOBYTE(v79) = sub_100430F68((uint64_t)v133, (uint64_t)v83);
          swift_bridgeObjectRelease(v84);
          if ((v79 & 1) != 0)
          {
            v85 = swift_release(v83);
          }
          else
          {
            v133 = v83;
            CurrentValueSubject.value.setter(&v133);
          }
          v109 = v130;
          v108 = v131;
          v110 = v117;
          v111 = v126;
          ((void (*)(char *, uint8_t *, __n128))v81)(v124, v126, v85);
          v81((uint64_t)v128, v111);
          v112 = *(void (**)(char *, uint64_t))(v118 + 8);
          v113 = v109;
          v114 = v119;
          v112(v113, v119);
          v112(v110, v114);
          (*(void (**)(char *, uint64_t))(v108 + 8))(v34, v120);
          return sub_1006345F4();
        }
      }
      ((void (*)(char *, uint8_t *))v127[1])(v128, v66);
      swift_bridgeObjectRelease(v135);
      v26 = v117;
    }
  }
  if (qword_1009CEAB0 != -1)
    swift_once(&qword_1009CEAB0, sub_100629668);
  v86 = type metadata accessor for Logger(0);
  sub_100048F64(v86, (uint64_t)qword_1009F1A00);
  v87 = v131;
  v88 = v129;
  v89 = (*(uint64_t (**)(char *, char *, uint64_t))(v131 + 16))(v129, v34, v61);
  v90 = Logger.logObject.getter(v89);
  v91 = static os_log_type_t.error.getter(v90);
  if (os_log_type_enabled(v90, v91))
  {
    v92 = swift_slowAlloc(12, -1);
    v128 = v58;
    v93 = (uint8_t *)v92;
    v127 = (_QWORD *)swift_slowAlloc(32, -1);
    v133 = v127;
    *(_DWORD *)v93 = 136446210;
    v126 = v93 + 4;
    v94 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
    v95 = dispatch thunk of CustomStringConvertible.description.getter(v61, v94);
    v97 = v96;
    v132 = sub_100040F58(v95, v96, (uint64_t *)&v133);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v132, &v133, v126, v93 + 12);
    v98 = swift_bridgeObjectRelease(v97);
    v99 = *(void (**)(char *, uint64_t, __n128))(v87 + 8);
    v99(v88, v61, v98);
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "Failed to get CFI Ranges for start/end documents %{public}s", v93, 0xCu);
    v100 = v127;
    swift_arrayDestroy(v127, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v100, -1, -1);
    swift_slowDealloc(v93, -1, -1);

    v101 = v119;
    v102 = *(void (**)(char *, uint64_t))(v118 + 8);
    v102(v130, v119);
    v102(v26, v101);
    ((void (*)(char *, uint64_t))v99)(v34, v61);
  }
  else
  {

    v103 = *(void (**)(char *, uint64_t))(v87 + 8);
    v103(v88, v61);
    v104 = *(void (**)(char *, uint64_t))(v118 + 8);
    v105 = v55;
    v106 = v119;
    v104(v105, v119);
    v104(v26, v106);
    v103(v34, v61);
  }
  return sub_1006345F4();
}

uint64_t sub_10062A4DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  _QWORD v13[2];

  v3 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v3);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ContentMessage.CFIUpdate(0);
  v7 = sub_100008DB0((unint64_t *)&unk_1009F1BF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
  v13[0] = dispatch thunk of CustomStringConvertible.description.getter(v6, v7);
  v13[1] = v8;
  v9._countAndFlagsBits = 2108704;
  v9._object = (void *)0xE300000000000000;
  String.append(_:)(v9);
  sub_10000B5E4(v1 + *(int *)(a1 + 20), (uint64_t)v5, &qword_1009D2AC8);
  v10._countAndFlagsBits = String.init<A>(describing:)(v5, v3);
  object = v10._object;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(object);
  return v13[0];
}

uint64_t sub_10062A5DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v1 = sub_10004CFD4(&qword_1009F1C10);
  __chkstk_darwin(v1);
  v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4((uint64_t *)&unk_1009F0210);
  __chkstk_darwin(v4);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v21 - v9;
  v11 = type metadata accessor for HistorySnapshot(0, v8);
  v22 = *(_QWORD *)(v11 - 8);
  v23 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21[1] = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
  v14 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books25CurrentLocationController_historyController);
  v15 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books25CurrentLocationController_historyController + 24);
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books25CurrentLocationController_historyController + 32);
  sub_10003F198((_QWORD *)(v0 + OBJC_IVAR____TtC5Books25CurrentLocationController_historyController), v15);
  dispatch thunk of NavigationHistoryControlling.next()(v15, v16);
  sub_100636934((uint64_t)v3, (uint64_t)v10);
  sub_100010960((uint64_t)v3, &qword_1009F1C10);
  v17 = v14[3];
  v18 = v14[4];
  sub_10003F198(v14, v17);
  dispatch thunk of NavigationHistoryControlling.previous()(v17, v18);
  sub_100636934((uint64_t)v3, (uint64_t)v6);
  sub_100010960((uint64_t)v3, &qword_1009F1C10);
  HistorySnapshot.init(next:previous:)(v10, v6);
  sub_100215F80((uint64_t)v13, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v13, v23);
}

void sub_10062A7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *Strong;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = type metadata accessor for Location(0);
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LocationHistoryEntry.SnapshotLocation(0, v5);
  v34 = *(_QWORD *)(v8 - 8);
  v35 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for HistoryEntity(0, v9);
  v36 = *(_QWORD *)(v12 - 8);
  v37 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009F1CF0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for LocationHistoryEntry(0, v16);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a2 + 16;
  sub_10000B5E4(a1, (uint64_t)v18, &qword_1009F1CF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_100010960((uint64_t)v18, &qword_1009F1CF0);
    Strong = (char *)swift_unknownObjectUnownedLoadStrong(v23);
    v25 = *(_QWORD *)&Strong[OBJC_IVAR____TtC5Books25CurrentLocationController_historyController + 24];
    v26 = *(_QWORD *)&Strong[OBJC_IVAR____TtC5Books25CurrentLocationController_historyController + 32];
    sub_10003F198(&Strong[OBJC_IVAR____TtC5Books25CurrentLocationController_historyController], v25);
    dispatch thunk of NavigationHistoryControlling.clearForwardHistory()(v25, v26);
    sub_10062A5DC();

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    v27 = (char *)swift_unknownObjectUnownedLoadStrong(v23);
    v28 = LocationHistoryEntry.historyEntity.getter();
    v29 = LocationHistoryEntry.startLocation.getter(v28);
    LocationHistoryEntry.SnapshotLocation.page.getter(v29);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
    v30 = *(_QWORD *)&v27[OBJC_IVAR____TtC5Books25CurrentLocationController_historyController + 24];
    v31 = *(_QWORD *)&v27[OBJC_IVAR____TtC5Books25CurrentLocationController_historyController + 32];
    sub_10003F198(&v27[OBJC_IVAR____TtC5Books25CurrentLocationController_historyController], v30);
    dispatch thunk of NavigationHistoryControlling.add(_:)(v14, v30, v31);
    v32 = *(_QWORD *)&v27[OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8];
    ObjectType = swift_getObjectType();
    dispatch thunk of Paginating.insert(_:at:)(v14, v7, ObjectType, v32);
    sub_10062A5DC();

    (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v39);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v37);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
}

void sub_10062AA7C(_BYTE *a1, uint64_t a2)
{
  id Strong;

  if (*a1 == 1)
  {
    Strong = (id)swift_unknownObjectUnownedLoadStrong(a2 + 16);
    sub_10062A5DC();

  }
}

id sub_10062AAFC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CurrentLocationController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10062AC34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;

  v3 = type metadata accessor for SpreadPaginationEntity(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
  ObjectType = swift_getObjectType();
  v9 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v7);
  sub_1006296E8((uint64_t)v6);
  v10 = BookPaginationEntity.direction(from:to:)(v6, a1);
  v11 = swift_release(v9);
  (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v11);
  return v10;
}

uint64_t sub_10062AD0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (**v14)(char *, uint64_t, __n128);
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t ObjectType;
  uint64_t v26;
  void (**v27)(char *, uint64_t, __n128);
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  os_log_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  char *v49;
  void (*v50)(char *, uint64_t, __n128);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, __n128);
  char *v55;
  char *v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  __n128 v66;
  void (*v67)(char *, uint64_t, __n128);
  void (*v68)(char *, uint64_t, __n128);
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  __n128 v72;
  void (*v73)(char *, uint64_t, __n128);
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  os_log_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, __n128);
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  os_log_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;

  v4 = v3;
  v95 = a3;
  v92 = type metadata accessor for LocationMovement(0);
  v94 = *(_QWORD *)(v92 - 8);
  __chkstk_darwin(v92);
  v93 = (os_log_t)((char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Location(0);
  v88 = *(_QWORD *)(v8 - 8);
  v89 = v8;
  __chkstk_darwin(v8);
  v87 = (char **)((char *)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v10);
  v12 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SpreadPaginationEntity(0);
  v14 = *(void (***)(char *, uint64_t, __n128))(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v91 = (char *)&v86 - v18;
  __chkstk_darwin(v19);
  v90 = (char *)&v86 - v20;
  __chkstk_darwin(v21);
  v23 = (char *)&v86 - v22;
  v24 = *(_QWORD *)&v3[OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8];
  ObjectType = swift_getObjectType();
  v26 = v24;
  v27 = v14;
  v28 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v26);
  BookPaginationEntity.spread(_:byMoving:)(a2, a1);
  v29 = swift_release(v28);
  if (((unsigned int (*)(char *, uint64_t, uint64_t, __n128))v14[6])(v12, 1, v13, v29) == 1)
  {
    sub_100010960((uint64_t)v12, (uint64_t *)&unk_1009E8E70);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v30 = type metadata accessor for Logger(0);
    sub_100048F64(v30, (uint64_t)qword_1009F1A00);
    ((void (*)(char *, uint64_t, uint64_t))v14[2])(v16, a2, v13);
    v32 = v93;
    v31 = v94;
    v33 = v92;
    v34 = (*(uint64_t (**)(os_log_t, uint64_t, uint64_t))(v94 + 16))(v93, a1, v92);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.error.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc(32, -1);
      v91 = (char *)swift_slowAlloc(96, -1);
      v97 = v91;
      *(_DWORD *)v37 = 136315650;
      v96 = sub_100040F58(0xD000000000000016, 0x80000001007DA6D0, (uint64_t *)&v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97, v37 + 4, v37 + 12);
      *(_WORD *)(v37 + 12) = 2080;
      v38 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
      v39 = dispatch thunk of CustomStringConvertible.description.getter(v13, v38);
      v41 = v40;
      v96 = sub_100040F58(v39, v40, (uint64_t *)&v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97, v37 + 14, v37 + 22);
      v42 = swift_bridgeObjectRelease(v41);
      v27[1](v16, v13, v42);
      *(_WORD *)(v37 + 22) = 2080;
      v43 = sub_100008DB0(&qword_1009DF7B8, (uint64_t (*)(uint64_t))&type metadata accessor for LocationMovement, (uint64_t)&protocol conformance descriptor for LocationMovement);
      v44 = v93;
      v45 = dispatch thunk of CustomStringConvertible.description.getter(v33, v43);
      v47 = v46;
      v96 = sub_100040F58(v45, v46, (uint64_t *)&v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97, v37 + 24, v37 + 32);
      v48 = swift_bridgeObjectRelease(v47);
      (*(void (**)(os_log_t, uint64_t, __n128))(v94 + 8))(v44, v33, v48);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%s end spread from start %s by movement %s!", (uint8_t *)v37, 0x20u);
      v49 = v91;
      swift_arrayDestroy(v91, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v49, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }
    else
    {
      ((void (*)(char *, uint64_t))v27[1])(v16, v13);
      (*(void (**)(os_log_t, uint64_t))(v31 + 8))(v32, v33);
    }

    goto LABEL_15;
  }
  v50 = v14[4];
  ((void (*)(char *, char *, uint64_t))v50)(v23, v12, v13);
  v51 = sub_100008DB0((unint64_t *)&qword_1009E8E80, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
  v52 = v23;
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v23, a2, v13, v51) & 1) != 0)
  {
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v53 = type metadata accessor for Logger(0);
    sub_100048F64(v53, (uint64_t)qword_1009F1A00);
    v54 = v14[2];
    v55 = v90;
    ((void (*)(char *, uint64_t, uint64_t))v54)(v90, a2, v13);
    v56 = v91;
    ((void (*)(char *, char *, uint64_t))v54)(v91, v52, v13);
    v57 = v4;
    v58 = Logger.logObject.getter(v57);
    v59 = static os_log_type_t.default.getter(v58);
    v60 = v59;
    if (!os_log_type_enabled(v58, v59))
    {

      v84 = v27[1];
      ((void (*)(char *, uint64_t))v84)(v56, v13);
      ((void (*)(char *, uint64_t))v84)(v55, v13);
      ((void (*)(char *, uint64_t))v84)(v52, v13);
LABEL_15:
      v82 = 1;
      v83 = v95;
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v27[7])(v83, v82, 1, v13);
    }
    v61 = swift_slowAlloc(42, -1);
    v94 = swift_slowAlloc(128, -1);
    v97 = (char *)v94;
    *(_DWORD *)v61 = 136315906;
    v93 = v58;
    v96 = sub_100040F58(0xD000000000000016, 0x80000001007DA6D0, (uint64_t *)&v97);
    v86 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97, v61 + 4, v61 + 12);
    *(_WORD *)(v61 + 12) = 2080;
    LODWORD(v92) = v60;
    v62 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
    v63 = dispatch thunk of CustomStringConvertible.description.getter(v13, v62);
    v65 = v64;
    v96 = sub_100040F58(v63, v64, (uint64_t *)&v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97, v61 + 14, v61 + 22);
    v66 = swift_bridgeObjectRelease(v65);
    v67 = v27[1];
    v67(v55, v13, v66);
    v68 = v67;
    *(_WORD *)(v61 + 22) = 2080;
    v69 = dispatch thunk of CustomStringConvertible.description.getter(v13, v62);
    v71 = v70;
    v96 = sub_100040F58(v69, v70, (uint64_t *)&v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97, v61 + 24, v61 + 32);
    v72 = swift_bridgeObjectRelease(v71);
    v68(v56, v13, v72);
    v73 = v68;
    *(_WORD *)(v61 + 32) = 2080;
    v91 = (char *)v27;
    v74 = v87;
    CurrentValueSubject.value.getter(v87);
    v75 = sub_100008DB0(&qword_1009D2F10, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
    v76 = v89;
    v77 = dispatch thunk of CustomStringConvertible.description.getter(v89, v75);
    v79 = v78;
    (*(void (**)(_QWORD *, uint64_t))(v88 + 8))(v74, v76);
    v96 = sub_100040F58(v77, v79, (uint64_t *)&v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v96, &v97, v61 + 34, v61 + 42);

    swift_bridgeObjectRelease(v79);
    v80 = v93;
    _os_log_impl((void *)&_mh_execute_header, v93, (os_log_type_t)v92, "%s startSpread:%s endSpread:%s currentLocation: %s", (uint8_t *)v61, 0x2Au);
    v81 = v94;
    swift_arrayDestroy(v94, 4, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v81, -1, -1);
    swift_slowDealloc(v61, -1, -1);

    ((void (*)(char *, uint64_t))v73)(v86, v13);
    v82 = 1;
    v83 = v95;
    v27 = (void (**)(char *, uint64_t, __n128))v91;
  }
  else
  {
    v83 = v95;
    ((void (*)(uint64_t, char *, uint64_t))v50)(v95, v23, v13);
    v82 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v27[7])(v83, v82, 1, v13);
}

void sub_10062B580(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  void (*v32)(char *, uint64_t, __n128);
  double v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;

  v2 = v1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v4);
  v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SpreadPaginationEntity(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)v34 - v12;
  v14 = type metadata accessor for CurrentLocationController(0);
  v15 = sub_100008DB0(&qword_1009E3400, type metadata accessor for CurrentLocationController, (uint64_t)&unk_100736270);
  LocationControlling.destination(for:)(a1, v14, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v16 = sub_100010960((uint64_t)v6, (uint64_t *)&unk_1009E8E70);
    v17 = LocationMovement.direction.getter(v16);
    if ((static LocationMovement.Direction.== infix(_:_:)(v17 & 1, 0) & 1) != 0 && (sub_10063302C() & 1) != 0)
    {
      v18 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
      v19 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1009CDC90 != -1)
        swift_once(&qword_1009CDC90, sub_1002139D0);
      objc_msgSend(v19, "postNotificationName:object:", qword_1009D2BF8, v18);

    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v20 = type metadata accessor for Logger(0);
    sub_100048F64(v20, (uint64_t)qword_1009F1A00);
    v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v34[1] = v2;
      v26 = v25;
      v36 = v25;
      *(_DWORD *)v24 = 136315138;
      v34[0] = v24 + 4;
      v27 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
      v28 = dispatch thunk of CustomStringConvertible.description.getter(v7, v27);
      v30 = v29;
      v35 = sub_100040F58(v28, v29, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36, v34[0], v24 + 12);
      v31 = swift_bridgeObjectRelease(v30);
      v32 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      v32(v10, v7, v31);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Moving to spread: %s", v24, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      v32 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
      ((void (*)(char *, uint64_t))v32)(v10, v7);
    }

    sub_10062DEFC((uint64_t)v13, v33);
    ((void (*)(char *, uint64_t))v32)(v13, v7);
  }
}

void sub_10062B92C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;

  if ((sub_10063302C() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
    v2 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v3 = v2;
    if (qword_1009CDC90 != -1)
    {
      swift_once(&qword_1009CDC90, sub_1002139D0);
      v2 = v3;
    }
    objc_msgSend(v2, "postNotificationName:object:", qword_1009D2BF8, v1);

  }
}

uint64_t sub_10062B9E0(char *a1, double a2)
{
  char *v2;
  uint64_t updated;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  _QWORD *v24;
  char v25;
  void (*v26)(uint8_t *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  void (*v58)(uint64_t, char *, uint64_t, __n128);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  int v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint8_t *, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90[2];

  v87 = a1;
  updated = type metadata accessor for UpdateReason(0, a2);
  v83 = *(_QWORD *)(updated - 8);
  v84 = updated;
  __chkstk_darwin(updated);
  v82 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v5);
  v81 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D2F38);
  __chkstk_darwin(v7);
  v80 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009F1BB0);
  __chkstk_darwin(v9);
  v79 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  __chkstk_darwin(v11);
  v78 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for PageLocation(0);
  v88 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v76 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v77 = (char *)&v72 - v16;
  __chkstk_darwin(v17);
  v19 = (char *)&v72 - v18;
  v20 = type metadata accessor for Location(0);
  v21 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v23 = (uint8_t *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = CurrentValueSubject.value.getter(v23);
  v25 = Location.hasRequestedLocation.getter(v24);
  v26 = *(void (**)(uint8_t *, uint64_t))(v21 + 8);
  v27 = v2;
  v85 = v26;
  v86 = v20;
  v26(v23, v20);
  if ((v25 & 1) != 0)
  {
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v28 = type metadata accessor for Logger(0);
    sub_100048F64(v28, (uint64_t)qword_1009F1A00);
    v29 = v88;
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v19, v87, v13);
    v30 = v2;
    v31 = Logger.logObject.getter(v30);
    v32 = static os_log_type_t.info.getter(v31);
    v33 = v32;
    if (os_log_type_enabled(v31, v32))
    {
      v34 = swift_slowAlloc(22, -1);
      v75 = v27;
      v35 = v34;
      v74 = swift_slowAlloc(64, -1);
      v90[0] = v74;
      *(_DWORD *)v35 = 136315394;
      v72 = v35 + 4;
      v73 = v33;
      CurrentValueSubject.value.getter(v23);
      v36 = sub_100008DB0(&qword_1009D2F10, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
      v37 = v86;
      v38 = dispatch thunk of CustomStringConvertible.description.getter(v86, v36);
      v40 = v39;
      v85(v23, v37);
      v89 = sub_100040F58(v38, v40, v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, v90, v72, v35 + 12);

      swift_bridgeObjectRelease(v40);
      *(_WORD *)(v35 + 12) = 2080;
      v41 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
      v42 = dispatch thunk of CustomStringConvertible.description.getter(v13, v41);
      v44 = v43;
      v89 = sub_100040F58(v42, v43, v90);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, v90, v35 + 14, v35 + 22);
      v45 = swift_bridgeObjectRelease(v44);
      (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v19, v13, v45);
      _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v73, "We have a requested location already -- Overriding %s request move to %s", (uint8_t *)v35, 0x16u);
      v46 = v74;
      swift_arrayDestroy(v74, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      v47 = v35;
      v27 = v75;
      swift_slowDealloc(v47, -1, -1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v13);
    }

  }
  v48 = *(_QWORD *)&v27[OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8];
  ObjectType = swift_getObjectType();
  v50 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v48);
  v51 = v87;
  v52 = PageLocation.documentOrdinal.getter(v50);
  v53 = BookPaginationEntity.document(for:)(v52);
  v54 = swift_release(v50);
  v55 = v88;
  v56 = (uint64_t)v77;
  if (!v53)
    goto LABEL_12;
  if ((dispatch thunk of DocumentPaginationEntity.paginationComplete.getter(v54) & 1) == 0)
  {
    v54 = swift_release(v53);
LABEL_12:
    v58 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v55 + 16);
    v58(v56, v51, v13, v54);
    goto LABEL_13;
  }
  sub_1006352CC(v51, v56);
  v57 = swift_release(v53);
  v58 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v55 + 16);
LABEL_13:
  v59 = v76;
  v58((uint64_t)v76, (char *)v56, v13, v57);
  v60 = sub_10004CFD4(&qword_1009D2F18);
  v61 = v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v78, 1, 1, v60);
  v62 = type metadata accessor for Location.AnchorRequest(0);
  v63 = v79;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v79, 1, 1, v62);
  v64 = type metadata accessor for Location.CFIRequest(0);
  v65 = v80;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v80, 1, 1, v64);
  v66 = sub_10004CFD4(&qword_1009D2AD0);
  v67 = v81;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v81, 1, 1, v66);
  Location.init(pageLocation:locationOffset:requestedAnchor:requestedCFI:requestedLocationRect:isRequestedPageChange:)(v59, v61, v63, v65, v67, 1);
  v69 = (uint64_t)v82;
  v68 = v83;
  v70 = v84;
  (*(void (**)(char *, _QWORD, uint64_t))(v83 + 104))(v82, enum case for UpdateReason.userInteraction(_:), v84);
  sub_10063349C(v23, v69);
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v70);
  v85(v23, v86);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v56, v13);
}

void sub_10062C074(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  char *v27;
  double v28;
  _QWORD v29[2];
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = type metadata accessor for PageLocation(0);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  __chkstk_darwin(v3);
  v30 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Location(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
  ObjectType = swift_getObjectType();
  if ((dispatch thunk of Paginating.isPaginationComplete.getter(ObjectType, v12) & 1) == 0)
  {
    v29[1] = v1;
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100048F64(v14, (uint64_t)qword_1009F1A00);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.error.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      v29[0] = a1;
      v19 = v18;
      *(_WORD *)v18 = 0;
      v20 = v19;
      a1 = v29[0];
      swift_slowDealloc(v20, -1, -1);
    }

  }
  dispatch thunk of Paginating.locationForBookPageNumber(_:)(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_100010960((uint64_t)v7, (uint64_t *)&unk_1009D23A0);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v21 = type metadata accessor for Logger(0);
    v22 = sub_100048F64(v21, (uint64_t)qword_1009F1A00);
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v25 = 134217984;
      v33 = a1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v25 + 4, v25 + 12);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Failed to get location for Book PageNumber %ld", v25, 0xCu);
      swift_slowDealloc(v25, -1, -1);
    }

  }
  else
  {
    v26 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v27 = v30;
    Location.pageLocation.getter(v26);
    sub_10062B9E0(v27, v28);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v32);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

void sub_10062C3C0(uint64_t a1, unint64_t a2, double a3)
{
  sub_10062C3D4(a1, a2, a3);
}

void sub_10062C3D4(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t (*v38)(uint8_t *, uint64_t);
  void (**Strong)(_QWORD, _QWORD, _QWORD);
  uint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint8_t *v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v87;
  char v88;
  uint64_t v89;
  NSObject *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint8_t *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(uint8_t *, uint64_t);
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  void (**v116)(_QWORD, _QWORD, _QWORD);
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  NSObject *v122;
  os_log_type_t v123;
  uint8_t *v124;
  uint64_t v125;
  double v126;
  char *v127;
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  id v133;
  uint8_t *v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  _QWORD *v138;
  char *v139;
  char *v140;
  void (**v141)(_QWORD, _QWORD, _QWORD);
  uint64_t updated;
  char *v143;
  uint64_t v144;
  uint8_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t (*v148)(uint8_t *, uint64_t);
  unint64_t v149;
  uint64_t v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  uint64_t v156;
  uint64_t v157[3];
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;

  v149 = a2;
  updated = type metadata accessor for UpdateReason(0, a3);
  v141 = *(void (***)(_QWORD, _QWORD, _QWORD))(updated - 8);
  __chkstk_darwin(updated);
  v140 = (char *)&v134 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v6);
  v139 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  __chkstk_darwin(v8);
  v143 = (char *)&v134 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = type metadata accessor for PageLocation(0);
  v144 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v145 = (uint8_t *)&v134 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for LocationMovement(0);
  v138 = *(_QWORD **)(v136 - 8);
  __chkstk_darwin(v136);
  v137 = (unint64_t)&v134 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Location(0);
  v148 = *(uint64_t (**)(uint8_t *, uint64_t))(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (uint8_t *)&v134 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (uint8_t *)&v134 - v16;
  v18 = v3;
  v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
  ObjectType = swift_getObjectType();
  v21 = a1;
  v22 = a1;
  v23 = v150;
  v24 = v149;
  dispatch thunk of Paginating.location(for:)(v22, v149, ObjectType, v19);
  v150 = v23;
  v147 = v12;
  if (v23)
  {
    v145 = v14;
    v146 = v3;
    v157[0] = v21;
    v157[1] = v24;
    *(_QWORD *)&v154 = 35;
    *((_QWORD *)&v154 + 1) = 0xE100000000000000;
    v25 = sub_1001F2108();
    v26 = (_QWORD *)StringProtocol.components<A>(separatedBy:)(&v154, &type metadata for String, &type metadata for String, v25, v25);
    v27 = v26;
    v28 = v24;
    if ((unint64_t)(v26[2] - 3) < 0xFFFFFFFFFFFFFFFELL)
    {
      swift_bridgeObjectRelease(v26);
      v29 = v150;
      if (qword_1009CEAB0 != -1)
        swift_once(&qword_1009CEAB0, sub_100629668);
      v30 = type metadata accessor for Logger(0);
      sub_100048F64(v30, (uint64_t)qword_1009F1A00);
      v31 = swift_bridgeObjectRetain_n(v24, 2);
      v32 = Logger.logObject.getter(v31);
      v33 = static os_log_type_t.error.getter(v32);
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc(12, -1);
        v35 = swift_slowAlloc(32, -1);
        v157[0] = v35;
        *(_DWORD *)v34 = 136315138;
        swift_bridgeObjectRetain(v28);
        *(_QWORD *)&v154 = sub_100040F58(v21, v28, v157);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, (char *)&v154 + 8, v34 + 4, v34 + 12);
        swift_bridgeObjectRelease_n(v28, 3);
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "Invalid URL: '%s'", v34, 0xCu);
        swift_arrayDestroy(v35, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v34, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v24, 2);
      }
      v72 = 0;
      goto LABEL_23;
    }
    v137 = v26[2];
    v58 = v26[4];
    v138 = v26 + 4;
    v59 = v26[5];
    v60 = qword_1009CEAB0;
    swift_bridgeObjectRetain(v59);
    v29 = v150;
    if (v60 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v61 = type metadata accessor for Logger(0);
    v62 = sub_100048F64(v61, (uint64_t)qword_1009F1A00);
    v63 = swift_bridgeObjectRetain_n(v24, 2);
    v144 = v62;
    v64 = Logger.logObject.getter(v63);
    v65 = static os_log_type_t.info.getter(v64);
    v66 = os_log_type_enabled(v64, v65);
    v135 = v21;
    if (v66)
    {
      v67 = swift_slowAlloc(12, -1);
      v136 = (uint64_t)v27;
      v68 = (uint8_t *)v67;
      v69 = swift_slowAlloc(32, -1);
      v157[0] = v69;
      *(_DWORD *)v68 = 136315138;
      v134 = v68 + 4;
      swift_bridgeObjectRetain(v28);
      *(_QWORD *)&v154 = sub_100040F58(v21, v28, v157);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, (char *)&v154 + 8, v134, v68 + 12);
      swift_bridgeObjectRelease_n(v28, 3);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Failed to get pageNumber for %s. Using fallback navigation", v68, 0xCu);
      swift_arrayDestroy(v69, 1, (char *)&type metadata for Any + 8);
      v70 = v69;
      v29 = v150;
      swift_slowDealloc(v70, -1, -1);
      v71 = v68;
      v27 = (_QWORD *)v136;
      swift_slowDealloc(v71, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v28, 2);
    }
    v76 = *(_QWORD *)(v146 + OBJC_IVAR____TtC5Books25CurrentLocationController_bookEntity + 24);
    v77 = *(_QWORD *)(v146 + OBJC_IVAR____TtC5Books25CurrentLocationController_bookEntity + 32);
    sub_10003F198((_QWORD *)(v146 + OBJC_IVAR____TtC5Books25CurrentLocationController_bookEntity), v76);
    v78 = dispatch thunk of BookEntityType.documents.getter(v76, v77);
    v79 = v78;
    v80 = *(_QWORD *)(v78 + 16);
    if (v80)
    {
      v81 = v78 + 32;
      swift_bridgeObjectRetain(v78);
      while (1)
      {
        sub_10002E418(v81, (uint64_t)&v151);
        v82 = v152;
        v83 = v153;
        sub_10003F198(&v151, v152);
        v84 = dispatch thunk of DocumentEntityType.href.getter(v82, v83);
        if (v58 == v84 && v59 == v85)
        {
          swift_bridgeObjectRelease(v79);
          v119 = v59;
          goto LABEL_43;
        }
        v87 = v85;
        v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v58, v59, v84, v85, 0);
        swift_bridgeObjectRelease(v87);
        if ((v88 & 1) != 0)
          break;
        _s5Books15CurrentPageViewVwxx_0(&v151);
        v81 += 40;
        if (!--v80)
        {
          swift_bridgeObjectRelease(v79);
          v29 = v150;
          goto LABEL_34;
        }
      }
      v119 = v79;
LABEL_43:
      swift_bridgeObjectRelease(v119);
      sub_100022840(&v151, (uint64_t)&v154);
      swift_bridgeObjectRelease(v79);
      v29 = v150;
      if (!*((_QWORD *)&v155 + 1))
        goto LABEL_44;
    }
    else
    {
LABEL_34:
      v156 = 0;
      v154 = 0u;
      v155 = 0u;
      swift_bridgeObjectRelease(v79);
      if (!*((_QWORD *)&v155 + 1))
      {
LABEL_44:
        swift_bridgeObjectRelease(v59);
        swift_bridgeObjectRelease(v27);
        sub_100010960((uint64_t)&v154, &qword_1009F1B88);
        v120 = v149;
        v121 = swift_bridgeObjectRetain_n(v149, 2);
        v122 = Logger.logObject.getter(v121);
        v123 = static os_log_type_t.error.getter(v122);
        if (os_log_type_enabled(v122, v123))
        {
          v124 = (uint8_t *)swift_slowAlloc(12, -1);
          v125 = swift_slowAlloc(32, -1);
          v157[0] = v125;
          *(_DWORD *)v124 = 136315138;
          swift_bridgeObjectRetain(v120);
          *(_QWORD *)&v154 = sub_100040F58(v135, v120, v157);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, (char *)&v154 + 8, v124 + 4, v124 + 12);
          swift_bridgeObjectRelease_n(v120, 3);
          _os_log_impl((void *)&_mh_execute_header, v122, v123, "Failed to find document for: '%s'", v124, 0xCu);
          v72 = 1;
          swift_arrayDestroy(v125, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v125, -1, -1);
          swift_slowDealloc(v124, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n(v120, 2);
          v72 = 1;
        }
LABEL_23:
        v73 = sub_1006368F0();
        v74 = swift_allocError(&type metadata for LocationControllingError, v73, 0, 0);
        *v75 = v72;
        swift_willThrow(v74);
        swift_errorRelease(v29);
        return;
      }
    }
    sub_100022840(&v154, (uint64_t)v157);
    sub_10002E418((uint64_t)v157, (uint64_t)&v154);
    swift_bridgeObjectRetain_n(v27, 2);
    swift_bridgeObjectRetain(v59);
    v90 = Logger.logObject.getter(v89);
    v94 = static os_log_type_t.debug.getter(v90, v91, v92, v93);
    if (os_log_type_enabled(v90, (os_log_type_t)v94))
    {
      LODWORD(v149) = v94;
      v95 = swift_slowAlloc(32, -1);
      v144 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v151 = v144;
      *(_DWORD *)v95 = 134218498;
      v97 = *((_QWORD *)&v155 + 1);
      v96 = v156;
      sub_10003F198(&v154, *((uint64_t *)&v155 + 1));
      v98 = dispatch thunk of DocumentEntityType.ordinal.getter(v97, v96);
      _s5Books15CurrentPageViewVwxx_0(&v154);
      v160 = v98;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, &v161, v95 + 4, v95 + 12);
      *(_WORD *)(v95 + 12) = 2080;
      swift_bridgeObjectRetain(v59);
      v160 = sub_100040F58(v58, v59, (uint64_t *)&v151);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, &v161, v95 + 14, v95 + 22);
      swift_bridgeObjectRelease_n(v59, 3);
      *(_WORD *)(v95 + 22) = 2080;
      v99 = v137;
      if (v137 > v27[2])
      {
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
      v100 = &v138[2 * v137];
      v101 = *(v100 - 2);
      v102 = *(v100 - 1);
      swift_bridgeObjectRetain(v102);
      v160 = sub_100040F58(v101, v102, (uint64_t *)&v151);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v160, &v161, v95 + 24, v95 + 32);
      swift_bridgeObjectRelease_n(v27, 2);
      swift_bridgeObjectRelease(v102);
      _os_log_impl((void *)&_mh_execute_header, v90, (os_log_type_t)v149, "Found documentOrdinal %ld matching url: %s -- requesting navigation to anchor: %s", (uint8_t *)v95, 0x20u);
      v103 = v144;
      swift_arrayDestroy(v144, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v103, -1, -1);
      swift_slowDealloc(v95, -1, -1);

      v104 = v145;
      v105 = v143;
    }
    else
    {
      _s5Books15CurrentPageViewVwxx_0(&v154);
      swift_bridgeObjectRelease(v27);
      swift_bridgeObjectRelease_n(v59, 2);

      swift_bridgeObjectRelease(v27);
      v104 = v145;
      v105 = v143;
      v99 = v137;
    }
    v106 = v158;
    v107 = v159;
    sub_10003F198(v157, v158);
    v108 = dispatch thunk of DocumentEntityType.ordinal.getter(v106, v107);
    v109 = sub_10004CFD4(&qword_1009D2F18);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v105, 1, 1, v109);
    v110 = v148;
    if (v99 <= v27[2])
    {
      v111 = &v138[2 * v99];
      v112 = *(v111 - 2);
      v113 = *(v111 - 1);
      swift_bridgeObjectRetain(v113);
      swift_bridgeObjectRelease(v27);
      v114 = sub_10004CFD4(&qword_1009D2AD0);
      v115 = v139;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v139, 1, 1, v114);
      Location.init(documentOrdinal:pageOffset:locationOffset:requestedAnchorFragment:requestedCFI:requestedSurroundingContext:requestedLocationRect:isRequestedPageChange:)(v108, 0, v105, v112, v113, 0, 0, v115, 100.0, 0);
      v116 = v141;
      v117 = (uint64_t)v140;
      v118 = updated;
      ((void (**)(char *, _QWORD, uint64_t))v141)[13](v140, enum case for UpdateReason.userInteraction(_:), updated);
      sub_10063349C(v104, v117);
      swift_errorRelease(v150);
      ((void (*)(uint64_t, uint64_t))v116[1])(v117, v118);
      (*((void (**)(uint8_t *, uint64_t))v110 + 1))(v104, v147);
      _s5Books15CurrentPageViewVwxx_0(v157);
      return;
    }
    __break(1u);
    goto LABEL_59;
  }
  v143 = (char *)ObjectType;
  v149 = v19;
  CurrentValueSubject.value.getter(v14);
  updated = sub_100635804();
  v37 = v36;
  v38 = (uint64_t (*)(uint8_t *, uint64_t))*((_QWORD *)v148 + 1);
  Strong = (void (**)(_QWORD, _QWORD, _QWORD))v38(v14, v12);
  v40 = v146;
  v41 = (char *)v145;
  if ((v37 & 1) != 0
    || (Strong = (void (**)(_QWORD, _QWORD, _QWORD))swift_unknownObjectWeakLoadStrong(v18+ OBJC_IVAR____TtC5Books25CurrentLocationController_bookActionMediator)) == 0)
  {
LABEL_48:
    Location.pageLocation.getter(Strong);
    sub_10062B9E0(v41, v126);
    (*(void (**)(char *, uint64_t))(v144 + 8))(v41, v40);
    v38(v17, v147);
    return;
  }
  v141 = Strong;
  v148 = v38;
  v42 = v143;
  v43 = v149;
  v44 = dispatch thunk of Paginating.bookPaginationEntity.getter(v143, v149);
  v45 = Location.documentOrdinal.getter(v44);
  v46 = BookPaginationEntity.document(for:)(v45);
  swift_release(v44);
  v140 = (char *)v46;
  if (!v46)
  {

    v38 = v148;
    goto LABEL_48;
  }
  v47 = dispatch thunk of Paginating.contentLayout.getter(v42, v43);
  v49 = v48;
  v50 = swift_getObjectType();
  v51 = dispatch thunk of BookContentLayoutProviding.columnCount.getter(v50, v49);
  v52 = swift_unknownObjectRelease(v47);
  v53 = updated;
  v54 = v136;
  v55 = v138;
  v56 = v137;
  if (updated < 0)
  {
    v53 = -updated;
    if (__OFSUB__(0, updated))
      goto LABEL_62;
  }
  if (v51 < 1)
    goto LABEL_60;
  if (v53 < 1 || v51 < v53)
  {
    if (!__OFADD__(v51, 1))
    {
      v127 = v140;
      if (v53 < v51 + 1)
      {
        v148(v17, v147);

        swift_release(v127);
        return;
      }
      v128 = (void (*)(char *, uint64_t))v148;
      v129 = dispatch thunk of DocumentPaginationEntity.startingPageOffset.getter(v52);
      v130 = Location.pageOffset.getter(v129);
      v131 = v129 + v130;
      if (!__OFADD__(v129, v130))
      {
        v132 = v147;
        if (!__OFADD__(v131, 1))
        {
          v133 = v141;
          sub_1003049E4(v131 + 1, 0);
          swift_release(v127);

          v128((char *)v17, v132);
          return;
        }
        goto LABEL_64;
      }
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      return;
    }
    goto LABEL_61;
  }
  v57 = v147;
  if (updated < 1)
    static LocationMovement.spreadBackward.getter(v52);
  else
    static LocationMovement.spreadForward.getter(v52);
  sub_10062B580(v56);
  swift_release(v140);

  ((void (*)(uint64_t, uint64_t))v55[1])(v56, v54);
  v148(v17, v57);
}

double sub_10062D300(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjectType;
  id v7;
  double v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  double v16;
  id v17;
  double v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __n128 v27;
  double v28;
  unint64_t v29;
  uint64_t v31;
  __objc2_prot *v32;
  __objc2_prot *v33;

  v2 = type metadata accessor for PageLocation(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  ObjectType = swift_getObjectType();
  v7 = objc_msgSend(a1, "location");
  if (v7)
  {
    v9 = v7;
    v32 = &OBJC_PROTOCOL___BEAnchorLocationProtocol;
    v10 = (void *)swift_dynamicCastObjCProtocolConditional(v7, 1, &v32);
    if (v10)
    {
      v11 = objc_msgSend(v10, "anchor");
      if (v11)
      {
        v12 = v11;
        v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
        v15 = v14;

        sub_10062C3D4(v13, v15, v16);
        swift_unknownObjectRelease(v9);
        v29 = v15;
LABEL_13:
        v27.n128_u64[0] = swift_bridgeObjectRelease(v29).n128_u64[0];
        return v27.n128_f64[0];
      }
    }
    *(_QWORD *)&v8 = swift_unknownObjectRelease(v9).n128_u64[0];
  }
  v17 = objc_msgSend(a1, "location", v8);
  if (v17)
  {
    v19 = v17;
    v33 = &OBJC_PROTOCOL___BECFILocationProtocol;
    v20 = (void *)swift_dynamicCastObjCProtocolConditional(v17, 1, &v33);
    if (v20)
    {
      v21 = objc_msgSend(v20, "cfiString");
      if (v21)
      {
        v22 = v21;
        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
        v25 = v24;

        sub_10062D520(v23, v25, 100.0);
        swift_unknownObjectRelease(v19);
        v29 = v25;
        goto LABEL_13;
      }
    }
    *(_QWORD *)&v18 = swift_unknownObjectRelease(v19).n128_u64[0];
  }
  v26 = objc_msgSend(a1, "location", v18);
  v27 = swift_unknownObjectRelease(v26);
  if (v26)
  {
    v28 = BESearchResult.pageLocation.getter(ObjectType, v27);
    sub_10062B9E0(v5, v28);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v27.n128_f64[0];
}

void sub_10062D520(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t updated;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  updated = type metadata accessor for UpdateReason(0, a3);
  v51 = *(_QWORD *)(updated - 8);
  v52 = updated;
  __chkstk_darwin(updated);
  v50 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v9);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  __chkstk_darwin(v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Location(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = v3;
  v20 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
  v21 = type metadata accessor for CurrentLocationProvider(0);
  v22 = sub_100008DB0((unint64_t *)&unk_1009F1BE0, type metadata accessor for CurrentLocationProvider, (uint64_t)&unk_100712AA0);
  v24 = LocationProviding.readingLocationCFI.getter(v21, v22, v23);
  if (v24 == a1 && v25 == a2)
  {
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v27 = v25;
    v47 = v20;
    v48 = v14;
    v49 = v18;
    v28 = v52;
    v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, a1, a2, 0);
    swift_bridgeObjectRelease(v27);
    if ((v29 & 1) == 0)
    {
      v30 = a2;
      v46 = a1;
      v31 = String.cfiSpineIndex.getter(a1, a2);
      v45 = v19;
      v32 = v28;
      v33 = v51;
      v34 = v15;
      v35 = v16;
      v36 = v11;
      v37 = v49;
      if ((v38 & 1) != 0)
      {
        v40 = CurrentValueSubject.value.getter(v49);
        v39 = Location.documentOrdinal.getter(v40);
        (*(void (**)(_QWORD *, uint64_t))(v35 + 8))(v37, v34);
      }
      else
      {
        v39 = v31;
      }
      v41 = sub_10004CFD4(&qword_1009D2F18);
      v42 = v48;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v48, 1, 1, v41);
      v43 = sub_10004CFD4(&qword_1009D2AD0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v36, 1, 1, v43);
      swift_bridgeObjectRetain(v30);
      Location.init(documentOrdinal:pageOffset:locationOffset:requestedAnchorFragment:requestedCFI:requestedSurroundingContext:requestedLocationRect:isRequestedPageChange:)(v39, 0, v42, 0, 0, v46, v30, v36, a3, 0);
      v44 = (uint64_t)v50;
      (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v50, enum case for UpdateReason.userInteraction(_:), v32);
      sub_100215490((uint64_t)v37, v44);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v44, v32);
      sub_100629BC8();
      (*(void (**)(_QWORD *, uint64_t))(v35 + 8))(v37, v34);
    }
  }
}

uint64_t sub_10062D864(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  double v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  Swift::String v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84[2];
  uint64_t v85;
  uint64_t v86;

  v3 = type metadata accessor for PageLocation(0);
  v77 = *(_QWORD *)(v3 - 8);
  v78 = v3;
  v4 = __chkstk_darwin(v3);
  v76 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for HistoryEntity.Location(0, v4);
  __chkstk_darwin(v79);
  v80 = (uint64_t *)((char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for UUID(0);
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009F1C10);
  __chkstk_darwin(v10);
  v12 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v13);
  v73 = (char *)&v69 - v15;
  v16 = type metadata accessor for HistoryEntity(0, v14);
  v82 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v81 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v69 - v19;
  v21 = type metadata accessor for Location(0);
  v71 = *(_QWORD *)(v21 - 8);
  v72 = v21;
  __chkstk_darwin(v21);
  v23 = (uint64_t *)((char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v83 = v1;
  v24 = (_QWORD *)(v1 + OBJC_IVAR____TtC5Books25CurrentLocationController_historyController);
  v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books25CurrentLocationController_historyController + 24);
  v26 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books25CurrentLocationController_historyController + 32);
  sub_10003F198((_QWORD *)(v1 + OBJC_IVAR____TtC5Books25CurrentLocationController_historyController), v25);
  if ((dispatch thunk of NavigationHistoryControlling.endOfList.getter(v25, v26) & 1) != 0)
  {
    v27 = v24[3];
    v28 = v24[4];
    sub_10003F198(v24, v27);
    if ((dispatch thunk of NavigationHistoryControlling.hasHistory(_:)(a1, v27, v28) & 1) != 0)
    {
      v69 = a1;
      v29 = type metadata accessor for CurrentLocationProvider(0);
      v30 = sub_100008DB0((unint64_t *)&unk_1009F1BE0, type metadata accessor for CurrentLocationProvider, (uint64_t)&unk_100712AA0);
      v32 = LocationProviding.readingLocationCFI.getter(v29, v30, v31);
      v34 = v33;
      CurrentValueSubject.value.getter(v23);
      v84[0] = v32;
      v84[1] = v34;
      v35 = sub_1001F15BC();
      v36 = Collection.isNotEmpty.getter(&type metadata for String, v35);
      v70 = v16;
      if ((v36 & 1) != 0)
      {
        HistoryEntity.init(cfi:)(v32, v34);
      }
      else
      {
        swift_bridgeObjectRelease(v34);
        v38 = Location.pageOffset.getter(v37);
        v39 = Location.documentOrdinal.getter(v38);
        HistoryEntity.init(pageOffset:ordinal:)(v38, v39);
      }
      v40 = v24[3];
      v41 = v24[4];
      sub_10003F198(v24, v40);
      dispatch thunk of NavigationHistoryControlling.add(_:)(v20, v40, v41);
      v42 = *(_QWORD *)(v83 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
      ObjectType = swift_getObjectType();
      dispatch thunk of Paginating.insert(_:at:)(v20, v23, ObjectType, v42);
      v44 = v24[3];
      v45 = v24[4];
      v46 = sub_10003F198(v24, v44);
      HistoryEntity.uuid.getter(v46);
      v47 = (uint64_t)v73;
      dispatch thunk of NavigationHistoryControlling.move(to:)(v9, v44, v45);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v9, v75);
      sub_100010960(v47, &qword_1009F1C10);
      v16 = v70;
      (*(void (**)(char *, uint64_t))(v82 + 8))(v20, v70);
      (*(void (**)(_QWORD *, uint64_t))(v71 + 8))(v23, v72);
      a1 = v69;
    }
  }
  v48 = v24[3];
  v49 = v24[4];
  sub_10003F198(v24, v48);
  dispatch thunk of NavigationHistoryControlling.move(to:)(a1, v48, v49);
  v50 = v82;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v12, 1, v16) == 1)
    return sub_100010960((uint64_t)v12, &qword_1009F1C10);
  v52 = v81;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v81, v12, v16);
  LocationHistoryObserver.ignoreNextLocationChange()();
  v53 = v80;
  HistoryEntity.location.getter();
  if (swift_getEnumCaseMultiPayload(v53, v79) == 1)
  {
    v55 = v76;
    v54 = v77;
    v56 = v53;
    v57 = v78;
    v58 = (*(double (**)(char *, uint64_t *, uint64_t))(v77 + 32))(v76, v56, v78);
    sub_10062B9E0(v55, v58);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v57);
  }
  else
  {
    v60 = *v53;
    v59 = (void *)v53[1];
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v61 = type metadata accessor for Logger(0);
    sub_100048F64(v61, (uint64_t)qword_1009F1A00);
    v62 = swift_bridgeObjectRetain_n(v59, 2);
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.info.getter(v63);
    if (os_log_type_enabled(v63, v64))
    {
      v65 = (uint8_t *)swift_slowAlloc(12, -1);
      v66 = swift_slowAlloc(32, -1);
      v84[0] = v66;
      *(_DWORD *)v65 = 136315138;
      swift_bridgeObjectRetain(v59);
      v85 = sub_100040F58(v60, (unint64_t)v59, v84);
      v52 = v81;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v85, &v86, v65 + 4, v65 + 12);
      swift_bridgeObjectRelease_n(v59, 3);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "History attempting navigation to %s", v65, 0xCu);
      swift_arrayDestroy(v66, 1, (char *)&type metadata for Any + 8);
      v67 = v66;
      v50 = v82;
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v65, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v59, 2);
    }
    type metadata accessor for CurrentLocationController(0);
    sub_100008DB0(&qword_1009E3400, type metadata accessor for CurrentLocationController, (uint64_t)&unk_100736270);
    v68._countAndFlagsBits = v60;
    v68._object = v59;
    LocationControlling.moveTo(cfi:)(v68);
    swift_bridgeObjectRelease(v59);
  }
  sub_10062A5DC();
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v52, v16);
}

void sub_10062DEFC(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  void (*v80)(_QWORD, _QWORD, _QWORD);
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  _BOOL4 v84;
  void (*v85)(char *, uint64_t);
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  __n128 v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t ObjectType;
  uint64_t v97;
  uint64_t v98;
  uint64_t OpaqueTypeConformance2;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  char *v103;
  void (*v104)(_QWORD, _QWORD, _QWORD);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(_QWORD, _QWORD, _QWORD);
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t (*v112)(uint64_t, uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  void (*v130)(_QWORD, _QWORD, _QWORD);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  __n128 v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  int v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t *v160;
  void (*v161)(char *, uint64_t);
  void (*v162)(char *, uint64_t, uint64_t);
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  os_log_type_t v170;
  uint8_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  unint64_t v176;
  __n128 v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(_QWORD, _QWORD, _QWORD);
  int v185;
  uint64_t *v186;
  uint64_t v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void (*v195)(char *, char *, uint64_t);
  char *v196;
  char *v197;
  uint64_t v198;
  void (*v199)(char *, uint64_t);
  _BOOL8 v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t (*v204)(char *, char *, uint64_t);
  uint64_t v205;
  NSObject *v206;
  os_log_type_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  unint64_t v214;
  __n128 v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  __n128 v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  char *v225;
  uint8_t *v226;
  _QWORD *v227;
  char *v228;
  void (*v229)(uint8_t *, uint64_t);
  uint64_t v230;
  uint8_t *v231;
  _QWORD *v232;
  char *v233;
  uint64_t v234;
  char *v235;
  uint8_t *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void (*v241)(char *, uint64_t);
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  char *v258;
  uint8_t *v259;
  uint64_t v260;
  char *v261;
  uint8_t *v262;
  uint8_t *v263;
  char *v264;
  char *v265;
  uint64_t v266;
  char *v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t updated;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  uint64_t v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  void (*v288)(_QWORD, _QWORD, _QWORD);
  void (*v289)(char *, uint64_t);
  uint64_t v290;
  uint64_t v291;

  updated = type metadata accessor for UpdateReason(0, a2);
  v270 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v269 = (char *)&v242 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v5);
  v268 = (char *)&v242 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D2F38);
  __chkstk_darwin(v7);
  v267 = (char *)&v242 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009F1BB0);
  __chkstk_darwin(v9);
  v265 = (char *)&v242 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  __chkstk_darwin(v11);
  v264 = (char *)&v242 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = type metadata accessor for Location(0);
  v260 = *(_QWORD *)(v266 - 8);
  __chkstk_darwin(v266);
  v262 = (uint64_t *)((char *)&v242 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  v259 = (uint64_t *)((char *)&v242 - v15);
  __chkstk_darwin(v16);
  v263 = (uint8_t *)&v242 - v17;
  v18 = type metadata accessor for PageLocation(0);
  v285 = *(_QWORD *)(v18 - 8);
  v286 = v18;
  __chkstk_darwin(v18);
  v261 = (char *)&v242 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v274 = (char *)&v242 - v21;
  __chkstk_darwin(v22);
  v248 = (char *)&v242 - v23;
  __chkstk_darwin(v24);
  v249 = (char *)&v242 - v25;
  __chkstk_darwin(v26);
  v257 = (char *)&v242 - v27;
  __chkstk_darwin(v28);
  v284 = (char *)&v242 - v29;
  __chkstk_darwin(v30);
  v283 = (char *)&v242 - v31;
  v32 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v32);
  v256 = (char *)&v242 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  v277 = (char *)&v242 - v35;
  __chkstk_darwin(v36);
  v280 = (char *)&v242 - v37;
  __chkstk_darwin(v38);
  v282 = (char *)&v242 - v39;
  __chkstk_darwin(v40);
  v245 = (char *)&v242 - v41;
  __chkstk_darwin(v42);
  v247 = (char *)&v242 - v43;
  __chkstk_darwin(v44);
  v250 = (char *)&v242 - v45;
  __chkstk_darwin(v46);
  v272 = (char *)&v242 - v47;
  v48 = sub_10004CFD4(&qword_1009F1BB8);
  v278 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v50 = (char *)&v242 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = type metadata accessor for SpreadPaginationEntity(0);
  v52 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v54 = (char *)&v242 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v275 = (char *)&v242 - v56;
  __chkstk_darwin(v57);
  v258 = (char *)&v242 - v58;
  __chkstk_darwin(v59);
  v255 = (uint64_t)&v242 - v60;
  __chkstk_darwin(v61);
  v276 = (char *)&v242 - v62;
  __chkstk_darwin(v63);
  v279 = (char *)&v242 - v64;
  __chkstk_darwin(v65);
  v273 = (char *)&v242 - v66;
  __chkstk_darwin(v67);
  v244 = (uint64_t)&v242 - v68;
  __chkstk_darwin(v69);
  v246 = (uint64_t)&v242 - v70;
  __chkstk_darwin(v71);
  v281 = (char *)&v242 - v72;
  __chkstk_darwin(v73);
  v75 = (char *)&v242 - v74;
  v76 = v2;
  sub_1006296E8((uint64_t)&v242 - v74);
  v77 = sub_100008DB0((unint64_t *)&qword_1009E8E80, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
  v78 = dispatch thunk of static Equatable.== infix(_:_:)(v75, a1, v51, v77);
  v287 = v52;
  v288 = (void (*)(_QWORD, _QWORD, _QWORD))v51;
  v289 = *(void (**)(char *, uint64_t))(v52 + 8);
  v289(v75, v51);
  if ((v78 & 1) != 0)
  {
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v79 = type metadata accessor for Logger(0);
    sub_100048F64(v79, (uint64_t)qword_1009F1A00);
    v80 = v288;
    v81 = (*(uint64_t (**)(char *, uint64_t, _QWORD))(v287 + 16))(v54, a1, v288);
    v82 = Logger.logObject.getter(v81);
    v83 = static os_log_type_t.default.getter(v82);
    v84 = os_log_type_enabled(v82, v83);
    v85 = v289;
    if (v84)
    {
      v86 = (uint8_t *)swift_slowAlloc(12, -1);
      v87 = swift_slowAlloc(32, -1);
      v291 = v87;
      *(_DWORD *)v86 = 136315138;
      v88 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
      v89 = dispatch thunk of CustomStringConvertible.description.getter(v80, v88);
      v91 = v90;
      v290 = sub_100040F58(v89, v90, &v291);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v290, &v291, v86 + 4, v86 + 12);
      v92 = swift_bridgeObjectRelease(v91);
      ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD), __n128))v85)(v54, v80, v92);
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "Already on spread %s, nothing to do", v86, 0xCu);
      swift_arrayDestroy(v87, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v87, -1, -1);
      v93 = v86;
LABEL_36:
      swift_slowDealloc(v93, -1, -1);
LABEL_41:

      return;
    }
    v103 = v54;
    v104 = v80;
    goto LABEL_40;
  }
  v254 = v2;
  v95 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider);
  v94 = *(_QWORD *)(v76 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
  ObjectType = swift_getObjectType();
  v253 = v95;
  v251 = ObjectType;
  v252 = v94;
  v97 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v94);
  dispatch thunk of BookPaginationEntity.spreads.getter();
  swift_release(v97);
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v98, &opaque type descriptor for <<opaque return type of BookPaginationEntity.spreads>>, 1);
  v100 = dispatch thunk of Sequence._customContainsEquatableElement(_:)(a1, v48, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(OpaqueTypeConformance2 + 8) + 8) + 8));
  v101 = a1;
  v243 = a1;
  if (v100 == 2)
  {
    __chkstk_darwin(v100);
    *(&v242 - 2) = a1;
    v102 = sub_100628F24((uint64_t (*)(char *))sub_100637404, (uint64_t)(&v242 - 4));
  }
  else
  {
    v102 = v100;
  }
  v105 = (*(uint64_t (**)(char *, uint64_t))(v278 + 8))(v50, v48);
  v107 = v285;
  v106 = v286;
  v108 = v288;
  v110 = v281;
  v109 = v282;
  if (!v102)
  {
    v111 = (uint64_t)v272;
    SpreadPaginationEntity.firstLocation.getter(v105);
    v112 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
    v113 = v112(v111, 1, v106);
    if ((_DWORD)v113 == 1)
    {
      sub_100010960(v111, &qword_1009E3508);
      v278 = *(_QWORD *)(v287 + 16);
      v114 = ((uint64_t (*)(char *, uint64_t, _QWORD))v278)(v110, v101, v108);
      v115 = (uint64_t)v250;
      SpreadPaginationEntity.lastLocation.getter(v114);
      v116 = v112(v115, 1, v106);
      if ((_DWORD)v116 == 1)
      {
        sub_100010960(v115, &qword_1009E3508);
        v117 = v246;
        v118 = sub_1006296E8(v246);
        v119 = (uint64_t)v247;
        SpreadPaginationEntity.firstLocation.getter(v118);
        v120 = v117;
        v121 = v289;
        v289((char *)v120, (uint64_t)v108);
        v122 = v112(v119, 1, v106);
        if ((_DWORD)v122 == 1)
        {
          sub_100010960(v119, &qword_1009E3508);
          v123 = v244;
          v124 = sub_1006296E8(v244);
          v125 = (uint64_t)v245;
          SpreadPaginationEntity.lastLocation.getter(v124);
          v121((char *)v123, (uint64_t)v108);
          v126 = v112(v125, 1, v106);
          v127 = v281;
          if ((_DWORD)v126 == 1)
          {
            v121(v281, (uint64_t)v108);
            sub_100010960(v125, &qword_1009E3508);
            v128 = 0;
          }
          else
          {
            v128 = PageLocation.documentOrdinal.getter(v126);
            v121(v127, (uint64_t)v108);
            (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v125, v106);
          }
          goto LABEL_20;
        }
        v128 = PageLocation.documentOrdinal.getter(v122);
        (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v119, v106);
        v129 = v281;
        v130 = v108;
LABEL_19:
        v121(v129, (uint64_t)v130);
LABEL_20:
        v131 = dispatch thunk of Paginating.bookPaginationEntity.getter(v251, v252);
        v132 = BookPaginationEntity.spreads(around:)(v128);
        swift_release(v131);
        if (qword_1009CEAB0 != -1)
          swift_once(&qword_1009CEAB0, sub_100629668);
        v133 = type metadata accessor for Logger(0);
        sub_100048F64(v133, (uint64_t)qword_1009F1A00);
        v134 = v273;
        ((void (*)(char *, uint64_t, _QWORD))v278)(v273, v101, v108);
        swift_bridgeObjectRetain(v132);
        v136 = Logger.logObject.getter(v135);
        v137 = static os_log_type_t.error.getter(v136);
        if (os_log_type_enabled(v136, v137))
        {
          v138 = swift_slowAlloc(22, -1);
          v139 = swift_slowAlloc(64, -1);
          v291 = v139;
          *(_DWORD *)v138 = 136315394;
          v140 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
          v141 = dispatch thunk of CustomStringConvertible.description.getter(v288, v140);
          v143 = v142;
          v290 = sub_100040F58(v141, v142, &v291);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v290, &v291, v138 + 4, v138 + 12);
          v144 = swift_bridgeObjectRelease(v143);
          ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD), __n128))v289)(v134, v288, v144);
          *(_WORD *)(v138 + 12) = 2080;
          swift_bridgeObjectRetain(v132);
          v146 = Array.description.getter(v145, v288);
          v148 = v147;
          swift_bridgeObjectRelease(v132);
          v149 = v146;
          v106 = v286;
          v290 = sub_100040F58(v149, v148, &v291);
          v109 = v282;
          v107 = v285;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v290, &v291, v138 + 14, v138 + 22);
          swift_bridgeObjectRelease_n(v132, 2);
          swift_bridgeObjectRelease(v148);
          _os_log_impl((void *)&_mh_execute_header, v136, v137, "Cannot move to spread %s because it's not part of book %s. Maybe it's from an old pagination pass?", (uint8_t *)v138, 0x16u);
          swift_arrayDestroy(v139, 2, (char *)&type metadata for Any + 8);
          v150 = v139;
          v108 = v288;
          swift_slowDealloc(v150, -1, -1);
          v151 = v138;
          v101 = v243;
          swift_slowDealloc(v151, -1, -1);

        }
        else
        {
          v289(v134, (uint64_t)v108);

          swift_bridgeObjectRelease_n(v132, 2);
        }
        goto LABEL_25;
      }
      v128 = PageLocation.documentOrdinal.getter(v116);
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v115, v106);
    }
    else
    {
      v128 = PageLocation.documentOrdinal.getter(v113);
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v111, v106);
      v278 = *(_QWORD *)(v287 + 16);
      ((void (*)(char *, uint64_t, _QWORD))v278)(v110, v101, v108);
    }
    v129 = v110;
    v130 = v108;
    v121 = v289;
    goto LABEL_19;
  }
LABEL_25:
  v152 = (uint64_t)v280;
  SpreadPaginationEntity.firstLocation.getter(v105);
  v153 = v279;
  v288 = *(void (**)(_QWORD, _QWORD, _QWORD))(v287 + 16);
  v288(v279, v101, v108);
  v154 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
  v155 = v154(v152, 1, v106);
  if ((_DWORD)v155 == 1)
  {
    SpreadPaginationEntity.lastLocation.getter(v155);
    v289(v153, (uint64_t)v108);
    sub_100010960(v152, &qword_1009E3508);
    v156 = v154((uint64_t)v109, 1, v106);
    v157 = v283;
    if (v156 == 1)
    {
      v158 = (uint64_t)v109;
      v159 = v275;
      v160 = &qword_1009CE000;
LABEL_32:
      sub_100010960(v158, &qword_1009E3508);
      v85 = v289;
      if (v160[342] != -1)
        swift_once(&qword_1009CEAB0, sub_100629668);
      v168 = type metadata accessor for Logger(0);
      sub_100048F64(v168, (uint64_t)qword_1009F1A00);
      v169 = ((uint64_t (*)(char *, uint64_t, _QWORD))v288)(v159, v101, v108);
      v82 = Logger.logObject.getter(v169);
      v170 = static os_log_type_t.error.getter(v82);
      if (os_log_type_enabled(v82, v170))
      {
        v171 = (uint8_t *)swift_slowAlloc(12, -1);
        v172 = swift_slowAlloc(32, -1);
        v291 = v172;
        *(_DWORD *)v171 = 136315138;
        v173 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
        v174 = dispatch thunk of CustomStringConvertible.description.getter(v108, v173);
        v176 = v175;
        v290 = sub_100040F58(v174, v175, &v291);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v290, &v291, v171 + 4, v171 + 12);
        v177 = swift_bridgeObjectRelease(v176);
        ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD), __n128))v85)(v159, v108, v177);
        _os_log_impl((void *)&_mh_execute_header, v82, v170, "Cannot move to spread %s because it lacks any page locations", v171, 0xCu);
        swift_arrayDestroy(v172, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v172, -1, -1);
        v93 = v171;
        goto LABEL_36;
      }
      v103 = v159;
      v104 = v108;
LABEL_40:
      v85(v103, (uint64_t)v104);
      goto LABEL_41;
    }
    v162 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 32);
    v161 = v289;
    v163 = v284;
  }
  else
  {
    v161 = v289;
    v289(v153, (uint64_t)v108);
    v162 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 32);
    v162(v109, v152, v106);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v107 + 56))(v109, 0, 1, v106);
    v157 = v283;
    v163 = v284;
  }
  v162(v157, (uint64_t)v109, v106);
  v164 = dispatch thunk of Paginating.bookPaginationEntity.getter(v251, v252);
  v165 = v276;
  BookPaginationEntity.adjustedSpread(containing:)(v157);
  swift_release(v164);
  v166 = v277;
  SpreadPaginationEntity.firstLocation.getter(v167);
  v158 = (uint64_t)v166;
  v161(v165, (uint64_t)v108);
  if (v154((uint64_t)v166, 1, v106) == 1)
  {
    (*(void (**)(char *, uint64_t))(v285 + 8))(v157, v106);
    v159 = v275;
    v160 = &qword_1009CE000;
    v101 = v243;
    goto LABEL_32;
  }
  v162(v163, (uint64_t)v166, v106);
  v178 = v255;
  v179 = v163;
  v180 = v254;
  v181 = sub_1006296E8(v255);
  v182 = (uint64_t)v256;
  SpreadPaginationEntity.firstLocation.getter(v181);
  v183 = v178;
  v184 = v108;
  v161((char *)v183, (uint64_t)v108);
  v185 = v154(v182, 1, v106);
  v186 = &qword_1009CE000;
  v187 = v285;
  if (v185 == 1)
  {
    sub_100010960(v182, &qword_1009E3508);
    v188 = v274;
    v189 = v258;
    v190 = v179;
  }
  else
  {
    v191 = v257;
    v192 = ((uint64_t (*)(char *, uint64_t, uint64_t))v162)(v257, v182, v106);
    v287 = *(_QWORD *)(v180 + OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider);
    v193 = PageLocation.documentOrdinal.getter(v192);
    v194 = PageLocation.documentOrdinal.getter(v193);
    v195 = *(void (**)(char *, char *, uint64_t))(v187 + 16);
    v196 = v249;
    v195(v249, v191, v106);
    v197 = v248;
    v198 = ((uint64_t (*)(char *, char *, uint64_t))v195)(v248, v179, v106);
    v190 = v179;
    if (v194 >= v193)
    {
      v201 = PageLocation.pageOffset.getter(v198);
      v202 = PageLocation.pageOffset.getter(v201);
      v199 = *(void (**)(char *, uint64_t))(v187 + 8);
      v199(v197, v106);
      v199(v196, v106);
      v200 = v201 >= v202;
    }
    else
    {
      v199 = *(void (**)(char *, uint64_t))(v187 + 8);
      v199(v197, v106);
      v199(v196, v106);
      v200 = 0;
    }
    v188 = v274;
    sub_1002170DC(v200);
    v199(v257, v106);
    v189 = v258;
    v186 = &qword_1009CE000;
  }
  if (v186[342] != -1)
    swift_once(&qword_1009CEAB0, sub_100629668);
  v203 = type metadata accessor for Logger(0);
  sub_100048F64(v203, (uint64_t)qword_1009F1A00);
  v288(v189, v243, v184);
  v204 = *(uint64_t (**)(char *, char *, uint64_t))(v187 + 16);
  v205 = v204(v188, v190, v106);
  v206 = Logger.logObject.getter(v205);
  v207 = static os_log_type_t.info.getter(v206);
  if (os_log_type_enabled(v206, v207))
  {
    v208 = swift_slowAlloc(22, -1);
    v209 = swift_slowAlloc(64, -1);
    v288 = (void (*)(_QWORD, _QWORD, _QWORD))v204;
    v210 = v209;
    v291 = v209;
    *(_DWORD *)v208 = 136315394;
    v211 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
    v212 = dispatch thunk of CustomStringConvertible.description.getter(v184, v211);
    v214 = v213;
    v290 = sub_100040F58(v212, v213, &v291);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v290, &v291, v208 + 4, v208 + 12);
    v215 = swift_bridgeObjectRelease(v214);
    ((void (*)(char *, void (*)(_QWORD, _QWORD, _QWORD), __n128))v289)(v189, v184, v215);
    *(_WORD *)(v208 + 12) = 2080;
    v216 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
    v217 = v274;
    v218 = dispatch thunk of CustomStringConvertible.description.getter(v286, v216);
    v220 = v219;
    v290 = sub_100040F58(v218, v219, &v291);
    v106 = v286;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v290, &v291, v208 + 14, v208 + 22);
    v221 = swift_bridgeObjectRelease(v220);
    v289 = *(void (**)(char *, uint64_t))(v187 + 8);
    ((void (*)(char *, uint64_t, __n128))v289)(v217, v106, v221);
    _os_log_impl((void *)&_mh_execute_header, v206, v207, "Requesting move to #spread: %s, choosing location: %s", (uint8_t *)v208, 0x16u);
    swift_arrayDestroy(v210, 2, (char *)&type metadata for Any + 8);
    v222 = v210;
    v204 = (uint64_t (*)(char *, char *, uint64_t))v288;
    swift_slowDealloc(v222, -1, -1);
    swift_slowDealloc(v208, -1, -1);
  }
  else
  {
    v289(v189, (uint64_t)v184);
    v289 = *(void (**)(char *, uint64_t))(v187 + 8);
    v289(v188, v106);
  }

  v223 = v261;
  v204(v261, v284, v106);
  v224 = sub_10004CFD4(&qword_1009D2F18);
  v225 = v264;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v224 - 8) + 56))(v264, 1, 1, v224);
  v226 = (uint8_t *)v259;
  v227 = CurrentValueSubject.value.getter((uint8_t *)v259);
  v228 = v265;
  Location.requestedAnchor.getter(v227);
  v229 = *(void (**)(uint8_t *, uint64_t))(v260 + 8);
  v230 = v266;
  v229(v226, v266);
  v231 = (uint8_t *)v262;
  v232 = CurrentValueSubject.value.getter((uint8_t *)v262);
  v233 = v267;
  Location.requestedCFI.getter(v232);
  v229(v231, v230);
  v234 = sub_10004CFD4(&qword_1009D2AD0);
  v235 = v268;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v234 - 8) + 56))(v268, 1, 1, v234);
  v236 = v263;
  Location.init(pageLocation:locationOffset:requestedAnchor:requestedCFI:requestedLocationRect:isRequestedPageChange:)(v223, v225, v228, v233, v235, 0);
  v237 = v270;
  v238 = (uint64_t)v269;
  v239 = updated;
  (*(void (**)(char *, _QWORD, uint64_t))(v270 + 104))(v269, enum case for UpdateReason.userInteraction(_:), updated);
  sub_10063349C(v236, v238);
  (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v238, v239);
  v229(v236, v230);
  v240 = v286;
  v241 = v289;
  v289(v284, v286);
  v241(v283, v240);
}

uint64_t sub_10062F558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(uint8_t *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v41 = a1;
  v42 = a2;
  v5 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v5);
  v44 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D2F38);
  __chkstk_darwin(v7);
  v43 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009F1BB0);
  __chkstk_darwin(v9);
  v40 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  __chkstk_darwin(v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for PageLocation(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Location(0);
  v39 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (uint8_t *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v23 = (char *)&v38 - v22;
  v45 = v3;
  v24 = CurrentValueSubject.value.getter((uint64_t *)((char *)&v38 - v22));
  if ((Location.hasRequestedLocation.getter(v24) & 1) != 0)
  {
    v38 = a3;
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100048F64(v25, (uint64_t)qword_1009F1A00);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.info.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "updating our current location, but we have a requested location in flight.", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

    a3 = v38;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v41, v14);
  v30 = sub_10000B5E4(v42, (uint64_t)v13, (uint64_t *)&unk_1009EE7B0);
  v31 = v40;
  v32 = Location.requestedAnchor.getter(v30);
  v33 = v43;
  Location.requestedCFI.getter(v32);
  v34 = sub_10004CFD4(&qword_1009D2AD0);
  v35 = v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v44, 1, 1, v34);
  Location.init(pageLocation:locationOffset:requestedAnchor:requestedCFI:requestedLocationRect:isRequestedPageChange:)(v17, v13, v31, v33, v35, 0);
  sub_10063349C(v20, a3);
  v36 = *(void (**)(uint8_t *, uint64_t))(v39 + 8);
  v36(v20, v18);
  return ((uint64_t (*)(char *, uint64_t))v36)(v23, v18);
}

uint64_t sub_10062F8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  double v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  __n128 v91;
  uint64_t (*v92)(char *, uint64_t, uint64_t);
  uint64_t v93;
  void (*v94)(char *, _QWORD, uint64_t, uint64_t);
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  NSObject *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  os_log_type_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  __n128 v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint8_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  __n128 v135;
  void (*v136)(char *, uint64_t, __n128);
  uint64_t v137;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __n128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __n128 v155;
  void (*v156)(char *, uint64_t);
  char v157;
  NSObject *v158;
  _QWORD *v159;
  uint64_t v160;
  Class isa;
  NSObject *v162;
  _QWORD *v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  void (*v168)(char *, _QWORD, uint64_t);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char v174;
  uint64_t v175;
  uint64_t (*v176)(char *, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t (*v186)(uint64_t, uint64_t, uint64_t);
  int v187;
  char *v188;
  void (*v189)(char *, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char v195;
  void (*v196)(char *, uint64_t);
  char *v197;
  char *v198;
  char *v199;
  uint64_t v200;
  os_log_t v201;
  Class v202;
  char *v203;
  uint64_t v204;
  NSObject *v205;
  os_log_type_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  __n128 v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  Class v217;
  uint64_t v218;
  char *v219;
  int v220;
  NSObject *v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  __n128 v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  NSObject *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  os_log_type_t v233;
  uint8_t *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  unint64_t v239;
  __n128 v240;
  uint64_t (*v241)(char *, uint64_t);
  void (*v242)(char *, uint64_t);
  char *v243;
  uint64_t v244;
  uint64_t (*v245)(char *, uint64_t);
  __n128 v246;
  void (*v247)(char *, uint64_t, __n128);
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  __n128 v255;
  uint64_t v256;
  uint64_t v257;
  unsigned __int8 *v258;
  char v259;
  __n128 v260;
  uint64_t v261;
  uint64_t v262;
  NSObject *v263;
  uint64_t v264;
  uint64_t (*v265)(uint64_t, uint64_t, uint64_t);
  int v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  void (*v274)(char *, uint64_t, uint64_t);
  char *v275;
  unsigned __int8 *v276;
  NSObject *v277;
  int v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  int v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  void (*v288)(uint64_t, char *, uint64_t);
  uint64_t v289;
  __n128 v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t (*v293)(char *, uint64_t, uint64_t);
  uint64_t v294;
  void *v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  NSObject *v299;
  os_log_type_t v300;
  uint8_t *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  unint64_t v306;
  __n128 v307;
  char *v308;
  uint64_t v309;
  unsigned __int8 *v310;
  NSObject *v311;
  unsigned __int8 *v312;
  os_log_type_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  unint64_t v318;
  unint64_t v319;
  __n128 v320;
  unsigned __int8 *v321;
  os_log_t v322;
  uint64_t v323;
  uint64_t v324;
  void (*v325)(char *, uint64_t);
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  id v329;
  char *v330;
  char *v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  void (*v337)(char *, uint64_t);
  uint64_t v338;
  char *v339;
  uint64_t v340;
  unsigned __int8 *v341;
  NSObject *v342;
  os_log_type_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  unint64_t v348;
  unint64_t v349;
  __n128 v350;
  uint64_t v351;
  void (*v352)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v353;
  uint64_t v354;
  uint64_t (*v355)(uint64_t, uint64_t, uint64_t);
  int v356;
  uint64_t v357;
  int v358;
  uint64_t v359;
  int v360;
  uint64_t v361;
  int v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  char v368;
  void (*v369)(uint64_t, uint64_t);
  NSObject *v370;
  void (*v371)(char *, uint64_t);
  uint64_t v372;
  uint64_t v373;
  char *v374;
  uint64_t v375;
  unint64_t v376;
  unint64_t v377;
  __n128 v378;
  char *v379;
  uint64_t v380;
  unsigned __int8 *v381;
  int v382;
  void (*v383)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v384;
  void (*v385)(char *, uint64_t, __n128);
  uint64_t v386;
  char *v387;
  char *v388;
  char *v389;
  uint64_t v390;
  char *v391;
  char *v392;
  uint64_t v393;
  char *v394;
  uint64_t v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  char *v399;
  char *v400;
  uint64_t v401;
  uint64_t v402;
  char *v403;
  char *v404;
  uint64_t v405;
  char *v406;
  uint64_t v407;
  char *v408;
  char *v409;
  char *v410;
  char *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  char *v415;
  void (*v416)(char *, char *, uint64_t);
  char *v417;
  char *v418;
  char *v419;
  uint64_t v420;
  uint64_t (*v421)(char *, uint64_t, uint64_t);
  uint64_t v422;
  char *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  char *v427;
  uint64_t v428;
  NSObject *v429;
  char *v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  char *v434;
  char *v435;
  char *v436;
  os_log_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  char v447[8];
  uint64_t v448;
  char v449[8];

  v395 = a2;
  v428 = sub_10004CFD4((uint64_t *)&unk_1009F1BC8);
  __chkstk_darwin(v428);
  v427 = (char *)&v381 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v389 = (char *)&v381 - v5;
  v433 = type metadata accessor for CurrentLocationController.StoredUpdate(0);
  v432 = *(_QWORD *)(v433 - 8);
  __chkstk_darwin(v433);
  v420 = (uint64_t)&v381 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009EA020);
  __chkstk_darwin(v7);
  v392 = (char *)&v381 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v393 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v401 = *(_QWORD *)(v393 - 8);
  __chkstk_darwin(v393);
  v400 = (char *)&v381 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v10);
  v399 = (char *)&v381 - v12;
  v398 = type metadata accessor for NSRunLoop.SchedulerTimeType(0, v11);
  v397 = *(_QWORD *)(v398 - 8);
  __chkstk_darwin(v398);
  v396 = (char *)&v381 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v439 = type metadata accessor for ContentMessage.CFIUpdate(0);
  v14 = *(_QWORD *)(v439 - 8);
  __chkstk_darwin(v439);
  v419 = (char *)&v381 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v387 = (char *)&v381 - v17;
  __chkstk_darwin(v18);
  v415 = (char *)&v381 - v19;
  __chkstk_darwin(v20);
  v403 = (char *)&v381 - v21;
  __chkstk_darwin(v22);
  v404 = (char *)&v381 - v23;
  __chkstk_darwin(v24);
  v391 = (char *)&v381 - v25;
  __chkstk_darwin(v26);
  v394 = (char *)&v381 - v27;
  v28 = sub_10004CFD4(&qword_1009F1BD8);
  __chkstk_darwin(v28);
  v426 = (uint64_t)&v381 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v390 = (uint64_t)&v381 - v31;
  __chkstk_darwin(v32);
  v405 = (uint64_t)&v381 - v33;
  v35 = __chkstk_darwin(v34);
  v408 = (char *)&v381 - v36;
  v414 = type metadata accessor for ContentMessage.CFIUpdate.Event(0, v35);
  v412 = *(_QWORD *)(v414 - 8);
  __chkstk_darwin(v414);
  v409 = (char *)&v381 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  v406 = (char *)&v381 - v39;
  __chkstk_darwin(v40);
  v411 = (char *)&v381 - v41;
  __chkstk_darwin(v42);
  v410 = (char *)&v381 - v43;
  v44 = sub_10004CFD4((uint64_t *)&unk_1009D23A0);
  __chkstk_darwin(v44);
  v413 = (uint64_t)&v381 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = type metadata accessor for Location(0);
  v437 = *(os_log_t *)(v46 - 8);
  v438 = v46;
  __chkstk_darwin(v46);
  v435 = (char *)&v381 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  v418 = (char *)&v381 - v49;
  __chkstk_darwin(v50);
  v423 = (char *)&v381 - v51;
  __chkstk_darwin(v52);
  v429 = ((char *)&v381 - v53);
  v54 = sub_10004CFD4(&qword_1009E8A40);
  __chkstk_darwin(v54);
  v430 = (char *)&v381 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_10004CFD4(&qword_1009E8A48);
  __chkstk_darwin(v56);
  v422 = (uint64_t)&v381 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v58);
  v436 = (char *)&v381 - v59;
  __chkstk_darwin(v60);
  v434 = (char *)&v381 - v61;
  __chkstk_darwin(v62);
  v386 = (uint64_t)&v381 - v63;
  __chkstk_darwin(v64);
  v402 = (uint64_t)&v381 - v65;
  __chkstk_darwin(v66);
  v388 = (char *)&v381 - v67;
  __chkstk_darwin(v68);
  v70 = (char *)&v381 - v69;
  v71 = type metadata accessor for CFIRange(0);
  v440 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v73 = (char *)&v381 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v74);
  v417 = (char *)&v381 - v75;
  __chkstk_darwin(v76);
  v78 = (char *)&v381 - v77;
  v80 = __chkstk_darwin(v79);
  v82 = (char *)&v381 - v81;
  v83 = a1;
  v84 = ContentMessage.CFIUpdate.range.getter(v80);
  v441 = v82;
  v85 = CFIRange.start.getter(v84);
  v87 = v86;
  v88 = String.cfiSpineIndex.getter(v85, v86);
  v90 = v89;
  v91 = swift_bridgeObjectRelease(v87);
  if ((v90 & 1) != 0)
  {
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v121 = type metadata accessor for Logger(0);
    sub_100048F64(v121, (uint64_t)qword_1009F1A00);
    v122 = v440;
    v123 = (*(uint64_t (**)(char *, char *, uint64_t))(v440 + 16))(v73, v441, v71);
    v124 = Logger.logObject.getter(v123);
    v125 = static os_log_type_t.error.getter(v124);
    if (os_log_type_enabled(v124, v125))
    {
      v126 = (uint8_t *)swift_slowAlloc(12, -1);
      v127 = swift_slowAlloc(32, -1);
      v431 = v71;
      v128 = v127;
      v442 = v127;
      *(_DWORD *)v126 = 136446210;
      v129 = CFIRange.start.getter(v127);
      v131 = v130;
      v132 = String.redactedCFI.getter(v129, v130);
      v134 = v133;
      swift_bridgeObjectRelease(v131);
      v446 = sub_100040F58(v132, v134, &v442);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447, v126 + 4, v126 + 12);
      v135 = swift_bridgeObjectRelease(v134);
      v136 = *(void (**)(char *, uint64_t, __n128))(v440 + 8);
      v137 = v431;
      v136(v73, v431, v135);
      _os_log_impl((void *)&_mh_execute_header, v124, v125, "Failed to get spineIndex from cfi.start %{public}s", v126, 0xCu);
      swift_arrayDestroy(v128, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v128, -1, -1);
      swift_slowDealloc(v126, -1, -1);

      return ((uint64_t (*)(char *, uint64_t))v136)(v441, v137);
    }
    else
    {

      v156 = *(void (**)(char *, uint64_t))(v122 + 8);
      v156(v73, v71);
      return ((uint64_t (*)(char *, uint64_t))v156)(v441, v71);
    }
  }
  v92 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v407 = v83;
  v93 = v439;
  v421 = v92;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v92)(v70, v83, v439, v91);
  v424 = v14;
  v94 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56);
  v94(v70, 0, 1, v93);
  v95 = (void *)v431;
  swift_beginAccess(v431 + OBJC_IVAR____TtC5Books25CurrentLocationController_cfiUpdatesByOrdinal, &v442, 33, 0);
  v425 = v88;
  sub_1004EFF8C((uint64_t)v70, v88);
  swift_endAccess(&v442);
  if (qword_1009CEAB0 != -1)
    swift_once(&qword_1009CEAB0, sub_100629668);
  v96 = type metadata accessor for Logger(0);
  v97 = sub_100048F64(v96, (uint64_t)qword_1009F1A00);
  v98 = v440;
  v99 = v71;
  v416 = *(void (**)(char *, char *, uint64_t))(v440 + 16);
  v416(v78, v441, v71);
  v100 = v95;
  v384 = v97;
  v101 = Logger.logObject.getter(v100);
  v105 = static os_log_type_t.debug.getter(v101, v102, v103, v104);
  v106 = v105;
  if (os_log_type_enabled(v101, v105))
  {
    v107 = swift_slowAlloc(22, -1);
    v383 = v94;
    v108 = v107;
    v431 = swift_slowAlloc(64, -1);
    v442 = v431;
    *(_DWORD *)v108 = 136315394;
    v109 = sub_100008DB0((unint64_t *)&unk_1009DB660, (uint64_t (*)(uint64_t))&type metadata accessor for CFIRange, (uint64_t)&protocol conformance descriptor for CFIRange);
    v382 = v106;
    v110 = dispatch thunk of CustomStringConvertible.description.getter(v71, v109);
    v112 = v111;
    v446 = sub_100040F58(v110, v111, &v442);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447, v108 + 4, v108 + 12);
    v113 = swift_bridgeObjectRelease(v112);
    v385 = *(void (**)(char *, uint64_t, __n128))(v98 + 8);
    v385(v78, v71, v113);
    *(_WORD *)(v108 + 12) = 2082;
    v115 = *(_QWORD *)&v100[OBJC_IVAR____TtC5Books25CurrentLocationController_bookEntity + 24];
    v114 = *(_QWORD *)&v100[OBJC_IVAR____TtC5Books25CurrentLocationController_bookEntity + 32];
    sub_10003F198(&v100[OBJC_IVAR____TtC5Books25CurrentLocationController_bookEntity], v115);
    v98 = v440;
    v116 = dispatch thunk of BookEntityType.sessionID.getter(v115, v114);
    v118 = v117;
    v446 = sub_100040F58(v116, v117, &v442);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v446, v447, v108 + 14, v108 + 22);

    swift_bridgeObjectRelease(v118);
    _os_log_impl((void *)&_mh_execute_header, v101, (os_log_type_t)v382, "#visibleCFI Received update of currentCFIInformation. Received: %s for:%{public}s", (uint8_t *)v108, 0x16u);
    v119 = v431;
    swift_arrayDestroy(v431, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v119, -1, -1);
    v120 = v108;
    v94 = v383;
    swift_slowDealloc(v120, -1, -1);

  }
  else
  {
    v385 = *(void (**)(char *, uint64_t, __n128))(v98 + 8);
    ((void (*)(char *, uint64_t))v385)(v78, v71);

  }
  v139 = (uint64_t)v434;
  v140 = v425;
  v141 = (uint64_t)v430;
  v416(v430, v441, v99);
  v142 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v98 + 56);
  v431 = v99;
  v142(v141, 0, 1, v99);
  swift_beginAccess(&v100[OBJC_IVAR____TtC5Books25CurrentLocationController_cfiByOrdinal], &v442, 33, 0);
  sub_1004F0164(v141, v140);
  swift_endAccess(&v442);
  v143 = sub_100629BC8();
  v144 = CFIRange.start.getter(v143);
  v146 = v145;
  v147 = *(_QWORD *)&v100[OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider];
  v148 = type metadata accessor for CurrentLocationProvider(0);
  v149 = sub_100008DB0((unint64_t *)&unk_1009F1BE0, type metadata accessor for CurrentLocationProvider, (uint64_t)&unk_100712AA0);
  v440 = v147;
  v151 = LocationProviding.readingLocationCFI.getter(v148, v149, v150);
  v153 = v152;
  v154 = v439;
  v430 = (char *)v144;
  if (v151 != v144 || v152 != v146)
  {
    v157 = _stringCompareWithSmolCheck(_:_:expecting:)(v151, v152, v144, v146, 0);
    v155 = swift_bridgeObjectRelease(v153);
    if ((v157 & 1) != 0)
      goto LABEL_22;
    v158 = v429;
    v159 = CurrentValueSubject.value.getter(v429);
    v160 = Location.documentOrdinal.getter(v159);
    isa = v437[1].isa;
    v139 = (uint64_t)v434;
    ((void (*)(NSObject *, uint64_t))isa)(v158, v438);
    if (v425 != v160)
      goto LABEL_22;
    v162 = v429;
    v163 = CurrentValueSubject.value.getter(v429);
    v164 = Location.hasRequestedLocation.getter(v163);
    ((void (*)(NSObject *, uint64_t))isa)(v162, v438);
    if ((v164 & 1) != 0)
      goto LABEL_22;
    v165 = v440 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation;
    swift_beginAccess(v440 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation, &v446, 0, 0);
    v166 = v413;
    sub_10000B5E4(v165, v413, (uint64_t *)&unk_1009D23A0);
    LODWORD(v165) = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v437[6].isa)(v166, 1, v438);
    v167 = sub_100010960(v166, (uint64_t *)&unk_1009D23A0);
    if ((_DWORD)v165 != 1)
      goto LABEL_22;
    v438 = v146;
    ContentMessage.CFIUpdate.event.getter(v167);
    v168 = *(void (**)(char *, _QWORD, uint64_t))(v412 + 104);
    v169 = v414;
    v168(v411, enum case for ContentMessage.CFIUpdate.Event.load(_:), v414);
    v170 = sub_100008DB0((unint64_t *)&unk_1009F1C00, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate.Event, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate.Event);
    dispatch thunk of RawRepresentable.rawValue.getter(&v442, v169, v170);
    dispatch thunk of RawRepresentable.rawValue.getter(&v444, v169, v170);
    v171 = v443;
    v172 = v445;
    if (v442 == v444 && v443 == v445)
    {
      v173 = v100;
      v174 = 1;
      v172 = v443;
    }
    else
    {
      v173 = v100;
      v174 = _stringCompareWithSmolCheck(_:_:expecting:)(v442, v443, v444, v445, 0);
    }
    swift_bridgeObjectRelease(v171);
    v246 = swift_bridgeObjectRelease(v172);
    v247 = *(void (**)(char *, uint64_t, __n128))(v412 + 8);
    v248 = v414;
    v247(v411, v414, v246);
    v249 = ((uint64_t (*)(char *, uint64_t))v247)(v410, v248);
    if ((v174 & 1) != 0 && (v173[OBJC_IVAR____TtC5Books25CurrentLocationController_sendStoredUpdate] & 1) == 0)
    {
      v290 = swift_bridgeObjectRelease(v438);
      v291 = (uint64_t)v408;
      v292 = v407;
      v293 = v421;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v421)(v408, v407, v154, v290);
      v294 = v433;
      sub_10000B5E4(v395, v291 + *(int *)(v433 + 20), &qword_1009D2AC8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v432 + 56))(v291, 0, 1, v294);
      v295 = v173;
      v296 = (uint64_t)&v173[OBJC_IVAR____TtC5Books25CurrentLocationController_storedUpdate];
      swift_beginAccess(&v173[OBJC_IVAR____TtC5Books25CurrentLocationController_storedUpdate], &v442, 33, 0);
      sub_10000B558(v291, v296, &qword_1009F1BD8);
      swift_endAccess(&v442);
      v297 = v394;
      v298 = v293(v394, v292, v154);
      v299 = Logger.logObject.getter(v298);
      v300 = static os_log_type_t.default.getter(v299);
      if (os_log_type_enabled(v299, v300))
      {
        v301 = (uint8_t *)swift_slowAlloc(12, -1);
        v302 = swift_slowAlloc(32, -1);
        v442 = v302;
        v381 = (unsigned __int8 *)v173;
        *(_DWORD *)v301 = 136315138;
        v303 = sub_100008DB0((unint64_t *)&unk_1009F1BF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
        v304 = dispatch thunk of CustomStringConvertible.description.getter(v154, v303);
        v306 = v305;
        v444 = sub_100040F58(v304, v305, &v442);
        v295 = v381;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v444, &v445, v301 + 4, v301 + 12);
        v307 = swift_bridgeObjectRelease(v306);
        (*(void (**)(char *, uint64_t, __n128))(v424 + 8))(v297, v154, v307);
        swift_arrayDestroy(v302, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v302, -1, -1);
        swift_slowDealloc(v301, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v424 + 8))(v297, v154);
      }

      v326 = v431;
      v327 = v393;
      v328 = (uint64_t)v392;
      v329 = objc_msgSend((id)objc_opt_self(NSRunLoop), "currentRunLoop");
      v330 = v396;
      NSRunLoop.now.getter();
      v331 = v399;
      v332 = static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)(25);
      v333 = v400;
      NSRunLoop.minimumTolerance.getter(v332);
      v334 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v334 - 8) + 56))(v328, 1, 1, v334);
      v335 = swift_allocObject(&unk_100919100, 32, 7);
      *(_QWORD *)(v335 + 16) = v295;
      *(_QWORD *)(v335 + 24) = 25;
      v336 = v295;
      NSRunLoop.schedule(after:interval:tolerance:options:_:)(&v442, v330, v331, v333, v328, sub_10063756C, v335);
      swift_release(v335);
      sub_100010960(v328, &qword_1009EA020);
      v337 = *(void (**)(char *, uint64_t))(v401 + 8);
      v337(v333, v327);
      v337(v331, v327);
      (*(void (**)(char *, uint64_t))(v397 + 8))(v330, v398);
      v338 = (uint64_t)&v336[OBJC_IVAR____TtC5Books25CurrentLocationController_sendTimer];
      swift_beginAccess(&v336[OBJC_IVAR____TtC5Books25CurrentLocationController_sendTimer], &v444, 33, 0);
      sub_10000B558((uint64_t)&v442, v338, &qword_1009D6260);
      swift_endAccess(&v444);

      v243 = v441;
      v244 = v326;
      return ((uint64_t (*)(char *, uint64_t))v385)(v243, v244);
    }
    v250 = v406;
    v251 = v407;
    ContentMessage.CFIUpdate.event.getter(v249);
    v252 = v414;
    v168(v409, enum case for ContentMessage.CFIUpdate.Event.scroll(_:), v414);
    dispatch thunk of RawRepresentable.rawValue.getter(&v442, v252, v170);
    dispatch thunk of RawRepresentable.rawValue.getter(&v444, v252, v170);
    v253 = v443;
    v254 = v445;
    if (v442 == v444 && v443 == v445)
    {
      v255 = swift_bridgeObjectRelease_n(v443, 2);
      v256 = v414;
      v247(v409, v414, v255);
      ((void (*)(char *, uint64_t))v247)(v250, v256);
      v257 = v431;
      v258 = (unsigned __int8 *)v173;
    }
    else
    {
      v259 = _stringCompareWithSmolCheck(_:_:expecting:)(v442, v443, v444, v445, 0);
      swift_bridgeObjectRelease(v253);
      v260 = swift_bridgeObjectRelease(v254);
      v261 = v414;
      v247(v409, v414, v260);
      ((void (*)(char *, uint64_t))v247)(v250, v261);
      v257 = v431;
      v258 = (unsigned __int8 *)v173;
      if ((v259 & 1) == 0)
      {
        v262 = OBJC_IVAR____TtC5Books25CurrentLocationController_sendStoredUpdate;
        if (v173[OBJC_IVAR____TtC5Books25CurrentLocationController_sendStoredUpdate] != 1)
        {
          v339 = v387;
          v340 = v439;
          v421(v387, v251, v439);
          v341 = v258;
          v342 = Logger.logObject.getter(v341);
          v343 = static os_log_type_t.default.getter(v342);
          if (os_log_type_enabled(v342, v343))
          {
            v344 = swift_slowAlloc(18, -1);
            v345 = swift_slowAlloc(32, -1);
            v442 = v345;
            *(_DWORD *)v344 = 136315394;
            v437 = (os_log_t)(v344 + 4);
            v346 = sub_100008DB0((unint64_t *)&unk_1009F1BF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
            v347 = dispatch thunk of CustomStringConvertible.description.getter(v340, v346);
            v349 = v348;
            v444 = sub_100040F58(v347, v348, &v442);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v444, &v445, v437, v344 + 12);
            v350 = swift_bridgeObjectRelease(v349);
            (*(void (**)(char *, uint64_t, __n128))(v424 + 8))(v339, v340, v350);
            *(_WORD *)(v344 + 12) = 1024;
            LODWORD(v349) = v258[v262];

            LODWORD(v444) = v349;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v444, (char *)&v444 + 4, v344 + 14, v344 + 18);

            _os_log_impl((void *)&_mh_execute_header, v342, v343, "Fallthrough all cases - cfiUpdate: %s sendStoredUpdate: %{BOOL}d", (uint8_t *)v344, 0x12u);
            swift_arrayDestroy(v345, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v345, -1, -1);
            swift_slowDealloc(v344, -1, -1);

          }
          else
          {

            (*(void (**)(char *, uint64_t))(v424 + 8))(v339, v340);
          }
          v364 = v438;
          sub_1002169A0((uint64_t)v430, v438);
          sub_100216CD8();
          v224 = v364;
          goto LABEL_36;
        }
      }
    }
    v383 = v94;
    v263 = &v258[OBJC_IVAR____TtC5Books25CurrentLocationController_storedUpdate];
    swift_beginAccess(&v258[OBJC_IVAR____TtC5Books25CurrentLocationController_storedUpdate], &v442, 0, 0);
    v264 = v405;
    sub_10000B5E4((uint64_t)v263, v405, &qword_1009F1BD8);
    v265 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v432 + 48);
    v266 = v265(v264, 1, v433);
    sub_100010960(v264, &qword_1009F1BD8);
    v267 = &unk_1009F1000;
    v268 = OBJC_IVAR____TtC5Books25CurrentLocationController_sendStoredUpdate;
    if (v266 == 1)
    {
      v269 = (uint64_t)v408;
      if (!v258[OBJC_IVAR____TtC5Books25CurrentLocationController_sendStoredUpdate])
        goto LABEL_82;
    }
    else
    {
      v269 = (uint64_t)v408;
      if ((v258[OBJC_IVAR____TtC5Books25CurrentLocationController_sendStoredUpdate] & 1) == 0)
      {
        v308 = v391;
        v309 = v439;
        v421(v391, v251, v439);
        v310 = v258;
        v311 = Logger.logObject.getter(v310);
        v312 = v258;
        v313 = static os_log_type_t.default.getter(v311);
        if (os_log_type_enabled(v311, v313))
        {
          v314 = swift_slowAlloc(18, -1);
          v315 = swift_slowAlloc(32, -1);
          v444 = v315;
          *(_DWORD *)v314 = 136315394;
          v381 = v312;
          v316 = sub_100008DB0((unint64_t *)&unk_1009F1BF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
          v437 = v311;
          v317 = dispatch thunk of CustomStringConvertible.description.getter(v309, v316);
          v319 = v318;
          v448 = sub_100040F58(v317, v318, &v444);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v448, v449, v314 + 4, v314 + 12);
          v320 = swift_bridgeObjectRelease(v319);
          (*(void (**)(char *, uint64_t, __n128))(v424 + 8))(v308, v309, v320);
          *(_WORD *)(v314 + 12) = 1024;
          v321 = v381;
          LODWORD(v319) = v381[v268];

          LODWORD(v448) = v319;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v448, (char *)&v448 + 4, v314 + 14, v314 + 18);

          v322 = v437;
          _os_log_impl((void *)&_mh_execute_header, v437, v313, "Clearing stored & resetting sending of stored update CFIUpdate: %s sendStoredUpdate: %{BOOL}d", (uint8_t *)v314, 0x12u);
          swift_arrayDestroy(v315, 1, (char *)&type metadata for Any + 8);
          v323 = v315;
          v269 = (uint64_t)v408;
          swift_slowDealloc(v323, -1, -1);
          v324 = v314;
          v257 = v431;
          swift_slowDealloc(v324, -1, -1);

          v258 = v321;
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v424 + 8))(v308, v309);
          v258 = v312;
        }
        v267 = (_QWORD *)&unk_1009F1000;
        goto LABEL_82;
      }
    }
    v437 = v263;
    v270 = v404;
    v271 = v251;
    v272 = v251;
    v273 = v439;
    v274 = (void (*)(char *, uint64_t, uint64_t))v421;
    v421(v404, v271, v439);
    v275 = v403;
    v274(v403, v272, v273);
    v276 = v258;
    v277 = Logger.logObject.getter(v276);
    v278 = static os_log_type_t.default.getter(v277);
    if (!os_log_type_enabled(v277, (os_log_type_t)v278))
    {
      v325 = *(void (**)(char *, uint64_t))(v424 + 8);
      v325(v270, v273);

      v325(v275, v273);
      v257 = v431;
LABEL_81:
      v269 = (uint64_t)v408;
      v267 = &unk_1009F1000;
      v263 = v437;
LABEL_82:
      v258[v267[335]] = 0;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v432 + 56))(v269, 1, 1, v433);
      swift_beginAccess(v263, &v444, 33, 0);
      sub_10000B558(v269, (uint64_t)v263, &qword_1009F1BD8);
      swift_endAccess(&v444);
      sub_100635948((uint64_t)v258);
      v380 = v438;
      sub_1002169A0((uint64_t)v430, v438);
      sub_100216CD8();
      swift_bridgeObjectRelease(v380);
      v243 = v441;
      v244 = v257;
      return ((uint64_t (*)(_QWORD, _QWORD))v385)(v243, v244);
    }
    v429 = v277;
    v279 = (_DWORD *)swift_slowAlloc(18, -1);
    v280 = swift_slowAlloc(32, -1);
    v444 = v280;
    *v279 = 67109378;
    v281 = v390;
    sub_10000B5E4((uint64_t)v437, v390, &qword_1009F1BD8);
    v282 = v265(v281, 1, v433);
    v436 = (char *)v279;
    LODWORD(v435) = v278;
    v434 = (char *)v280;
    if (v282)
    {
      sub_100010960(v281, &qword_1009F1BD8);
      v283 = 1;
      v284 = v439;
      v285 = v428;
      v286 = (uint64_t)v389;
      v287 = v404;
      v288 = (void (*)(uint64_t, char *, uint64_t))v421;
      v289 = (uint64_t)v388;
    }
    else
    {
      v351 = v420;
      sub_1006374C8(v281, v420);
      sub_100010960(v281, &qword_1009F1BD8);
      v289 = (uint64_t)v388;
      v284 = v439;
      v288 = (void (*)(uint64_t, char *, uint64_t))v421;
      v421(v388, v351, v439);
      sub_10063750C(v351);
      v283 = 0;
      v285 = v428;
      v286 = (uint64_t)v389;
      v287 = v404;
    }
    v352 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v383;
    v383((char *)v289, v283, 1, v284);
    v353 = v402;
    v288(v402, v287, v284);
    v352(v353, 0, 1, v284);
    v354 = v286 + *(int *)(v285 + 48);
    sub_10000B5E4(v289, v286, &qword_1009E8A48);
    sub_10000B5E4(v353, v354, &qword_1009E8A48);
    v355 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v424 + 48);
    v356 = v355(v286, 1, v284);
    v357 = v289;
    v381 = v258;
    if (v356 == 1)
    {
      v358 = v355(v354, 1, v284);
      v359 = (uint64_t)v436;
      if (v358 == 1)
      {
        sub_100010960(v286, &qword_1009E8A48);
        v360 = 1;
LABEL_76:
        v363 = v424;
LABEL_80:
        v370 = v429;
        sub_100010960(v402, &qword_1009E8A48);
        sub_100010960(v357, &qword_1009E8A48);
        v371 = *(void (**)(char *, uint64_t))(v363 + 8);
        v372 = v439;
        v371(v404, v439);
        LODWORD(v448) = v360;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v448, (char *)&v448 + 4, v359 + 4, v359 + 8);

        *(_WORD *)(v359 + 8) = 2080;
        v373 = sub_100008DB0((unint64_t *)&unk_1009F1BF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
        v374 = v403;
        v375 = dispatch thunk of CustomStringConvertible.description.getter(v372, v373);
        v377 = v376;
        v448 = sub_100040F58(v375, v376, &v444);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v448, v449, v359 + 10, v359 + 18);
        v378 = swift_bridgeObjectRelease(v377);
        ((void (*)(char *, uint64_t, __n128))v371)(v374, v372, v378);
        _os_log_impl((void *)&_mh_execute_header, v370, (os_log_type_t)v435, "Possibly sending stored update - storedUpdate == cfiUpdate = %{BOOL}d cfiUpdate: %s", (uint8_t *)v359, 0x12u);
        v379 = v434;
        swift_arrayDestroy(v434, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v379, -1, -1);
        swift_slowDealloc(v359, -1, -1);

        v257 = v431;
        v258 = v381;
        goto LABEL_81;
      }
    }
    else
    {
      v361 = v386;
      sub_10000B5E4(v286, v386, &qword_1009E8A48);
      v362 = v355(v354, 1, v284);
      v359 = (uint64_t)v436;
      if (v362 != 1)
      {
        v363 = v424;
        v365 = v286;
        v366 = v415;
        (*(void (**)(char *, uint64_t, uint64_t))(v424 + 32))(v415, v354, v284);
        v367 = sub_100008DB0(&qword_1009E3080, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
        v368 = dispatch thunk of static Equatable.== infix(_:_:)(v361, v366, v284, v367);
        v369 = *(void (**)(uint64_t, uint64_t))(v363 + 8);
        v369(v361, v284);
        v369((uint64_t)v366, v284);
        sub_100010960(v365, &qword_1009E8A48);
        v360 = v368 & 1;
        goto LABEL_80;
      }
      (*(void (**)(uint64_t, uint64_t))(v424 + 8))(v361, v284);
    }
    sub_100010960(v286, (uint64_t *)&unk_1009F1BC8);
    v360 = 0;
    goto LABEL_76;
  }
  v155 = swift_bridgeObjectRelease(v146);
LABEL_22:
  v175 = v407;
  v176 = v421;
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v421)(v139, v407, v154, v155);
  v94((char *)v139, 0, 1, v154);
  v177 = (uint64_t)&v100[OBJC_IVAR____TtC5Books25CurrentLocationController_storedUpdate];
  swift_beginAccess(&v100[OBJC_IVAR____TtC5Books25CurrentLocationController_storedUpdate], &v442, 0, 0);
  v178 = v426;
  sub_10000B5E4(v177, v426, &qword_1009F1BD8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v432 + 48))(v178, 1, v433))
  {
    sub_100010960(v178, &qword_1009F1BD8);
    v179 = 1;
    v180 = v428;
    v181 = (uint64_t)v427;
    v182 = (uint64_t)v436;
  }
  else
  {
    v183 = v420;
    sub_1006374C8(v178, v420);
    sub_100010960(v178, &qword_1009F1BD8);
    v182 = (uint64_t)v436;
    v176(v436, v183, v154);
    sub_10063750C(v183);
    v179 = 0;
    v180 = v428;
    v181 = (uint64_t)v427;
  }
  v94((char *)v182, v179, 1, v154);
  v184 = v181 + *(int *)(v180 + 48);
  sub_10000B5E4(v139, v181, &qword_1009E8A48);
  sub_10000B5E4(v182, v184, &qword_1009E8A48);
  v185 = v182;
  v186 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v424 + 48);
  v187 = v186(v181, 1, v154);
  v188 = v435;
  if (v187 == 1)
  {
    sub_100010960(v185, &qword_1009E8A48);
    sub_100010960(v139, &qword_1009E8A48);
    if (v186(v184, 1, v154) == 1)
    {
      sub_100010960(v181, &qword_1009E8A48);
      v189 = (void (*)(char *, uint64_t, uint64_t))v421;
      goto LABEL_32;
    }
  }
  else
  {
    v190 = v422;
    sub_10000B5E4(v181, v422, &qword_1009E8A48);
    if (v186(v184, 1, v154) != 1)
    {
      v191 = v424;
      v192 = v139;
      v193 = v415;
      (*(void (**)(char *, uint64_t, uint64_t))(v424 + 32))(v415, v184, v154);
      v194 = sub_100008DB0(&qword_1009E3080, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
      v195 = dispatch thunk of static Equatable.== infix(_:_:)(v190, v193, v154, v194);
      v196 = *(void (**)(char *, uint64_t))(v191 + 8);
      v197 = v193;
      v189 = (void (*)(char *, uint64_t, uint64_t))v421;
      v196(v197, v154);
      sub_100010960((uint64_t)v436, &qword_1009E8A48);
      sub_100010960(v192, &qword_1009E8A48);
      v196((char *)v190, v154);
      v188 = v435;
      sub_100010960(v181, &qword_1009E8A48);
      if ((v195 & 1) != 0)
      {
LABEL_32:
        swift_bridgeObjectRelease(v146);
        v198 = v423;
        CurrentValueSubject.value.getter(v423);
        v199 = v419;
        v189(v419, v175, v154);
        v201 = v437;
        v200 = v438;
        v202 = v437[2].isa;
        v203 = v418;
        ((void (*)(char *, char *, uint64_t))v202)(v418, v198, v438);
        v204 = ((uint64_t (*)(char *, char *, uint64_t))v202)(v188, v198, v200);
        v205 = Logger.logObject.getter(v204);
        v206 = static os_log_type_t.error.getter(v205);
        if (os_log_type_enabled(v205, v206))
        {
          v207 = swift_slowAlloc(28, -1);
          v208 = swift_slowAlloc(32, -1);
          v444 = v208;
          *(_DWORD *)v207 = 136315650;
          v209 = sub_100008DB0((unint64_t *)&unk_1009F1BF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
          v210 = dispatch thunk of CustomStringConvertible.description.getter(v154, v209);
          v212 = v211;
          v448 = sub_100040F58(v210, v211, &v444);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v448, v449, v207 + 4, v207 + 12);
          v213 = swift_bridgeObjectRelease(v212);
          v214 = (*(uint64_t (**)(char *, uint64_t, __n128))(v424 + 8))(v199, v154, v213);
          *(_WORD *)(v207 + 12) = 2048;
          v215 = Location.documentOrdinal.getter(v214);
          v216 = v438;
          v217 = v437[1].isa;
          ((void (*)(char *, uint64_t))v217)(v203, v438);
          v448 = v215;
          v218 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v448, v449, v207 + 14, v207 + 22);
          *(_WORD *)(v207 + 22) = 1024;
          v219 = v435;
          v220 = Location.hasRequestedLocation.getter(v218) & 1;
          ((void (*)(char *, uint64_t))v217)(v219, v216);
          LODWORD(v448) = v220;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v448, (char *)&v448 + 4, v207 + 24, v207 + 28);
          _os_log_impl((void *)&_mh_execute_header, v205, v206, "Our cfiUpdate was our stored update however we were not setup to send our stored update!\n    cfiUpdate: %s\n    currentOrdinal: %ld\n    requestedLocation: %{BOOL}d", (uint8_t *)v207, 0x1Cu);
          swift_arrayDestroy(v208, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v208, -1, -1);
          swift_slowDealloc(v207, -1, -1);

          ((void (*)(char *, uint64_t))v217)(v423, v216);
        }
        else
        {
          v242 = (void (*)(char *, uint64_t))v201[1].isa;
          v242(v188, v200);
          v242(v203, v200);

          (*(void (**)(char *, uint64_t))(v424 + 8))(v199, v154);
          v242(v198, v200);
        }
        goto LABEL_40;
      }
      goto LABEL_34;
    }
    sub_100010960((uint64_t)v436, &qword_1009E8A48);
    sub_100010960(v139, &qword_1009E8A48);
    (*(void (**)(uint64_t, uint64_t))(v424 + 8))(v190, v154);
  }
  sub_100010960(v181, (uint64_t *)&unk_1009F1BC8);
LABEL_34:
  v221 = v429;
  v222 = CurrentValueSubject.value.getter(v429);
  v223 = Location.documentOrdinal.getter(v222);
  ((void (*)(NSObject *, uint64_t))v437[1].isa)(v221, v438);
  if (v425 == v223)
  {
    sub_1002169A0((uint64_t)v430, v146);
    v224 = v146;
LABEL_36:
    swift_bridgeObjectRelease(v224);
LABEL_40:
    v243 = v441;
    v244 = v431;
    return ((uint64_t (*)(_QWORD, _QWORD))v385)(v243, v244);
  }
  v225 = swift_bridgeObjectRelease(v146);
  v226 = v417;
  v227 = v431;
  v228 = ((uint64_t (*)(char *, char *, uint64_t, __n128))v416)(v417, v441, v431, v225);
  v229 = Logger.logObject.getter(v228);
  v233 = static os_log_type_t.debug.getter(v229, v230, v231, v232);
  if (os_log_type_enabled(v229, v233))
  {
    v234 = (uint8_t *)swift_slowAlloc(12, -1);
    v235 = swift_slowAlloc(32, -1);
    v444 = v235;
    *(_DWORD *)v234 = 136315138;
    v236 = sub_100008DB0((unint64_t *)&unk_1009DB660, (uint64_t (*)(uint64_t))&type metadata accessor for CFIRange, (uint64_t)&protocol conformance descriptor for CFIRange);
    v237 = dispatch thunk of CustomStringConvertible.description.getter(v227, v236);
    v239 = v238;
    v448 = sub_100040F58(v237, v238, &v444);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v448, v449, v234 + 4, v234 + 12);
    v240 = swift_bridgeObjectRelease(v239);
    v241 = (uint64_t (*)(char *, uint64_t))v385;
    v385(v226, v227, v240);
    _os_log_impl((void *)&_mh_execute_header, v229, v233, "#visibleCFI Ordinal Mismatch - Ignoring: %s", v234, 0xCu);
    swift_arrayDestroy(v235, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v235, -1, -1);
    swift_slowDealloc(v234, -1, -1);

    return v241(v441, v227);
  }
  else
  {

    v245 = (uint64_t (*)(char *, uint64_t))v385;
    ((void (*)(char *, uint64_t))v385)(v226, v227);
    return v245(v441, v227);
  }
}

uint64_t sub_100631EE4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_100631EEC(a1, a2, a3 & 1, a4);
}

uint64_t sub_100631EEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t updated;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  os_log_type_t v82;
  _BOOL4 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  __n128 v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t ObjectType;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint8_t *v106;
  char *v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  char *v111;
  uint8_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  __n128 v118;
  void (*v119)(uint8_t *, uint64_t);
  char *v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  void (*v129)(char *, uint64_t, uint64_t, uint64_t);
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint8_t *v133;
  char *v134;
  uint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  uint8_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  __n128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint8_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint8_t *v152;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  uint8_t *v164;
  char *v165;
  uint64_t v166;
  uint8_t *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  void (*v177)(char *, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t (*v180)(char *, char *, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;

  v160 = a4;
  v178 = a1;
  v179 = a2;
  v169 = type metadata accessor for PageLocation(0);
  v159 = *(_QWORD *)(v169 - 8);
  __chkstk_darwin(v169);
  v162 = (char *)&v154 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v7);
  v168 = (char *)&v154 - v9;
  updated = type metadata accessor for UpdateReason(0, v8);
  v171 = *(_QWORD *)(updated - 8);
  v172 = updated;
  __chkstk_darwin(updated);
  v170 = (char *)&v154 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v12);
  v166 = (uint64_t)&v154 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  __chkstk_darwin(v14);
  v165 = (char *)&v154 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009F1BB0);
  __chkstk_darwin(v16);
  v158 = (char *)&v154 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v163 = (char *)&v154 - v19;
  v20 = sub_10004CFD4(&qword_1009D2F38);
  __chkstk_darwin(v20);
  v156 = (char *)&v154 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v154 - v23;
  v25 = type metadata accessor for Location(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v161 = (char *)&v154 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v167 = (uint8_t *)&v154 - v29;
  __chkstk_darwin(v30);
  v157 = (char *)&v154 - v31;
  __chkstk_darwin(v32);
  v164 = (uint8_t *)&v154 - v33;
  __chkstk_darwin(v34);
  v174 = (char *)&v154 - v35;
  __chkstk_darwin(v36);
  v38 = (char *)&v154 - v37;
  __chkstk_darwin(v39);
  v41 = (char *)&v154 - v40;
  __chkstk_darwin(v42);
  v44 = (char *)&v154 - v43;
  __chkstk_darwin(v45);
  v47 = (char *)&v154 - v46;
  __chkstk_darwin(v48);
  v50 = (char *)&v154 - v49;
  v176 = v4;
  CurrentValueSubject.value.getter((uint64_t *)((char *)&v154 - v49));
  v51 = *(uint64_t (**)(char *, char *, uint64_t))(v26 + 16);
  v52 = v51(v47, v50, v25);
  v180 = v51;
  v175 = v50;
  if ((a3 & 1) != 0)
  {
    v54 = Location.pageOffset.getter(v52);
    v53 = *(void (**)(char *, uint64_t))(v26 + 8);
    v53(v47, v25);
    if (v54 >= 1)
    {
      if (qword_1009CEAB0 != -1)
        swift_once(&qword_1009CEAB0, sub_100629668);
      v55 = type metadata accessor for Logger(0);
      sub_100048F64(v55, (uint64_t)qword_1009F1A00);
      v56 = v180(v44, v50, v25);
      v57 = Logger.logObject.getter(v56);
      v58 = static os_log_type_t.default.getter(v57);
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc(12, -1);
        v177 = v53;
        *(_DWORD *)v59 = 134217984;
        v179 = (uint64_t)(v59 + 4);
        v60 = Location.pageOffset.getter(v59);
        v177(v44, v25);
        v182 = v60;
        v53 = v177;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v182, &v183, v179, v59 + 12);
        v61 = v59;
        v50 = v175;
        swift_slowDealloc(v61, -1, -1);
      }
      else
      {
        v53(v44, v25);
      }

    }
    v62 = v180(v41, v50, v25);
    v179 = Location.pageOffset.getter(v62);
  }
  else
  {
    v53 = *(void (**)(char *, uint64_t))(v26 + 8);
    v53(v47, v25);
    v51(v41, v50, v25);
  }
  v63 = ((uint64_t (*)(char *, uint64_t))v53)(v41, v25);
  Location.requestedCFI.getter(v63);
  v64 = type metadata accessor for Location.CFIRequest(0);
  v65 = *(_QWORD *)(v64 - 8);
  v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48))(v24, 1, v64);
  v155 = v64;
  v173 = v65;
  if (v66 == 1)
  {
    sub_100010960((uint64_t)v24, &qword_1009D2F38);
    v67 = v180(v38, v50, v25);
  }
  else
  {
    v68 = Location.CFIRequest.location.getter();
    v70 = v69;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v64);
    v71 = (void (*)(char *, char *, uint64_t))v180;
    v67 = v180(v38, v50, v25);
    if (v70)
      goto LABEL_18;
  }
  v72 = (uint64_t)v163;
  Location.requestedAnchor.getter(v67);
  v73 = type metadata accessor for Location.AnchorRequest(0);
  v74 = *(_QWORD *)(v73 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73) == 1)
  {
    sub_100010960(v72, &qword_1009F1BB0);
    v70 = 0x80000001007DA6B0;
    v68 = 0xD000000000000016;
  }
  else
  {
    v68 = Location.AnchorRequest.location.getter();
    v75 = v72;
    v70 = v76;
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v75, v73);
  }
  v71 = (void (*)(char *, char *, uint64_t))v180;
LABEL_18:
  v53(v38, v25);
  v77 = v174;
  if (qword_1009CEAB0 != -1)
    swift_once(&qword_1009CEAB0, sub_100629668);
  v78 = type metadata accessor for Logger(0);
  v79 = sub_100048F64(v78, (uint64_t)qword_1009F1A00);
  v71(v77, v50, v25);
  swift_bridgeObjectRetain(v70);
  v81 = Logger.logObject.getter(v80);
  v82 = static os_log_type_t.default.getter(v81);
  v83 = os_log_type_enabled(v81, v82);
  v177 = v53;
  v163 = (char *)v79;
  if (v83)
  {
    v84 = swift_slowAlloc(42, -1);
    v85 = swift_slowAlloc(64, -1);
    v182 = v85;
    *(_DWORD *)v84 = 136315906;
    swift_bridgeObjectRetain(v70);
    v181 = sub_100040F58(v68, v70, &v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v181, &v182, v84 + 4, v84 + 12);
    swift_bridgeObjectRelease_n(v70, 3);
    *(_WORD *)(v84 + 12) = 2050;
    v181 = v178;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v181, &v182, v84 + 14, v84 + 22);
    *(_WORD *)(v84 + 22) = 2050;
    v181 = v179;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v181, &v182, v84 + 24, v84 + 32);
    *(_WORD *)(v84 + 32) = 2080;
    v86 = sub_100008DB0(&qword_1009D2F10, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
    v87 = dispatch thunk of CustomStringConvertible.description.getter(v25, v86);
    v89 = v88;
    v181 = sub_100040F58(v87, v88, &v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v181, &v182, v84 + 34, v84 + 42);
    v90 = swift_bridgeObjectRelease(v89);
    ((void (*)(char *, uint64_t, __n128))v53)(v77, v25, v90);
    _os_log_impl((void *)&_mh_execute_header, v81, v82, "#requestedLoc CurrentLocationController Received Fulfilled %s destOrdinal: %{public}ld destPage:%{public}ld currentLocation:%s", (uint8_t *)v84, 0x2Au);
    swift_arrayDestroy(v85, 2, (char *)&type metadata for Any + 8);
    v91 = v85;
    v50 = v175;
    swift_slowDealloc(v91, -1, -1);
    swift_slowDealloc(v84, -1, -1);
  }
  else
  {
    v92 = swift_bridgeObjectRelease_n(v70, 2);
    ((void (*)(char *, uint64_t, __n128))v53)(v77, v25, v92);
  }

  v93 = *(_QWORD *)(v176 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
  ObjectType = swift_getObjectType();
  v95 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v93);
  v97 = v96;
  v98 = swift_getObjectType();
  v99 = dispatch thunk of BookContentLayoutProviding.layout.getter(v98, v97);
  *(_QWORD *)&v100 = swift_unknownObjectRelease(v95).n128_u64[0];
  v101 = BEBookLayoutMode.isScroll.getter(v99, v100);
  v102 = v173;
  if ((v101 & 1) != 0)
  {
    v103 = sub_10004CFD4(&qword_1009D2F18);
    v104 = v165;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v165, 1, 1, v103);
    v105 = v166;
    sub_10000B5E4(v160, v166, &qword_1009D2AC8);
    v106 = v164;
    Location.init(documentOrdinal:pageOffset:locationOffset:requestedAnchorFragment:requestedCFI:requestedSurroundingContext:requestedLocationRect:isRequestedPageChange:)(v178, v179, v104, 0, 0, 0, 0, v105, 0.0, 1);
    v107 = v157;
    v108 = v180(v157, (char *)v106, v25);
    v109 = Logger.logObject.getter(v108);
    v110 = static os_log_type_t.info.getter(v109);
    if (os_log_type_enabled(v109, v110))
    {
      v111 = v107;
      v112 = (uint8_t *)swift_slowAlloc(12, -1);
      v113 = swift_slowAlloc(32, -1);
      v182 = v113;
      *(_DWORD *)v112 = 136315138;
      v114 = sub_100008DB0(&qword_1009D2F10, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
      v115 = dispatch thunk of CustomStringConvertible.description.getter(v25, v114);
      v117 = v116;
      v181 = sub_100040F58(v115, v116, &v182);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v181, &v182, v112 + 4, v112 + 12);
      v118 = swift_bridgeObjectRelease(v117);
      v119 = (void (*)(uint8_t *, uint64_t))v177;
      ((void (*)(char *, uint64_t, __n128))v177)(v111, v25, v118);
      _os_log_impl((void *)&_mh_execute_header, v109, v110, "Updating to requestPageChangeLocation: %s", v112, 0xCu);
      swift_arrayDestroy(v113, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v113, -1, -1);
      swift_slowDealloc(v112, -1, -1);
    }
    else
    {
      v119 = (void (*)(uint8_t *, uint64_t))v177;
      v177(v107, v25);
    }

    v146 = (uint64_t)v170;
    v145 = v171;
    v147 = v172;
    (*(void (**)(char *, _QWORD, uint64_t))(v171 + 104))(v170, enum case for UpdateReason.locationFulfillment(_:), v172);
    v148 = v164;
    sub_10063349C(v164, v146);
    (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v146, v147);
    v119(v148, v25);
  }
  else
  {
    v120 = v162;
    PageLocation.init(documentOrdinal:pageOffset:)(v178, v179);
    v121 = (uint64_t)v168;
    sub_1006352CC(v120, (uint64_t)v168);
    v122 = v159;
    v123 = *(void (**)(char *, uint64_t))(v159 + 8);
    v124 = v169;
    v123(v120, v169);
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v120, v121, v124);
    v125 = sub_10004CFD4(&qword_1009D2F18);
    v126 = v165;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v165, 1, 1, v125);
    v127 = type metadata accessor for Location.AnchorRequest(0);
    v128 = v158;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 56))(v158, 1, 1, v127);
    v129 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56);
    v130 = v156;
    v129(v156, 1, 1, v155);
    v131 = sub_10004CFD4(&qword_1009D2AD0);
    v132 = v166;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56))(v166, 1, 1, v131);
    v133 = v167;
    Location.init(pageLocation:locationOffset:requestedAnchor:requestedCFI:requestedLocationRect:isRequestedPageChange:)(v120, v126, v128, v130, v132, 0);
    v134 = v161;
    v135 = v180(v161, (char *)v133, v25);
    v136 = Logger.logObject.getter(v135);
    v137 = static os_log_type_t.info.getter(v136);
    if (os_log_type_enabled(v136, v137))
    {
      v138 = (uint8_t *)swift_slowAlloc(12, -1);
      v139 = swift_slowAlloc(32, -1);
      v182 = v139;
      *(_DWORD *)v138 = 136315138;
      v180 = (uint64_t (*)(char *, char *, uint64_t))v123;
      v140 = sub_100008DB0(&qword_1009D2F10, (uint64_t (*)(uint64_t))&type metadata accessor for Location, (uint64_t)&protocol conformance descriptor for Location);
      v141 = dispatch thunk of CustomStringConvertible.description.getter(v25, v140);
      v143 = v142;
      v181 = sub_100040F58(v141, v142, &v182);
      v123 = (void (*)(char *, uint64_t))v180;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v181, &v182, v138 + 4, v138 + 12);
      v144 = swift_bridgeObjectRelease(v143);
      v119 = (void (*)(uint8_t *, uint64_t))v177;
      ((void (*)(char *, uint64_t, __n128))v177)(v134, v25, v144);
      _os_log_impl((void *)&_mh_execute_header, v136, v137, "Updating to newLocation: %s reason: .locationFulfillment", v138, 0xCu);
      swift_arrayDestroy(v139, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v139, -1, -1);
      swift_slowDealloc(v138, -1, -1);
    }
    else
    {
      v119 = (void (*)(uint8_t *, uint64_t))v177;
      v177(v134, v25);
    }

    v150 = (uint64_t)v170;
    v149 = v171;
    v151 = v172;
    (*(void (**)(char *, _QWORD, uint64_t))(v171 + 104))(v170, enum case for UpdateReason.locationFulfillment(_:), v172);
    v152 = v167;
    sub_10063349C(v167, v150);
    (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v150, v151);
    v119(v152, v25);
    v123(v168, v169);
    v50 = v175;
  }
  return ((uint64_t (*)(char *, uint64_t))v119)(v50, v25);
}

double sub_100632D30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t WitnessTable;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  id v27;
  _QWORD v28[4];

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AnyPublisher(255, a2, &type metadata for Never, &protocol witness table for Never, v5);
  v9 = sub_100009E04(255, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for AnyPublisher<A, B>, v8);
  v11 = sub_1001EDDD0();
  v28[0] = v8;
  v28[1] = v9;
  v28[2] = WitnessTable;
  v28[3] = v11;
  v12 = type metadata accessor for Publishers.ReceiveOn(0, v28);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - v14;
  v28[0] = a1;
  v27 = (id)static OS_dispatch_queue.main.getter(v16);
  v17 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v7, 1, 1, v17);
  Publisher.receive<A>(on:options:)(&v27, v7, v8, v9, WitnessTable, v11);
  sub_100010960((uint64_t)v7, (uint64_t *)&unk_1009D4AE0);

  v18 = swift_allocObject(&unk_1009190B0, 24, 7);
  v19 = v26;
  swift_unknownObjectWeakInit(v18 + 16);
  v20 = swift_allocObject(&unk_1009190D8, 32, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = v18;
  swift_retain(v18);
  v21 = swift_getWitnessTable(&protocol conformance descriptor for Publishers.ReceiveOn<A, B>, v12);
  v22 = Publisher<>.sink(receiveValue:)(sub_1006374C0, v20, v12, v21);
  v23 = swift_release(v20);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v12, v23);
  swift_release(v18);
  v24 = v19 + OBJC_IVAR____TtC5Books25CurrentLocationController_cancellables;
  swift_beginAccess(v19 + OBJC_IVAR____TtC5Books25CurrentLocationController_cancellables, v28, 33, 0);
  AnyCancellable.store(in:)(v24);
  swift_endAccess(v28);
  *(_QWORD *)&result = swift_release(v22).n128_u64[0];
  return result;
}

void sub_100632F90()
{
  uint64_t v0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC5Books25CurrentLocationController_started) = 1;
}

void sub_100632FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char *Strong;
  void *v4;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    if (Strong[OBJC_IVAR____TtC5Books25CurrentLocationController_started] == 1)
    {
      v5 = *(_QWORD *)&Strong[OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider];
      swift_retain(v5);
      sub_10021623C();

      swift_release(v5);
    }
    else
    {

    }
  }
}

uint64_t sub_10063302C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  char v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;

  v67 = type metadata accessor for PageLocation(0);
  v64 = *(_QWORD *)(v67 - 8);
  v1 = __chkstk_darwin(v67);
  v62 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v63 = (char *)&v59 - v3;
  v65 = type metadata accessor for SpreadPaginationEntity(0);
  v61 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v60 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Location(0);
  v66 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v68 = (char *)&v59 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v59 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v59 - v14;
  CurrentValueSubject.value.getter((uint64_t *)((char *)&v59 - v14));
  v16 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
  ObjectType = swift_getObjectType();
  Paginating.lastLocation.getter(ObjectType, v16);
  v18 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v16);
  v20 = v19;
  v21 = swift_getObjectType();
  v22 = dispatch thunk of BookContentLayoutProviding.columnCount.getter(v21, v20);
  swift_unknownObjectRelease(v18);
  v23 = dispatch thunk of Paginating.contentLayout.getter(ObjectType, v16);
  v25 = v24;
  v26 = swift_getObjectType();
  v27 = dispatch thunk of BookContentLayoutProviding.layout.getter(v26, v25);
  swift_unknownObjectRelease(v23);
  v29 = BEBookLayoutMode.isScroll.getter(v27, v28);
  if ((static Location.== infix(_:_:)(v15, v13) & 1) != 0)
    goto LABEL_4;
  if ((v22 > 1) | v29 & 1)
  {
    v30 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v16);
    v31 = v63;
    ((void (*)(void))Location.pageLocation.getter)();
    v32 = v60;
    BookPaginationEntity.adjustedSpread(containing:)(v31);
    swift_release(v30);
    v33 = *(uint64_t (**)(char *, uint64_t))(v64 + 8);
    v34 = v67;
    v35 = v33(v31, v67);
    Location.pageLocation.getter(v35);
    v36 = SpreadPaginationEntity.contains(_:)(v31);
    v33(v31, v34);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v32, v65);
    if ((v36 & 1) != 0)
    {
LABEL_4:
      v29 = 0;
      LODWORD(v65) = 1;
      goto LABEL_7;
    }
  }
  else
  {
    v29 = 0;
  }
  LODWORD(v65) = 0;
LABEL_7:
  v37 = v66;
  v38 = v67;
  v39 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v40 = v68;
  v39(v68, v15, v5);
  v41 = v8;
  v42 = ((uint64_t (*)(char *, char *, uint64_t))v39)(v8, v13, v5);
  if ((v29 & 1) == 0)
  {
    v51 = *(void (**)(char *, uint64_t))(v37 + 8);
    v51(v8, v5);
    v51(v40, v5);
    goto LABEL_14;
  }
  v43 = v63;
  v44 = Location.pageLocation.getter(v42);
  v67 = PageLocation.documentOrdinal.getter(v44);
  v45 = *(uint64_t (**)(char *, uint64_t))(v64 + 8);
  v46 = v45(v43, v38);
  v47 = v37;
  v48 = v62;
  v49 = Location.pageLocation.getter(v46);
  v50 = PageLocation.documentOrdinal.getter(v49);
  v45(v48, v38);
  v51 = *(void (**)(char *, uint64_t))(v47 + 8);
  v51(v41, v5);
  v52 = ((uint64_t (*)(char *, uint64_t))v51)(v68, v5);
  if (v67 != v50)
  {
LABEL_14:
    v51(v13, v5);
    v51(v15, v5);
    return v65;
  }
  v53 = Location.pageLocation.getter(v52);
  v54 = PageLocation.pageOffset.getter(v53);
  result = v45(v43, v38);
  if (__OFADD__(v54, 1))
  {
    __break(1u);
  }
  else
  {
    v56 = v43;
    v57 = Location.pageLocation.getter(result);
    v58 = PageLocation.pageOffset.getter(v57);
    v45(v56, v38);
    v51(v13, v5);
    v51(v15, v5);
    if (v54 + 1 == v58)
      return 1;
    else
      return v65;
  }
  return result;
}

uint64_t sub_10063349C(uint8_t *a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  void (*v49)(char *, uint8_t *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char v52;
  void (*v53)(char *, uint64_t);
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char v68;
  id v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unsigned int (*v78)(uint64_t, uint64_t, uint64_t);
  char v79;
  id v80;
  uint64_t v81;
  uint64_t ObjectType;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  uint8_t *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  __n128 v107;
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(char *, uint64_t, uint64_t);
  int v119;
  uint64_t (*v120)(char *, uint64_t, uint64_t);
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t);
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  NSObject *v153;
  os_log_type_t v154;
  uint8_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  uint64_t v164;
  id v165;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t (*v176)(char *, uint8_t *, uint64_t);
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  void (*v187)(char *, uint64_t, __n128);
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint8_t *v198;
  uint8_t *v199;
  char v200[8];
  uint64_t v201;
  char v202[8];
  uint64_t v203;
  uint64_t v204;
  char v205[8];

  v185 = a2;
  v199 = a1;
  v170 = type metadata accessor for CFIRange(0);
  v169 = *(_QWORD *)(v170 - 8);
  __chkstk_darwin(v170);
  v167 = (char *)&v167 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009E8A40);
  __chkstk_darwin(v4);
  v168 = (char *)&v167 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v6);
  v172 = (char *)&v167 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v174 = (char *)&v167 - v9;
  v184 = type metadata accessor for SpreadPaginationEntity(0);
  v197 = *(_QWORD *)(v184 - 8);
  __chkstk_darwin(v184);
  v175 = (char *)&v167 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v186 = (char *)&v167 - v12;
  v196 = type metadata accessor for LocationMovement(0);
  v191 = *(_QWORD *)(v196 - 8);
  __chkstk_darwin(v196);
  v195 = (char *)&v167 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4((uint64_t *)&unk_1009E8E70);
  __chkstk_darwin(v14);
  v180 = (uint64_t)&v167 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v179 = (char *)&v167 - v17;
  __chkstk_darwin(v18);
  v177 = (uint64_t)&v167 - v19;
  __chkstk_darwin(v20);
  v183 = (char *)&v167 - v21;
  __chkstk_darwin(v22);
  v182 = (char *)&v167 - v23;
  __chkstk_darwin(v24);
  v181 = (char *)&v167 - v25;
  v26 = type metadata accessor for PageLocation(0);
  v198 = *(uint8_t **)(v26 - 8);
  __chkstk_darwin(v26);
  v171 = (char *)&v167 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v173 = (char *)&v167 - v29;
  __chkstk_darwin(v30);
  v32 = (char *)&v167 - v31;
  __chkstk_darwin(v33);
  v35 = (char *)&v167 - v34;
  v36 = type metadata accessor for Location(0);
  v37 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v178 = (char *)&v167 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v41 = (char *)&v167 - v40;
  __chkstk_darwin(v42);
  v44 = (char *)&v167 - v43;
  __chkstk_darwin(v45);
  v47 = (char *)&v167 - v46;
  v193 = *(_QWORD *)&v2[OBJC_IVAR____TtC5Books25CurrentLocationController_currentLocationProvider];
  CurrentValueSubject.value.getter((char **)((char *)&v167 - v46));
  v194 = v2;
  v48 = sub_10063302C();
  v49 = *(void (**)(char *, uint8_t *, uint64_t))(v37 + 16);
  v49(v44, v199, v36);
  v189 = v47;
  v176 = (uint64_t (*)(char *, uint8_t *, uint64_t))v49;
  v50 = ((uint64_t (*)(char *, char *, uint64_t))v49)(v41, v47, v36);
  v192 = v35;
  v190 = v26;
  if ((v48 & 1) != 0)
  {
    v51 = Location.pageLocation.getter(v50);
    Location.pageLocation.getter(v51);
    v52 = static PageLocation.== infix(_:_:)(v35, v32);
    v53 = (void (*)(char *, uint64_t))*((_QWORD *)v198 + 1);
    v53(v32, v26);
    v53(v35, v26);
    v54 = *(void (**)(char *, uint64_t))(v37 + 8);
    v54(v41, v36);
    v55 = ((uint64_t (*)(char *, uint64_t))v54)(v44, v36);
    if ((v52 & 1) != 0)
      return ((uint64_t (*)(char *, uint64_t))v54)(v189, v36);
  }
  else
  {
    v54 = *(void (**)(char *, uint64_t))(v37 + 8);
    v54(v41, v36);
    v55 = ((uint64_t (*)(char *, uint64_t))v54)(v44, v36);
  }
  v187 = (void (*)(char *, uint64_t, __n128))v54;
  v188 = v36;
  v56 = v195;
  static LocationMovement.spreadForward.getter(v55);
  v57 = type metadata accessor for CurrentLocationController(0);
  v58 = sub_100008DB0(&qword_1009E3400, type metadata accessor for CurrentLocationController, (uint64_t)&unk_100736270);
  v59 = (uint64_t)v181;
  v60 = v194;
  LocationControlling.destination(for:)(v56, v57, v58);
  v61 = *(void (**)(char *, uint64_t))(v191 + 8);
  v61(v56, v196);
  v62 = v197;
  v63 = v184;
  v191 = *(_QWORD *)(v197 + 48);
  v64 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v191)(v59, 1, v184);
  if ((_DWORD)v64 == 1)
  {
    v65 = sub_100010960(v59, (uint64_t *)&unk_1009E8E70);
    v66 = v193;
  }
  else
  {
    v67 = v192;
    Location.pageLocation.getter(v64);
    v68 = SpreadPaginationEntity.contains(_:)(v67);
    (*((void (**)(char *, uint64_t))v198 + 1))(v67, v190);
    v65 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v59, v63);
    v66 = v193;
    if ((v68 & 1) != 0)
    {
      v69 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1009CDC98 != -1)
        swift_once(&qword_1009CDC98, sub_100213A04);
      objc_msgSend(v69, "postNotificationName:object:", qword_1009D2C00, v66);

    }
  }
  v70 = v195;
  static LocationMovement.spreadBackward.getter(v65);
  v71 = (uint64_t)v182;
  LocationControlling.destination(for:)(v70, v57, v58);
  v61(v70, v196);
  v72 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v191)(v71, 1, v63);
  if ((_DWORD)v72 == 1)
  {
    sub_100010960(v71, (uint64_t *)&unk_1009E8E70);
    v73 = v197;
    v74 = v192;
    v75 = v66;
    v76 = v60;
    v77 = v190;
    v78 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v191;
  }
  else
  {
    v74 = v192;
    Location.pageLocation.getter(v72);
    v79 = SpreadPaginationEntity.contains(_:)(v74);
    v77 = v190;
    (*((void (**)(char *, uint64_t))v198 + 1))(v74, v190);
    v73 = v197;
    (*(void (**)(uint64_t, uint64_t))(v197 + 8))(v71, v63);
    v75 = v66;
    v76 = v60;
    v78 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v191;
    if ((v79 & 1) != 0)
    {
      v80 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
      if (qword_1009CDCA0 != -1)
        swift_once(&qword_1009CDCA0, sub_100213A38);
      objc_msgSend(v80, "postNotificationName:object:", qword_1009D2C08, v75);

    }
  }
  v81 = *(_QWORD *)&v76[OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8];
  ObjectType = swift_getObjectType();
  v83 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v81);
  Location.pageLocation.getter(v83);
  v84 = v183;
  BookPaginationEntity.spread(containing:)(v74);
  v85 = v83;
  v86 = (uint64_t)v84;
  v87 = swift_release(v85);
  v88 = (uint64_t)v198;
  v197 = *((_QWORD *)v198 + 1);
  ((void (*)(char *, uint64_t, __n128))v197)(v74, v77, v87);
  v89 = &qword_1009CE000;
  if (v78(v86, 1, v63) == 1)
  {
    sub_100010960(v86, (uint64_t *)&unk_1009E8E70);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v90 = type metadata accessor for Logger(0);
    sub_100048F64(v90, (uint64_t)qword_1009F1A00);
    v91 = v178;
    v92 = (uint64_t)v199;
    v36 = v188;
    v93 = v176(v178, v199, v188);
    v94 = Logger.logObject.getter(v93);
    v95 = static os_log_type_t.error.getter(v94);
    if (os_log_type_enabled(v94, v95))
    {
      v96 = v77;
      v97 = (uint8_t *)swift_slowAlloc(12, -1);
      v98 = swift_slowAlloc(32, -1);
      v203 = v98;
      *(_DWORD *)v97 = 136315138;
      v198 = v97 + 4;
      v99 = v192;
      Location.pageLocation.getter(v98);
      v100 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
      v101 = dispatch thunk of CustomStringConvertible.description.getter(v96, v100);
      v103 = v102;
      v104 = v99;
      v105 = v96;
      v75 = v193;
      v89 = &qword_1009CE000;
      ((void (*)(char *, uint64_t))v197)(v104, v105);
      v201 = sub_100040F58(v101, v103, &v203);
      v92 = (uint64_t)v199;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v201, v202, v198, v97 + 12);
      v106 = v103;
      v36 = v188;
      v107 = swift_bridgeObjectRelease(v106);
      v187(v91, v36, v107);
      _os_log_impl((void *)&_mh_execute_header, v94, v95, "Unable to find a spread containing: %s", v97, 0xCu);
      swift_arrayDestroy(v98, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v98, -1, -1);
      swift_slowDealloc(v97, -1, -1);
    }
    else
    {
      ((void (*)(char *, uint64_t))v187)(v91, v36);
    }

    v198 = 0;
    v112 = 0;
    v76 = v194;
    goto LABEL_42;
  }
  v108 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 32);
  v108(v186, v86, v63);
  v109 = v75 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread;
  swift_beginAccess(v75 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread, &v203, 0, 0);
  v110 = v177;
  sub_10000B5E4(v109, v177, (uint64_t *)&unk_1009E8E70);
  if (v78(v110, 1, v63) == 1)
  {
    sub_100010960(v110, (uint64_t *)&unk_1009E8E70);
    v198 = 0;
    v111 = 0;
    v36 = v188;
  }
  else
  {
    v196 = v109;
    v113 = v175;
    v114 = ((uint64_t (*)(char *, uint64_t, uint64_t))v108)(v175, v110, v63);
    v115 = v174;
    SpreadPaginationEntity.firstLocation.getter(v114);
    v116 = (uint64_t)v115;
    v117 = v77;
    v118 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48);
    v119 = v118(v115, 1, v117);
    v36 = v188;
    if (v119 == 1)
    {
      (*(void (**)(char *, uint64_t))(v73 + 8))(v113, v63);
      sub_100010960(v116, &qword_1009E3508);
      v198 = 0;
      v111 = 0;
    }
    else
    {
      v120 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 32);
      v121 = v173;
      v122 = v120(v173, v116, v117);
      v123 = (uint64_t)v172;
      SpreadPaginationEntity.firstLocation.getter(v122);
      if (v118((char *)v123, 1, v117) != 1)
      {
        v124 = v123;
        v125 = v171;
        v126 = v120(v171, v124, v117);
        v127 = PageLocation.documentOrdinal.getter(v126);
        v128 = PageLocation.documentOrdinal.getter(v127);
        v109 = v196;
        if (v127 == v128)
        {
          v129 = (void (*)(char *, uint64_t))v197;
          ((void (*)(char *, uint64_t))v197)(v125, v117);
          v129(v121, v117);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v175, v63);
          v198 = 0;
          v111 = 0;
          v76 = v194;
        }
        else
        {
          v130 = PageLocation.documentOrdinal.getter(v128);
          v76 = v194;
          v131 = &v194[OBJC_IVAR____TtC5Books25CurrentLocationController_cfiByOrdinal];
          swift_beginAccess(&v194[OBJC_IVAR____TtC5Books25CurrentLocationController_cfiByOrdinal], v200, 0, 0);
          v132 = *(_QWORD *)v131;
          if (*(_QWORD *)(v132 + 16) && (v133 = sub_1002BB7F4(v130), (v134 & 1) != 0))
          {
            v135 = *(_QWORD *)(v132 + 56);
            v136 = v169;
            v137 = (uint64_t)v168;
            v138 = v170;
            (*(void (**)(char *, unint64_t, uint64_t))(v169 + 16))(v168, v135 + *(_QWORD *)(v169 + 72) * v133, v170);
            v139 = 0;
          }
          else
          {
            v139 = 1;
            v138 = v170;
            v136 = v169;
            v137 = (uint64_t)v168;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56))(v137, v139, 1, v138);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v137, 1, v138))
          {
            v140 = v190;
            v141 = (void (*)(char *, uint64_t))v197;
            ((void (*)(char *, uint64_t))v197)(v171, v190);
            v141(v173, v140);
            (*(void (**)(char *, uint64_t))(v73 + 8))(v175, v63);
            sub_100010960(v137, &qword_1009E8A40);
            v198 = 0;
            v111 = 0;
          }
          else
          {
            v142 = v167;
            (*(void (**)(char *, uint64_t, uint64_t))(v136 + 16))(v167, v137, v138);
            v143 = sub_100010960(v137, &qword_1009E8A40);
            v198 = (uint8_t *)CFIRange.start.getter(v143);
            v111 = v144;
            (*(void (**)(char *, uint64_t))(v136 + 8))(v142, v138);
            v145 = v190;
            v146 = (void (*)(char *, uint64_t))v197;
            ((void (*)(char *, uint64_t))v197)(v171, v190);
            v146(v173, v145);
            (*(void (**)(char *, uint64_t))(v73 + 8))(v175, v63);
          }
        }
        v75 = v193;
        goto LABEL_41;
      }
      ((void (*)(char *, uint64_t))v197)(v121, v117);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v175, v63);
      sub_100010960(v123, &qword_1009E3508);
      v198 = 0;
      v111 = 0;
      v76 = v194;
    }
    v75 = v193;
    v109 = v196;
  }
LABEL_41:
  v147 = v179;
  v148 = v186;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v179, v186, v63);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v147, 0, 1, v63);
  v149 = (uint64_t)v147;
  v150 = v180;
  sub_100025B3C(v149, v180, (uint64_t *)&unk_1009E8E70);
  swift_beginAccess(v109, &v201, 33, 0);
  sub_10000B558(v150, v109, (uint64_t *)&unk_1009E8E70);
  swift_endAccess(&v201);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v148, v63);
  v89 = &qword_1009CE000;
  v112 = v111;
  v92 = (uint64_t)v199;
LABEL_42:
  sub_100215490(v92, v185);
  sub_100629BC8();
  if (v112)
  {
    if (v89[342] != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v151 = type metadata accessor for Logger(0);
    sub_100048F64(v151, (uint64_t)qword_1009F1A00);
    v152 = v76;
    v153 = Logger.logObject.getter(v152);
    v154 = static os_log_type_t.info.getter(v153);
    if (os_log_type_enabled(v153, v154))
    {
      v155 = (uint8_t *)swift_slowAlloc(12, -1);
      v156 = swift_slowAlloc(32, -1);
      v201 = v156;
      *(_DWORD *)v155 = 136446210;
      v199 = v155 + 4;
      v157 = v112;
      v158 = *(_QWORD *)&v152[OBJC_IVAR____TtC5Books25CurrentLocationController_bookEntity + 24];
      v159 = *(_QWORD *)&v152[OBJC_IVAR____TtC5Books25CurrentLocationController_bookEntity + 32];
      sub_10003F198(&v152[OBJC_IVAR____TtC5Books25CurrentLocationController_bookEntity], v158);
      v160 = v159;
      v112 = v157;
      v161 = dispatch thunk of BookEntityType.sessionID.getter(v158, v160);
      v163 = v162;
      v204 = sub_100040F58(v161, v162, &v201);
      v75 = v193;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v204, v205, v199, v155 + 12);

      swift_bridgeObjectRelease(v163);
      _os_log_impl((void *)&_mh_execute_header, v153, v154, "#visibleCFI First location ordinal change. Updating readingLocationCFI  for:%{public}s", v155, 0xCu);
      swift_arrayDestroy(v156, 1, (char *)&type metadata for Any + 8);
      v164 = v156;
      v36 = v188;
      swift_slowDealloc(v164, -1, -1);
      swift_slowDealloc(v155, -1, -1);

    }
    else
    {

    }
    sub_1002169A0((uint64_t)v198, v112);
    swift_bridgeObjectRelease(v112);
    sub_100216CD8();
  }
  if ((sub_10063302C() & 1) != 0)
  {
    v165 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
    v54 = (void (*)(char *, uint64_t))v187;
    if (qword_1009CDC88 != -1)
      swift_once(&qword_1009CDC88, sub_10021399C);
    objc_msgSend(v165, "postNotificationName:object:", qword_1009D2BF0, v75);

  }
  else
  {
    v54 = (void (*)(char *, uint64_t))v187;
  }
  return ((uint64_t (*)(char *, uint64_t))v54)(v189, v36);
}

uint64_t sub_1006345F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  uint64_t (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  void (*v49)(char *, uint64_t, __n128);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  __n128 v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  char v62;
  void (*v63)(char *, uint64_t, uint64_t, _QWORD *);
  unsigned int (*v64)(uint64_t, uint64_t, _QWORD *);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double (*v70)(_QWORD *, _QWORD *);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  __n128 v92;
  void (*v93)(char *, uint64_t, __n128);
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  double v103;
  char v104;
  double v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  uint8_t *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  os_log_type_t v126;
  _BOOL4 v127;
  char *v128;
  uint8_t *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  void (*v134)(char *, uint64_t);
  char *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  _QWORD *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153[3];
  uint64_t v154;
  uint64_t v155;

  v147 = (_QWORD *)type metadata accessor for CFIRange(0);
  v145 = *(v147 - 1);
  __chkstk_darwin(v147);
  v142 = (char *)&v138 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v146 = (char *)&v138 - v3;
  v4 = sub_10004CFD4(&qword_1009E8A40);
  __chkstk_darwin(v4);
  v143 = (char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v138 - v7;
  v9 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v9);
  v11 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v14 = (char *)&v138 - v13;
  v15 = type metadata accessor for PageLocation(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v149 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v138 - v19;
  v150 = type metadata accessor for SpreadPaginationEntity(0);
  v21 = *(_QWORD *)(v150 - 8);
  __chkstk_darwin(v150);
  v23 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v144 = (char *)&v138 - v25;
  __chkstk_darwin(v26);
  v28 = (char *)&v138 - v27;
  v148 = v0;
  v29 = sub_1006296E8((uint64_t)&v138 - v27);
  SpreadPaginationEntity.firstLocation.getter(v29);
  v30 = v16;
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v32 = v31(v14, 1, v15);
  v151 = v28;
  if (v32 == 1)
  {
    v11 = v14;
LABEL_5:
    sub_100010960((uint64_t)v11, &qword_1009E3508);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v35 = type metadata accessor for Logger(0);
    sub_100048F64(v35, (uint64_t)qword_1009F1A00);
    v36 = v150;
    v37 = v151;
    v38 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 16))(v23, v151, v150);
    v39 = Logger.logObject.getter(v38);
    v40 = v21;
    v41 = static os_log_type_t.error.getter(v39);
    if (os_log_type_enabled(v39, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = swift_slowAlloc(32, -1);
      v153[0] = v43;
      *(_DWORD *)v42 = 136446210;
      v149 = (char *)(v42 + 4);
      v44 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
      v45 = dispatch thunk of CustomStringConvertible.description.getter(v36, v44);
      v47 = v46;
      v154 = sub_100040F58(v45, v46, v153);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v154, &v155, v149, v42 + 12);
      v48 = swift_bridgeObjectRelease(v47);
      v49 = *(void (**)(char *, uint64_t, __n128))(v40 + 8);
      v49(v23, v36, v48);
      _os_log_impl((void *)&_mh_execute_header, v39, v41, "Failed to update visible CFI range: unable to get first/last location from spread %{public}s", v42, 0xCu);
      swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

    }
    else
    {

      v49 = *(void (**)(char *, uint64_t, __n128))(v40 + 8);
      ((void (*)(char *, uint64_t))v49)(v23, v36);
    }
    return ((uint64_t (*)(char *, uint64_t))v49)(v37, v36);
  }
  v141 = v21;
  v33 = *(uint64_t (**)(char *, char *, uint64_t))(v30 + 32);
  v34 = v33(v20, v14, v15);
  SpreadPaginationEntity.lastLocation.getter(v34);
  if (v31(v11, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v15);
    v21 = v141;
    goto LABEL_5;
  }
  v139 = v30;
  v140 = v15;
  v51 = v149;
  v52 = ((uint64_t (*)(char *, char *))v33)(v149, v11);
  v53 = PageLocation.documentOrdinal.getter(v52);
  v54 = (uint64_t *)(v148 + OBJC_IVAR____TtC5Books25CurrentLocationController_cfiByOrdinal);
  v55 = swift_beginAccess(v148 + OBJC_IVAR____TtC5Books25CurrentLocationController_cfiByOrdinal, v153, 0, 0);
  v56 = *v54;
  v57 = v20;
  if (*(_QWORD *)(*v54 + 16))
  {
    v58 = sub_1002BB7F4(v53);
    v60 = v146;
    v59 = v147;
    v61 = (_QWORD *)v145;
    if ((v62 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, _QWORD *))(v145 + 16))(v8, *(_QWORD *)(v56 + 56) + *(_QWORD *)(v145 + 72) * v58, v147);
      v63 = (void (*)(char *, uint64_t, uint64_t, _QWORD *))v61[7];
      v63(v8, 0, 1, v59);
    }
    else
    {
      v63 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v145 + 56);
      v63(v8, 1, 1, v147);
    }
  }
  else
  {
    v61 = (_QWORD *)v145;
    v63 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v145 + 56);
    v59 = v147;
    ((void (*)(char *, uint64_t, uint64_t, _QWORD *, __n128))v63)(v8, 1, 1, v147, v55);
    v60 = v146;
  }
  v64 = (unsigned int (*)(uint64_t, uint64_t, _QWORD *))v61[6];
  if (!v64((uint64_t)v8, 1, v59))
  {
    v138 = v57;
    v147 = (_QWORD *)v61[2];
    ((void (*)(_QWORD *, char *, _QWORD *))v147)(v60, v8, v59);
    v67 = sub_100010960((uint64_t)v8, &qword_1009E8A40);
    v146 = (char *)CFIRange.start.getter(v67);
    v69 = v68;
    v70 = (double (*)(_QWORD *, _QWORD *))v61[1];
    v71 = ((uint64_t (*)(_QWORD *, _QWORD *))v70)(v60, v59);
    v72 = PageLocation.documentOrdinal.getter(v71);
    v73 = *v54;
    if (*(_QWORD *)(*v54 + 16) && (v74 = sub_1002BB7F4(v72), (v75 & 1) != 0))
    {
      v76 = *(_QWORD *)(v73 + 56) + v61[9] * v74;
      v65 = (uint64_t)v143;
      ((void (*)(char *, unint64_t, _QWORD *))v147)(v143, v76, v59);
      v77 = 0;
    }
    else
    {
      v77 = 1;
      v65 = (uint64_t)v143;
    }
    v63((char *)v65, v77, 1, v59);
    if (v64(v65, 1, v59))
    {
      swift_bridgeObjectRelease(v69);
      v66 = v150;
      v57 = v138;
      goto LABEL_24;
    }
    ((void (*)(_QWORD *, uint64_t, _QWORD *))v147)(v60, v65, v59);
    v99 = sub_100010960(v65, &qword_1009E8A40);
    v100 = CFIRange.end.getter(v99);
    v102 = v101;
    v103 = v70(v60, v59);
    v104 = String.isCFI.getter(v146, v69, v103);
    v106 = v150;
    if ((v104 & 1) != 0)
    {
      if ((String.isCFI.getter(v100, v102, v105) & 1) == 0)
      {
        swift_bridgeObjectRelease(v69);
        if (qword_1009CEAB0 != -1)
          swift_once(&qword_1009CEAB0, sub_100629668);
        v123 = type metadata accessor for Logger(0);
        sub_100048F64(v123, (uint64_t)qword_1009F1A00);
        swift_bridgeObjectRetain(v102);
        v125 = Logger.logObject.getter(v124);
        v126 = static os_log_type_t.error.getter(v125);
        v127 = os_log_type_enabled(v125, v126);
        v128 = v138;
        if (!v127)
        {
          swift_bridgeObjectRelease_n(v102, 2);

          v136 = v140;
          v134 = *(void (**)(char *, uint64_t))(v139 + 8);
          v134(v51, v140);
          v137 = v128;
          goto LABEL_45;
        }
        v129 = (uint8_t *)swift_slowAlloc(12, -1);
        v130 = swift_slowAlloc(32, -1);
        v154 = v130;
        *(_DWORD *)v129 = 136446210;
        v131 = String.redactedCFI.getter(v100, v102);
        v133 = v132;
        v152 = sub_100040F58(v131, v132, &v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, v153, v129 + 4, v129 + 12);
        swift_bridgeObjectRelease_n(v102, 2);
        swift_bridgeObjectRelease(v133);
        _os_log_impl((void *)&_mh_execute_header, v125, v126, "Failed to update visible CFI range: invalid end CFI: %{public}s", v129, 0xCu);
        swift_arrayDestroy(v130, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v130, -1, -1);
        swift_slowDealloc(v129, -1, -1);

        v134 = *(void (**)(char *, uint64_t))(v139 + 8);
        v135 = v149;
LABEL_44:
        v136 = v140;
        v134(v135, v140);
        v137 = v138;
LABEL_45:
        v134(v137, v136);
        return (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v151, v106);
      }
      v107 = v142;
      CFIRange.init(start:end:)(v146, v69, v100, v102);
      v108 = v107;
      CurrentValueSubject.value.getter(v60);
      v109 = sub_100008DB0(&qword_1009DB670, (uint64_t (*)(uint64_t))&type metadata accessor for CFIRange, (uint64_t)&protocol conformance descriptor for CFIRange);
      LOBYTE(v107) = dispatch thunk of static Equatable.== infix(_:_:)(v60, v107, v59, v109);
      v70(v60, v59);
      if ((v107 & 1) == 0)
      {
        ((void (*)(_QWORD *, char *, _QWORD *))v147)(v60, v108, v59);
        CurrentValueSubject.value.setter(v60);
      }
      v70(v108, v59);
    }
    else
    {
      swift_bridgeObjectRelease(v102);
      if (qword_1009CEAB0 != -1)
        swift_once(&qword_1009CEAB0, sub_100629668);
      v110 = type metadata accessor for Logger(0);
      sub_100048F64(v110, (uint64_t)qword_1009F1A00);
      swift_bridgeObjectRetain(v69);
      v112 = Logger.logObject.getter(v111);
      v113 = static os_log_type_t.error.getter(v112);
      if (os_log_type_enabled(v112, v113))
      {
        v114 = v106;
        v115 = v69;
        v116 = (uint8_t *)swift_slowAlloc(12, -1);
        v117 = swift_slowAlloc(32, -1);
        v154 = v117;
        *(_DWORD *)v116 = 136446210;
        v118 = String.redactedCFI.getter(v146, v115);
        v120 = v119;
        v152 = sub_100040F58(v118, v119, &v154);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, v153, v116 + 4, v116 + 12);
        swift_bridgeObjectRelease_n(v115, 2);
        swift_bridgeObjectRelease(v120);
        _os_log_impl((void *)&_mh_execute_header, v112, v113, "Failed to update visible CFI range: invalid start CFI: %{public}s", v116, 0xCu);
        swift_arrayDestroy(v117, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v117, -1, -1);
        swift_slowDealloc(v116, -1, -1);

        v121 = v140;
        v122 = *(void (**)(char *, uint64_t))(v139 + 8);
        v122(v51, v140);
        v122(v138, v121);
        return (*(uint64_t (**)(char *, uint64_t))(v141 + 8))(v151, v114);
      }
      swift_bridgeObjectRelease_n(v69, 2);

    }
    v134 = *(void (**)(char *, uint64_t))(v139 + 8);
    v135 = v51;
    goto LABEL_44;
  }
  v65 = (uint64_t)v8;
  v66 = v150;
LABEL_24:
  sub_100010960(v65, &qword_1009E8A40);
  v78 = v151;
  v79 = v144;
  if (qword_1009CEAB0 != -1)
    swift_once(&qword_1009CEAB0, sub_100629668);
  v80 = type metadata accessor for Logger(0);
  sub_100048F64(v80, (uint64_t)qword_1009F1A00);
  v81 = v141;
  v82 = (*(uint64_t (**)(char *, char *, uint64_t))(v141 + 16))(v79, v78, v66);
  v83 = Logger.logObject.getter(v82);
  v84 = static os_log_type_t.default.getter(v83);
  if (os_log_type_enabled(v83, v84))
  {
    v85 = (uint8_t *)swift_slowAlloc(12, -1);
    v86 = swift_slowAlloc(32, -1);
    v138 = v57;
    v87 = v86;
    v154 = v86;
    *(_DWORD *)v85 = 136446210;
    v88 = sub_100008DB0((unint64_t *)&qword_1009F1BA0, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
    v89 = dispatch thunk of CustomStringConvertible.description.getter(v66, v88);
    v91 = v90;
    v152 = sub_100040F58(v89, v90, &v154);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v152, v153, v85 + 4, v85 + 12);
    v92 = swift_bridgeObjectRelease(v91);
    v93 = *(void (**)(char *, uint64_t, __n128))(v81 + 8);
    v93(v79, v66, v92);
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "Deferring update visible CFI range: CFI locations for %{public}s are not yet available", v85, 0xCu);
    swift_arrayDestroy(v87, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v87, -1, -1);
    swift_slowDealloc(v85, -1, -1);

    v94 = v140;
    v95 = *(void (**)(char *, uint64_t))(v139 + 8);
    v95(v149, v140);
    v95(v138, v94);
    return ((uint64_t (*)(char *, uint64_t))v93)(v151, v66);
  }
  else
  {

    v96 = *(void (**)(char *, uint64_t))(v81 + 8);
    v96(v79, v66);
    v97 = v140;
    v98 = *(void (**)(char *, uint64_t))(v139 + 8);
    v98(v51, v140);
    v98(v57, v97);
    return ((uint64_t (*)(char *, uint64_t))v96)(v78, v66);
  }
}

uint64_t sub_1006352CC@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint8_t *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  __n128 v55;
  uint8_t *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v60 = a2;
  v4 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v4);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SpreadPaginationEntity(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PageLocation(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v59 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v58 = (char *)&v57 - v15;
  __chkstk_darwin(v16);
  v18 = (char *)&v57 - v17;
  v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
  ObjectType = swift_getObjectType();
  v21 = v19;
  v22 = a1;
  v23 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v21);
  BookPaginationEntity.adjustedSpread(containing:)(a1);
  swift_release(v23);
  SpreadPaginationEntity.firstLocation.getter(v24);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_100010960((uint64_t)v6, &qword_1009E3508);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v25 = type metadata accessor for Logger(0);
    sub_100048F64(v25, (uint64_t)qword_1009F1A00);
    v26 = *(uint8_t **)(v12 + 16);
    v27 = v59;
    v28 = ((uint64_t (*)(char *, char *, uint64_t))v26)(v59, v22, v11);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc(12, -1);
      v57 = v26;
      v32 = (uint8_t *)v31;
      v33 = swift_slowAlloc(32, -1);
      v62 = v33;
      v58 = v22;
      *(_DWORD *)v32 = 136315138;
      v34 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
      v35 = dispatch thunk of CustomStringConvertible.description.getter(v11, v34);
      v37 = v36;
      v61 = sub_100040F58(v35, v36, &v62);
      v22 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v32 + 4, v32 + 12);
      v38 = swift_bridgeObjectRelease(v37);
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v27, v11, v38);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Failed to find adjusted canonical location for %s", v32, 0xCu);
      swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      v39 = v32;
      v26 = v57;
      swift_slowDealloc(v39, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v27, v11);
    }

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v26)(v60, v22, v11);
  }
  else
  {
    v40 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v40(v18, v6, v11);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v41 = type metadata accessor for Logger(0);
    sub_100048F64(v41, (uint64_t)qword_1009F1A00);
    v42 = v58;
    v43 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 16))(v58, v18, v11);
    v44 = Logger.logObject.getter(v43);
    v48 = static os_log_type_t.debug.getter(v44, v45, v46, v47);
    if (os_log_type_enabled(v44, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(12, -1);
      v50 = swift_slowAlloc(32, -1);
      v62 = v50;
      v59 = v18;
      *(_DWORD *)v49 = 136315138;
      v57 = v49 + 4;
      v51 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
      v52 = dispatch thunk of CustomStringConvertible.description.getter(v11, v51);
      v54 = v53;
      v61 = sub_100040F58(v52, v53, &v62);
      v18 = v59;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v61, &v62, v57, v49 + 12);
      v55 = swift_bridgeObjectRelease(v54);
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v42, v11, v55);
      _os_log_impl((void *)&_mh_execute_header, v44, v48, "Returning #spread aligned location: %s", v49, 0xCu);
      swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v50, -1, -1);
      swift_slowDealloc(v49, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v42, v11);
    }

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v40)(v60, v18, v11);
  }
}

uint64_t sub_100635804()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
  ObjectType = swift_getObjectType();
  if ((dispatch thunk of Paginating.isPaginationComplete.getter(ObjectType, v1) & 1) == 0)
    return 0;
  v3 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v1);
  v4 = Location.documentOrdinal.getter(v3);
  v5 = BookPaginationEntity.document(for:)(v4);
  swift_release(v3);
  if (!v5)
    return 0;
  v6 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v1);
  v7 = Location.documentOrdinal.getter(v6);
  v8 = BookPaginationEntity.document(for:)(v7);
  v9 = swift_release(v6);
  if (!v8)
  {
    swift_release(v5);
    return 0;
  }
  v10 = dispatch thunk of DocumentPaginationEntity.startingPageOffset.getter(v9);
  result = Location.pageOffset.getter();
  v12 = __OFADD__(v10, result);
  v13 = v10 + result;
  if (v12)
  {
    __break(1u);
    goto LABEL_11;
  }
  v14 = dispatch thunk of DocumentPaginationEntity.startingPageOffset.getter(result);
  v15 = Location.pageOffset.getter();
  swift_release(v8);
  result = swift_release(v5);
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  result = v16 - v13;
  if (__OFSUB__(v16, v13))
LABEL_12:
    __break(1u);
  return result;
}

uint64_t sub_100635948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v1 = a1 + OBJC_IVAR____TtC5Books25CurrentLocationController_sendTimer;
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books25CurrentLocationController_sendTimer, v8, 0, 0);
  sub_10000B5E4(v1, (uint64_t)&v9, &qword_1009D6260);
  if (*((_QWORD *)&v10 + 1))
  {
    sub_10002E418((uint64_t)&v9, (uint64_t)v5);
    sub_100010960((uint64_t)&v9, &qword_1009D6260);
    v2 = v6;
    v3 = v7;
    sub_10003F198(v5, v6);
    dispatch thunk of Cancellable.cancel()(v2, v3);
    _s5Books15CurrentPageViewVwxx_0(v5);
  }
  else
  {
    sub_100010960((uint64_t)&v9, &qword_1009D6260);
  }
  v11 = 0;
  v9 = 0u;
  v10 = 0u;
  swift_beginAccess(v1, v5, 33, 0);
  sub_10000B558((uint64_t)&v9, v1, &qword_1009D6260);
  return swift_endAccess(v5);
}

uint64_t sub_100635A40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  Swift::String v31;
  Swift::String v32;
  void *object;
  unint64_t v34;
  uint64_t v35;
  _BYTE v37[12];
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _BYTE v44[24];

  v40 = a2;
  v3 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v3);
  v5 = &v37[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10004CFD4(&qword_1009F1BD8);
  __chkstk_darwin(v6);
  v8 = &v37[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for CurrentLocationController.StoredUpdate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v37[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v37[-v14];
  v16 = a1 + OBJC_IVAR____TtC5Books25CurrentLocationController_storedUpdate;
  swift_beginAccess(a1 + OBJC_IVAR____TtC5Books25CurrentLocationController_storedUpdate, v44, 0, 0);
  sub_10000B5E4(v16, (uint64_t)v8, &qword_1009F1BD8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_100010960((uint64_t)v8, &qword_1009F1BD8);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100048F64(v17, (uint64_t)qword_1009F1A00);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v21 = 134217984;
      v41 = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v21 + 4, v21 + 12);
      swift_slowDealloc(v21, -1, -1);
    }

  }
  else
  {
    sub_100637574((uint64_t)v8, (uint64_t)v15);
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v22 = type metadata accessor for Logger(0);
    sub_100048F64(v22, (uint64_t)qword_1009F1A00);
    v23 = sub_1006374C8((uint64_t)v15, (uint64_t)v12);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter(v24);
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc(22, -1);
      v39 = swift_slowAlloc(32, -1);
      v43 = v39;
      *(_DWORD *)v27 = 134218242;
      v41 = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v27 + 4, v27 + 12);
      *(_WORD *)(v27 + 12) = 2080;
      v40 = v27 + 14;
      v28 = type metadata accessor for ContentMessage.CFIUpdate(0);
      v29 = sub_100008DB0((unint64_t *)&unk_1009F1BF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentMessage.CFIUpdate, (uint64_t)&protocol conformance descriptor for ContentMessage.CFIUpdate);
      v38 = v26;
      v41 = dispatch thunk of CustomStringConvertible.description.getter(v28, v29);
      v42 = v30;
      v31._countAndFlagsBits = 2108704;
      v31._object = (void *)0xE300000000000000;
      String.append(_:)(v31);
      sub_10000B5E4((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v5, &qword_1009D2AC8);
      v32._countAndFlagsBits = String.init<A>(describing:)(v5, v3);
      object = v32._object;
      String.append(_:)(v32);
      swift_bridgeObjectRelease(object);
      v34 = v42;
      v41 = sub_100040F58(v41, v42, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42, v40, v27 + 22);
      swift_bridgeObjectRelease(v34);
      sub_10063750C((uint64_t)v12);
      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v38, "Timer fired after: %ldms - sending: %s", (uint8_t *)v27, 0x16u);
      v35 = v39;
      swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v35, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      sub_10063750C((uint64_t)v12);
    }

    *(_BYTE *)(a1 + OBJC_IVAR____TtC5Books25CurrentLocationController_sendStoredUpdate) = 1;
    sub_10062F8C4(v15, &v15[*(int *)(v9 + 20)]);
    sub_10063750C((uint64_t)v15);
  }
  return sub_100635948(a1);
}

unint64_t sub_100635ED0()
{
  unint64_t result;

  result = qword_1009F1A18;
  if (!qword_1009F1A18)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationControllingError, &type metadata for LocationControllingError);
    atomic_store(result, (unint64_t *)&qword_1009F1A18);
  }
  return result;
}

uint64_t sub_100635F14()
{
  return type metadata accessor for CurrentLocationController(0);
}

uint64_t type metadata accessor for CurrentLocationController(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009F1AC8, (uint64_t)&nominal type descriptor for CurrentLocationController);
}

void sub_100635F30(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[16];

  v6[0] = "\b";
  v6[1] = &unk_1007361A8;
  v6[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[3] = &unk_1007361C0;
  v6[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[5] = &unk_1007361D8;
  v6[6] = &unk_1007361A8;
  v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100636018(319);
  if (v3 <= 0x3F)
  {
    v6[10] = *(_QWORD *)(v2 - 8) + 64;
    v6[11] = &unk_1007361D8;
    v6[12] = &unk_1007361F0;
    v4 = type metadata accessor for Logger(319);
    if (v5 <= 0x3F)
    {
      v6[13] = *(_QWORD *)(v4 - 8) + 64;
      v6[14] = &unk_100736208;
      v6[15] = &unk_1007361D8;
      swift_updateClassMetadata2(a1, 256, 16, v6, a1 + 80);
    }
  }
}

void sub_100636018(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009F1AD8)
  {
    v2 = type metadata accessor for CurrentLocationController.StoredUpdate(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009F1AD8);
  }
}

uint64_t type metadata accessor for CurrentLocationController.StoredUpdate(uint64_t a1)
{
  return sub_10002C92C(a1, qword_1009F1B38, (uint64_t)&nominal type descriptor for CurrentLocationController.StoredUpdate);
}

uint64_t storeEnumTagSinglePayload for LocationControllingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1006360CC + 4 * byte_1007360B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100636100 + 4 * asc_1007360B0[v4]))();
}

uint64_t sub_100636100(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100636108(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100636110);
  return result;
}

uint64_t sub_10063611C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100636124);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100636128(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100636130(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocationControllingError()
{
  return &type metadata for LocationControllingError;
}

uint64_t *sub_10063614C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for ContentMessage.CFIUpdate(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_10004CFD4(&qword_1009D2AD0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_10004CFD4(&qword_1009D2AC8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_100636258(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for ContentMessage.CFIUpdate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_10004CFD4(&qword_1009D2AD0);
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t sub_1006362EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for ContentMessage.CFIUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_10004CFD4(&qword_1009D2AD0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10004CFD4(&qword_1009D2AC8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1006363CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for ContentMessage.CFIUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_10004CFD4(&qword_1009D2AD0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10004CFD4(&qword_1009D2AC8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1006364F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for ContentMessage.CFIUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_10004CFD4(&qword_1009D2AD0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_10004CFD4(&qword_1009D2AC8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1006365D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for ContentMessage.CFIUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_10004CFD4(&qword_1009D2AD0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_10004CFD4(&qword_1009D2AC8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100636704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100636710);
}

uint64_t sub_100636710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for ContentMessage.CFIUpdate(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009D2AC8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_100636788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100636794);
}

uint64_t sub_100636794(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for ContentMessage.CFIUpdate(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_10004CFD4(&qword_1009D2AC8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_100636814(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for ContentMessage.CFIUpdate(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100636898(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

void sub_100636898(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009F4CA0)
  {
    v2 = sub_100030B74(&qword_1009D2AD0);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009F4CA0);
  }
}

unint64_t sub_1006368F0()
{
  unint64_t result;

  result = qword_1009F1B90;
  if (!qword_1009F1B90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocationControllingError, &type metadata for LocationControllingError);
    atomic_store(result, (unint64_t *)&qword_1009F1B90);
  }
  return result;
}

uint64_t sub_100636934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  double v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t ObjectType;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  uint64_t v91;
  __n128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __n128 v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, char *, uint64_t);
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t, uint64_t);
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(char *, char *, uint64_t);
  char *v119;
  uint64_t v120;
  uint64_t v121;
  NSObject *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  os_log_type_t v126;
  uint64_t v127;
  uint8_t *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  __n128 v135;
  void (*v136)(char *, uint64_t, __n128);
  uint64_t v137;
  __n128 v138;
  __n128 v139;
  void (*v140)(char *, uint64_t, __n128);
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t, uint64_t, uint64_t);
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163[2];

  v5 = sub_10004CFD4(&qword_1009D2AC8);
  __chkstk_darwin(v5);
  v156 = (char *)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009D2F38);
  __chkstk_darwin(v7);
  v155 = (char *)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009F1BB0);
  __chkstk_darwin(v9);
  v154 = (char *)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4((uint64_t *)&unk_1009EE7B0);
  __chkstk_darwin(v11);
  v152 = (char *)&v141 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Location(0);
  __chkstk_darwin(v13);
  v153 = (char *)&v141 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for PageLocation(0);
  v160 = *(_QWORD *)(v157 - 8);
  __chkstk_darwin(v157);
  v150 = (char *)&v141 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v159 = (char *)&v141 - v17;
  v18 = type metadata accessor for UUID(0);
  v148 = *(_QWORD *)(v18 - 8);
  v149 = v18;
  __chkstk_darwin(v18);
  v161 = (char *)&v141 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v141 - v22;
  v24 = type metadata accessor for HistoryEntity.Location(0, v21);
  __chkstk_darwin(v24);
  v26 = (uint64_t *)((char *)&v141 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = sub_10004CFD4((uint64_t *)&unk_1009F0210);
  __chkstk_darwin(v27);
  v151 = (char *)&v141 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v141 - v30;
  v32 = sub_10004CFD4(&qword_1009F1C10);
  v33 = __chkstk_darwin(v32);
  v35 = (char *)&v141 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for HistoryEntity(0, v33);
  __chkstk_darwin(v36);
  v158 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v141 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v38);
  v40 = (char *)&v141 - v39;
  v41 = a1;
  v43 = v42;
  v45 = v44;
  sub_10000B5E4(v41, (uint64_t)v35, &qword_1009F1C10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v35, 1, v43) == 1)
  {
    sub_100010960((uint64_t)v35, &qword_1009F1C10);
    v47 = type metadata accessor for HistorySnapshot.Info(0, v46);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(a2, 1, 1, v47);
  }
  v146 = a2;
  v49 = (*(double (**)(char *, char *, uint64_t))(v45 + 32))(v40, v35, v43);
  v50 = type metadata accessor for HistorySnapshot.Info(0, v49);
  v51 = *(_QWORD *)(v50 - 8);
  v145 = v45;
  v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56);
  v52(v31, 1, 1, v50);
  v53 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books25CurrentLocationController_paginationProvider + 8);
  ObjectType = swift_getObjectType();
  v147 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v53);
  HistoryEntity.location.getter();
  if (swift_getEnumCaseMultiPayload(v26, v24) != 1)
  {
    v75 = v145;
    v143 = v43;
    v144 = v31;
    v76 = v26[1];
    v77 = String.cfiSpineIndex.getter(*v26, v76);
    v79 = v78;
    swift_bridgeObjectRelease(v76);
    v80 = v147;
    if ((v79 & 1) == 0)
    {
      v81 = BookPaginationEntity.document(for:)(v77);
      if (v81)
      {
        v82 = v81;
        v83 = v80;
        v84 = dispatch thunk of DocumentPaginationEntity.historyEntitiesByName.getter();
        v85 = ((uint64_t (*)(void))HistoryEntity.uuid.getter)();
        v86 = UUID.uuidString.getter(v85);
        v88 = v87;
        (*(void (**)(char *, uint64_t))(v148 + 8))(v23, v149);
        if (*(_QWORD *)(v84 + 16) && (v89 = sub_10004CE80(v86, v88), (v90 & 1) != 0))
        {
          v91 = *(_QWORD *)(*(_QWORD *)(v84 + 56) + 8 * v89);
          swift_retain(v91);
          swift_bridgeObjectRelease(v88);
          v92 = swift_bridgeObjectRelease(v84);
          v93 = type metadata accessor for HistoryPaginationEntity(0, v92);
          v94 = sub_100008DB0(&qword_1009F1C20, (uint64_t (*)(uint64_t))&type metadata accessor for HistoryPaginationEntity, (uint64_t)&protocol conformance descriptor for ElementPaginationEntity<A>);
          v95 = ElementEntity.startingPageOffset.getter(v93, v94);
          if ((v97 & 1) == 0)
          {
            v98 = v95;
            v99 = DocumentPaginationEntity.ordinal.getter(v96);
            v100 = v159;
            v101 = PageLocation.init(documentOrdinal:pageOffset:)(v99, v98);
            v142 = v40;
            HistoryEntity.uuid.getter(v101);
            v102 = *(void (**)(char *, char *, uint64_t))(v160 + 16);
            v158 = v52;
            v103 = v150;
            v102(v150, v100, v157);
            v104 = sub_10004CFD4(&qword_1009D2F18);
            v105 = v152;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v152, 1, 1, v104);
            v106 = type metadata accessor for Location.AnchorRequest(0);
            v107 = v154;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v154, 1, 1, v106);
            v108 = type metadata accessor for Location.CFIRequest(0);
            v109 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56);
            v149 = v50;
            v110 = v155;
            v109(v155, 1, 1, v108);
            v111 = sub_10004CFD4(&qword_1009D2AD0);
            v112 = v156;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v156, 1, 1, v111);
            v113 = v153;
            Location.init(pageLocation:locationOffset:requestedAnchor:requestedCFI:requestedLocationRect:isRequestedPageChange:)(v103, v105, v107, v110, v112, 0);
            v114 = v151;
            HistorySnapshot.Info.init(uuid:location:)(v161, v113);
            swift_release(v83);
            swift_release(v91);
            v115 = swift_release(v82);
            (*(void (**)(char *, uint64_t, __n128))(v160 + 8))(v159, v157, v115);
            v31 = v144;
            sub_100010960((uint64_t)v144, (uint64_t *)&unk_1009F0210);
            (*(void (**)(char *, uint64_t))(v75 + 8))(v142, v143);
            v158(v114, 0, 1, v149);
            v73 = (uint64_t)v114;
            goto LABEL_5;
          }
          swift_release(v82);
          swift_release(v91);
        }
        else
        {
          swift_release(v82);
          swift_bridgeObjectRelease(v88);
          swift_bridgeObjectRelease(v84);
        }
        v80 = v83;
      }
    }
    if (qword_1009CEAB0 != -1)
      swift_once(&qword_1009CEAB0, sub_100629668);
    v116 = type metadata accessor for Logger(0);
    sub_100048F64(v116, (uint64_t)qword_1009F1A00);
    v117 = v75;
    v118 = *(uint64_t (**)(char *, char *, uint64_t))(v75 + 16);
    v119 = (char *)v158;
    v120 = v143;
    v121 = v118((char *)v158, v40, v143);
    v122 = Logger.logObject.getter(v121);
    v126 = static os_log_type_t.debug.getter(v122, v123, v124, v125);
    if (os_log_type_enabled(v122, v126))
    {
      v127 = swift_slowAlloc(12, -1);
      v142 = v40;
      v128 = (uint8_t *)v127;
      v160 = swift_slowAlloc(32, -1);
      v163[0] = v160;
      *(_DWORD *)v128 = 136315138;
      v159 = (char *)(v128 + 4);
      v129 = v161;
      ((void (*)(void))HistoryEntity.uuid.getter)();
      v130 = sub_100008DB0(&qword_1009F1C18, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v131 = v149;
      v132 = dispatch thunk of CustomStringConvertible.description.getter(v149, v130);
      v134 = v133;
      (*(void (**)(char *, uint64_t))(v148 + 8))(v129, v131);
      v162 = sub_100040F58(v132, v134, v163);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v162, v163, v159, v128 + 12);
      v135 = swift_bridgeObjectRelease(v134);
      v136 = *(void (**)(char *, uint64_t, __n128))(v117 + 8);
      v136((char *)v158, v120, v135);
      _os_log_impl((void *)&_mh_execute_header, v122, v126, "Could not find paginated history with uuid: %s", v128, 0xCu);
      v137 = v160;
      swift_arrayDestroy(v160, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v137, -1, -1);
      swift_slowDealloc(v128, -1, -1);

      v138 = swift_release(v147);
      v136(v142, v120, v138);
    }
    else
    {

      v139 = swift_release(v80);
      v140 = *(void (**)(char *, uint64_t, __n128))(v117 + 8);
      v140(v119, v120, v139);
      ((void (*)(char *, uint64_t))v140)(v40, v120);
    }
    v74 = v146;
    v31 = v144;
    return sub_100025B3C((uint64_t)v31, v74, (uint64_t *)&unk_1009F0210);
  }
  v55 = v159;
  v56 = v160;
  v57 = v157;
  v58 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v160 + 32))(v159, v26, v157);
  HistoryEntity.uuid.getter(v58);
  v59 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  v149 = v50;
  v60 = v150;
  v59(v150, v55, v57);
  v61 = sub_10004CFD4(&qword_1009D2F18);
  v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56);
  v158 = v52;
  v63 = v152;
  v62(v152, 1, 1, v61);
  v64 = type metadata accessor for Location.AnchorRequest(0);
  v65 = v154;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v154, 1, 1, v64);
  v66 = type metadata accessor for Location.CFIRequest(0);
  v67 = v155;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v155, 1, 1, v66);
  v68 = sub_10004CFD4(&qword_1009D2AD0);
  v69 = v156;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v156, 1, 1, v68);
  v70 = v153;
  Location.init(pageLocation:locationOffset:requestedAnchor:requestedCFI:requestedLocationRect:isRequestedPageChange:)(v60, v63, v65, v67, v69, 0);
  v71 = v151;
  HistorySnapshot.Info.init(uuid:location:)(v161, v70);
  v72 = swift_release(v147);
  (*(void (**)(char *, uint64_t, __n128))(v160 + 8))(v159, v57, v72);
  sub_100010960((uint64_t)v31, (uint64_t *)&unk_1009F0210);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v40, v43);
  v158(v71, 0, 1, v149);
  v73 = (uint64_t)v71;
LABEL_5:
  sub_100025B3C(v73, (uint64_t)v31, (uint64_t *)&unk_1009F0210);
  v74 = v146;
  return sub_100025B3C((uint64_t)v31, v74, (uint64_t *)&unk_1009F0210);
}

uint64_t sub_100637404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for SpreadPaginationEntity(0);
  v5 = sub_100008DB0((unint64_t *)&qword_1009E8E80, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity, (uint64_t)&protocol conformance descriptor for SpreadPaginationEntity);
  return dispatch thunk of static Equatable.== infix(_:_:)(a1, v3, v4, v5) & 1;
}

uint64_t sub_100637478()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10063749C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1006374C0(uint64_t a1)
{
  uint64_t v1;

  sub_100632FA4(a1, *(_QWORD *)(v1 + 24));
}

uint64_t sub_1006374C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CurrentLocationController.StoredUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10063750C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CurrentLocationController.StoredUpdate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100637548()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10063756C()
{
  uint64_t v0;

  return sub_100635A40(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100637574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CurrentLocationController.StoredUpdate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t EngagementManagerMetadata.propertyCounts.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR___BKEngagementManagerMetadata_propertyCounts);
  swift_beginAccess(v0 + OBJC_IVAR___BKEngagementManagerMetadata_propertyCounts, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t EngagementManagerMetadata.propertyCounts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR___BKEngagementManagerMetadata_propertyCounts);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*EngagementManagerMetadata.propertyCounts.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKEngagementManagerMetadata_propertyCounts, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t EngagementManagerMetadata.lastSyncToCloudKitSuccessTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100637B40(&OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitSuccessTimestamp, a1);
}

uint64_t EngagementManagerMetadata.lastSyncToCloudKitSuccessTimestamp.setter(uint64_t a1)
{
  return sub_100637BA4(a1, &OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitSuccessTimestamp);
}

uint64_t (*EngagementManagerMetadata.lastSyncToCloudKitSuccessTimestamp.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitSuccessTimestamp, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t EngagementManagerMetadata.lastSyncToCloudKitError.getter()
{
  return sub_1006379D8(&OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitError);
}

uint64_t EngagementManagerMetadata.lastSyncToCloudKitError.setter(uint64_t a1)
{
  return sub_100637A98(a1, &OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitError);
}

uint64_t (*EngagementManagerMetadata.lastSyncToCloudKitError.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitError, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t EngagementManagerMetadata.lastSyncToCloudKitErrorTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100637B40(&OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitErrorTimestamp, a1);
}

uint64_t EngagementManagerMetadata.lastSyncToCloudKitErrorTimestamp.setter(uint64_t a1)
{
  return sub_100637BA4(a1, &OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitErrorTimestamp);
}

uint64_t (*EngagementManagerMetadata.lastSyncToCloudKitErrorTimestamp.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitErrorTimestamp, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t EngagementManagerMetadata.lastSyncFromCloudKitSuccessTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100637B40(&OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitSuccessTimestamp, a1);
}

uint64_t EngagementManagerMetadata.lastSyncFromCloudKitSuccessTimestamp.setter(uint64_t a1)
{
  return sub_100637BA4(a1, &OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitSuccessTimestamp);
}

uint64_t (*EngagementManagerMetadata.lastSyncFromCloudKitSuccessTimestamp.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitSuccessTimestamp, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_100637960(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + *a3);
  swift_beginAccess(v3, v7, 0, 0);
  v4 = *v3;
  if (!v4)
    return 0;
  swift_errorRetain(v4);
  v5 = (void *)_convertErrorToNSError(_:)(v4);
  swift_errorRelease(v4);
  return v5;
}

uint64_t EngagementManagerMetadata.lastSyncFromCloudKitError.getter()
{
  return sub_1006379D8(&OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitError);
}

uint64_t sub_1006379D8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess(v2, v5, 0, 0);
  v3 = *v2;
  swift_errorRetain(v3);
  return v3;
}

uint64_t sub_100637A30(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  uint64_t *v5;
  uint64_t v6;
  id v7;
  _BYTE v9[24];

  v5 = (uint64_t *)(a1 + *a4);
  swift_beginAccess(v5, v9, 1, 0);
  v6 = *v5;
  *v5 = (uint64_t)a3;
  v7 = a3;
  return swift_errorRelease(v6);
}

uint64_t EngagementManagerMetadata.lastSyncFromCloudKitError.setter(uint64_t a1)
{
  return sub_100637A98(a1, &OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitError);
}

uint64_t sub_100637A98(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (uint64_t *)(v2 + *a2);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = *v4;
  *v4 = a1;
  return swift_errorRelease(v5);
}

uint64_t (*EngagementManagerMetadata.lastSyncFromCloudKitError.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitError, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t EngagementManagerMetadata.lastSyncFromCloudKitErrorTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100637B40(&OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitErrorTimestamp, a1);
}

uint64_t sub_100637B40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  v4 = v2 + *a1;
  swift_beginAccess(v4, v6, 0, 0);
  return sub_1001FE7C4(v4, a2);
}

uint64_t EngagementManagerMetadata.lastSyncFromCloudKitErrorTimestamp.setter(uint64_t a1)
{
  return sub_100637BA4(a1, &OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitErrorTimestamp);
}

uint64_t sub_100637BA4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  v4 = v2 + *a2;
  swift_beginAccess(v4, v6, 33, 0);
  sub_10006CD88(a1, v4);
  return swift_endAccess(v6);
}

uint64_t (*EngagementManagerMetadata.lastSyncFromCloudKitErrorTimestamp.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitErrorTimestamp, a1, 33, 0);
  return j_j__swift_endAccess;
}

id EngagementManagerMetadata.init()()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void (*v3)(char *, uint64_t, uint64_t, uint64_t);
  objc_super v5;

  *(_QWORD *)&v0[OBJC_IVAR___BKEngagementManagerMetadata_propertyCounts] = _swiftEmptyDictionarySingleton;
  v1 = &v0[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitSuccessTimestamp];
  v2 = type metadata accessor for Date(0);
  v3 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  *(_QWORD *)&v0[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitError] = 0;
  v3(&v0[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncToCloudKitErrorTimestamp], 1, 1, v2);
  v3(&v0[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitSuccessTimestamp], 1, 1, v2);
  *(_QWORD *)&v0[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitError] = 0;
  v3(&v0[OBJC_IVAR___BKEngagementManagerMetadata_lastSyncFromCloudKitErrorTimestamp], 1, 1, v2);
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for EngagementManagerMetadata(0);
  return objc_msgSendSuper2(&v5, "init");
}

id EngagementManagerMetadata.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EngagementManagerMetadata(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100637D68()
{
  return type metadata accessor for EngagementManagerMetadata(0);
}

double destroy for BookmarkNotesView(uint64_t a1)
{
  double result;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);

  swift_release(*(_QWORD *)(a1 + 56));
  *(_QWORD *)&result = swift_release(*(_QWORD *)(a1 + 72)).n128_u64[0];
  return result;
}

uint64_t initializeWithCopy for BookmarkNotesView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  v5 = *(void **)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = v5;
  swift_retain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t assignWithCopy for BookmarkNotesView(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1001EAB00((_QWORD *)a1, (_QWORD *)a2);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  v4 = *(void **)(a2 + 48);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  swift_retain(v7);
  swift_release(v8);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v10;
  swift_retain(v10);
  swift_release(v9);
  return a1;
}

__n128 initializeWithTake for BookmarkNotesView(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for BookmarkNotesView(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_BYTE *)(a1 + 42) = *(_BYTE *)(a2 + 42);
  v5 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v6);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release(v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookmarkNotesView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookmarkNotesView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookmarkNotesView()
{
  return &type metadata for BookmarkNotesView;
}

uint64_t sub_100638008(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087AE94, 1);
}

void sub_100638018()
{
  qword_1009F1D40 = 0x4038000000000000;
}

void sub_100638028()
{
  qword_1009F1D48 = 0x4010000000000000;
}

void sub_100638038(uint64_t a1@<X2>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 56);
  KeyPath = swift_getKeyPath(&unk_100736448);
  v6 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v6, KeyPath, v5);
  swift_release(KeyPath);
  *a2 = *(_BYTE *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__bookmarkNotesContentType);
}

double sub_1006380CC(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t Strong;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  _QWORD v16[3];
  char v17;
  char v18;
  _QWORD v19[2];

  v5 = *a1;
  v6 = *(_QWORD *)(a4 + 72);
  LOBYTE(v19[0]) = *(_BYTE *)(a4 + 64);
  v19[1] = v6;
  v18 = 0;
  v7 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.setter(&v18, v7);
  v8 = sub_10003F198((_QWORD *)a4, *(_QWORD *)(a4 + 24));
  Strong = swift_unknownObjectWeakLoadStrong(v8);
  if (Strong)
  {
    v11 = Strong;
    v12 = swift_weakLoadStrong(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_viewModel);
    if (v12)
    {
      v13 = v12;
      KeyPath = swift_getKeyPath(&unk_100736448);
      __chkstk_darwin(KeyPath);
      v16[2] = v13;
      v17 = v5;
      v19[0] = v13;
      v15 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(v19, KeyPath, sub_1005EDD90, v16, (char *)&type metadata for () + 8, v15);
      swift_unknownObjectRelease(v11);
      swift_release(v13);
      *(_QWORD *)&result = swift_release(KeyPath).n128_u64[0];
    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v11).n128_u64[0];
    }
  }
  return result;
}

uint64_t sub_100638224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  char v38;
  char *v39;
  uint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t KeyPath;
  uint64_t v55;
  id v56;
  char *v57;
  __n128 v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  _QWORD v103[4];

  v102 = a1;
  v2 = sub_10004CFD4(&qword_1009EFEC0);
  __chkstk_darwin(v2);
  v101 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ColorScheme(0);
  v96 = *(_QWORD *)(v4 - 8);
  v97 = v4;
  __chkstk_darwin(v4);
  v95 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v94 = (char *)&v81 - v7;
  v8 = type metadata accessor for Material(0);
  v89 = *(_QWORD *)(v8 - 8);
  v90 = v8;
  __chkstk_darwin(v8);
  v88 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009F1D58);
  v86 = *(_QWORD *)(v10 - 8);
  v87 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009F1D60);
  v92 = *(_QWORD *)(v13 - 8);
  v93 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_10004CFD4(&qword_1009F1D68);
  __chkstk_darwin(v91);
  v99 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009F1D70);
  __chkstk_darwin(v17);
  v98 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v100 = (uint64_t)&v81 - v20;
  v21 = sub_10004CFD4(&qword_1009F1D78);
  __chkstk_darwin(v21);
  v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10004CFD4(&qword_1009F1D80);
  __chkstk_darwin(v24);
  v26 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_10004CFD4(&qword_1009F1D88);
  __chkstk_darwin(v27);
  v29 = (char *)&v81 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v33 = (char *)&v81 - v32;
  if (*(_BYTE *)(v1 + 40) == 1)
  {
    *(_QWORD *)v26 = static HorizontalAlignment.leading.getter(v31);
    *((_QWORD *)v26 + 1) = 0;
    v26[16] = 0;
    v34 = sub_10004CFD4(&qword_1009F1E00);
    sub_100638984(v1, (uint64_t)&v26[*(int *)(v34 + 44)]);
    v36 = static Color.clear.getter(v35);
    v38 = static Edge.Set.all.getter(v37);
    sub_10000B5E4((uint64_t)v26, (uint64_t)v29, &qword_1009F1D80);
    v39 = &v29[*(int *)(v27 + 36)];
    *(_QWORD *)v39 = v36;
    v39[8] = v38;
    sub_100010960((uint64_t)v26, &qword_1009F1D80);
    v40 = &qword_1009F1D88;
    sub_100025B3C((uint64_t)v29, (uint64_t)v33, &qword_1009F1D88);
    sub_10000B5E4((uint64_t)v33, (uint64_t)v23, &qword_1009F1D88);
    swift_storeEnumTagMultiPayload(v23, v21, 0);
    v41 = sub_10063AC60();
    v42 = sub_10063ACFC();
    _ConditionalContent<>.init(storage:)(v23, v27, v17, v41, v42);
    v43 = (uint64_t)v33;
  }
  else
  {
    v82 = v27;
    v84 = v21;
    v83 = v23;
    v85 = v17;
    __chkstk_darwin(v31);
    *(&v81 - 2) = v1;
    v44 = sub_10004CFD4(&qword_1009F1D90);
    v45 = sub_100030B34(&qword_1009F1D98, &qword_1009F1D90, (uint64_t)&protocol conformance descriptor for VStack<A>);
    v46 = NavigationStack.init<>(root:)(sub_10063AC48, &v81 - 4, v44, v45);
    v47 = v88;
    static Material.thick.getter(v46);
    v48 = sub_100030B34((unint64_t *)&unk_1009F1DA0, &qword_1009F1D58, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
    v49 = v15;
    v50 = v87;
    v51 = v90;
    View.presentationBackground<A>(_:)(v47, v87, v90, v48, &protocol witness table for Material);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v47, v51);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v12, v50);
    v52 = v1;
    v53 = *(void **)(*(_QWORD *)(v1 + 56) + 104);
    KeyPath = swift_getKeyPath(&unk_1007363D8);
    v55 = swift_getKeyPath(&unk_100736400);
    v56 = v53;
    v57 = v94;
    static Published.subscript.getter(v94, v56, KeyPath);
    swift_release(KeyPath);
    v58 = swift_release(v55);
    v59 = v95;
    v60 = v96;
    v61 = v97;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v96 + 104))(v95, enum case for ColorScheme.light(_:), v97, v58);
    LOBYTE(KeyPath) = static ColorScheme.== infix(_:_:)(v57, v59);
    v62 = *(void (**)(char *, uint64_t))(v60 + 8);
    v62(v59, v61);
    v62(v57, v61);
    if ((KeyPath & 1) != 0)
      v63 = _s5Books11ChromeStyleC26_secondaryButtonLabelColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0G0VGvpfi_0();
    else
      v63 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
    v64 = v63;
    v65 = v85;
    v66 = (uint64_t)v83;

    v68 = v92;
    v67 = v93;
    v69 = (uint64_t)v99;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v99, v49, v93);
    *(_QWORD *)(v69 + *(int *)(v91 + 36)) = v64;
    (*(void (**)(char *, uint64_t))(v68 + 8))(v49, v67);
    v70 = *(_QWORD *)(v52 + 56);
    v71 = swift_getKeyPath(&unk_100736420);
    v103[0] = v70;
    v72 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v103, v71, v72);
    swift_release(v71);
    v73 = v70 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme;
    v74 = swift_beginAccess(v70 + OBJC_IVAR____TtC5Books19BookReaderViewModel__themeColorScheme, v103, 0, 0);
    v75 = (uint64_t)v101;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v60 + 16))(v101, v73, v61, v74);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v75, 0, 1, v61);
    v76 = (uint64_t)v98;
    sub_10000B5E4(v75, (uint64_t)&v98[*(int *)(v65 + 36)], &qword_1009EFEC0);
    sub_10000B5E4(v69, v76, &qword_1009F1D68);
    sub_100010960(v75, &qword_1009EFEC0);
    sub_100010960(v69, &qword_1009F1D68);
    v40 = &qword_1009F1D70;
    v77 = v100;
    sub_100025B3C(v76, v100, &qword_1009F1D70);
    sub_10000B5E4(v77, v66, &qword_1009F1D70);
    swift_storeEnumTagMultiPayload(v66, v84, 1);
    v78 = sub_10063AC60();
    v79 = sub_10063ACFC();
    _ConditionalContent<>.init(storage:)(v66, v82, v65, v78, v79);
    v43 = v77;
  }
  return sub_100010960(v43, v40);
}

double sub_100638984@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjCClassFromMetadata;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v4 = sub_10004CFD4(&qword_1009F1E08);
  __chkstk_darwin(v4);
  v49 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v48 = (char *)&v44 - v7;
  v8 = type metadata accessor for Locale(0);
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - v12;
  v14 = type metadata accessor for String.LocalizationValue(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v44 - v19;
  v47 = a1;
  v21 = *(_QWORD *)(a1 + 56);
  KeyPath = swift_getKeyPath(&unk_100736448);
  v50 = v21;
  v23 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v50, KeyPath, v23);
  swift_release(KeyPath);
  if ((*(_BYTE *)(v21 + OBJC_IVAR____TtC5Books19BookReaderViewModel__bookmarkNotesContentType) & 1) != 0)
  {
    v24 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007DA860);
    static Locale.current.getter(v24);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
    v25 = type metadata accessor for BundleFinder();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v25);
    v27 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
    v29 = v45;
    v28 = v46;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v10, v13, v46);
    v30 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v27, v10, "The header for the highlights and notes popover", 47, 2);
  }
  else
  {
    v32 = String.LocalizationValue.init(stringLiteral:)(0x6B72616D6B6F6F42, 0xE900000000000073);
    static Locale.current.getter(v32);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
    v33 = type metadata accessor for BundleFinder();
    v34 = swift_getObjCClassFromMetadata(v33);
    v35 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v34);
    v29 = v45;
    v28 = v46;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v10, v13, v46);
    v30 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v35, v10, "The header for the bookmarks popover", 36, 2);
  }
  v36 = v30;
  v37 = v31;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v28);
  v38 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  v39 = static Edge.Set.horizontal.getter(v38);
  v40 = (uint64_t)v48;
  sub_100638D5C();
  v41 = v49;
  sub_10000B5E4(v40, v49, &qword_1009F1E08);
  *(_QWORD *)a2 = v36;
  *(_QWORD *)(a2 + 8) = v37;
  *(_BYTE *)(a2 + 16) = v39;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_BYTE *)(a2 + 56) = 1;
  v42 = sub_10004CFD4(&qword_1009F1E10);
  sub_10000B5E4(v41, a2 + *(int *)(v42 + 48), &qword_1009F1E08);
  swift_bridgeObjectRetain(v37);
  sub_100010960(v40, &qword_1009F1E08);
  sub_100010960(v41, &qword_1009F1E08);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v37).n128_u64[0];
  return result;
}

uint64_t sub_100638D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t KeyPath;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t OpaqueTypeConformance2;
  _QWORD v18[2];

  v1 = sub_10004CFD4(&qword_1009F1E18);
  __chkstk_darwin(v1);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009F1E20);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v0 + 56);
  KeyPath = swift_getKeyPath(&unk_100736448);
  v18[0] = v8;
  v10 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v18, KeyPath, v10);
  swift_release(KeyPath);
  if ((*(_BYTE *)(v8 + OBJC_IVAR____TtC5Books19BookReaderViewModel__bookmarkNotesContentType) & 1) != 0)
  {
    sub_10063A5CC(0, (char *)2, (uint64_t)v7);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
    v11 = v3;
    v12 = v1;
    v13 = 1;
  }
  else
  {
    sub_10063A5CC(0, (char *)1, (uint64_t)v7);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
    v11 = v3;
    v12 = v1;
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(v11, v12, v13);
  v14 = sub_100030B74(&qword_1009F1E28);
  v15 = sub_10063AE6C();
  v18[0] = v14;
  v18[1] = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v18, &opaque type descriptor for <<opaque return type of View.persistentSystemOverlays(_:)>>, 1);
  _ConditionalContent<>.init(storage:)(v3, v4, v4, OpaqueTypeConformance2, OpaqueTypeConformance2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100638F4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  *(_QWORD *)a2 = static HorizontalAlignment.leading.getter(a1);
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 1;
  v4 = sub_10004CFD4(&qword_1009F1E60);
  return sub_100638F98(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_100638F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  int v59;
  char *v60;
  int v61;
  uint64_t v62;
  double v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t OpaqueTypeConformance2;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  _QWORD v154[2];

  v142 = type metadata accessor for NavigationBarItem.TitleDisplayMode(0);
  v140 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v135 = (char *)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009F1E08);
  __chkstk_darwin(v5);
  v7 = (char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = sub_10004CFD4(&qword_1009F1E68);
  v136 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v133 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_10004CFD4(&qword_1009F1E70);
  v141 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v139 = (char *)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_10004CFD4(&qword_1009F1E78);
  v145 = *(_QWORD *)(v138 - 8);
  __chkstk_darwin(v138);
  v137 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v144 = (char *)&v118 - v13;
  v14 = type metadata accessor for SegmentedPickerStyle(0, v12);
  v122 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_10004CFD4(&qword_1009F1E80);
  v120 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_10004CFD4(&qword_1009F1E88);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v121 = (char *)&v118 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_10004CFD4(&qword_1009F1E90);
  __chkstk_darwin(v123);
  v130 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = sub_10004CFD4(&qword_1009F1E98);
  __chkstk_darwin(v126);
  v129 = (uint64_t)&v118 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_10004CFD4(&qword_1009F1EA0);
  v131 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v128 = (uint64_t)&v118 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v127 = (uint64_t)&v118 - v26;
  v27 = sub_10004CFD4(&qword_1009F1EA8);
  __chkstk_darwin(v27);
  v132 = (uint64_t)&v118 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v31 = (char *)&v118 - v30;
  v32 = *(unsigned __int8 *)(a1 + 41);
  v146 = a2;
  v147 = (char *)&v118 - v30;
  v148 = a1;
  if (v32 == 1)
  {
    v119 = v23;
    v33 = v7;
    v34 = v5;
    v154[0] = 0;
    v154[1] = 0xE000000000000000;
    sub_1002D1038(a1, (uint64_t)&v149);
    v35 = type metadata accessor for MainActor(0);
    v36 = static MainActor.shared.getter(v35);
    v37 = swift_allocObject(&unk_1009193B8, 112, 7);
    v38 = a1;
    v39 = v37;
    *(_QWORD *)(v37 + 16) = v36;
    *(_QWORD *)(v37 + 24) = &protocol witness table for MainActor;
    v40 = v152;
    *(_OWORD *)(v37 + 64) = v151;
    *(_OWORD *)(v37 + 80) = v40;
    *(_OWORD *)(v37 + 96) = v153;
    v41 = v150;
    *(_OWORD *)(v37 + 32) = v149;
    *(_OWORD *)(v37 + 48) = v41;
    v42 = sub_1002D1038(v38, (uint64_t)&v149);
    v43 = static MainActor.shared.getter(v42);
    v44 = swift_allocObject(&unk_1009193E0, 112, 7);
    *(_QWORD *)(v44 + 16) = v43;
    *(_QWORD *)(v44 + 24) = &protocol witness table for MainActor;
    v45 = v152;
    *(_OWORD *)(v44 + 64) = v151;
    *(_OWORD *)(v44 + 80) = v45;
    *(_OWORD *)(v44 + 96) = v153;
    v46 = v150;
    *(_OWORD *)(v44 + 32) = v149;
    *(_OWORD *)(v44 + 48) = v46;
    Binding.init(get:set:)(&v149, sub_10063B37C, v39, sub_10063B3D0, v44, &type metadata for BookmarkNotesContentType);
    v47 = sub_10004CFD4(&qword_1009F1ED8);
    v48 = sub_10063B3DC();
    v49 = sub_100030B34(&qword_1009F1EE8, &qword_1009F1ED8, (uint64_t)&protocol conformance descriptor for TupleView<A>);
    v50 = sub_1001F2108();
    v51 = Picker<>.init<A>(_:selection:content:)(v154, &v149, sub_100639AB0, 0, &type metadata for BookmarkNotesContentType, v47, &type metadata for String, v48, v49, v50);
    SegmentedPickerStyle.init()(v51);
    v52 = sub_100030B34(&qword_1009F1EF0, &qword_1009F1E80, (uint64_t)&protocol conformance descriptor for Picker<A, B, C>);
    v53 = v121;
    View.pickerStyle<A>(_:)(v16, v17, v14, v52, &protocol witness table for SegmentedPickerStyle);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v16, v14);
    v54 = (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v19, v17);
    v55 = static Edge.Set.leading.getter(v54);
    v56 = v55;
    v57 = static Edge.Set.trailing.getter(v55);
    v58 = Edge.Set.init(rawValue:)(0);
    v59 = Edge.Set.init(rawValue:)(v58);
    if (Edge.Set.init(rawValue:)(v59 & v56) != v56)
      v58 = Edge.Set.init(rawValue:)(v58 | v56);
    v60 = v53;
    v61 = Edge.Set.init(rawValue:)(v58);
    if (Edge.Set.init(rawValue:)(v61 & v57) != v57)
      LOBYTE(v58) = Edge.Set.init(rawValue:)(v58 | v57);
    a1 = v148;
    v5 = v34;
    v62 = (uint64_t)v130;
    v7 = v33;
    if (qword_1009CEAB8 != -1)
      swift_once(&qword_1009CEAB8, sub_100638018);
    v63 = EdgeInsets.init(_all:)(*(double *)&qword_1009F1D40);
    v65 = v64;
    v67 = v66;
    v69 = v68;
    v70 = v124;
    v71 = v53;
    v72 = v125;
    (*(void (**)(uint64_t, char *, uint64_t))(v124 + 16))(v62, v71, v125);
    v73 = v62 + *(int *)(v123 + 36);
    *(_BYTE *)v73 = v58;
    *(double *)(v73 + 8) = v63;
    *(_QWORD *)(v73 + 16) = v65;
    *(_QWORD *)(v73 + 24) = v67;
    *(_QWORD *)(v73 + 32) = v69;
    *(_BYTE *)(v73 + 40) = 0;
    v74 = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v60, v72);
    v75 = static Edge.Set.bottom.getter(v74);
    v23 = v119;
    if (qword_1009CEAC0 != -1)
      swift_once(&qword_1009CEAC0, sub_100638028);
    v76 = EdgeInsets.init(_all:)(*(double *)&qword_1009F1D48);
    v78 = v77;
    v80 = v79;
    v82 = v81;
    v83 = v129;
    sub_10000B5E4(v62, v129, &qword_1009F1E90);
    v84 = v83 + *(int *)(v126 + 36);
    *(_BYTE *)v84 = v75;
    *(double *)(v84 + 8) = v76;
    *(_QWORD *)(v84 + 16) = v78;
    *(_QWORD *)(v84 + 24) = v80;
    *(_QWORD *)(v84 + 32) = v82;
    *(_BYTE *)(v84 + 40) = 0;
    sub_100010960(v62, &qword_1009F1E90);
    v85 = v128;
    sub_10000B5E4(v83, v128, &qword_1009F1E98);
    *(_BYTE *)(v85 + *(int *)(v23 + 36)) = 1;
    sub_100010960(v83, &qword_1009F1E98);
    v86 = v85;
    v87 = v127;
    sub_100025B3C(v86, v127, &qword_1009F1EA0);
    v88 = v87;
    v31 = v147;
    sub_100025B3C(v88, (uint64_t)v147, &qword_1009F1EA0);
    v89 = 0;
  }
  else
  {
    v89 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v131 + 56))(v31, v89, 1, v23);
  sub_100638D5C();
  v90 = (uint64_t *)(*(_QWORD *)(a1 + 56) + OBJC_IVAR____TtC5Books19BookReaderViewModel_bookTitle);
  v92 = *v90;
  v91 = v90[1];
  *(_QWORD *)&v149 = v92;
  *((_QWORD *)&v149 + 1) = v91;
  v93 = sub_10063B2E4();
  v94 = sub_1001F2108();
  v95 = v133;
  View.navigationTitle<A>(_:)(&v149, v5, &type metadata for String, v93, v94);
  sub_100010960((uint64_t)v7, &qword_1009F1E08);
  v96 = v140;
  v97 = v135;
  v98 = v142;
  (*(void (**)(char *, _QWORD, uint64_t))(v140 + 104))(v135, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v142);
  *(_QWORD *)&v149 = v5;
  *((_QWORD *)&v149 + 1) = &type metadata for String;
  *(_QWORD *)&v150 = v93;
  *((_QWORD *)&v150 + 1) = v94;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v149, &opaque type descriptor for <<opaque return type of View.navigationTitle<A>(_:)>>, 1);
  v100 = v139;
  v101 = v134;
  View.navigationBarTitleDisplayMode(_:)(v97, v134, OpaqueTypeConformance2);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v98);
  v102 = (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v95, v101);
  __chkstk_darwin(v102);
  v103 = sub_10004CFD4(&qword_1009F1EC0);
  *(_QWORD *)&v149 = v101;
  *((_QWORD *)&v149 + 1) = OpaqueTypeConformance2;
  v104 = swift_getOpaqueTypeConformance2(&v149, &opaque type descriptor for <<opaque return type of View.navigationBarTitleDisplayMode(_:)>>, 1);
  v105 = sub_100030B34(&qword_1009F1EC8, &qword_1009F1EC0, (uint64_t)&protocol conformance descriptor for TupleToolbarContent<A>);
  v106 = v137;
  v107 = v143;
  View.toolbar<A>(content:)(sub_10063B370, &v118 - 4, v143, v103, v104, v105);
  (*(void (**)(char *, uint64_t))(v141 + 8))(v100, v107);
  v109 = v144;
  v108 = v145;
  v110 = v138;
  (*(void (**)(char *, char *, uint64_t))(v145 + 32))(v144, v106, v138);
  v111 = (uint64_t)v147;
  v112 = v132;
  sub_10000B5E4((uint64_t)v147, v132, &qword_1009F1EA8);
  v113 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
  v113(v106, v109, v110);
  v114 = v146;
  sub_10000B5E4(v112, v146, &qword_1009F1EA8);
  v115 = sub_10004CFD4(&qword_1009F1ED0);
  v113((char *)(v114 + *(int *)(v115 + 48)), v106, v110);
  v116 = *(void (**)(char *, uint64_t))(v108 + 8);
  v116(v109, v110);
  sub_100010960(v111, &qword_1009F1EA8);
  v116(v106, v110);
  return sub_100010960(v112, &qword_1009F1EA8);
}

double sub_100639AB0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  double result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double (*v52)(char *, uint64_t);
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  id v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;

  v2 = type metadata accessor for Locale(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v49 - v7;
  v9 = type metadata accessor for String.LocalizationValue(0);
  v10 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  __chkstk_darwin(v9);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v49 - v14;
  v16 = String.LocalizationValue.init(stringLiteral:)(0x6B72616D6B6F6F42, 0xE900000000000073);
  static Locale.current.getter(v16);
  v60 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v60(v12, v15, v9);
  v17 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v59 = ObjCClassFromMetadata;
  v58 = (id)objc_opt_self(NSBundle);
  v19 = objc_msgSend(v58, "bundleForClass:", ObjCClassFromMetadata);
  v57 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v50 = v2;
  v57(v5, v8, v2);
  v20 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v19, v5, "Bookmarks section title in reader", 33, 2);
  v22 = v21;
  v53 = *(void (**)(char *, uint64_t))(v3 + 8);
  v53(v8, v2);
  v52 = *(double (**)(char *, uint64_t))(v10 + 8);
  v23 = v51;
  v52(v15, v51);
  v61 = v20;
  v62 = v22;
  v24 = sub_1001F2108();
  v26 = Text.init<A>(_:)(&v61, &type metadata for String, v24, v25);
  v55 = v27;
  v56 = v26;
  v54 = v28;
  LOBYTE(v2) = v29 & 1;
  v30 = String.LocalizationValue.init(stringLiteral:)(0x6867696C68676948, 0xEA00000000007374);
  static Locale.current.getter(v30);
  v31 = v23;
  v60(v12, v15, v23);
  v32 = objc_msgSend(v58, "bundleForClass:", v59);
  v33 = v50;
  v57(v5, v8, v50);
  v34 = String.init(localized:table:bundle:locale:comment:)(v12, 0, 0, v32, v5, "Higlights section title in reader", 33, 2);
  v36 = v35;
  v53(v8, v33);
  v37.n128_f64[0] = v52(v15, v31);
  v61 = v34;
  v62 = v36;
  v38 = Text.init<A>(_:)(&v61, &type metadata for String, v24, v37);
  v40 = v39;
  v42 = v41;
  LOBYTE(v61) = v2;
  LOBYTE(v34) = v43 & 1;
  v45 = v55;
  v44 = v56;
  v46 = v54;
  *(_QWORD *)a1 = v56;
  *(_QWORD *)(a1 + 8) = v46;
  *(_BYTE *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v45;
  *(_WORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v38;
  *(_QWORD *)(a1 + 48) = v39;
  *(_BYTE *)(a1 + 56) = v43 & 1;
  *(_QWORD *)(a1 + 64) = v41;
  *(_WORD *)(a1 + 72) = 257;
  v47 = v44;
  sub_1001F596C(v44, v46, v2);
  swift_bridgeObjectRetain(v45);
  sub_1001F596C(v38, v40, v34);
  swift_bridgeObjectRetain(v42);
  sub_1001F5B28(v38, v40, v34);
  swift_bridgeObjectRelease(v42);
  sub_1001F5B28(v47, v46, v61);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v45).n128_u64[0];
  return result;
}

uint64_t sub_100639E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t OpaqueTypeConformance2;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31[16];
  uint64_t v32;
  char v33[16];
  uint64_t v34;
  _QWORD v35[2];

  v30 = a2;
  v29 = sub_10004CFD4(&qword_1009F1EF8);
  __chkstk_darwin(v29);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_10004CFD4(&qword_1009F1F00);
  v5 = *(_QWORD *)(v28 - 8);
  v6 = __chkstk_darwin(v28);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ToolbarItemPlacement(0, v6);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009F1F08);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.topBarLeading.getter(v14);
  v34 = a1;
  v17 = sub_10004CFD4(&qword_1009D8460);
  v18 = sub_100030B34((unint64_t *)&qword_1009F4060, &qword_1009D8460, (uint64_t)&protocol conformance descriptor for Button<A>);
  v19 = ToolbarItem<>.init(placement:content:)(v11, sub_10063B420, v33, v17, v18);
  static ToolbarItemPlacement.topBarTrailing.getter(v19);
  v32 = a1;
  v20 = sub_10004CFD4(&qword_1009F1F10);
  v35[0] = v17;
  v35[1] = v18;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v35, &opaque type descriptor for <<opaque return type of View.bold(_:)>>, 1);
  ToolbarItem<>.init(placement:content:)(v11, sub_10063B440, v31, v20, OpaqueTypeConformance2);
  v22 = v29;
  v23 = &v4[*(int *)(v29 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v4, v16, v12);
  v24 = v23;
  v25 = v28;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v24, v8, v28);
  TupleToolbarContent.init(_:)(v4, v22);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_10063A088()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  double (*v5)();
  uint64_t (*v6)@<X0>(uint64_t *@<X8>);
  __int128 v7;
  __int128 v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 72);
  LOBYTE(v10) = *(_BYTE *)(v0 + 64);
  *((_QWORD *)&v10 + 1) = v1;
  sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v15);
  if (v15 == 1)
  {
    sub_1002D1038(v0, (uint64_t)&v10);
    v2 = (_OWORD *)swift_allocObject(&unk_100919458, 96, 7);
    v3 = v13;
    v2[3] = v12;
    v2[4] = v3;
    v2[5] = v14;
    v4 = v11;
    v2[1] = v10;
    v2[2] = v4;
    v5 = sub_10063B524;
    v6 = sub_10063A2CC;
  }
  else
  {
    sub_1002D1038(v0, (uint64_t)&v10);
    v2 = (_OWORD *)swift_allocObject(&unk_100919430, 96, 7);
    v7 = v13;
    v2[3] = v12;
    v2[4] = v7;
    v2[5] = v14;
    v8 = v11;
    v2[1] = v10;
    v2[2] = v8;
    v5 = sub_10063B458;
    v6 = sub_10063A378;
  }
  return Button.init(action:label:)(v5, v2, v6, 0, &type metadata for Text, &protocol witness table for Text);
}

uint64_t sub_10063A1AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _OWORD v11[5];

  v2 = sub_10004CFD4(&qword_1009D8460);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002D1038(a1, (uint64_t)v11);
  v6 = (_OWORD *)swift_allocObject(&unk_100919408, 96, 7);
  v7 = v11[3];
  v6[3] = v11[2];
  v6[4] = v7;
  v6[5] = v11[4];
  v8 = v11[1];
  v6[1] = v11[0];
  v6[2] = v8;
  Button.init(action:label:)(sub_10063B44C, v6, sub_10063A3C8, 0, &type metadata for Text, &protocol witness table for Text);
  v9 = sub_100030B34((unint64_t *)&qword_1009F4060, &qword_1009D8460, (uint64_t)&protocol conformance descriptor for Button<A>);
  View.bold(_:)(1, v2, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_10063A2CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_10063A3E4(0x6C65636E6143, 0xE600000000000000, "Cancel multi select on Bookmarks / Highlights", 45, a1);
}

double sub_10063A2EC(uint64_t a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  double result;
  _BYTE v5[9];
  uint64_t v6;
  uint64_t v7;

  v1 = *(_BYTE *)(a1 + 64);
  v2 = *(_QWORD *)(a1 + 72);
  swift_retain(v2);
  v3 = sub_10004CFD4(&qword_1009D8450);
  State.wrappedValue.getter(&v7);
  v5[1] = v1;
  v6 = v2;
  v5[0] = (v7 & 1) == 0;
  State.wrappedValue.setter(v5, v3);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_10063A378@<X0>(uint64_t *a1@<X8>)
{
  return sub_10063A3E4(0x7463656C6553, 0xE600000000000000, "Button to put Bookmarks / Highlights list into edit mode", 56, a1);
}

uint64_t sub_10063A398()
{
  uint64_t result;

  result = sub_1005E01D0();
  if (result != 2)
    return sub_1005E0A48();
  return result;
}

uint64_t sub_10063A3C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10063A3E4(1701736260, 0xE400000000000000, "Dismiss the Bookmarks / Highlights sheet", 40, a1);
}

uint64_t sub_10063A3E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjCClassFromMetadata;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  __n128 v29;
  uint64_t result;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  const char *v35;
  uint64_t v36;
  uint64_t *v37;
  _QWORD v38[3];

  v35 = a3;
  v36 = a4;
  v37 = a5;
  v7 = type metadata accessor for Locale(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v35 - v12;
  v14 = type metadata accessor for String.LocalizationValue(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v35 - v19;
  v21 = String.LocalizationValue.init(stringLiteral:)(a1, a2);
  static Locale.current.getter(v21);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
  v22 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v22);
  v24 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  v25 = String.init(localized:table:bundle:locale:comment:)(v17, 0, 0, v24, v10, v35, v36, 2);
  v27 = v26;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  v38[0] = v25;
  v38[1] = v27;
  v28 = sub_1001F2108();
  result = Text.init<A>(_:)(v38, &type metadata for String, v28, v29);
  v31 = v37;
  *v37 = result;
  v31[1] = v32;
  *((_BYTE *)v31 + 16) = v33 & 1;
  v31[3] = v34;
  return result;
}

uint64_t sub_10063A5CC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  int v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49[2];
  _QWORD v50[2];
  char v51;
  ValueMetadata *v52;
  _UNKNOWN **v53;

  v40 = a1;
  v41 = a2;
  v48 = a3;
  v6 = sub_10004CFD4(&qword_1009D8240);
  __chkstk_darwin(v6);
  v8 = (uint64_t *)((char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (int *)type metadata accessor for TOCLegacyView(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_10004CFD4(&qword_1009F1E28);
  __chkstk_darwin(v47);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)(v3 + 48);
  v42 = *(_QWORD *)(v3 + 56);
  v15 = v42;
  v16 = *(unsigned __int8 *)(v3 + 42);
  v45 = *(unsigned __int8 *)(v3 + 40);
  v46 = v16;
  v17 = sub_10003F198((_QWORD *)v3, *(_QWORD *)(v3 + 24));
  v52 = &type metadata for BookmarkNotesPresenter;
  v53 = &off_10091B8D8;
  v50[0] = swift_allocObject(&unk_1009192C8, 32, 7);
  sub_1005EDDB0((uint64_t)v17, v50[0] + 16);
  sub_10002E418((uint64_t)v50, (uint64_t)v49);
  v44 = swift_allocObject(&unk_1009192F0, 56, 7);
  sub_100022840(v49, v44 + 16);
  v43 = v14;
  swift_retain(v15);
  sub_10063AF58(a1, a2);
  _s5Books15CurrentPageViewVwxx_0(v50);
  v18 = sub_10003F198((_QWORD *)v3, *(_QWORD *)(v3 + 24));
  v52 = &type metadata for BookmarkNotesPresenter;
  v53 = &off_10091B8D8;
  v50[0] = swift_allocObject(&unk_1009192C8, 32, 7);
  sub_1005EDDB0((uint64_t)v18, v50[0] + 16);
  sub_10002E418((uint64_t)v50, (uint64_t)v49);
  v19 = swift_allocObject(&unk_100919318, 56, 7);
  sub_100022840(v49, v19 + 16);
  _s5Books15CurrentPageViewVwxx_0(v50);
  v20 = swift_allocObject(&unk_100919340, 32, 7);
  *(_QWORD *)(v20 + 16) = sub_10063AF6C;
  *(_QWORD *)(v20 + 24) = v19;
  v21 = *(_QWORD *)(v3 + 72);
  LOBYTE(v49[0]) = *(_BYTE *)(v3 + 64);
  *((_QWORD *)&v49[0] + 1) = v21;
  sub_10004CFD4(&qword_1009D8450);
  State.projectedValue.getter(v50);
  v22 = v50[0];
  v23 = v50[1];
  LOBYTE(v17) = v51;
  KeyPath = swift_getKeyPath(&unk_100736470);
  *v8 = swift_getKeyPath(&unk_100736498);
  v25 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  swift_storeEnumTagMultiPayload(v8, v25, 0);
  v26 = swift_getKeyPath(&unk_1007364C8);
  v27 = (uint64_t *)&v11[v9[14]];
  *v27 = v26;
  v28 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v27, v28, 0);
  v29 = v42;
  *(_QWORD *)v11 = v43;
  *((_QWORD *)v11 + 1) = v29;
  v30 = v41;
  *((_QWORD *)v11 + 2) = v40;
  *((_QWORD *)v11 + 3) = v30;
  v11[32] = v46;
  v11[33] = v45;
  *((_QWORD *)v11 + 5) = BKAppDelegate.enableMetricsInspectorOnDebugMode();
  *((_QWORD *)v11 + 6) = 0;
  v31 = v44;
  *((_QWORD *)v11 + 7) = sub_10063AF50;
  *((_QWORD *)v11 + 8) = v31;
  *((_QWORD *)v11 + 9) = sub_10063AF98;
  *((_QWORD *)v11 + 10) = v20;
  *((_QWORD *)v11 + 11) = KeyPath;
  *((_WORD *)v11 + 48) = 0;
  v32 = sub_100025B3C((uint64_t)v8, (uint64_t)&v11[v9[13]], &qword_1009D8240);
  v33 = &v11[v9[15]];
  *(_QWORD *)v33 = v22;
  *((_QWORD *)v33 + 1) = v23;
  v33[16] = (char)v17;
  v34 = static Edge.Set.bottom.getter(v32);
  LOBYTE(v17) = v34;
  v35 = static SafeAreaRegions.all.getter(v34);
  sub_100397954((uint64_t)v11, (uint64_t)v13);
  v36 = v47;
  v37 = &v13[*(int *)(v47 + 36)];
  *(_QWORD *)v37 = v35;
  v37[8] = (char)v17;
  sub_100397998((uint64_t)v11);
  v38 = sub_10063AE6C();
  View.persistentSystemOverlays(_:)(2, v36, v38);
  return sub_100010960((uint64_t)v13, &qword_1009F1E28);
}

double sub_10063A9A4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10003F198(a2, a2[3]);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v10 = Strong;
    v11 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
    type metadata accessor for MainActor(0);
    swift_unknownObjectRetain(v10);
    v12 = sub_10063B1F4(a1);
    v13 = static MainActor.shared.getter(v12);
    v14 = (_QWORD *)swift_allocObject(&unk_100919390, 81, 7);
    v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v10;
    sub_10043DC44((uint64_t)a1, (uint64_t)(v14 + 5));
    v15 = sub_10030C02C((uint64_t)v6, (uint64_t)&unk_1009F1E58, (uint64_t)v14);
    swift_unknownObjectRelease(v10);
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

void sub_10063AACC(unint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  uint64_t v22;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = sub_10003F198(a3, a3[3]);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v11 = Strong;
    v12 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books19BookReaderPresenter_annotationSharingAssetActivityItemProvider + 8);
    ObjectType = swift_getObjectType();
    sub_1001FC7E8(a1, ObjectType, v12);
    v14 = (void *)dispatch thunk of AssetActivityItemProviding.makeActivityViewController()(ObjectType, v12);
    v15 = v11 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router;
    v16 = swift_unknownObjectWeakLoadStrong(v11 + OBJC_IVAR____TtC5Books19BookReaderPresenter_router);
    v17 = *(_QWORD *)(v15 + 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
    v18 = *(unsigned __int8 *)(v7 + 80);
    v19 = (v18 + 40) & ~v18;
    v20 = (char *)swift_allocObject(&unk_100919368, v19 + v8, v18 | 7);
    *((_QWORD *)v20 + 2) = v16;
    *((_QWORD *)v20 + 3) = v17;
    *((_QWORD *)v20 + 4) = v14;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v20[v19], (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    v21 = v14;
    sub_1006499DC((void (*)(uint64_t *__return_ptr, __n128))sub_10063B1AC, (uint64_t)v20);
    swift_unknownObjectRelease(v11);
    swift_release(v20);

  }
}

uint64_t sub_10063AC48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100638F4C(*(_QWORD *)(v1 + 16), a1);
}

unint64_t sub_10063AC60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F1DB0;
  if (!qword_1009F1DB0)
  {
    v1 = sub_100030B74(&qword_1009F1D88);
    sub_100030B34(&qword_1009F1DB8, &qword_1009F1D80, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F1DB0);
  }
  return result;
}

unint64_t sub_10063ACFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F1DD0;
  if (!qword_1009F1DD0)
  {
    v1 = sub_100030B74(&qword_1009F1D70);
    sub_10063AD80();
    sub_100030B34((unint64_t *)&unk_1009F1DF0, &qword_1009D3828, (uint64_t)&protocol conformance descriptor for _PreferenceWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F1DD0);
  }
  return result;
}

unint64_t sub_10063AD80()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009F1DD8;
  if (!qword_1009F1DD8)
  {
    v1 = sub_100030B74(&qword_1009F1D68);
    v2[0] = sub_100030B74(&qword_1009F1D58);
    v2[1] = type metadata accessor for Material(255);
    v2[2] = sub_100030B34((unint64_t *)&unk_1009F1DA0, &qword_1009F1D58, (uint64_t)&protocol conformance descriptor for NavigationStack<A, B>);
    v2[3] = &protocol witness table for Material;
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.presentationBackground<A>(_:)>>, 1);
    sub_100030B34((unint64_t *)&unk_1009F1DE0, &qword_1009D8E58, (uint64_t)&protocol conformance descriptor for _ForegroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F1DD8);
  }
  return result;
}

unint64_t sub_10063AE6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F1E30;
  if (!qword_1009F1E30)
  {
    v1 = sub_100030B74(&qword_1009F1E28);
    sub_100008DB0(&qword_1009EE720, type metadata accessor for TOCLegacyView, (uint64_t)&unk_100730F88);
    sub_100030B34((unint64_t *)&unk_1009F1E40, &qword_1009DEA80, (uint64_t)&protocol conformance descriptor for _MaskEffect<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F1E30);
  }
  return result;
}

uint64_t sub_10063AF08()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10063AF2C()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 56, 7);
}

double sub_10063AF50(uint64_t *a1)
{
  uint64_t v1;

  return sub_10063A9A4(a1, (_QWORD *)(v1 + 16));
}

char *sub_10063AF58(uint64_t a1, char *a2)
{
  char *result;

  if ((unint64_t)(a2 - 1) >= 2)
    return a2;
  return result;
}

void sub_10063AF6C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10063AACC(a1, a2, (_QWORD *)(v2 + 16));
}

uint64_t sub_10063AF74()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10063AF98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  double result;

  v4 = *(void (**)(uint64_t, uint64_t))(v2 + 16);
  v5 = sub_100366570(a1);
  v4(v5, a2);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

_QWORD *sub_10063AFD4@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  char v4;
  uint64_t v5;
  char v6;

  v2 = sub_1004AB474();
  result = EnvironmentValues.subscript.getter(&v5, &type metadata for BookReaderToolbarPopoverKey, &type metadata for BookReaderToolbarPopoverKey, v2);
  v4 = v6;
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

_QWORD *sub_10063B028@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  char v4;
  uint64_t v5;
  char v6;

  v2 = sub_1004AB474();
  result = EnvironmentValues.subscript.getter(&v5, &type metadata for BookReaderToolbarPopoverKey, &type metadata for BookReaderToolbarPopoverKey, v2);
  v4 = v6;
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10063B07C(uint64_t *a1)
{
  char v1;
  unint64_t v2;
  uint64_t v4;
  char v5;

  v1 = *((_BYTE *)a1 + 8);
  v4 = *a1;
  v5 = v1;
  v2 = sub_1004AB474();
  return EnvironmentValues.subscript.setter(&v4, &type metadata for BookReaderToolbarPopoverKey, &type metadata for BookReaderToolbarPopoverKey, v2);
}

uint64_t sub_10063B0CC(uint64_t *a1)
{
  char v1;
  unint64_t v2;
  uint64_t v4;
  char v5;

  v1 = *((_BYTE *)a1 + 8);
  v4 = *a1;
  v5 = v1;
  v2 = sub_1004AB474();
  return EnvironmentValues.subscript.setter(&v4, &type metadata for BookReaderToolbarPopoverKey, &type metadata for BookReaderToolbarPopoverKey, v2);
}

uint64_t sub_10063B12C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10063B1AC()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_10004CFD4((uint64_t *)&unk_1009E7640) - 8) + 80);
  return sub_1005ED19C(v0[2], v0[3], v0[4], (char *)v0 + ((v1 + 40) & ~v1));
}

uint64_t *sub_10063B1F4(uint64_t *a1)
{
  sub_1005F1768(*a1, a1[1], a1[2], a1[3]);
  return a1;
}

uint64_t sub_10063B228()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  sub_1005F17A8(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject(v0, 81, 7);
}

uint64_t sub_10063B268(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009F0234);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_10000AE34;
  return sub_1005ECEC0(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

unint64_t sub_10063B2E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1009F1EB0;
  if (!qword_1009F1EB0)
  {
    v1 = sub_100030B74(&qword_1009F1E08);
    v2[0] = sub_100030B74(&qword_1009F1E28);
    v2[1] = sub_10063AE6C();
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.persistentSystemOverlays(_:)>>, 1);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F1EB0);
  }
  return result;
}

uint64_t sub_10063B370@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_100639E40(*(_QWORD *)(v1 + 16), a1);
}

void sub_10063B37C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  sub_100638038(v1 + 32, a1);
}

uint64_t sub_10063B38C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 88));
  swift_release(*(_QWORD *)(v0 + 104));
  return swift_deallocObject(v0, 112, 7);
}

double sub_10063B3D0(char *a1)
{
  uint64_t v1;

  return sub_1006380CC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

unint64_t sub_10063B3DC()
{
  unint64_t result;

  result = qword_1009F1EE0;
  if (!qword_1009F1EE0)
  {
    result = swift_getWitnessTable(&unk_10073899C, &type metadata for BookmarkNotesContentType);
    atomic_store(result, (unint64_t *)&qword_1009F1EE0);
  }
  return result;
}

uint64_t sub_10063B420()
{
  return sub_10063A088();
}

uint64_t sub_10063B440()
{
  uint64_t v0;

  return sub_10063A1AC(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10063B44C()
{
  return sub_10063A398();
}

double sub_10063B458()
{
  uint64_t v0;

  return sub_10063A2EC(v0 + 16);
}

uint64_t sub_10063B474()
{
  uint64_t v0;

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 88));
  return swift_deallocObject(v0, 96, 7);
}

unint64_t sub_10063B4B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F1F18;
  if (!qword_1009F1F18)
  {
    v1 = sub_100030B74((uint64_t *)&unk_1009F1F20);
    sub_10063AC60();
    sub_10063ACFC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> _ConditionalContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F1F18);
  }
  return result;
}

void sub_10063B528(void *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  objc_class *v14;
  id v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;

  v6 = type metadata accessor for BuyButtonDataManager();
  swift_allocObject(v6, 145, 7);
  swift_unknownObjectRetain(a2);
  v7 = a1;
  v8 = sub_100344930(a1, a2);
  v9 = type metadata accessor for BuyButtonInteractor(0);
  v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  swift_retain(v8);
  Logger.init(subsystem:category:)(0x6C7070612E6D6F63, 0xEF736B6F6F422E65, 0xD000000000000013, 0x80000001007DAA10);
  v11 = v10 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_listener;
  *(_QWORD *)(v11 + 8) = 0;
  swift_unknownObjectWeakInit(v11);
  v12 = (_QWORD *)(v10 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_buyParameters);
  *v12 = 0;
  v12[1] = 0;
  *(_BYTE *)(v10 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_canPreorder) = 2;
  *(_BYTE *)(v10 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_willDownload) = 0;
  *(_BYTE *)(v10 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_buttonState) = 0;
  v13 = (uint64_t *)(v10 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  *v13 = v8;
  v13[1] = (uint64_t)&off_1008FEC00;
  *(_QWORD *)(v8 + 128) = &off_10090A168;
  swift_unknownObjectWeakAssign(v8 + 120, v10);
  v14 = (objc_class *)type metadata accessor for BuyButtonPresenter();
  v15 = objc_allocWithZone(v14);
  v16 = type metadata accessor for BuyButtonStyle();
  swift_allocObject(v16, 232, 7);
  swift_retain(v10);
  v17 = (char *)v15;
  v18 = sub_10057F170();
  v19 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_style;
  *(_QWORD *)&v17[OBJC_IVAR____TtC5Books18BuyButtonPresenter_style] = v18;
  v20 = (uint64_t *)&v17[OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor];
  *v20 = v10;
  v20[1] = (uint64_t)&off_10090A188;
  v21 = type metadata accessor for BuyButtonViewModel(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  swift_retain(v10);
  *(_QWORD *)&v17[OBJC_IVAR____TtC5Books18BuyButtonPresenter_viewModel] = sub_100598578();
  v22 = *(_QWORD *)&v17[v19];
  swift_retain(v22);

  *(_QWORD *)(v22 + 56) = 0;
  *(_QWORD *)&v23 = swift_release(v22).n128_u64[0];
  v27.receiver = v17;
  v27.super_class = v14;
  v24 = (char *)objc_msgSendSuper2(&v27, "init", v23);
  swift_release(v10);
  *(_QWORD *)(v11 + 8) = &off_1008F3958;
  swift_unknownObjectWeakAssign(v11, v24);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor];
  v26 = *(_QWORD *)(v25 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  swift_unknownObjectRetain(v25);
  swift_unknownObjectRetain(v26);
  sub_100344A18();
  swift_unknownObjectRelease(v26);
  sub_1004A9FC4();
  sub_1004A9D70();
  swift_unknownObjectRelease(v25);
  a3[3] = v14;
  a3[4] = &off_1008F39A0;
  swift_release(v8);
  swift_release(v10);
  *a3 = v24;
}

uint64_t type metadata accessor for BuyButtonModuleFactory()
{
  return objc_opt_self(_TtC5Books22BuyButtonModuleFactory);
}

void sub_10063B820(uint64_t a1)
{
  uint64_t v1;
  char v2;

  v1 = BookThemeEntity.themeType.getter(a1);
  v2 = v1;
  BookThemeEntity.variant.getter(v1);
  __asm { BR              X10 }
}

uint64_t sub_10063B854(char a1)
{
  if ((a1 & 1) != 0)
    return 11;
  else
    return 5;
}

uint64_t sub_10063B8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10063B8CC);
}

uint64_t sub_10063B8CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_10063B948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063B954);
}

uint64_t sub_10063B954(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t sub_10063B9C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t SampleActionItem;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t);
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  id v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  char v77;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  char *v90;
  _QWORD *v91;
  _QWORD v92[3];
  uint64_t v93;
  uint64_t v94;
  _QWORD v95[3];
  uint64_t v96;
  uint64_t v97;
  _QWORD v98[3];
  uint64_t v99;
  uint64_t v100;
  _QWORD v101[6];
  _QWORD v102[3];
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[3];
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;

  v1 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v1);
  v3 = (char *)&v87 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for ContextActionSource(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v87 - v9;
  SampleActionItem = type metadata accessor for ReadSampleActionItem(0);
  __chkstk_darwin(SampleActionItem);
  v13 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (uint64_t *)((char *)&v87 - v15);
  __chkstk_darwin(v17);
  v19 = (uint64_t *)((char *)&v87 - v18);
  v91 = v0;
  sub_10023ADE8(&v108);
  if (!v109)
  {
    sub_100010960((uint64_t)&v108, qword_1009D1448);
LABEL_45:
    v77 = 0;
    return v77 & 1;
  }
  v89 = v13;
  v90 = v3;
  sub_1001EB834(&v108, &v110);
  v20 = v111;
  v21 = v112;
  sub_10003F198(&v110, v111);
  v22 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v20, v21);
  if ((static ContextActionAssetType.== infix(_:_:)(v22, 2) & 1) == 0)
  {
LABEL_44:
    _s5Books15CurrentPageViewVwxx_0(&v110);
    goto LABEL_45;
  }
  v23 = v111;
  v24 = v112;
  sub_10003F198(&v110, v111);
  v25 = dispatch thunk of ContextAssetInfoProtocol.featuredEditions.getter(v23, v24);
  v26 = *(_QWORD *)(v25 + 16);
  swift_bridgeObjectRelease(v25);
  sub_10063CC58((uint64_t)v91, (uint64_t)v19);
  v88 = v26;
  if (v26 < 2)
  {
    sub_10063CC9C((uint64_t)v19);
  }
  else
  {
    v27 = v19[3];
    v28 = v19[4];
    sub_10003F198(v19, v27);
    dispatch thunk of ContextActionDataProtocol.source.getter(v27, v28);
    v29 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
    v29(v7, enum case for ContextActionSource.productPage(_:), v4);
    v30 = static ContextActionSource.== infix(_:_:)(v10, v7);
    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
    v31(v7, v4);
    v31(v10, v4);
    sub_10063CC58((uint64_t)v19, (uint64_t)v16);
    if ((v30 & 1) != 0)
    {
      sub_10063CC9C((uint64_t)v16);
      sub_10063CC9C((uint64_t)v19);
      goto LABEL_44;
    }
    v39 = v16[3];
    v87 = v16[4];
    sub_10003F198(v16, v39);
    dispatch thunk of ContextActionDataProtocol.source.getter(v39, v87);
    v29(v7, enum case for ContextActionSource.unifiedProductItem(_:), v4);
    v40 = static ContextActionSource.== infix(_:_:)(v10, v7);
    v31(v7, v4);
    v31(v10, v4);
    sub_10063CC9C((uint64_t)v16);
    sub_10063CC9C((uint64_t)v19);
    if ((v40 & 1) != 0)
      goto LABEL_44;
  }
  v32 = v111;
  v33 = v112;
  sub_10003F198(&v110, v111);
  if ((dispatch thunk of ContextAssetInfoProtocol.isExplicit.getter(v32, v33) & 1) != 0)
  {
    v34 = objc_msgSend((id)objc_opt_self(BURestrictionsProvider), "sharedInstance");
    v35 = objc_msgSend(v34, "isExplicitContentAllowed");
    swift_unknownObjectRelease(v34);
    if ((v35 & 1) == 0 && v88 <= 1)
      goto LABEL_44;
  }
  v36 = v91[3];
  v37 = v91[4];
  sub_10003F198(v91, v36);
  v38 = dispatch thunk of ContextActionDataProtocol.isStoreManagedAppleID.getter(v36, v37);
  sub_1001EB84C((uint64_t)&v110, (uint64_t)&v108);
  if ((v38 & 1) != 0)
  {
    _s5Books15CurrentPageViewVwxx_0(&v108);
    goto LABEL_44;
  }
  sub_10003F198(&v108, v109);
  v41 = sub_1002934F0();
  if (v41 == 2)
  {
    _s5Books15CurrentPageViewVwxx_0(&v108);
  }
  else
  {
    v42 = v41;
    _s5Books15CurrentPageViewVwxx_0(&v108);
    if ((v42 & 1) != 0)
      goto LABEL_44;
  }
  sub_10003F198(&v110, v111);
  v43 = sub_100298CD0();
  sub_1001EB84C((uint64_t)&v110, (uint64_t)v105);
  if ((v43 & 1) == 0)
  {
    _s5Books15CurrentPageViewVwxx_0(v105);
    sub_1001EB84C((uint64_t)&v110, (uint64_t)v102);
    goto LABEL_24;
  }
  v44 = v106;
  v45 = v107;
  sub_10003F198(v105, v106);
  v46 = dispatch thunk of ContextAssetInfoProtocol.isOwned.getter(v44, v45);
  if (v46 == 2)
  {
    _s5Books15CurrentPageViewVwxx_0(v105);
    sub_1001EB84C((uint64_t)&v110, (uint64_t)v102);
    goto LABEL_23;
  }
  v47 = v46;
  _s5Books15CurrentPageViewVwxx_0(v105);
  sub_1001EB84C((uint64_t)&v110, (uint64_t)v102);
  if ((v47 & 1) != 0)
  {
LABEL_24:
    v51 = 0;
    goto LABEL_26;
  }
LABEL_23:
  v48 = v103;
  v49 = v104;
  sub_10003F198(v102, v103);
  v50 = dispatch thunk of ContextAssetInfoProtocol.isLocal.getter(v48, v49);
  if (v50 == 2)
    goto LABEL_24;
  v51 = v50 & 1;
LABEL_26:
  _s5Books15CurrentPageViewVwxx_0(v102);
  v52 = v111;
  v53 = v112;
  sub_10003F198(&v110, v111);
  dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v52, v53);
  v55 = v54;
  swift_bridgeObjectRelease(v54);
  sub_1001EB84C((uint64_t)&v110, (uint64_t)v101);
  if (v55)
  {
    sub_10003F198(v101, v101[3]);
    v56 = sub_100298B08();
    v57 = v56 == 2 || (v56 & 1) == 0;
  }
  else
  {
    v57 = 0;
  }
  _s5Books15CurrentPageViewVwxx_0(v101);
  v58 = v111;
  v59 = v112;
  sub_10003F198(&v110, v111);
  v60 = dispatch thunk of ContextAssetInfoProtocol.isOwned.getter(v58, v59);
  if (v60 == 2)
  {
    sub_1001EB84C((uint64_t)&v110, (uint64_t)v98);
  }
  else
  {
    v61 = v60;
    sub_1001EB84C((uint64_t)&v110, (uint64_t)v98);
    if ((v61 & 1) != 0)
    {
      _s5Books15CurrentPageViewVwxx_0(v98);
      sub_1001EB84C((uint64_t)&v110, (uint64_t)v95);
      goto LABEL_40;
    }
  }
  v62 = v99;
  v63 = v100;
  sub_10003F198(v98, v99);
  v64 = dispatch thunk of ContextAssetInfoProtocol.isLocal.getter(v62, v63);
  if (v64 == 2)
  {
    _s5Books15CurrentPageViewVwxx_0(v98);
    sub_1001EB84C((uint64_t)&v110, (uint64_t)v95);
    goto LABEL_37;
  }
  v65 = v64;
  _s5Books15CurrentPageViewVwxx_0(v98);
  sub_1001EB84C((uint64_t)&v110, (uint64_t)v95);
  if ((v65 & 1) != 0)
  {
LABEL_40:
    _s5Books15CurrentPageViewVwxx_0(v95);
    sub_1001EB84C((uint64_t)&v110, (uint64_t)v92);
    goto LABEL_41;
  }
LABEL_37:
  v66 = v96;
  v67 = v97;
  sub_10003F198(v95, v96);
  v68 = dispatch thunk of ContextAssetInfoProtocol.isDownloading.getter(v66, v67);
  _s5Books15CurrentPageViewVwxx_0(v95);
  sub_1001EB84C((uint64_t)&v110, (uint64_t)v92);
  if ((v68 & 1) == 0)
  {
    v69 = v93;
    v70 = v94;
    sub_10003F198(v92, v93);
    v71 = dispatch thunk of ContextAssetInfoProtocol.isPurchased.getter(v69, v70) ^ 1;
    goto LABEL_42;
  }
LABEL_41:
  v71 = 0;
LABEL_42:
  _s5Books15CurrentPageViewVwxx_0(v92);
  v72 = v111;
  v73 = v112;
  sub_10003F198(&v110, v111);
  v74 = (uint64_t)v90;
  dispatch thunk of ContextAssetInfoProtocol.sampleDownloadURL.getter(v72, v73);
  v75 = type metadata accessor for URL(0);
  v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 48))(v74, 1, v75);
  sub_100010960(v74, (uint64_t *)&unk_1009D23D0);
  if (v76 == 1)
  {
    if ((v51 & 1) == 0)
      goto LABEL_44;
  }
  else if ((v51 | v57 & v71) != 1)
  {
    goto LABEL_44;
  }
  v79 = v91;
  v80 = v91[3];
  v81 = v91[4];
  sub_10003F198(v91, v80);
  v82 = dispatch thunk of ContextActionDataProtocol.isOnline.getter(v80, v81);
  v83 = v89;
  sub_10063CC58((uint64_t)v79, (uint64_t)v89);
  if ((v82 & 1) != 0)
  {
    v84 = v83[3];
    v85 = v83[4];
    sub_10003F198(v83, v84);
    v86 = dispatch thunk of ContextActionDataProtocol.isStoreAllowed.getter(v84, v85);
  }
  else
  {
    v86 = 0;
  }
  sub_10063CC9C((uint64_t)v83);
  v77 = v51 | v86;
  _s5Books15CurrentPageViewVwxx_0(&v110);
  return v77 & 1;
}

uint64_t sub_10063C158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjCClassFromMetadata;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD v42[2];
  char *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;

  v0 = type metadata accessor for ContextActionSource(0);
  v44 = *(_QWORD *)(v0 - 8);
  v45 = v0;
  __chkstk_darwin(v0);
  v43 = (char *)v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v4 = (char *)v42 - v3;
  v5 = type metadata accessor for Locale(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)v42 - v10;
  v12 = type metadata accessor for String.LocalizationValue(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v18 = (char *)v42 - v17;
  v19 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000012, 0x80000001007DAA30);
  static Locale.current.getter(v19);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  v20 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v20);
  v22 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v23 = String.init(localized:table:bundle:locale:comment:)(v15, 0, 0, v22, v8, "Context Menu: Read a Free Sample", 32, 2);
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v27 = (_QWORD *)v42[1];
  v26(v18, v12);
  v28 = v27[3];
  v29 = v27[4];
  sub_10003F198(v27, v28);
  dispatch thunk of ContextActionDataProtocol.source.getter(v28, v29);
  v31 = v43;
  v30 = v44;
  v32 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v43, enum case for ContextActionSource.getSampleActionItem(_:), v45);
  LOBYTE(v28) = static ContextActionSource.== infix(_:_:)(v4, v31);
  v33 = *(void (**)(char *, uint64_t))(v30 + 8);
  v33(v31, v32);
  v33(v4, v32);
  if ((v28 & 1) != 0)
  {
    sub_10023ADE8(&v46);
    if (v47)
    {
      swift_bridgeObjectRelease(v25);
      sub_1001EB834(&v46, &v49);
      v34 = v27[3];
      v35 = v27[4];
      sub_10003F198(v27, v34);
      v36 = dispatch thunk of ContextActionDataProtocol.actionItemNeedsDifferentiation.getter(v34, v35);
      v37 = v50;
      v38 = v51;
      v39 = sub_10003F198(&v49, v50);
      if ((v36 & 1) != 0)
      {
        v47 = v37;
        v48 = v38;
        v40 = sub_1000257F8(&v46);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v40, v39, v37);
        v23 = static ContextActionStringBuilder.editionKindTitle(for:)(&v46);
        _s5Books15CurrentPageViewVwxx_0(&v46);
      }
      else
      {
        v23 = dispatch thunk of ContextAssetInfoProtocol.editionKind.getter(v37, v38);
      }
      _s5Books15CurrentPageViewVwxx_0(&v49);
    }
    else
    {
      sub_100010960((uint64_t)&v46, qword_1009D1448);
    }
  }
  return v23;
}

uint64_t sub_10063C4C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v1 = v0;
  v2 = type metadata accessor for ContextActionSource(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - v7;
  v9 = v0[3];
  v10 = v0[4];
  sub_10003F198(v0, v9);
  v11 = 0;
  if ((dispatch thunk of ContextActionDataProtocol.actionItemNeedsDifferentiation.getter(v9, v10) & 1) != 0)
  {
    v12 = v1[3];
    v13 = v1[4];
    sub_10003F198(v1, v12);
    dispatch thunk of ContextActionDataProtocol.source.getter(v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for ContextActionSource.getSampleActionItem(_:), v2);
    v14 = static ContextActionSource.== infix(_:_:)(v8, v5);
    v15 = *(void (**)(char *, uint64_t))(v3 + 8);
    v15(v5, v2);
    v15(v8, v2);
    if ((v14 & 1) != 0)
    {
      sub_10023ADE8(&v21);
      if ((_QWORD)v22)
      {
        sub_1001EB834(&v21, &v23);
        v20 = v24;
        v16 = v24;
        v17 = sub_10003F198(&v23, v24);
        v22 = v20;
        v18 = sub_1000257F8(&v21);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v18, v17, v16);
        v11 = static ContextActionStringBuilder.publishedByString(for:)(&v21);
        _s5Books15CurrentPageViewVwxx_0(&v21);
        _s5Books15CurrentPageViewVwxx_0(&v23);
        return v11;
      }
      sub_100010960((uint64_t)&v21, qword_1009D1448);
    }
    return 0;
  }
  return v11;
}

uint64_t sub_10063C698()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[29] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[30] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[31] = v3;
  v1[32] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MainActor(0);
  v1[33] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  v1[34] = v5;
  v1[35] = v6;
  return swift_task_switch(sub_10063C72C, v5, v6);
}

uint64_t sub_10063C72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  sub_10023ADE8((_OWORD *)(v0 + 64));
  if (!*(_QWORD *)(v0 + 88))
  {
    swift_release(*(_QWORD *)(v0 + 264));
    v13 = sub_100010960(v0 + 64, qword_1009D1448);
LABEL_10:
    v14 = static Logger.contextActionItem.getter(v13);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Action doesn't have sufficient information to handle action.", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
    v19 = *(_QWORD *)(v0 + 248);
    v18 = *(_QWORD *)(v0 + 256);
    v20 = *(_QWORD *)(v0 + 240);

    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
LABEL_13:
    v21 = swift_task_dealloc(*(_QWORD *)(v0 + 256));
    return (*(uint64_t (**)(__n128))(v0 + 8))(v21);
  }
  v1 = *(_QWORD *)(v0 + 232);
  sub_1001EB834((__int128 *)(v0 + 64), (_OWORD *)(v0 + 16));
  sub_10002E418(v1 + 40, v0 + 192);
  v2 = sub_10004CFD4(&qword_1009D2848);
  v3 = sub_10004CFD4(&qword_1009D2850);
  if ((swift_dynamicCast(v0 + 152, v0 + 192, v2, v3, 6) & 1) == 0)
  {
    *(_QWORD *)(v0 + 184) = 0;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    goto LABEL_9;
  }
  if (!*(_QWORD *)(v0 + 176))
  {
LABEL_9:
    swift_release(*(_QWORD *)(v0 + 264));
    sub_100010960(v0 + 152, qword_1009D2858);
    v13 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
    goto LABEL_10;
  }
  sub_100022840((__int128 *)(v0 + 152), v0 + 112);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), v4);
  if ((dispatch thunk of ContextAssetInfoProtocol.isLocal.getter(v4, v5) & 1) == 0)
  {
    v6 = *(_QWORD **)(v0 + 232);
    v7 = v6[3];
    v8 = v6[4];
    sub_10003F198(v6, v7);
    if ((dispatch thunk of ContextActionDataProtocol.isOnline.getter(v7, v8) & 1) != 0)
    {
      v9 = *(_QWORD *)(v0 + 232);
      sub_10003F198((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
      v10 = *(_QWORD *)(v9 + 80);
      v11 = (_QWORD *)swift_task_alloc(dword_1009E4014);
      *(_QWORD *)(v0 + 312) = v11;
      *v11 = v0;
      v11[1] = sub_10063CB20;
      return sub_10044DF08(v0 + 16, v10);
    }
    swift_release(*(_QWORD *)(v0 + 264));
    sub_10003F198((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
    sub_10044DB58();
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
    goto LABEL_13;
  }
  sub_10003F198((_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 136));
  v22 = *(_QWORD *)(v0 + 40);
  v23 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), v22);
  v24 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v22, v23);
  v26 = v25;
  *(_QWORD *)(v0 + 288) = v25;
  v27 = *(_QWORD *)(v0 + 40);
  v28 = *(_QWORD *)(v0 + 48);
  sub_10003F198((_QWORD *)(v0 + 16), v27);
  v29 = dispatch thunk of ContextAssetInfoProtocol.title.getter(v27, v28);
  v31 = v30;
  *(_QWORD *)(v0 + 296) = v30;
  v32 = (_QWORD *)swift_task_alloc(dword_1009E3FF4);
  *(_QWORD *)(v0 + 304) = v32;
  *v32 = v0;
  v32[1] = sub_10063CA68;
  return sub_10044F1EC(v24, v26, v29, v31);
}

uint64_t sub_10063CA68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 296);
  v3 = *(_QWORD *)(*v0 + 288);
  swift_task_dealloc(*(_QWORD *)(*v0 + 304));
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v2);
  return swift_task_switch(sub_10063CAD0, *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 280));
}

uint64_t sub_10063CAD0()
{
  uint64_t v0;
  __n128 v1;

  swift_release(*(_QWORD *)(v0 + 264));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 112));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v1 = swift_task_dealloc(*(_QWORD *)(v0 + 256));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v1);
}

uint64_t sub_10063CB20()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 312));
  return swift_task_switch(sub_10063CCD8, *(_QWORD *)(v1 + 272), *(_QWORD *)(v1 + 280));
}

uint64_t sub_10063CB78()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009F207C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_10063C698();
}

uint64_t sub_10063CBBC@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v11 = a6 + *(int *)(a5 + 32);
  v12 = enum case for ContextActionType.readSample(_:);
  v13 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  sub_100022840(a1, a6);
  sub_100022840(a2, a6 + 40);
  *(_QWORD *)(a6 + 80) = a3;
  return sub_100022840(a4, a6 + 88);
}

uint64_t sub_10063CC58(uint64_t a1, uint64_t a2)
{
  uint64_t SampleActionItem;

  SampleActionItem = type metadata accessor for ReadSampleActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(SampleActionItem - 8) + 16))(a2, a1, SampleActionItem);
  return a2;
}

uint64_t sub_10063CC9C(uint64_t a1)
{
  uint64_t SampleActionItem;

  SampleActionItem = type metadata accessor for ReadSampleActionItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(SampleActionItem - 8) + 8))(a1, SampleActionItem);
  return a1;
}

uint64_t sub_10063CCDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v15[3];
  ValueMetadata *v16;
  unint64_t v17;
  _QWORD v18[2];
  char v19;
  uint64_t v20;
  uint64_t v21;

  v6 = v3 + OBJC_IVAR____TtCV5Books21SidebarCollectionView19SidebarCellProvider_searchFieldCellRegistration;
  v15[0] = a3;
  v7 = sub_100009E04(0, &qword_1009E5FD0, UICollectionViewCell_ptr);
  v8 = type metadata accessor for SidebarViewModel.SearchFieldModel(0);
  v9 = swift_retain(a3);
  v10 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)(v6, a2, v15, v7, v8, v9);
  swift_release(a3);
  UICollectionViewCell.contentConfiguration.getter(v15);
  if (!v16)
  {
    sub_100010960((uint64_t)v15, &qword_1009EA718);
    goto LABEL_6;
  }
  v11 = sub_10004CFD4(&qword_1009EA720);
  if ((swift_dynamicCast(v18, v15, v11, &type metadata for SidebarSearchFieldContentConfiguration, 6) & 1) == 0)
  {
LABEL_6:
    v18[0] = 0;
    v18[1] = 0;
    v19 = 0;
    goto LABEL_7;
  }
  if (!v18[0])
  {
LABEL_7:
    sub_100010960((uint64_t)v18, &qword_1009EB110);
    return v10;
  }
  sub_1003A7930((uint64_t)v18, (uint64_t)&v20);
  v12 = sub_10004CFD4(&qword_1009E6780);
  UIViewControllerRepresentableContext.coordinator.getter(v15, v12);
  v13 = (void *)v15[0];
  swift_unknownObjectWeakAssign(&v21, v15[0]);

  v16 = &type metadata for SidebarSearchFieldContentConfiguration;
  v17 = sub_10055DF74();
  v15[0] = swift_allocObject(&unk_1009195A8, 33, 7);
  sub_1003A78DC(&v20, v15[0] + 16);
  UICollectionViewCell.contentConfiguration.setter(v15);
  sub_1003A7B1C(&v20);
  return v10;
}

uint64_t sub_10063CE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  __n128 v17;
  _QWORD v20[5];

  v4 = type metadata accessor for UIListContentConfiguration(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v20[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 8);
  v10 = *(_BYTE *)(a3 + 16);
  v11 = *(_BYTE *)a3;
  static UIListContentConfiguration.sidebarHeader()(v6);
  sub_1005A26E8(v11);
  UIListContentConfiguration.text.setter(v12, v13);
  v20[3] = v4;
  v20[4] = &protocol witness table for UIListContentConfiguration;
  v14 = sub_1000257F8(v20);
  (*(void (**)(_QWORD *, char *, uint64_t))(v5 + 16))(v14, v8, v4);
  UICollectionViewCell.contentConfiguration.setter(v20);
  v15 = sub_1005A24A8(v11);
  UICollectionViewListCell.accessories.setter(v15);
  v16 = swift_allocObject(&unk_1009195D0, 33, 7);
  *(_BYTE *)(v16 + 16) = v11;
  *(_QWORD *)(v16 + 24) = v9;
  *(_BYTE *)(v16 + 32) = v10;
  v17 = swift_bridgeObjectRetain(v9);
  UICollectionViewCell.configurationUpdateHandler.setter(sub_10063E554, v16, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_10063CFB0(void *a1, uint64_t a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t result;
  void *v18;
  id v19;
  uint64_t v20;
  int v21;
  double v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  char **v29;
  id v30;
  void (*v31)(_QWORD *, _QWORD);
  _QWORD *v32;
  id v33;
  _QWORD *v34;
  UIAccessibilityTraits v35;
  id v36;
  unint64_t v37;
  UIAccessibilityTraits v38;
  void (*v39)(_BYTE *, uint64_t);
  _BYTE v40[4];
  int v41;
  _QWORD v42[3];
  uint64_t v43;
  void *v44;

  v6 = sub_10004CFD4(&qword_1009EA710);
  __chkstk_darwin(v6);
  v8 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for UIListContentConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v40[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v15 = &v40[-v14];
  v16 = objc_opt_self(UICollectionViewListCell);
  result = swift_dynamicCastObjCClass(a1, v16);
  if (!result)
    return result;
  v18 = (void *)result;
  v19 = a1;
  UICollectionViewCell.contentConfiguration.getter(v42);
  if (!v43)
  {
    sub_100010960((uint64_t)v42, &qword_1009EA718);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_9;
  }
  v20 = sub_10004CFD4(&qword_1009EA720);
  v21 = swift_dynamicCast(v8, v42, v20, v9, 6);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v21 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_9:

    return sub_100010960((uint64_t)v8, &qword_1009EA710);
  }
  v41 = a3;
  v22 = (*(double (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v15, v8, v9);
  v23 = type metadata accessor for UICellConfigurationState(0, v22);
  v43 = v23;
  v44 = &protocol witness table for UICellConfigurationState;
  v24 = sub_1000257F8(v42);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, a2, v23);
  UIListContentConfiguration.updated(for:)(v42);
  v25 = _s5Books15CurrentPageViewVwxx_0(v42);
  v26 = (void *)UICellConfigurationState.traitCollection.getter(v25);
  v27 = objc_msgSend(v26, "activeAppearance");

  v28 = (void *)objc_opt_self(UIColor);
  v29 = &selRef_labelColor;
  if (v27 != (id)1)
    v29 = &selRef_grayColor;
  v30 = objc_msgSend(v28, *v29);
  v31 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v42);
  UIListContentConfiguration.TextProperties.color.setter(v30);
  v31(v42, 0);
  v43 = v9;
  v44 = &protocol witness table for UIListContentConfiguration;
  v32 = sub_1000257F8(v42);
  (*(void (**)(_QWORD *, _BYTE *, uint64_t))(v10 + 16))(v32, v12, v9);
  v33 = v19;
  UICollectionViewCell.contentConfiguration.setter(v42);

  if ((UICellConfigurationState.isEditing.getter() & 1) != 0)
    v34 = _swiftEmptyArrayStorage;
  else
    v34 = sub_1005A24A8(v41);
  UICollectionViewListCell.accessories.setter(v34);
  v35 = UIAccessibilityTraitHeader;
  v36 = v33;
  v37 = (unint64_t)objc_msgSend(v18, "accessibilityTraits");
  if ((v35 & ~v37) != 0)
    v38 = v35;
  else
    v38 = 0;
  objc_msgSend(v18, "setAccessibilityTraits:", v38 | v37);

  v39 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
  v39(v12, v9);
  return ((uint64_t (*)(_BYTE *, uint64_t))v39)(v15, v9);
}

uint64_t sub_10063D308(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[5];

  v3 = *a3;
  v6[3] = &type metadata for SidebarSearchFieldContentConfiguration;
  v6[4] = sub_10055DF74();
  v4 = swift_allocObject(&unk_1009195A8, 33, 7);
  v6[0] = v4;
  *(_QWORD *)(v4 + 16) = v3;
  swift_unknownObjectWeakInit(v4 + 24);
  *(_BYTE *)(v4 + 32) = 0;
  swift_retain(v3);
  return UICollectionViewCell.contentConfiguration.setter(v6);
}

uint64_t sub_10063D38C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  NSString v16;
  void *v17;
  id v18;
  __n128 v19;
  id v20;
  NSString v21;
  id v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  Swift::String v26;
  NSString v27;
  NSString v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __n128 v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD v44[3];
  _QWORD *v45;
  void *v46;
  Swift::String v47;
  __int128 v48;
  __int128 v49;
  _OWORD v50[2];

  v5 = type metadata accessor for AutomationSemantics(0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIListContentConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  v42 = (_QWORD *)v8;
  v43 = v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_OWORD *)(a3 + 48);
  v49 = *(_OWORD *)(a3 + 32);
  v50[0] = v12;
  *(_DWORD *)((char *)v50 + 15) = *(_DWORD *)(a3 + 63);
  v13 = *(_OWORD *)(a3 + 16);
  v47 = *(Swift::String *)a3;
  v48 = v13;
  static UIListContentConfiguration.sidebarCell()();
  v14 = v48;
  swift_bridgeObjectRetain(*((_QWORD *)&v48 + 1));
  UIListContentConfiguration.text.setter(v14, *((_QWORD *)&v14 + 1));
  v15 = *((_QWORD *)&v49 + 1);
  swift_bridgeObjectRetain(*((_QWORD *)&v49 + 1));
  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v17 = (void *)objc_opt_self(UIImage);
  v18 = objc_msgSend(v17, "_systemImageNamed:", v16);

  if (!v18)
  {
    v19 = swift_bridgeObjectRetain(v15);
    v20 = (id)BSUIBundle(v19);
    v21 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v17, "imageNamed:inBundle:compatibleWithTraitCollection:", v21, v20, 0, swift_bridgeObjectRelease(v15).n128_f64[0]);

    if (!v18)
      v18 = sub_10063D700(&v47);
  }
  v22 = v18;
  UIListContentConfiguration.image.setter(v18);
  v23 = v42;
  v45 = v42;
  v46 = &protocol witness table for UIListContentConfiguration;
  v24 = sub_1000257F8(v44);
  (*(void (**)(_QWORD *, char *, _QWORD *))(v43 + 16))(v24, v11, v23);
  UICollectionViewCell.contentConfiguration.setter(v44);
  swift_bridgeObjectRetain(*((_QWORD *)&v50[0] + 1));
  UICollectionViewListCell.accessories.setter(v25);
  v26 = v47;
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setAccessibilityIdentifier:", v27);

  objc_msgSend(a1, "setIsAccessibilityElement:", 1);
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setAccessibilityValue:", v28);

  swift_bridgeObjectRetain(v26._object);
  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v26._countAndFlagsBits, (unint64_t)v26._object);
  v30 = v29;
  swift_bridgeObjectRelease(v29);
  if (v30)
  {
    swift_bridgeObjectRelease(v26._object);
    v31 = 14;
  }
  else
  {
    v31 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v26);
    if (v31 == 16)
      v31 = 15;
  }
  v32 = sub_100048A4C(v31);
  v45 = &type metadata for String;
  v44[0] = v32;
  v44[1] = v33;
  static AutomationSemantics.tabBar(tabName:)(v44);
  _s5Books15CurrentPageViewVwxx_0(v44);
  UIView.setAutomationSemantics(_:)(v7);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
  v34 = swift_allocObject(&unk_100919580, 83, 7);
  v35 = v50[0];
  *(_OWORD *)(v34 + 48) = v49;
  *(_OWORD *)(v34 + 64) = v35;
  *(_DWORD *)(v34 + 79) = *(_DWORD *)((char *)v50 + 15);
  v36 = v48;
  *(Swift::String *)(v34 + 16) = v47;
  *(_OWORD *)(v34 + 32) = v36;
  sub_1004097C0(&v47);
  UICollectionViewCell.configurationUpdateHandler.setter(sub_10063E4FC, v34, v37);

  return (*(uint64_t (**)(char *, _QWORD *))(v43 + 8))(v11, v23);
}

id sub_10063D700(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  NSString v10;
  id v11;
  uint64_t v13;
  uint64_t v14;

  if (qword_1009CE4F0 != -1)
    swift_once(&qword_1009CE4F0, sub_100450628);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009E40B0);
  v3 = sub_1004097C0(a1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.fault.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = a1[4];
    v9 = a1[5];
    swift_bridgeObjectRetain(v9);
    v13 = sub_100040F58(v8, v9, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14, v6 + 4, v6 + 12);
    swift_bridgeObjectRelease(v9);
    sub_100409820(a1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Invalid sidebar icon name: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }
  else
  {
    sub_100409820(a1);
  }

  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v10);

  return v11;
}

uint64_t sub_10063D8E0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  double v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(_QWORD *, _QWORD);
  _QWORD *v20;
  id v21;
  void (*v22)(char *, uint64_t);
  _QWORD v25[3];
  uint64_t v26;
  void *v27;

  v4 = sub_10004CFD4(&qword_1009EA710);
  __chkstk_darwin(v4);
  v6 = (char *)&v25[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UIListContentConfiguration(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v25[-1] - v12;
  UICollectionViewCell.contentConfiguration.getter(v25);
  if (v26)
  {
    v14 = sub_10004CFD4(&qword_1009EA720);
    v15 = swift_dynamicCast(v6, v25, v14, v7, 6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, v15 ^ 1u, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v16 = (*(double (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
      v17 = type metadata accessor for UICellConfigurationState(0, v16);
      v26 = v17;
      v27 = &protocol witness table for UICellConfigurationState;
      v18 = sub_1000257F8(v25);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v18, a2, v17);
      UIListContentConfiguration.updated(for:)(v25);
      _s5Books15CurrentPageViewVwxx_0(v25);
      v19 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.imageProperties.modify(v25);
      v19(v25, 0);
      v26 = v7;
      v27 = &protocol witness table for UIListContentConfiguration;
      v20 = sub_1000257F8(v25);
      (*(void (**)(_QWORD *, char *, uint64_t))(v8 + 16))(v20, v10, v7);
      UICollectionViewCell.contentConfiguration.setter(v25);
      v21 = sub_10063E3C8();
      objc_msgSend(a1, "setTintColor:", v21);

      v22 = *(void (**)(char *, uint64_t))(v8 + 8);
      v22(v10, v7);
      return ((uint64_t (*)(char *, uint64_t))v22)(v13, v7);
    }
  }
  else
  {
    sub_100010960((uint64_t)v25, &qword_1009EA718);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  return sub_100010960((uint64_t)v6, &qword_1009EA710);
}

uint64_t sub_10063DB40(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  NSString v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __n128 v29;
  _QWORD v32[5];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[2];

  v4 = type metadata accessor for UIListContentConfiguration.TextProperties(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v32[-1] - v9;
  v11 = (int *)type metadata accessor for SidebarTextFieldContentConfiguration(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v32[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v32[-1] - v15;
  v17 = a3[3];
  v35 = a3[2];
  v36[0] = v17;
  *(_DWORD *)((char *)v36 + 15) = *(_DWORD *)((char *)a3 + 63);
  v18 = a3[1];
  v33 = *a3;
  v34 = v18;
  static UIListContentConfiguration.sidebarCell()();
  swift_unknownObjectWeakInit(&v13[v11[5]]);
  v13[v11[6]] = 0;
  *(_QWORD *)&v13[v11[7]] = 1;
  sub_1004AC69C((uint64_t)v13, (uint64_t)v16);
  v19 = v34;
  swift_bridgeObjectRetain(*((_QWORD *)&v34 + 1));
  UIListContentConfiguration.text.setter(v19, *((_QWORD *)&v19 + 1));
  v20 = *((_QWORD *)&v35 + 1);
  swift_bridgeObjectRetain(*((_QWORD *)&v35 + 1));
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v20);
  v22 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v21);

  v23 = UIListContentConfiguration.image.setter(v22);
  UIListContentConfiguration.textProperties.getter(v23);
  UIListContentConfiguration.TextProperties.showsExpansionTextWhenTruncated.setter(0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  UIListContentConfiguration.textProperties.setter(v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v32[3] = v11;
  v32[4] = sub_1004AC71C();
  v24 = sub_1000257F8(v32);
  sub_1004AC764((uint64_t)v16, (uint64_t)v24);
  UICollectionViewCell.contentConfiguration.setter(v32);
  swift_bridgeObjectRetain(*((_QWORD *)&v36[0] + 1));
  UICollectionViewListCell.accessories.setter(v25);
  v26 = swift_allocObject(&unk_100919558, 83, 7);
  v27 = v36[0];
  *(_OWORD *)(v26 + 48) = v35;
  *(_OWORD *)(v26 + 64) = v27;
  *(_DWORD *)(v26 + 79) = *(_DWORD *)((char *)v36 + 15);
  v28 = v34;
  *(_OWORD *)(v26 + 16) = v33;
  *(_OWORD *)(v26 + 32) = v28;
  sub_1004097C0(&v33);
  UICollectionViewCell.configurationUpdateHandler.setter(sub_10063E3C0, v26, v29);
  return sub_1004AC6E0((uint64_t)v16);
}

uint64_t sub_10063DDC8(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  double v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD v33[3];
  uint64_t v34;
  void *v35;

  v31 = a2;
  v3 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v30 - v8;
  v10 = sub_10004CFD4(&qword_1009E65A8);
  __chkstk_darwin(v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SidebarTextFieldContentConfiguration(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v30 - v18;
  v32 = a1;
  UICollectionViewCell.contentConfiguration.getter(v33);
  if (v34)
  {
    v20 = sub_10004CFD4(&qword_1009EA720);
    v21 = swift_dynamicCast(v12, v33, v20, v13, 6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, v21 ^ 1u, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      sub_1004AC69C((uint64_t)v12, (uint64_t)v19);
      v23 = type metadata accessor for UICellConfigurationState(0, v22);
      v34 = v23;
      v35 = &protocol witness table for UICellConfigurationState;
      v24 = sub_1000257F8(v33);
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v24, v31, v23);
      sub_10058D8E4((uint64_t)v33, (uint64_t)v16);
      v25 = _s5Books15CurrentPageViewVwxx_0(v33);
      UIListContentConfiguration.imageProperties.getter(v25);
      (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
      UIListContentConfiguration.imageProperties.setter(v6);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      v34 = v13;
      v35 = (void *)sub_1004AC71C();
      v26 = sub_1000257F8(v33);
      sub_1004AC764((uint64_t)v16, (uint64_t)v26);
      v27 = v32;
      UICollectionViewCell.contentConfiguration.setter(v33);
      v28 = sub_10063E3C8();
      objc_msgSend(v27, "setTintColor:", v28);

      sub_1004AC6E0((uint64_t)v16);
      return sub_1004AC6E0((uint64_t)v19);
    }
  }
  else
  {
    sub_100010960((uint64_t)v33, &qword_1009EA718);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
  }
  return sub_100010960((uint64_t)v12, &qword_1009E65A8);
}

uint64_t sub_10063E090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + OBJC_IVAR____TtCV5Books21SidebarCollectionView19SidebarCellProvider_headerCellRegistration;
  v2 = sub_10004CFD4(&qword_1009F21B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV5Books21SidebarCollectionView19SidebarCellProvider_searchFieldCellRegistration;
  v4 = sub_10004CFD4(&qword_1009F21C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV5Books21SidebarCollectionView19SidebarCellProvider_labelCellRegistration;
  v6 = sub_10004CFD4(&qword_1009F21C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtCV5Books21SidebarCollectionView19SidebarCellProvider_textFieldCellRegistration;
  v8 = sub_10004CFD4(&qword_1009F21D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10063E168()
{
  return _s19SidebarCellProviderCMa(0);
}

uint64_t _s19SidebarCellProviderCMa(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F20C8;
  if (!qword_1009F20C8)
    return swift_getSingletonMetadata(a1, &_s19SidebarCellProviderCMn);
  return result;
}

void sub_10063E1AC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];

  sub_10063E288(319);
  if (v3 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10063E2F4(319);
    if (v5 <= 0x3F)
    {
      v10[1] = *(_QWORD *)(v4 - 8) + 64;
      sub_10063E368(319, &qword_1009F20E8, (uint64_t (*)(uint64_t))type metadata accessor for SidebarLabelListCell);
      if (v7 <= 0x3F)
      {
        v10[2] = *(_QWORD *)(v6 - 8) + 64;
        sub_10063E368(319, (unint64_t *)&unk_1009F20F0, (uint64_t (*)(uint64_t))type metadata accessor for SidebarTextFieldListCell);
        if (v9 <= 0x3F)
        {
          v10[3] = *(_QWORD *)(v8 - 8) + 64;
          swift_updateClassMetadata2(a1, 256, 4, v10, a1 + 80);
        }
      }
    }
  }
}

void sub_10063E288(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009F20D8)
  {
    v2 = sub_100009E04(255, &qword_1009E5FC8, UICollectionViewListCell_ptr);
    v3 = type metadata accessor for UICollectionView.CellRegistration(a1, v2, &type metadata for SidebarViewModel.HeaderModel);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009F20D8);
  }
}

void sub_10063E2F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1009F20E0)
  {
    v2 = sub_100009E04(255, &qword_1009E5FD0, UICollectionViewCell_ptr);
    v3 = type metadata accessor for SidebarViewModel.SearchFieldModel(255);
    v4 = type metadata accessor for UICollectionView.CellRegistration(a1, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1009F20E0);
  }
}

void sub_10063E368(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for UICollectionView.CellRegistration(a1, v5, &type metadata for SidebarViewModel.ItemModel);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_10063E3C0(void *a1, uint64_t a2)
{
  return sub_10063DDC8(a1, a2);
}

id sub_10063E3C8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  id v11;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "bc_booksKeyColor");
  v2 = (void *)UICellConfigurationState.traitCollection.getter();
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  v4 = objc_msgSend(v1, "bc_hexValue");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  v7 = v6;

  if (v3 != (id)2)
  {
    swift_bridgeObjectRelease(v7);
    return v1;
  }
  if (v5 != 0x464646464646 || v7 != 0xE600000000000000)
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(0x464646464646, 0xE600000000000000, v5, v7, 0);
    swift_bridgeObjectRelease(v7);
    if ((v9 & 1) != 0)
      goto LABEL_11;
    return v1;
  }
  swift_bridgeObjectRelease(0xE600000000000000);
LABEL_11:
  v11 = objc_msgSend(v0, "grayColor");

  return v11;
}

uint64_t sub_10063E4FC(void *a1, uint64_t a2)
{
  return sub_10063D8E0(a1, a2);
}

uint64_t sub_10063E504()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_unknownObjectWeakDestroy(v0 + 24);
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10063E530()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10063E554(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10063CFB0(a1, a2, *(unsigned __int8 *)(v2 + 16));
}

uint64_t sub_10063E564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void *Strong;
  void *v15;
  id v16;
  double v17;
  double v18;
  Swift::String v19;
  void *object;
  void *v21;
  uint64_t v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  Swift::String v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  Swift::String v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  Swift::String v40;
  _BYTE v42[7];
  char v43;
  uint64_t v44;
  unint64_t v45;
  _BYTE v46[24];

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009E3508);
  __chkstk_darwin(v2);
  v4 = &v42[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for PageLocation(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v42[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = v1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_location;
  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_location, v46, 0, 0);
  sub_1004C73EC(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100010960((uint64_t)v4, &qword_1009E3508);
    v10 = (void *)0xE100000000000000;
    v11 = 45;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
    v12 = sub_10063ED48();
    v11 = dispatch thunk of CustomStringConvertible.description.getter(v5, v12);
    v10 = v13;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_realView);
  if (Strong)
  {
    v15 = Strong;
    v44 = 0x656976206C616552;
    v45 = 0xEA00000000002077;
    v16 = objc_msgSend(Strong, "frame");
    v19._countAndFlagsBits = CGSize.description.getter(v16, v17, v18);
    object = v19._object;
    String.append(_:)(v19);

    swift_bridgeObjectRelease(object);
    v22 = v44;
    v21 = (void *)v45;
  }
  else
  {
    v21 = (void *)0xE900000000000074;
    v22 = 0x6E65746E6F436F6ELL;
  }
  v44 = 0;
  v45 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  v23._countAndFlagsBits = 91;
  v23._object = (void *)0xE100000000000000;
  String.append(_:)(v23);
  v24._countAndFlagsBits = v11;
  v24._object = v10;
  String.append(_:)(v24);
  swift_bridgeObjectRelease(v10);
  v25._countAndFlagsBits = 8250;
  v25._object = (void *)0xE200000000000000;
  String.append(_:)(v25);
  v26._countAndFlagsBits = v22;
  v26._object = v21;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v21);
  v27._countAndFlagsBits = 32;
  v27._object = (void *)0xE100000000000000;
  String.append(_:)(v27);
  v43 = *(_BYTE *)(v1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_animationState);
  _print_unlocked<A, B>(_:_:)(&v43, &v44, &type metadata for PageAnimationState, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v28._countAndFlagsBits = 0x203F6576696C202ELL;
  v28._object = (void *)0xE800000000000000;
  String.append(_:)(v28);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_live))
    v29 = 1702195828;
  else
    v29 = 0x65736C6166;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_live))
    v30 = 0xE400000000000000;
  else
    v30 = 0xE500000000000000;
  v31 = v30;
  String.append(_:)(*(Swift::String *)&v29);
  swift_bridgeObjectRelease(v30);
  v32._countAndFlagsBits = 0x746954776F687320;
  v32._object = (void *)0xEC000000203F656CLL;
  String.append(_:)(v32);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_showTitle))
    v33 = 1702195828;
  else
    v33 = 0x65736C6166;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_showTitle))
    v34 = 0xE400000000000000;
  else
    v34 = 0xE500000000000000;
  v35 = v34;
  String.append(_:)(*(Swift::String *)&v33);
  swift_bridgeObjectRelease(v34);
  v36._countAndFlagsBits = 0x203F6564697720;
  v36._object = (void *)0xE700000000000000;
  String.append(_:)(v36);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_wide))
    v37 = 1702195828;
  else
    v37 = 0x65736C6166;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC5Books17PageCurlViewModel_wide))
    v38 = 0xE400000000000000;
  else
    v38 = 0xE500000000000000;
  v39 = v38;
  String.append(_:)(*(Swift::String *)&v37);
  swift_bridgeObjectRelease(v38);
  v40._countAndFlagsBits = 93;
  v40._object = (void *)0xE100000000000000;
  String.append(_:)(v40);
  return v44;
}

uint64_t sub_10063E8C8(uint64_t a1, uint64_t a2, char a3, char a4, char a5, char a6, char a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v21[24];

  v14 = v7 + OBJC_IVAR____TtC5Books17PageCurlViewModel_location;
  v15 = type metadata accessor for PageLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = v7 + OBJC_IVAR____TtC5Books17PageCurlViewModel_spread;
  v17 = type metadata accessor for SpreadPaginationEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v7 + OBJC_IVAR____TtC5Books17PageCurlViewModel_realView;
  swift_unknownObjectWeakInit(v7 + OBJC_IVAR____TtC5Books17PageCurlViewModel_realView);
  *(_QWORD *)(v7 + 16) = 0;
  swift_beginAccess(v16, v21, 33, 0);
  sub_10000B558(a1, v16, (uint64_t *)&unk_1009E8E70);
  swift_endAccess(v21);
  swift_beginAccess(v14, v21, 33, 0);
  sub_10000B558(a2, v14, &qword_1009E3508);
  swift_endAccess(v21);
  swift_unknownObjectWeakAssign(v18, 0);
  *(_BYTE *)(v7 + OBJC_IVAR____TtC5Books17PageCurlViewModel_rightToLeft) = a3;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC5Books17PageCurlViewModel_live) = a4;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC5Books17PageCurlViewModel_animationState) = 0;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC5Books17PageCurlViewModel_showHeader) = a5;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC5Books17PageCurlViewModel_showTitle) = a6;
  *(_BYTE *)(v7 + OBJC_IVAR____TtC5Books17PageCurlViewModel_wide) = a7;
  return v7;
}

uint64_t sub_10063EA5C()
{
  uint64_t v0;

  sub_100010960(v0 + OBJC_IVAR____TtC5Books17PageCurlViewModel_location, &qword_1009E3508);
  sub_100010960(v0 + OBJC_IVAR____TtC5Books17PageCurlViewModel_spread, (uint64_t *)&unk_1009E8E70);
  swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC5Books17PageCurlViewModel_realView);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10063EABC()
{
  return type metadata accessor for PageCurlViewModel(0);
}

uint64_t type metadata accessor for PageCurlViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F2200;
  if (!qword_1009F2200)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for PageCurlViewModel);
  return result;
}

void sub_10063EB00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[10];

  v6[0] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_10000AB68(319, (unint64_t *)&unk_1009E3B00, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_10000AB68(319, &qword_1009D2C88, (uint64_t (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = "\b";
      v6[4] = &unk_1007366A0;
      v6[5] = &unk_1007366A0;
      v6[6] = &unk_1007366A0;
      v6[7] = &unk_1007366A0;
      v6[8] = &unk_1007366A0;
      v6[9] = &unk_1007366B8;
      swift_updateClassMetadata2(a1, 256, 10, v6, a1 + 80);
    }
  }
}

uint64_t storeEnumTagSinglePayload for PageAnimationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10063EC24 + 4 * byte_100736655[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10063EC58 + 4 * asc_100736650[v4]))();
}

uint64_t sub_10063EC58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10063EC60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10063EC68);
  return result;
}

uint64_t sub_10063EC74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10063EC7CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10063EC80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10063EC88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PageAnimationState()
{
  return &type metadata for PageAnimationState;
}

unint64_t sub_10063ECA8()
{
  unint64_t result;

  result = qword_1009F2398;
  if (!qword_1009F2398)
  {
    result = swift_getWitnessTable(&unk_100736724, &type metadata for PageAnimationState);
    atomic_store(result, (unint64_t *)&qword_1009F2398);
  }
  return result;
}

uint64_t sub_10063ECEC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for PageCurlViewModel(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10063ED28()
{
  return sub_10063E564();
}

unint64_t sub_10063ED48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009E6EF0;
  if (!qword_1009E6EF0)
  {
    v1 = type metadata accessor for PageLocation(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for PageLocation, v1);
    atomic_store(result, (unint64_t *)&qword_1009E6EF0);
  }
  return result;
}

unint64_t sub_10063ED94()
{
  unint64_t result;

  result = qword_1009F23A0;
  if (!qword_1009F23A0)
  {
    result = swift_getWitnessTable(&unk_100736868, &type metadata for PauseCurrentAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F23A0);
  }
  return result;
}

unint64_t sub_10063EDDC()
{
  unint64_t result;

  result = qword_1009F23A8;
  if (!qword_1009F23A8)
  {
    result = swift_getWitnessTable(&unk_100736890, &type metadata for PauseCurrentAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F23A8);
  }
  return result;
}

uint64_t sub_10063EE20(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087B10C, 1);
}

uint64_t sub_10063EE30(uint64_t a1, uint64_t a2)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = sub_10061B12C();
  return swift_getOpaqueTypeConformance2(v3, &opaque type descriptor for <<opaque return type of static AppIntent.parameterSummary>>, 1);
}

uint64_t sub_10063EE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v0 = type metadata accessor for LocalizedStringResource.BundleDescription(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = type metadata accessor for Locale(0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for String.LocalizationValue(0);
  __chkstk_darwin(v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for LocalizedStringResource(0);
  sub_10001BFD8(v10, qword_100A1F050);
  sub_100048F64(v10, (uint64_t)qword_100A1F050);
  v11 = String.LocalizationValue.init(stringLiteral:)(0xD000000000000017, 0x80000001007DABC0);
  static Locale.current.getter(v11);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)(v9, 0, 0, v6, v3, "Title for 'Pause Current Audiobook' AppIntent.", 46, 2);
}

uint64_t sub_10063EFE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1009CEAC8 != -1)
    swift_once(&qword_1009CEAC8, sub_10063EE70);
  v2 = type metadata accessor for LocalizedStringResource(0);
  v3 = sub_100048F64(v2, (uint64_t)qword_100A1F050);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_10063F054(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = v3;
  return swift_task_switch(sub_10063F070, 0, 0);
}

uint64_t sub_10063F070()
{
  uint64_t v0;
  __int128 v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  AppDependency.wrappedValue.getter((_QWORD *)(v0 + 16));
  v1 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 88) = v1;
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v0 + 48);
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1009E5028 + dword_1009E5028);
  v2 = (_QWORD *)swift_task_alloc(unk_1009E502C);
  *(_QWORD *)(v0 + 112) = v2;
  *v2 = v0;
  v2[1] = sub_10063F0E8;
  return v4();
}

uint64_t sub_10063F0E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v3 = *(void **)(*(_QWORD *)v0 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 96);
  v5 = *(void **)(*(_QWORD *)v0 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 112));

  swift_unknownObjectRelease(v4);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_10063F174, 0, 0);
}

uint64_t sub_10063F174(uint64_t a1)
{
  uint64_t v1;

  static IntentResult.result<>()(a1);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_10063F1AC()
{
  unint64_t result;

  result = qword_1009F23B8;
  if (!qword_1009F23B8)
  {
    result = swift_getWitnessTable(&unk_1007368AC, &type metadata for PauseCurrentAudiobookIntent);
    atomic_store(result, (unint64_t *)&qword_1009F23B8);
  }
  return result;
}

uint64_t sub_10063F1F0(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_10061B12C();
  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for PauseCurrentAudiobookIntent()
{
  return &type metadata for PauseCurrentAudiobookIntent;
}

unint64_t sub_10063F22C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009D2570;
  if (!qword_1009D2570)
  {
    v1 = sub_100030B74(&qword_1009D1328);
    result = swift_getWitnessTable(&protocol conformance descriptor for IntentResultContainer<A, B, C, D>, v1);
    atomic_store(result, (unint64_t *)&qword_1009D2570);
  }
  return result;
}

uint64_t sub_10063F278()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to Manager.getAllConfigurations()[1]);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10029A6AC;
  return Manager.getAllConfigurations()();
}

uint64_t sub_10063F2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(async function pointer to Manager.getProperties(configs:assetIDs:sortByCreatedAt:limit:)[1]);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1001EB614;
  return Manager.getProperties(configs:assetIDs:sortByCreatedAt:limit:)(a1, a2, 0, 0);
}

uint64_t sub_10063F330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc(async function pointer to Manager.getEarliestTimestamp(propertyNames:assetIDs:earliestTimestampComparator:)[1]);
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_10000AE34;
  return Manager.getEarliestTimestamp(propertyNames:assetIDs:earliestTimestampComparator:)(a1, a2, a3, a4, a5);
}

uint64_t sub_10063F3B8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  Swift::String v13;
  Swift::Int v14;
  unsigned int *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v18;

  v6 = type metadata accessor for Event.FinishedMechanism(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v18 - v11;
  v13._countAndFlagsBits = a1;
  v13._object = a2;
  v14 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1008EFA80, v13);
  swift_bridgeObjectRelease(a2);
  if (v14 == 1)
  {
    v15 = (unsigned int *)&enum case for Event.FinishedMechanism.manually(_:);
    goto LABEL_5;
  }
  if (v14 == 2)
  {
    v15 = (unsigned int *)&enum case for Event.FinishedMechanism.automatically(_:);
LABEL_5:
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *v15, v6);
    v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v16(v12, v10, v6);
    v16(a3, v12, v6);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
}

uint64_t sub_10063F510()
{
  uint64_t result;

  sub_100009B88();
  result = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD00000000000001DLL, 0x80000001007DAC60);
  qword_100A1F068 = result;
  return result;
}

uint64_t sub_10063F578()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1F070);
  sub_100048F64(v0, (uint64_t)qword_100A1F070);
  if (qword_1009CEAD0 != -1)
    swift_once(&qword_1009CEAD0, sub_10063F510);
  return Logger.init(_:)((id)qword_100A1F068);
}

void *sub_10063F5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  _QWORD *v12;
  char *v13;
  char *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  char *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  char *v32;
  char *v33;
  char *v34;
  _QWORD *v35;
  char *v36;
  _QWORD *v37;
  char *v38;
  _QWORD *v39;
  char *v40;
  _QWORD *v41;
  char *v42;
  void *result;

  v0 = sub_10004CFD4(&qword_1009F24E8);
  v1 = sub_10004CFD4(&qword_1009D0538);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = *(unsigned __int8 *)(v2 + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject(v0, v5 + 17 * v3, v4 | 7);
  *(_OWORD *)(v6 + 16) = xmmword_100736900;
  v7 = (_QWORD *)(v6 + v5);
  v8 = v6 + v5 + *(int *)(v1 + 48);
  *v7 = 0x6E61576F54646461;
  v7[1] = 0xEF646165526F5474;
  v9 = enum case for EventType.addToWantToRead(_:);
  v10 = type metadata accessor for EventType(0);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104);
  v11(v8, v9, v10);
  v12 = (_QWORD *)((char *)v7 + v3);
  v13 = (char *)v7 + v3 + *(int *)(v1 + 48);
  *v12 = 0xD000000000000012;
  v12[1] = 0x80000001007B1EC0;
  v11((uint64_t)v13, enum case for EventType.audiobookWasPlayed(_:), v10);
  v14 = (char *)v7 + 2 * v3;
  v15 = &v14[*(int *)(v1 + 48)];
  strcpy(v14, "bookImpression");
  v14[15] = -18;
  v11((uint64_t)v15, enum case for EventType.bookImpression(_:), v10);
  v16 = (_QWORD *)((char *)v7 + 3 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 0xD000000000000019;
  v16[1] = 0x80000001007C97E0;
  v11((uint64_t)v17, enum case for EventType.bookProductPageImpression(_:), v10);
  v18 = (_QWORD *)((char *)v7 + 4 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 0x527361576B6F6F62;
  v18[1] = 0xEB00000000646165;
  v11((uint64_t)v19, enum case for EventType.bookWasRead(_:), v10);
  v20 = (char *)v7 + 5 * v3;
  v21 = &v20[*(int *)(v1 + 48)];
  strcpy(v20, "downloadSample");
  v20[15] = -18;
  v11((uint64_t)v21, enum case for EventType.downloadSample(_:), v10);
  v22 = (_QWORD *)((char *)v7 + 6 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 0x746963696C707865;
  v22[1] = 0xEF656E696C636544;
  v11((uint64_t)v23, enum case for EventType.explicitDecline(_:), v10);
  v24 = (_QWORD *)((char *)v7 + 7 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 0x6B6F6F4265646968;
  v24[1] = 0xE800000000000000;
  v11((uint64_t)v25, enum case for EventType.hideBook(_:), v10);
  v26 = (uint64_t)&v7[v3] + *(int *)(v1 + 48);
  strcpy((char *)&v7[v3], "markAsFinished");
  HIBYTE(v7[v3 + 1]) = -18;
  v11(v26, enum case for EventType.markAsFinished(_:), v10);
  v27 = (_QWORD *)((char *)v7 + 9 * v3);
  v28 = (char *)v27 + *(int *)(v1 + 48);
  *v27 = 0xD000000000000012;
  v27[1] = 0x80000001007DAC80;
  v11((uint64_t)v28, enum case for EventType.markAsStillReading(_:), v10);
  v29 = (_QWORD *)((char *)v7 + 10 * v3);
  v30 = (char *)v29 + *(int *)(v1 + 48);
  *v29 = 0x676E69746172;
  v29[1] = 0xE600000000000000;
  v11((uint64_t)v30, enum case for EventType.rating(_:), v10);
  v31 = (_QWORD *)((char *)v7 + 11 * v3);
  v32 = (char *)v31 + *(int *)(v1 + 48);
  *v31 = 0xD000000000000014;
  v31[1] = 0x80000001007C9880;
  v11((uint64_t)v32, enum case for EventType.removeFromWantToRead(_:), v10);
  v33 = (char *)v7 + 12 * v3;
  v34 = &v33[*(int *)(v1 + 48)];
  strcpy(v33, "removeSample");
  v33[13] = 0;
  *((_WORD *)v33 + 7) = -5120;
  v11((uint64_t)v34, enum case for EventType.removeSample(_:), v10);
  v35 = (_QWORD *)((char *)v7 + 13 * v3);
  v36 = (char *)v35 + *(int *)(v1 + 48);
  *v35 = 0x4C74736567677573;
  v35[1] = 0xEB00000000737365;
  v11((uint64_t)v36, enum case for EventType.suggestLess(_:), v10);
  v37 = (_QWORD *)((char *)v7 + 14 * v3);
  v38 = (char *)v37 + *(int *)(v1 + 48);
  *v37 = 0x4D74736567677573;
  v37[1] = 0xEB0000000065726FLL;
  v11((uint64_t)v38, enum case for EventType.suggestMore(_:), v10);
  v39 = (_QWORD *)((char *)v7 + 15 * v3);
  v40 = (char *)v39 + *(int *)(v1 + 48);
  *v39 = 0x6572616873;
  v39[1] = 0xE500000000000000;
  v11((uint64_t)v40, enum case for EventType.share(_:), v10);
  v41 = &v7[2 * v3];
  v42 = (char *)v41 + *(int *)(v1 + 48);
  *v41 = 0x657461726E75;
  v41[1] = 0xE600000000000000;
  v11((uint64_t)v42, enum case for EventType.unrate(_:), v10);
  result = (void *)sub_1001DBC60(v6);
  off_1009F23C0 = result;
  return result;
}

id sub_10063FAF4()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = *(id *)(v0 + 24);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone((Class)NSISO8601DateFormatter), "init");
    v4 = *(void **)(v0 + 24);
    *(_QWORD *)(v0 + 24) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_10063FB5C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[14] = a1;
  v2[15] = v1;
  v3 = type metadata accessor for TaskPriority(0);
  v2[16] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[17] = v4;
  v2[18] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10063FBBC, 0, 0);
}

uint64_t sub_10063FBBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  static TaskPriority.userInitiated.getter(a1);
  v4 = (char *)&dword_1009DACB8 + dword_1009DACB8;
  v2 = (_QWORD *)swift_task_alloc(unk_1009DACBC);
  *(_QWORD *)(v1 + 152) = v2;
  *v2 = v1;
  v2[1] = sub_10063FC38;
  return ((uint64_t (*)(uint64_t, _QWORD))v4)(v1 + 64, *(_QWORD *)(v1 + 144));
}

uint64_t sub_10063FC38()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  v4 = swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD, __n128))(v2[17] + 8))(v2[18], v2[16], v4);
  if (v0)
    v5 = sub_10063FFB4;
  else
    v5 = sub_10063FCAC;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_10063FCAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = v0[11];
  v2 = v0[12];
  sub_10003F198(v0 + 8, v1);
  v3 = *(int **)(v2 + 8);
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[21] = v4;
  *v4 = v0;
  v4[1] = sub_10063FD24;
  return v6(v1, v2);
}

uint64_t sub_10063FD24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 176) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_10063FD80, 0, 0);
}

uint64_t sub_10063FD80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;
  int *v9;

  v1 = v0[22];
  v2 = v0[14];
  swift_bridgeObjectRetain(v2);
  v3 = sub_1006455CC(v1, v2);
  v0[23] = v3;
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  v0[13] = &_swiftEmptySetSingleton;
  v4 = v0[11];
  v5 = v0[12];
  sub_10003F198(v0 + 8, v4);
  v6 = *(int **)(v5 + 24);
  v9 = (int *)((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc(v6[1]);
  v0[24] = v7;
  *v7 = v0;
  v7[1] = sub_10063FE50;
  return ((uint64_t (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v9)(v3, 0, v4, v5);
}

uint64_t sub_10063FE50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 192);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_10063FEB4, 0, 0);
}

uint64_t sub_10063FEB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v12[2];

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 40;
    do
    {
      sub_100316B8C(v3, v0 + 16);
      v4 = sub_100316BC8(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004AD60);
      v5 = PropertyValue.assetID.getter(v4);
      v7 = v6;
      sub_100316BC8(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      if (v7)
      {
        sub_1000345F0(v12, v5, v7);
        swift_bridgeObjectRelease(v12[1]);
      }
      v3 += 56;
      --v2;
    }
    while (v2);
    v1 = *(_QWORD *)(v0 + 200);
  }
  swift_bridgeObjectRelease(v1);
  v8 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 104);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
  v10 = swift_task_dealloc(v8);
  return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(v9, v10);
}

uint64_t sub_10063FFB4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 144));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10063FFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[25] = a2;
  v3[26] = v2;
  v3[24] = a1;
  v4 = sub_10004CFD4(&qword_1009D7440);
  v3[27] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v3[28] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[29] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[30] = swift_task_alloc(v7);
  v3[31] = swift_task_alloc(v7);
  v3[32] = swift_task_alloc(v7);
  v8 = type metadata accessor for TaskPriority(0);
  v3[33] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v3[34] = v9;
  v3[35] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_1006400B4, 0, 0);
}

uint64_t sub_1006400B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  static TaskPriority.userInitiated.getter(a1);
  v4 = (char *)&dword_1009DACB8 + dword_1009DACB8;
  v2 = (_QWORD *)swift_task_alloc(unk_1009DACBC);
  *(_QWORD *)(v1 + 288) = v2;
  *v2 = v1;
  v2[1] = sub_100640130;
  return ((uint64_t (*)(uint64_t, _QWORD))v4)(v1 + 64, *(_QWORD *)(v1 + 280));
}

uint64_t sub_100640130()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 288);
  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  v4 = swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD, __n128))(v2[34] + 8))(v2[35], v2[33], v4);
  if (v0)
    v5 = sub_100640C1C;
  else
    v5 = sub_1006401A4;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_1006401A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = v0[11];
  v2 = v0[12];
  sub_10003F198(v0 + 8, v1);
  v3 = *(int **)(v2 + 8);
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[38] = v4;
  *v4 = v0;
  v4[1] = sub_10064021C;
  return v6(v1, v2);
}

uint64_t sub_10064021C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 304);
  *(_QWORD *)(*(_QWORD *)v1 + 312) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100640278, 0, 0);
}

uint64_t sub_100640278()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  int *v10;

  v1 = v0[39];
  v2 = v0[37];
  v3 = v0[24];
  swift_bridgeObjectRetain(v3);
  v4 = sub_1006455CC(v1, v3);
  v0[40] = v4;
  v0[41] = v2;
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v1);
  v5 = v0[11];
  v6 = v0[12];
  sub_10003F198(v0 + 8, v5);
  v7 = *(int **)(v6 + 24);
  v10 = (int *)((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v0[42] = v8;
  *v8 = v0;
  v8[1] = sub_10064033C;
  return ((uint64_t (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v10)(v4, 0, v5, v6);
}

uint64_t sub_10064033C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 336);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 320);
  *(_QWORD *)(*(_QWORD *)v1 + 344) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_1006403A4, 0, 0);
}

void sub_1006403A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint8_t *v46;
  unsigned __int8 v47;
  BOOL v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  unsigned int v53;
  __n128 v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  __n128 v61;
  void (*v62)(uint64_t, uint64_t, __n128);
  uint64_t v63;
  unsigned __int8 *v64;
  unsigned int v65;
  unsigned __int8 v66;
  unint64_t v67;
  uint64_t v68;
  unsigned __int8 *v69;
  unsigned int v70;
  char v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _OWORD *v87;
  void *v88;
  uint64_t v89[3];

  v1 = *(_QWORD *)(v0 + 344);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRelease(*(_QWORD *)(v0 + 344));
    v72 = _swiftEmptyDictionarySingleton;
LABEL_93:
    v73 = *(_QWORD *)(v0 + 280);
    v75 = *(_QWORD *)(v0 + 248);
    v74 = *(_QWORD *)(v0 + 256);
    v76 = *(_QWORD *)(v0 + 240);
    v77 = *(_QWORD *)(v0 + 216);
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    v78 = swift_task_dealloc(v77);
    (*(void (**)(_QWORD *, __n128))(v0 + 8))(v72, v78);
    return;
  }
  v3 = 0;
  v4 = v0 + 16;
  v5 = (_QWORD *)(v0 + 104);
  v87 = (_OWORD *)(v0 + 136);
  v6 = (uint64_t *)(v0 + 184);
  v84 = *(_QWORD *)(v0 + 232);
  v7 = v1 + 40;
  v79 = *(_QWORD *)(v0 + 328);
  v80 = _swiftEmptyDictionarySingleton;
  v82 = *(_QWORD *)(v1 + 16);
  v83 = *(_QWORD *)(v0 + 344);
  v81 = v1 + 40;
  while (1)
  {
    if (v3 >= *(_QWORD *)(v1 + 16))
    {
      __break(1u);
      return;
    }
    sub_100316B8C(v7 + 56 * v3, v4);
    v8 = sub_100316BC8(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004AD60);
    PropertyValue.rawValue.getter(v5, v8);
    v9 = sub_10004CFD4(&qword_1009F24C8);
    if ((swift_dynamicCast(v6, v5, (char *)&type metadata for Any + 8, v9, 6) & 1) == 0)
    {
LABEL_24:
      sub_100316BC8(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      goto LABEL_28;
    }
    v10 = *v6;
    if (*(_QWORD *)(*v6 + 16) && (v11 = sub_10004CE80(0x6D617473656D6974, 0xE900000000000070), (v12 & 1) != 0))
    {
      sub_10004CD0C(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)v87);
    }
    else
    {
      *v87 = 0u;
      *(_OWORD *)(v0 + 152) = 0u;
    }
    swift_bridgeObjectRelease(v10);
    if (!*(_QWORD *)(v0 + 160))
    {
      sub_100316BC8(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      sub_100010960((uint64_t)v87, (uint64_t *)&unk_1009E6400);
      goto LABEL_28;
    }
    v13 = sub_10004CFD4(&qword_1009DA340);
    if ((swift_dynamicCast(v0 + 168, v87, v13, &type metadata for String, 6) & 1) == 0)
      goto LABEL_24;
    v14 = *(_QWORD *)(v0 + 176);
    v15 = sub_10063FAF4();
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "dateFromString:", v16, swift_bridgeObjectRelease(v14).n128_f64[0]);

    if (!v17)
    {
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v84 + 56))(*(_QWORD *)(v0 + 216), 1, 1, *(_QWORD *)(v0 + 224));
LABEL_27:
      v34 = *(_QWORD *)(v0 + 216);
      sub_100316BC8(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
      sub_100010960(v34, &qword_1009D7440);
      v2 = v82;
      v1 = v83;
      goto LABEL_28;
    }
    v18 = *(_QWORD *)(v0 + 248);
    v20 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 224);
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v17);

    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 32);
    v21(v20, v18, v19);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v84 + 56))(v20, 0, 1, v19);
    v7 = v81;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v20, 1, v19) == 1)
      goto LABEL_27;
    v22 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD))v21)(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
    v23 = PropertyValue.assetID.getter(v22);
    v25 = v24;
    sub_100316BC8(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
    v2 = v82;
    v1 = v83;
    if (!v25)
    {
      (*(void (**)(_QWORD, _QWORD))(v84 + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 224));
      goto LABEL_28;
    }
    v26 = HIBYTE(v25) & 0xF;
    v27 = v23 & 0xFFFFFFFFFFFFLL;
    if ((v25 & 0x2000000000000000) != 0)
      v28 = HIBYTE(v25) & 0xF;
    else
      v28 = v23 & 0xFFFFFFFFFFFFLL;
    if (!v28)
    {
      v54 = swift_bridgeObjectRelease(v25);
LABEL_89:
      (*(void (**)(_QWORD, _QWORD, __n128))(v84 + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 224), v54);
      v1 = v83;
LABEL_28:
      if (qword_1009CEAD8 != -1)
        swift_once(&qword_1009CEAD8, sub_10063F578);
      v35 = type metadata accessor for Logger(0);
      v36 = sub_100048F64(v35, (uint64_t)qword_100A1F070);
      v37 = Logger.logObject.getter(v36);
      v38 = static os_log_type_t.error.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v85 = v3;
        v39 = v4;
        v40 = v5;
        v41 = v2;
        v42 = v6;
        v43 = v7;
        v44 = v1;
        v45 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v45 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Unexpected property format, can't extract timestamp or storeID", v45, 2u);
        v46 = v45;
        v1 = v44;
        v7 = v43;
        v6 = v42;
        v2 = v41;
        v5 = v40;
        v4 = v39;
        v3 = v85;
        swift_slowDealloc(v46, -1, -1);
      }

      goto LABEL_33;
    }
    if ((v25 & 0x1000000000000000) != 0)
    {
      v32 = sub_1003277FC(v23, v25, 10);
      v33 = v71;
      goto LABEL_60;
    }
    if ((v25 & 0x2000000000000000) != 0)
      break;
    if ((v23 & 0x1000000000000000) != 0)
      v29 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v29 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v23, v25);
    v30 = sub_1003276EC(v29, v27, 10);
    if (v79)
      return;
    v32 = (uint64_t)v30;
    v79 = 0;
    v33 = v31 & 1;
    v7 = v81;
    v2 = v82;
LABEL_60:
    v54 = swift_bridgeObjectRelease(v25);
    if ((v33 & 1) != 0)
      goto LABEL_89;
    Date.beginningOfDay(timeZone:)(*(_QWORD *)(v0 + 200), v54);
    if (v80[2] && (v55 = sub_1002BBF20(*(_QWORD *)(v0 + 240)), (v56 & 1) != 0))
    {
      v88 = *(void **)(v80[7] + 8 * v55);
      swift_bridgeObjectRetain(v88);
    }
    else
    {
      v88 = &_swiftEmptySetSingleton;
    }
    v57 = *(_QWORD *)(v0 + 248);
    v86 = *(_QWORD *)(v0 + 256);
    v58 = *(_QWORD *)(v0 + 240);
    v59 = *(_QWORD *)(v0 + 224);
    sub_10060C008(v89, v32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v57, v58, v59);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v80);
    v89[0] = (uint64_t)v80;
    sub_1002C5770((uint64_t)v88, v57, isUniquelyReferenced_nonNull_native);
    v80 = (_QWORD *)v89[0];
    v61 = swift_bridgeObjectRelease(0x8000000000000000);
    v62 = *(void (**)(uint64_t, uint64_t, __n128))(v84 + 8);
    v62(v57, v59, v61);
    ((void (*)(uint64_t, uint64_t))v62)(v58, v59);
    ((void (*)(uint64_t, uint64_t))v62)(v86, v59);
    v2 = v82;
    v1 = v83;
    v7 = v81;
LABEL_33:
    if (++v3 == v2)
    {
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + 344));
      v72 = v80;
      goto LABEL_93;
    }
  }
  v89[0] = v23;
  v89[1] = v25 & 0xFFFFFFFFFFFFFFLL;
  if (v23 == 43)
  {
    if (!v26)
      goto LABEL_97;
    if (v26 == 1 || (BYTE1(v23) - 48) > 9u)
      goto LABEL_59;
    v50 = (BYTE1(v23) - 48);
    if (v26 == 2)
    {
LABEL_67:
      v33 = 0;
      v32 = v50;
      goto LABEL_60;
    }
    if ((BYTE2(v23) - 48) > 9u)
      goto LABEL_59;
    v32 = 10 * (BYTE1(v23) - 48) + (BYTE2(v23) - 48);
    v51 = v26 - 3;
    if (v51)
    {
      v52 = (unsigned __int8 *)v89 + 3;
      while (1)
      {
        v53 = *v52 - 48;
        if (v53 > 9)
          goto LABEL_59;
        if (!is_mul_ok(v32, 0xAuLL))
          goto LABEL_59;
        v48 = __CFADD__(10 * v32, v53);
        v32 = 10 * v32 + v53;
        if (v48)
          goto LABEL_59;
        v33 = 0;
        ++v52;
        if (!--v51)
          goto LABEL_60;
      }
    }
    goto LABEL_80;
  }
  if (v23 != 45)
  {
    if (!v26 || (v23 - 48) > 9u)
      goto LABEL_59;
    v50 = (v23 - 48);
    if (v26 == 1)
      goto LABEL_67;
    if ((BYTE1(v23) - 48) > 9u)
      goto LABEL_59;
    v32 = 10 * (v23 - 48) + (BYTE1(v23) - 48);
    v63 = v26 - 2;
    if (v63)
    {
      v64 = (unsigned __int8 *)v89 + 2;
      while (1)
      {
        v65 = *v64 - 48;
        if (v65 > 9)
          goto LABEL_59;
        if (!is_mul_ok(v32, 0xAuLL))
          goto LABEL_59;
        v48 = __CFADD__(10 * v32, v65);
        v32 = 10 * v32 + v65;
        if (v48)
          goto LABEL_59;
        v33 = 0;
        ++v64;
        if (!--v63)
          goto LABEL_60;
      }
    }
    goto LABEL_80;
  }
  if (v26)
  {
    if (v26 == 1)
      goto LABEL_59;
    v47 = BYTE1(v23) - 48;
    if ((BYTE1(v23) - 48) > 9u)
      goto LABEL_59;
    v48 = v47 == 0;
    v49 = -(uint64_t)v47;
    if (!v48)
    {
      v33 = 1;
      v32 = 0;
      goto LABEL_60;
    }
    if (v26 == 2)
    {
      v33 = 0;
      v32 = v49;
      goto LABEL_60;
    }
    v66 = BYTE2(v23) - 48;
    if ((BYTE2(v23) - 48) > 9u)
      goto LABEL_59;
    if (!is_mul_ok(v49, 0xAuLL))
      goto LABEL_59;
    v67 = 10 * v49;
    v32 = v67 - v66;
    if (v67 < v66)
      goto LABEL_59;
    v68 = v26 - 3;
    if (v68)
    {
      v69 = (unsigned __int8 *)v89 + 3;
      while (1)
      {
        v70 = *v69 - 48;
        if (v70 > 9)
          break;
        if (!is_mul_ok(v32, 0xAuLL))
          break;
        v48 = 10 * v32 >= (unint64_t)v70;
        v32 = 10 * v32 - v70;
        if (!v48)
          break;
        v33 = 0;
        ++v69;
        if (!--v68)
          goto LABEL_60;
      }
LABEL_59:
      v32 = 0;
      v33 = 1;
      goto LABEL_60;
    }
LABEL_80:
    v33 = 0;
    goto LABEL_60;
  }
  __break(1u);
LABEL_97:
  __break(1u);
}

uint64_t sub_100640C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100640C84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  v4 = type metadata accessor for Event(0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[12] = swift_task_alloc(v6);
  v3[13] = swift_task_alloc(v6);
  v7 = type metadata accessor for TaskPriority(0);
  v3[14] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[15] = v8;
  v3[16] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100640D20, 0, 0);
}

uint64_t sub_100640D20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  static TaskPriority.userInitiated.getter(a1);
  v4 = (char *)&dword_1009DACB8 + dword_1009DACB8;
  v2 = (_QWORD *)swift_task_alloc(unk_1009DACBC);
  *(_QWORD *)(v1 + 136) = v2;
  *v2 = v1;
  v2[1] = sub_100640D9C;
  return ((uint64_t (*)(uint64_t, _QWORD))v4)(v1 + 16, *(_QWORD *)(v1 + 128));
}

uint64_t sub_100640D9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  v4 = swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD, __n128))(v2[15] + 8))(v2[16], v2[14], v4);
  if (v0)
    v5 = sub_1006413DC;
  else
    v5 = sub_100640E10;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100640E10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = v0[5];
  v2 = v0[6];
  sub_10003F198(v0 + 2, v1);
  v3 = *(int **)(v2 + 8);
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[19] = v4;
  *v4 = v0;
  v4[1] = sub_100640E88;
  return v6(v1, v2);
}

uint64_t sub_100640E88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100640EE4, 0, 0);
}

uint64_t sub_100640EE4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  int *v10;

  v1 = v0[20];
  v2 = v0[18];
  v3 = v0[7];
  swift_bridgeObjectRetain(v3);
  v4 = sub_1006455CC(v1, v3);
  v0[21] = v4;
  v0[22] = v2;
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v1);
  v5 = v0[5];
  v6 = v0[6];
  sub_10003F198(v0 + 2, v5);
  v7 = *(int **)(v6 + 24);
  v10 = (int *)((char *)v7 + *v7);
  v8 = (_QWORD *)swift_task_alloc(v7[1]);
  v0[23] = v8;
  *v8 = v0;
  v8[1] = sub_100640FA8;
  return ((uint64_t (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v10)(v4, v0[8], v5, v6);
}

uint64_t sub_100640FA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 184);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  *(_QWORD *)(*(_QWORD *)v1 + 192) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_100641010, 0, 0);
}

void sub_100641010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD, char *, _QWORD, __n128);
  char *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  char *v50;
  uint64_t (*v51)(_QWORD, char *, _QWORD, __n128);
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 72);
  swift_retain(v3);
  v4 = sub_100645354(v1, v3);
  swift_release(v3);
  swift_bridgeObjectRelease(v1);
  v56 = v4;
  swift_bridgeObjectRetain(v4);
  sub_100643E3C(&v56, (uint64_t (*)(char *, char *))&static Date.< infix(_:_:));
  if (v2)
  {
    swift_release(v56);
    return;
  }
  v5 = swift_bridgeObjectRelease(v4);
  v6 = *((_QWORD *)v56 + 2);
  if (!v6)
  {
    swift_release(v56);
    v11 = (char *)_swiftEmptyDictionarySingleton;
LABEL_30:
    v46 = *(_QWORD *)(v0 + 128);
    v48 = *(_QWORD *)(v0 + 96);
    v47 = *(_QWORD *)(v0 + 104);
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
    swift_task_dealloc(v46);
    swift_task_dealloc(v47);
    v49 = swift_task_dealloc(v48);
    (*(void (**)(char *, __n128))(v0 + 8))(v11, v49);
    return;
  }
  v7 = *(_QWORD *)(v0 + 88);
  v50 = v56;
  v52 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v8 = &v56[v52];
  v9 = *(_QWORD *)(v7 + 72);
  v10 = *(uint64_t (**)(_QWORD, char *, _QWORD, __n128))(v7 + 16);
  v11 = (char *)_swiftEmptyDictionarySingleton;
  v51 = v10;
  for (i = v10(*(_QWORD *)(v0 + 104), &v56[v52], *(_QWORD *)(v0 + 80), v5);
        ;
        i = v51(*(_QWORD *)(v0 + 104), v8, *(_QWORD *)(v0 + 80), v17))
  {
    v18 = Event.assetID.getter(i);
    v21 = v19;
    v53 = v8;
    v54 = v6;
    v55 = v18;
    if (*((_QWORD *)v11 + 2))
    {
      v22 = v18;
      swift_bridgeObjectRetain(v19);
      v23 = sub_10004CE80(v22, v21);
      v24 = _swiftEmptyArrayStorage;
      if ((v25 & 1) != 0)
      {
        v24 = *(_QWORD **)(*((_QWORD *)v11 + 7) + 8 * v23);
        swift_bridgeObjectRetain(v24);
      }
      v20 = swift_bridgeObjectRelease(v21);
    }
    else
    {
      v24 = _swiftEmptyArrayStorage;
    }
    v10(*(_QWORD *)(v0 + 96), *(char **)(v0 + 104), *(_QWORD *)(v0 + 80), v20);
    if ((swift_isUniquelyReferenced_nonNull_native(v24) & 1) == 0)
      v24 = (_QWORD *)sub_1005B23D4(0, v24[2] + 1, 1, (unint64_t)v24);
    v27 = v24[2];
    v26 = v24[3];
    if (v27 >= v26 >> 1)
      v24 = (_QWORD *)sub_1005B23D4(v26 > 1, v27 + 1, 1, (unint64_t)v24);
    v28 = *(_QWORD *)(v0 + 96);
    v29 = *(_QWORD *)(v0 + 80);
    v24[2] = v27 + 1;
    v30 = v9;
    v31 = (char *)v24 + v52 + v27 * v9;
    v32 = v7;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v31, v28, v29);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    v56 = v11;
    v35 = sub_10004CE80(v55, v21);
    v36 = *((_QWORD *)v11 + 2);
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
      break;
    v39 = v34;
    if (*((_QWORD *)v11 + 3) >= v38)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v34 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_1002C2FE0();
        v11 = v56;
        if ((v39 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_10037F350(v38, isUniquelyReferenced_nonNull_native);
      v11 = v56;
      v40 = sub_10004CE80(v55, v21);
      if ((v39 & 1) != (v41 & 1))
      {
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
        return;
      }
      v35 = v40;
      if ((v39 & 1) != 0)
      {
LABEL_5:
        v13 = *((_QWORD *)v11 + 7);
        swift_bridgeObjectRelease(*(_QWORD *)(v13 + 8 * v35));
        *(_QWORD *)(v13 + 8 * v35) = v24;
        goto LABEL_6;
      }
    }
    *(_QWORD *)&v11[8 * (v35 >> 6) + 64] |= 1 << v35;
    v42 = (uint64_t *)(*((_QWORD *)v11 + 6) + 16 * v35);
    *v42 = v55;
    v42[1] = v21;
    *(_QWORD *)(*((_QWORD *)v11 + 7) + 8 * v35) = v24;
    v43 = *((_QWORD *)v11 + 2);
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
      goto LABEL_33;
    *((_QWORD *)v11 + 2) = v45;
    swift_bridgeObjectRetain(v21);
LABEL_6:
    v14 = *(_QWORD *)(v0 + 104);
    v15 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRelease(0x8000000000000000);
    v16 = swift_bridgeObjectRelease(v21);
    v7 = v32;
    (*(void (**)(uint64_t, uint64_t, __n128))(v32 + 8))(v14, v15, v16);
    v9 = v30;
    v8 = &v53[v30];
    v6 = v54 - 1;
    v10 = v51;
    if (v54 == 1)
    {
      swift_release(v50);
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
}

uint64_t sub_1006413DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 128));
  swift_task_dealloc(v2);
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100641424(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[7] = a1;
  v2[8] = v1;
  v3 = type metadata accessor for TaskPriority(0);
  v2[9] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[10] = v4;
  v2[11] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100641484, 0, 0);
}

uint64_t sub_100641484(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  static TaskPriority.userInitiated.getter(a1);
  v4 = (char *)&dword_1009DACB8 + dword_1009DACB8;
  v2 = (_QWORD *)swift_task_alloc(unk_1009DACBC);
  *(_QWORD *)(v1 + 96) = v2;
  *v2 = v1;
  v2[1] = sub_100641500;
  return ((uint64_t (*)(uint64_t, _QWORD))v4)(v1 + 16, *(_QWORD *)(v1 + 88));
}

uint64_t sub_100641500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t (*v7)();

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  v6 = swift_task_dealloc(v2);
  (*(void (**)(uint64_t, uint64_t, __n128))(v5 + 8))(v3, v4, v6);
  if (v0)
    v7 = sub_1005156CC;
  else
    v7 = sub_100641580;
  return swift_task_switch(v7, 0, 0);
}

uint64_t sub_100641580()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = v0[5];
  v2 = v0[6];
  sub_10003F198(v0 + 2, v1);
  v3 = *(int **)(v2 + 8);
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[14] = v4;
  *v4 = v0;
  v4[1] = sub_1006415F8;
  return v6(v1, v2);
}

uint64_t sub_1006415F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  *(_QWORD *)(*(_QWORD *)v1 + 120) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100641654, 0, 0);
}

void sub_100641654()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  _QWORD *v25;
  int *v26;

  v1 = v0[15];
  if ((unint64_t)v1 >> 62)
  {
    if (v1 < 0)
      v19 = v0[15];
    else
      v19 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2)
  {
    if (v2 < 1)
    {
      __break(1u);
      goto LABEL_32;
    }
    v3 = 0;
    v4 = v0[15] + 32;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v3, v0[15]);
      }
      else
      {
        v7 = *(void **)(v4 + 8 * v3);
        swift_unknownObjectRetain(v7);
      }
      v8 = objc_msgSend(v7, "shouldBeSynced");
      if ((_DWORD)v8)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v5 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v5);
        v6 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v7);
        specialized ContiguousArray._endMutation()(v6);
      }
      else
      {
        swift_unknownObjectRelease(v7);
      }
      ++v3;
    }
    while (v2 != v3);
  }
  swift_bridgeObjectRelease(v0[15]);
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) == 0
    && ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0)
  {
    v9 = _swiftEmptyArrayStorage[2];
    if (v9)
      goto LABEL_16;
LABEL_30:
    swift_release(_swiftEmptyArrayStorage);
    v21 = sub_10003455C((uint64_t)_swiftEmptyArrayStorage);
    v0[16] = v21;
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v22 = v0[5];
    v23 = v0[6];
    sub_10003F198(v0 + 2, v22);
    v24 = *(int **)(v23 + 32);
    v26 = (int *)((char *)v24 + *v24);
    v25 = (_QWORD *)swift_task_alloc(v24[1]);
    v0[17] = v25;
    *v25 = v0;
    v25[1] = sub_100641950;
    ((void (*)(_QWORD, uint64_t, _QWORD, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, uint64_t@<X8>), _QWORD, uint64_t, uint64_t))v26)(v0[7], v21, 0, sub_100645A40, v0[8], v22, v23);
    return;
  }
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  v9 = _CocoaArrayWrapper.endIndex.getter(v20);
  swift_release(_swiftEmptyArrayStorage);
  if (!v9)
    goto LABEL_30;
LABEL_16:
  sub_100045E44(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    v10 = 0;
    do
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        v11 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v10, _swiftEmptyArrayStorage);
      }
      else
      {
        v11 = (void *)_swiftEmptyArrayStorage[v10 + 4];
        swift_unknownObjectRetain(v11);
      }
      v12 = objc_msgSend(v11, "eventName");
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
      v15 = v14;

      swift_unknownObjectRelease(v11);
      v17 = _swiftEmptyArrayStorage[2];
      v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1)
        sub_100045E44(v16 > 1, v17 + 1, 1);
      ++v10;
      _swiftEmptyArrayStorage[2] = v17 + 1;
      v18 = &_swiftEmptyArrayStorage[2 * v17];
      v18[4] = v13;
      v18[5] = v15;
    }
    while (v9 != v10);
    goto LABEL_30;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_100641950()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 128);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 136));
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_1006419AC, 0, 0);
}

uint64_t sub_1006419AC()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;

  v1 = *(_QWORD *)(v0 + 88);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  v2 = swift_task_dealloc(v1);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v2);
}

uint64_t sub_1006419EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  double v33;
  id v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  BOOL v41;
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  char *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  _BYTE v54[32];
  char v55[32];
  uint64_t v56;
  char v57;

  v50 = a3;
  v52 = a4;
  v51 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - v10;
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - v13;
  v15 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v47 - v19;
  __chkstk_darwin(v21);
  v23 = (char *)&v47 - v22;
  __chkstk_darwin(v24);
  v26 = (char *)&v47 - v25;
  sub_1001FE7C4(a2, (uint64_t)&v47 - v25);
  sub_100316B8C(a1, (uint64_t)v55);
  if (v57 != 2)
    goto LABEL_12;
  v27 = v56;
  if (!*(_QWORD *)(v56 + 16))
    goto LABEL_12;
  v28 = sub_10004CE80(0x6D617473656D6974, 0xE900000000000070);
  if ((v29 & 1) == 0)
    goto LABEL_12;
  sub_10004CD0C(*(_QWORD *)(v27 + 56) + 32 * v28, (uint64_t)v54);
  v30 = sub_10004CFD4(&qword_1009DA340);
  if ((swift_dynamicCast(v53, v54, v30, &type metadata for String, 6) & 1) == 0)
    goto LABEL_12;
  v48 = v14;
  v49 = (id)v53[0];
  v31 = v53[1];
  v50 = sub_10063FAF4();
  v32 = String._bridgeToObjectiveC()();
  v49 = v32;
  *(_QWORD *)&v33 = swift_bridgeObjectRelease(v31).n128_u64[0];
  v34 = objc_msgSend(v50, "dateFromString:", v32, v33);

  if (!v34)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v23, 1, 1, v51);
    goto LABEL_11;
  }
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v34);

  v35 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v36 = v11;
  v37 = v51;
  v35(v23, v36, v51);
  v49 = *(id *)(v6 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v49)(v23, 0, 1, v37);
  v50 = *(id *)(v6 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v50)(v23, 1, v37) == 1)
  {
LABEL_11:
    sub_100010960((uint64_t)v26, &qword_1009D7440);
    v26 = v23;
LABEL_12:
    sub_100010960((uint64_t)v26, &qword_1009D7440);
    return sub_1001FE7C4(a2, v52);
  }
  v38 = v48;
  v35(v48, v23, v37);
  sub_1001FE7C4((uint64_t)v26, (uint64_t)v20);
  v39 = (uint64_t (*)(char *, uint64_t, uint64_t))v50;
  v40 = ((uint64_t (*)(char *, uint64_t, uint64_t))v50)(v20, 1, v37);
  sub_100010960((uint64_t)v20, &qword_1009D7440);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v38, v37);
  v41 = v40 == 1;
  v42 = v37;
  v43 = v35;
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v37);
    goto LABEL_17;
  }
  sub_1001FE7C4((uint64_t)v26, (uint64_t)v17);
  result = v39(v17, 1, v37);
  if ((_DWORD)result != 1)
  {
    v45 = Date.compare(_:)(v17);
    v46 = *(void (**)(char *, uint64_t))(v6 + 8);
    v46(v17, v42);
    v46(v8, v42);
    if (v45 != -1)
    {
      v46(v38, v42);
      return sub_100025B3C((uint64_t)v26, v52, &qword_1009D7440);
    }
LABEL_17:
    sub_100010960((uint64_t)v26, &qword_1009D7440);
    v43(v26, v38, v42);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v49)(v26, 0, 1, v42);
    return sub_100025B3C((uint64_t)v26, v52, &qword_1009D7440);
  }
  __break(1u);
  return result;
}

uint64_t sub_100641E14()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[7] = v0;
  v2 = type metadata accessor for TaskPriority(0);
  v1[8] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[9] = v3;
  v1[10] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100641E74, 0, 0);
}

uint64_t sub_100641E74(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  char *v4;

  static TaskPriority.userInitiated.getter(a1);
  v4 = (char *)&dword_1009DACB8 + dword_1009DACB8;
  v2 = (_QWORD *)swift_task_alloc(unk_1009DACBC);
  *(_QWORD *)(v1 + 88) = v2;
  *v2 = v1;
  v2[1] = sub_100641EF0;
  return ((uint64_t (*)(uint64_t, _QWORD))v4)(v1 + 16, *(_QWORD *)(v1 + 80));
}

uint64_t sub_100641EF0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  __n128 v4;
  uint64_t (*v5)();

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  v4 = swift_task_dealloc(v3);
  (*(void (**)(_QWORD, _QWORD, __n128))(v2[9] + 8))(v2[10], v2[8], v4);
  if (v0)
    v5 = sub_1006421F4;
  else
    v5 = sub_100641F64;
  return swift_task_switch(v5, 0, 0);
}

uint64_t sub_100641F64()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v1 = v0[5];
  v2 = v0[6];
  sub_10003F198(v0 + 2, v1);
  v3 = *(int **)(v2 + 8);
  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[13] = v4;
  *v4 = v0;
  v4[1] = sub_100641FDC;
  return v6(v1, v2);
}

uint64_t sub_100641FDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100642038, 0, 0);
}

uint64_t sub_100642038()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  _QWORD *v4;
  int *v6;

  v1 = v0[5];
  v2 = v0[6];
  sub_10003F198(v0 + 2, v1);
  v3 = *(int **)(v2 + 24);
  v6 = (int *)((char *)v3 + *v3);
  v4 = (_QWORD *)swift_task_alloc(v3[1]);
  v0[15] = v4;
  *v4 = v0;
  v4[1] = sub_1006420BC;
  return ((uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))v6)(v0[14], 0, v1, v2);
}

uint64_t sub_1006420BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_100642120, 0, 0);
}

void sub_100642120()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  __n128 v7;
  char *v8;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 56);
  swift_retain(v3);
  v4 = sub_100645354(v1, v3);
  swift_release(v3);
  swift_bridgeObjectRelease(v1);
  v8 = v4;
  swift_bridgeObjectRetain(v4);
  sub_100643E3C(&v8, (uint64_t (*)(char *, char *))&static Date.> infix(_:_:));
  if (v2)
  {
    swift_release(v8);
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 80);
    swift_bridgeObjectRelease(v4);
    v6 = v8;
    _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
    v7 = swift_task_dealloc(v5);
    (*(void (**)(char *, __n128))(v0 + 8))(v6, v7);
  }
}

uint64_t sub_1006421F4()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100642228@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v50;
  __n128 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  void *v62;
  id v63;
  NSString v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  BOOL v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  int v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  uint8_t *v87;
  uint64_t v88;
  __n128 v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  char v97;
  unint64_t v98;
  char v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  __n128 v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  char v111;
  unint64_t v112;
  char v113;
  void (*v114)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  char v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int *v121;
  char *v122;
  uint64_t v123;
  unsigned int *v124;
  uint64_t v125;
  int *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  __n128 v139;
  __n128 v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  unsigned int *v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  int *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  __n128 v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  NSObject *v185;
  os_log_type_t v186;
  uint8_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  unint64_t v192;
  __n128 v193;
  void (*v194)(char *, uint64_t, __n128);
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  void (*v199)(char *, char *, uint64_t);
  uint64_t v200;
  void (*v201)(char *, char *, uint64_t);
  uint64_t v202;
  uint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  char *v209;
  void (*v210)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  __int128 v218;
  __int128 v219;
  char v220[32];
  uint64_t v221;
  char v222;

  v6 = sub_10004CFD4(&qword_1009F2500);
  __chkstk_darwin(v6);
  v206 = (char *)&v198 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v207 = (uint64_t)&v198 - v9;
  v10 = sub_10004CFD4(&qword_1009F24F8);
  __chkstk_darwin(v10);
  v12 = (char *)&v198 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v13);
  v15 = (char *)&v198 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for Date(0);
  v211 = *(_QWORD *)(v16 - 8);
  v212 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v198 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v209 = (char *)&v198 - v20;
  v21 = sub_10004CFD4(&qword_1009F24D0);
  __chkstk_darwin(v21);
  v23 = (char *)&v198 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = type metadata accessor for EventType(0);
  v24 = *(_QWORD *)(v215 - 8);
  __chkstk_darwin(v215);
  v26 = (char *)&v198 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  v29 = (char *)&v198 - v28;
  __chkstk_darwin(v30);
  v208 = (char *)&v198 - v31;
  __chkstk_darwin(v32);
  v214 = (char *)&v198 - v33;
  sub_100316B8C(a1, (uint64_t)v220);
  if (v222 == 2)
  {
    v204 = (uint64_t *)v12;
    v213 = a3;
    v205 = v221;
    v34 = objc_msgSend(a2, "eventName");
    v35 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v37 = v36;

    if (qword_1009CEAE0 != -1)
      swift_once(&qword_1009CEAE0, sub_10063F5F8);
    v38 = off_1009F23C0;
    if (*((_QWORD *)off_1009F23C0 + 2))
    {
      swift_bridgeObjectRetain(v37);
      v39 = sub_10004CE80(v35, v37);
      if ((v40 & 1) != 0)
      {
        v41 = v38[7] + *(_QWORD *)(v24 + 72) * v39;
        v42 = v215;
        (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v23, v41, v215);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v23, 0, 1, v42);
      }
      else
      {
        v42 = v215;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v23, 1, 1, v215);
      }
      swift_bridgeObjectRelease(v37);
    }
    else
    {
      v42 = v215;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v23, 1, 1, v215);
    }
    v50 = v213;
    v51 = swift_bridgeObjectRelease(v37);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v24 + 48))(v23, 1, v42, v51) == 1)
    {
      sub_100010960((uint64_t)v23, &qword_1009F24D0);
LABEL_29:
      if (qword_1009CEAD8 != -1)
        swift_once(&qword_1009CEAD8, sub_10063F578);
      v83 = type metadata accessor for Logger(0);
      v84 = sub_100048F64(v83, (uint64_t)qword_100A1F070);
      v85 = Logger.logObject.getter(v84);
      v86 = static os_log_type_t.error.getter(v85);
      if (os_log_type_enabled(v85, v86))
      {
        v87 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v87 = 0;
        _os_log_impl((void *)&_mh_execute_header, v85, v86, "Cannot extract required information from event state", v87, 2u);
        swift_slowDealloc(v87, -1, -1);
      }

      v88 = type metadata accessor for Event(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v50, 1, 1, v88);
    }
    v52 = v214;
    v53 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v214, v23, v42);
    v54 = PropertyValue.assetID.getter(v53);
    if (v55)
    {
      v56 = v55;
      v57 = v205;
      if (!*(_QWORD *)(v205 + 16)
        || (v58 = v54, v59 = sub_10004CE80(0x6D617473656D6974, 0xE900000000000070), (v60 & 1) == 0)
        || (sub_10004CD0C(*(_QWORD *)(v57 + 56) + 32 * v59, (uint64_t)&v218),
            v61 = sub_10004CFD4(&qword_1009DA340),
            (swift_dynamicCast(&v216, &v218, v61, &type metadata for String, 6) & 1) == 0))
      {
        v82 = swift_bridgeObjectRelease(v56);
        v50 = v213;
        (*(void (**)(char *, uint64_t, __n128))(v24 + 8))(v214, v215, v82);
        goto LABEL_29;
      }
      v202 = v58;
      v203 = v56;
      v62 = v217;
      v63 = sub_10063FAF4();
      v64 = String._bridgeToObjectiveC()();
      v65 = objc_msgSend(v63, "dateFromString:", v64, swift_bridgeObjectRelease(v62).n128_f64[0]);

      if (v65)
      {
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v65);

        v66 = v211;
        v67 = v212;
        v68 = *(void (**)(char *, char *, uint64_t))(v211 + 32);
        v68(v15, v18, v212);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v15, 0, 1, v67);
        v69 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v15, 1, v67) == 1;
        v70 = v203;
        if (!v69)
        {
          v200 = v61;
          v71 = v209;
          v68(v209, v15, v67);
          v72 = type metadata accessor for Event(0);
          v201 = v68;
          v73 = *(_QWORD *)(v72 - 8);
          v74 = v204;
          v210 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v73 + 56);
          v210(v204, 1, 1, v72);
          v75 = v208;
          v77 = v214;
          v76 = v215;
          v199 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
          v199(v208, v214, v215);
          v78 = (*(uint64_t (**)(char *, uint64_t))(v24 + 88))(v75, v76);
          if (v78 == enum case for EventType.addToWantToRead(_:))
          {
            sub_100010960((uint64_t)v74, &qword_1009F24F8);
            (*(void (**)(char *, uint64_t))(v24 + 8))(v77, v76);
            v79 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
            v80 = v203;
            *v74 = v202;
            v74[1] = v80;
            v201(v79, v71, v212);
            (*(void (**)(uint64_t *, _QWORD, uint64_t))(v73 + 104))(v74, enum case for Event.addToWantToRead(_:), v72);
LABEL_25:
            v210(v74, 0, 1, v72);
            v81 = v213;
            return sub_100025B3C((uint64_t)v74, v81, &qword_1009F24F8);
          }
          v90 = v71;
          v91 = v212;
          v92 = v73;
          if (v78 == enum case for EventType.audiobookWasPlayed(_:))
          {
            v93 = v205;
            v74 = v204;
            if (*(_QWORD *)(v205 + 16))
            {
              v94 = sub_10004CE80(0x656C706D61537369, 0xE800000000000000);
              v81 = v213;
              if ((v95 & 1) != 0)
              {
                sub_10004CD0C(*(_QWORD *)(v93 + 56) + 32 * v94, (uint64_t)&v218);
                v96 = swift_dynamicCast(&v216, &v218, v200, &type metadata for Bool, 6);
                v90 = v209;
                if ((v96 & 1) != 0)
                {
                  v97 = v216;
                  if (*(_QWORD *)(v93 + 16)
                    && (v98 = sub_10004CE80(0x73736572676F7270, 0xE800000000000000), (v99 & 1) != 0))
                  {
                    sub_10004CD0C(*(_QWORD *)(v93 + 56) + 32 * v98, (uint64_t)&v218);
                  }
                  else
                  {
                    v218 = 0u;
                    v219 = 0u;
                  }
                  (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                  if (*((_QWORD *)&v219 + 1))
                  {
                    if ((swift_dynamicCast(&v216, &v218, v200, &type metadata for Double, 6) & 1) != 0)
                    {
                      v125 = v216;
                      sub_100010960((uint64_t)v74, &qword_1009F24F8);
                      v126 = (int *)sub_10004CFD4(&qword_1009F2520);
                      v127 = (char *)v74 + v126[12];
                      v128 = v126[16];
                      v129 = v126[20];
                      v130 = v203;
                      *v74 = v202;
                      v74[1] = v130;
                      v201(v127, v209, v91);
                      *((_BYTE *)v74 + v128) = v97;
                      *(uint64_t *)((char *)v74 + v129) = v125;
                      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v92 + 104))(v74, enum case for Event.audiobookWasPlayed(_:), v72);
                      v210(v74, 0, 1, v72);
                      return sub_100025B3C((uint64_t)v74, v81, &qword_1009F24F8);
                    }
                    v139 = swift_bridgeObjectRelease(v203);
                  }
                  else
                  {
                    swift_bridgeObjectRelease(v203);
                    sub_100010960((uint64_t)&v218, (uint64_t *)&unk_1009E6400);
                  }
                  (*(void (**)(char *, uint64_t, __n128))(v211 + 8))(v209, v91, v139);
                  return sub_100025B3C((uint64_t)v74, v81, &qword_1009F24F8);
                }
                v107 = swift_bridgeObjectRelease(v203);
              }
              else
              {
                v107 = swift_bridgeObjectRelease(v203);
                v90 = v209;
              }
            }
            else
            {
              v107 = swift_bridgeObjectRelease(v203);
              v81 = v213;
            }
            (*(void (**)(char *, uint64_t, __n128))(v211 + 8))(v90, v91, v107);
            goto LABEL_63;
          }
          if (v78 == enum case for EventType.bookImpression(_:))
          {
            v100 = v205;
            if (*(_QWORD *)(v205 + 16))
            {
              v101 = sub_10004CE80(0x6D6D6F6365526577, 0xED00006465646E65);
              v81 = v213;
              v74 = v204;
              v102 = v72;
              if ((v103 & 1) != 0)
              {
                sub_10004CD0C(*(_QWORD *)(v100 + 56) + 32 * v101, (uint64_t)&v218);
              }
              else
              {
                v218 = 0u;
                v219 = 0u;
              }
            }
            else
            {
              v218 = 0u;
              v219 = 0u;
              v81 = v213;
              v74 = v204;
              v102 = v72;
            }
            v114 = v210;
            v115 = v215;
            sub_100010960((uint64_t)v74, &qword_1009F24F8);
            (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v115);
            if (*((_QWORD *)&v219 + 1))
            {
              if (swift_dynamicCast(&v216, &v218, v200, &type metadata for Bool, 6))
              {
                v116 = v216;
LABEL_70:
                v117 = sub_10004CFD4(&qword_1009F2528);
                v118 = (char *)v74 + *(int *)(v117 + 48);
                v119 = *(int *)(v117 + 64);
                v120 = v203;
                *v74 = v202;
                v74[1] = v120;
                v201(v118, v209, v91);
                *((_BYTE *)v74 + v119) = v116;
                v121 = (unsigned int *)&enum case for Event.bookImpression(_:);
LABEL_85:
                (*(void (**)(uint64_t *, _QWORD, uint64_t))(v92 + 104))(v74, *v121, v102);
                v114(v74, 0, 1, v102);
                return sub_100025B3C((uint64_t)v74, v81, &qword_1009F24F8);
              }
            }
            else
            {
              sub_100010960((uint64_t)&v218, (uint64_t *)&unk_1009E6400);
            }
            v116 = 0;
            goto LABEL_70;
          }
          if (v78 == enum case for EventType.bookProductPageImpression(_:))
          {
            v104 = v205;
            if (*(_QWORD *)(v205 + 16))
            {
              v105 = sub_10004CE80(0x6D6D6F6365526577, 0xED00006465646E65);
              v81 = v213;
              v74 = v204;
              v102 = v72;
              if ((v106 & 1) != 0)
              {
                sub_10004CD0C(*(_QWORD *)(v104 + 56) + 32 * v105, (uint64_t)&v218);
              }
              else
              {
                v218 = 0u;
                v219 = 0u;
              }
            }
            else
            {
              v218 = 0u;
              v219 = 0u;
              v81 = v213;
              v74 = v204;
              v102 = v72;
            }
            v114 = v210;
            v131 = v215;
            sub_100010960((uint64_t)v74, &qword_1009F24F8);
            (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v131);
            if (*((_QWORD *)&v219 + 1))
            {
              if (swift_dynamicCast(&v216, &v218, v200, &type metadata for Bool, 6))
              {
                v132 = v216;
LABEL_84:
                v133 = sub_10004CFD4(&qword_1009F2528);
                v134 = (char *)v74 + *(int *)(v133 + 48);
                v135 = *(int *)(v133 + 64);
                v136 = v203;
                *v74 = v202;
                v74[1] = v136;
                v201(v134, v209, v91);
                *((_BYTE *)v74 + v135) = v132;
                v121 = (unsigned int *)&enum case for Event.bookProductPageImpression(_:);
                goto LABEL_85;
              }
            }
            else
            {
              sub_100010960((uint64_t)&v218, (uint64_t *)&unk_1009E6400);
            }
            v132 = 0;
            goto LABEL_84;
          }
          if (v78 == enum case for EventType.bookWasRead(_:))
          {
            v108 = v205;
            if (*(_QWORD *)(v205 + 16))
            {
              v109 = sub_10004CE80(0x656C706D61537369, 0xE800000000000000);
              if ((v110 & 1) != 0)
              {
                sub_10004CD0C(*(_QWORD *)(v108 + 56) + 32 * v109, (uint64_t)&v218);
                if ((swift_dynamicCast(&v216, &v218, v200, &type metadata for Bool, 6) & 1) != 0)
                {
                  v111 = v216;
                  if (*(_QWORD *)(v205 + 16)
                    && (v112 = sub_10004CE80(0x73736572676F7270, 0xE800000000000000), (v113 & 1) != 0))
                  {
                    sub_10004CD0C(*(_QWORD *)(v205 + 56) + 32 * v112, (uint64_t)&v218);
                  }
                  else
                  {
                    v218 = 0u;
                    v219 = 0u;
                  }
                  (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                  if (*((_QWORD *)&v219 + 1))
                  {
                    if ((swift_dynamicCast(&v216, &v218, v200, &type metadata for Double, 6) & 1) != 0)
                    {
                      v151 = v216;
                      v74 = v204;
                      sub_100010960((uint64_t)v204, &qword_1009F24F8);
                      v152 = (int *)sub_10004CFD4(&qword_1009F2520);
                      v153 = (char *)v74 + v152[12];
                      v154 = v152[16];
                      v155 = v152[20];
                      v156 = v203;
                      *v74 = v202;
                      v74[1] = v156;
                      v201(v153, v209, v212);
                      *((_BYTE *)v74 + v154) = v111;
                      *(uint64_t *)((char *)v74 + v155) = v151;
                      v145 = (unsigned int *)&enum case for Event.bookWasRead(_:);
                      goto LABEL_112;
                    }
                    goto LABEL_124;
                  }
                  goto LABEL_123;
                }
                v140 = swift_bridgeObjectRelease(v203);
                v141 = v212;
                v81 = v213;
                v74 = v204;
                v142 = v209;
              }
              else
              {
                v140 = swift_bridgeObjectRelease(v203);
                v81 = v213;
                v74 = v204;
                v142 = v209;
                v141 = v91;
              }
            }
            else
            {
              v140 = swift_bridgeObjectRelease(v203);
              v81 = v213;
              v74 = v204;
              v141 = v91;
              v142 = v71;
            }
            (*(void (**)(char *, uint64_t, __n128))(v211 + 8))(v142, v141, v140);
LABEL_63:
            (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
            return sub_100025B3C((uint64_t)v74, v81, &qword_1009F24F8);
          }
          if (v78 == enum case for EventType.downloadSample(_:))
          {
            v74 = v204;
            sub_100010960((uint64_t)v204, &qword_1009F24F8);
            (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
            v122 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
            v123 = v203;
            *v74 = v202;
            v74[1] = v123;
            v201(v122, v71, v91);
            v124 = (unsigned int *)&enum case for Event.downloadSample(_:);
          }
          else
          {
            if (v78 != enum case for EventType.explicitDecline(_:))
            {
              if (v78 == enum case for EventType.hideBook(_:))
              {
                v74 = v204;
                sub_100010960((uint64_t)v204, &qword_1009F24F8);
                (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                v143 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
                v144 = v203;
                *v74 = v202;
                v74[1] = v144;
                v201(v143, v209, v212);
                v145 = (unsigned int *)&enum case for Event.hideBook(_:);
LABEL_112:
                (*(void (**)(uint64_t *, _QWORD, uint64_t))(v92 + 104))(v74, *v145, v72);
                goto LABEL_25;
              }
              if (v78 == enum case for EventType.markAsFinished(_:))
              {
                v146 = type metadata accessor for Event.FinishedMechanism(0);
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 56))(v207, 1, 1, v146);
                if (*(_QWORD *)(v205 + 16)
                  && (v147 = sub_10004CE80(0x73696E616863656DLL, 0xE90000000000006DLL), (v148 & 1) != 0)
                  && (sub_10004CD0C(*(_QWORD *)(v205 + 56) + 32 * v147, (uint64_t)&v218),
                      (swift_dynamicCast(&v216, &v218, v200, &type metadata for String, 6) & 1) != 0))
                {
                  v149 = v206;
                  sub_10063F3B8(v216, v217, v206);
                  v150 = v207;
                  sub_100010960(v207, &qword_1009F2500);
                  sub_100010960((uint64_t)v204, &qword_1009F24F8);
                  (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                  sub_100025B3C((uint64_t)v149, v150, &qword_1009F2500);
                }
                else
                {
                  sub_100010960((uint64_t)v204, &qword_1009F24F8);
                  (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                }
                v159 = sub_10004CFD4(&qword_1009F2518);
                v74 = v204;
                v160 = (char *)v204 + *(int *)(v159 + 48);
                v161 = (uint64_t)v204 + *(int *)(v159 + 64);
                v162 = v203;
                *v204 = v202;
                v74[1] = v162;
                v201(v160, v209, v212);
                sub_100025B3C(v207, v161, &qword_1009F2500);
                v145 = (unsigned int *)&enum case for Event.markAsFinished(_:);
                goto LABEL_112;
              }
              if (v78 == enum case for EventType.markAsStillReading(_:))
              {
                v74 = v204;
                sub_100010960((uint64_t)v204, &qword_1009F24F8);
                (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                v157 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
                v158 = v203;
                *v74 = v202;
                v74[1] = v158;
                v201(v157, v209, v212);
                v145 = (unsigned int *)&enum case for Event.markAsStillReading(_:);
                goto LABEL_112;
              }
              if (v78 != enum case for EventType.rating(_:))
              {
                if (v78 == enum case for EventType.removeFromWantToRead(_:))
                {
                  v74 = v204;
                  sub_100010960((uint64_t)v204, &qword_1009F24F8);
                  (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                  v165 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
                  v166 = v203;
                  *v74 = v202;
                  v74[1] = v166;
                  v201(v165, v209, v212);
                  v145 = (unsigned int *)&enum case for Event.removeFromWantToRead(_:);
                  goto LABEL_112;
                }
                if (v78 == enum case for EventType.removeSample(_:))
                {
                  v74 = v204;
                  sub_100010960((uint64_t)v204, &qword_1009F24F8);
                  (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                  v173 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
                  v174 = v203;
                  *v74 = v202;
                  v74[1] = v174;
                  v201(v173, v209, v212);
                  v145 = (unsigned int *)&enum case for Event.removeSample(_:);
                  goto LABEL_112;
                }
                if (v78 == enum case for EventType.suggestLess(_:))
                {
                  v74 = v204;
                  sub_100010960((uint64_t)v204, &qword_1009F24F8);
                  (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                  v175 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
                  v176 = v203;
                  *v74 = v202;
                  v74[1] = v176;
                  v201(v175, v209, v212);
                  v145 = (unsigned int *)&enum case for Event.suggestLess(_:);
                  goto LABEL_112;
                }
                if (v78 == enum case for EventType.suggestMore(_:))
                {
                  v74 = v204;
                  sub_100010960((uint64_t)v204, &qword_1009F24F8);
                  (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                  v177 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
                  v178 = v203;
                  *v74 = v202;
                  v74[1] = v178;
                  v201(v177, v209, v212);
                  v145 = (unsigned int *)&enum case for Event.suggestMore(_:);
                  goto LABEL_112;
                }
                if (v78 == enum case for EventType.share(_:))
                {
                  v74 = v204;
                  sub_100010960((uint64_t)v204, &qword_1009F24F8);
                  (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                  v179 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
                  v180 = v203;
                  *v74 = v202;
                  v74[1] = v180;
                  v201(v179, v209, v212);
                  v145 = (unsigned int *)&enum case for Event.share(_:);
                  goto LABEL_112;
                }
                if (v78 == enum case for EventType.unrate(_:))
                {
                  v74 = v204;
                  sub_100010960((uint64_t)v204, &qword_1009F24F8);
                  (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
                  v181 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
                  v182 = v203;
                  *v74 = v202;
                  v74[1] = v182;
                  v201(v181, v209, v212);
                  v145 = (unsigned int *)&enum case for Event.unrate(_:);
                  goto LABEL_112;
                }
                swift_bridgeObjectRelease(v203);
                if (qword_1009CEAD8 != -1)
                  swift_once(&qword_1009CEAD8, sub_10063F578);
                v183 = type metadata accessor for Logger(0);
                sub_100048F64(v183, (uint64_t)qword_100A1F070);
                v184 = ((uint64_t (*)(char *, char *, uint64_t))v199)(v29, v214, v215);
                v185 = Logger.logObject.getter(v184);
                v186 = static os_log_type_t.error.getter(v185);
                if (os_log_type_enabled(v185, v186))
                {
                  v187 = (uint8_t *)swift_slowAlloc(12, -1);
                  v188 = swift_slowAlloc(32, -1);
                  *(_QWORD *)&v218 = v188;
                  *(_DWORD *)v187 = 136315138;
                  v189 = v215;
                  v199(v26, v29, v215);
                  v190 = String.init<A>(describing:)(v26, v189);
                  v192 = v191;
                  v216 = sub_100040F58(v190, v191, (uint64_t *)&v218);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v216, &v217, v187 + 4, v187 + 12);
                  v193 = swift_bridgeObjectRelease(v192);
                  v194 = *(void (**)(char *, uint64_t, __n128))(v24 + 8);
                  v194(v29, v189, v193);
                  _os_log_impl((void *)&_mh_execute_header, v185, v186, "Unexpected event type %s", v187, 0xCu);
                  swift_arrayDestroy(v188, 1, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v188, -1, -1);
                  swift_slowDealloc(v187, -1, -1);

                  (*(void (**)(char *, uint64_t))(v211 + 8))(v209, v212);
                  v195 = v214;
                  v196 = v189;
                }
                else
                {

                  v194 = *(void (**)(char *, uint64_t, __n128))(v24 + 8);
                  v197 = v215;
                  ((void (*)(char *, uint64_t))v194)(v29, v215);
                  (*(void (**)(char *, uint64_t))(v211 + 8))(v209, v212);
                  v195 = v214;
                  v196 = v197;
                }
                ((void (*)(char *, uint64_t))v194)(v195, v196);
                ((void (*)(char *, uint64_t))v194)(v208, v215);
LABEL_126:
                v81 = v213;
                v74 = v204;
                return sub_100025B3C((uint64_t)v74, v81, &qword_1009F24F8);
              }
              if (*(_QWORD *)(v205 + 16)
                && (v163 = sub_10004CE80(0x676E69746172, 0xE600000000000000), (v164 & 1) != 0))
              {
                sub_10004CD0C(*(_QWORD *)(v205 + 56) + 32 * v163, (uint64_t)&v218);
              }
              else
              {
                v218 = 0u;
                v219 = 0u;
              }
              (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
              if (*((_QWORD *)&v219 + 1))
              {
                if ((swift_dynamicCast(&v216, &v218, v200, &type metadata for Double, 6) & 1) != 0)
                {
                  v167 = v216;
                  v74 = v204;
                  sub_100010960((uint64_t)v204, &qword_1009F24F8);
                  v168 = sub_10004CFD4(&qword_1009F2510);
                  v169 = (char *)v74 + *(int *)(v168 + 48);
                  v170 = *(int *)(v168 + 64);
                  v171 = v203;
                  *v74 = v202;
                  v74[1] = v171;
                  v201(v169, v209, v212);
                  *(uint64_t *)((char *)v74 + v170) = v167;
                  v145 = (unsigned int *)&enum case for Event.rating(_:);
                  goto LABEL_112;
                }
LABEL_124:
                v172 = swift_bridgeObjectRelease(v203);
                goto LABEL_125;
              }
LABEL_123:
              swift_bridgeObjectRelease(v203);
              sub_100010960((uint64_t)&v218, (uint64_t *)&unk_1009E6400);
LABEL_125:
              (*(void (**)(char *, uint64_t, __n128))(v211 + 8))(v209, v212, v172);
              goto LABEL_126;
            }
            v74 = v204;
            sub_100010960((uint64_t)v204, &qword_1009F24F8);
            (*(void (**)(char *, uint64_t))(v24 + 8))(v214, v215);
            v137 = (char *)v74 + *(int *)(sub_10004CFD4(&qword_1009F2508) + 48);
            v138 = v203;
            *v74 = v202;
            v74[1] = v138;
            v201(v137, v71, v91);
            v124 = (unsigned int *)&enum case for Event.explicitDecline(_:);
          }
          (*(void (**)(uint64_t *, _QWORD, uint64_t))(v73 + 104))(v74, *v124, v72);
          goto LABEL_25;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v211 + 56))(v15, 1, 1, v212);
        v70 = v203;
      }
      v89 = swift_bridgeObjectRelease(v70);
      (*(void (**)(char *, uint64_t, __n128))(v24 + 8))(v214, v215, v89);
      sub_100010960((uint64_t)v15, &qword_1009D7440);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v52, v42);
    }
    v50 = v213;
    goto LABEL_29;
  }
  if (qword_1009CEAD8 != -1)
    swift_once(&qword_1009CEAD8, sub_10063F578);
  v43 = type metadata accessor for Logger(0);
  v44 = sub_100048F64(v43, (uint64_t)qword_100A1F070);
  v45 = Logger.logObject.getter(v44);
  v46 = static os_log_type_t.error.getter(v45);
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v47 = 0;
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "Can only use collection properties for personalization", v47, 2u);
    swift_slowDealloc(v47, -1, -1);
  }

  v48 = type metadata accessor for Event(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(a3, 1, 1, v48);
}

uint64_t sub_100643C10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_100643C3C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009F253C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100329468;
  return sub_10063FB5C(a1);
}

uint64_t sub_100643C8C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009F2534);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_100329468;
  return sub_100641E14();
}

uint64_t sub_100643CD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009F24F4);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_100329468;
  return sub_100640C84(a1, 0);
}

uint64_t sub_100643D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1009F24F4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100329468;
  return sub_100640C84(a2, a1);
}

uint64_t sub_100643D88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc(dword_1009F24C4);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100326424;
  return sub_10063FFE8(a1, a2);
}

uint64_t sub_100643DE8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc(dword_1009F24BC);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_10000AE34;
  return sub_100641424(a1);
}

void sub_100643E3C(_QWORD *a1, uint64_t (*a2)(char *, char *))
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD v7[2];

  v4 = *(_QWORD *)(type metadata accessor for Event(0) - 8);
  v5 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v5 = (_QWORD *)sub_10069965C(v5);
  v6 = v5[2];
  v7[0] = (char *)v5 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v7[1] = v6;
  sub_100643ECC(v7, a2);
  *a1 = v5;
}

void sub_100643ECC(_QWORD *a1, uint64_t (*a2)(char *, char *))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  Swift::Int v22;
  unint64_t v23;
  Swift::Int v24;
  Swift::Int v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  Swift::Int v42;
  Swift::Int v43;
  Swift::Int v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  Swift::Int v60;
  Swift::Int v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  Swift::Int v67;
  char *v68;
  uint64_t v69;
  Swift::Int v70;
  uint64_t v71;
  Swift::Int v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  uint64_t v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  char *v92;
  char *v93;
  void (*v94)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v96;
  unint64_t v97;
  char *v98;
  char *v99;
  Swift::Int v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  char v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  BOOL v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  unint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  Swift::Int v156;
  char *v157;
  uint64_t v158;
  Swift::Int v159;
  uint64_t v160;
  char *v161;
  char *v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  void (*v167)(char *, uint64_t);
  uint64_t (*v168)(char *, uint64_t, uint64_t);
  char *v169;
  char *v170;
  char *v171;
  uint64_t v172;
  char *v173;
  Swift::Int v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t (*v177)(char *, char *);
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;

  v177 = a2;
  v3 = v2;
  v172 = type metadata accessor for Date(0);
  v165 = *(_QWORD *)(v172 - 8);
  __chkstk_darwin(v172);
  v171 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v170 = (char *)&v154 - v7;
  v176 = type metadata accessor for Event(0);
  v181 = *(_QWORD *)(v176 - 8);
  __chkstk_darwin(v176);
  v161 = (char *)&v154 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v178 = (char *)&v154 - v10;
  __chkstk_darwin(v11);
  v169 = (char *)&v154 - v12;
  __chkstk_darwin(v13);
  v173 = (char *)&v154 - v14;
  v15 = a1[1];
  v16 = _minimumMergeRunLength(_:)(v15);
  if (v16 >= v15)
  {
    if (v15 < 0)
      goto LABEL_137;
    if (v15)
      sub_100644A64(0, v15, 1, a1, v177);
    return;
  }
  if (v15 >= 0)
    v17 = v15;
  else
    v17 = v15 + 1;
  if (v15 < -1)
    goto LABEL_145;
  v156 = v16;
  if (v15 < 2)
  {
    v21 = (char *)_swiftEmptyArrayStorage;
    v163 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
    v155 = _swiftEmptyArrayStorage;
    if (v15 != 1)
    {
      v23 = _swiftEmptyArrayStorage[2];
LABEL_103:
      if (v23 >= 2)
      {
        v147 = *a1;
        do
        {
          v148 = v23 - 2;
          if (v23 < 2)
            goto LABEL_132;
          if (!v147)
            goto LABEL_144;
          v149 = *(_QWORD *)&v21[16 * v148 + 32];
          v150 = *(_QWORD *)&v21[16 * v23 + 24];
          sub_100644D68(v147 + *(_QWORD *)(v181 + 72) * v149, v147 + *(_QWORD *)(v181 + 72) * *(_QWORD *)&v21[16 * v23 + 16], v147 + *(_QWORD *)(v181 + 72) * v150, v163, v177);
          if (v3)
            break;
          if (v150 < v149)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native(v21) & 1) == 0)
            v21 = sub_1006995F8((uint64_t)v21);
          if (v148 >= *((_QWORD *)v21 + 2))
            goto LABEL_134;
          v151 = &v21[16 * v148 + 32];
          *(_QWORD *)v151 = v149;
          *((_QWORD *)v151 + 1) = v150;
          v152 = *((_QWORD *)v21 + 2);
          if (v23 > v152)
            goto LABEL_135;
          memmove(&v21[16 * v23 + 16], &v21[16 * v23 + 32], 16 * (v152 - v23));
          *((_QWORD *)v21 + 2) = v152 - 1;
          v23 = v152 - 1;
        }
        while (v152 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease(v21);
      v153 = v155;
      v155[2] = 0;
      swift_bridgeObjectRelease(v153);
      return;
    }
  }
  else
  {
    v18 = v17 >> 1;
    v19 = static Array._allocateBufferUninitialized(minimumCapacity:)(v17 >> 1, v176);
    *(_QWORD *)(v19 + 16) = v18;
    v20 = *(unsigned __int8 *)(v181 + 80);
    v155 = (_QWORD *)v19;
    v163 = v19 + ((v20 + 32) & ~v20);
  }
  v22 = 0;
  v21 = (char *)_swiftEmptyArrayStorage;
  v175 = a1;
  while (1)
  {
    v24 = v22;
    v25 = v22 + 1;
    if (v22 + 1 >= v15)
    {
      v42 = v22 + 1;
      a1 = v175;
    }
    else
    {
      v157 = v21;
      v26 = *v175;
      v158 = v26;
      v27 = *(char **)(v181 + 72);
      v179 = v27;
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v181 + 16);
      v29 = v176;
      v28(v173, v26 + (_QWORD)v27 * v25, v176);
      v30 = v26 + (_QWORD)v27 * v24;
      v31 = v169;
      v168 = (uint64_t (*)(char *, uint64_t, uint64_t))v28;
      v32 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v169, v30, v29);
      v162 = (char *)v24;
      v33 = v170;
      v34 = Event.timestamp.getter(v32);
      v35 = v171;
      v36 = v31;
      Event.timestamp.getter(v34);
      LODWORD(v174) = v177(v33, v35);
      v37 = *(void (**)(char *, uint64_t))(v165 + 8);
      v38 = v172;
      v37(v35, v172);
      v39 = v33;
      v40 = v158;
      v24 = (Swift::Int)v162;
      v167 = v37;
      v37(v39, v38);
      v41 = *(void (**)(char *, uint64_t))(v181 + 8);
      v41(v36, v29);
      v166 = (char *)v41;
      v41(v173, v29);
      v42 = v24 + 2;
      if (v24 + 2 < v15)
      {
        v160 = v3;
        v164 = (_QWORD)v179 * v25;
        v159 = (_QWORD)v179 * v42;
        while (1)
        {
          v43 = v15;
          v44 = v42;
          v45 = v173;
          v46 = v176;
          v47 = v168;
          v168(v173, v40 + v159, v176);
          v48 = v169;
          v49 = v47(v169, v40 + v164, v46);
          v50 = v170;
          v51 = Event.timestamp.getter(v49);
          v52 = v171;
          Event.timestamp.getter(v51);
          LODWORD(v180) = v177(v50, v52);
          v53 = v52;
          v54 = v172;
          v55 = v167;
          v167(v53, v172);
          v55(v50, v54);
          v56 = (void (*)(char *, uint64_t))v166;
          ((void (*)(char *, uint64_t))v166)(v48, v46);
          v56(v45, v46);
          if (((v174 ^ v180) & 1) != 0)
            break;
          v42 = v44 + 1;
          v40 += (uint64_t)v179;
          v15 = v43;
          if (v43 == v44 + 1)
          {
            v42 = v43;
            v3 = v160;
            v24 = (Swift::Int)v162;
            goto LABEL_23;
          }
        }
        v3 = v160;
        v42 = v44;
        v24 = (Swift::Int)v162;
        v15 = v43;
      }
LABEL_23:
      a1 = v175;
      v21 = v157;
      if ((v174 & 1) != 0)
      {
        if (v42 < v24)
          goto LABEL_138;
        if (v24 < v42)
        {
          v174 = v15;
          v57 = 0;
          v58 = v179;
          v59 = (_QWORD)v179 * (v42 - 1);
          v60 = v42 * (_QWORD)v179;
          v61 = v24;
          v62 = v24 * (_QWORD)v179;
          do
          {
            if (v61 != v42 + v57 - 1)
            {
              if (!v158)
                goto LABEL_143;
              v160 = v3;
              v64 = v158 + v62;
              v65 = v158 + v59;
              v66 = v158;
              v180 = *(char **)(v181 + 32);
              ((void (*)(char *, uint64_t, uint64_t))v180)(v161, v158 + v62, v176);
              if (v62 < v59 || v64 >= v66 + v60)
              {
                v63 = v176;
                swift_arrayInitWithTakeFrontToBack(v64, v65, 1, v176);
              }
              else
              {
                v63 = v176;
                if (v62 != v59)
                  swift_arrayInitWithTakeBackToFront(v64, v65);
              }
              ((void (*)(uint64_t, char *, uint64_t))v180)(v65, v161, v63);
              a1 = v175;
              v3 = v160;
              v58 = v179;
            }
            ++v61;
            --v57;
            v59 -= (uint64_t)v58;
            v60 -= (uint64_t)v58;
            v62 += (uint64_t)v58;
          }
          while (v61 < v42 + v57);
          v21 = v157;
          v24 = (Swift::Int)v162;
          v15 = v174;
        }
      }
    }
    if (v42 < v15)
    {
      if (__OFSUB__(v42, v24))
        goto LABEL_136;
      if (v42 - v24 < v156)
        break;
    }
LABEL_55:
    if (v42 < v24)
      goto LABEL_131;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
    v174 = v42;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v21 = sub_1006990C0(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
    v97 = *((_QWORD *)v21 + 2);
    v96 = *((_QWORD *)v21 + 3);
    v23 = v97 + 1;
    if (v97 >= v96 >> 1)
      v21 = sub_1006990C0((char *)(v96 > 1), v97 + 1, 1, v21);
    *((_QWORD *)v21 + 2) = v23;
    v98 = v21 + 32;
    v99 = &v21[16 * v97 + 32];
    v100 = v174;
    *(_QWORD *)v99 = v24;
    *((_QWORD *)v99 + 1) = v100;
    if (v97)
    {
      while (1)
      {
        v101 = v23 - 1;
        if (v23 >= 4)
        {
          v106 = &v98[16 * v23];
          v107 = *((_QWORD *)v106 - 8);
          v108 = *((_QWORD *)v106 - 7);
          v112 = __OFSUB__(v108, v107);
          v109 = v108 - v107;
          if (v112)
            goto LABEL_120;
          v111 = *((_QWORD *)v106 - 6);
          v110 = *((_QWORD *)v106 - 5);
          v112 = __OFSUB__(v110, v111);
          v104 = v110 - v111;
          v105 = v112;
          if (v112)
            goto LABEL_121;
          v113 = v23 - 2;
          v114 = &v98[16 * v23 - 32];
          v116 = *(_QWORD *)v114;
          v115 = *((_QWORD *)v114 + 1);
          v112 = __OFSUB__(v115, v116);
          v117 = v115 - v116;
          if (v112)
            goto LABEL_123;
          v112 = __OFADD__(v104, v117);
          v118 = v104 + v117;
          if (v112)
            goto LABEL_126;
          if (v118 >= v109)
          {
            v136 = &v98[16 * v101];
            v138 = *(_QWORD *)v136;
            v137 = *((_QWORD *)v136 + 1);
            v112 = __OFSUB__(v137, v138);
            v139 = v137 - v138;
            if (v112)
              goto LABEL_130;
            v129 = v104 < v139;
            goto LABEL_92;
          }
        }
        else
        {
          if (v23 != 3)
          {
            v130 = *((_QWORD *)v21 + 4);
            v131 = *((_QWORD *)v21 + 5);
            v112 = __OFSUB__(v131, v130);
            v123 = v131 - v130;
            v124 = v112;
            goto LABEL_86;
          }
          v103 = *((_QWORD *)v21 + 4);
          v102 = *((_QWORD *)v21 + 5);
          v112 = __OFSUB__(v102, v103);
          v104 = v102 - v103;
          v105 = v112;
        }
        if ((v105 & 1) != 0)
          goto LABEL_122;
        v113 = v23 - 2;
        v119 = &v98[16 * v23 - 32];
        v121 = *(_QWORD *)v119;
        v120 = *((_QWORD *)v119 + 1);
        v122 = __OFSUB__(v120, v121);
        v123 = v120 - v121;
        v124 = v122;
        if (v122)
          goto LABEL_125;
        v125 = &v98[16 * v101];
        v127 = *(_QWORD *)v125;
        v126 = *((_QWORD *)v125 + 1);
        v112 = __OFSUB__(v126, v127);
        v128 = v126 - v127;
        if (v112)
          goto LABEL_128;
        if (__OFADD__(v123, v128))
          goto LABEL_129;
        if (v123 + v128 >= v104)
        {
          v129 = v104 < v128;
LABEL_92:
          if (v129)
            v101 = v113;
          goto LABEL_94;
        }
LABEL_86:
        if ((v124 & 1) != 0)
          goto LABEL_124;
        v132 = &v98[16 * v101];
        v134 = *(_QWORD *)v132;
        v133 = *((_QWORD *)v132 + 1);
        v112 = __OFSUB__(v133, v134);
        v135 = v133 - v134;
        if (v112)
          goto LABEL_127;
        if (v135 < v123)
          goto LABEL_14;
LABEL_94:
        v140 = v101 - 1;
        if (v101 - 1 >= v23)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        v141 = *a1;
        if (!*a1)
          goto LABEL_142;
        v142 = &v98[16 * v140];
        v143 = *(_QWORD *)v142;
        v144 = &v98[16 * v101];
        v145 = *((_QWORD *)v144 + 1);
        sub_100644D68(v141 + *(_QWORD *)(v181 + 72) * *(_QWORD *)v142, v141 + *(_QWORD *)(v181 + 72) * *(_QWORD *)v144, v141 + *(_QWORD *)(v181 + 72) * v145, v163, v177);
        if (v3)
          goto LABEL_114;
        if (v145 < v143)
          goto LABEL_117;
        if (v101 > *((_QWORD *)v21 + 2))
          goto LABEL_118;
        *(_QWORD *)v142 = v143;
        *(_QWORD *)&v98[16 * v140 + 8] = v145;
        v146 = *((_QWORD *)v21 + 2);
        if (v101 >= v146)
          goto LABEL_119;
        v23 = v146 - 1;
        memmove(&v98[16 * v101], v144 + 16, 16 * (v146 - 1 - v101));
        *((_QWORD *)v21 + 2) = v146 - 1;
        a1 = v175;
        if (v146 <= 2)
          goto LABEL_14;
      }
    }
    v23 = 1;
LABEL_14:
    v15 = a1[1];
    v22 = v174;
    if (v174 >= v15)
      goto LABEL_103;
  }
  if (__OFADD__(v24, v156))
    goto LABEL_139;
  if (v24 + v156 >= v15)
    v67 = v15;
  else
    v67 = v24 + v156;
  if (v67 >= v24)
  {
    if (v42 != v67)
    {
      v162 = (char *)v24;
      v157 = v21;
      v160 = v3;
      v68 = *(char **)(v181 + 72);
      v164 = *(_QWORD *)(v181 + 16);
      v69 = (_QWORD)v68 * (v42 - 1);
      v166 = v68;
      v70 = v42 * (_QWORD)v68;
      v71 = v176;
      v159 = v67;
      do
      {
        v73 = 0;
        v74 = v162;
        v174 = v42;
        v167 = (void (*)(char *, uint64_t))v70;
        v168 = (uint64_t (*)(char *, uint64_t, uint64_t))v69;
        while (1)
        {
          v180 = v74;
          v75 = *a1;
          v179 = (char *)(v70 + v73);
          v76 = (char *)(v70 + v73 + v75);
          v77 = v173;
          v78 = (uint64_t (*)(char *, uint64_t, uint64_t))v164;
          ((void (*)(char *, char *, uint64_t))v164)(v173, v76, v71);
          v79 = v69 + v73 + v75;
          v80 = v169;
          v81 = v78(v169, v79, v71);
          v82 = v170;
          v83 = Event.timestamp.getter(v81);
          v84 = a1;
          v85 = v171;
          Event.timestamp.getter(v83);
          LOBYTE(v78) = v177(v82, v85);
          v86 = *(void (**)(char *, uint64_t))(v165 + 8);
          v87 = v85;
          v88 = v172;
          v86(v87, v172);
          v89 = v82;
          v71 = v176;
          v86(v89, v88);
          v90 = *(void (**)(char *, uint64_t))(v181 + 8);
          v90(v80, v71);
          v90(v77, v71);
          if ((v78 & 1) == 0)
            break;
          v91 = *v84;
          if (!*v84)
            goto LABEL_141;
          v70 = (Swift::Int)v167;
          v69 = (uint64_t)v168;
          v92 = (char *)v167 + v91 + v73;
          v93 = (char *)v168 + v91 + v73;
          v94 = *(void (**)(char *, char *, uint64_t))(v181 + 32);
          v94(v178, v92, v71);
          swift_arrayInitWithTakeFrontToBack(v92, v93, 1, v71);
          v94(v93, v178, v71);
          v73 -= (uint64_t)v166;
          v74 = v180 + 1;
          v72 = v174;
          a1 = v175;
          if ((char *)v174 == v180 + 1)
            goto LABEL_48;
        }
        v72 = v174;
        a1 = v84;
        v70 = (Swift::Int)v167;
        v69 = (uint64_t)v168;
LABEL_48:
        v42 = v72 + 1;
        v69 += (uint64_t)v166;
        v70 += (Swift::Int)v166;
      }
      while (v42 != v159);
      v42 = v159;
      v3 = v160;
      v21 = v157;
      v24 = (Swift::Int)v162;
    }
    goto LABEL_55;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_100644A64(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(char *, char *);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;

  v56 = a5;
  v47 = a1;
  v8 = type metadata accessor for Date(0);
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  v9 = __chkstk_darwin(v8);
  v53 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = (char *)&v45 - v11;
  v12 = type metadata accessor for Event(0);
  v63 = *(_QWORD **)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v61 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v51 = (char *)&v45 - v16;
  result = __chkstk_darwin(v15);
  v50 = (char *)&v45 - v18;
  v60 = a3;
  v46 = a2;
  if (a3 != a2)
  {
    v19 = v63[9];
    v48 = (uint64_t (*)(char *, uint64_t, uint64_t))v63[2];
    v49 = v12;
    v20 = v19 * (v60 - 1);
    v57 = v19;
    v21 = v19 * v60;
LABEL_5:
    v22 = 0;
    v64 = v47;
    v58 = v21;
    v59 = v20;
    while (1)
    {
      v23 = *a4;
      v62 = v21 + v22;
      v24 = v21 + v22 + v23;
      v25 = v50;
      v26 = v48;
      v48(v50, v24, v12);
      v27 = v20 + v22 + v23;
      v28 = v51;
      v29 = v26(v51, v27, v12);
      v30 = v52;
      v31 = Event.timestamp.getter(v29);
      v32 = a4;
      v33 = v53;
      Event.timestamp.getter(v31);
      LOBYTE(v23) = v56(v30, v33);
      v34 = *(void (**)(char *, uint64_t))(v54 + 8);
      v35 = v33;
      v36 = v55;
      v34(v35, v55);
      v37 = v36;
      a4 = v32;
      v12 = v49;
      v34(v30, v37);
      v38 = (void (*)(char *, uint64_t))v63[1];
      v39 = v28;
      v20 = v59;
      v38(v39, v12);
      v40 = v25;
      v21 = v58;
      result = ((uint64_t (*)(char *, uint64_t))v38)(v40, v12);
      if ((v23 & 1) == 0)
      {
LABEL_4:
        v20 += v57;
        v21 += v57;
        if (++v60 == v46)
          return result;
        goto LABEL_5;
      }
      v41 = *a4;
      if (!*a4)
        break;
      v42 = v41 + v21 + v22;
      v43 = v41 + v20 + v22;
      v44 = (void (*)(char *, uint64_t, uint64_t))v63[4];
      v44(v61, v42, v12);
      swift_arrayInitWithTakeFrontToBack(v42, v43, 1, v12);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v44)(v43, v61, v12);
      v22 -= v57;
      if (v60 == ++v64)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100644D68(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(char *, char *))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  char *v26;
  uint64_t (*v27)(char *, unint64_t, uint64_t);
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  char *v45;
  uint64_t (*v46)(char *, unint64_t, uint64_t);
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  BOOL v60;
  unint64_t v61;
  void (*v62)(_QWORD, _QWORD, _QWORD);
  unint64_t v63;
  unint64_t v64;
  uint64_t result;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(char *, unint64_t, uint64_t);
  void (*v70)(_QWORD, _QWORD, _QWORD);
  unint64_t v71;
  unint64_t v72;
  char *v73;
  char *v74;
  uint64_t (*v75)(char *, char *);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;

  v75 = a5;
  v9 = type metadata accessor for Date(0);
  v78 = *(_QWORD *)(v9 - 8);
  v79 = v9;
  __chkstk_darwin(v9);
  v77 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v76 = (char *)&v66 - v12;
  v13 = type metadata accessor for Event(0);
  __chkstk_darwin(v13);
  v74 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v73 = (char *)&v66 - v16;
  v80 = v17;
  v18 = *(_QWORD *)(v17 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v18 == -1)
    goto LABEL_62;
  v19 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_63;
  v20 = (uint64_t)(a2 - a1) / v18;
  v83 = a1;
  v82 = a4;
  v21 = v19 / v18;
  if (v20 >= v19 / v18)
  {
    if ((v21 & 0x8000000000000000) == 0)
    {
      v23 = v21 * v18;
      if (a4 < a2 || a2 + v23 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v21, v13);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v42 = a4 + v23;
      v81 = a4 + v23;
      v83 = a2;
      if (v23 >= 1 && a1 < a2)
      {
        v44 = -v18;
        v69 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v80 + 16);
        v70 = (void (*)(_QWORD, _QWORD, _QWORD))a1;
        v67 = a4;
        v68 = -v18;
        v45 = v73;
        do
        {
          v71 = a2;
          v72 = a3 + v44;
          v46 = v69;
          v69(v45, v42 + v44, v13);
          v47 = a2 + v44;
          v48 = v74;
          v49 = v46(v74, v47, v13);
          v50 = v13;
          v51 = v76;
          v52 = Event.timestamp.getter(v49);
          v53 = a3;
          v54 = v77;
          Event.timestamp.getter(v52);
          LOBYTE(v46) = v75(v51, v54);
          v55 = *(void (**)(char *, uint64_t))(v78 + 8);
          v56 = v54;
          v57 = v79;
          v55(v56, v79);
          v58 = v51;
          v13 = v50;
          v55(v58, v57);
          v59 = *(void (**)(char *, uint64_t))(v80 + 8);
          v59(v48, v50);
          v59(v45, v50);
          if ((v46 & 1) != 0)
          {
            v44 = v68;
            a3 = v72;
            if (v53 < v71 || v72 >= v71)
            {
              swift_arrayInitWithTakeFrontToBack(v72, v47, 1, v50);
              v61 = v67;
              v62 = v70;
            }
            else
            {
              v60 = v53 == v71;
              v61 = v67;
              v62 = v70;
              if (!v60)
                swift_arrayInitWithTakeBackToFront(v72, v47);
            }
            v83 += v44;
          }
          else
          {
            v47 = v71;
            a3 = v72;
            v63 = v81;
            v64 = v81 + v68;
            v81 += v68;
            v44 = v68;
            if (v53 < v63 || v72 >= v63)
            {
              swift_arrayInitWithTakeFrontToBack(v72, v64, 1, v50);
              v61 = v67;
              v62 = v70;
            }
            else
            {
              v62 = v70;
              if (v53 != v63)
                swift_arrayInitWithTakeBackToFront(v72, v64);
              v61 = v67;
            }
          }
          v42 = v81;
          if (v81 <= v61)
            break;
          a2 = v47;
        }
        while (v47 > (unint64_t)v62);
      }
      goto LABEL_60;
    }
  }
  else if ((v20 & 0x8000000000000000) == 0)
  {
    v22 = v20 * v18;
    if (a4 < a1 || a1 + v22 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v20, v13);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v72 = a4 + v22;
    v81 = a4 + v22;
    if (v22 >= 1 && a2 < a3)
    {
      v70 = *(void (**)(_QWORD, _QWORD, _QWORD))(v80 + 16);
      v71 = a3;
      v26 = v73;
      v25 = v74;
      do
      {
        v27 = (uint64_t (*)(char *, unint64_t, uint64_t))v70;
        v70(v26, a2, v13);
        v28 = v27(v25, a4, v13);
        v29 = a2;
        v30 = v76;
        v31 = Event.timestamp.getter(v28);
        v32 = v77;
        Event.timestamp.getter(v31);
        v33 = v75(v30, v32);
        v34 = *(void (**)(char *, uint64_t))(v78 + 8);
        v35 = v32;
        v36 = v79;
        v34(v35, v79);
        v34(v30, v36);
        v37 = *(void (**)(char *, uint64_t))(v80 + 8);
        v37(v25, v13);
        v37(v26, v13);
        v38 = v83;
        if ((v33 & 1) != 0)
        {
          v39 = v29 + v18;
          if (v83 < v29 || v83 >= v39)
          {
            swift_arrayInitWithTakeFrontToBack(v83, v29, 1, v13);
            v40 = v71;
          }
          else
          {
            v40 = v71;
            if (v83 == v29)
              v38 = v29;
            else
              swift_arrayInitWithTakeBackToFront(v83, v29);
          }
        }
        else
        {
          v41 = v82 + v18;
          if (v83 < v82 || v83 >= v41)
          {
            swift_arrayInitWithTakeFrontToBack(v83, v82, 1, v13);
            v40 = v71;
          }
          else
          {
            v40 = v71;
            if (v83 != v82)
              swift_arrayInitWithTakeBackToFront(v83, v82);
          }
          v82 = v41;
          v39 = v29;
        }
        v83 = v38 + v18;
        a4 = v82;
        if (v82 >= v72)
          break;
        a2 = v39;
      }
      while (v39 < v40);
    }
LABEL_60:
    sub_1006994D4(&v83, &v82, (uint64_t *)&v81);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_100645354(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  char *v23;
  char *v24;
  _BYTE v25[48];
  uint64_t v26;

  v26 = a2;
  v4 = sub_10004CFD4(&qword_1009F24F8);
  __chkstk_darwin(v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Event(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v24 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v23 = (char *)v22 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return (char *)_swiftEmptyArrayStorage;
  v22[1] = v2;
  swift_bridgeObjectRetain(a1);
  v22[0] = a1;
  v13 = a1 + 40;
  v14 = (char *)_swiftEmptyArrayStorage;
  do
  {
    v15 = *(void **)(v13 - 8);
    sub_100316B8C(v13, (uint64_t)v25);
    swift_unknownObjectRetain(v15);
    sub_100316BC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004AD60);
    sub_100642228((uint64_t)v25, v15, (uint64_t)v6);
    swift_unknownObjectRelease(v15);
    sub_100316BC8((uint64_t)v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004ADC0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_100010960((uint64_t)v6, &qword_1009F24F8);
    }
    else
    {
      v16 = v8;
      v17 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v18 = v23;
      v17(v23, v6, v7);
      v17(v24, v18, v7);
      if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
        v14 = (char *)sub_1005B23D4(0, *((_QWORD *)v14 + 2) + 1, 1, (unint64_t)v14);
      v20 = *((_QWORD *)v14 + 2);
      v19 = *((_QWORD *)v14 + 3);
      if (v20 >= v19 >> 1)
        v14 = (char *)sub_1005B23D4(v19 > 1, v20 + 1, 1, (unint64_t)v14);
      *((_QWORD *)v14 + 2) = v20 + 1;
      v17(&v14[((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v20], v24, v7);
      v8 = v16;
    }
    v13 += 56;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease(v22[0]);
  return v14;
}

_QWORD *sub_1006455CC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  BOOL v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  char v26;
  __n128 v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v50;
  _QWORD v51[2];
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009F24D0);
  __chkstk_darwin(v6);
  v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for EventType(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v60 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v63 = (char *)v51 - v13;
  v64 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_33;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v14)
  {
    while (1)
    {
      v51[1] = v3;
      v52 = v8;
      v15 = 0;
      v56 = a1 & 0xFFFFFFFFFFFFFF8;
      v57 = a1 & 0xC000000000000001;
      v54 = a1 + 32;
      v55 = v14;
      v61 = a2;
      v62 = a2 + 56;
      v3 = v63;
      v53 = a1;
      while (v57)
      {
        v48 = v15;
        v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v15, a1);
        v19 = v15 + 1;
        if (__OFADD__(v48, 1))
          goto LABEL_32;
LABEL_10:
        v58 = v19;
        v59 = v17;
        v20 = objc_msgSend(v17, "eventName");
        v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
        v23 = v22;

        if (qword_1009CEAE0 != -1)
          swift_once(&qword_1009CEAE0, sub_10063F5F8);
        v24 = off_1009F23C0;
        if (*((_QWORD *)off_1009F23C0 + 2))
        {
          swift_bridgeObjectRetain(v23);
          v25 = sub_10004CE80(v21, v23);
          if ((v26 & 1) != 0)
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, v24[7] + *(_QWORD *)(v10 + 72) * v25, v9);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
          }
          swift_bridgeObjectRelease(v23);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
        }
        v27 = swift_bridgeObjectRelease(v23);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v27) == 1)
        {
          sub_100010960((uint64_t)v8, &qword_1009F24D0);
          v16 = v59;
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v3, v8, v9);
          v28 = v59;
          if (*(_QWORD *)(a2 + 16))
          {
            v29 = *(_QWORD *)(a2 + 40);
            v30 = sub_100645A48(&qword_1009F24D8, (uint64_t)&protocol conformance descriptor for EventType);
            v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v9, v30);
            v32 = -1 << *(_BYTE *)(a2 + 32);
            v33 = v31 & ~v32;
            if (((*(_QWORD *)(v62 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) != 0)
            {
              v34 = ~v32;
              v35 = v10;
              v36 = *(_QWORD *)(v10 + 72);
              v37 = v35;
              v38 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
              while (1)
              {
                v39 = v60;
                v38(v60, *(_QWORD *)(v61 + 48) + v36 * v33, v9);
                v40 = sub_100645A48(&qword_1009F24E0, (uint64_t)&protocol conformance descriptor for EventType);
                v41 = dispatch thunk of static Equatable.== infix(_:_:)(v39, v63, v9, v40);
                v42 = *(void (**)(char *, uint64_t))(v37 + 8);
                v42(v39, v9);
                if ((v41 & 1) != 0)
                  break;
                v33 = (v33 + 1) & v34;
                if (((*(_QWORD *)(v62 + ((v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
                {
                  v43 = v63;
                  v42(v63, v9);
                  swift_unknownObjectRelease(v59);
                  a2 = v61;
                  v8 = v52;
                  a1 = v53;
                  v10 = v37;
                  v3 = v43;
                  goto LABEL_6;
                }
              }
              v44 = v63;
              v45 = ((uint64_t (*)(char *, uint64_t))v42)(v63, v9);
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v45);
              v46 = v64[2];
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v46);
              v47 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v46, v59);
              specialized ContiguousArray._endMutation()(v47);
              a2 = v61;
              v8 = v52;
              a1 = v53;
              v10 = v37;
              v3 = v44;
              goto LABEL_6;
            }
          }
          (*(void (**)(char *, uint64_t))(v10 + 8))(v3, v9);
          v16 = v28;
        }
        swift_unknownObjectRelease(v16);
LABEL_6:
        v15 = v58;
        if (v58 == v55)
          return v64;
      }
      if (v15 < *(_QWORD *)(v56 + 16))
        break;
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      if (a1 < 0)
        v50 = a1;
      else
        v50 = a1 & 0xFFFFFFFFFFFFFF8;
      v14 = _CocoaArrayWrapper.endIndex.getter(v50);
      if (!v14)
        return _swiftEmptyArrayStorage;
    }
    v17 = (void *)swift_unknownObjectRetain(*(_QWORD *)(v54 + 8 * v15));
    v18 = __OFADD__(v15, 1);
    v19 = v15 + 1;
    if (v18)
      goto LABEL_32;
    goto LABEL_10;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100645A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;

  return sub_1006419EC(a1, a2, v3, a3);
}

uint64_t sub_100645A48(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for EventType(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ExpandedContentModuleFactory()
{
  return objc_opt_self(_TtC5Books28ExpandedContentModuleFactory);
}

id sub_100645AA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  id v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  NSURL *v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSURL *v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  id v53;
  uint64_t v54;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;

  v59 = a3;
  v64 = a1;
  v65 = a2;
  v5 = type metadata accessor for BookContentUserInterfaceStyle(0);
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  __chkstk_darwin(v5);
  v56 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009D23D0);
  __chkstk_darwin(v7);
  v61 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v60 = (char *)&v56 - v10;
  __chkstk_darwin(v11);
  v63 = (char *)&v56 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v56 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v56 - v17;
  __chkstk_darwin(v19);
  v21 = (char *)&v56 - v20;
  v22 = type metadata accessor for URL(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v56 - v27;
  __chkstk_darwin(v29);
  v62 = (char *)&v56 - v30;
  sub_10000B59C(a4, (uint64_t)v15);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v31(v15, 1, v22) == 1)
  {
    sub_10000B518((uint64_t)v15);
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v32(v18, 1, 1, v22);
  }
  else
  {
    ((void (*)(void))URL.absoluteURL.getter)();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v22);
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    v32(v18, 0, 1, v22);
  }
  URL.init(string:relativeTo:)(v64, v65, v18);
  sub_10000B518((uint64_t)v18);
  if (v31(v21, 1, v22) == 1)
  {
    sub_10000B518((uint64_t)v21);
    return 0;
  }
  else
  {
    v34 = v62;
    v35 = (*(uint64_t (**)(char *, char *, uint64_t))(v23 + 32))(v62, v21, v22);
    v36 = URL.absoluteURL.getter(v35);
    URL.standardized.getter(v36);
    v37 = *(void (**)(char *, uint64_t))(v23 + 8);
    v37(v28, v22);
    URL._bridgeToObjectiveC()(v38);
    v40 = v39;
    v37(v25, v22);
    v41 = (id)BEURLHandlerAssetInfoPathForBookURL(v40);

    if (v41)
    {
      v42 = (uint64_t)v60;
      static URL._unconditionallyBridgeFromObjectiveC(_:)(v41);

      v43 = 0;
      v44 = (uint64_t)v63;
    }
    else
    {
      v43 = 1;
      v44 = (uint64_t)v63;
      v42 = (uint64_t)v60;
    }
    v45 = (uint64_t)v61;
    v32((char *)v42, v43, 1, v22);
    sub_10006CE68(v42, v44);
    v33 = objc_msgSend(objc_allocWithZone((Class)BKARQuicklookViewController), "init");
    sub_10000B59C(v44, v45);
    if (v31((char *)v45, 1, v22) == 1)
    {
      v47 = 0;
    }
    else
    {
      URL._bridgeToObjectiveC()(v46);
      v47 = v48;
      v37((char *)v45, v22);
    }
    v50 = v58;
    v49 = v59;
    v52 = v56;
    v51 = v57;
    objc_msgSend(v33, "setARModelDataURL:", v47);

    objc_msgSend(v33, "setDataSource:", v33);
    (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v52, enum case for BookContentUserInterfaceStyle.dark(_:), v50);
    v53 = v33;
    LOBYTE(v49) = static BookContentUserInterfaceStyle.== infix(_:_:)(v49, v52);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v50);
    if ((v49 & 1) != 0)
      v54 = 2;
    else
      v54 = 1;
    objc_msgSend(v53, "setOverrideUserInterfaceStyle:", v54);

    sub_10000B518(v44);
    v37(v34, v22);
  }
  return v33;
}

uint64_t sub_100645EF4()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009F25E0);
  sub_100048F64(v0, (uint64_t)qword_1009F25E0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001FLL, 0x80000001007DAD70);
}

void sub_100645FCC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *Strong;
  char *v5;
  UIAccessibilityNotifications v6;
  id v7;
  char v8[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    if ((*(_BYTE *)(v2 + OBJC_IVAR___BKRootBarItem_editNameOnSelect) & 1) == 0
      && objc_msgSend(Strong, "displayMode") == (id)3)
    {
      objc_msgSend(v5, "hideColumn:", 0);
      v6 = UIAccessibilityScreenChangedNotification;
      v7 = objc_retain(*(id *)(*(_QWORD *)&v5[OBJC_IVAR___BKSplitViewController_contentHostingController]
                             + OBJC_IVAR___BKSplitViewContentHostingController_viewController));
      UIAccessibilityPostNotification(v6, v7);

    }
  }
}

void *sub_1006460A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *result;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[5];
  uint64_t v34;
  char v35[24];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v32 - 8);
  v11 = __chkstk_darwin(v32);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v28 - v14;
  a2 += 16;
  swift_beginAccess(a2, v35, 0, 0);
  result = (void *)swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v17 = result;
    v29 = v7;
    v30 = v4;
    if (objc_msgSend(result, "displayMode") == (id)3)
      objc_msgSend(v17, "hideColumn:", 0);
    v18 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v19 = (void *)static OS_dispatch_queue.main.getter(v18);
    static DispatchTime.now()();
    + infix(_:_:)(v13, 0.5);
    v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v13, v32);
    v20 = swift_allocObject(&unk_100919968, 24, 7);
    *(_QWORD *)(v20 + 16) = v17;
    aBlock[4] = sub_1006498B0;
    v34 = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_100919980;
    v21 = _Block_copy(aBlock);
    v22 = v34;
    v23 = v17;
    v24 = swift_release(v22);
    static DispatchQoS.unspecified.getter(v24);
    aBlock[0] = _swiftEmptyArrayStorage;
    v25 = sub_100008E8C();
    v26 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v27 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v3, v25);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v9, v6, v21);
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v29);
    return (void *)((uint64_t (*)(char *, uint64_t))v28)(v15, v32);
  }
  return result;
}

_QWORD *sub_100646474()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  objc_super v10;

  v10.receiver = *(id *)(*(_QWORD *)(v0 + OBJC_IVAR___BKSplitViewController_contentHostingController)
                       + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
  v10.super_class = (Class)type metadata accessor for MainContentViewController();
  v1 = objc_msgSendSuper2(&v10, "contentNavigationController");
  if (!v1)
    return _swiftEmptyArrayStorage;
  v2 = v1;
  v3 = objc_msgSend(v1, "visibleViewController");

  if (!v3)
    return _swiftEmptyArrayStorage;
  v4 = objc_opt_self(BKLibraryBookshelfCollectionViewController);
  v5 = (void *)swift_dynamicCastObjCClass(v3, v4);
  if (v5)
  {
    v6 = objc_msgSend(v5, "selectedBooks");

    v7 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
    v8 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);
    v3 = v6;
  }
  else
  {
    v8 = _swiftEmptyArrayStorage;
  }

  return v8;
}

uint64_t sub_100646588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v3;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  objc_class *v29;
  id v30;
  _QWORD v31[2];
  objc_super v32;
  __int128 v33;
  __int128 v34;
  objc_super v35;

  v35.receiver = *(id *)(*(_QWORD *)&v3[OBJC_IVAR___BKSplitViewController_contentHostingController]
                       + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
  v35.super_class = (Class)type metadata accessor for MainContentViewController();
  v7 = objc_msgSendSuper2(&v35, "contentNavigationController");
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, "visibleViewController");

    if (v9)
    {
      v10 = objc_opt_self(BKLibraryBookshelfCollectionViewController);
      v11 = swift_dynamicCastObjCClass(v9, v10);
      if (v11)
      {
        v12 = (void *)v11;
        sub_10000B5E4(a2, (uint64_t)&v33, (uint64_t *)&unk_1009D04E0);
        v13 = *((_QWORD *)&v34 + 1);
        if (*((_QWORD *)&v34 + 1))
        {
          v14 = sub_10003F198(&v33, *((uint64_t *)&v34 + 1));
          v31[1] = v31;
          v15 = *(_QWORD *)(v13 - 8);
          v16 = __chkstk_darwin(v14);
          v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, double))(v15 + 16))(v18, v16);
          v19 = _bridgeAnythingToObjectiveC<A>(_:)(v18, v13);
          (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v13);
          _s5Books15CurrentPageViewVwxx_0(&v33);
        }
        else
        {
          v19 = 0;
        }
        v20 = objc_msgSend(v12, "canPerformAction:withSender:", a1, v19);
        swift_unknownObjectRelease(v19);
        if (v20)
        {
          result = sub_100009E04(0, (unint64_t *)&unk_1009F26E0, off_1008E5298);
          a3[3] = result;
          *a3 = v12;
          return result;
        }
      }

    }
  }
  sub_10000B5E4(a2, (uint64_t)&v33, (uint64_t *)&unk_1009D04E0);
  v22 = *((_QWORD *)&v34 + 1);
  if (*((_QWORD *)&v34 + 1))
  {
    v23 = sub_10003F198(&v33, *((uint64_t *)&v34 + 1));
    v24 = *(_QWORD *)(v22 - 8);
    v25 = __chkstk_darwin(v23);
    v27 = (char *)v31 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v24 + 16))(v27, v25);
    v28 = _bridgeAnythingToObjectiveC<A>(_:)(v27, v22);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v22);
    _s5Books15CurrentPageViewVwxx_0(&v33);
  }
  else
  {
    v28 = 0;
  }
  v29 = (objc_class *)type metadata accessor for SplitViewController(0);
  v32.receiver = v3;
  v32.super_class = v29;
  v30 = objc_msgSendSuper2(&v32, "targetForAction:withSender:", a1, v28);
  swift_unknownObjectRelease(v28);
  if (v30)
  {
    _bridgeAnyObjectToAny(_:)(v30);
    swift_unknownObjectRelease(v30);
  }
  else
  {
    v33 = 0u;
    v34 = 0u;
  }
  return sub_10004C7B4((uint64_t)&v33, (uint64_t)a3);
}

uint64_t sub_10064697C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  objc_class *v25;
  unsigned int v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  double v52;
  void *v53;
  objc_class *v54;
  id v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  double v67;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  objc_super v74;
  _QWORD *v75;
  objc_super v76;
  _QWORD v77[3];
  uint64_t v78;

  v3 = v2;
  v6 = sub_10004CFD4(&qword_1009F26C8);
  __chkstk_darwin(v6);
  v71 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v69 - v9;
  v73 = sub_10004CFD4(&qword_1009D3408);
  v11 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v70 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v72 = (char *)&v69 - v14;
  __chkstk_darwin(v15);
  v17 = (char *)&v69 - v16;
  sub_10000B5E4(a2, (uint64_t)v77, (uint64_t *)&unk_1009D04E0);
  v18 = v78;
  if (v78)
  {
    v19 = sub_10003F198(v77, v78);
    v20 = *(_QWORD *)(v18 - 8);
    v21 = __chkstk_darwin(v19);
    v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v20 + 16))(v23, v21);
    v24 = _bridgeAnythingToObjectiveC<A>(_:)(v23, v18);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
    _s5Books15CurrentPageViewVwxx_0(v77);
  }
  else
  {
    v24 = 0;
  }
  v25 = (objc_class *)type metadata accessor for SplitViewController(0);
  v76.receiver = v3;
  v76.super_class = v25;
  v26 = objc_msgSendSuper2(&v76, "canPerformAction:withSender:", a1, v24);
  v27 = objc_msgSend(v3, "traitCollection", swift_unknownObjectRelease(v24).n128_f64[0]);
  v28 = objc_msgSend(v27, "horizontalSizeClass");

  if (v28 == (id)1
    && (v29 = objc_msgSend(v3, "viewControllerForColumn:", 3)) != 0)
  {
    v30 = v29;
    v31 = *(_QWORD *)&v3[OBJC_IVAR___BKSplitViewController_contentHostingController];
    v32 = OBJC_IVAR___BKSplitViewContentHostingController_viewController;
    v33 = *(id *)(v31 + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
  }
  else
  {
    v31 = *(_QWORD *)&v3[OBJC_IVAR___BKSplitViewController_contentHostingController];
    v32 = OBJC_IVAR___BKSplitViewContentHostingController_viewController;
    v33 = *(id *)(v31 + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
    v30 = v33;
  }

  if ((static Selector.== infix(_:_:)("books_createCollection:", a1) & 1) == 0)
  {
    if ((static Selector.== infix(_:_:)("books_createCollectionFromSelection:", a1) & 1) != 0)
    {
      v34 = 0;
      if (!v26 || v30 != v33)
        return v34 & 1;
      v37 = (uint64_t)&v3[OBJC_IVAR___BKSplitViewController_lastCollectionCreated];
      swift_beginAccess(&v3[OBJC_IVAR___BKSplitViewController_lastCollectionCreated], v77, 0, 0);
      v38 = v71;
      sub_10000B5E4(v37, v71, &qword_1009F26C8);
      v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      v40 = v73;
      if (v39(v38, 1, v73) == 1)
      {
        sub_100010960(v38, &qword_1009F26C8);
      }
      else
      {
        v59 = *(int *)(v40 + 48);
        v60 = type metadata accessor for Date(0);
        v61 = *(_QWORD *)(v60 - 8);
        v62 = (uint64_t)v70;
        (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v70, v38, v60);
        v63 = *(_QWORD *)(v38 + v59);
        *(_QWORD *)(v62 + v59) = v63;
        v64 = *(int *)(v40 + 48);
        v65 = v72;
        v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 16))(v72, v62, v60);
        *(_QWORD *)&v65[v64] = v63;
        v67 = Date.timeIntervalSinceNow.getter(v66);
        sub_100010960(v62, &qword_1009D3408);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v65, v60);
        if (v67 >= -0.25)
          goto LABEL_28;
      }
      v42 = sub_100646474();
      v75 = v42;
      v43 = sub_10004CFD4((uint64_t *)&unk_1009F26D0);
      v44 = sub_100030B34((unint64_t *)&qword_1009E2320, (uint64_t *)&unk_1009F26D0, (uint64_t)&protocol conformance descriptor for [A]);
    }
    else
    {
      v41 = static Selector.== infix(_:_:)("books_addSelectionToCollection:", a1);
      v34 = v26 & ~(_BYTE)v41;
      if ((v41 & v26) != 1 || v30 != v33)
        return v34 & 1;
      v42 = sub_100646474();
      v77[0] = v42;
      v43 = sub_10004CFD4((uint64_t *)&unk_1009F26D0);
      v44 = sub_100030B34((unint64_t *)&qword_1009E2320, (uint64_t *)&unk_1009F26D0, (uint64_t)&protocol conformance descriptor for [A]);
    }
    v34 = Collection.isNotEmpty.getter(v43, v44);
    swift_bridgeObjectRelease(v42);
    return v34 & 1;
  }
  v34 = 0;
  if (v26 && v30 == v33)
  {
    v35 = (uint64_t)&v3[OBJC_IVAR___BKSplitViewController_lastCollectionCreated];
    swift_beginAccess(v35, v77, 0, 0);
    sub_10000B5E4(v35, (uint64_t)v10, &qword_1009F26C8);
    v36 = v73;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v73) == 1)
    {
      sub_100010960((uint64_t)v10, &qword_1009F26C8);
    }
    else
    {
      v45 = *(int *)(v36 + 48);
      v46 = type metadata accessor for Date(0);
      v47 = *(_QWORD *)(v46 - 8);
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v17, v10, v46);
      v48 = *(_QWORD *)&v10[v45];
      *(_QWORD *)&v17[v45] = v48;
      v49 = *(int *)(v36 + 48);
      v50 = v72;
      v51 = (*(uint64_t (**)(char *, char *, uint64_t))(v47 + 16))(v72, v17, v46);
      *(_QWORD *)&v50[v49] = v48;
      v52 = Date.timeIntervalSinceNow.getter(v51);
      sub_100010960((uint64_t)v17, &qword_1009D3408);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v50, v46);
      if (v52 >= -0.25)
        goto LABEL_28;
    }
    v53 = *(void **)(v31 + v32);
    v54 = (objc_class *)type metadata accessor for MainContentViewController();
    v74.receiver = v53;
    v74.super_class = v54;
    v55 = objc_msgSendSuper2(&v74, "contentNavigationController");
    if (v55)
    {
      v56 = v55;
      v57 = objc_msgSend(v55, "visibleViewController");

      if (v57)
      {
        v58 = objc_opt_self(BKLibraryBookshelfCollectionViewController);
        v34 = swift_dynamicCastObjCClass(v57, v58) != 0;

        return v34 & 1;
      }
    }
LABEL_28:
    v34 = 0;
  }
  return v34 & 1;
}

void sub_100647154(void *a1, uint64_t a2, uint64_t a3, char a4, char a5, SEL *a6)
{
  id v9;
  id v10;
  void *v11;
  objc_super v12;
  _QWORD v13[3];
  char v14;

  v13[1] = 0;
  v13[2] = 0;
  v13[0] = a3;
  v14 = a4;
  v9 = a1;
  PassthroughSubject.send(_:)(v13);
  v10 = objc_msgSend(v9, "view");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "setAccessibilityElementsHidden:", a5 & 1);

    v12.receiver = v9;
    v12.super_class = (Class)type metadata accessor for SplitViewController(0);
    objc_msgSendSuper2(&v12, *a6, a3);

  }
  else
  {
    __break(1u);
  }
}

id sub_10064736C()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "horizontalSizeClass");

  if (v2 != (id)1
    || (v3 = objc_msgSend(v0, "viewControllerForColumn:", 3)) == 0)
  {
    v3 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR___BKSplitViewController_contentHostingController]
                           + OBJC_IVAR___BKSplitViewContentHostingController_viewController));
  }
  v4 = objc_msgSend(v3, "childViewControllerForHomeIndicatorAutoHidden");

  return v4;
}

id sub_100647460()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, "presentedViewController");
  if (v1)
  {
    v2 = v1;
    if (objc_msgSend(v1, "modalPresentationStyle") == (id)5
      && (objc_msgSend(v2, "isBeingDismissed") & 1) == 0)
    {
      v3 = objc_msgSend(v2, "childViewControllerForStatusBarStyle");

      return v3;
    }

  }
  return 0;
}

id sub_100647520()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "horizontalSizeClass");

  if (v2 != (id)1
    || (v3 = objc_msgSend(v0, "viewControllerForColumn:", 3)) == 0)
  {
    v3 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR___BKSplitViewController_contentHostingController]
                           + OBJC_IVAR___BKSplitViewContentHostingController_viewController));
  }
  v4 = objc_msgSend(v3, "preferredStatusBarStyle");

  return v4;
}

id sub_10064760C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  char **v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v1 = (void *)objc_opt_self(BKAppDelegate);
  v2 = objc_msgSend(v1, "delegate");
  v3 = objc_msgSend(v2, "appLaunchCoordinator");

  LODWORD(v2) = objc_msgSend(v3, "appLaunchCoordinatorIsConditionSatisfied:", 0);
  swift_unknownObjectRelease(v3);
  if ((_DWORD)v2)
  {
    v4 = objc_msgSend(v1, "delegate");
    v5 = objc_msgSend(v4, "sceneManager");

    v6 = objc_msgSend(v5, "mainFlowController");
    v7 = &selRef_viewControllerForStatusBarHidden;
  }
  else
  {
    v8 = objc_msgSend(v0, "traitCollection");
    v9 = objc_msgSend(v8, "horizontalSizeClass");

    if (v9 != (id)1
      || (v10 = objc_msgSend(v0, "viewControllerForColumn:", 3)) == 0)
    {
      v10 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR___BKSplitViewController_contentHostingController]
                              + OBJC_IVAR___BKSplitViewContentHostingController_viewController));
    }
    v6 = v10;
    v7 = &selRef_childViewControllerForStatusBarHidden;
  }
  v11 = objc_msgSend(v6, *v7);

  return v11;
}

id sub_1006477D0()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "horizontalSizeClass");

  if (v2 != (id)1
    || (v3 = objc_msgSend(v0, "viewControllerForColumn:", 3)) == 0)
  {
    v3 = objc_retain(*(id *)(*(_QWORD *)&v0[OBJC_IVAR___BKSplitViewController_contentHostingController]
                           + OBJC_IVAR___BKSplitViewContentHostingController_viewController));
  }
  v4 = objc_msgSend(v3, "prefersStatusBarHidden");

  return v4;
}

id sub_1006478E8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SplitViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100647980()
{
  return type metadata accessor for SplitViewController(0);
}

uint64_t type metadata accessor for SplitViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F2640;
  if (!qword_1009F2640)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for SplitViewController);
  return result;
}

void sub_1006479C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100647A5C(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
  }
}

void sub_100647A5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009F2650)
  {
    v2 = sub_100030B74(&qword_1009D3408);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009F2650);
  }
}

uint64_t sub_100647AB4()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_10004CFD4((uint64_t *)&unk_1009CEEA0);
  v1 = sub_100030B34(&qword_1009E87F0, (uint64_t *)&unk_1009CEEA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  return Publisher.eraseToAnyPublisher()(v0, v1);
}

uint64_t sub_100647C0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  char *v12;
  Swift::String v13;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BKSplitViewController_contentHostingController);
  KeyPath = swift_getKeyPath(&unk_100736A18);
  v3 = swift_getKeyPath(&unk_100736A40);
  static Published.subscript.getter(&v12, v1, KeyPath);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = v12;
  if (!v12)
    return 0;
  v6 = *(_QWORD *)&v12[OBJC_IVAR___BKRootBarItem_identifier];
  v5 = *(void **)&v12[OBJC_IVAR___BKRootBarItem_identifier + 8];
  swift_bridgeObjectRetain_n(v5, 2);

  _s5Books20RootBarItemsProviderC18customCollectionID18fromItemIdentifierSSSgSS_tFZ_0(v6, (unint64_t)v5);
  v8 = v7;
  swift_bridgeObjectRelease(v7);
  if (v8)
  {
    swift_bridgeObjectRelease(v5);
    v9 = 14;
  }
  else
  {
    v13._countAndFlagsBits = v6;
    v13._object = v5;
    v9 = _s5Books20RootBarItemsProviderC8ItemKindO8rawValueAESgSS_tcfC_0(v13);
    if (v9 == 16)
      v9 = 15;
  }
  v10 = sub_100415594(v9);
  swift_bridgeObjectRelease(v5);
  return v10;
}

void *sub_100647D1C()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  __objc2_prot *v8;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "horizontalSizeClass");

  if (v2 == (id)1
    && (v3 = objc_msgSend(v0, "viewControllerForColumn:", 3)) != 0)
  {
    v4 = v3;
    v8 = &OBJC_PROTOCOL___BSUIRootBarWrapperViewControllerHosting;
    v5 = (void *)swift_dynamicCastObjCProtocolConditional(v3, 1, &v8);
    if (!v5)

  }
  else
  {
    v5 = *(void **)&v0[OBJC_IVAR___BKSplitViewController_contentHostingController];
    v6 = v5;
  }
  return v5;
}

void sub_100647E44(uint64_t a1, void *a2, char a3)
{
  char *v3;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  Swift::String v17;
  Swift::String v18;
  NSObject *oslog;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v7 = objc_msgSend(v3, "traitCollection");
  v8 = objc_msgSend(v7, "horizontalSizeClass");

  if (v8 == (id)1
    && (v9 = objc_msgSend(v3, "viewControllerForColumn:", 3)) != 0
    && (v10 = v9,
        v11 = *(id *)(*(_QWORD *)&v3[OBJC_IVAR___BKSplitViewController_contentHostingController]
                    + OBJC_IVAR___BKSplitViewContentHostingController_viewController),
        v9,
        v10 != v11))
  {
    if (qword_1009CEAE8 != -1)
      swift_once(&qword_1009CEAE8, sub_100645EF4);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100048F64(v12, (uint64_t)qword_1009F25E0);
    oslog = Logger.logObject.getter(v13);
    v14 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(12, -1);
      v16 = swift_slowAlloc(32, -1);
      v20 = v16;
      *(_DWORD *)v15 = 136315138;
      v21 = sub_100040F58(0xD00000000000001ELL, 0x80000001007DAD50, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22, v15 + 4, v15 + 12);
      swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v15, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v17._countAndFlagsBits = a1;
    v17._object = a2;
    String.append(_:)(v17);
    v18._countAndFlagsBits = 0x3A6D6F74737563;
    v18._object = (void *)0xE700000000000000;
    SplitViewContentHostingController.select(identifier:isUserAction:editNameOnSelect:)(v18, 0, a3 & 1);
    swift_bridgeObjectRelease(0xE700000000000000);
  }
}

void sub_1006480C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  int v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51[3];
  char v52[24];

  v3 = sub_10004CFD4(&qword_1009F26C8);
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - v7;
  v9 = sub_10004CFD4(&qword_1009D3408);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v47 - v14;
  v49 = v1;
  v16 = v1 + OBJC_IVAR___BKSplitViewController_lastCollectionCreated;
  swift_beginAccess(v1 + OBJC_IVAR___BKSplitViewController_lastCollectionCreated, v52, 0, 0);
  sub_10000B5E4(v16, (uint64_t)v8, &qword_1009F26C8);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  v48 = v9;
  if (v17 == 1)
  {
    sub_100010960((uint64_t)v8, &qword_1009F26C8);
LABEL_4:
    if (qword_1009CE488 != -1)
      swift_once(&qword_1009CE488, sub_10000A650);
    v29 = (void *)qword_100A1E8A8;
    v30 = swift_allocObject(&unk_1009198A0, 64, 7);
    *(_QWORD *)(v30 + 16) = v29;
    *(_OWORD *)(v30 + 24) = 0u;
    *(_OWORD *)(v30 + 40) = 0u;
    *(_QWORD *)(v30 + 56) = a1;
    v31 = sub_10004CFD4((uint64_t *)&unk_1009DCCB0);
    swift_allocObject(v31, *(unsigned int *)(v31 + 48), *(unsigned __int16 *)(v31 + 52));
    v32 = v29;
    swift_bridgeObjectRetain(a1);
    v51[0] = Future.init(_:)(sub_10035B13C, v30);
    v33 = swift_allocObject(&unk_1009198C8, 24, 7);
    swift_unknownObjectWeakInit(v33 + 16);
    v34 = swift_allocObject(&unk_1009198C8, 24, 7);
    swift_unknownObjectWeakInit(v34 + 16);
    v35 = swift_allocObject(&unk_1009198F0, 32, 7);
    *(_QWORD *)(v35 + 16) = v34;
    *(_QWORD *)(v35 + 24) = a1;
    v36 = sub_100030B34((unint64_t *)&unk_1009E2820, (uint64_t *)&unk_1009DCCB0, (uint64_t)&protocol conformance descriptor for Future<A, B>);
    swift_bridgeObjectRetain(a1);
    v37 = Publisher.sink(receiveCompletion:receiveValue:)(sub_100649538, v33, sub_10064956C, v35, v31, v36);
    swift_release(v33);
    swift_release(v35);
    swift_release(v51[0]);
    v38 = v48;
    v39 = *(int *)(v48 + 48);
    static Date.now.getter(v40);
    *(_QWORD *)&v5[v39] = v37;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v38);
    swift_beginAccess(v16, v51, 33, 0);
    swift_retain(v37);
    sub_100649574((uint64_t)v5, v16);
    swift_endAccess(v51);
    swift_release(v37);
    return;
  }
  v47 = v16;
  v18 = v5;
  v19 = a1;
  v20 = v10;
  v21 = *(int *)(v9 + 48);
  v22 = type metadata accessor for Date(0);
  v23 = v9;
  v24 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v15, v8, v22);
  v25 = *(_QWORD *)&v8[v21];
  *(_QWORD *)&v15[v21] = v25;
  v26 = *(int *)(v23 + 48);
  v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 16))(v12, v15, v22);
  *(_QWORD *)&v12[v26] = v25;
  v10 = v20;
  a1 = v19;
  v5 = v18;
  v16 = v47;
  v28 = Date.timeIntervalSinceNow.getter(v27);
  sub_100010960((uint64_t)v15, &qword_1009D3408);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v22);
  if (v28 < -0.25)
    goto LABEL_4;
  if (qword_1009CEAE8 != -1)
    swift_once(&qword_1009CEAE8, sub_100645EF4);
  v41 = type metadata accessor for Logger(0);
  v42 = sub_100048F64(v41, (uint64_t)qword_1009F25E0);
  v43 = Logger.logObject.getter(v42);
  v44 = static os_log_type_t.error.getter(v43);
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc(12, -1);
    v46 = swift_slowAlloc(32, -1);
    v51[0] = v46;
    *(_DWORD *)v45 = 136315138;
    v50 = sub_100040F58(0xD000000000000017, 0x80000001007DAD90, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, v51, v45 + 4, v45 + 12);
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v45, -1, -1);
  }

}

double sub_1006486DC(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  char v4;
  uint64_t v5;
  double result;

  v2 = *a1;
  if (v2 != 2)
  {
    v4 = v2 & 1;
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v5 = swift_allocObject(&unk_100919940, 25, 7);
    *(_QWORD *)(v5 + 16) = a2;
    *(_BYTE *)(v5 + 24) = v4;
    swift_retain(a2);
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10064962C, v5);
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

void sub_100648778(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = sub_10041D800();
    v7 = swift_allocError(&type metadata for LibraryCollectionsServiceError, v6, 0, 0);
    *v8 = a2 & 1;
    if (qword_1009CEAE8 != -1)
      swift_once(&qword_1009CEAE8, sub_100645EF4);
    v9 = type metadata accessor for Logger(0);
    sub_100048F64(v9, (uint64_t)qword_1009F25E0);
    v10 = swift_errorRetain(v7);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.error.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v13 = 138412290;
      v15 = _convertErrorToNSError(_:)(v7);
      v17 = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, v18, v13 + 4, v13 + 12);
      *v14 = v15;
      swift_errorRelease(v7);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to create new collection, error: %@", v13, 0xCu);
      v16 = sub_10004CFD4((uint64_t *)&unk_1009D6190);
      swift_arrayDestroy(v14, 1, v16);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);
    }
    else
    {
      swift_errorRelease(v7);
    }

    swift_errorRelease(v7);
  }
}

double sub_10064895C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  double result;

  v6 = *a1;
  v5 = a1[1];
  v8 = a1[2];
  v7 = a1[3];
  sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v9 = (_QWORD *)swift_allocObject(&unk_100919918, 64, 7);
  v9[2] = a2;
  v9[3] = v6;
  v9[4] = v5;
  v9[5] = v8;
  v9[6] = v7;
  v9[7] = a3;
  swift_retain(a2);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(a3);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_1006495F8, v9);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

void sub_100648A14(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t Strong;
  void *v13;
  _BYTE v14[24];

  v11 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v11);
  if (Strong)
  {
    v13 = (void *)Strong;
    sub_100648AA0(a4, a5, a2, a3, a6);

  }
}

void sub_100648AA0(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v30;
  uint64_t v31;

  if ((unint64_t)a5 >> 62)
  {
    if (a5 < 0)
      v27 = a5;
    else
      v27 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a5);
    v8 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(a5);
  }
  else
  {
    v8 = *(_QWORD *)((a5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v8)
  {
    if (qword_1009CEAE8 != -1)
      swift_once(&qword_1009CEAE8, sub_100645EF4);
    v21 = type metadata accessor for Logger(0);
    sub_100048F64(v21, (uint64_t)qword_1009F25E0);
    v22 = swift_bridgeObjectRetain_n(a2, 2);
    v11 = Logger.logObject.getter(v22);
    v23 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(12, -1);
      v25 = swift_slowAlloc(32, -1);
      v31 = v25;
      *(_DWORD *)v24 = 136315138;
      swift_bridgeObjectRetain(a2);
      v30 = sub_100040F58(a1, a2, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v24 + 4, v24 + 12);
      swift_bridgeObjectRelease_n(a2, 3);
      _os_log_impl((void *)&_mh_execute_header, v11, v23, "Created an empty collection '%s'", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      v20 = (uint64_t)v24;
      goto LABEL_12;
    }

    v26 = a2;
LABEL_15:
    swift_bridgeObjectRelease_n(v26, 2);
    goto LABEL_16;
  }
  if (qword_1009CEAE8 != -1)
    swift_once(&qword_1009CEAE8, sub_100645EF4);
  v9 = type metadata accessor for Logger(0);
  sub_100048F64(v9, (uint64_t)qword_1009F25E0);
  swift_bridgeObjectRetain_n(a5, 2);
  v10 = swift_bridgeObjectRetain_n(a2, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (!os_log_type_enabled(v11, v12))
  {

    swift_bridgeObjectRelease_n(a2, 2);
    v26 = a5;
    goto LABEL_15;
  }
  v13 = swift_slowAlloc(22, -1);
  v14 = swift_slowAlloc(64, -1);
  v31 = v14;
  *(_DWORD *)v13 = 136315394;
  v15 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
  swift_bridgeObjectRetain(a5);
  v17 = Array.description.getter(v16, v15);
  v19 = v18;
  swift_bridgeObjectRelease(a5);
  v30 = sub_100040F58(v17, v19, &v31);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v13 + 4, v13 + 12);
  swift_bridgeObjectRelease_n(a5, 2);
  swift_bridgeObjectRelease(v19);
  *(_WORD *)(v13 + 12) = 2080;
  swift_bridgeObjectRetain(a2);
  v30 = sub_100040F58(a1, a2, &v31);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v13 + 14, v13 + 22);
  swift_bridgeObjectRelease_n(a2, 3);
  _os_log_impl((void *)&_mh_execute_header, v11, v12, "Added %s to newly created collection '%s'", (uint8_t *)v13, 0x16u);
  swift_arrayDestroy(v14, 2, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v14, -1, -1);
  v20 = v13;
LABEL_12:
  swift_slowDealloc(v20, -1, -1);

LABEL_16:
  sub_100647E44(a3, a4, 1);
}

double sub_100648E80(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double result;
  __int128 v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  sub_10000B5E4(a1, (uint64_t)&v34, (uint64_t *)&unk_1009D04E0);
  if (!*((_QWORD *)&v35 + 1))
  {
    sub_100010960((uint64_t)&v34, (uint64_t *)&unk_1009D04E0);
    goto LABEL_6;
  }
  v2 = sub_100009E04(0, (unint64_t *)&qword_1009D3180, UICommand_ptr);
  if ((swift_dynamicCast(&v33, &v34, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_6:
    v36 = 0u;
    v37 = 0u;
LABEL_7:
    sub_100010960((uint64_t)&v36, (uint64_t *)&unk_1009D04E0);
    goto LABEL_8;
  }
  v3 = v33;
  v4 = objc_msgSend(v33, "propertyList");

  if (v4)
  {
    _bridgeAnyObjectToAny(_:)(v4);
    swift_unknownObjectRelease(v4);
  }
  else
  {
    v34 = 0u;
    v35 = 0u;
  }
  sub_10004C7B4((uint64_t)&v34, (uint64_t)&v36);
  if (!*((_QWORD *)&v37 + 1))
    goto LABEL_7;
  if ((swift_dynamicCast(&v34, &v36, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
  {
    v16 = v34;
    v17 = sub_100646474();
    if (qword_1009CE488 != -1)
      swift_once(&qword_1009CE488, sub_10000A650);
    v18 = (void *)qword_100A1E8A8;
    sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v19 = swift_allocObject(&unk_100919850, 24, 7);
    swift_unknownObjectWeakInit(v19 + 16);
    v20 = swift_allocObject(&unk_100919878, 48, 7);
    *(_QWORD *)(v20 + 16) = v19;
    *(_OWORD *)(v20 + 24) = v16;
    *(_QWORD *)(v20 + 40) = v17;
    v21 = v18;
    swift_retain(v19);
    swift_bridgeObjectRetain(*((_QWORD *)&v16 + 1));
    swift_bridgeObjectRetain(v17);
    static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10035AD0C, v20);

    swift_release(v19);
    swift_release(v20);
    sub_100647E44(v16, *((void **)&v16 + 1), 0);
    if (qword_1009CEAE8 != -1)
      swift_once(&qword_1009CEAE8, sub_100645EF4);
    v22 = type metadata accessor for Logger(0);
    sub_100048F64(v22, (uint64_t)qword_1009F25E0);
    swift_bridgeObjectRetain(*((_QWORD *)&v16 + 1));
    swift_bridgeObjectRetain(v17);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc(22, -1);
      v27 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v36 = v27;
      *(_DWORD *)v26 = 136315394;
      v28 = sub_100009E04(0, (unint64_t *)&qword_1009E3A00, BKLibraryAsset_ptr);
      swift_bridgeObjectRetain(v17);
      v30 = Array.description.getter(v29, v28);
      v32 = v31;
      swift_bridgeObjectRelease(v17);
      *(_QWORD *)&v34 = sub_100040F58(v30, v32, (uint64_t *)&v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 8, v26 + 4, v26 + 12);
      swift_bridgeObjectRelease_n(v17, 2);
      swift_bridgeObjectRelease(v32);
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain(*((_QWORD *)&v16 + 1));
      *(_QWORD *)&v34 = sub_100040F58(v16, *((unint64_t *)&v16 + 1), (uint64_t *)&v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 8, v26 + 14, v26 + 22);
      swift_bridgeObjectRelease_n(*((_QWORD *)&v16 + 1), 3);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Added %s to collection %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy(v27, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v27, -1, -1);
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(*((_QWORD *)&v16 + 1), 2);
      *(_QWORD *)&result = swift_bridgeObjectRelease_n(v17, 2).n128_u64[0];
    }
    return result;
  }
LABEL_8:
  if (qword_1009CEAE8 != -1)
    swift_once(&qword_1009CEAE8, sub_100645EF4);
  v5 = type metadata accessor for Logger(0);
  sub_100048F64(v5, (uint64_t)qword_1009F25E0);
  v6 = sub_10000B5E4(a1, (uint64_t)&v36, (uint64_t *)&unk_1009D04E0);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.error.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (void *)swift_slowAlloc(32, -1);
    v33 = v10;
    *(_DWORD *)v9 = 136315138;
    sub_10000B5E4((uint64_t)&v36, (uint64_t)&v34, (uint64_t *)&unk_1009D04E0);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
    v12 = String.init<A>(describing:)(&v34, v11);
    v14 = v13;
    *(_QWORD *)&v34 = sub_100040F58(v12, v13, (uint64_t *)&v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 8, v9 + 4, v9 + 12);
    swift_bridgeObjectRelease(v14);
    sub_100010960((uint64_t)&v36, (uint64_t *)&unk_1009D04E0);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }
  else
  {
    sub_100010960((uint64_t)&v36, (uint64_t *)&unk_1009D04E0);
  }

  return result;
}

uint64_t sub_1006494A4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006494C8()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1006494FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

double sub_100649538(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1006486DC(a1, v1);
}

uint64_t sub_100649540()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_10064956C(uint64_t *a1)
{
  uint64_t v1;

  return sub_10064895C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_100649574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009F26C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1006495BC()
{
  _QWORD *v0;

  swift_release(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  swift_bridgeObjectRelease(v0[7]);
  return swift_deallocObject(v0, 64, 7);
}

void sub_1006495F8()
{
  uint64_t v0;

  sub_100648A14(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_100649608()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_10064962C()
{
  uint64_t v0;

  sub_100648778(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_100649640(void *a1, uint64_t a2)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;

  if (objc_msgSend(a1, "displayMode") == (id)2 && a2 == 1)
  {
    v5 = objc_msgSend(a1, "viewControllerForColumn:", 0);
    if (v5)
    {
      v28 = v5;
      v6 = objc_msgSend(v5, "presentedViewController");
      if (v6)
      {
        v7 = v6;
        v8 = objc_msgSend(v6, "presentationController");

        if (v8)
        {
          v9 = objc_opt_self(UIPopoverPresentationController);
          v10 = (void *)swift_dynamicCastObjCClass(v8, v9);
          if (v10)
          {
            v11 = v10;
            v12 = objc_msgSend(v10, "presentedViewController");
            v13 = objc_msgSend(v12, "presentingViewController");

            if (v13)
            {
              v14 = objc_msgSend(v11, "sourceView");
              if (v14)
              {
                v15 = v14;
                v16 = objc_msgSend(v28, "viewIfLoaded");
                if (v16)
                {
                  v17 = v16;
                  if (objc_msgSend(v15, "isDescendantOfView:", v16))
                  {
                    v18 = objc_msgSend(a1, "transitionCoordinator");
                    if (v18)
                    {
                      v19 = v18;
                      v20 = (uint64_t)objc_msgSend(v18, "isAnimated");
                      swift_unknownObjectRelease(v19);
                    }
                    else
                    {
                      v20 = 1;
                    }
                    objc_msgSend(v13, "dismissViewControllerAnimated:completion:", v20, 0);
                    v24 = v17;
                    v25 = v15;
                    v26 = v28;
                  }
                  else
                  {
                    v24 = v28;
                    v25 = v8;
                    v8 = v15;
                    v26 = v17;
                  }
                  v15 = v26;
                  v27 = v8;

                  v23 = v25;
                  v8 = v13;
                  v13 = v27;
                }
                else
                {
                  v23 = v28;
                }

                v22 = v8;
                v8 = v13;
                v13 = v15;
              }
              else
              {
                v22 = v28;
              }

              v21 = v8;
              v28 = v13;
            }
            else
            {
              v21 = v28;
              v28 = v8;
            }
          }
          else
          {
            v21 = v8;
          }

        }
      }

    }
  }
}

uint64_t sub_10064988C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1006498B0()
{
  uint64_t v0;

  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, *(id *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___BKSplitViewController_contentHostingController)+ OBJC_IVAR___BKSplitViewContentHostingController_viewController));
}

uint64_t sub_1006498E4(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v11 = swift_retain(a2);
    a1(v11);
    return swift_release(a2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006499DC(void (*a1)(uint64_t *__return_ptr, __n128), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v11 = swift_retain(a2);
    a1(&v13, v11);
    swift_release(a2);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100649AD0(void (*a1)(uint64_t *__return_ptr, __n128), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  __n128 v11;
  uint64_t v12;

  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter(v8);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v9 = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v9 & 1) != 0)
  {
    v11 = swift_retain(a2);
    a1(&v12, v11);
    swift_release(a2);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100649BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009F26F0);
  sub_100048F64(v0, (uint64_t)qword_1009F26F0);
  v5 = type metadata accessor for BookReaderAccessoryHighlightsController(0);
  v1 = sub_10004CFD4(&qword_1009F2888);
  v2 = String.init<A>(describing:)(&v5, v1);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, v2, v3);
}

uint64_t sub_100649C5C()
{
  uint64_t (*__ptr32 *v0)();
  uint64_t (*__ptr32 *v1)();
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  void *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t Strong;
  uint64_t v36;
  uint64_t v37;
  uint64_t ObjectType;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v59)(char *, uint64_t);
  uint64_t *v60;
  uint64_t v61;
  uint64_t (*__ptr32 *v62)();
  NSObject *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  os_log_type_t v67;
  int v68;
  _BOOL4 v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (**v86)();
  char *v87;
  unint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  __n128 v92;
  uint64_t v93;
  uint64_t (*v94)(char *, unint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  os_log_type_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint8_t *v112;
  uint64_t v113;
  uint64_t v114;
  NSObject *v115;
  char *v116;
  os_log_type_t v117;
  uint64_t (*__ptr32 *v118)();
  uint64_t v119;
  char *v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  __n128 v124;
  void *v125;
  char *v126;
  __n128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  double v133;
  BOOL v134;
  uint64_t v135;
  uint64_t v136;
  NSObject *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  os_log_type_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  __n128 v155;
  char *v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  __n128 v161;
  uint64_t v162;
  void (*v163)(char *, char *, uint64_t, __n128);
  _QWORD *v164;
  uint64_t v165;
  __n128 v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  __n128 v172;
  char *v173;
  void (*v174)(uint64_t, uint64_t);
  char *v175;
  char *v176;
  uint64_t v177;
  __int128 v178;
  unint64_t v179;
  unint64_t v180;
  _QWORD *v181;
  uint64_t (*__ptr32 *v182)();
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  char *v186;
  __n128 v187;
  char *v188;
  char *v189;
  uint64_t (*v190)(char *, char *, uint64_t);
  char *v191;
  uint64_t v192;
  NSObject *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  os_log_type_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  __n128 v204;
  _QWORD *v205;
  uint64_t (*__ptr32 *v206)();
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  char v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  __n128 v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t (*v224)(char *, char *, uint64_t, __n128);
  uint64_t v225;
  uint64_t v226;
  void (*v227)(char *, uint64_t);
  __n128 v228;
  __n128 v229;
  char *v230;
  uint64_t v231;
  void *v232;
  char *v233;
  uint64_t v234;
  id v235;
  void *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  __n128 v245;
  char *v246;
  uint64_t v247;
  void (*v248)(uint64_t, uint64_t);
  uint64_t v249;
  char *v250;
  uint64_t v251;
  unint64_t v252;
  unint64_t v253;
  _QWORD *v254;
  double v255;
  __n128 v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  void *v265;
  void *v266;
  uint64_t (*__ptr32 *v267)();
  uint64_t v268;
  char *v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  unint64_t v281;
  uint64_t v282;
  char *v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  uint64_t v289;
  char *v290;
  char *v291;
  id v292;
  void *v293;
  uint64_t v294;
  id v295;
  char *v296;
  uint64_t (*__ptr32 *v297)();
  __int128 v298;
  char *v299;
  char *v300;
  char *v301;
  __int128 v302;
  char *v303;
  __n128 v304;
  uint64_t (*__ptr32 *v305)();
  uint64_t (*v306)(char *, char *, uint64_t, __n128);
  void (*v307)(char *, uint64_t);
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t (*v311)(char *, char *, uint64_t);
  uint64_t v312;
  uint64_t v313;
  char *v314;
  char *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  char *v319;
  __int128 v320;
  uint64_t v321;
  uint64_t (*__ptr32 *v322)();
  void *v323;
  char v324[8];
  char v325[24];

  v1 = v0;
  v2 = type metadata accessor for SelectionInfo.ID(0);
  v272 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v271 = (char *)&v268 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v4);
  v270 = (uint64_t)&v268 - v6;
  v274 = type metadata accessor for SelectionInfo(0, v5);
  v273 = *(_QWORD *)(v274 - 8);
  __chkstk_darwin(v274);
  v8 = (char *)&v268 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v291 = (char *)&v268 - v10;
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D2AA0);
  __chkstk_darwin(v11);
  v284 = (char *)&v268 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v316 = (char *)&v268 - v14;
  v313 = sub_10004CFD4((uint64_t *)&unk_1009E7640);
  v318 = *(_QWORD *)(v313 - 8);
  __chkstk_darwin(v313);
  v276 = (char *)&v268 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v311 = (uint64_t (*)(char *, char *, uint64_t))((char *)&v268 - v17);
  v312 = sub_10004CFD4(&qword_1009D2AD0);
  v317 = *(_QWORD *)(v312 - 8);
  __chkstk_darwin(v312);
  v19 = (char *)&v268 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v289 = type metadata accessor for PageLocation(0);
  v290 = *(char **)(v289 - 8);
  __chkstk_darwin(v289);
  v301 = (char *)&v268 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v283 = (char *)&v268 - v22;
  v23 = type metadata accessor for BookContentAdornmentState(0);
  v24 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v26 = (char *)&v268 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = type metadata accessor for Date(0);
  v280 = *(_QWORD *)(v279 - 8);
  __chkstk_darwin(v279);
  v278 = (uint64_t)&v268 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()(v28);
  v29 = (char *)v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState;
  v30 = swift_beginAccess((char *)v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState, v325, 0, 0);
  v306 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v24 + 16);
  v31 = v306(v26, v29, v23, v30);
  v32 = (void *)BookContentAdornmentState.contentAccessoryView.getter(v31);
  v33 = *(void (**)(char *, uint64_t))(v24 + 8);
  v308 = v23;
  v307 = v33;
  v33(v26, v23);
  if (!v32)
  {
LABEL_9:
    if (qword_1009CEAF0 != -1)
      goto LABEL_114;
    goto LABEL_10;
  }
  v275 = v32;
  v34 = (char *)v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService);
  if (!Strong)
    goto LABEL_8;
  v36 = Strong;
  v37 = *((_QWORD *)v34 + 1);
  ObjectType = swift_getObjectType();
  v39 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v37);
  swift_unknownObjectRelease(v36);
  v40 = *(char **)((char *)v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal);
  v41 = BookPaginationEntity.document(for:)(v40);
  swift_release(v39);
  v287 = v41;
  if (!v41)
  {
LABEL_8:

    goto LABEL_9;
  }
  if (qword_1009CEAF0 != -1)
    swift_once(&qword_1009CEAF0, sub_100649BC4);
  v42 = type metadata accessor for Logger(0);
  v43 = sub_100048F64(v42, (uint64_t)qword_1009F26F0);
  v1 = v1;
  v309 = v43;
  v44 = Logger.logObject.getter(v1);
  v48 = static os_log_type_t.debug.getter(v44, v45, v46, v47);
  v49 = os_log_type_enabled(v44, v48);
  v285 = v8;
  if (v49)
  {
    v50 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v50 = 134217984;
    v319 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v319, &v320, v50 + 4, v50 + 12);

    _os_log_impl((void *)&_mh_execute_header, v44, v48, "Removing all highlights for ordinal: %ld", v50, 0xCu);
    swift_slowDealloc(v50, -1, -1);
  }
  else
  {

  }
  v59 = v307;

  v292 = *(id *)((char *)v1
               + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_highlightRenderingController);
  objc_msgSend(v292, "removeAll");
  v60 = (uint64_t *)((char *)v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentHighlights);
  swift_beginAccess((char *)v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentHighlights, v324, 1, 0);
  v61 = *v60;
  *v60 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v61);
  if (*((_BYTE *)v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_layoutIsReady) != 1)
  {
    swift_release(v287);

    goto LABEL_13;
  }
  v62 = v1;
  v63 = Logger.logObject.getter(v62);
  v67 = static os_log_type_t.debug.getter(v63, v64, v65, v66);
  v68 = v67;
  v69 = os_log_type_enabled(v63, v67);
  v305 = v62;
  v268 = v2;
  if (v69)
  {
    v70 = swift_slowAlloc(22, -1);
    *(_DWORD *)v70 = 134218240;
    v310 = v70 + 4;
    v71 = v29;
    v72 = v29;
    v73 = v308;
    v314 = v40;
    v74 = ((uint64_t (*)(char *, char *, uint64_t))v306)(v26, v71, v308);
    LODWORD(v315) = v68;
    v75 = BookContentAdornmentState.pageLocations.getter(v74);
    v59(v26, v73);
    v76 = *(_QWORD *)(v75 + 16);
    swift_bridgeObjectRelease(v75);

    v319 = (char *)v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v319, &v320, v310, v70 + 12);

    *(_WORD *)(v70 + 12) = 2048;
    v319 = v314;
    v77 = v307;
    v78 = (uint64_t (*)(char *, char *, uint64_t))v306;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v319, &v320, v70 + 14, v70 + 22);

    _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v315, "Processing %ld page(s) in ordinal: %ld", (uint8_t *)v70, 0x16u);
    swift_slowDealloc(v70, -1, -1);
    v79 = v313;
  }
  else
  {

    v77 = v59;
    v79 = v313;
    v72 = v29;
    v73 = v308;
    v78 = (uint64_t (*)(char *, char *, uint64_t))v306;
  }
  v80 = v312;

  v300 = v72;
  v81 = v78(v26, v72, v73);
  v82 = BookContentAdornmentState.pageLocations.getter(v81);
  v77(v26, v73);
  v84 = v82;
  v85 = *(_QWORD *)(v82 + 16);
  v86 = &off_1009F2000;
  v1 = &off_10070C000;
  v299 = v26;
  v87 = v301;
  v282 = v85;
  if (!v85)
  {
    swift_bridgeObjectRelease(v84);
    goto LABEL_71;
  }
  v88 = 0;
  v315 = (char *)v305 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_contentLayoutController;
  v281 = v84 + ((v290[80] + 32) & ~(unint64_t)v290[80]);
  *(_QWORD *)&v83 = 136315138;
  v298 = v83;
  v269 = (char *)&type metadata for Any + 8;
  v89 = v300;
  v90 = v289;
  v91 = v283;
  v277 = v84;
  while (1)
  {
    if (v88 >= *(_QWORD *)(v84 + 16))
      goto LABEL_113;
    v93 = *((_QWORD *)v290 + 9);
    v288 = v88;
    v94 = (uint64_t (*)(char *, unint64_t, uint64_t))*((_QWORD *)v290 + 2);
    v95 = v94(v91, v281 + v93 * v88, v90);
    v96 = PageLocation.pageOffset.getter(v95);
    v97 = dispatch thunk of DocumentPaginationEntity.page(forPageOffset:)(v96);
    if (!v97)
    {
      v114 = v94(v87, (unint64_t)v91, v90);
      v115 = Logger.logObject.getter(v114);
      v116 = v87;
      v117 = static os_log_type_t.error.getter(v115);
      if (os_log_type_enabled(v115, v117))
      {
        v118 = (uint64_t (*__ptr32 *)())swift_slowAlloc(12, -1);
        v314 = (char *)swift_slowAlloc(32, -1);
        v319 = v314;
        *v118 = (uint64_t (*__ptr32)())v298;
        v304.n128_u64[0] = (unint64_t)v115;
        v1 = v118;
        v119 = sub_100008DB0((unint64_t *)&qword_1009E6EF0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
        v120 = v116;
        v121 = dispatch thunk of CustomStringConvertible.description.getter(v90, v119);
        v123 = v122;
        *(_QWORD *)(v1 + 1) = sub_100040F58(v121, v122, (uint64_t *)&v319);
        v124 = swift_bridgeObjectRelease(v123);
        v310 = *((_QWORD *)v290 + 1);
        ((void (*)(char *, uint64_t, __n128))v310)(v120, v90, v124);
        v125 = (void *)v304.n128_u64[0];
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v304.n128_u64[0], v117, "Unable to update highlights for %s: cannot find PagePaginationEntity", (uint8_t *)v1, 0xCu);
        v126 = v314;
        swift_arrayDestroy(v314, 1, v269);
        v80 = v312;
        swift_slowDealloc(v126, -1, -1);
        swift_slowDealloc(v1, -1, -1);

        ((void (*)(char *, uint64_t))v310)(v91, v90);
        v87 = v301;
      }
      else
      {

        v1 = (uint64_t (*__ptr32 *)())*((_QWORD *)v290 + 1);
        ((void (*)(char *, uint64_t))v1)(v116, v90);
        ((void (*)(char *, uint64_t))v1)(v91, v90);
        v87 = v116;
      }
      goto LABEL_24;
    }
    v98 = v97;
    v99 = swift_retain_n(v97, 2);
    v1 = (uint64_t (*__ptr32 *)())Logger.logObject.getter(v99);
    v103 = static os_log_type_t.debug.getter(v1, v100, v101, v102);
    if (os_log_type_enabled((os_log_t)v1, v103))
    {
      v104 = (char *)swift_slowAlloc(12, -1);
      v314 = v104;
      v105 = swift_slowAlloc(32, -1);
      v319 = (char *)v105;
      *(_DWORD *)v104 = v298;
      v322 = (uint64_t (*__ptr32 *)())v98;
      v106 = type metadata accessor for PagePaginationEntity(0);
      v107 = sub_100008DB0(&qword_1009F28D0, (uint64_t (*)(uint64_t))&type metadata accessor for PagePaginationEntity, (uint64_t)&protocol conformance descriptor for PagePaginationEntity);
      v108 = dispatch thunk of CustomStringConvertible.description.getter(v106, v107);
      v110 = v109;
      v111 = sub_100040F58(v108, v109, (uint64_t *)&v319);
      v112 = (uint8_t *)v314;
      *(_QWORD *)(v314 + 4) = v111;
      swift_bridgeObjectRelease(v110);
      swift_release_n(v98, 2);
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v1, v103, "Processing page: %s", v112, 0xCu);
      swift_arrayDestroy(v105, 1, (char *)&type metadata for Any + 8);
      v113 = v105;
      v80 = v312;
      swift_slowDealloc(v113, -1, -1);
      swift_slowDealloc(v112, -1, -1);
    }
    else
    {
      swift_release_n(v98, 2);
    }

    v286 = v98;
    v128 = dispatch thunk of PagePaginationEntity.highlightPaginationEntityReferences.getter(v127);
    v129 = v128;
    v87 = v301;
    if (!((unint64_t)v128 >> 62))
    {
      v130 = *(_QWORD *)((v128 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v130)
        break;
      goto LABEL_23;
    }
    if (v128 >= 0)
      v128 &= 0xFFFFFFFFFFFFFF8uLL;
    v130 = _CocoaArrayWrapper.endIndex.getter(v128);
    if (v130)
      break;
LABEL_23:
    swift_release(v286);
    v92 = swift_bridgeObjectRelease(v129);
    v91 = v283;
    (*((void (**)(char *, uint64_t, __n128))v290 + 1))(v283, v289, v92);
LABEL_24:
    v88 = v288 + 1;
    v90 = v289;
    v84 = v277;
    if (v288 + 1 == v282)
    {
      swift_bridgeObjectRelease(v277);
      v1 = &off_10070C000;
      v86 = &off_1009F2000;
LABEL_71:
      v323 = &_swiftEmptySetSingleton;
      v182 = v305;
      v183 = *(_QWORD *)((char *)v305 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_selectionInfos);
      v184 = v274;
      v185 = (_QWORD *)v273;
      v316 = *(char **)(v183 + 16);
      if (!v316)
      {
LABEL_107:
        v260 = (char *)v182
             + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_selectionHighlightController;
        v261 = swift_unknownObjectWeakLoadStrong((char *)v182+ OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_selectionHighlightController);
        if (v261)
        {
          v262 = v261;
          v263 = *((_QWORD *)v260 + 1);
          v264 = swift_getObjectType();
          v265 = v323;
          dispatch thunk of SelectionHighlighting.setDisplayedSelections(_:)(v323, v264, v263);
          swift_unknownObjectRelease(v262);
        }
        else
        {
          v265 = v323;
        }
        v57 = v279;
        swift_bridgeObjectRelease(v265);
        v266 = v275;
        v267 = v305;
        sub_10064DF28(v275);

        swift_release(v287);
        v56 = v278;
        sub_10064E8CC(v278, v267);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v280 + 8))(v56, v57);
      }
      v186 = (char *)v305 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_resolveStates;
      v314 = (char *)(v183
                    + ((*(unsigned __int8 *)(v273 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v273 + 80)));
      v296 = (char *)v86[238] + (_QWORD)v305;
      v294 = v183;
      swift_bridgeObjectRetain(v183);
      v315 = v186;
      v187 = swift_beginAccess(v186, &v322, 0, 0);
      v188 = 0;
      v312 = v185[9];
      v311 = (uint64_t (*)(char *, char *, uint64_t))v185[2];
      v187.n128_u64[0] = *((_QWORD *)v1 + 397);
      v304 = v187;
      v303 = (char *)&type metadata for Any + 8;
      while (1)
      {
        v189 = v291;
        v190 = v311;
        v311(v291, &v314[(_QWORD)v188 * v312], v184);
        v191 = v285;
        v192 = v190(v285, v189, v184);
        v193 = Logger.logObject.getter(v192);
        v197 = static os_log_type_t.debug.getter(v193, v194, v195, v196);
        if (os_log_type_enabled(v193, v197))
        {
          v198 = swift_slowAlloc(12, -1);
          v199 = swift_slowAlloc(32, -1);
          v319 = (char *)v199;
          *(_DWORD *)v198 = v304.n128_u32[0];
          v200 = sub_100008DB0((unint64_t *)&unk_1009F28B8, (uint64_t (*)(uint64_t))&type metadata accessor for SelectionInfo, (uint64_t)&protocol conformance descriptor for SelectionInfo);
          v201 = dispatch thunk of CustomStringConvertible.description.getter(v184, v200);
          v203 = v202;
          *(_QWORD *)(v198 + 4) = sub_100040F58(v201, v202, (uint64_t *)&v319);
          v204 = swift_bridgeObjectRelease(v203);
          v205 = v185;
          v206 = (uint64_t (*__ptr32 *)())v185[1];
          ((void (*)(char *, uint64_t, __n128))v206)(v191, v184, v204);
          _os_log_impl((void *)&_mh_execute_header, v193, v197, "Processing selection info: %s", (uint8_t *)v198, 0xCu);
          swift_arrayDestroy(v199, 1, v303);
          swift_slowDealloc(v199, -1, -1);
          swift_slowDealloc(v198, -1, -1);
        }
        else
        {
          v205 = v185;
          v206 = (uint64_t (*__ptr32 *)())v185[1];
          ((void (*)(char *, uint64_t))v206)(v191, v184);
        }

        v208 = SelectionInfo.cfi.getter(v207);
        v210 = v209;
        v211 = *(_QWORD *)v315;
        if (!*(_QWORD *)(*(_QWORD *)v315 + 16))
          goto LABEL_82;
        v212 = v208;
        swift_bridgeObjectRetain(*(_QWORD *)v315);
        v213 = sub_10004CE80(v212, v210);
        if ((v214 & 1) == 0)
          break;
        v215 = *(_QWORD *)(v211 + 56) + 24 * v213;
        v216 = *(_QWORD *)v215;
        v217 = *(_QWORD *)(v215 + 8);
        v218 = *(_BYTE *)(v215 + 16);
        sub_1001E160C(*(_QWORD *)v215, v217, v218);
        swift_bridgeObjectRelease(v211);
        v219 = swift_bridgeObjectRelease(v210);
        v220 = v308;
        if ((v218 & 1) == 0)
        {
          sub_1002C7FE8(v216, v217, 0);
LABEL_83:
          v230 = v291;
          goto LABEL_84;
        }
        *(_QWORD *)&v298 = v216;
        v297 = v206;
        v221 = v299;
        v222 = v300;
        v223 = v217;
        v224 = v306;
        v225 = v306(v299, v300, v308, v219);
        v226 = BookContentAdornmentState.pageLocations.getter(v225);
        v227 = v307;
        v307(v221, v220);
        v301 = (char *)v223;
        LOBYTE(v223) = sub_10064F304(v226, v223);
        v228 = swift_bridgeObjectRelease(v226);
        if ((v223 & 1) == 0)
        {
          v231 = v224(v221, v222, v220, v228);
          v232 = (void *)BookContentAdornmentState.contentAccessoryView.getter(v231);
          v227(v221, v220);
          v206 = v297;
          v233 = v301;
          v234 = v298;
          if (v232)
          {
            v235 = sub_10064EDF8();
            if (v235)
            {
              v236 = v235;
              v237 = *(_QWORD *)(v234 + 16);
              v293 = v232;
              if (v237)
              {
                v238 = v234;
                v239 = v234
                     + ((*(unsigned __int8 *)(v317 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v317 + 80));
                v310 = *(_QWORD *)(v317 + 72);
                v290 = v305;
                v295 = v232;
                swift_bridgeObjectRetain(v238);
                v240 = _swiftEmptyArrayStorage;
                v241 = v296;
                while (1)
                {
                  v243 = swift_weakLoadStrong(v241);
                  if (v243)
                  {
                    v244 = v243;
                    v242 = (uint64_t)v284;
                    dispatch thunk of BookContentLayoutController.convertToUI(_:)(v239);
                    v245 = swift_release(v244);
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v318 + 48))(v242, 1, v313, v245) != 1)
                    {
                      v246 = v276;
                      v247 = v242;
                      RelativeValue<>.converted(to:)(v295);
                      v248 = *(void (**)(uint64_t, uint64_t))(v318 + 8);
                      v249 = v313;
                      v248(v247, v313);
                      RelativeValue.value.getter(&v319, v249);
                      v248((uint64_t)v246, v249);
                      v250 = v319;
                      v302 = v320;
                      v251 = v321;
                      if ((swift_isUniquelyReferenced_nonNull_native(v240) & 1) == 0)
                        v240 = sub_1005B06B8(0, v240[2] + 1, 1, v240);
                      v253 = v240[2];
                      v252 = v240[3];
                      v241 = v296;
                      if (v253 >= v252 >> 1)
                        v240 = sub_1005B06B8((_QWORD *)(v252 > 1), v253 + 1, 1, v240);
                      v240[2] = v253 + 1;
                      v254 = &v240[4 * v253];
                      v254[4] = v250;
                      *(_OWORD *)(v254 + 5) = v302;
                      v254[7] = v251;
                      goto LABEL_94;
                    }
                  }
                  else
                  {
                    v242 = (uint64_t)v284;
                    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v318 + 56))(v284, 1, 1, v313);
                  }
                  sub_100010960(v242, (uint64_t *)&unk_1009D2AA0);
LABEL_94:
                  v239 += v310;
                  if (!--v237)
                  {
                    v234 = v298;
                    swift_bridgeObjectRelease(v298);

                    goto LABEL_104;
                  }
                }
              }
              v240 = _swiftEmptyArrayStorage;
LABEL_104:
              sub_10064D7FC((uint64_t)v240, v236);
              *(_QWORD *)&v255 = swift_bridgeObjectRelease(v240).n128_u64[0];
              objc_msgSend(v292, "updatedHighlight:forceRerender:", v236, 1, v255);

              v184 = v274;
              v205 = (_QWORD *)v273;
              v233 = v301;
              v232 = v293;
            }

          }
          swift_bridgeObjectRelease(v234);
          v256 = swift_bridgeObjectRelease(v233);
          v257 = (uint64_t)v271;
          v258 = v291;
          SelectionInfo.id.getter(v256);
          v259 = v270;
          sub_10060C550(v270, v257);
          (*(void (**)(uint64_t, uint64_t))(v272 + 8))(v259, v268);
          v230 = v258;
LABEL_84:
          ((void (*)(char *, uint64_t, __n128))v206)(v230, v184, v229);
          goto LABEL_85;
        }
        ((void (*)(char *, uint64_t, __n128))v297)(v291, v184, v228);
        swift_bridgeObjectRelease(v298);
        swift_bridgeObjectRelease(v301);
LABEL_85:
        ++v188;
        v185 = v205;
        if (v188 == v316)
        {
          swift_bridgeObjectRelease(v294);
          v182 = v305;
          goto LABEL_107;
        }
      }
      swift_bridgeObjectRelease(v211);
LABEL_82:
      v229 = swift_bridgeObjectRelease(v210);
      goto LABEL_83;
    }
  }
  v131 = 0;
  v304.n128_u64[0] = v129 & 0xC000000000000001;
  v294 = v129 & 0xFFFFFFFFFFFFFF8;
  v293 = (void *)(v129 + 32);
  *(_QWORD *)&v302 = v130;
  v303 = (char *)v129;
  while (1)
  {
    if (v304.n128_u64[0])
    {
      v1 = (uint64_t (*__ptr32 *)())specialized _ArrayBuffer._getElementSlowPath(_:)(v131, v129);
      v134 = __OFADD__(v131, 1);
      v135 = v131 + 1;
      if (v134)
        break;
      goto LABEL_45;
    }
    if (v131 >= *(_QWORD *)(v294 + 16))
      goto LABEL_112;
    v1 = (uint64_t (*__ptr32 *)())*((_QWORD *)v293 + v131);
    swift_retain(v1);
    v134 = __OFADD__(v131, 1);
    v135 = v131 + 1;
    if (v134)
      break;
LABEL_45:
    v310 = v135;
    v136 = swift_retain_n(v1, 2);
    v137 = Logger.logObject.getter(v136);
    v141 = static os_log_type_t.debug.getter(v137, v138, v139, v140);
    if (os_log_type_enabled(v137, v141))
    {
      v142 = swift_slowAlloc(12, -1);
      v143 = swift_slowAlloc(32, -1);
      v319 = (char *)v143;
      *(_DWORD *)v142 = v298;
      v322 = v1;
      v144 = type metadata accessor for HighlightPaginationEntityReference(0);
      v145 = sub_100008DB0(&qword_1009F28C8, (uint64_t (*)(uint64_t))&type metadata accessor for HighlightPaginationEntityReference, (uint64_t)&protocol conformance descriptor for ElementPaginationEntityReference);
      v146 = v144;
      v89 = v300;
      v147 = dispatch thunk of CustomStringConvertible.description.getter(v146, v145);
      v149 = v148;
      *(_QWORD *)(v142 + 4) = sub_100040F58(v147, v148, (uint64_t *)&v319);
      swift_bridgeObjectRelease(v149);
      swift_release_n(v1, 2);
      _os_log_impl((void *)&_mh_execute_header, v137, v141, "Processing highlight reference: %s", (uint8_t *)v142, 0xCu);
      swift_arrayDestroy(v143, 1, (char *)&type metadata for Any + 8);
      v150 = v143;
      v26 = v299;
      swift_slowDealloc(v150, -1, -1);
      v151 = v142;
      v87 = v301;
      swift_slowDealloc(v151, -1, -1);
    }
    else
    {
      swift_release_n(v1, 2);
    }

    v152 = v308;
    v153 = ((uint64_t (*)(char *, char *, uint64_t))v306)(v26, v89, v308);
    v154 = (char *)BookContentAdornmentState.contentAccessoryView.getter(v153);
    v307(v26, v152);
    v131 = v310;
    v314 = v154;
    if (v154)
    {
      v156 = (char *)sub_10064EA64(v155);
      if (v156)
      {
        v132 = v156;
        v157 = (_QWORD *)ElementPaginationEntityReference.rects.getter();
        v158 = v157[2];
        if (v158)
        {
          v296 = v132;
          v297 = v1;
          v159 = v317;
          v160 = (char *)v157
               + ((*(unsigned __int8 *)(v317 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v317 + 80));
          v295 = v157;
          v161 = swift_bridgeObjectRetain(v157);
          v162 = *(_QWORD *)(v159 + 72);
          v163 = *(void (**)(char *, char *, uint64_t, __n128))(v159 + 16);
          v164 = _swiftEmptyArrayStorage;
          v163(v19, v160, v80, v161);
          while (1)
          {
            v167 = swift_weakLoadStrong(v315);
            if (!v167)
              break;
            v168 = v167;
            v169 = v19;
            v170 = v316;
            dispatch thunk of BookContentLayoutController.convertToUI(_:)(v169);
            v171 = v168;
            v165 = (uint64_t)v170;
            v19 = v169;
            v172 = swift_release(v171);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v318 + 48))(v165, 1, v79, v172) == 1)
              goto LABEL_53;
            v173 = (char *)v311;
            RelativeValue<>.converted(to:)(v314);
            v174 = *(void (**)(uint64_t, uint64_t))(v318 + 8);
            v174(v165, v79);
            RelativeValue.value.getter(&v319, v79);
            v175 = v173;
            v80 = v312;
            v174((uint64_t)v175, v79);
            v19 = v169;
            v176 = v319;
            v178 = v320;
            v177 = v321;
            (*(void (**)(char *, uint64_t))(v317 + 8))(v169, v80);
            if ((swift_isUniquelyReferenced_nonNull_native(v164) & 1) == 0)
              v164 = sub_1005B06B8(0, v164[2] + 1, 1, v164);
            v180 = v164[2];
            v179 = v164[3];
            if (v180 >= v179 >> 1)
              v164 = sub_1005B06B8((_QWORD *)(v179 > 1), v180 + 1, 1, v164);
            v164[2] = v180 + 1;
            v181 = &v164[4 * v180];
            v181[4] = v176;
            *(_OWORD *)(v181 + 5) = v178;
            v181[7] = v177;
            v79 = v313;
LABEL_54:
            v160 += v162;
            if (!--v158)
            {
              swift_bridgeObjectRelease_n(v295, 2);
              v26 = v299;
              v131 = v310;
              v1 = v297;
              v132 = v296;
              goto LABEL_36;
            }
            v163(v19, v160, v80, v166);
          }
          v165 = (uint64_t)v316;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v318 + 56))(v316, 1, 1, v79);
LABEL_53:
          sub_100010960(v165, (uint64_t *)&unk_1009D2AA0);
          (*(void (**)(char *, uint64_t))(v317 + 8))(v19, v80);
          goto LABEL_54;
        }
        swift_bridgeObjectRelease(v157);
        v164 = _swiftEmptyArrayStorage;
LABEL_36:
        sub_10064D7FC((uint64_t)v164, v132);
        *(_QWORD *)&v133 = swift_bridgeObjectRelease(v164).n128_u64[0];
        objc_msgSend(v292, "updatedHighlight:forceRerender:", v132, 1, v133);

        v89 = v300;
        v87 = v301;
      }

    }
    swift_release(v1);
    v129 = (uint64_t)v303;
    if (v131 == (_QWORD)v302)
      goto LABEL_23;
  }
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  swift_once(&qword_1009CEAF0, sub_100649BC4);
LABEL_10:
  v51 = type metadata accessor for Logger(0);
  v52 = sub_100048F64(v51, (uint64_t)qword_1009F26F0);
  v53 = Logger.logObject.getter(v52);
  v54 = static os_log_type_t.error.getter(v53);
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v55 = 0;
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "Unable to update highlights: missing containerView and/or documentPaginationEntity", v55, 2u);
    swift_slowDealloc(v55, -1, -1);
  }

LABEL_13:
  v56 = v278;
  sub_10064E8CC(v278, v1);
  v57 = v279;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v280 + 8))(v56, v57);
}

uint64_t BookReaderAccessoryHighlightsController.adornmentState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState;
  swift_beginAccess(v3, v6, 0, 0);
  v4 = type metadata accessor for BookContentAdornmentState(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t BookReaderAccessoryHighlightsController.adornmentState.setter(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  __n128 v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  char v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[24];
  _BYTE v19[24];

  v3 = type metadata accessor for BookContentAdornmentState(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v9 = &v18[-v8];
  v10 = v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState;
  v11 = swift_beginAccess(v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState, v19, 0, 0);
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v4 + 16);
  v12(v9, v10, v3, v11);
  v13 = swift_beginAccess(v10, v18, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v4 + 24))(v10, a1, v3, v13);
  swift_endAccess(v18);
  ((void (*)(_BYTE *, uint64_t, uint64_t))v12)(v6, v10, v3);
  v14 = sub_100008DB0(&qword_1009E3BD8, (uint64_t (*)(uint64_t))&type metadata accessor for BookContentAdornmentState, (uint64_t)&protocol conformance descriptor for BookContentAdornmentState);
  v15 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v6, v3, v14);
  v16 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v16(v6, v3);
  if ((v15 & 1) == 0)
    sub_100649C5C();
  v16(a1, v3);
  return ((uint64_t (*)(_BYTE *, uint64_t))v16)(v9, v3);
}

void (*BookReaderAccessoryHighlightsController.adornmentState.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  __n128 v9;
  void (*v10)(void *, uint64_t, uint64_t, __n128);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = type metadata accessor for BookContentAdornmentState(0);
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[6] = malloc(v6);
  v7 = malloc(v6);
  v3[7] = v7;
  v8 = v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState;
  v9 = swift_beginAccess(v8, v3, 0, 0);
  v10 = *(void (**)(void *, uint64_t, uint64_t, __n128))(v5 + 16);
  v3[8] = v10;
  v10(v7, v8, v4, v9);
  return sub_10064B8F4;
}

void sub_10064B8F4(uint64_t *a1, char a2)
{
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(_BYTE **)(v2 + 56);
    v5 = *(_QWORD *)(v2 + 40);
    v4 = *(_BYTE **)(v2 + 48);
    v6 = *(_QWORD *)(v2 + 32);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 64))(v4, v3, v6);
    BookReaderAccessoryHighlightsController.adornmentState.setter(v4);
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v3, v6);
  }
  else
  {
    v4 = *(_BYTE **)(v2 + 48);
    v3 = *(_BYTE **)(v2 + 56);
    BookReaderAccessoryHighlightsController.adornmentState.setter(v3);
  }
  free(v3);
  free(v4);
  free((void *)v2);
}

void sub_10064B980()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  Swift::String v4;
  uint64_t v5;
  unint64_t v6;

  v6 = 0xE000000000000000;
  _StringGuts.grow(_:)(27);
  v5 = type metadata accessor for BookReaderAccessoryHighlightsController(0);
  v0 = sub_10004CFD4(&qword_1009F2888);
  v1 = String.init<A>(describing:)(&v5, v0);
  v3 = v2;
  swift_bridgeObjectRelease(0xE000000000000000);
  v5 = v1;
  v6 = v3;
  v4._object = (void *)0x80000001007DAF20;
  v4._countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v4);
  qword_1009F2708 = v5;
  unk_1009F2710 = v6;
}

void sub_10064BA28(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  unint64_t v24;
  unint64_t v25;
  char **v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;

  v31 = a2;
  v27 = a3;
  v5 = type metadata accessor for SelectionInfo(0, a4);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v11 = (char *)&v27 - v10;
  v12 = *a1;
  v13 = (char *)_swiftEmptyArrayStorage;
  v32 = (char *)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(v12 + 16);
  v15 = swift_bridgeObjectRetain(v12);
  if (v14)
  {
    v16 = 0;
    v29 = v8;
    v30 = v12;
    v28 = v14;
    while (v16 < *(_QWORD *)(v12 + 16))
    {
      v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v18 = *(_QWORD *)(v6 + 72);
      v19 = (*(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16))(v11, v12 + v17 + v18 * v16, v5, v15);
      v20 = SelectionInfo.documentOrdinal.getter(v19);
      if ((v21 & 1) != 0 || v20 != v31)
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      }
      else
      {
        v22 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v22(v8, v11, v5);
        v23 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
        {
          sub_100366F2C(0, *((_QWORD *)v23 + 2) + 1, 1);
          v23 = v32;
        }
        v25 = *((_QWORD *)v23 + 2);
        v24 = *((_QWORD *)v23 + 3);
        if (v25 >= v24 >> 1)
        {
          sub_100366F2C(v24 > 1, v25 + 1, 1);
          v23 = v32;
        }
        *((_QWORD *)v23 + 2) = v25 + 1;
        v8 = v29;
        v22(&v23[v17 + v25 * v18], v29, v5);
        v32 = v23;
        v12 = v30;
        v14 = v28;
      }
      if (v14 == ++v16)
      {
        v13 = v32;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    v26 = v27;
    swift_bridgeObjectRelease(v12);
    *v26 = v13;
  }
}

void sub_10064BC14(uint64_t *a1, uint64_t a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t Strong;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  char v47[24];

  v5 = type metadata accessor for SelectionInfo(0, a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  a2 += 16;
  swift_beginAccess(a2, v47, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (!Strong)
    return;
  v11 = (char *)Strong;
  v12 = OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_selectionInfos;
  v13 = *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_selectionInfos);
  *(_QWORD *)(Strong + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_selectionInfos) = v9;
  swift_bridgeObjectRetain_n(v9, 2);
  v14 = sub_1004311F4(v13, v9);
  swift_bridgeObjectRelease(v9);
  if ((v14 & 1) != 0 || (sub_10064C680(1), (v41 = *(_QWORD *)(v13 + 16)) == 0))
  {
LABEL_18:

    swift_bridgeObjectRelease(v13);
    return;
  }
  v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v42 = v13 + v15;
  v16 = *(_QWORD *)(v6 + 72);
  v36 = v13;
  v17 = v15;
  v18 = swift_bridgeObjectRetain(v13);
  v19 = 0;
  v46 = v16;
  v37 = v11;
  v38 = v16 + v17;
  v35 = v6;
  v39 = v17;
  v40 = v12;
  while (1)
  {
    v20 = *(_QWORD *)&v11[v12];
    v21 = *(_QWORD *)(v20 + 16);
    if (!v21)
    {
      v13 = v36;
      v33 = v36;
      goto LABEL_22;
    }
    v22 = v42 + v46 * v19;
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v44 = v19;
    v45 = v23;
    ((void (*)(char *, unint64_t, uint64_t, __n128))v23)(v8, v20 + v17, v5, v18);
    v24 = sub_100008DB0(&qword_1009E3078, (uint64_t (*)(uint64_t))&type metadata accessor for SelectionInfo, (uint64_t)&protocol conformance descriptor for SelectionInfo);
    swift_bridgeObjectRetain(v20);
    v25 = v22;
    v26 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v22, v5, v24);
    v27 = v20;
    v28 = *(void (**)(char *, uint64_t))(v6 + 8);
    v28(v8, v5);
    if ((v26 & 1) == 0)
      break;
    v18 = swift_bridgeObjectRelease(v27);
LABEL_15:
    v17 = v39;
    v12 = v40;
    v19 = v44 + 1;
    if (v44 + 1 == v41)
    {

      swift_bridgeObjectRelease_n(v36, 2);
      return;
    }
  }
  v43 = v27;
  if (v21 == 1)
  {
    v13 = v36;
    swift_bridgeObjectRelease(v36);
    v33 = v43;
LABEL_22:
    swift_bridgeObjectRelease(v33);
LABEL_17:
    sub_100649C5C();
    goto LABEL_18;
  }
  v29 = v43 + v38;
  v30 = 1;
  while (1)
  {
    v45(v8, v29, v5);
    v31 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    v32 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v25, v5, v24);
    v28(v8, v5);
    if ((v32 & 1) != 0)
    {
      v18 = swift_bridgeObjectRelease(v43);
      v11 = v37;
      v6 = v35;
      goto LABEL_15;
    }
    ++v30;
    v29 += v46;
    if (v31 == v21)
    {
      v13 = v36;
      swift_bridgeObjectRelease(v36);
      swift_bridgeObjectRelease(v43);
      v11 = v37;
      goto LABEL_17;
    }
  }
  __break(1u);
}

void sub_10064BEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _BYTE v13[24];
  char v14[24];

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v8 = (char *)Strong;
    v9 = type metadata accessor for BookThemeEntity(0);
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(v6, a1, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    v11 = (uint64_t)&v8[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentTheme];
    swift_beginAccess(&v8[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentTheme], v13, 33, 0);
    sub_1005D0C90((uint64_t)v6, v11);
    swift_endAccess(v13);
    v12 = &v8[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentUnderlinePercent];
    *(_QWORD *)v12 = 0;
    v12[8] = 1;
    sub_10064E680();
    sub_100649C5C();

  }
}

void sub_10064C024(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_10064C680(0);

  }
  swift_beginAccess(v1, &v6, 0, 0);
  v4 = swift_unknownObjectWeakLoadStrong(v1);
  if (v4)
  {
    v5 = (void *)v4;
    sub_100649C5C();

  }
}

uint64_t sub_10064C0A4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;

  v4 = type metadata accessor for BookContentLayoutController.LayoutState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for BookContentLayoutController.LayoutState.done(_:), v4);
  LOBYTE(a1) = static BookContentLayoutController.LayoutState.== infix(_:_:)(a1, v7);
  result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = a1 & 1;
  return result;
}

void sub_10064C154(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  int v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_layoutIsReady);
    *(_BYTE *)(Strong + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_layoutIsReady) = v2;
    if (v2 != v6)
      sub_100649C5C();

  }
}

id BookReaderAccessoryHighlightsController.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *v20;
  objc_class *v21;
  uint64_t v23;
  uint64_t v24;
  objc_super v25;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_highlightRenderingController];
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  type metadata accessor for MainActor(0);
  v7 = v5;
  v8 = static MainActor.shared.getter(v7);
  v9 = (_QWORD *)swift_allocObject(&unk_1009199C8, 40, 7);
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = v7;
  v10 = sub_10030C02C((uint64_t)v4, (uint64_t)&unk_1009F2728, (uint64_t)v9);
  swift_release(v10);
  v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal];
  if (qword_1009CEAF0 != -1)
    swift_once(&qword_1009CEAF0, sub_100649BC4);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100048F64(v12, (uint64_t)qword_1009F26F0);
  v14 = Logger.logObject.getter(v13);
  v18 = static os_log_type_t.debug.getter(v14, v15, v16, v17);
  if (os_log_type_enabled(v14, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v19 = 134217984;
    v24 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25, v19 + 4, v19 + 12);
    _os_log_impl((void *)&_mh_execute_header, v14, v18, "Dealloc for ordinal:%ld", v19, 0xCu);
    swift_slowDealloc(v19, -1, -1);
    v20 = v7;
  }
  else
  {
    v20 = v14;
    v14 = v7;
  }

  v21 = (objc_class *)type metadata accessor for BookReaderAccessoryHighlightsController(0);
  v25.receiver = v1;
  v25.super_class = v21;
  return objc_msgSendSuper2(&v25, "dealloc");
}

uint64_t sub_10064C3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 16) = a4;
  v5 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v4 + 24) = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  return swift_task_switch(sub_10064C444, v6, v7);
}

uint64_t sub_10064C444()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 24));
  objc_msgSend(v1, "removeAll");
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10064C484()
{
  return sub_10000EB10(40);
}

uint64_t sub_10064C48C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc(dword_1009F2724);
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1001FC2C4;
  return sub_10064C3D8(a1, v4, v5, v6);
}

uint64_t type metadata accessor for BookReaderAccessoryHighlightsController(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F27D0;
  if (!qword_1009F27D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookReaderAccessoryHighlightsController);
  return result;
}

void sub_10064C680(char a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t *v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t ObjectType;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v63;
  unint64_t v64;
  uint64_t v65;
  _BOOL8 v66;
  uint64_t v67;
  char v68;
  unint64_t v69;
  char v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  int64_t v86;
  char v87;
  unint64_t v88;
  unint64_t v89;
  int64_t v90;
  unint64_t v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  int v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t (*v112)(char *, uint64_t, uint64_t, __n128);
  uint64_t v113;
  uint64_t v114;
  char *v115;
  unint64_t v116;
  char v117[24];
  _QWORD *v118;
  _QWORD v119[5];

  v3 = sub_10004CFD4(&qword_1009D3150);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SelectionInfo(0, v4);
  v113 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v10 = (unint64_t *)(v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_resolveStates);
    swift_beginAccess(v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_resolveStates, v117, 0, 0);
    v11 = *v10;
    swift_bridgeObjectRetain(*v10);
  }
  else
  {
    v11 = sub_1001DB96C((uint64_t)_swiftEmptyArrayStorage);
  }
  v12 = (_QWORD *)sub_1001DB96C((uint64_t)_swiftEmptyArrayStorage);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_selectionInfos);
  v14 = *(char **)(v13 + 16);
  v108 = v1;
  v116 = v11;
  if (!v14)
    goto LABEL_42;
  v15 = v13 + ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80));
  v109 = *(_QWORD *)(v113 + 72);
  v112 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v113 + 16);
  v105 = v13;
  v16 = swift_bridgeObjectRetain(v13);
  v106 = v6;
  v107 = (char *)&type metadata for () + 8;
  v110 = v9;
  v111 = v7;
  do
  {
    v21 = v112(v9, v15, v7, v16);
    v23 = SelectionInfo.cfi.getter(v21);
    v24 = v22;
    v25 = v116;
    v26 = *(_QWORD *)(v116 + 16);
    v114 = v15;
    v115 = v14;
    if (!v26)
      goto LABEL_17;
    swift_bridgeObjectRetain(v22);
    v27 = sub_10004CE80(v23, v24);
    if ((v28 & 1) == 0)
    {
      swift_bridgeObjectRelease(v24);
LABEL_17:
      v43 = type metadata accessor for TaskPriority(0);
      v44 = v23;
      v45 = *(_QWORD *)(v43 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v6, 1, 1, v43);
      v46 = swift_allocObject(&unk_100919B50, 24, 7);
      swift_unknownObjectWeakInit(v46 + 16);
      type metadata accessor for MainActor(0);
      swift_bridgeObjectRetain(v24);
      swift_retain(v46);
      v48 = static MainActor.shared.getter(v47);
      v49 = (_QWORD *)swift_allocObject(&unk_100919BA0, 56, 7);
      v49[2] = v48;
      v49[3] = &protocol witness table for MainActor;
      v49[4] = v46;
      v49[5] = v44;
      v49[6] = v24;
      v50 = swift_release(v46);
      v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v45 + 48))(v6, 1, v43, v50);
      if ((_DWORD)v51 == 1)
      {
        sub_100010960((uint64_t)v6, &qword_1009D3150);
        v52 = 0;
        v53 = v49[2];
        if (!v53)
          goto LABEL_22;
      }
      else
      {
        v60 = TaskPriority.rawValue.getter(v51);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v43);
        v52 = v60;
        v53 = v49[2];
        if (!v53)
          goto LABEL_22;
      }
      v54 = v49[3];
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain(v53);
      v56 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v54);
      v58 = v57;
      swift_unknownObjectRelease(v53);
      if (v58 | v56)
      {
        v119[0] = 0;
        v119[1] = 0;
        v59 = v119;
        v119[2] = v56;
        v119[3] = v58;
        goto LABEL_23;
      }
LABEL_22:
      v59 = 0;
LABEL_23:
      v61 = swift_task_create(v52 | 0x1C00, v59, v107, &unk_1009F2870, v49);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v12);
      v118 = v12;
      v64 = sub_10004CE80(v44, v24);
      v65 = v12[2];
      v66 = (v63 & 1) == 0;
      v67 = v65 + v66;
      if (__OFADD__(v65, v66))
      {
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      v68 = v63;
      if (v12[3] < v67)
      {
        sub_10037DF30(v67, isUniquelyReferenced_nonNull_native);
        v69 = sub_10004CE80(v44, v24);
        if ((v68 & 1) != (v70 & 1))
          goto LABEL_75;
        v64 = v69;
        v12 = v118;
        if ((v68 & 1) == 0)
          goto LABEL_30;
LABEL_6:
        v17 = v12[7] + 24 * v64;
        sub_1002C7FE8(*(_QWORD *)v17, *(_QWORD *)(v17 + 8), *(_BYTE *)(v17 + 16));
        *(_QWORD *)v17 = v61;
        *(_QWORD *)(v17 + 8) = 0;
        *(_BYTE *)(v17 + 16) = 0;
LABEL_7:
        swift_bridgeObjectRelease(0x8000000000000000);
        v18 = swift_bridgeObjectRelease(v24);
        goto LABEL_8;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v12 = v118;
        if ((v63 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1002C238C();
        v12 = v118;
        if ((v68 & 1) != 0)
          goto LABEL_6;
      }
LABEL_30:
      v12[(v64 >> 6) + 8] |= 1 << v64;
      v71 = (uint64_t *)(v12[6] + 16 * v64);
      *v71 = v44;
      v71[1] = v24;
      v72 = v12[7] + 24 * v64;
      *(_QWORD *)v72 = v61;
      *(_QWORD *)(v72 + 8) = 0;
      *(_BYTE *)(v72 + 16) = 0;
      v73 = v12[2];
      v74 = __OFADD__(v73, 1);
      v75 = v73 + 1;
      if (v74)
        goto LABEL_71;
      v12[2] = v75;
      swift_bridgeObjectRetain(v24);
      goto LABEL_7;
    }
    v29 = *(_QWORD *)(v25 + 56) + 24 * v27;
    v31 = *(_QWORD *)v29;
    v30 = *(_QWORD *)(v29 + 8);
    v32 = *(_BYTE *)(v29 + 16);
    sub_1001E160C(*(_QWORD *)v29, v30, v32);
    swift_bridgeObjectRelease(v24);
    sub_1001E160C(v31, v30, v32);
    v33 = swift_isUniquelyReferenced_nonNull_native(v12);
    v118 = v12;
    v34 = v23;
    v36 = sub_10004CE80(v23, v24);
    v37 = v12[2];
    v38 = (v35 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
      goto LABEL_72;
    v40 = v35;
    if (v12[3] >= v39)
    {
      if ((v33 & 1) != 0)
      {
        v12 = v118;
        if ((v35 & 1) == 0)
          goto LABEL_38;
      }
      else
      {
        sub_1002C238C();
        v12 = v118;
        if ((v40 & 1) == 0)
          goto LABEL_38;
      }
    }
    else
    {
      sub_10037DF30(v39, v33);
      v41 = sub_10004CE80(v34, v24);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_75;
      v36 = v41;
      v12 = v118;
      if ((v40 & 1) == 0)
      {
LABEL_38:
        v12[(v36 >> 6) + 8] |= 1 << v36;
        v77 = (uint64_t *)(v12[6] + 16 * v36);
        *v77 = v34;
        v77[1] = v24;
        v78 = v12[7] + 24 * v36;
        *(_QWORD *)v78 = v31;
        *(_QWORD *)(v78 + 8) = v30;
        *(_BYTE *)(v78 + 16) = v32;
        v79 = v12[2];
        v74 = __OFADD__(v79, 1);
        v80 = v79 + 1;
        if (v74)
          goto LABEL_74;
        v12[2] = v80;
        swift_bridgeObjectRetain(v24);
        goto LABEL_40;
      }
    }
    v76 = v12[7] + 24 * v36;
    sub_1002C7FE8(*(_QWORD *)v76, *(_QWORD *)(v76 + 8), *(_BYTE *)(v76 + 16));
    *(_QWORD *)v76 = v31;
    *(_QWORD *)(v76 + 8) = v30;
    *(_BYTE *)(v76 + 16) = v32;
LABEL_40:
    swift_bridgeObjectRelease(0x8000000000000000);
    swift_bridgeObjectRelease(v24);
    sub_1002C7FE8(v31, v30, v32);
    v6 = v106;
LABEL_8:
    v9 = v110;
    v7 = v111;
    v19 = v114;
    v20 = v115;
    (*(void (**)(char *, uint64_t, __n128))(v113 + 8))(v110, v111, v18);
    v15 = v19 + v109;
    v14 = v20 - 1;
  }
  while (v14);
  swift_bridgeObjectRelease(v105);
  v11 = v116;
LABEL_42:
  v81 = 0;
  v82 = v11 + 64;
  v83 = 1 << *(_BYTE *)(v11 + 32);
  v84 = -1;
  if (v83 < 64)
    v84 = ~(-1 << v83);
  v85 = v84 & *(_QWORD *)(v11 + 64);
  v86 = (unint64_t)(v83 + 63) >> 6;
  v115 = (char *)&type metadata for () + 8;
  while (2)
  {
    if (v85)
    {
      v88 = __clz(__rbit64(v85));
      v85 &= v85 - 1;
      v89 = v88 | (v81 << 6);
      goto LABEL_63;
    }
    v90 = v81 + 1;
    if (__OFADD__(v81, 1))
    {
      __break(1u);
      goto LABEL_70;
    }
    if (v90 >= v86)
      goto LABEL_68;
    v91 = *(_QWORD *)(v82 + 8 * v90);
    ++v81;
    if (v91)
      goto LABEL_62;
    v81 = v90 + 1;
    if (v90 + 1 >= v86)
      goto LABEL_68;
    v91 = *(_QWORD *)(v82 + 8 * v81);
    if (v91)
      goto LABEL_62;
    v81 = v90 + 2;
    if (v90 + 2 >= v86)
      goto LABEL_68;
    v91 = *(_QWORD *)(v82 + 8 * v81);
    if (v91)
    {
LABEL_62:
      v85 = (v91 - 1) & v91;
      v89 = __clz(__rbit64(v91)) + (v81 << 6);
LABEL_63:
      v93 = *(_QWORD *)(v11 + 56) + 24 * v89;
      v94 = *(_QWORD *)v93;
      v95 = *(_QWORD *)(v93 + 8);
      v96 = *(unsigned __int8 *)(v93 + 16);
      if (v12[2])
      {
        v97 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v89);
        v98 = *v97;
        v99 = v97[1];
        sub_1001E160C(v94, v95, v96);
        swift_bridgeObjectRetain(v99);
        swift_bridgeObjectRetain(v12);
        sub_10004CE80(v98, v99);
        v101 = v100;
        swift_bridgeObjectRelease(v12);
        swift_bridgeObjectRelease(v99);
        if (((v101 | v96) & 1) != 0)
        {
          v87 = v101 ^ 1 | v96;
          goto LABEL_46;
        }
      }
      else
      {
        sub_1001E160C(v94, v95, v96);
        if ((v96 & 1) != 0)
        {
          v87 = 1;
          goto LABEL_46;
        }
      }
      swift_retain(v94);
      sub_10004CFD4((uint64_t *)&unk_1009D3170);
      Task.cancel()();
      sub_1002C7FE8(v94, v95, 0);
      v87 = 0;
LABEL_46:
      sub_1002C7FE8(v94, v95, v87 & 1);
      v11 = v116;
      continue;
    }
    break;
  }
  v92 = v90 + 3;
  if (v92 >= v86)
  {
LABEL_68:
    swift_release(v11);
    v102 = (uint64_t *)(v108 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_resolveStates);
    swift_beginAccess(v108 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_resolveStates, &v118, 1, 0);
    v103 = *v102;
    *v102 = (uint64_t)v12;
    swift_bridgeObjectRelease(v103);
    return;
  }
  v91 = *(_QWORD *)(v82 + 8 * v92);
  if (v91)
  {
    v81 = v92;
    goto LABEL_62;
  }
  while (1)
  {
    v81 = v92 + 1;
    if (__OFADD__(v92, 1))
      break;
    if (v81 >= v86)
      goto LABEL_68;
    v91 = *(_QWORD *)(v82 + 8 * v81);
    ++v92;
    if (v91)
      goto LABEL_62;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_10064CEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  v7 = type metadata accessor for MainActor(0);
  v6[11] = v7;
  v6[12] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v6[13] = v8;
  v6[14] = v9;
  return swift_task_switch(sub_10064CF70, v8, v9);
}

uint64_t sub_10064CF70(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;

  static Task<>.checkCancellation()(a1);
  *(_QWORD *)(v1 + 120) = 0;
  v2 = *(_QWORD *)(v1 + 64) + 16;
  swift_beginAccess(v2, v1 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  *(_QWORD *)(v1 + 128) = Strong;
  if (Strong)
  {
    v4 = *(_QWORD *)(v1 + 88);
    *(_QWORD *)(v1 + 136) = static MainActor.shared.getter(Strong);
    v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
    *(_QWORD *)(v1 + 144) = v5;
    *(_QWORD *)(v1 + 152) = v6;
    return swift_task_switch(sub_10064D0A8, v5, v6);
  }
  else
  {
    v8 = swift_release(*(_QWORD *)(v1 + 96));
    v9 = *(_QWORD *)(v1 + 120);
    static Task<>.checkCancellation()(v8);
    if (!v9)
    {
      v11 = *(_QWORD *)(v1 + 64) + 16;
      swift_beginAccess(v11, v1 + 40, 0, 0);
      v12 = swift_unknownObjectWeakLoadStrong(v11);
      if (v12)
      {
        v13 = (void *)v12;
        sub_10064D2A4(*(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), 0);

      }
    }
    v10 = swift_bridgeObjectRelease(0);
    return (*(uint64_t (**)(__n128))(v1 + 8))(v10);
  }
}

uint64_t sub_10064D0A8()
{
  uint64_t v0;
  uint64_t Strong;
  _QWORD *v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  Strong = swift_unknownObjectWeakLoadStrong(*(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_delegate);
  *(_QWORD *)(v0 + 160) = Strong;
  if (Strong)
  {
    v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1009EFF48 + dword_1009EFF48);
    v2 = (_QWORD *)swift_task_alloc(unk_1009EFF4C);
    *(_QWORD *)(v0 + 168) = v2;
    *v2 = v0;
    v2[1] = sub_10064D158;
    return v5(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80));
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 136);

    swift_release(v4);
    *(_QWORD *)(v0 + 184) = 0;
    return swift_task_switch(sub_10064D200, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  }
}

uint64_t sub_10064D158(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 160);
  v3 = *(_QWORD *)(*v1 + 168);
  *(_QWORD *)(*v1 + 176) = a1;
  swift_task_dealloc(v3);
  swift_unknownObjectRelease(v4);
  return swift_task_switch(sub_10064D1B8, *(_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 152));
}

uint64_t sub_10064D1B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);

  swift_release(v1);
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(v0 + 176);
  return swift_task_switch(sub_10064D200, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
}

uint64_t sub_10064D200()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  __n128 v7;

  v1 = swift_release(*(_QWORD *)(v0 + 96));
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 120);
  static Task<>.checkCancellation()(v1);
  if (!v3)
  {
    v4 = *(_QWORD *)(v0 + 64) + 16;
    swift_beginAccess(v4, v0 + 40, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v4);
    if (Strong)
    {
      v6 = (void *)Strong;
      sub_10064D2A4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v2);

    }
  }
  v7 = swift_bridgeObjectRelease(v2);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v7);
}

void sub_10064D2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  _BYTE v26[24];

  v4 = v3;
  if (a3)
  {
    v8 = v3 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService;
    Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService);
    if (Strong)
    {
      v10 = Strong;
      v11 = *(_QWORD *)(v8 + 8);
      ObjectType = swift_getObjectType();
      swift_bridgeObjectRetain(a3);
      v13 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v11);
      swift_unknownObjectRelease(v10);
      v14 = BookPaginationEntity.document(for:)(*(_QWORD *)(v4
                                                          + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal));
      swift_release(v13);
      if (v14)
      {
        swift_retain(v14);
        v15 = sub_10064F550(a3, v14);
        swift_release(v14);
        swift_bridgeObjectRetain(a2);
        v16 = sub_1003ACD80((uint64_t)v15);
        swift_bridgeObjectRelease(v15);
        v17 = (_QWORD *)(v4 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_resolveStates);
        swift_beginAccess(v4 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_resolveStates, v26, 33, 0);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v17);
        v25 = *v17;
        *v17 = 0x8000000000000000;
        sub_1002C52EC(a3, v16, 1, a1, a2, isUniquelyReferenced_nonNull_native);
        v19 = *v17;
        *v17 = v25;
        swift_bridgeObjectRelease(v19);
        swift_bridgeObjectRelease(a2);
        swift_endAccess(v26);
        sub_100649C5C();
        swift_release(v14);
        return;
      }
      swift_bridgeObjectRelease(a3);
    }
  }
  swift_beginAccess(v4 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_resolveStates, v26, 33, 0);
  swift_bridgeObjectRetain(a2);
  v20 = sub_1002BE1C4(a1, a2);
  v22 = v21;
  v24 = v23;
  swift_endAccess(v26);
  swift_bridgeObjectRelease(a2);
  sub_100650F58(v20, v22, v24);
}

void BookReaderAccessoryHighlightsController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.BookReaderAccessoryHighlightsController", 45, "init()", 6, 0);
  __break(1u);
}

Swift::Bool __swiftcall BookReaderAccessoryHighlightsController.hasInteractiveHighlight()()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_interactiveHighlight) != 0;
}

void BookReaderAccessoryHighlightsController.updateInteractiveHighlight(with:point:from:rects:)(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  sub_100650794(a1, a2, a6, a3, a4);
}

id sub_10064D508(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v33;
  char v34[24];

  v3 = v2;
  v6 = type metadata accessor for BookContentAdornmentState(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = v3 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState;
  v11 = swift_beginAccess(v3 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState, v34, 0, 0);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v10, v6, v11);
  v13 = (void *)BookContentAdornmentState.contentAccessoryView.getter(v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v13)
  {
    v14 = *(void **)(v3 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_highlightRenderingController);
    v15 = objc_msgSend(v14, "highlightLayers");
    if (!v15)
    {

      return v15;
    }
    v16 = sub_100009E04(0, &qword_1009F2890, CALayer_ptr);
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);

    v33 = v17;
    v18 = sub_10004CFD4(&qword_1009F2898);
    v19 = sub_100030B34(&qword_1009F28A0, &qword_1009F2898, (uint64_t)&protocol conformance descriptor for [A]);
    if ((Collection.isNotEmpty.getter(v18, v19) & 1) != 0)
    {
      if ((unint64_t)v17 >> 62)
      {
LABEL_20:
        if (v17 < 0)
          v31 = v17;
        else
          v31 = v17 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v17);
        v15 = (id)_CocoaArrayWrapper.endIndex.getter(v31);
        swift_bridgeObjectRelease(v17);
        if (v15)
        {
LABEL_6:
          v20 = 4;
          while (1)
          {
            if ((v17 & 0xC000000000000001) != 0)
              v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, v17);
            else
              v21 = *(id *)(v17 + 8 * v20);
            v22 = v21;
            v23 = (id)(v20 - 3);
            if (__OFADD__(v20 - 4, 1))
            {
              __break(1u);
              goto LABEL_20;
            }
            v24 = objc_msgSend(v13, "layer");
            objc_msgSend(v22, "convertPoint:fromLayer:", v24, a1, a2);
            v26 = v25;
            v28 = v27;

            if (objc_msgSend(v14, "layer:containsHighlightAtPoint:", v22, v26, v28))
              break;

            ++v20;
            if (v23 == v15)
              goto LABEL_13;
          }
          v29 = objc_msgSend(v14, "annotationUuidForHighlightLayer:", v22, swift_bridgeObjectRelease(v17).n128_f64[0]);
          if (v29)
          {
            v30 = v29;
            v15 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v29);

            return v15;
          }

          return 0;
        }
      }
      else
      {
        v15 = *(id *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v15)
          goto LABEL_6;
      }

      swift_bridgeObjectRelease(v17);
      return v15;
    }
LABEL_13:

    swift_bridgeObjectRelease(v17);
  }
  return 0;
}

void sub_10064D7FC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t Strong;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  void (**v27)(char *, uint64_t);
  uint64_t v28;
  void (**v29)(char *, uint64_t);
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  double v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  double *v53;
  double v54;
  double v55;
  double v56;
  double v57;
  id v58;
  double MinY;
  double Height;
  double v61;
  double MaxY;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  Class isa;
  uint64_t v74;
  int v75;
  int v76;
  void (**v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char v83[24];
  unint64_t v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;

  v3 = v2;
  v78 = a1;
  v5 = type metadata accessor for Logger(0);
  v77 = *(void (***)(char *, uint64_t))(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  __chkstk_darwin(v8);
  v10 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for BookThemeEntity(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v2 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService);
  if (!Strong)
    return;
  v17 = Strong;
  v18 = *(_QWORD *)(v15 + 8);
  ObjectType = swift_getObjectType();
  v20 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v18);
  v79 = v3;
  v21 = v20;
  swift_unknownObjectRelease(v17);
  v22 = BookPaginationEntity.document(for:)(*(_QWORD *)(v79
                                                      + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal));
  v23 = v79;
  swift_release(v21);
  v80 = v22;
  if (!v22)
    return;
  v84 = (unint64_t)_swiftEmptyArrayStorage;
  v24 = v23 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentTheme;
  swift_beginAccess(v24, v83, 0, 0);
  sub_1005D0CD8(v24, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_100010960(v10, (uint64_t *)&unk_1009D6290);
    LODWORD(v10) = 0;
  }
  else
  {
    v25.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, v10, v11);
    LODWORD(v10) = BookThemeEntity.hasDarkBackground.getter(v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  v27 = v77;
  v26 = v78;
  if (qword_1009CEAF0 != -1)
    swift_once(&qword_1009CEAF0, sub_100649BC4);
  v28 = sub_100048F64(v5, (uint64_t)qword_1009F26F0);
  ((void (*)(char *, uint64_t, uint64_t))v27[2])(v7, v28, v5);
  swift_bridgeObjectRetain_n(v26, 2);
  v29 = a2;
  v30 = Logger.logObject.getter(v29);
  v34 = static os_log_type_t.debug.getter(v30, v31, v32, v33);
  if (os_log_type_enabled(v30, (os_log_type_t)v34))
  {
    v75 = v34;
    v76 = v10;
    v10 = swift_slowAlloc(22, -1);
    v74 = swift_slowAlloc(64, -1);
    v82 = (_QWORD *)v74;
    *(_DWORD *)v10 = 136315394;
    type metadata accessor for CGRect(0);
    v36 = v35;
    swift_bridgeObjectRetain(v26);
    v38 = Array.description.getter(v37, v36);
    v40 = v39;
    swift_bridgeObjectRelease(v26);
    v81 = sub_100040F58(v38, v40, (uint64_t *)&v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v10 + 4, v10 + 12);
    swift_bridgeObjectRelease(v40);
    *(_QWORD *)&v41 = swift_bridgeObjectRelease_n(v26, 2).n128_u64[0];
    *(_WORD *)(v10 + 12) = 2080;
    v42 = objc_msgSend(v29, "annotation", v41);
    if (!v42)
    {

      __break(1u);
      return;
    }
    v43 = v42;
    v44 = objc_msgSend(v42, "annotationUuid");
    swift_unknownObjectRelease(v43);
    if (v44)
    {
      v45 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v47 = v46;

    }
    else
    {
      v45 = 0;
      v47 = 0;
    }
    v49 = Optional<A>.description.getter(v45, v47);
    v51 = v50;
    swift_bridgeObjectRelease(v47);
    v81 = sub_100040F58(v49, v51, (uint64_t *)&v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v81, &v82, v10 + 14, v10 + 22);
    swift_bridgeObjectRelease(v51);

    _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v75, "Adding highlight rects:%s for annotation:%s", (uint8_t *)v10, 0x16u);
    v52 = v74;
    swift_arrayDestroy(v74, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v52, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    v77[1](v7, v5);
    LOBYTE(v10) = v76;
    v48 = *(_QWORD *)(v26 + 16);
    if (!v48)
      goto LABEL_24;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease_n(v26, 2);

  v27[1](v7, v5);
  v48 = *(_QWORD *)(v26 + 16);
  if (v48)
  {
LABEL_16:
    v77 = v29;
    swift_bridgeObjectRetain(v26);
    v53 = (double *)(v26 + 56);
    do
    {
      v55 = *(v53 - 3);
      v54 = *(v53 - 2);
      v57 = *(v53 - 1);
      v56 = *v53;
      v58 = objc_msgSend(objc_allocWithZone((Class)AEHighlightLine), "init");
      objc_msgSend(v58, "setIncludesCapSpace:", 1);
      objc_msgSend(v58, "setLightenBlend:", v10 & 1);
      objc_msgSend(v58, "setFullLineRect:", v55, v54, v57, v56);
      if ((dispatch thunk of DocumentPaginationEntity.isVerticalDocument.getter(objc_msgSend(v58, "setCurrentLineRect:", v55, v54, v57, v56)) & 1) != 0)
      {
        v85.origin.x = v55;
        v85.origin.y = v54;
        v85.size.width = v57;
        v85.size.height = v56;
        MinY = CGRectGetMinY(v85);
        v86.origin.x = v55;
        v86.origin.y = v54;
        v86.size.width = v57;
        v86.size.height = v56;
        Height = CGRectGetHeight(v86);
        sub_10064F064();
        MaxY = MinY + Height * v61;
        v63 = 2;
      }
      else
      {
        v87.origin.x = v55;
        v87.origin.y = v54;
        v87.size.width = v57;
        v87.size.height = v56;
        MaxY = CGRectGetMaxY(v87);
        v63 = 0;
      }
      objc_msgSend(v58, "setUnderlineDirection:", v63);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(objc_msgSend(v58, "setUnderlinePosition:", MaxY));
      v65 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v64 = *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v65 >= v64 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v64 > 1, v65 + 1, 1);
      v66 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v58);
      specialized Array._endMutation()(v66);
      v53 += 4;
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease(v78);
    v29 = v77;
  }
LABEL_24:
  v67 = objc_msgSend(v29, "lines");
  if (v67)
  {
    v68 = v67;
    v69 = sub_100009E04(0, &qword_1009DDEC0, AEHighlightLine_ptr);
    v70 = (_QWORD *)static Array._unconditionallyBridgeFromObjectiveC(_:)(v68, v69);

  }
  else
  {
    v70 = _swiftEmptyArrayStorage;
  }
  v82 = v70;
  swift_bridgeObjectRetain(v84);
  sub_100376018(v71);
  v72 = (uint64_t)v82;
  sub_100009E04(0, &qword_1009DDEC0, AEHighlightLine_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v29, "setLines:", isa, swift_bridgeObjectRelease(v72).n128_f64[0]);
  swift_release(v80);

  swift_bridgeObjectRelease(v84);
}

double sub_10064DF28(void *a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  os_log_type_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  double result;
  uint64_t v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = v1;
  v5 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_highlightRenderingController], "highlightLayers");
  if (!v5)
    goto LABEL_10;
  v6 = v5;
  v7 = sub_100009E04(0, &qword_1009F2890, CALayer_ptr);
  v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);

  v33 = v8;
  v9 = sub_10004CFD4(&qword_1009F2898);
  v10 = sub_100030B34(&qword_1009F28A0, &qword_1009F2898, (uint64_t)&protocol conformance descriptor for [A]);
  if ((Collection.isNotEmpty.getter(v9, v10) & 1) == 0)
  {
    swift_bridgeObjectRelease(v8);
LABEL_10:
    if (qword_1009CEAF0 != -1)
      swift_once(&qword_1009CEAF0, sub_100649BC4);
    v18 = type metadata accessor for Logger(0);
    sub_100048F64(v18, (uint64_t)qword_1009F26F0);
    v19 = v3;
    v20 = Logger.logObject.getter(v19);
    v24 = static os_log_type_t.debug.getter(v20, v21, v22, v23);
    if (os_log_type_enabled(v20, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v25 = 134217984;
      v33 = *(_QWORD *)&v19[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v25 + 4, v25 + 12);

      _os_log_impl((void *)&_mh_execute_header, v20, v24, "No highlight layers in documentOrdinal:%ld", v25, 0xCu);
      swift_slowDealloc(v25, -1, -1);
    }
    else
    {

    }
    return result;
  }
  if (qword_1009CEAF0 != -1)
    swift_once(&qword_1009CEAF0, sub_100649BC4);
  v11 = type metadata accessor for Logger(0);
  sub_100048F64(v11, (uint64_t)qword_1009F26F0);
  swift_bridgeObjectRetain_n(v8, 2);
  v12 = v3;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.info.getter(v13);
  v15 = (unint64_t)v8 >> 62;
  if (!os_log_type_enabled((os_log_t)v13, v14))
  {

    swift_bridgeObjectRelease_n(v8, 2);
    goto LABEL_17;
  }
  v2 = swift_slowAlloc(22, -1);
  *(_DWORD *)v2 = 134218240;
  if (v15)
    goto LABEL_31;
  v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease(v8);
    v33 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v2 + 4, v2 + 12);
    swift_bridgeObjectRelease(v8);
    *(_WORD *)(v2 + 12) = 2048;
    v17 = *(_QWORD *)&v12[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal];

    v33 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34, v2 + 14, v2 + 22);

    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v13, v14, "Adding %ld highlight layers in documentOrdinal:%ld", (uint8_t *)v2, 0x16u);
    swift_slowDealloc(v2, -1, -1);
LABEL_17:

    if (v15)
    {
      if (v8 < 0)
        v31 = v8;
      else
        v31 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v13 = _CocoaArrayWrapper.endIndex.getter(v31);
      if (!v13)
        goto LABEL_29;
    }
    else
    {
      v13 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v8);
      if (!v13)
        goto LABEL_29;
    }
    if (v13 >= 1)
      break;
    __break(1u);
LABEL_31:
    if (v8 < 0)
      v32 = v8;
    else
      v32 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v16 = _CocoaArrayWrapper.endIndex.getter(v32);
    swift_bridgeObjectRelease(v8);
  }
  v27 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
      v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v8);
    else
      v28 = *(id *)(v8 + 8 * v27 + 32);
    v29 = v28;
    ++v27;
    v30 = objc_msgSend(a1, "layer");
    objc_msgSend(v30, "addSublayer:", v29);

  }
  while (v13 != v27);
LABEL_29:
  *(_QWORD *)&result = swift_bridgeObjectRelease_n(v8, 2).n128_u64[0];
  return result;
}

Swift::Void __swiftcall BookReaderAccessoryHighlightsController.removeInteractiveHighlight()()
{
  uint64_t v0;
  uint64_t *v1;
  void *v2;
  NSString v3;
  uint64_t v4;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_interactiveHighlight);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_interactiveHighlight))
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_highlightRenderingController);
    if (qword_1009CEAF8 != -1)
      swift_once(&qword_1009CEAF8, sub_10064B980);
    v3 = String._bridgeToObjectiveC()();
    objc_msgSend(v2, "removeHighlightForData:", v3);

    v4 = *v1;
    v1[1] = 0;
    v1[2] = 0;
    *v1 = 0;
    swift_release(v4);
  }
}

Swift::Void __swiftcall BookReaderAccessoryHighlightsController.convertInteractiveToStaticHighlight()()
{
  char *v0;
  char *v1;
  uint64_t Strong;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;

  v1 = &v0[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&v0[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_delegate]);
  if (Strong)
  {
    v3 = Strong;
    v4 = &v0[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_interactiveHighlight];
    v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_interactiveHighlight];
    if (v5)
    {
      v6 = *((_QWORD *)v1 + 1);
      v8 = *((_QWORD *)v4 + 1);
      v7 = *((_QWORD *)v4 + 2);
      v9 = (_QWORD *)swift_allocObject(&unk_1009199F0, 64, 7);
      v9[2] = v3;
      v9[3] = v6;
      v9[4] = v0;
      v9[5] = v5;
      v9[6] = v8;
      v9[7] = v7;
      swift_retain_n(v5, 2);
      swift_unknownObjectRetain(v3);
      v10 = v0;
      sub_1006498E4((void (*)(uint64_t))sub_100650CC0, (uint64_t)v9);
      swift_release(v9);
      v11 = *(_QWORD *)v4;
      *((_QWORD *)v4 + 1) = 0;
      *((_QWORD *)v4 + 2) = 0;
      *(_QWORD *)v4 = 0;
      swift_unknownObjectRelease(v3);
      swift_release(v5);
      swift_release(v11);
    }
    else
    {
      swift_unknownObjectRelease(Strong);
    }
  }
}

double sub_10064E514(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = dispatch thunk of HighlightAnnotationEntity.style.getter(v5);
  v7 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  type metadata accessor for MainActor(0);
  v8 = a1;
  v9 = static MainActor.shared.getter(v8);
  v10 = swift_allocObject(&unk_100919BC8, 41, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = &protocol witness table for MainActor;
  *(_QWORD *)(v10 + 32) = v8;
  *(_BYTE *)(v10 + 40) = v6;
  v11 = sub_10030C02C((uint64_t)v4, (uint64_t)&unk_1009F2880, v10);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

BOOL sub_10064E600()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_interactiveHighlight) != 0;
}

void sub_10064E61C(uint64_t a1, uint64_t a2, double a3, double a4, uint64_t a5, uint64_t a6)
{
  sub_100650794(a1, a2, a6, a3, a4);
}

void sub_10064E640()
{
  BookReaderAccessoryHighlightsController.removeInteractiveHighlight()();
}

void sub_10064E660()
{
  BookReaderAccessoryHighlightsController.convertInteractiveToStaticHighlight()();
}

id sub_10064E680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  char v24;
  unsigned int v25;
  _BYTE v28[24];

  v1 = type metadata accessor for BookThemeEntity(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v7 = &v28[-v6 - 8];
  v8 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  __chkstk_darwin(v8);
  v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v11);
  v13 = &v28[-v12 - 8];
  v14 = *(void **)(v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_highlightRenderingController);
  v15 = v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentTheme;
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentTheme, v28, 0, 0);
  sub_1005D0CD8(v15, (uint64_t)v13);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48);
  if (v16(v13, 1, v1))
  {
    sub_100010960((uint64_t)v13, (uint64_t *)&unk_1009D6290);
    v17 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v7, v13, v1);
    v18 = sub_100010960((uint64_t)v13, (uint64_t *)&unk_1009D6290);
    sub_10063B820(v18);
    v17 = v19;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  }
  objc_msgSend(v14, "setPageTheme:", v17);
  sub_1005D0CD8(v15, (uint64_t)v10);
  if (v16(v10, 1, v1))
  {
    sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D6290);
    v20 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v10, v1);
    v21 = sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D6290);
    v22 = BookThemeEntity.themeType.getter(v21);
    v23 = v22;
    v24 = BookThemeEntity.variant.getter(v22);
    if (v23 == 1)
      v25 = 9;
    else
      v25 = 1;
    if ((v24 & 1) != 0)
      v20 = 2;
    else
      v20 = v25;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return objc_msgSend(v14, "setAnnotationBlendMode:", v20);
}

void sub_10064E8CC(uint64_t a1, void *a2)
{
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  NSObject *oslog;
  double v12;
  uint64_t v13;

  v3 = Date.timeIntervalSinceNow.getter(a1);
  if (qword_1009CEAF0 != -1)
    swift_once(&qword_1009CEAF0, sub_100649BC4);
  v4 = type metadata accessor for Logger(0);
  sub_100048F64(v4, (uint64_t)qword_1009F26F0);
  v5 = a2;
  oslog = Logger.logObject.getter(v5);
  v9 = static os_log_type_t.debug.getter(oslog, v6, v7, v8);
  if (os_log_type_enabled(oslog, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    *(_DWORD *)v10 = 134218240;
    v12 = *(double *)&v5[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v10 + 4, v10 + 12);

    *(_WORD *)(v10 + 12) = 2048;
    v12 = round(v3 * -1000000.0) / 1000.0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13, v10 + 14, v10 + 22);
    _os_log_impl((void *)&_mh_execute_header, oslog, v9, "#accessoryperf updateHighlights for ordinal %ld took %fms", (uint8_t *)v10, 0x16u);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
}

id sub_10064EA64(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  NSString v9;
  id v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  id v33;
  id v34;
  NSString v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  _BYTE v44[24];

  v2 = v1;
  v3 = dispatch thunk of HighlightPaginationEntityReference.highlightPaginationEntity.getter(a1);
  v4 = swift_retain(v3);
  v5 = ElementPaginationEntity.uniqueIdentifier.getter(v4);
  v7 = v6;
  swift_release(v3);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_highlightRenderingController);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend(v8, "highlightWithData:", v9);

  if (v10)
  {
    swift_release(v3);
    swift_bridgeObjectRelease(v7);
    return v10;
  }
  v11 = v2 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService;
  Strong = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService);
  if (!Strong)
    goto LABEL_15;
  v13 = Strong;
  v14 = *(_QWORD *)(v11 + 8);
  ObjectType = swift_getObjectType();
  v16 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v14);
  swift_unknownObjectRelease(v13);
  v17 = *(_QWORD *)(v2 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal);
  v18 = BookPaginationEntity.document(for:)(v17);
  swift_release(v16);
  if (!v18)
    goto LABEL_15;
  v19 = v2 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_annotationProviderService;
  v20 = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_annotationProviderService);
  if (!v20)
  {
    swift_release(v3);
    swift_bridgeObjectRelease(v7);
    v41 = v18;
LABEL_17:
    swift_release(v41);
    return 0;
  }
  v21 = v20;
  v22 = *(_QWORD *)(v19 + 8);
  v23 = swift_getObjectType();
  v24 = dispatch thunk of AnnotationProviding.bookAnnotationEntity.getter(v23, v22);
  v25 = swift_unknownObjectRelease(v21);
  v26 = dispatch thunk of BookAnnotationEntity.documentAnnotationsEntity(for:)(v17, v25);
  if (!v26)
  {
    swift_release(v18);
    swift_release(v24);
LABEL_15:
    swift_bridgeObjectRelease(v7);
    goto LABEL_16;
  }
  v27 = v26;
  v28 = swift_bridgeObjectRetain(v7);
  v29 = dispatch thunk of DocumentAnnotationsEntity.highlights.getter(v28);
  if (!*(_QWORD *)(v29 + 16) || (v30 = sub_10004CE80(v5, v7), (v31 & 1) == 0))
  {
    swift_bridgeObjectRelease(v29);
    swift_bridgeObjectRelease_n(v7, 2);
    swift_release(v27);
    swift_release(v24);
    swift_release(v18);
LABEL_16:
    v41 = v3;
    goto LABEL_17;
  }
  v43 = v24;
  v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
  swift_retain(v32);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v29);
  v33 = objc_allocWithZone((Class)AEHighlight);
  swift_retain(v32);
  v10 = objc_msgSend(v33, "init", swift_retain(v18).n128_f64[0]);
  objc_msgSend(v10, "setIsVertical:", dispatch thunk of DocumentPaginationEntity.isVerticalDocument.getter(objc_msgSend(v10, "setAnnotation:", v32)) & 1);
  objc_msgSend(v10, "setCornerRadius:", 4.0);
  swift_release(v32);
  swift_release(v18);
  v34 = v10;
  v35 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "addHighlight:forData:", v34, v35, swift_bridgeObjectRelease(v7).n128_f64[0]);

  v36 = (_QWORD *)(v2 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentHighlights);
  swift_beginAccess(v2 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentHighlights, v44, 33, 0);
  swift_retain(v3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v37);
  v39 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v38 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v39 >= v38 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v38 > 1, v39 + 1, 1);
  v40 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v3);
  specialized Array._endMutation()(v40);
  swift_endAccess(v44);
  swift_release(v32);
  swift_release(v27);
  swift_release(v43);
  swift_release(v18);
  swift_release(v3);
  return v10;
}

id sub_10064EDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSString v28;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = SelectionInfo.annotationUUID.getter(v3);
  v8 = v7;
  v9 = *(void **)(v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_highlightRenderingController);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v9, "highlightWithData:", v10);

  if (v11)
  {
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v12 = v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService;
    Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService);
    if (!Strong)
      goto LABEL_6;
    v14 = Strong;
    v15 = *(_QWORD *)(v12 + 8);
    ObjectType = swift_getObjectType();
    v17 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v15);
    swift_unknownObjectRelease(v14);
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal);
    v19 = BookPaginationEntity.document(for:)(v18);
    swift_release(v17);
    if (v19)
    {
      v20 = swift_bridgeObjectRetain(v8);
      v21 = SelectionInfo.cfi.getter(v20);
      v23 = v22;
      Date.init()();
      v24 = type metadata accessor for HighlightAnnotationEntity(0);
      swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
      v25 = HighlightAnnotationEntity.init(uniqueID:documentOrdinal:location:modificationDate:style:hasNoteText:)(v6, v8, v18, v21, v23, v5, 2, 0);
      v26 = objc_allocWithZone((Class)AEHighlight);
      swift_retain(v19);
      v11 = objc_msgSend(v26, "init");
      objc_msgSend(v11, "setIsVertical:", dispatch thunk of DocumentPaginationEntity.isVerticalDocument.getter(objc_msgSend(v11, "setAnnotation:", v25)) & 1);
      objc_msgSend(v11, "setCornerRadius:", 4.0);
      swift_release(v19);
      v27 = v11;
      v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v8);
      objc_msgSend(v9, "addHighlight:forData:", v27, v28);
      swift_release(v19);
      swift_release(v25);

    }
    else
    {
LABEL_6:
      swift_bridgeObjectRelease(v8);
      return 0;
    }
  }
  return v11;
}

void sub_10064F064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t inited;
  const __CFString *v17;
  unint64_t v18;
  const __CFDictionary *isa;
  const __CTFontDescriptor *v20;
  CTFontRef v21;
  const __CTFont *v22;
  double Ascent;
  double v24;
  double v25;
  _BYTE v26[56];
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[24];

  v1 = type metadata accessor for BookThemeEntity(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  __chkstk_darwin(v5);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentUnderlinePercent;
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentUnderlinePercent + 8) & 1) != 0)
  {
    v9 = v0 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentTheme;
    swift_beginAccess(v9, v29, 0, 0);
    sub_1005D0CD8(v9, (uint64_t)v7);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
    {
      sub_100010960((uint64_t)v7, (uint64_t *)&unk_1009D6290);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v2 + 16))(v4, v7, v1);
      v10 = sub_100010960((uint64_t)v7, (uint64_t *)&unk_1009D6290);
      v11 = BookThemeEntity.fontFamily.getter(v10);
      v13 = v12;
      (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
      v27 = v11;
      v28 = v13;
      v14 = sub_1001F15BC();
      if ((Collection.isNotEmpty.getter(&type metadata for String, v14) & 1) != 0)
      {
        v15 = sub_10004CFD4(&qword_1009F28A8);
        inited = swift_initStackObject(v15, v26);
        *(_OWORD *)(inited + 16) = xmmword_10070CCA0;
        *(_QWORD *)(inited + 32) = kCTFontFamilyNameAttribute;
        *(_QWORD *)(inited + 40) = v11;
        *(_QWORD *)(inited + 48) = v13;
        v17 = (id)kCTFontFamilyNameAttribute;
        v18 = sub_1001DBE00(inited);
        type metadata accessor for CFString(0);
        sub_100008DB0(&qword_1009F28B0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_10070EFCC);
        isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease(v18);
        v20 = CTFontDescriptorCreateWithAttributes(isa);

        v21 = CTFontCreateWithFontDescriptor(v20, 0.0, 0);
LABEL_9:
        v22 = v21;

        Ascent = CTFontGetAscent(v22);
        v24 = Ascent + CTFontGetDescent(v22);
        v25 = CTFontGetAscent(v22);

        *(double *)v8 = v25 / v24;
        *(_BYTE *)(v8 + 8) = 0;
        return;
      }
      swift_bridgeObjectRelease(v13);
    }
    v20 = (const __CTFontDescriptor *)String._bridgeToObjectiveC()();
    v21 = CTFontCreateWithName((CFStringRef)v20, 0.0, 0);
    goto LABEL_9;
  }
}

uint64_t sub_10064F304(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, __n128);
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = type metadata accessor for PageLocation(0);
  v30 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - v8;
  if (!*(_QWORD *)(a2 + 16))
    return 1;
  v26 = *(_QWORD *)(a1 + 16);
  if (!v26)
    return 1;
  v27 = a1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  v10 = *(_QWORD *)(v30 + 72);
  v11 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v30 + 16);
  v29 = a2 + 56;
  v25 = a1;
  v12 = swift_bridgeObjectRetain(a1);
  v13 = 0;
  while (1)
  {
    v28 = v13;
    v11(v9, v27 + v10 * v13, v4, v12);
    if (*(_QWORD *)(a2 + 16))
    {
      v14 = *(_QWORD *)(a2 + 40);
      v15 = sub_100008DB0((unint64_t *)&unk_1009DF310, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
      v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v4, v15);
      v17 = -1 << *(_BYTE *)(a2 + 32);
      v18 = v16 & ~v17;
      if (((*(_QWORD *)(v29 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
        break;
    }
LABEL_4:
    v13 = v28 + 1;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v4);
    if (v13 == v26)
    {
      v23 = 1;
      goto LABEL_13;
    }
  }
  v19 = ~v17;
  while (1)
  {
    ((void (*)(char *, unint64_t, uint64_t))v11)(v6, *(_QWORD *)(a2 + 48) + v18 * v10, v4);
    v20 = sub_100008DB0((unint64_t *)&unk_1009E8ED0, (uint64_t (*)(uint64_t))&type metadata accessor for PageLocation, (uint64_t)&protocol conformance descriptor for PageLocation);
    v21 = dispatch thunk of static Equatable.== infix(_:_:)(v6, v9, v4, v20);
    v22 = *(void (**)(char *, uint64_t))(v30 + 8);
    v22(v6, v4);
    if ((v21 & 1) != 0)
      break;
    v18 = (v18 + 1) & v19;
    if (((*(_QWORD *)(v29 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      goto LABEL_4;
  }
  v22(v9, v4);
  v23 = 0;
LABEL_13:
  swift_bridgeObjectRelease(v25);
  return v23;
}

_QWORD *sub_10064F550(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD v30[2];
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v5 = type metadata accessor for PageLocation(0);
  v35 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v33 = (char *)v30 - v9;
  __chkstk_darwin(v10);
  v32 = (char *)v30 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return _swiftEmptyArrayStorage;
  v30[1] = v2;
  v13 = *(_QWORD *)(sub_10004CFD4(&qword_1009D2AD0) - 8);
  v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v34 = *(_QWORD *)(v13 + 72);
  v30[0] = a1;
  v15 = swift_bridgeObjectRetain(a1);
  v16 = _swiftEmptyArrayStorage;
  v31 = v7;
  do
  {
    v18 = dispatch thunk of DocumentPaginationEntity.page(containing:)(v14, v15);
    if (v18)
    {
      v19 = v18;
      v20 = PagePaginationEntity.pageOffset.getter(v18);
      v21 = swift_release(v19);
      v22 = a2;
      v23 = DocumentPaginationEntity.ordinal.getter(v21);
      v24 = v33;
      PageLocation.init(documentOrdinal:pageOffset:)(v23, v20);
      v25 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v26 = v32;
      v25(v32, v24, v5);
      v25(v7, v26, v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        v16 = (_QWORD *)sub_1005B23E8(0, v16[2] + 1, 1, (unint64_t)v16);
      v28 = v16[2];
      v27 = v16[3];
      a2 = v22;
      if (v28 >= v27 >> 1)
        v16 = (_QWORD *)sub_1005B23E8(v27 > 1, v28 + 1, 1, (unint64_t)v16);
      v16[2] = v28 + 1;
      v17 = (unint64_t)v16
          + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))
          + *(_QWORD *)(v35 + 72) * v28;
      v7 = v31;
      v25((char *)v17, v31, v5);
    }
    v14 += v34;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease(v30[0]);
  return v16;
}

char *sub_10064F794(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  void (*v45)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  void *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  objc_class *v55;
  id v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  __n128 v76;
  char *v77;
  __n128 v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __n128 v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  __n128 v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *ObjectType;
  unint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  void (*v140)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  id v173;
  char v174[8];
  objc_super v175;

  v151 = a8;
  v132 = a7;
  v133 = a6;
  v172 = a5;
  v167 = a4;
  v168 = a3;
  v169 = a2;
  v166 = a1;
  v131 = a15;
  v139 = a14;
  v171 = a13;
  v134 = a10;
  v170 = a9;
  v152 = a11;
  v135 = a12;
  v16 = sub_10004CFD4((uint64_t *)&unk_1009F27E0);
  v164 = *(_QWORD *)(v16 - 8);
  v165 = v16;
  v17 = __chkstk_darwin(v16);
  v163 = (char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride(0, v17);
  v158 = *(_QWORD *)(v19 - 8);
  v159 = v19;
  __chkstk_darwin(v19);
  v157 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_10004CFD4((uint64_t *)&unk_1009E3B20);
  v155 = *(_QWORD *)(v156 - 8);
  __chkstk_darwin(v156);
  v154 = (char *)&v131 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10004CFD4(&qword_1009F27F0);
  v161 = *(_QWORD *)(v22 - 8);
  v162 = v22;
  __chkstk_darwin(v22);
  v160 = (char *)&v131 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_10004CFD4((uint64_t *)&unk_1009D6290);
  __chkstk_darwin(v24);
  v147 = (char *)&v131 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for BookThemeEntity(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v148 = (char *)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v29);
  v153 = (char *)&v131 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = sub_10004CFD4(&qword_1009F27F8);
  v142 = *(_QWORD *)(v143 - 8);
  __chkstk_darwin(v143);
  v141 = (char *)&v131 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_10004CFD4(&qword_1009F2800);
  v145 = *(_QWORD *)(v146 - 8);
  __chkstk_darwin(v146);
  v144 = (char *)&v131 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = (_QWORD *)sub_10004CFD4(&qword_1009F2808);
  v137 = *(v138 - 1);
  __chkstk_darwin(v138);
  ObjectType = (char *)&v131 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = &v15[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_delegate];
  *((_QWORD *)v34 + 1) = 0;
  swift_unknownObjectWeakInit(v34);
  *(_QWORD *)&v15[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_selectionInfos] = _swiftEmptyArrayStorage;
  v35 = OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_resolveStates;
  v36 = v15;
  *(_QWORD *)&v15[v35] = sub_1001DB96C((uint64_t)_swiftEmptyArrayStorage);
  v37 = OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_highlightRenderingController;
  v38 = objc_msgSend(objc_allocWithZone((Class)AEHighlightRenderingController), "init");
  objc_msgSend(v38, "setCanUseFilters:", 1);
  *(_QWORD *)&v36[v37] = v38;
  v39 = &v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_annotationProvider];
  swift_unknownObjectWeakInit(&v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_annotationProvider]);
  v40 = &v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService];
  *((_QWORD *)v40 + 1) = 0;
  swift_unknownObjectWeakInit(v40);
  v41 = &v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_readingSettingsProvider];
  *((_QWORD *)v41 + 1) = 0;
  swift_unknownObjectWeakInit(v41);
  v42 = &v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_annotationProviderService];
  *((_QWORD *)v42 + 1) = 0;
  swift_unknownObjectWeakInit(v42);
  v43 = &v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_contentLayoutController];
  swift_weakInit(&v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_contentLayoutController], 0);
  v44 = &v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_selectionHighlightController];
  *((_QWORD *)v44 + 1) = 0;
  swift_unknownObjectWeakInit(v44);
  v149 = v27;
  v45 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 56);
  v150 = v26;
  v46 = v26;
  v47 = v131;
  v140 = v45;
  v45((uint64_t)&v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentTheme], 1, 1, v46);
  v48 = &v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentUnderlinePercent];
  *(_QWORD *)v48 = 0;
  v48[8] = 1;
  *(_QWORD *)&v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentHighlights] = _swiftEmptyArrayStorage;
  v49 = &v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_interactiveHighlight];
  *((_QWORD *)v49 + 1) = 0;
  *((_QWORD *)v49 + 2) = 0;
  *(_QWORD *)v49 = 0;
  *(_QWORD *)&v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_cancellables] = &_swiftEmptySetSingleton;
  v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_layoutIsReady] = 0;
  v50 = v166;
  *(_QWORD *)&v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal] = v166;
  v51 = v169;
  *((_QWORD *)v40 + 1) = v168;
  swift_unknownObjectWeakAssign(v40, v51);
  *((_QWORD *)v41 + 1) = v172;
  swift_unknownObjectWeakAssign(v41, v167);
  *((_QWORD *)v42 + 1) = v132;
  swift_unknownObjectWeakAssign(v42, v133);
  swift_unknownObjectWeakAssign(v39, v151);
  swift_weakAssign(v43);
  *((_QWORD *)v44 + 1) = v47;
  swift_unknownObjectWeakAssign(v44, v134);
  *((_QWORD *)v34 + 1) = v135;
  swift_unknownObjectWeakAssign(v34, v152);
  v52 = &v36[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState];
  v53 = type metadata accessor for BookContentAdornmentState(0);
  v151 = *(_QWORD *)(v53 - 8);
  v54 = *(void (**)(char *, uint64_t))(v151 + 16);
  v152 = v53;
  v54(v52, v171);

  v55 = (objc_class *)type metadata accessor for BookReaderAccessoryHighlightsController(0);
  v175.receiver = v36;
  v175.super_class = v55;
  v56 = objc_msgSendSuper2(&v175, "init");
  v57 = qword_1009CEAF0;
  v58 = (char *)v56;
  if (v57 != -1)
    swift_once(&qword_1009CEAF0, sub_100649BC4);
  v59 = type metadata accessor for Logger(0);
  v60 = sub_100048F64(v59, (uint64_t)qword_1009F26F0);
  v61 = Logger.logObject.getter(v60);
  v65 = static os_log_type_t.debug.getter(v61, v62, v63, v64);
  if (os_log_type_enabled(v61, v65))
  {
    v66 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v66 = 134217984;
    v173 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v173, v174, v66 + 4, v66 + 12);
    _os_log_impl((void *)&_mh_execute_header, v61, v65, "Created for ordinal:%ld", v66, 0xCu);
    swift_slowDealloc(v66, -1, -1);
  }

  v173 = (id)dispatch thunk of SelectionHighlighting.currentSelectionsPublisher.getter(v139, v47);
  v67 = swift_allocObject(&unk_100919B28, 24, 7);
  *(_QWORD *)(v67 + 16) = v50;
  v68 = sub_10004CFD4(&qword_1009F2810);
  v69 = sub_10004CFD4(&qword_1009F2818);
  v70 = sub_100030B34(&qword_1009F2820, &qword_1009F2810, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v71 = ObjectType;
  Publisher.map<A>(_:)(sub_100650EE8, v67, v68, v69, v70);
  swift_release(v67);
  swift_release(v173);
  v72 = swift_allocObject(&unk_100919B50, 24, 7);
  swift_unknownObjectWeakInit(v72 + 16);
  v73 = sub_100030B34(&qword_1009F2828, &qword_1009F2808, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v74 = v138;
  v75 = Publisher<>.sink(receiveValue:)(sub_100650F14, v72, v138, v73);
  v76 = swift_release(v72);
  (*(void (**)(char *, _QWORD *, __n128))(v137 + 8))(v71, v74, v76);
  v77 = &v58[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_cancellables];
  swift_beginAccess(&v58[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_cancellables], &v173, 33, 0);
  AnyCancellable.store(in:)(v77);
  swift_endAccess(&v173);
  swift_release(v75);
  ObjectType = (char *)swift_getObjectType();
  v79 = (void *)dispatch thunk of ReadingSettingsProviding.currentThemePublisher.getter(ObjectType, v172, v78);
  v173 = v79;
  v80 = sub_10004CFD4((uint64_t *)&unk_1009E8F80);
  v81 = sub_100030B34((unint64_t *)&unk_1009F0040, (uint64_t *)&unk_1009E8F80, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v82 = v141;
  Publisher.dropFirst(_:)(1, v80, v81);
  swift_release(v79);
  v83 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v173 = (id)static OS_dispatch_queue.main.getter(v83);
  v139 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  v138 = *(_QWORD **)(*(_QWORD *)(v139 - 8) + 56);
  v84 = (uint64_t)v153;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v138)(v153, 1, 1, v139);
  v85 = sub_100030B34((unint64_t *)&unk_1009F2830, &qword_1009F27F8, (uint64_t)&protocol conformance descriptor for Publishers.Drop<A>);
  v137 = sub_1001EDDD0();
  v86 = v144;
  v87 = v143;
  Publisher.receive<A>(on:options:)(&v173, v84, v143, v83, v85, v137);
  sub_100010960(v84, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v142 + 8))(v82, v87);
  v88 = swift_allocObject(&unk_100919B50, 24, 7);
  swift_unknownObjectWeakInit(v88 + 16);
  v89 = sub_100030B34((unint64_t *)&unk_1009F2840, &qword_1009F2800, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v90 = v146;
  v91 = Publisher<>.sink(receiveValue:)(sub_100650F1C, v88, v146, v89);
  v92 = swift_release(v88);
  (*(void (**)(char *, uint64_t, __n128))(v145 + 8))(v86, v90, v92);
  swift_beginAccess(v77, &v173, 33, 0);
  AnyCancellable.store(in:)(v77);
  swift_endAccess(&v173);
  swift_release(v91);
  v93 = v148;
  dispatch thunk of ReadingSettingsProviding.currentTheme.getter(ObjectType, v172);
  v94 = v149;
  v95 = (uint64_t)v147;
  v96 = v150;
  (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v147, v93, v150);
  v140(v95, 0, 1, v96);
  v97 = (uint64_t)&v58[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentTheme];
  swift_beginAccess(&v58[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentTheme], &v173, 33, 0);
  sub_1005D0C90(v95, v97);
  swift_endAccess(&v173);
  v98 = &v58[OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_currentUnderlinePercent];
  *(_QWORD *)v98 = 0;
  v98[8] = 1;
  sub_10064E680();
  sub_100649C5C();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v93, v96);
  v99 = sub_10004CFD4(&qword_1009E3B38);
  v100 = swift_allocObject(v99, 56, 7);
  *(_OWORD *)(v100 + 16) = xmmword_100712B60;
  v101 = swift_getObjectType();
  v102 = v166;
  v103 = v168;
  *(_QWORD *)(v100 + 32) = Paginating.documentPaginationCompletedPublisher(forOrdinal:)(v166, v101, v168);
  *(_QWORD *)(v100 + 40) = Paginating.documentHighlightsChangedPublisher(forOrdinal:)(v102, v101, v103);
  v104 = dispatch thunk of BookContentLayoutController.accessoryViewBoundsChangedPublisher(forOrdinal:)(v102);
  *(_QWORD *)(v100 + 48) = v104;
  v173 = (id)v100;
  specialized Array._endMutation()(v104);
  v105 = v173;
  v106 = sub_10004CFD4(&qword_1009E3B40);
  v107 = sub_100030B34(&qword_1009F0090, &qword_1009E3B40, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v108 = v154;
  Publishers.MergeMany.init(_:)(v105, v106, v107);
  v109 = v157;
  v110 = static OS_dispatch_queue.SchedulerTimeType.Stride.nanoseconds(_:)(1);
  v173 = (id)static OS_dispatch_queue.main.getter(v110);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v138)(v84, 1, 1, v139);
  v111 = sub_100030B34((unint64_t *)&unk_1009F2850, (uint64_t *)&unk_1009E3B20, (uint64_t)&protocol conformance descriptor for Publishers.MergeMany<A>);
  v112 = v160;
  v113 = v156;
  Publisher.debounce<A>(for:scheduler:options:)(v109, &v173, v84, v156, v83, v111, v137);
  sub_100010960(v84, (uint64_t *)&unk_1009D4AE0);

  (*(void (**)(char *, uint64_t))(v158 + 8))(v109, v159);
  (*(void (**)(char *, uint64_t))(v155 + 8))(v108, v113);
  v114 = swift_allocObject(&unk_100919B50, 24, 7);
  swift_unknownObjectWeakInit(v114 + 16);
  v115 = swift_allocObject(&unk_100919B78, 32, 7);
  *(_QWORD *)(v115 + 16) = sub_100650F24;
  *(_QWORD *)(v115 + 24) = v114;
  v116 = sub_100030B34(&qword_1009E3B48, &qword_1009F27F0, (uint64_t)&protocol conformance descriptor for Publishers.Debounce<A, B>);
  v117 = v162;
  v118 = Publisher<>.sink(receiveValue:)(sub_100064AD4, v115, v162, v116);
  v119 = swift_release(v115);
  (*(void (**)(char *, uint64_t, __n128))(v161 + 8))(v112, v117, v119);
  swift_beginAccess(v77, &v173, 33, 0);
  AnyCancellable.store(in:)(v77);
  swift_endAccess(&v173);
  v120 = swift_release(v118);
  v121 = (void *)dispatch thunk of BookContentLayoutController.layoutStatePublisher.getter(v120);
  v173 = v121;
  v122 = sub_10004CFD4((uint64_t *)&unk_1009E7760);
  v123 = sub_100030B34(&qword_1009D5C88, (uint64_t *)&unk_1009E7760, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v124 = v163;
  Publisher.map<A>(_:)(sub_10064C0A4, 0, v122, &type metadata for Bool, v123);
  swift_release(v121);
  v125 = swift_allocObject(&unk_100919B50, 24, 7);
  swift_unknownObjectWeakInit(v125 + 16);
  v126 = sub_100030B34(&qword_1009F2860, (uint64_t *)&unk_1009F27E0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v127 = v165;
  v128 = Publisher<>.sink(receiveValue:)(sub_100650F50, v125, v165, v126);
  v129 = swift_release(v125);
  (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v124, v127, v129);
  swift_beginAccess(v77, &v173, 33, 0);
  AnyCancellable.store(in:)(v77);
  swift_endAccess(&v173);
  swift_release(v128);
  sub_10064C680(0);
  sub_100649C5C();

  (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v171, v152);
  return v58;
}

char *sub_1006506C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  id v23;

  v23 = objc_allocWithZone((Class)type metadata accessor for BookReaderAccessoryHighlightsController(0));
  return sub_10064F794(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

void sub_100650794(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  double *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  __n128 v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  id v57;
  uint64_t v58;
  id v59;
  void *v60;
  NSString v61;
  id v62;
  NSString v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69[24];

  v6 = v5;
  v12 = type metadata accessor for Date(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for BookContentAdornmentState(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState;
  v20 = swift_beginAccess(v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_adornmentState, v69, 0, 0);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))(v18, v19, v15, v20);
  v22 = (void *)BookContentAdornmentState.contentAccessoryView.getter(v21);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (!v22)
    return;
  v23 = v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_annotationProviderService;
  Strong = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_annotationProviderService);
  if (!Strong)
  {
LABEL_11:

    return;
  }
  v25 = Strong;
  v68 = *(_QWORD *)(v23 + 8);
  v26 = v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService;
  v27 = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_paginatingService);
  if (!v27)
    goto LABEL_9;
  v28 = v27;
  v67 = a3;
  v29 = *(_QWORD *)(v26 + 8);
  ObjectType = swift_getObjectType();
  v31 = dispatch thunk of Paginating.bookPaginationEntity.getter(ObjectType, v29);
  swift_unknownObjectRelease(v28);
  v32 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_documentOrdinal);
  v33 = BookPaginationEntity.document(for:)(v32);
  swift_release(v31);
  if (!v33)
  {
LABEL_9:

    swift_unknownObjectRelease(v25);
    return;
  }
  v34 = v33;
  v35 = swift_unknownObjectWeakLoadStrong(v23);
  if (!v35
    || (v36 = v35,
        v37 = *(_QWORD *)(v23 + 8),
        v38 = swift_getObjectType(),
        v39 = dispatch thunk of AnnotationProviding.bookAnnotationEntity.getter(v38, v37),
        v40 = swift_unknownObjectRelease(v36),
        v41 = dispatch thunk of BookAnnotationEntity.documentAnnotationsEntity(for:)(v32, v40),
        swift_release(v39),
        !v41))
  {
    swift_release(v34);
    swift_unknownObjectRelease(v25);
    goto LABEL_11;
  }
  v66 = v41;
  v42 = (double *)(v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_interactiveHighlight);
  v43 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_interactiveHighlight);
  if (!v43)
  {
    v45 = sub_10064D508(a4, a5);
    if (v46)
    {
      v64 = (uint64_t)v45;
      v65 = v46;
      v48 = dispatch thunk of DocumentAnnotationsEntity.highlights.getter(v47);
      if (*(_QWORD *)(v48 + 16))
      {
        v49 = sub_10004CE80(v64, v65);
        if ((v50 & 1) != 0)
        {
          v68 = *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v49);
          swift_retain(v68);
          swift_bridgeObjectRelease(v65);
          swift_bridgeObjectRelease(v48);
          LODWORD(v65) = dispatch thunk of HighlightAnnotationEntity.style.getter(v51);
          swift_release(v68);
LABEL_19:
          if (qword_1009CEAF8 != -1)
            swift_once(&qword_1009CEAF8, sub_10064B980);
          v53 = unk_1009F2710;
          v68 = qword_1009F2708;
          swift_bridgeObjectRetain(unk_1009F2710);
          swift_bridgeObjectRetain(a2);
          Date.init()(v54);
          v55 = type metadata accessor for HighlightAnnotationEntity(0);
          swift_allocObject(v55, *(unsigned int *)(v55 + 48), *(unsigned __int16 *)(v55 + 52));
          v44 = HighlightAnnotationEntity.init(uniqueID:documentOrdinal:location:modificationDate:style:hasNoteText:)(v68, v53, v32, a1, a2, v14, v65, 0);
          v56 = *v42;
          *(_QWORD *)v42 = v44;
          v42[1] = a4;
          v42[2] = a5;
          swift_retain(v44);
          swift_release(*(_QWORD *)&v56);
          v43 = 0;
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease(v65);
      swift_bridgeObjectRelease(v48);
    }
    v52 = swift_getObjectType();
    LODWORD(v65) = dispatch thunk of AnnotationProviding.currentHighlightStyle.getter(v52, v68);
    goto LABEL_19;
  }
  v44 = *(_QWORD *)(v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_interactiveHighlight);
LABEL_22:
  v57 = objc_allocWithZone((Class)AEHighlight);
  swift_retain(v43);
  swift_retain(v44);
  v58 = v34;
  v59 = objc_msgSend(v57, "init", swift_retain(v34).n128_f64[0]);
  objc_msgSend(v59, "setIsVertical:", dispatch thunk of DocumentPaginationEntity.isVerticalDocument.getter(objc_msgSend(v59, "setAnnotation:", v44)) & 1);
  objc_msgSend(v59, "setCornerRadius:", 4.0);

  swift_release(v44);
  swift_release(v58);
  sub_10064D7FC(v67, v59);
  v60 = *(void **)(v6 + OBJC_IVAR____TtC5Books39BookReaderAccessoryHighlightsController_highlightRenderingController);
  if (qword_1009CEAF8 != -1)
    swift_once(&qword_1009CEAF8, sub_10064B980);
  v61 = String._bridgeToObjectiveC()();
  objc_msgSend(v60, "removeHighlightForData:", v61);

  v62 = v59;
  v63 = String._bridgeToObjectiveC()();
  objc_msgSend(v60, "addHighlight:forData:", v62, v63);

  sub_10064DF28(v22);
  swift_unknownObjectRelease(v25);
  swift_release(v66);

  swift_release(v58);
  swift_release(v44);
}

uint64_t sub_100650C8C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 64, 7);
}

double sub_100650CC0()
{
  uint64_t v0;

  return sub_10064E514(*(void **)(v0 + 16));
}

uint64_t sub_100650CD0()
{
  return type metadata accessor for BookReaderAccessoryHighlightsController(0);
}

void sub_100650CD8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[18];

  v2 = type metadata accessor for BookContentAdornmentState(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    v6[1] = &unk_100736B48;
    v6[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v6[4] = (char *)&value witness table for Builtin.Int64 + 64;
    v6[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[6] = &unk_100736B60;
    v6[7] = &unk_100736B48;
    v6[8] = &unk_100736B48;
    v6[9] = &unk_100736B48;
    v6[10] = &unk_100736B60;
    v6[11] = &unk_100736B48;
    sub_1005D004C(319);
    if (v5 <= 0x3F)
    {
      v6[12] = *(_QWORD *)(v4 - 8) + 64;
      v6[13] = &unk_100736B78;
      v6[14] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[15] = &unk_100736B90;
      v6[16] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v6[17] = &unk_100736BA8;
      swift_updateClassMetadata2(a1, 256, 18, v6, a1 + 80);
    }
  }
}

ValueMetadata *type metadata accessor for BookReaderAccessoryHighlightsController.InteractiveHighlight()
{
  return &type metadata for BookReaderAccessoryHighlightsController.InteractiveHighlight;
}

uint64_t destroy for ResolveState(uint64_t a1)
{
  return sub_1002C7FE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5Books12ResolveStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001E160C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ResolveState(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1001E160C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1002C7FE8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for ResolveState(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1002C7FE8(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for ResolveState()
{
  return &type metadata for ResolveState;
}

uint64_t sub_100650ED8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100650EE8(uint64_t *a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v3;

  sub_10064BA28(a1, *(_QWORD *)(v3 + 16), a2, a3);
}

uint64_t sub_100650EF0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100650F14(uint64_t *a1, double a2)
{
  uint64_t v2;

  sub_10064BC14(a1, v2, a2);
}

void sub_100650F1C(uint64_t a1)
{
  uint64_t v1;

  sub_10064BEF8(a1, v1);
}

void sub_100650F24()
{
  uint64_t v0;

  sub_10064C024(v0);
}

uint64_t sub_100650F2C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100650F50(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10064C154(a1, v1);
}

uint64_t sub_100650F58(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1002C7FE8(result, a2, a3 & 1);
  return result;
}

uint64_t sub_100650F70()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100650FA4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc(dword_1009F286C);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_10000AE34;
  return sub_10064CEFC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100651024()
{
  return sub_10000EB10(41);
}

uint64_t sub_10065102C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc(dword_1009EFF54);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_10000AE34;
  return sub_1005E51B4(a1, v4, v5, v6, v7);
}

uint64_t destroy for CFIInfo(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t *_s5Books7CFIInfoVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for CFIInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  return a1;
}

_QWORD *assignWithTake for CFIInfo(_QWORD *a1, _OWORD *a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*a1);
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease(v4);
  return a1;
}

ValueMetadata *type metadata accessor for CFIInfo()
{
  return &type metadata for CFIInfo;
}

id sub_1006511E0()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  swift_beginAccess(&unk_100A1F098, v7, 32, 0);
  v1 = objc_getAssociatedObject(v0, &unk_100A1F098);
  swift_endAccess(v7);
  if (v1)
  {
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v1);
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_10004C7B4((uint64_t)v7, (uint64_t)v8);
  if (!v9)
  {
    sub_10004A7B8((uint64_t)v8);
    goto LABEL_8;
  }
  v2 = type metadata accessor for MachineAuthorizationService(0);
  if ((swift_dynamicCast(&v6, v8, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
  {
LABEL_8:
    v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MachineAuthorizationService(0)), "init");
    swift_beginAccess(&unk_100A1F098, v8, 32, 0);
    v3 = v4;
    objc_setAssociatedObject(v0, &unk_100A1F098, v3, (void *)1);
    swift_endAccess(v8);

    return v3;
  }
  return (id)v6;
}

double BKSceneController.rootBarCoordinator.setter(void *a1)
{
  double result;

  sub_100019B10(a1);
  *(_QWORD *)&result = swift_unknownObjectRelease(a1).n128_u64[0];
  return result;
}

uint64_t sub_100651340()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009F28E0);
  sub_100048F64(v0, (uint64_t)qword_1009F28E0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000028, 0x80000001007DB010);
}

uint64_t sub_1006513C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = swift_allocObject(&unk_100919D40, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = *(_QWORD *)(v0 + 32);
  type metadata accessor for MainActor(0);
  swift_bridgeObjectRetain(v7);
  swift_retain(v6);
  v9 = static MainActor.shared.getter(v8);
  v10 = (_QWORD *)swift_allocObject(&unk_100919D68, 48, 7);
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v6;
  v10[5] = v7;
  swift_release(v6);
  v11 = sub_10030C178((uint64_t)v4, (uint64_t)&unk_1009F29C8, (uint64_t)v10);
  swift_release(v11);
  swift_unknownObjectWeakDestroy(v1 + 16);

  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 32));
  sub_10006BAF8(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), *(_QWORD *)(v1 + 120), *(_QWORD *)(v1 + 128));
  return v1;
}

uint64_t sub_100651528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v6 = type metadata accessor for MainActor(0);
  v5[8] = static MainActor.shared.getter(v6);
  v7 = dispatch thunk of Actor.unownedExecutor.getter(v6, &protocol witness table for MainActor);
  return swift_task_switch(sub_100651598, v7, v8);
}

uint64_t sub_100651598()
{
  uint64_t v0;
  uint64_t v1;
  void *Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  v1 += 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v1);
  if (!Strong)
    goto LABEL_15;
  v3 = *(_QWORD *)(v0 + 56);
  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 56), 2);
    if (v4)
      goto LABEL_4;
LABEL_14:
    swift_bridgeObjectRelease_n(*(_QWORD *)(v0 + 56), 2);

LABEL_15:
    **(_BYTE **)(v0 + 40) = Strong == 0;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  if (v3 < 0)
    v10 = *(_QWORD *)(v0 + 56);
  else
    v10 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + 56), 2);
  result = _CocoaArrayWrapper.endIndex.getter(v10);
  v4 = result;
  if (!result)
    goto LABEL_14;
LABEL_4:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = v3 & 0xC000000000000001;
    v8 = *(_QWORD *)(v0 + 56) + 32;
    do
    {
      if (v7)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, *(_QWORD *)(v0 + 56));
      }
      else
      {
        v9 = *(_QWORD *)(v8 + 8 * v6);
        swift_unknownObjectRetain(v9);
      }
      ++v6;
      objc_msgSend(Strong, "removeInteraction:", v9);
      swift_unknownObjectRelease(v9);
    }
    while (v4 != v6);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1006516E8()
{
  uint64_t v0;

  sub_1006513C0();
  return swift_deallocClassInstance(v0, 137, 7);
}

uint64_t destroy for BookReaderInteractionManager.State(_QWORD *a1)
{
  uint64_t result;

  result = a1[1];
  if (result)
  {
    swift_bridgeObjectRelease(result);
    swift_release(a1[3]);
    swift_release(a1[4]);
    swift_release(a1[5]);
    swift_release(a1[6]);
    swift_release(a1[7]);
    swift_release(a1[8]);
    swift_release(a1[9]);
    return swift_bridgeObjectRelease(a1[11]);
  }
  return result;
}

uint64_t initializeWithCopy for BookReaderInteractionManager.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v5 = *(_QWORD *)(a2 + 24);
    v6 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = v6;
    v7 = *(_QWORD *)(a2 + 40);
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = v8;
    v9 = *(_QWORD *)(a2 + 56);
    v10 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 64) = v10;
    v12 = *(_QWORD *)(a2 + 72);
    v11 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v12;
    *(_QWORD *)(a1 + 80) = v11;
    v13 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v13;
    swift_bridgeObjectRetain(v4);
    swift_retain(v5);
    swift_retain(v6);
    swift_retain(v7);
    swift_retain(v8);
    swift_retain(v9);
    swift_retain(v10);
    swift_retain(v12);
    swift_bridgeObjectRetain(v13);
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v14;
    v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
  }
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t assignWithCopy for BookReaderInteractionManager.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    if (v5)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v6 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v6;
      swift_bridgeObjectRetain(v6);
      swift_bridgeObjectRelease(v4);
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
      v7 = *(_QWORD *)(a2 + 24);
      v8 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v7;
      swift_retain(v7);
      swift_release(v8);
      v9 = *(_QWORD *)(a2 + 32);
      v10 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 32) = v9;
      swift_retain(v9);
      swift_release(v10);
      v11 = *(_QWORD *)(a2 + 40);
      v12 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v11;
      swift_retain(v11);
      swift_release(v12);
      v13 = *(_QWORD *)(a2 + 48);
      v14 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 48) = v13;
      swift_retain(v13);
      swift_release(v14);
      v15 = *(_QWORD *)(a2 + 56);
      v16 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 56) = v15;
      swift_retain(v15);
      swift_release(v16);
      v17 = *(_QWORD *)(a2 + 64);
      v18 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 64) = v17;
      swift_retain(v17);
      swift_release(v18);
      v19 = *(_QWORD *)(a2 + 72);
      v20 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 72) = v19;
      swift_retain(v19);
      swift_release(v20);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      v21 = *(_QWORD *)(a2 + 88);
      v22 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 88) = v21;
      swift_bridgeObjectRetain(v21);
      swift_bridgeObjectRelease(v22);
    }
    else
    {
      sub_100651A98((_QWORD *)a1);
      v32 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v32;
      v33 = *(_OWORD *)(a2 + 80);
      v35 = *(_OWORD *)(a2 + 32);
      v34 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v33;
      *(_OWORD *)(a1 + 32) = v35;
      *(_OWORD *)(a1 + 48) = v34;
    }
  }
  else if (v5)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v23 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 8) = v23;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v24 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v24;
    v25 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v25;
    v26 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v26;
    v27 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 48) = v27;
    v28 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v28;
    v29 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 64) = v29;
    v30 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 72) = v30;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v31 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 88) = v31;
    swift_bridgeObjectRetain(v23);
    swift_retain(v24);
    swift_retain(v25);
    swift_retain(v26);
    swift_retain(v27);
    swift_retain(v28);
    swift_retain(v29);
    swift_retain(v30);
    swift_bridgeObjectRetain(v31);
  }
  else
  {
    v36 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v36;
    v37 = *(_OWORD *)(a2 + 32);
    v38 = *(_OWORD *)(a2 + 48);
    v39 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v39;
    *(_OWORD *)(a1 + 32) = v37;
    *(_OWORD *)(a1 + 48) = v38;
  }
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

_QWORD *sub_100651A98(_QWORD *a1)
{
  destroy for BookAppEntity(a1);
  return a1;
}

__n128 initializeWithTake for BookReaderInteractionManager.State(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for BookReaderInteractionManager.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (!v4)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 8);
  if (!v5)
  {
    sub_100651A98((_QWORD *)a1);
LABEL_5:
    v15 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v15;
    v16 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v16;
    v17 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v17;
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release(v6);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release(v7);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release(v8);
  v9 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release(v9);
  v10 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release(v10);
  v11 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release(v11);
  v12 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release(v12);
  v13 = *(_QWORD *)(a2 + 88);
  v14 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v13;
  swift_bridgeObjectRelease(v14);
LABEL_6:
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookReaderInteractionManager.State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 97))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BookReaderInteractionManager.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookReaderInteractionManager.State()
{
  return &type metadata for BookReaderInteractionManager.State;
}

uint64_t sub_100651CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *Strong;
  uint64_t v17;
  uint64_t v18;
  char v19;
  objc_class *v20;
  _BYTE *v21;
  id v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;
  uint64_t v28;
  _QWORD v29[3];

  if (qword_1009CEB00 != -1)
    swift_once(&qword_1009CEB00, sub_100651340);
  v6 = type metadata accessor for Logger(0);
  sub_100048F64(v6, (uint64_t)qword_1009F28E0);
  swift_retain_n(a2, 2);
  v7 = swift_retain_n(a3, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (!os_log_type_enabled(v8, v9))
  {

    swift_release_n(a3, 2);
    swift_release_n(a2, 2);
    if (a1)
      goto LABEL_5;
LABEL_7:
    Strong = 0;
    goto LABEL_8;
  }
  v25 = a1;
  v10 = (uint8_t *)swift_slowAlloc(12, -1);
  v11 = swift_slowAlloc(32, -1);
  v26 = v11;
  *(_DWORD *)v10 = 136315138;
  v28 = a2;
  v29[0] = a3;
  swift_retain(a2);
  swift_retain(a3);
  v12 = String.init<A>(describing:)(&v28, &type metadata for BookReaderChangeThemeIntent);
  v14 = v13;
  v28 = sub_100040F58(v12, v13, &v26);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29, v10 + 4, v10 + 12);
  swift_release_n(a3, 2);
  swift_release_n(a2, 2);
  v15 = v14;
  a1 = v25;
  swift_bridgeObjectRelease(v15);
  _os_log_impl((void *)&_mh_execute_header, v8, v9, "Performing %s", v10, 0xCu);
  swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v11, -1, -1);
  swift_slowDealloc(v10, -1, -1);

  if (!v25)
    goto LABEL_7;
LABEL_5:
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + 16);
LABEL_8:
  sub_100204A80();
  v18 = v17;
  IntentParameter.wrappedValue.getter(&v28);
  v19 = v28;
  v20 = (objc_class *)type metadata accessor for ThemeIDProvider();
  v21 = objc_allocWithZone(v20);
  v21[OBJC_IVAR____TtC5Books15ThemeIDProvider_setting] = v19;
  v27.receiver = v21;
  v27.super_class = v20;
  v22 = objc_msgSendSuper2(&v27, "init");
  v29[2] = v20;
  v28 = (uint64_t)v22;
  sub_10065271C(Strong, v18, (uint64_t)&v28);

  v23 = sub_10004A7B8((uint64_t)&v28);
  return static IntentResult.result<>()(v23);
}

uint64_t sub_100651F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *Strong;
  const char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];

  if (qword_1009CEB00 != -1)
    swift_once(&qword_1009CEB00, sub_100651340);
  v6 = type metadata accessor for Logger(0);
  sub_100048F64(v6, (uint64_t)qword_1009F28E0);
  swift_retain_n(a2, 2);
  v7 = swift_retain_n(a3, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (!os_log_type_enabled(v8, v9))
  {

    swift_release_n(a3, 2);
    swift_release_n(a2, 2);
    if (a1)
      goto LABEL_5;
LABEL_7:
    Strong = 0;
    goto LABEL_8;
  }
  v20 = a1;
  v10 = (uint8_t *)swift_slowAlloc(12, -1);
  v11 = swift_slowAlloc(32, -1);
  v21 = v11;
  v22 = a2;
  *(_DWORD *)v10 = 136315138;
  v23[0] = a3;
  swift_retain(a2);
  swift_retain(a3);
  v12 = String.init<A>(describing:)(&v22, &type metadata for BookReaderChangePageNavigationIntent);
  v14 = v13;
  v22 = sub_100040F58(v12, v13, &v21);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, v23, v10 + 4, v10 + 12);
  swift_release_n(a3, 2);
  swift_release_n(a2, 2);
  v15 = v14;
  a1 = v20;
  swift_bridgeObjectRelease(v15);
  _os_log_impl((void *)&_mh_execute_header, v8, v9, "Performing %s", v10, 0xCu);
  swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v11, -1, -1);
  swift_slowDealloc(v10, -1, -1);

  if (!v20)
    goto LABEL_7;
LABEL_5:
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + 16);
LABEL_8:
  v17 = sub_1003A0AEC();
  v23[2] = &type metadata for BookReaderChangePageNavigationIntent;
  v22 = a2;
  v23[0] = a3;
  swift_retain(a2);
  swift_retain(a3);
  sub_10065271C(Strong, (uint64_t)v17, (uint64_t)&v22);

  v18 = sub_10004A7B8((uint64_t)&v22);
  return static IntentResult.result<>()(v18);
}

uint64_t sub_1006521C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *Strong;
  char **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[3];

  if (qword_1009CEB00 != -1)
    swift_once(&qword_1009CEB00, sub_100651340);
  v6 = type metadata accessor for Logger(0);
  sub_100048F64(v6, (uint64_t)qword_1009F28E0);
  swift_retain_n(a2, 2);
  v7 = swift_retain_n(a3, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v21 = a1;
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v22 = v11;
    v23 = a2;
    *(_DWORD *)v10 = 136315138;
    v24[0] = a3;
    swift_retain(a2);
    swift_retain(a3);
    v12 = String.init<A>(describing:)(&v23, &type metadata for BookReaderNavigatePageInBookIntent);
    v14 = v13;
    v23 = sub_100040F58(v12, v13, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24, v10 + 4, v10 + 12);
    swift_release_n(a3, 2);
    swift_release_n(a2, 2);
    v15 = v14;
    a1 = v21;
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Performing %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

    if (v21)
    {
LABEL_5:
      Strong = (void *)swift_unknownObjectWeakLoadStrong(a1 + 16);
      goto LABEL_8;
    }
  }
  else
  {

    swift_release_n(a3, 2);
    swift_release_n(a2, 2);
    if (a1)
      goto LABEL_5;
  }
  Strong = 0;
LABEL_8:
  IntentParameter.wrappedValue.getter(&v23);
  if ((_BYTE)v23)
    v17 = &selRef_books_pageBackward_;
  else
    v17 = &selRef_books_pageForward_;
  v18 = (uint64_t)*v17;
  v24[2] = &type metadata for BookReaderNavigatePageInBookIntent;
  v23 = a2;
  v24[0] = a3;
  swift_retain(a2);
  swift_retain(a3);
  sub_10065271C(Strong, v18, (uint64_t)&v23);

  v19 = sub_10004A7B8((uint64_t)&v23);
  return static IntentResult.result<>()(v19);
}

uint64_t sub_100652448@<X0>(char *Strong@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  int v23;
  const char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[4];

  v29 = a3;
  v5 = type metadata accessor for NavigateSequentiallyDirection(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1009CEB00 != -1)
    swift_once(&qword_1009CEB00, sub_100651340);
  v9 = type metadata accessor for Logger(0);
  sub_100048F64(v9, (uint64_t)qword_1009F28E0);
  v10 = swift_retain_n(a2, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (!os_log_type_enabled(v11, v12))
  {

    swift_release_n(a2, 2);
    if (!Strong)
      goto LABEL_8;
    goto LABEL_7;
  }
  v28 = v5;
  v13 = swift_slowAlloc(12, -1);
  v27 = v6;
  v14 = (uint8_t *)v13;
  v15 = swift_slowAlloc(32, -1);
  v30 = a2;
  v31[0] = v15;
  *(_DWORD *)v14 = 136315138;
  swift_retain(a2);
  v16 = String.init<A>(describing:)(&v30, &type metadata for BookReaderNavigatePagesIntent);
  v17 = v8;
  v18 = Strong;
  v20 = v19;
  v30 = sub_100040F58(v16, v19, v31);
  v5 = v28;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31, v14 + 4, v14 + 12);
  swift_release_n(a2, 2);
  v21 = v20;
  Strong = v18;
  v8 = v17;
  swift_bridgeObjectRelease(v21);
  _os_log_impl((void *)&_mh_execute_header, v11, v12, "Performing %s", v14, 0xCu);
  swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v15, -1, -1);
  v22 = v14;
  v6 = v27;
  swift_slowDealloc(v22, -1, -1);

  if (Strong)
LABEL_7:
    Strong = (char *)swift_unknownObjectWeakLoadStrong(Strong + 16);
LABEL_8:
  IntentParameter.wrappedValue.getter(v8);
  v23 = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 88))(v8, v5);
  if (v23 == enum case for NavigateSequentiallyDirection.next(_:))
  {
    v24 = "books_pageForward:";
  }
  else if (v23 == enum case for NavigateSequentiallyDirection.previous(_:))
  {
    v24 = "books_pageBackward:";
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
    v24 = 0;
  }
  v31[3] = (uint64_t)&type metadata for BookReaderNavigatePagesIntent;
  v31[0] = a2;
  swift_retain(a2);
  sub_10065271C(Strong, (uint64_t)v24, (uint64_t)v31);

  v25 = sub_10004A7B8((uint64_t)v31);
  return static IntentResult.result<>()(v25);
}

uint64_t sub_10065271C(void *a1, uint64_t a2, uint64_t a3)
{
  NSObject *v5;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  _BYTE v27[32];

  if (a2 && a1)
  {
    v5 = a1;
    if ((sub_1005D3008(a2, a3) & 1) != 0)
    {

      return 1;
    }
    if (qword_1009CEB00 != -1)
      swift_once(&qword_1009CEB00, sub_100651340);
    v11 = type metadata accessor for Logger(0);
    sub_100048F64(v11, (uint64_t)qword_1009F28E0);
    v12 = sub_10004AA7C(a3, (uint64_t)v27);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    if (!os_log_type_enabled(v13, v14))
    {

      sub_10004A7B8((uint64_t)v27);
      return 0;
    }
    v15 = swift_slowAlloc(22, -1);
    v16 = swift_slowAlloc(64, -1);
    v26 = v16;
    *(_DWORD *)v15 = 136315394;
    v17 = Selector.description.getter(a2);
    v19 = v18;
    v24 = sub_100040F58(v17, v18, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v15 + 4, v15 + 12);
    swift_bridgeObjectRelease(v19);
    *(_WORD *)(v15 + 12) = 2080;
    sub_10004AA7C((uint64_t)v27, (uint64_t)&v24);
    v20 = sub_10004CFD4((uint64_t *)&unk_1009D04E0);
    v21 = String.init<A>(describing:)(&v24, v20);
    v23 = v22;
    v24 = sub_100040F58(v21, v22, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v15 + 14, v15 + 22);
    swift_bridgeObjectRelease(v23);
    sub_10004A7B8((uint64_t)v27);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unable to perform action: %s with sender: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {
    if (qword_1009CEB00 != -1)
      swift_once(&qword_1009CEB00, sub_100651340);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100048F64(v7, (uint64_t)qword_1009F28E0);
    v5 = Logger.logObject.getter(v8);
    v9 = static os_log_type_t.error.getter(v5);
    if (os_log_type_enabled(v5, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v9, "Missing responder and/or action", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }
  }

  return 0;
}

void sub_1006529F4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v1[1];
  if (v3)
  {
    v4 = v1[11];
    v5 = v1[7];
    v16 = v1[8];
    v7 = v1[5];
    v6 = v1[6];
    v8 = v1[3];
    v9 = v1[4];
    v17 = *v1;
    v18 = v1[9];
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain_n(v4, 2);
    swift_bridgeObjectRetain_n(v3, 2);
    swift_retain_n(v8, 2);
    swift_retain_n(v9, 2);
    swift_retain_n(v7, 2);
    swift_retain_n(v6, 2);
    swift_retain_n(v5, 2);
    swift_retain_n(v16, 2);
    swift_retain_n(v18, 2);
    v10 = String.hash(into:)(a1, v17, v3);
    EntityProperty.wrappedValue.getter(&v19, v10);
    v11 = v20;
    if (v20)
    {
      v12 = v19;
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v11);
      String.hash(into:)(a1, v12, v11);
      swift_bridgeObjectRelease_n(v11, 2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    EntityProperty.wrappedValue.getter(&v19, v13);
    v14 = v20;
    if (v20)
    {
      v15 = v19;
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v14);
      String.hash(into:)(a1, v15, v14);
      swift_bridgeObjectRelease_n(v14, 2);
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    sub_10004E97C(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006BAF8);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  sub_10004E97C(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006BAF8);
  Hasher._combine(_:)(v1[12] & 1);
}

Swift::Int sub_100652BDC()
{
  __int128 *v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  _QWORD v5[9];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  char v12;

  v1 = v0[5];
  v10 = v0[4];
  v11 = v1;
  v12 = *((_BYTE *)v0 + 96);
  v2 = v0[1];
  v6 = *v0;
  v7 = v2;
  v3 = v0[3];
  v8 = v0[2];
  v9 = v3;
  Hasher.init(_seed:)(v5, 0);
  sub_1006529F4((uint64_t)v5);
  return Hasher._finalize()();
}

void sub_100652C40(uint64_t a1)
{
  sub_1006529F4(a1);
}

Swift::Int sub_100652C88(uint64_t a1)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _QWORD v6[9];
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;

  v2 = v1[5];
  v11 = v1[4];
  v12 = v2;
  v13 = *((_BYTE *)v1 + 96);
  v3 = v1[1];
  v7 = *v1;
  v8 = v3;
  v4 = v1[3];
  v9 = v1[2];
  v10 = v4;
  Hasher.init(_seed:)(v6, a1);
  sub_1006529F4((uint64_t)v6);
  return Hasher._finalize()();
}

uint64_t sub_100652CE8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  char v12;
  _OWORD v13[6];
  char v14;

  v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  v12 = *(_BYTE *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v6 = *(_OWORD *)(a2 + 32);
  v7 = *(_OWORD *)(a2 + 48);
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  v14 = *(_BYTE *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  v13[2] = v6;
  v13[3] = v7;
  return sub_100653408((uint64_t)v11, (uint64_t)v13) & 1;
}

unint64_t sub_100652D54()
{
  unint64_t result;

  result = qword_1009F29B0;
  if (!qword_1009F29B0)
  {
    result = swift_getWitnessTable(&unk_100736C50, &type metadata for BookReaderInteractionManager.State);
    atomic_store(result, (unint64_t *)&qword_1009F29B0);
  }
  return result;
}

uint64_t sub_100652D98(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a3;
  *(_OWORD *)(v3 + 56) = *a2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 72) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100652E0C, v5, v6);
}

uint64_t sub_100652E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t Strong;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD **)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  v3 += 16;
  swift_beginAccess(v3, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  v4[3] = sub_10004CFD4(&qword_1009D1328);
  v4[4] = sub_10063F22C();
  sub_1000257F8(v4);
  sub_100651CC8(Strong, v2, v1);
  v6 = swift_release(Strong);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_100652EB8(uint64_t a1, _OWORD *a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_OWORD *)(v3 + 16) = *a2;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 32) = v5;
  *v5 = v3;
  v5[1] = sub_100652F30;
  return v7(a1, v3 + 16);
}

uint64_t sub_100652F30()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 32));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100652F7C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a3;
  *(_OWORD *)(v3 + 56) = *a2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 72) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100652FF0, v5, v6);
}

uint64_t sub_100652FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t Strong;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD **)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  v3 += 16;
  swift_beginAccess(v3, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  v4[3] = sub_10004CFD4(&qword_1009D1328);
  v4[4] = sub_10063F22C();
  sub_1000257F8(v4);
  sub_100651F5C(Strong, v2, v1);
  v6 = swift_release(Strong);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_10065309C(uint64_t a1, _OWORD *a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_OWORD *)(v3 + 16) = *a2;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 32) = v5;
  *v5 = v3;
  v5[1] = sub_100653B4C;
  return v7(a1, v3 + 16);
}

uint64_t sub_100653114(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a3;
  *(_OWORD *)(v3 + 56) = *a2;
  v4 = type metadata accessor for MainActor(0);
  *(_QWORD *)(v3 + 72) = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_100653188, v5, v6);
}

uint64_t sub_100653188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t Strong;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD **)(v0 + 40);
  swift_release(*(_QWORD *)(v0 + 72));
  v3 += 16;
  swift_beginAccess(v3, v0 + 16, 0, 0);
  Strong = swift_weakLoadStrong(v3);
  v4[3] = sub_10004CFD4(&qword_1009D1328);
  v4[4] = sub_10063F22C();
  sub_1000257F8(v4);
  sub_1006521C0(Strong, v2, v1);
  v6 = swift_release(Strong);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_100653234(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[5] = a1;
  v3[6] = a3;
  v3[7] = *a2;
  v4 = type metadata accessor for MainActor(0);
  v3[8] = static MainActor.shared.getter(v4);
  v5 = dispatch thunk of Actor.unownedExecutor.getter(v4, &protocol witness table for MainActor);
  return swift_task_switch(sub_1006532A8, v5, v6);
}

uint64_t sub_1006532A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *Strong;
  _QWORD *v5;
  __n128 v6;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD **)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  swift_release(*(_QWORD *)(v0 + 64));
  v3 += 16;
  swift_beginAccess(v3, v0 + 16, 0, 0);
  Strong = (char *)swift_weakLoadStrong(v3);
  v2[3] = sub_10004CFD4(&qword_1009D1328);
  v2[4] = sub_10063F22C();
  v5 = sub_1000257F8(v2);
  sub_100652448(Strong, v1, (uint64_t)v5);
  v6 = swift_release(Strong);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v6);
}

uint64_t sub_100653344(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = *a2;
  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc(a3[1]);
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_1006533BC;
  return v7(a1, v3 + 16);
}

uint64_t sub_1006533BC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 24));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100653408(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[2];
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v5 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v15 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 88);
  v16 = *(_QWORD *)a2;
  v17 = *(_QWORD *)(a2 + 8);
  v18 = *(_QWORD *)(a2 + 16);
  v20 = *(_QWORD *)(a2 + 24);
  v19 = *(_QWORD *)(a2 + 32);
  v22 = *(_QWORD *)(a2 + 40);
  v21 = *(_QWORD *)(a2 + 48);
  v24 = *(_QWORD *)(a2 + 56);
  v23 = *(_QWORD *)(a2 + 64);
  v26 = *(_QWORD *)(a2 + 72);
  v25 = *(_QWORD *)(a2 + 80);
  v27 = *(_QWORD *)(a2 + 88);
  if (!v4)
  {
    if (!v17)
    {
      sub_10004E97C((_QWORD *)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004E9D0);
      goto LABEL_8;
    }
LABEL_6:
    v31 = v5;
    v32 = v4;
    v33 = v7;
    v34 = v6;
    v35 = v9;
    v36 = v8;
    v37 = v11;
    v38 = v10;
    v39 = v13;
    v40 = v12;
    v41 = v15;
    v42 = v14;
    v43 = v16;
    v44 = v17;
    v45 = v18;
    v46 = v20;
    v47 = v19;
    v48 = v22;
    v49 = v21;
    v50 = v24;
    v51 = v23;
    v52 = v26;
    v53 = v25;
    v54 = v27;
    sub_10004E97C((_QWORD *)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004E9D0);
    sub_10004E97C((_QWORD *)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004E9D0);
    sub_1006535B4((uint64_t)&v31);
    v29 = 0;
    return v29 & 1;
  }
  if (!v17)
    goto LABEL_6;
  v55[0] = v5;
  v55[1] = v4;
  v56 = v7 & 1;
  v57 = v6;
  v58 = v9;
  v59 = v8;
  v60 = v11;
  v61 = v10;
  v62 = v13;
  v63 = v12;
  v64 = v15;
  v65 = v14;
  v31 = v16;
  v32 = v17;
  LOBYTE(v33) = v18 & 1;
  v34 = v20;
  v35 = v19;
  v36 = v22;
  v37 = v21;
  v38 = v24;
  v39 = v23;
  v40 = v26;
  v41 = v25;
  v42 = v27;
  sub_10004E97C((_QWORD *)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004E9D0);
  sub_10004E97C((_QWORD *)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10004E9D0);
  v28 = sub_1001FAC00(v55, &v31);
  sub_10004E97C((_QWORD *)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006BAF8);
  sub_10004E97C((_QWORD *)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10006BAF8);
  if ((v28 & 1) != 0)
  {
LABEL_8:
    v29 = ((*(_BYTE *)(a1 + 96) & 1) == 0) ^ *(_BYTE *)(a2 + 96);
    return v29 & 1;
  }
  v29 = 0;
  return v29 & 1;
}

uint64_t sub_1006535B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 96);
  v3 = *(_QWORD *)(a1 + 112);
  v4 = *(_QWORD *)(a1 + 120);
  v5 = *(_QWORD *)(a1 + 128);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_QWORD *)(a1 + 152);
  v12 = *(_OWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 176);
  v9 = *(_QWORD *)(a1 + 184);
  sub_10006BAF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  sub_10006BAF8(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v10, v9);
  return a1;
}

uint64_t sub_100653674()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100653698()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1006536CC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc(dword_1009F29C4);
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1001FC2C4;
  return sub_100651528(a1, v4, v5, v7, v6);
}

uint64_t sub_100653744()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100653768(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1009F29DC);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, _QWORD *, uint64_t))((char *)&dword_1009F29D8 + dword_1009F29D8))(a1, a2, v2);
}

uint64_t sub_1006537D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006537FC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1009F29EC);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, _QWORD *, int *))((char *)&dword_1009F29E8 + dword_1009F29E8))(a1, a2, v6);
}

uint64_t sub_10065387C(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1009F2A04);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, _OWORD *, uint64_t))((char *)&dword_1009F2A00 + dword_1009F2A00))(a1, a2, v2);
}

uint64_t sub_1006538EC(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1009F2A14);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, _OWORD *, int *))((char *)&dword_1009F2A10 + dword_1009F2A10))(a1, a2, v6);
}

uint64_t sub_10065396C(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1009F2A2C);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, _OWORD *, uint64_t))((char *)&dword_1009F2A28 + dword_1009F2A28))(a1, a2, v2);
}

uint64_t sub_1006539DC(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1009F2A3C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1001FC2C4;
  return ((uint64_t (*)(uint64_t, _OWORD *, int *))((char *)&dword_1009F2A38 + dword_1009F2A38))(a1, a2, v6);
}

uint64_t sub_100653A5C(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1009F2A54);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_10000AE34;
  return ((uint64_t (*)(uint64_t, _OWORD *, uint64_t))((char *)&dword_1009F2A50 + dword_1009F2A50))(a1, a2, v2);
}

uint64_t sub_100653ACC(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;

  v6 = *(int **)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1009F2A64);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_10000AE34;
  return ((uint64_t (*)(uint64_t, _OWORD *, int *))((char *)&dword_1009F2A60 + dword_1009F2A60))(a1, a2, v6);
}

uint64_t sub_100653B5C(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a2 + 16))(a2, a1 & 1);
}

id sub_100653C70(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return sub_100653CD0(a1, a2, a3, a4, a5);
}

id sub_100653CD0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v11;
  uint64_t *v12;
  id v13;
  id v14;
  objc_super v16;

  v11 = &v5[OBJC_IVAR___BKDebugBoolDefaultSwitch_type];
  *(_QWORD *)v11 = a2;
  *((_QWORD *)v11 + 1) = a3;
  *((_QWORD *)v11 + 2) = 0;
  v11[24] = 0;
  v12 = (uint64_t *)&v5[OBJC_IVAR___BKDebugBoolDefaultSwitch_action];
  *v12 = a4;
  v12[1] = a5;
  sub_10002ACF0(a2, a3);
  sub_10002ACF0(a4, a5);
  v16.receiver = v5;
  v16.super_class = (Class)type metadata accessor for DebugBoolDefaultSwitch();
  v13 = objc_msgSendSuper2(&v16, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setOn:", a1 & 1);
  v14 = v13;
  objc_msgSend(v14, "addTarget:action:forControlEvents:", v14, "didTapWithSender:", 4096);
  sub_10002AD00(a4, a5);
  sub_10002AD00(a2, a3);

  return v14;
}

id sub_100653F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v9;
  NSString v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  _QWORD v16[5];
  uint64_t v17;

  v5 = v4;
  v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v10 = String._bridgeToObjectiveC()();
  v11 = swift_bridgeObjectRelease(a2).n128_u64[0];
  if (a3)
  {
    v16[4] = a3;
    v17 = a4;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_10004DCB4;
    v16[3] = &unk_100919F60;
    v12 = _Block_copy(v16);
    v13 = v17;
    swift_retain(a4);
    v11 = swift_release(v13).n128_u64[0];
  }
  else
  {
    v12 = 0;
  }
  v14 = objc_msgSend(v5, "initWithDefaults:key:action:", v9, v10, v12, *(double *)&v11);
  sub_10002AD00(a3, a4);
  _Block_release(v12);

  return v14;
}

id sub_100654168(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return sub_1006541C8(a1, a2, a3, a4, a5);
}

id sub_1006541C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v9;
  uint64_t *v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  id v15;
  objc_super v17;

  v9 = &v5[OBJC_IVAR___BKDebugBoolDefaultSwitch_type];
  *(_QWORD *)v9 = a1;
  *((_QWORD *)v9 + 1) = a2;
  *((_QWORD *)v9 + 2) = a3;
  v9[24] = 1;
  v10 = (uint64_t *)&v5[OBJC_IVAR___BKDebugBoolDefaultSwitch_action];
  *v10 = a4;
  v10[1] = a5;
  v11 = a1;
  swift_bridgeObjectRetain(a3);
  sub_10002ACF0(a4, a5);
  v17.receiver = v5;
  v17.super_class = (Class)type metadata accessor for DebugBoolDefaultSwitch();
  v12 = objc_msgSendSuper2(&v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v11, "BOOLForKey:", v13, swift_bridgeObjectRelease(a3).n128_f64[0]);

  objc_msgSend(v12, "setOn:", v14);
  v15 = v12;
  objc_msgSend(v15, "addTarget:action:forControlEvents:", v15, "didTapWithSender:", 4096);
  sub_10002AD00(a4, a5);

  return v15;
}

void sub_100654404(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSString v9;
  void (*v10)(id);

  v2 = v1;
  v3 = objc_msgSend(a1, "isOn");
  v4 = v1 + OBJC_IVAR___BKDebugBoolDefaultSwitch_type;
  v6 = *(void **)(v1 + OBJC_IVAR___BKDebugBoolDefaultSwitch_type);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___BKDebugBoolDefaultSwitch_type + 8);
  v7 = *(_QWORD *)(v4 + 16);
  if (*(_BYTE *)(v4 + 24) == 1)
  {
    v8 = v6;
    swift_bridgeObjectRetain(v7);
    v9 = String._bridgeToObjectiveC()();
    objc_msgSend(v8, "setBool:forKey:", v3, v9, swift_bridgeObjectRelease(v7).n128_f64[0]);

  }
  else if (v6)
  {
    sub_10002ACF0((uint64_t)v6, v5);
    ((void (*)(id))v6)(v3);
    sub_100654650(v6, v5, v7, 0);
  }
  v10 = *(void (**)(id))(v2 + OBJC_IVAR___BKDebugBoolDefaultSwitch_action);
  if (v10)
    v10(v3);
}

id sub_100654578()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugBoolDefaultSwitch();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for DebugBoolDefaultSwitch()
{
  return objc_opt_self(BKDebugBoolDefaultSwitch);
}

void sub_100654610(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v5;

  if ((a4 & 1) != 0)
  {
    v5 = a1;
    swift_bridgeObjectRetain(a3);
  }
  else
  {
    sub_10002ACF0((uint64_t)a1, a2);
  }
}

void destroy for DebugBoolDefaultType(uint64_t a1)
{
  sub_100654650(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_100654650(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {

    swift_bridgeObjectRelease(a3);
  }
  else
  {
    sub_10002AD00((uint64_t)a1, a2);
  }
}

uint64_t initializeWithCopy for DebugBoolDefaultType(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_100654610(*(void **)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for DebugBoolDefaultType(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_100654610(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_100654650(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DebugBoolDefaultType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_100654650(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugBoolDefaultType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugBoolDefaultType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_100654820(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DebugBoolDefaultType()
{
  return &type metadata for DebugBoolDefaultType;
}

uint64_t sub_10065483C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100654874(char **a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  double v17;
  _QWORD *v18;
  int64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  char **v38;
  uint64_t (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;

  v5 = sub_10004CFD4(&qword_1009EC400);
  v6 = __chkstk_darwin(v5);
  v45 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Book.Metadata(0, v6);
  v9 = __chkstk_darwin(v8);
  v44 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for SeedBook(0, v9);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v43 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)v37 - v15;
  v46 = *a1;
  *(_QWORD *)&v17 = swift_bridgeObjectRetain(v46).n128_u64[0];
  sub_100654D34(&v46, v17);
  if (v2)
  {
    swift_release(v46);
    __break(1u);
  }
  else
  {
    v18 = v46;
    v19 = *((_QWORD *)v46 + 2);
    if (v19)
    {
      v37[1] = 0;
      v38 = a2;
      v46 = (char *)_swiftEmptyArrayStorage;
      sub_100366F58(0, v19, 0);
      v20 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v37[0] = v18;
      v41 = v20;
      v42 = v16;
      v21 = (char *)v18 + v20;
      v22 = *(_QWORD *)(v12 + 72);
      v39 = *(uint64_t (**)(char *, char *, uint64_t))(v12 + 16);
      v40 = v22;
      do
      {
        v23 = v43;
        v24 = v39(v43, v21, v11);
        v25 = v11;
        v26 = SeedBook.storeID.getter(v24);
        v27 = v12;
        v28 = v44;
        v29 = SeedBook.metadata.getter();
        v30 = v45;
        SeedBook.positiveAffinitySource.getter(v29);
        v31 = v26;
        v11 = v25;
        v32 = v28;
        v12 = v27;
        SeedBook.init(storeID:metadata:positiveAffinitySource:)(v31, v32, v30);
        (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v25);
        v33 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native(v46) & 1) == 0)
        {
          sub_100366F58(0, *((_QWORD *)v33 + 2) + 1, 1);
          v33 = v46;
        }
        v35 = *((_QWORD *)v33 + 2);
        v34 = *((_QWORD *)v33 + 3);
        if (v35 >= v34 >> 1)
        {
          sub_100366F58(v34 > 1, v35 + 1, 1);
          v33 = v46;
        }
        *((_QWORD *)v33 + 2) = v35 + 1;
        v36 = v40;
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v33[v41 + v35 * v40], v42, v25);
        v46 = v33;
        v21 += v36;
        --v19;
      }
      while (v19);
      swift_release(v37[0]);
      a2 = v38;
    }
    else
    {
      swift_release(v46);
      v33 = (char *)_swiftEmptyArrayStorage;
    }
    *a2 = v33;
  }
}

uint64_t sub_100654B34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  char v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  double v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a1;
  v1 = sub_10004CFD4(&qword_1009D30B8);
  __chkstk_darwin(v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_10004CFD4(&qword_1009D30C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - v8;
  v10 = type metadata accessor for Book.MediaType(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = Book.storeID.getter(v11);
  v14 = Book.mediaType.getter(v29);
  v28 = Book.seriesID.getter(v14);
  v16 = v15;
  v27 = Book.sources.getter();
  Book.rationale.getter(v17);
  v18 = type metadata accessor for Book.Rationale(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v18) == 1)
  {
    sub_100010960((uint64_t)v6, &qword_1009D30C0);
    v20 = 1;
  }
  else
  {
    v21 = Book.Rationale.seedBooksByMethodology.getter();
    v22 = sub_100587FC8(v21);
    v23 = swift_bridgeObjectRelease(v21);
    Book.Rationale.conditionalScore.getter(v23);
    Book.Rationale.init(conditionalScore:seedBooksByMethodology:)(v22);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v18);
    v20 = 0;
  }
  v24 = (*(double (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v9, v20, 1, v18);
  Book.content.getter(v24);
  return Book.init(storeID:mediaType:seriesID:sources:rationale:content:)(v29, v13, v28, v16 & 1, v27, v9, v3);
}

void sub_100654D34(_QWORD *a1, double a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6[2];

  v3 = *(_QWORD *)(type metadata accessor for SeedBook(0, a2) - 8);
  v4 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v4 = (_QWORD *)sub_100699670(v4);
  v5 = v4[2];
  v6[0] = (uint64_t)v4 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v6[1] = v5;
  sub_100654DB4(v6);
  *a1 = v4;
}

void sub_100654DB4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  Swift::Int v38;
  Swift::Int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  char *v63;
  uint64_t v64;
  double v65;
  uint64_t (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  double v70;
  void (*v71)(char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  double v82;
  uint64_t (*v83)(uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t (*v113)(uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  double v115;
  uint64_t (*v116)(uint64_t, uint64_t);
  uint64_t v117;
  char *v118;
  uint64_t v119;
  double v120;
  void (*v121)(char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  void (*v126)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v128;
  unint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  BOOL v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  BOOL v154;
  uint64_t v155;
  char v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  BOOL v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  unint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  unint64_t v185;
  char *v186;
  _QWORD *v187;
  uint64_t v188;
  char *v189;
  _QWORD *v190;
  Swift::Int v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  uint64_t (*v211)(char *, uint64_t, uint64_t);
  char *v212;
  char *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  uint64_t *v217;
  uint64_t v218;
  uint64_t v219;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009F2AB0);
  __chkstk_darwin(v4);
  v206 = (char *)&v188 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v188 - v7;
  __chkstk_darwin(v9);
  v197 = (char *)&v188 - v10;
  __chkstk_darwin(v11);
  v13 = (char *)&v188 - v12;
  __chkstk_darwin(v14);
  v16 = (char *)&v188 - v15;
  v18 = __chkstk_darwin(v17);
  v20 = (char *)&v188 - v19;
  v218 = type metadata accessor for SeedBook(0, v18);
  v219 = *(_QWORD *)(v218 - 8);
  __chkstk_darwin(v218);
  v201 = (char *)&v188 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v213 = (char *)&v188 - v23;
  __chkstk_darwin(v24);
  v207 = (char *)&v188 - v25;
  __chkstk_darwin(v26);
  v215 = (char *)&v188 - v27;
  __chkstk_darwin(v28);
  v30 = (char *)&v188 - v29;
  __chkstk_darwin(v31);
  v203 = (char *)&v188 - v32;
  __chkstk_darwin(v33);
  v35 = (char *)&v188 - v34;
  __chkstk_darwin(v36);
  v195 = (char *)&v188 - v37;
  v217 = a1;
  v38 = a1[1];
  v39 = _minimumMergeRunLength(_:)(v38);
  if (v39 >= v38)
  {
    if (v38 < 0)
      goto LABEL_158;
    if (v38)
      sub_100655C6C(0, v38, 1, v217);
  }
  else
  {
    v191 = v39;
    if (v38 >= 0)
      v40 = v38;
    else
      v40 = v38 + 1;
    if (v38 < -1)
    {
LABEL_166:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
      return;
    }
    v192 = v20;
    v189 = v16;
    v200 = v13;
    v41 = v218;
    v42 = v38;
    if (v38 >= 2)
    {
      v43 = v40 >> 1;
      v44 = static Array._allocateBufferUninitialized(minimumCapacity:)(v40 >> 1, v218);
      *(_QWORD *)(v44 + 16) = v43;
      v45 = (*(unsigned __int8 *)(v219 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v219 + 80);
      v190 = (_QWORD *)v44;
      v46 = (char *)(v44 + v45);
      goto LABEL_12;
    }
    v47 = (char *)_swiftEmptyArrayStorage;
    v46 = (char *)_swiftEmptyArrayStorage
        + ((*(unsigned __int8 *)(v219 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v219 + 80));
    v190 = _swiftEmptyArrayStorage;
    if (v38 == 1)
    {
LABEL_12:
      v48 = 0;
      v47 = (char *)_swiftEmptyArrayStorage;
      v204 = v46;
      v205 = v30;
      v194 = v35;
      v209 = v8;
      while (1)
      {
        v50 = (uint64_t)v48;
        v51 = (uint64_t)(v48 + 1);
        v202 = (uint64_t)v48;
        if ((uint64_t)(v48 + 1) >= v42)
        {
          v64 = (uint64_t)v209;
        }
        else
        {
          v214 = v42;
          v52 = *v217;
          v53 = *(_QWORD *)(v219 + 72);
          v208 = (uint64_t)(v48 + 1);
          v54 = v52 + v53 * v51;
          v55 = v35;
          v56 = *(void (**)(char *, uint64_t, uint64_t))(v219 + 16);
          v56(v195, v54, v41);
          v198 = v52;
          v216 = v53;
          v211 = (uint64_t (*)(char *, uint64_t, uint64_t))v56;
          v57 = ((uint64_t (*)(char *, uint64_t, uint64_t))v56)(v55, v52 + v53 * v50, v41);
          v58 = (uint64_t)v192;
          SeedBook.internalAffinitySource.getter(v57);
          v59 = type metadata accessor for InternalAffinitySource(0);
          v60 = *(_QWORD *)(v59 - 8);
          v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
          v62 = v61(v58, 1, v59);
          v210 = v59;
          v196 = v60;
          if ((_DWORD)v62 == 1)
          {
            v63 = v194;
            sub_100010960(v58, &qword_1009F2AB0);
            LODWORD(v212) = 0;
          }
          else
          {
            v65 = InternalAffinitySource.rawAffinity.getter(v62);
            v66 = *(uint64_t (**)(uint64_t, uint64_t))(v60 + 8);
            v67 = v66(v58, v59);
            v68 = (uint64_t)v189;
            v63 = v194;
            SeedBook.internalAffinitySource.getter(v67);
            v69 = v61(v68, 1, v59);
            if ((_DWORD)v69 == 1)
            {
              sub_100010960(v68, &qword_1009F2AB0);
              LODWORD(v212) = 0;
            }
            else
            {
              v70 = InternalAffinitySource.rawAffinity.getter(v69);
              v66(v68, v59);
              LODWORD(v212) = v70 < v65;
            }
            v41 = v218;
          }
          v71 = *(void (**)(char *, uint64_t))(v219 + 8);
          v71(v63, v41);
          v71(v195, v41);
          v51 = v202 + 2;
          if (v202 + 2 < v214)
          {
            v193 = v47;
            v208 *= v216;
            v72 = v198;
            v199 = v216 * v51;
            while (1)
            {
              v73 = v2;
              v74 = v51;
              v75 = v61;
              v76 = v211;
              v211(v203, v72 + v199, v41);
              v77 = v76(v30, v72 + v208, v41);
              v61 = v75;
              v78 = (uint64_t)v200;
              SeedBook.internalAffinitySource.getter(v77);
              v79 = v210;
              v80 = v61(v78, 1, v210);
              if ((_DWORD)v80 == 1)
              {
                sub_100010960(v78, &qword_1009F2AB0);
                v81 = 0;
                v41 = v218;
              }
              else
              {
                v82 = InternalAffinitySource.rawAffinity.getter(v80);
                v83 = *(uint64_t (**)(uint64_t, uint64_t))(v196 + 8);
                v84 = v83(v78, v79);
                v85 = (uint64_t)v197;
                SeedBook.internalAffinitySource.getter(v84);
                v86 = v61(v85, 1, v79);
                if ((_DWORD)v86 == 1)
                {
                  sub_100010960(v85, &qword_1009F2AB0);
                  v81 = 0;
                }
                else
                {
                  v87 = InternalAffinitySource.rawAffinity.getter(v86);
                  v83(v85, v79);
                  v81 = v87 < v82;
                }
                v41 = v218;
                v30 = v205;
              }
              v2 = v73;
              v71(v30, v41);
              v71(v203, v41);
              if ((_DWORD)v212 != v81)
                break;
              v51 = v74 + 1;
              v72 += v216;
              if (v214 == v74 + 1)
              {
                v42 = v214;
                v51 = v214;
                v47 = v193;
                goto LABEL_36;
              }
            }
            v47 = v193;
            v51 = v74;
          }
          v42 = v214;
LABEL_36:
          v64 = (uint64_t)v209;
          v50 = v202;
          if ((_DWORD)v212)
          {
            if (v51 < v202)
              goto LABEL_159;
            if (v202 < v51)
            {
              v193 = v47;
              v88 = 0;
              v89 = v216 * (v51 - 1);
              v90 = v51 * v216;
              v91 = v202;
              v92 = v202 * v216;
              do
              {
                if (v91 != v51 + v88 - 1)
                {
                  if (!v198)
                    goto LABEL_164;
                  v199 = v2;
                  v94 = v198 + v92;
                  v95 = v198 + v89;
                  v96 = v198;
                  v212 = *(char **)(v219 + 32);
                  ((void (*)(char *, uint64_t, uint64_t))v212)(v201, v198 + v92, v218);
                  if (v92 < v89 || v94 >= v96 + v90)
                  {
                    v93 = v218;
                    swift_arrayInitWithTakeFrontToBack(v94, v95, 1, v218);
                  }
                  else
                  {
                    v93 = v218;
                    if (v92 != v89)
                      swift_arrayInitWithTakeBackToFront(v94, v95);
                  }
                  ((void (*)(uint64_t, char *, uint64_t))v212)(v95, v201, v93);
                  v2 = v199;
                  v50 = v202;
                }
                ++v91;
                --v88;
                v89 -= v216;
                v90 -= v216;
                v92 += v216;
              }
              while (v91 < v51 + v88);
              v64 = (uint64_t)v209;
              v47 = v193;
              v41 = v218;
              v30 = v205;
              v42 = v214;
            }
          }
        }
        if (v51 >= v42)
          goto LABEL_73;
        if (__OFSUB__(v51, v50))
          goto LABEL_157;
        if (v51 - v50 >= v191)
          goto LABEL_73;
        if (__OFADD__(v50, v191))
          goto LABEL_160;
        v97 = v50 + v191 >= v42 ? v42 : v50 + v191;
        if (v97 < v50)
          break;
        if (v51 == v97)
          goto LABEL_73;
        v193 = v47;
        v199 = v2;
        v98 = *(_QWORD *)(v219 + 72);
        v208 = *(_QWORD *)(v219 + 16);
        v216 = v98 * (v51 - 1);
        v210 = v98;
        v99 = v51 * v98;
        v100 = v207;
        v198 = v97;
        while (2)
        {
          v105 = 0;
          v211 = (uint64_t (*)(char *, uint64_t, uint64_t))v99;
          v212 = (char *)v51;
          while (1)
          {
            v214 = v50;
            v106 = v41;
            v107 = *v217;
            v108 = (uint64_t (*)(char *, uint64_t, uint64_t))v208;
            ((void (*)(char *, uint64_t, uint64_t))v208)(v215, v99 + v105 + *v217, v106);
            v109 = v108(v100, v216 + v105 + v107, v106);
            SeedBook.internalAffinitySource.getter(v109);
            v110 = type metadata accessor for InternalAffinitySource(0);
            v111 = *(_QWORD *)(v110 - 8);
            v112 = v100;
            v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
            v114 = v113(v64, 1, v110);
            if ((_DWORD)v114 == 1)
            {
              v101 = v64;
LABEL_61:
              v99 = (uint64_t)v211;
              sub_100010960(v101, &qword_1009F2AB0);
              v102 = *(void (**)(char *, uint64_t))(v219 + 8);
              v100 = v207;
              v103 = v218;
              v102(v207, v218);
              v102(v215, v103);
              v41 = v103;
              v104 = v212;
              goto LABEL_62;
            }
            v115 = InternalAffinitySource.rawAffinity.getter(v114);
            v116 = *(uint64_t (**)(uint64_t, uint64_t))(v111 + 8);
            v117 = v116(v64, v110);
            v118 = v206;
            SeedBook.internalAffinitySource.getter(v117);
            v119 = v113((uint64_t)v118, 1, v110);
            if ((_DWORD)v119 == 1)
            {
              v101 = (uint64_t)v118;
              v64 = (uint64_t)v209;
              goto LABEL_61;
            }
            v120 = InternalAffinitySource.rawAffinity.getter(v119);
            v116((uint64_t)v118, v110);
            v121 = *(void (**)(char *, uint64_t))(v219 + 8);
            v122 = v218;
            v121(v112, v218);
            v121(v215, v122);
            if (v120 >= v115)
              break;
            v123 = *v217;
            v64 = (uint64_t)v209;
            v99 = (uint64_t)v211;
            if (!*v217)
              goto LABEL_162;
            v124 = (char *)v211 + v123 + v105;
            v125 = (char *)(v123 + v216 + v105);
            v126 = *(void (**)(char *, char *, uint64_t))(v219 + 32);
            v41 = v218;
            v126(v213, v124, v218);
            swift_arrayInitWithTakeFrontToBack(v124, v125, 1, v41);
            v126(v125, v213, v41);
            v105 -= v210;
            v50 = v214 + 1;
            v104 = v212;
            v100 = v207;
            if (v212 == (char *)(v214 + 1))
              goto LABEL_62;
          }
          v100 = v112;
          v64 = (uint64_t)v209;
          v41 = v218;
          v99 = (uint64_t)v211;
          v104 = v212;
LABEL_62:
          v51 = (uint64_t)(v104 + 1);
          v216 += v210;
          v99 += v210;
          v50 = v202;
          if (v51 != v198)
            continue;
          break;
        }
        v51 = v198;
        v2 = v199;
        v47 = v193;
        v30 = v205;
LABEL_73:
        if (v51 < v50)
          goto LABEL_152;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v47);
        v212 = (char *)v51;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v47 = sub_1006990C0(0, *((_QWORD *)v47 + 2) + 1, 1, v47);
        v129 = *((_QWORD *)v47 + 2);
        v128 = *((_QWORD *)v47 + 3);
        v49 = v129 + 1;
        if (v129 >= v128 >> 1)
          v47 = sub_1006990C0((char *)(v128 > 1), v129 + 1, 1, v47);
        *((_QWORD *)v47 + 2) = v49;
        v130 = v47 + 32;
        v131 = &v47[16 * v129 + 32];
        v132 = v212;
        *(_QWORD *)v131 = v50;
        *((_QWORD *)v131 + 1) = v132;
        if (v129)
        {
LABEL_79:
          v133 = v49 - 1;
          if (v49 >= 4)
          {
            v138 = &v130[16 * v49];
            v139 = *((_QWORD *)v138 - 8);
            v140 = *((_QWORD *)v138 - 7);
            v144 = __OFSUB__(v140, v139);
            v141 = v140 - v139;
            if (v144)
              goto LABEL_141;
            v143 = *((_QWORD *)v138 - 6);
            v142 = *((_QWORD *)v138 - 5);
            v144 = __OFSUB__(v142, v143);
            v136 = v142 - v143;
            v137 = v144;
            if (v144)
              goto LABEL_142;
            v145 = v49 - 2;
            v146 = &v130[16 * v49 - 32];
            v148 = *(_QWORD *)v146;
            v147 = *((_QWORD *)v146 + 1);
            v144 = __OFSUB__(v147, v148);
            v149 = v147 - v148;
            if (v144)
              goto LABEL_144;
            v144 = __OFADD__(v136, v149);
            v150 = v136 + v149;
            if (v144)
              goto LABEL_147;
            if (v150 >= v141)
            {
              v168 = &v130[16 * v133];
              v170 = *(_QWORD *)v168;
              v169 = *((_QWORD *)v168 + 1);
              v144 = __OFSUB__(v169, v170);
              v171 = v169 - v170;
              if (v144)
                goto LABEL_151;
              v161 = v136 < v171;
            }
            else
            {
LABEL_92:
              if ((v137 & 1) != 0)
                goto LABEL_143;
              v145 = v49 - 2;
              v151 = &v130[16 * v49 - 32];
              v153 = *(_QWORD *)v151;
              v152 = *((_QWORD *)v151 + 1);
              v154 = __OFSUB__(v152, v153);
              v155 = v152 - v153;
              v156 = v154;
              if (v154)
                goto LABEL_146;
              v157 = &v130[16 * v133];
              v159 = *(_QWORD *)v157;
              v158 = *((_QWORD *)v157 + 1);
              v144 = __OFSUB__(v158, v159);
              v160 = v158 - v159;
              if (v144)
                goto LABEL_149;
              if (__OFADD__(v155, v160))
                goto LABEL_150;
              if (v155 + v160 < v136)
                goto LABEL_104;
              v161 = v136 < v160;
            }
            if (v161)
              v133 = v145;
          }
          else
          {
            if (v49 == 3)
            {
              v135 = *((_QWORD *)v47 + 4);
              v134 = *((_QWORD *)v47 + 5);
              v144 = __OFSUB__(v134, v135);
              v136 = v134 - v135;
              v137 = v144;
              goto LABEL_92;
            }
            v162 = *((_QWORD *)v47 + 4);
            v163 = *((_QWORD *)v47 + 5);
            v144 = __OFSUB__(v163, v162);
            v155 = v163 - v162;
            v156 = v144;
LABEL_104:
            if ((v156 & 1) != 0)
              goto LABEL_145;
            v164 = &v130[16 * v133];
            v166 = *(_QWORD *)v164;
            v165 = *((_QWORD *)v164 + 1);
            v144 = __OFSUB__(v165, v166);
            v167 = v165 - v166;
            if (v144)
              goto LABEL_148;
            if (v167 < v155)
              goto LABEL_14;
          }
          v172 = v133 - 1;
          if (v133 - 1 >= v49)
          {
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
            break;
          }
          if (!*v217)
            goto LABEL_163;
          v173 = v47;
          v174 = &v130[16 * v172];
          v175 = *(_QWORD *)v174;
          v176 = &v130[16 * v133];
          v177 = *((_QWORD *)v176 + 1);
          sub_100656004(*v217 + *(_QWORD *)(v219 + 72) * *(_QWORD *)v174, *v217 + *(_QWORD *)(v219 + 72) * *(_QWORD *)v176, *v217 + *(_QWORD *)(v219 + 72) * v177, (unint64_t)v204);
          if (v2)
          {
LABEL_133:
            v186 = v173;
            goto LABEL_135;
          }
          if (v177 < v175)
            goto LABEL_138;
          if (v133 > *((_QWORD *)v173 + 2))
            goto LABEL_139;
          *(_QWORD *)v174 = v175;
          *(_QWORD *)&v130[16 * v172 + 8] = v177;
          v178 = *((_QWORD *)v173 + 2);
          if (v133 >= v178)
            goto LABEL_140;
          v47 = v173;
          v49 = v178 - 1;
          memmove(&v130[16 * v133], v176 + 16, 16 * (v178 - 1 - v133));
          *((_QWORD *)v173 + 2) = v178 - 1;
          v30 = v205;
          if (v178 <= 2)
            goto LABEL_14;
          goto LABEL_79;
        }
        v49 = 1;
LABEL_14:
        v41 = v218;
        v42 = v217[1];
        v48 = v212;
        v35 = v194;
        if ((uint64_t)v212 >= v42)
          goto LABEL_121;
      }
      __break(1u);
LABEL_162:
      __break(1u);
LABEL_163:
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
      goto LABEL_166;
    }
    v204 = v46;
    v49 = _swiftEmptyArrayStorage[2];
LABEL_121:
    if (v49 >= 2)
    {
      v179 = *v217;
      do
      {
        v180 = v49 - 2;
        if (v49 < 2)
          goto LABEL_153;
        if (!v179)
          goto LABEL_165;
        v173 = v47;
        v181 = v47 + 32;
        v182 = *(_QWORD *)&v47[16 * v180 + 32];
        v183 = *(_QWORD *)&v47[16 * v49 + 24];
        sub_100656004(v179 + *(_QWORD *)(v219 + 72) * v182, v179 + *(_QWORD *)(v219 + 72) * *(_QWORD *)&v181[16 * v49 - 16], v179 + *(_QWORD *)(v219 + 72) * v183, (unint64_t)v204);
        if (v2)
          goto LABEL_133;
        if (v183 < v182)
          goto LABEL_154;
        if ((swift_isUniquelyReferenced_nonNull_native(v173) & 1) == 0)
          v173 = sub_1006995F8((uint64_t)v173);
        if (v180 >= *((_QWORD *)v173 + 2))
          goto LABEL_155;
        v184 = &v173[16 * v180 + 32];
        *(_QWORD *)v184 = v182;
        *((_QWORD *)v184 + 1) = v183;
        v185 = *((_QWORD *)v173 + 2);
        if (v49 > v185)
          goto LABEL_156;
        v47 = v173;
        memmove(&v173[16 * v49 + 16], &v173[16 * v49 + 32], 16 * (v185 - v49));
        *((_QWORD *)v173 + 2) = v185 - 1;
        v49 = v185 - 1;
      }
      while (v185 > 2);
    }
    v186 = v47;
LABEL_135:
    swift_bridgeObjectRelease(v186);
    v187 = v190;
    v190[2] = 0;
    swift_bridgeObjectRelease(v187);
  }
}

void sub_100655C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  double v31;
  uint64_t (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  char *v35;
  double v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t *v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;

  v53 = a4;
  v44 = a1;
  v6 = sub_10004CFD4(&qword_1009F2AB0);
  __chkstk_darwin(v6);
  v45 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v42 - v10;
  v12 = type metadata accessor for SeedBook(0, v9);
  v54 = *(_QWORD **)(v12 - 8);
  __chkstk_darwin(v12);
  v51 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - v15;
  v18.n128_f64[0] = __chkstk_darwin(v17);
  v56 = (char *)&v42 - v19;
  v50 = a3;
  v43 = a2;
  if (a3 != a2)
  {
    v20 = v54[9];
    v47 = (uint64_t (*)(char *, uint64_t, uint64_t))v54[2];
    v48 = v20;
    v57 = v20 * (v50 - 1);
    v21 = v20 * v50;
    v46 = v12;
    while (2)
    {
      v24 = 0;
      v55 = v44;
      v49 = v21;
      while (1)
      {
        v25 = *v53;
        v52 = v21 + v24;
        v26 = v47;
        ((void (*)(char *, uint64_t, uint64_t, __n128))v47)(v56, v21 + v24 + v25, v12, v18);
        v27 = v26(v16, v57 + v24 + v25, v12);
        SeedBook.internalAffinitySource.getter(v27);
        v28 = type metadata accessor for InternalAffinitySource(0);
        v29 = *(_QWORD *)(v28 - 8);
        v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        if (v30(v11, 1, v28) == 1)
          break;
        v31 = InternalAffinitySource.rawAffinity.getter();
        v32 = *(uint64_t (**)(char *, uint64_t))(v29 + 8);
        v33 = v11;
        v34 = v32(v11, v28);
        v35 = v45;
        SeedBook.internalAffinitySource.getter(v34);
        if (v30(v35, 1, v28) == 1)
        {
          v22 = (uint64_t)v35;
          v11 = v33;
          goto LABEL_5;
        }
        v36 = InternalAffinitySource.rawAffinity.getter();
        v32(v35, v28);
        v37 = (void (*)(char *, uint64_t))v54[1];
        v12 = v46;
        v37(v16, v46);
        v37(v56, v12);
        v11 = v33;
        v21 = v49;
        if (v36 >= v31)
          goto LABEL_6;
        v38 = *v53;
        if (!*v53)
        {
          __break(1u);
          return;
        }
        v39 = v38 + v49 + v24;
        v40 = (char *)(v38 + v57 + v24);
        v41 = (void (*)(char *, uint64_t, uint64_t))v54[4];
        v41(v51, v39, v12);
        swift_arrayInitWithTakeFrontToBack(v39, v40, 1, v12);
        v41(v40, (uint64_t)v51, v12);
        v24 -= v48;
        if (v50 == ++v55)
          goto LABEL_6;
      }
      v22 = (uint64_t)v11;
LABEL_5:
      sub_100010960(v22, &qword_1009F2AB0);
      v23 = (void (*)(char *, uint64_t))v54[1];
      v12 = v46;
      v23(v16, v46);
      v23(v56, v12);
      v21 = v49;
LABEL_6:
      v57 += v48;
      v21 += v48;
      if (++v50 == v43)
        return;
      continue;
    }
  }
}

uint64_t sub_100656004(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t (*v37)(char *, unint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  uint64_t v43;
  double v44;
  uint64_t (*v45)(char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  int v49;
  void (*v50)(char *, uint64_t);
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  double v55;
  void (*v56)(char *, uint64_t);
  unint64_t v57;
  uint64_t v59;
  uint64_t (*v60)(char *, unint64_t, uint64_t);
  uint64_t (*v61)(char *, unint64_t, uint64_t);
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  double v68;
  void (*v69)(uint64_t, uint64_t);
  uint64_t v70;
  _BOOL4 v71;
  double v72;
  unint64_t v73;
  char *v74;
  void (*v75)(char *, uint64_t);
  unint64_t v76;
  BOOL v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t result;
  uint64_t v82;
  char *v83;
  unint64_t v84;
  uint64_t (*v85)(char *, unint64_t, uint64_t);
  unint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;

  v8 = sub_10004CFD4(&qword_1009F2AB0);
  __chkstk_darwin(v8);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v87 = (char *)&v82 - v12;
  __chkstk_darwin(v13);
  v85 = (uint64_t (*)(char *, unint64_t, uint64_t))((char *)&v82 - v14);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v82 - v17;
  v19 = type metadata accessor for SeedBook(0, v16);
  __chkstk_darwin(v19);
  v88 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v90 = (char *)&v82 - v22;
  __chkstk_darwin(v23);
  v25 = (char *)&v82 - v24;
  __chkstk_darwin(v26);
  v89 = (uint64_t)&v82 - v27;
  v29 = *(_QWORD *)(v28 + 72);
  v91 = v28;
  v92 = v29;
  if (!v29)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v92 == -1)
    goto LABEL_69;
  v30 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v92 == -1)
    goto LABEL_70;
  v31 = (uint64_t)(a2 - a1) / v92;
  v95 = a1;
  v94 = a4;
  v32 = v30 / v92;
  if (v31 >= v30 / v92)
  {
    if ((v32 & 0x8000000000000000) == 0)
    {
      v34 = v32 * v92;
      v83 = v10;
      v35 = v88;
      if (a4 < a2 || a2 + v34 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2, v32, v19);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v57 = a4 + v34;
      v93 = a4 + v34;
      v95 = a2;
      if (v34 >= 1 && a1 < a2)
      {
        v59 = -v92;
        v60 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v91 + 16);
        v84 = a4;
        v85 = v60;
        v86 = a1;
        v89 = -v92;
        do
        {
          v92 = a3;
          v61 = v85;
          v85(v90, v57 + v59, v19);
          v62 = a2 + v59;
          v63 = v61(v35, a2 + v59, v19);
          v64 = (uint64_t)v87;
          SeedBook.internalAffinitySource.getter(v63);
          v65 = type metadata accessor for InternalAffinitySource(0);
          v66 = *(_QWORD *)(v65 - 8);
          v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
          if (v67(v64, 1, v65) == 1
            || (v68 = ((double (*)(void))InternalAffinitySource.rawAffinity.getter)(),
                v69 = *(void (**)(uint64_t, uint64_t))(v66 + 8),
                v70 = ((uint64_t (*)(uint64_t, uint64_t))v69)(v64, v65),
                v64 = (uint64_t)v83,
                SeedBook.internalAffinitySource.getter(v70),
                v67(v64, 1, v65) == 1))
          {
            sub_100010960(v64, &qword_1009F2AB0);
            v71 = 0;
          }
          else
          {
            v72 = ((double (*)(void))InternalAffinitySource.rawAffinity.getter)();
            v69(v64, v65);
            v71 = v72 < v68;
          }
          v73 = v92;
          v35 = v88;
          v59 = v89;
          v74 = (char *)(v92 + v89);
          v75 = *(void (**)(char *, uint64_t))(v91 + 8);
          v75(v88, v19);
          v75(v90, v19);
          if (v71)
          {
            v76 = v86;
            if (v73 < a2 || (unint64_t)v74 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v73 + v59, v62, 1, v19);
              v78 = v84;
            }
            else
            {
              v77 = v73 == a2;
              v78 = v84;
              if (!v77)
                swift_arrayInitWithTakeBackToFront(v74, v62);
            }
            v95 += v59;
          }
          else
          {
            v79 = v93;
            v80 = v93 + v59;
            v93 += v59;
            v76 = v86;
            if (v73 < v79 || (unint64_t)v74 >= v79)
            {
              swift_arrayInitWithTakeFrontToBack(v73 + v59, v80, 1, v19);
            }
            else if (v73 != v79)
            {
              swift_arrayInitWithTakeBackToFront(v73 + v59, v80);
            }
            v62 = a2;
            v78 = v84;
          }
          v57 = v93;
          if (v93 <= v78)
            break;
          a2 = v62;
          a3 = (unint64_t)v74;
        }
        while (v62 > v76);
      }
LABEL_67:
      sub_1006994E0(&v95, &v94, (uint64_t *)&v93);
      return 1;
    }
  }
  else if ((v31 & 0x8000000000000000) == 0)
  {
    v33 = v31 * v92;
    if (a4 < a1 || a1 + v33 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1, v31, v19);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v90 = (char *)(a4 + v33);
    v93 = a4 + v33;
    if (v33 >= 1 && a2 < a3)
    {
      v88 = *(char **)(v91 + 16);
      while (1)
      {
        v37 = (uint64_t (*)(char *, unint64_t, uint64_t))v88;
        ((void (*)(uint64_t, unint64_t, uint64_t))v88)(v89, a2, v19);
        v38 = v37(v25, a4, v19);
        SeedBook.internalAffinitySource.getter(v38);
        v39 = type metadata accessor for InternalAffinitySource(0);
        v40 = *(_QWORD *)(v39 - 8);
        v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
        v42 = v41(v18, 1, v39);
        v43 = (uint64_t)v18;
        if (v42 == 1)
          break;
        v44 = InternalAffinitySource.rawAffinity.getter(v18);
        v45 = *(uint64_t (**)(char *, uint64_t))(v40 + 8);
        v46 = v45(v18, v39);
        v47 = v25;
        v48 = (char *)v85;
        SeedBook.internalAffinitySource.getter(v46);
        v49 = v41(v48, 1, v39);
        v43 = (uint64_t)v48;
        v25 = v47;
        if (v49 == 1)
          break;
        v54 = (char *)v85;
        v55 = InternalAffinitySource.rawAffinity.getter(v43);
        v45(v54, v39);
        v56 = *(void (**)(char *, uint64_t))(v91 + 8);
        v56(v25, v19);
        v56((char *)v89, v19);
        if (v55 >= v44)
          goto LABEL_26;
        v51 = v95;
        v53 = a2 + v92;
        if (v95 < a2 || v95 >= v53)
        {
          swift_arrayInitWithTakeFrontToBack(v95, a2, 1, v19);
        }
        else if (v95 == a2)
        {
          v51 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v95, a2);
        }
LABEL_32:
        v95 = v51 + v92;
        a4 = v94;
        if (v94 < (unint64_t)v90)
        {
          a2 = v53;
          if (v53 < a3)
            continue;
        }
        goto LABEL_67;
      }
      sub_100010960(v43, &qword_1009F2AB0);
      v50 = *(void (**)(char *, uint64_t))(v91 + 8);
      v50(v25, v19);
      v50((char *)v89, v19);
LABEL_26:
      v51 = v95;
      v52 = v94 + v92;
      if (v95 < v94 || v95 >= v52)
      {
        swift_arrayInitWithTakeFrontToBack(v95, v94, 1, v19);
      }
      else if (v95 != v94)
      {
        swift_arrayInitWithTakeBackToFront(v95, v94);
      }
      v94 = v52;
      v53 = a2;
      goto LABEL_32;
    }
    goto LABEL_67;
  }
LABEL_71:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t _s9DataModelVwxx(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[2]);
}

uint64_t _s9DataModelVwcp(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = a2[2];
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *_s9DataModelVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[1] = a2[1];
  v6 = a2[2];
  v7 = a1[2];
  a1[2] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

uint64_t *_s9DataModelVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRelease(v4);
  v5 = a2[2];
  v6 = a1[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_bridgeObjectRelease(v6);
  *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

uint64_t _s9DataModelVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s9DataModelVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportIssue.DataModel()
{
  return &type metadata for ReportIssue.DataModel;
}

uint64_t sub_100656904()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009F2AB8);
  sub_100048F64(v0, (uint64_t)qword_1009F2AB8);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000015, 0x8000000100736DD0);
}

void sub_100656984()
{
  qword_100A1F0A8 = 0;
  qword_100A1F0B0 = 0;
  qword_100A1F0A0 = (uint64_t)_swiftEmptyArrayStorage;
  byte_100A1F0B8 = 0;
}

uint64_t sub_1006569A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[4] = v0;
  v2 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  v1[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v2 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS.QoSClass(0);
  v1[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v1[7] = v4;
  v1[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10004CFD4(&qword_1009F2BD8);
  v1[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v1[10] = v6;
  v1[11] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_100656A54, v0, 0);
}

uint64_t sub_100656A54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 64);
  v19 = *(_QWORD *)(v0 + 72);
  v20 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v7 = *(_QWORD *)(v6 + 120);
  *(_QWORD *)(v0 + 16) = v7;
  v8 = sub_100059BB4();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for DispatchQoS.QoSClass.default(_:), v4);
  swift_retain(v7);
  v9 = static OS_dispatch_queue.global(qos:)(v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  *(_QWORD *)(v0 + 24) = v9;
  v10 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  v11 = sub_10004CFD4(&qword_1009D7DA0);
  v12 = sub_100030B34(&qword_1009EA590, &qword_1009D7DA0, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v13 = sub_10003E1A0((unint64_t *)&qword_1009D4E00, 255, (uint64_t (*)(uint64_t))sub_100059BB4, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
  Publisher.receive<A>(on:options:)(v0 + 24, v5, v11, v8, v12, v13);
  sub_1001EDE18(v5);

  swift_release(*(_QWORD *)(v0 + 16));
  v14 = swift_allocObject(&unk_10091A1A0, 24, 7);
  swift_weakInit(v14 + 16, v6);
  v15 = sub_100030B34(&qword_1009F2BE0, &qword_1009F2BD8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v16 = Publisher<>.sink(receiveValue:)(sub_1006579E0, v14, v19, v15);
  swift_release(v14);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v1, v19);
  v17 = *(_QWORD *)(v6 + 128);
  *(_QWORD *)(v6 + 128) = v16;
  swift_release(v17);
  swift_task_dealloc(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100656C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[24];

  v4 = sub_10004CFD4(&qword_1009D3150);
  __chkstk_darwin(v4);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  a2 += 16;
  v9 = *(_BYTE *)(a1 + 16);
  swift_beginAccess(a2, v16, 0, 0);
  result = swift_weakLoadStrong(a2);
  if (result)
  {
    v11 = result;
    v12 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    v13 = swift_allocObject(&unk_10091A1C8, 64, 7);
    *(_QWORD *)(v13 + 16) = 0;
    *(_QWORD *)(v13 + 24) = 0;
    *(_QWORD *)(v13 + 32) = v7;
    *(_QWORD *)(v13 + 40) = v8;
    *(_BYTE *)(v13 + 48) = v9;
    *(_QWORD *)(v13 + 56) = v11;
    sub_10065788C(v7, v8, v9);
    swift_retain(v11);
    v14 = sub_10030C02C((uint64_t)v6, (uint64_t)&unk_1009F2BF0, v13);
    swift_release(v11);
    return swift_release(v14);
  }
  return result;
}

uint64_t sub_100656D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v11;
  uint64_t (*v13)();
  _QWORD *v14;

  v7[11] = a5;
  v7[12] = a7;
  v7[10] = a4;
  if (a6)
  {
    if (a6 == 1)
    {
      v11 = (_QWORD *)swift_task_alloc(dword_1009F2BFC);
      v7[14] = v11;
      *v11 = v7;
      v11[1] = sub_100656F70;
      return sub_10065733C(a4, a5);
    }
    v14 = (_QWORD *)swift_task_alloc(dword_1009F2C04);
    v7[13] = v14;
    *v14 = v7;
    v14[1] = sub_100656F28;
    v14[15] = a7;
    v13 = sub_100656FD0;
  }
  else
  {
    v13 = sub_100656E60;
  }
  return swift_task_switch(v13, a7, 0);
}

uint64_t sub_100656E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 80);
  CurrentValueSubject.value.getter((_QWORD *)(v0 + 16));
  v3 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain(v1);
  swift_bridgeObjectRelease(v3);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(_BYTE *)(v0 + 40);
  *(_QWORD *)(v0 + 48) = v4;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = v1;
  *(_BYTE *)(v0 + 72) = v5;
  sub_10065788C(v2, v1, 0);
  swift_bridgeObjectRetain(v4);
  CurrentValueSubject.send(_:)(v0 + 48);
  swift_bridgeObjectRelease(v4);
  sub_1002C9360(v2, v1, 0);
  swift_bridgeObjectRelease(v4);
  sub_1002C9360(v2, v1, 0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100656F28()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 104));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100656F70()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 112));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_100656FB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch(sub_100656FD0, v0, 0);
}

uint64_t sub_100656FD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  *(_QWORD *)(v0 + 128) = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 112);
  CurrentValueSubject.value.getter((_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  *(_OWORD *)(v0 + 136) = *(_OWORD *)(v0 + 24);
  *(_BYTE *)(v0 + 41) = *(_BYTE *)(v0 + 40);
  v3 = (uint64_t (__cdecl *)())((char *)&dword_1009F3DD8 + dword_1009F3DD8);
  v1 = (_QWORD *)swift_task_alloc(unk_1009F3DDC);
  *(_QWORD *)(v0 + 152) = v1;
  *v1 = v0;
  v1[1] = sub_100657054;
  return v3();
}

uint64_t sub_100657054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 152);
  *(_QWORD *)(*(_QWORD *)v2 + 160) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[15];
    swift_bridgeObjectRelease(v4[18]);
    v7 = sub_10065714C;
    v8 = v6;
  }
  else
  {
    v8 = v4[15];
    v4[21] = a1;
    v7 = sub_1006570D8;
  }
  return swift_task_switch(v7, v8, 0);
}

uint64_t sub_1006570D8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_BYTE *)(v0 + 41);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 64) = v4;
  *(_BYTE *)(v0 + 72) = v2;
  swift_bridgeObjectRetain(v1);
  CurrentValueSubject.send(_:)(v0 + 48);
  swift_bridgeObjectRelease_n(v1, 2);
  swift_bridgeObjectRelease(v4);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10065714C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  BOOL v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  if (qword_1009CEB08 != -1)
    swift_once(&qword_1009CEB08, sub_100656904);
  v1 = *(_QWORD *)(v0 + 160);
  v2 = type metadata accessor for Logger(0);
  sub_100048F64(v2, (uint64_t)qword_1009F2AB8);
  swift_errorRetain(v1);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter(v4);
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 160);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v14 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_getErrorValue(v7, v0 + 104, v0 + 80);
    v10 = Error.localizedDescription.getter(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
    v12 = v11;
    *(_QWORD *)(v0 + 112) = sub_100040F58(v10, v11, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 112, v0 + 120, v8 + 4, v8 + 12);
    swift_bridgeObjectRelease(v12);
    swift_errorRelease(v7);
    swift_errorRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to fetch report concerns with error: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 160));
    swift_errorRelease(v7);
    swift_errorRelease(v7);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10065733C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  v4 = sub_10004CFD4(&qword_1009D3150);
  v3[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10065739C, v2, 0);
}

uint64_t sub_10065739C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  __n128 v33;
  __n128 v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  unsigned int v40;
  uint64_t v41;

  CurrentValueSubject.value.getter((_QWORD *)(v0 + 16));
  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD **)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 104);
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    v8 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
    v10 = sub_10003E1A0(&qword_1009F2C10, v9, (uint64_t (*)(uint64_t))type metadata accessor for ReportIssueInteractor, (uint64_t)&unk_100736E34);
    v11 = (_QWORD *)swift_allocObject(&unk_10091A1F0, 72, 7);
    v11[2] = v5;
    v11[3] = v10;
    v41 = v3;
    v11[4] = v3;
    v11[5] = v2;
    v11[6] = v6;
    v11[7] = v7;
    v11[8] = v5;
    swift_bridgeObjectRetain(v7);
    swift_retain_n(v5, 2);
    swift_bridgeObjectRetain_n(v2, 2);
    swift_bridgeObjectRetain(v1);
    v12 = sub_10030C02C(v4, (uint64_t)&unk_1009F2C18, (uint64_t)v11);
    swift_release(v12);
    v14 = type metadata accessor for EventReporter(0, v13);
    v15 = (void *)static EventReporter.shared.getter(v14);
    v16 = v5[22];
    v17 = v5[23];
    v18 = (void *)v5[24];
    v19 = v5[25];
    if (v18)
    {
      v40 = objc_msgSend(v18, "intValue");
      v20 = *(_QWORD *)(v1 + 16);
      if (v20)
        goto LABEL_4;
    }
    else
    {
      v40 = 0;
      v20 = *(_QWORD *)(v1 + 16);
      if (v20)
      {
LABEL_4:
        v36 = v19;
        v37 = v17;
        v38 = v16;
        v39 = v15;
        swift_bridgeObjectRetain(v1);
        v21 = (_QWORD *)(v1 + 40);
        v22 = _swiftEmptyArrayStorage;
        do
        {
          v23 = *(v21 - 1);
          v24 = *v21;
          swift_bridgeObjectRetain(*v21);
          if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
            v22 = sub_100043ED0(0, v22[2] + 1, 1, v22);
          v26 = v22[2];
          v25 = v22[3];
          if (v26 >= v25 >> 1)
            v22 = sub_100043ED0((_QWORD *)(v25 > 1), v26 + 1, 1, v22);
          v22[2] = v26 + 1;
          v27 = &v22[2 * v26];
          v27[4] = v23;
          v27[5] = v24;
          v21 += 9;
          --v20;
        }
        while (v20);
        swift_bridgeObjectRelease(v1);
        v16 = v38;
        v15 = v39;
        v19 = v36;
        v17 = v37;
        goto LABEL_18;
      }
    }
    v22 = _swiftEmptyArrayStorage;
LABEL_18:
    v33 = swift_bridgeObjectRelease(v1);
    EventReporter.emitReportAnIssueCompletionEvent(using:contentID:supplementalContentCount:issueOptions:issueSelected:)(v19, v16, v17, v40, v22, v41, v2, v33);

    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v22);
    *(_QWORD *)(v0 + 48) = v1;
    *(_QWORD *)(v0 + 56) = v41;
    *(_QWORD *)(v0 + 64) = v2;
    *(_BYTE *)(v0 + 72) = 1;
    CurrentValueSubject.send(_:)(v0 + 48);
    swift_bridgeObjectRelease(v1);
    swift_bridgeObjectRelease(v2);
    goto LABEL_19;
  }
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  if (qword_1009CEB08 != -1)
    swift_once(&qword_1009CEB08, sub_100656904);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100048F64(v28, (uint64_t)qword_1009F2AB8);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.error.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Selected report issue's ID is nil", v32, 2u);
    swift_slowDealloc(v32, -1, -1);
  }

LABEL_19:
  v34 = swift_task_dealloc(*(_QWORD *)(v0 + 104));
  return (*(uint64_t (**)(__n128))(v0 + 8))(v34);
}

uint64_t sub_1006576F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  return swift_task_switch(sub_100657718, a8, 0);
}

uint64_t sub_100657718()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t **v4;

  v1 = v0[5];
  v2 = v0[3];
  sub_10003F198((_QWORD *)(v0[6] + 136), *(_QWORD *)(v0[6] + 160));
  v3 = dword_1009F3DEC;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v1);
  v4 = (uint64_t **)swift_task_alloc(v3);
  v0[7] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = (uint64_t *)sub_10065779C;
  return sub_10067BA68(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10065779C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + 40);
  v2 = *(_QWORD *)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1006577FC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 112));
  swift_release(*(_QWORD *)(v0 + 120));
  swift_release(*(_QWORD *)(v0 + 128));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 136));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 184));

  swift_defaultActor_destroy(v0);
  return v0;
}

uint64_t sub_100657850()
{
  uint64_t v0;

  sub_1006577FC();
  return swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for ReportIssueInteractor()
{
  return objc_opt_self(_TtC5Books21ReportIssueInteractor);
}

uint64_t sub_10065788C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t _s17InteractingActionOwxx(uint64_t a1)
{
  return sub_1002C9360(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s17InteractingActionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10065788C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s17InteractingActionOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_10065788C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1002C9360(v6, v7, v8);
  return a1;
}

uint64_t _s17InteractingActionOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1002C9360(v4, v5, v6);
  return a1;
}

ValueMetadata *_s17InteractingActionOMa()
{
  return &_s17InteractingActionON;
}

uint64_t sub_1006579A4()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 112));
}

uint64_t sub_1006579B0()
{
  uint64_t v0;

  return swift_retain(*(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t sub_1006579BC()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1006579E0(uint64_t a1)
{
  uint64_t v1;

  return sub_100656C64(a1, v1);
}

uint64_t sub_1006579E8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  sub_1002C9360(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100657A20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_BYTE *)(v1 + 48);
  v10 = (_QWORD *)swift_task_alloc(dword_1009F2BEC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_10000AE34;
  return sub_100656D90(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100657AB0()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[7]);
  swift_release(v0[8]);
  return swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100657AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = swift_task_alloc(dword_1009F2C0C);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_1001FC2C4;
  *(_QWORD *)(v5 + 40) = v3;
  *(_QWORD *)(v5 + 48) = v4;
  *(_QWORD *)(v5 + 32) = v2;
  *(_OWORD *)(v5 + 16) = v7;
  return swift_task_switch(sub_100657718, v4, 0);
}

uint64_t sub_100657B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  _QWORD *v44;
  uint64_t v51;

  v13 = type metadata accessor for ChromeStyle(0);
  v14 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  EnvironmentObject.init()(v13, v14);
  *a9 = v15;
  a9[1] = v16;
  v17 = (int *)type metadata accessor for RERootContainerView(0);
  v18 = (_QWORD *)((char *)a9 + v17[5]);
  *v18 = swift_getKeyPath(&unk_100736E60);
  v19 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  swift_storeEnumTagMultiPayload(v18, v19, 0);
  v20 = (_QWORD *)((char *)a9 + v17[6]);
  *v20 = swift_getKeyPath(&unk_100736E90);
  v21 = sub_10004CFD4(&qword_1009D26B8);
  swift_storeEnumTagMultiPayload(v20, v21, 0);
  v22 = (_QWORD *)((char *)a9 + v17[7]);
  *v22 = swift_getKeyPath(&unk_100736EC0);
  swift_storeEnumTagMultiPayload(v22, v21, 0);
  v23 = (char *)a9 + v17[8];
  *(_QWORD *)v23 = swift_getKeyPath(&unk_100736EF0);
  v23[8] = 0;
  v24 = (char *)a9 + v17[9];
  *(_QWORD *)v24 = swift_getKeyPath(&unk_100736F20);
  v24[8] = 0;
  v25 = (_QWORD *)((char *)a9 + v17[10]);
  *v25 = swift_getKeyPath(&unk_100736F50);
  v26 = sub_10004CFD4(&qword_1009F2C20);
  swift_storeEnumTagMultiPayload(v25, v26, 0);
  v27 = (_QWORD *)((char *)a9 + v17[11]);
  *v27 = swift_getKeyPath(&unk_100736F80);
  v28 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  v29 = swift_storeEnumTagMultiPayload(v27, v28, 0);
  AccessibilityFocusState.init<>()(v29);
  v30 = (char *)a9 + v17[17];
  swift_weakInit(v30, 0);
  v31 = (char *)a9 + v17[18];
  *((_QWORD *)v31 + 1) = 0;
  swift_unknownObjectWeakInit(v31, 0);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001FLL, 0x80000001007DB1A0);
  *(_QWORD *)((char *)a9 + v17[12]) = a1;
  v32 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)((char *)a9 + v17[13]) = v32;
  *(_QWORD *)((char *)a9 + v17[14]) = a2;
  KeyPath = swift_getKeyPath(&unk_100736FB0);
  v51 = a2;
  v34 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  swift_retain(a1);
  swift_retain(v32);
  swift_retain(a2);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v51, KeyPath, v34);
  swift_release(KeyPath);
  v35 = *(_QWORD *)(a2 + OBJC_IVAR____TtC5Books19BookReaderViewModel__historyViewModel);
  v36 = (_QWORD *)((char *)a9 + v17[15]);
  v37 = type metadata accessor for HistoryViewModel(0);
  v38 = sub_100008DB0(&qword_1009F2C28, type metadata accessor for HistoryViewModel, (uint64_t)&unk_10071A374);
  v39 = swift_retain(v35);
  v40 = ObservedObject.init(wrappedValue:)(v39, v37, v38);
  v42 = v41;
  swift_release(a1);
  swift_release(a2);
  *v36 = v40;
  v36[1] = v42;
  swift_weakAssign(v30);
  swift_release(a3);
  *((_QWORD *)v31 + 1) = a5;
  swift_unknownObjectWeakAssign(v31, a4);
  result = swift_unknownObjectRelease(a4);
  *((_BYTE *)a9 + v17[20]) = a6;
  *(_QWORD *)((char *)a9 + v17[19]) = a7;
  v44 = (_QWORD *)((char *)a9 + v17[21]);
  *v44 = a8;
  v44[1] = a10;
  return result;
}

uint64_t type metadata accessor for RERootContainerView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F2C90;
  if (!qword_1009F2C90)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for RERootContainerView);
  return result;
}

double sub_100657F6C@<D0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v6;
  double result;
  uint64_t v8;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100736FB0);
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v8, KeyPath, v5);
  swift_release(KeyPath);
  v6 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5Books19BookReaderViewModel__historyViewModel);
  *a2 = v6;
  *(_QWORD *)&result = swift_retain(v6).n128_u64[0];
  return result;
}

double sub_100658004(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  double result;
  _QWORD v7[5];
  uint64_t v8;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100736FB0);
  v7[2] = v3;
  v7[3] = v2;
  v8 = v3;
  v5 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  swift_retain(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)(&v8, KeyPath, sub_10065F0B0, v7, (char *)&type metadata for () + 8, v5);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  return result;
}

uint64_t sub_1006580BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t OpaqueTypeConformance2;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;

  v37 = a1;
  v2 = sub_10004CFD4(&qword_1009F2D18);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10004CFD4(&qword_1009F2D20);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009F2D28);
  v35 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_10004CFD4(&qword_1009F2D30);
  v34 = *(_QWORD *)(v36 - 8);
  __chkstk_darwin(v36);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v4 = static Alignment.topTrailing.getter(v13);
  v4[1] = v14;
  v15 = sub_10004CFD4(&qword_1009F2D38);
  sub_100658388(v1, (uint64_t)v4 + *(int *)(v15 + 44));
  KeyPath = swift_getKeyPath(&unk_1007370D8);
  v17 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for RERootContainerView(0) + 56));
  v18 = *(_QWORD *)(v17 + 80);
  v19 = *(_QWORD *)(v17 + 88);
  ObjectType = swift_getObjectType();
  swift_unknownObjectRetain(v18);
  v21 = dispatch thunk of BookLayoutModeProviding.layoutMode.getter(ObjectType, v19);
  swift_unknownObjectRelease(v18);
  sub_10000B5E4((uint64_t)v4, (uint64_t)v7, &qword_1009F2D18);
  v22 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *v22 = KeyPath;
  v22[1] = v21;
  sub_100010960((uint64_t)v4, &qword_1009F2D18);
  v38 = 0;
  v39 = (_QWORD *)0xE000000000000000;
  v23 = sub_10066145C();
  v24 = sub_1001F2108();
  View.navigationBarTitle<A>(_:)(&v38, v5);
  sub_100010960((uint64_t)v7, &qword_1009F2D20);
  v38 = v5;
  v39 = &type metadata for String;
  v40 = v23;
  v41 = v24;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v38, &opaque type descriptor for <<opaque return type of View.navigationBarTitle<A>(_:)>>, 1);
  View.navigationBarHidden(_:)(1, v8, OpaqueTypeConformance2);
  v26 = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v10, v8);
  v27 = static Color.clear.getter(v26);
  LOBYTE(v18) = static Edge.Set.all.getter(v28);
  v29 = v34;
  v31 = v36;
  v30 = v37;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v37, v12, v36);
  v32 = v30 + *(int *)(sub_10004CFD4(&qword_1009F2D60) + 36);
  *(_QWORD *)v32 = v27;
  *(_BYTE *)(v32 + 8) = v18;
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v12, v31);
}

uint64_t sub_100658388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t (**v5)@<X0>(uint64_t@<X8>);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (**v42)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = sub_10004CFD4(&qword_1009F2D68);
  __chkstk_darwin(v46);
  v5 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for RERootContainerView(0);
  v48 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v49 = v7;
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009F2D70);
  __chkstk_darwin(v9);
  v47 = (uint64_t)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - v12;
  v14 = sub_10004CFD4(&qword_1009F2D78);
  __chkstk_darwin(v14);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - v18;
  v20 = sub_10004CFD4(&qword_1009F2D80);
  __chkstk_darwin(v20);
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v44 - v24;
  if ((*(_BYTE *)(a1 + *(int *)(v6 + 76)) & 0x10) != 0)
  {
    sub_100658824((uint64_t)v19);
    sub_10002CD84(a1, (uint64_t)v8, type metadata accessor for RERootContainerView);
    v27 = *(unsigned __int8 *)(v48 + 80);
    v44 = a1;
    v28 = (v27 + 16) & ~v27;
    v29 = swift_allocObject(&unk_10091A260, v28 + v49, v27 | 7);
    v45 = a2;
    v30 = v29;
    sub_10002C960((uint64_t)v8, v29 + v28, type metadata accessor for RERootContainerView);
    *v5 = sub_10066154C;
    v5[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v30;
    swift_storeEnumTagMultiPayload(v5, v46, 1);
    v31 = sub_10004CFD4(&qword_1009F2D98);
    v32 = sub_10004CFD4(&qword_1009F2DA0);
    v33 = sub_1001F5558(&qword_1009F2DA8, &qword_1009F2D98, (void (*)(void))sub_1006615A4);
    v34 = sub_100030B34(&qword_1009F2DD0, &qword_1009F2DA0, (uint64_t)&protocol conformance descriptor for GeometryReader<A>);
    v35 = v31;
    a2 = v45;
    _ConditionalContent<>.init(storage:)(v5, v35, v32, v33, v34);
    sub_10000B5E4((uint64_t)v19, (uint64_t)v16, &qword_1009F2D78);
    v36 = v47;
    sub_10000B5E4((uint64_t)v13, v47, &qword_1009F2D70);
    sub_10000B5E4((uint64_t)v16, (uint64_t)v22, &qword_1009F2D78);
    v37 = sub_10004CFD4(&qword_1009F2DD8);
    sub_10000B5E4(v36, (uint64_t)&v22[*(int *)(v37 + 48)], &qword_1009F2D70);
    sub_100010960((uint64_t)v13, &qword_1009F2D70);
    sub_100010960((uint64_t)v19, &qword_1009F2D78);
    a1 = v44;
    sub_100010960(v36, &qword_1009F2D70);
    sub_100010960((uint64_t)v16, &qword_1009F2D78);
    v38 = sub_10004CFD4(&qword_1009F2D88);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v22, 0, 1, v38);
    sub_100025B3C((uint64_t)v22, (uint64_t)v25, &qword_1009F2D80);
  }
  else
  {
    v26 = sub_10004CFD4(&qword_1009F2D88);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
  }
  sub_10002CD84(a1, (uint64_t)v8, type metadata accessor for RERootContainerView);
  v39 = *(unsigned __int8 *)(v48 + 80);
  v40 = (v39 + 16) & ~v39;
  v41 = swift_allocObject(&unk_10091A238, v40 + v49, v39 | 7);
  sub_10002C960((uint64_t)v8, v41 + v40, type metadata accessor for RERootContainerView);
  sub_10000B5E4((uint64_t)v25, (uint64_t)v22, &qword_1009F2D80);
  sub_10000B5E4((uint64_t)v22, a2, &qword_1009F2D80);
  v42 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(a2 + *(int *)(sub_10004CFD4(&qword_1009F2D90) + 48));
  *v42 = sub_1006614FC;
  v42[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v41;
  swift_retain(v41);
  sub_100010960((uint64_t)v25, &qword_1009F2D80);
  swift_release(v41);
  return sub_100010960((uint64_t)v22, &qword_1009F2D80);
}

void sub_100658824(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  double (*v24)(uint64_t, uint64_t);
  double v25;
  id v26;
  NSString v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __n128 v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint8_t *v62;
  uint8_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  os_log_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  os_log_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  _QWORD v107[3];
  uint64_t v108;
  void *v109;
  uint64_t v110[2];

  v2 = v1;
  v98 = a1;
  v3 = type metadata accessor for Logger(0);
  v103 = *(_QWORD *)(v3 - 8);
  v104 = v3;
  __chkstk_darwin(v3);
  v102 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v95 = (char *)&v92 - v6;
  v7 = type metadata accessor for RERootContainerView(0);
  __chkstk_darwin(v7);
  v101 = (uint64_t)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v105 = (char *)&v92 - v10;
  __chkstk_darwin(v11);
  v100 = (char *)&v92 - v12;
  __chkstk_darwin(v13);
  v15 = (char *)&v92 - v14;
  __chkstk_darwin(v16);
  v18 = (char *)&v92 - v17;
  v109 = 0;
  v110[0] = 0;
  v99 = *(int *)(v19 + 56);
  v20 = *(_QWORD *)(v1 + v99);
  v21 = *(_QWORD *)(v20 + 40);
  v22 = *(_QWORD *)(v20 + 56);
  ObjectType = swift_getObjectType();
  v24 = *(double (**)(uint64_t, uint64_t))(v22 + 96);
  swift_unknownObjectRetain(v21);
  v25 = v24(ObjectType, v22);
  swift_unknownObjectRelease(v21);
  v26 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v27 = String._bridgeToObjectiveC()();
  LODWORD(v97) = objc_msgSend(v26, "BOOLForKey:", v27);

  v96 = *(int *)(v7 + 48);
  v28 = *(_QWORD *)(v2 + v96);
  KeyPath = swift_getKeyPath(&unk_1007371F8);
  v107[0] = v28;
  v30 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v107, KeyPath, v30);
  swift_release(KeyPath);
  v31 = *(_QWORD *)(v28 + 328);
  sub_10002CD84(v2, (uint64_t)v18, type metadata accessor for RERootContainerView);
  v32 = v2;
  if (v31 < 0)
  {
    v36 = *(_QWORD *)&v18[*(int *)(v7 + 48)];
    v37 = swift_getKeyPath(&unk_1007371F8);
    v107[0] = v36;
    swift_retain(v36);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v107, v37, v30);
    swift_release(v37);
    v38 = *(_QWORD *)(v36 + 328);
    swift_release(v36);
    sub_10002CD84((uint64_t)v18, (uint64_t)v15, type metadata accessor for RERootContainerView);
    if (v38 == 0x8000000000000018)
    {
      v33 = v7;
      v39 = *(_QWORD *)&v15[*(int *)(v7 + 48)];
      v40 = swift_getKeyPath(&unk_100737220);
      v107[0] = v39;
      ObservationRegistrar.access<A, B>(_:keyPath:)(v107, v40, v30);
      swift_release(v40);
      v41 = *(_QWORD *)(v39 + 272);
      v42 = *(unsigned __int8 *)(v39 + 280);
      sub_100300604(v41, v42);
      sub_10002C8F0((uint64_t)v18, type metadata accessor for RERootContainerView);
      if (v42 == 1)
      {
        sub_100309A54(v41, 1);
        goto LABEL_3;
      }
      sub_100309A54(v41, v42);
    }
    else
    {
      v33 = v7;
      sub_10002C8F0((uint64_t)v18, type metadata accessor for RERootContainerView);
    }
    v35 = 0;
    v34 = (uint64_t)v100;
    goto LABEL_10;
  }
  v33 = v7;
  v15 = v18;
LABEL_3:
  v34 = (uint64_t)v100;
  v35 = (int)v97;
LABEL_10:
  sub_10002C8F0((uint64_t)v15, type metadata accessor for RERootContainerView);
  v43 = (char *)v32;
  v44 = *(_QWORD *)(v32 + v99);
  v45 = *(_QWORD *)(v44 + 80);
  v46 = *(_QWORD *)(v44 + 88);
  v47 = swift_getObjectType();
  swift_unknownObjectRetain(v45);
  v48 = dispatch thunk of BookLayoutModeProviding.layoutMode.getter(v47, v46);
  v49 = swift_unknownObjectRelease(v45);
  v50 = v48 == 1;
  v52 = v103;
  v51 = v104;
  v53 = (uint64_t)v105;
  v54 = v33;
  v55 = v43;
  if (v50 && v35)
  {
    REActionMenuState.chapterScrubbingState.getter();
    if (v56)
    {
      v110[0] = v56;
      v109 = *(void **)(v56 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_currentContentSnapshotView);
      v57 = v109;
    }
    else
    {
      v58 = (*(uint64_t (**)(char *, char *, uint64_t))(v52 + 16))(v95, &v43[*(int *)(v54 + 88)], v51);
      v59 = Logger.logObject.getter(v58);
      v60 = static os_log_type_t.error.getter(v59);
      if (os_log_type_enabled(v59, v60))
      {
        v61 = v54;
        v62 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v62 = 0;
        _os_log_impl((void *)&_mh_execute_header, v59, v60, "Somehow we are not scrubbing and not animating but we ARE chapter scrubbing", v62, 2u);
        v63 = v62;
        v54 = v61;
        v55 = v43;
        swift_slowDealloc(v63, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v52 + 8))(v95, v51);
      v53 = (uint64_t)v105;
    }
  }
  v64 = v30;
  v65 = v102;
  (*(void (**)(char *, char *, uint64_t, __n128))(v52 + 16))(v102, &v55[*(int *)(v54 + 88)], v51, v49);
  sub_10002CD84((uint64_t)v55, v34, type metadata accessor for RERootContainerView);
  sub_10002CD84((uint64_t)v55, v53, type metadata accessor for RERootContainerView);
  v66 = v101;
  v67 = sub_10002CD84((uint64_t)v55, v101, type metadata accessor for RERootContainerView);
  v68 = Logger.logObject.getter(v67);
  v72 = static os_log_type_t.debug.getter(v68, v69, v70, v71);
  LODWORD(v100) = v72;
  if (os_log_type_enabled(v68, v72))
  {
    v73 = swift_slowAlloc(34, -1);
    v99 = swift_slowAlloc(64, -1);
    v108 = v99;
    *(_DWORD *)v73 = 67109890;
    v97 = v68;
    swift_beginAccess(v110, v107, 0, 0);
    LODWORD(v106) = v110[0] != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, (char *)&v106 + 4, v73 + 4, v73 + 8);
    *(_WORD *)(v73 + 8) = 2080;
    v96 = v73 + 10;
    v74 = *(_QWORD *)(v34 + *(int *)(v54 + 48));
    v75 = swift_getKeyPath(&unk_1007371F8);
    v94 = v54;
    v106 = v74;
    v93 = v64;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v106, v75, v64);
    swift_release(v75);
    v76 = *(_QWORD *)(v74 + 328);
    sub_10028C678(v76);
    v77 = ActionMenuState.description.getter(v76);
    v79 = v78;
    sub_10028C694(v76);
    v106 = sub_100040F58(v77, v79, &v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107, v96, v73 + 18);
    swift_bridgeObjectRelease(v79);
    sub_10002C8F0(v34, type metadata accessor for RERootContainerView);
    *(_WORD *)(v73 + 18) = 2080;
    v80 = (uint64_t)v105;
    v81 = *(_QWORD *)&v105[*(int *)(v54 + 48)];
    v82 = swift_getKeyPath(&unk_100737220);
    v106 = v81;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v106, v82, v64);
    swift_release(v82);
    v83 = *(_QWORD *)(v81 + 272);
    LOBYTE(v82) = *(_BYTE *)(v81 + 280);
    sub_100300604(v83, v82);
    v84 = ScrubberState.description.getter(v83, v82);
    v86 = v85;
    sub_100309A54(v83, v82);
    v106 = sub_100040F58(v84, v86, &v108);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, v107, v73 + 20, v73 + 28);
    swift_bridgeObjectRelease(v86);
    sub_10002C8F0(v80, type metadata accessor for RERootContainerView);
    *(_WORD *)(v73 + 28) = 1024;
    v87 = v101;
    v88 = *(_QWORD *)(v101 + *(int *)(v94 + 48));
    v89 = swift_getKeyPath(&unk_100737220);
    v106 = v88;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v106, v89, v93);
    swift_release(v89);
    LODWORD(v89) = *(unsigned __int8 *)(v88 + 280) == 1;
    sub_10002C8F0(v87, type metadata accessor for RERootContainerView);
    LODWORD(v106) = v89;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v106, (char *)&v106 + 4, v73 + 30, v73 + 34);
    v90 = v97;
    _os_log_impl((void *)&_mh_execute_header, v97, (os_log_type_t)v100, "have chapter state? %{BOOL}d actionMenuState %s and scrubberState %s isChapter? %{BOOL}d", (uint8_t *)v73, 0x22u);
    v91 = v99;
    swift_arrayDestroy(v99, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v91, -1, -1);
    swift_slowDealloc(v73, -1, -1);

    (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
  }
  else
  {
    sub_10002C8F0(v66, type metadata accessor for RERootContainerView);
    sub_10002C8F0(v34, type metadata accessor for RERootContainerView);
    sub_10002C8F0(v53, type metadata accessor for RERootContainerView);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v65, v51);
  }
  sub_100659820(v55, v110, &v109, v98, v25);

  swift_release(v110[0]);
}

uint64_t sub_100659118@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t Strong;
  uint64_t v35;
  uint64_t v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t OpaqueTypeConformance2;
  uint64_t v68;
  __n128 v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  int *v83;
  uint64_t v84;
  unsigned __int8 v85;

  v4 = v3;
  v81 = a1;
  v7 = type metadata accessor for RERootContainerView(0);
  v8 = *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64);
  v79 = *(_QWORD *)(v7 - 8);
  v80 = v8;
  __chkstk_darwin(v7);
  v78 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D8240);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = sub_10004CFD4(&qword_1009D26A0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v18 = (uint64_t *)((char *)&v71 - v17);
  v19 = (int *)type metadata accessor for REMenuButtonView(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10004CFD4(&qword_1009F2DE0);
  v23 = *(_QWORD *)(v22 - 8);
  v76 = v22;
  v77 = v23;
  __chkstk_darwin(v22);
  v74 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = *(int *)(v7 + 56);
  v73 = *(_QWORD *)(v3 + v75);
  swift_retain(v73);
  sub_100659EC0(a3 < a2);
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v33 = v3 + *(int *)(v7 + 72);
  Strong = swift_unknownObjectWeakLoadStrong(v33);
  v71 = *(_QWORD *)(v33 + 8);
  v72 = Strong;
  *v18 = swift_getKeyPath(&unk_100736E90);
  v35 = sub_10004CFD4(&qword_1009D26B8);
  swift_storeEnumTagMultiPayload(v18, v35, 0);
  *v15 = swift_getKeyPath(&unk_100736EC0);
  swift_storeEnumTagMultiPayload(v15, v35, 0);
  *v12 = swift_getKeyPath(&unk_100736F80);
  v36 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  swift_storeEnumTagMultiPayload(v12, v36, 0);
  KeyPath = swift_getKeyPath(&unk_100737100);
  v38 = swift_getKeyPath(&unk_100737130);
  v39 = (uint64_t *)&v21[v19[8]];
  *v39 = v38;
  v40 = sub_10004CFD4(&qword_1009D8790);
  swift_storeEnumTagMultiPayload(v39, v40, 0);
  v41 = type metadata accessor for ChromeStyle(0);
  v42 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  EnvironmentObject.init()(v41, v42);
  v44 = v43;
  v46 = v45;
  sub_100025B3C((uint64_t)v18, (uint64_t)v21, &qword_1009D26A0);
  sub_100025B3C((uint64_t)v15, (uint64_t)&v21[v19[5]], &qword_1009D26A0);
  sub_100025B3C((uint64_t)v12, (uint64_t)&v21[v19[6]], &qword_1009D8240);
  v47 = &v21[v19[7]];
  *(_QWORD *)v47 = KeyPath;
  v47[8] = 0;
  v48 = &v21[v19[9]];
  *(_QWORD *)v48 = v44;
  *((_QWORD *)v48 + 1) = v46;
  v49 = type metadata accessor for BookReaderViewModel(0);
  v50 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  Bindable<A>.init(wrappedValue:)(v73, v49, v50);
  v51 = &v21[v19[11]];
  *(_QWORD *)v51 = v26;
  *((_QWORD *)v51 + 1) = v28;
  *((_QWORD *)v51 + 2) = v30;
  *((_QWORD *)v51 + 3) = v32;
  v52 = &v21[v19[12]];
  v53 = v72;
  *((_QWORD *)v52 + 1) = v71;
  swift_unknownObjectWeakInit(v52);
  swift_unknownObjectRelease(v53);
  *(double *)&v21[v19[13]] = a2;
  v54 = sub_10004CFD4(&qword_1009D3A10);
  AccessibilityFocusState.projectedValue.getter(&v83, v54);
  v55 = v83;
  v56 = v84;
  v57 = v85;
  v58 = sub_100008DB0(&qword_1009F2DE8, type metadata accessor for REMenuButtonView, (uint64_t)&unk_1007155E8);
  v59 = v74;
  View.accessibilityFocused(_:)(v55, v56, v57, v19, v58);
  swift_release(v56);
  swift_release(v55);
  sub_10002C8F0((uint64_t)v21, type metadata accessor for REMenuButtonView);
  v60 = *(int **)(v4 + v75);
  v61 = swift_getKeyPath(&unk_100737160);
  v83 = v60;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v83, v61, v50);
  swift_release(v61);
  v82 = *((_BYTE *)v60 + OBJC_IVAR____TtC5Books19BookReaderViewModel__closedAndNoOverlayVisible);
  v62 = v4;
  v63 = v78;
  sub_10002CD84(v62, v78, type metadata accessor for RERootContainerView);
  v64 = *(unsigned __int8 *)(v79 + 80);
  v65 = (v64 + 16) & ~v64;
  v66 = swift_allocObject(&unk_10091A288, v65 + v80, v64 | 7);
  sub_10002C960(v63, v66 + v65, type metadata accessor for RERootContainerView);
  v83 = v19;
  v84 = v58;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v83, &opaque type descriptor for <<opaque return type of View.accessibilityFocused(_:)>>, 1);
  v68 = v76;
  View.onChange<A>(of:initial:_:)(&v82, 0, sub_100661640, v66, v76, &type metadata for Bool, OpaqueTypeConformance2, &protocol witness table for Bool);
  v69 = swift_release(v66);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v77 + 8))(v59, v68, v69);
}

uint64_t sub_100659690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = sub_10004CFD4(&qword_1009F0270);
  __chkstk_darwin(v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v9);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v10 = sub_10004CFD4(&qword_1009F2E18);
  sub_10065E92C(a2, a1, (uint64_t)&v8[*(int *)(v10 + 44)]);
  v12 = static Alignment.center.getter(v11);
  sub_1005F3454(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a3, 0.0, 1, 0.0, 1, v12, v13);
  return sub_100010960((uint64_t)v8, &qword_1009F0270);
}

_QWORD *sub_10065978C@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1002F5514();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for BookLayoutModeKey, &type metadata for BookLayoutModeKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_1006597D8(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v3;

  v3 = *a1;
  v1 = sub_1002F5514();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for BookLayoutModeKey, &type metadata for BookLayoutModeKey, v1);
}

uint64_t sub_100659820@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void **a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  void **v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char v72;
  _OWORD v73[3];
  __int128 v74;
  uint64_t v75;
  __int128 v76[4];
  uint64_t v77;
  char v78[32];

  v65 = a3;
  v67 = sub_10004CFD4(&qword_1009F2DF0);
  __chkstk_darwin(v67);
  v69 = (uint64_t)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for ChapterScrubbingView(0);
  __chkstk_darwin(v68);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v66 = (uint64_t)&v64 - v13;
  v14 = sub_10004CFD4(&qword_1009F2DF8);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v70 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v71 = (uint64_t)&v64 - v18;
  v19 = type metadata accessor for RERootContainerView(0);
  v20 = a1;
  v21 = (uint64_t)a1 + *(int *)(v19 + 32);
  v22 = *(_QWORD *)v21;
  LOBYTE(a1) = *(_BYTE *)(v21 + 8);
  sub_1001F2508(*(_QWORD *)v21, (char)a1);
  v23 = sub_100667C14(v22, (char)a1);
  sub_1001F2564(v22, (char)a1);
  if ((v23 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a4, 1, 1, v14);
  v64 = v15;
  v25 = a4;
  swift_beginAccess(a2, v78, 0, 0);
  v26 = *a2;
  if (v26)
  {
    v27 = *(_QWORD *)((char *)v20 + *(int *)(v19 + 48));
    sub_10002E418(v27 + 80, (uint64_t)v76);
    v28 = *v65;
    if (*v65)
    {
      swift_retain(v26);
      swift_retain(v27);
      v29 = v28;
      v30 = (void *)*v20;
      if (*v20)
      {
LABEL_6:
        v31 = v28;
        v32 = v30;
        swift_retain(v26);
        sub_1004116D8(v27, v26, v76, (uint64_t)v29, (uint64_t)v32, (uint64_t)v11, a5);
        v33 = v66;
        sub_10002C960((uint64_t)v11, v66, type metadata accessor for ChapterScrubbingView);
        v34 = v69;
        sub_10002CD84(v33, v69, type metadata accessor for ChapterScrubbingView);
        swift_storeEnumTagMultiPayload(v34, v67, 0);
        v35 = sub_100008DB0(&qword_1009F2E08, type metadata accessor for ChapterScrubbingView, (uint64_t)&unk_100723130);
        v36 = sub_1006616E8();
        v37 = (uint64_t)v70;
        _ConditionalContent<>.init(storage:)(v34, v68, &type metadata for PageFlippingView, v35, v36);
        swift_release(v26);
        sub_10002C8F0(v33, type metadata accessor for ChapterScrubbingView);
        v38 = sub_10004CFD4(&qword_1009F2E00);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 0, 1, v38);
        v39 = v71;
        sub_100025B3C(v37, v71, &qword_1009F2DF8);
LABEL_13:
        v45 = v25;
        goto LABEL_14;
      }
    }
    else
    {
      v52 = objc_allocWithZone((Class)UIView);
      swift_retain(v26);
      v29 = objc_msgSend(v52, "init", swift_retain(v27).n128_f64[0]);
      v30 = (void *)*v20;
      if (*v20)
        goto LABEL_6;
    }
    v53 = v20[1];
    v54 = type metadata accessor for ChromeStyle(0);
    v55 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v56 = v28;
    EnvironmentObject.error()(0, v53, v54, v55, v57);
    __break(1u);
LABEL_12:
    v58 = sub_10004CFD4(&qword_1009F2E00);
    v39 = v71;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v71, 1, 1, v58);
    goto LABEL_13;
  }
  v40 = v20;
  v41 = *(_QWORD *)((char *)v20 + *(int *)(v19 + 48));
  KeyPath = swift_getKeyPath(&unk_1007371F8);
  *(_QWORD *)&v76[0] = v41;
  v43 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v76, KeyPath, v43);
  swift_release(KeyPath);
  if (*(_QWORD *)(v41 + 328) != 0x8000000000000010)
    goto LABEL_12;
  sub_10002E418(v41 + 80, (uint64_t)v76);
  v44 = (void *)*v20;
  if (*v40)
  {
    v45 = a4;
    v72 = 0;
    swift_retain(v41);
    v46 = v44;
    State.init(wrappedValue:)(v73, &v72, &type metadata for Bool);
    BYTE8(v74) = v73[0];
    v75 = *((_QWORD *)&v73[0] + 1);
    *(_QWORD *)&v73[0] = v41;
    sub_100022840(v76, (uint64_t)v73 + 8);
    *(_QWORD *)&v74 = v46;
    v77 = v75;
    v76[0] = v73[0];
    v76[1] = v73[1];
    v76[2] = v73[2];
    v76[3] = v74;
    v47 = v69;
    sub_100373298((uint64_t *)v76, v69);
    swift_storeEnumTagMultiPayload(v47, v67, 1);
    v48 = sub_100008DB0(&qword_1009F2E08, type metadata accessor for ChapterScrubbingView, (uint64_t)&unk_100723130);
    v49 = sub_1006616E8();
    v50 = (uint64_t)v70;
    _ConditionalContent<>.init(storage:)(v47, v68, &type metadata for PageFlippingView, v48, v49);
    sub_10066172C((uint64_t)v76);
    v51 = sub_10004CFD4(&qword_1009F2E00);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 0, 1, v51);
    v39 = v71;
    sub_100025B3C(v50, v71, &qword_1009F2DF8);
LABEL_14:
    v59 = v64;
    sub_100025B3C(v39, v45, &qword_1009F2DF8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v45, 0, 1, v14);
  }
  v60 = v40[1];
  v61 = type metadata accessor for ChromeStyle(0);
  v62 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  v63 = swift_retain(v41);
  result = EnvironmentObject.error()(0, v60, v61, v62, v63);
  __break(1u);
  return result;
}

uint64_t sub_100659EC0(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  double v25;
  uint64_t v26;
  id v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t ObjectType;
  void (*v35)(uint64_t, uint64_t);
  double v36;
  double v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  _DWORD v44[4];
  char *v45;
  uint64_t v46;

  v2 = v1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v4);
  v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v9 = (char *)v44 - v8;
  v10 = type metadata accessor for UserInterfaceSizeClass(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v45 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)v44 - v14;
  v16 = type metadata accessor for RERootContainerView(0);
  sub_100667DCC((uint64_t)v9);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1)
  {
    v18 = (uint64_t)v9;
    return sub_100010960(v18, (uint64_t *)&unk_1009D8210);
  }
  v44[3] = a1;
  v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v15, v9, v10);
  sub_100667DCC((uint64_t)v6);
  if (v17(v6, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    v18 = (uint64_t)v6;
    return sub_100010960(v18, (uint64_t *)&unk_1009D8210);
  }
  v19(v45, v6, v10);
  v21 = *(int *)(v16 + 56);
  v22 = *(_QWORD *)(v1 + v21);
  KeyPath = swift_getKeyPath(&unk_1007371D0);
  v46 = v22;
  v24 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v46, KeyPath, v24);
  swift_release(KeyPath);
  if (*(_QWORD *)v1)
  {
    v25 = *(double *)(v22 + OBJC_IVAR____TtC5Books19BookReaderViewModel__gutterWidth);
    v26 = qword_1009CE598;
    v27 = *(id *)v1;
    if (v26 != -1)
      swift_once(&qword_1009CE598, sub_100478F10);
    v28 = *(double *)&static REConstants.menuButtonTapTargetSize;
    if (qword_1009CE628 != -1)
      swift_once(&qword_1009CE628, sub_100479520);
    v29 = *(double *)&static REConstants.floatingButtonHeight;

    if ((v28 - v29) * 0.5 < 0.0)
      v30 = 0.0;
    else
      v30 = (v28 - v29) * 0.5;
    v31 = *(_QWORD *)(v2 + v21);
    v32 = *(_QWORD *)(v31 + 40);
    v33 = *(_QWORD *)(v31 + 56);
    ObjectType = swift_getObjectType();
    v35 = *(void (**)(uint64_t, uint64_t))(v33 + 88);
    swift_unknownObjectRetain(v32);
    v35(ObjectType, v33);
    v37 = v36;
    swift_unknownObjectRelease(v32);
    v38 = (uint64_t)v45;
    sub_100479C9C((uint64_t)v15, (uint64_t)v45, v25, v30, v37);
    v39 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v39(v38, v10);
    return ((uint64_t (*)(char *, uint64_t))v39)(v15, v10);
  }
  else
  {
    v40 = *(_QWORD *)(v1 + 8);
    v41 = type metadata accessor for ChromeStyle(0);
    v42 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v40, v41, v42, v43);
    __break(1u);
  }
  return result;
}

uint64_t sub_10065A274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[5];
  uint64_t v51;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v48 = *(_QWORD *)(v1 - 8);
  v49 = v1;
  __chkstk_darwin(v1);
  v47 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DispatchQoS(0);
  v45 = *(_QWORD *)(v3 - 8);
  v46 = v3;
  __chkstk_darwin(v3);
  v44 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RERootContainerView(0);
  v40 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v40 + 64);
  __chkstk_darwin(v5);
  v43 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v42 = (char *)&v38 - v11;
  v12 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v12);
  v14 = (uint64_t *)((char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(int *)(v5 + 56);
  v41 = v0;
  v16 = *(_QWORD *)(*(_QWORD *)(v0 + v15) + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  KeyPath = swift_getKeyPath(&unk_100737188);
  v18 = swift_getKeyPath(&unk_1007371B0);
  swift_retain(v16);
  static Published.subscript.getter(v14, v19, KeyPath);
  swift_release(v16);
  swift_release(KeyPath);
  swift_release(v18);
  v20 = type metadata accessor for OverlayViewModel.Overlay(0);
  LODWORD(v16) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v14, 1, v20);
  result = sub_100010960((uint64_t)v14, &qword_1009EFD70);
  if ((_DWORD)v16 == 1)
  {
    v22 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
    v38 = static OS_dispatch_queue.main.getter(v22);
    static DispatchTime.now()(v38);
    v23 = v42;
    + infix(_:_:)(v9, 1.0);
    v39 = *(void (**)(char *, uint64_t))(v7 + 8);
    v24 = v43;
    v39(v9, v43);
    sub_10002CD84(v41, (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RERootContainerView);
    v25 = *(unsigned __int8 *)(v40 + 80);
    v26 = (v25 + 16) & ~v25;
    v27 = swift_allocObject(&unk_10091A2B0, v26 + v6, v25 | 7);
    sub_10002C960((uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, type metadata accessor for RERootContainerView);
    aBlock[4] = sub_1006616A4;
    v51 = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000147F0;
    aBlock[3] = &unk_10091A2C8;
    v28 = _Block_copy(aBlock);
    swift_release(v51);
    v29 = v44;
    static DispatchQoS.unspecified.getter(v30);
    aBlock[0] = _swiftEmptyArrayStorage;
    v31 = sub_100008DB0((unint64_t *)&qword_1009D48E0, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v32 = sub_10004CFD4((uint64_t *)&unk_1009DB460);
    v33 = sub_100030B34((unint64_t *)&qword_1009D48F0, (uint64_t *)&unk_1009DB460, (uint64_t)&protocol conformance descriptor for [A]);
    v34 = v47;
    v35 = v32;
    v36 = v49;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v35, v33, v49, v31);
    v37 = (void *)v38;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v23, v29, v34, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v36);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v46);
    return ((uint64_t (*)(char *, uint64_t))v39)(v23, v24);
  }
  return result;
}

uint64_t sub_10065A678@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  double v23;
  uint64_t v24;
  id v25;
  double v26;
  double v27;
  double v28;
  char v29;
  double v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];

  v4 = v3;
  v66 = a1;
  v7 = sub_10004CFD4(&qword_1009F2E90);
  __chkstk_darwin(v7);
  v9 = (uint64_t *)((char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for LayoutDirection(0);
  v71 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v70 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RERootContainerView(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v62 - v16;
  v19 = GeometryProxy.size.getter(v18);
  sub_100659EC0(v20 < v19);
  v22 = *(void **)v3;
  if (*(_QWORD *)v3)
  {
    v23 = v21;
    v24 = qword_1009CE598;
    v25 = v22;
    if (v24 != -1)
      swift_once(&qword_1009CE598, sub_100478F10);
    v26 = *(double *)&static REConstants.menuButtonTapTargetSize;
    if (qword_1009CE628 != -1)
      swift_once(&qword_1009CE628, sub_100479520);
    v27 = *(double *)&static REConstants.floatingButtonHeight;

    if ((v26 - v27) * 0.5 < 0.0)
      v28 = 0.0;
    else
      v28 = (v26 - v27) * 0.5;
    v29 = sub_10065AB64();
    v68 = v10;
    v69 = a3;
    v67 = a2;
    v63 = v14;
    if ((v29 & 1) != 0)
    {
      v30 = v23 + v28;
    }
    else
    {
      v31 = *(_QWORD *)(v4 + *(int *)(v12 + 56));
      KeyPath = swift_getKeyPath(&unk_1007371D0);
      v72[0] = v31;
      v33 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
      ObservationRegistrar.access<A, B>(_:keyPath:)(v72, KeyPath, v33);
      swift_release(KeyPath);
      v30 = *(double *)(v31 + OBJC_IVAR____TtC5Books19BookReaderViewModel__gutterWidth);
    }
    sub_10002CD84(v4, (uint64_t)v17, type metadata accessor for RERootContainerView);
    v64 = *(_QWORD *)&v17[*(int *)(v12 + 76)];
    sub_10002C8F0((uint64_t)v17, type metadata accessor for RERootContainerView);
    v34 = *(int *)(v12 + 56);
    v35 = *(_QWORD *)(v4 + v34);
    v65 = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC5Books19BookReaderViewModel_characterFlowIsRTL);
    v36 = swift_getKeyPath(&unk_100737298);
    v72[0] = v35;
    v37 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v72, v36, v37);
    swift_release(v36);
    v38 = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC5Books19BookReaderViewModel__fadeLeadingTitleEdge);
    v39 = *(_QWORD *)(v4 + v34);
    v40 = swift_getKeyPath(&unk_1007372C0);
    v72[0] = v39;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v72, v40, v37);
    swift_release(v40);
    v41 = v39 + OBJC_IVAR____TtC5Books19BookReaderViewModel__layoutDirection;
    v42 = swift_beginAccess(v39 + OBJC_IVAR____TtC5Books19BookReaderViewModel__layoutDirection, v72, 0, 0);
    v43 = v68;
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v71 + 16))(v70, v41, v68, v42);
    v44 = *(_QWORD *)(v4 + *(int *)(v12 + 76));
    v45 = (uint64_t)v63;
    sub_10002CD84(v4, (uint64_t)v63, type metadata accessor for RERootContainerView);
    v46 = (v44 & 1) != 0 && (~*(_DWORD *)(v45 + *(int *)(v12 + 76)) & 0xCLL) != 0;
    v47 = (v64 >> 2) & 1;
    v48 = v66 & 1;
    v49 = sub_10002C8F0(v45, type metadata accessor for RERootContainerView);
    *v9 = static Alignment.center.getter(v49);
    v9[1] = v50;
    v51 = sub_10004CFD4(&qword_1009F2EC8);
    v52 = v48;
    v53 = v70;
    sub_10065B1B8(v4, v47, v65, v38, v52, v70, v44 & 1, v67, (uint64_t)v9 + *(int *)(v51 + 44), v30, v46);
    v54 = swift_getKeyPath(&unk_1007372E8);
    v55 = v69;
    sub_10000B5E4((uint64_t)v9, v69, &qword_1009F2E90);
    v56 = v55 + *(int *)(sub_10004CFD4(&qword_1009F2E80) + 36);
    *(_QWORD *)v56 = v54;
    *(_QWORD *)(v56 + 8) = 0;
    *(_BYTE *)(v56 + 16) = 1;
    sub_100010960((uint64_t)v9, &qword_1009F2E90);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 8))(v53, v43);
  }
  else
  {
    v58 = *(_QWORD *)(v3 + 8);
    v59 = type metadata accessor for ChromeStyle(0);
    v60 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    result = EnvironmentObject.error()(0, v58, v59, v60, v61);
    __break(1u);
  }
  return result;
}

uint64_t sub_10065AB64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  _BYTE *v29;
  char v30;
  _BYTE *v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t);
  _BYTE *v34;
  _BYTE *v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t);
  _BYTE v43[4];
  int v44;
  _BYTE *v45;
  _BYTE *v46;
  void (*v47)(_BYTE *, uint64_t, uint64_t);
  void (*v48)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;

  v1 = type metadata accessor for RERootContainerView(0);
  __chkstk_darwin(v1);
  v55 = &v43[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for UserInterfaceSizeClass(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v46 = &v43[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_10004CFD4(&qword_1009D3C08);
  __chkstk_darwin(v6);
  v52 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  v10 = &v43[-v9];
  v11 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
  __chkstk_darwin(v11);
  v45 = &v43[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v53 = &v43[-v14];
  __chkstk_darwin(v15);
  v51 = &v43[-v16];
  __chkstk_darwin(v17);
  v19 = &v43[-v18];
  __chkstk_darwin(v20);
  v22 = &v43[-v21];
  __chkstk_darwin(v23);
  v25 = &v43[-v24];
  v50 = v1;
  v54 = v0;
  sub_100667DCC((uint64_t)&v43[-v24]);
  v26 = enum case for UserInterfaceSizeClass.regular(_:);
  v47 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 104);
  v47(v22, enum case for UserInterfaceSizeClass.regular(_:), v3);
  v48 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v48(v22, 0, 1, v3);
  v49 = v6;
  v27 = (uint64_t)&v10[*(int *)(v6 + 48)];
  sub_10000B5E4((uint64_t)v25, (uint64_t)v10, (uint64_t *)&unk_1009D8210);
  sub_10000B5E4((uint64_t)v22, v27, (uint64_t *)&unk_1009D8210);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v28((uint64_t)v10, 1, v3) == 1)
  {
    sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v25, (uint64_t *)&unk_1009D8210);
    if (v28(v27, 1, v3) == 1)
    {
      sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D8210);
      v29 = v55;
      sub_10002CD84(v54, (uint64_t)v55, type metadata accessor for RERootContainerView);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_10000B5E4((uint64_t)v10, (uint64_t)v19, (uint64_t *)&unk_1009D8210);
  if (v28(v27, 1, v3) == 1)
  {
    sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D8210);
    sub_100010960((uint64_t)v25, (uint64_t *)&unk_1009D8210);
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v19, v3);
LABEL_6:
    sub_100010960((uint64_t)v10, &qword_1009D3C08);
    v29 = v55;
    sub_10002CD84(v54, (uint64_t)v55, type metadata accessor for RERootContainerView);
    goto LABEL_7;
  }
  v31 = v46;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 32))(v46, v27, v3);
  v32 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
  v44 = dispatch thunk of static Equatable.== infix(_:_:)(v19, v31, v3, v32);
  v33 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v33(v31, v3);
  sub_100010960((uint64_t)v22, (uint64_t *)&unk_1009D8210);
  sub_100010960((uint64_t)v25, (uint64_t *)&unk_1009D8210);
  v33(v19, v3);
  sub_100010960((uint64_t)v10, (uint64_t *)&unk_1009D8210);
  v29 = v55;
  sub_10002CD84(v54, (uint64_t)v55, type metadata accessor for RERootContainerView);
  if ((v44 & 1) != 0)
  {
LABEL_9:
    v34 = v51;
    sub_100667DCC((uint64_t)v51);
    v35 = v53;
    v47(v53, v26, v3);
    v48(v35, 0, 1, v3);
    v36 = v52;
    v37 = (uint64_t)&v52[*(int *)(v49 + 48)];
    sub_10000B5E4((uint64_t)v34, (uint64_t)v52, (uint64_t *)&unk_1009D8210);
    sub_10000B5E4((uint64_t)v35, v37, (uint64_t *)&unk_1009D8210);
    if (v28((uint64_t)v36, 1, v3) == 1)
    {
      sub_100010960((uint64_t)v35, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v34, (uint64_t *)&unk_1009D8210);
      sub_10002C8F0((uint64_t)v29, type metadata accessor for RERootContainerView);
      if (v28(v37, 1, v3) == 1)
      {
        sub_100010960((uint64_t)v36, (uint64_t *)&unk_1009D8210);
        v30 = 1;
        return v30 & 1;
      }
    }
    else
    {
      v38 = v45;
      sub_10000B5E4((uint64_t)v36, (uint64_t)v45, (uint64_t *)&unk_1009D8210);
      if (v28(v37, 1, v3) != 1)
      {
        v39 = v46;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 32))(v46, v37, v3);
        v40 = sub_100008DB0((unint64_t *)&qword_1009D87D0, (uint64_t (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UserInterfaceSizeClass);
        v30 = dispatch thunk of static Equatable.== infix(_:_:)(v38, v39, v3, v40);
        v41 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
        v41(v39, v3);
        sub_100010960((uint64_t)v53, (uint64_t *)&unk_1009D8210);
        sub_100010960((uint64_t)v34, (uint64_t *)&unk_1009D8210);
        sub_10002C8F0((uint64_t)v29, type metadata accessor for RERootContainerView);
        v41(v38, v3);
        sub_100010960((uint64_t)v36, (uint64_t *)&unk_1009D8210);
        return v30 & 1;
      }
      sub_100010960((uint64_t)v53, (uint64_t *)&unk_1009D8210);
      sub_100010960((uint64_t)v34, (uint64_t *)&unk_1009D8210);
      sub_10002C8F0((uint64_t)v29, type metadata accessor for RERootContainerView);
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v38, v3);
    }
    sub_100010960((uint64_t)v36, &qword_1009D3C08);
    v30 = 0;
    return v30 & 1;
  }
LABEL_7:
  sub_10002C8F0((uint64_t)v29, type metadata accessor for RERootContainerView);
  v30 = 0;
  return v30 & 1;
}

uint64_t sub_10065B1B8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, unsigned __int8 a11)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  double (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  __int128 v58;
  uint64_t KeyPath;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double (*v82)(uint64_t, uint64_t);
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  char *v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  int v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  int v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  _OWORD v114[3];
  _OWORD v115[3];

  v112 = a6;
  v113 = a8;
  v110 = a4;
  v111 = a7;
  v109 = a3;
  v107 = a9;
  v104 = a11;
  v14 = a5 & 1;
  v15 = sub_10004CFD4(&qword_1009F2ED0);
  __chkstk_darwin(v15);
  v108 = (uint64_t)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v103 = (char *)&v94 - v18;
  v19 = sub_10004CFD4(&qword_1009F2ED8);
  __chkstk_darwin(v19);
  v21 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_10004CFD4(&qword_1009F2EE0);
  __chkstk_darwin(v22);
  v24 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_10004CFD4(&qword_1009F2EE8);
  v106 = *(_QWORD *)(v101 - 8);
  __chkstk_darwin(v101);
  v26 = (char *)&v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_10004CFD4(&qword_1009F2EF0);
  __chkstk_darwin(v102);
  v28 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = (char *)sub_10004CFD4(&qword_1009F2EF8);
  __chkstk_darwin(v105);
  v30 = (char *)&v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v94 - v32;
  v97 = a2;
  v99 = v14;
  v34 = sub_10065B88C(a2, v109, v110, v14, v112, v111, (uint64_t)v21, 1.0, 0.0);
  LOBYTE(a2) = static Edge.Set.horizontal.getter(v34);
  v35 = EdgeInsets.init(_all:)(a10);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  sub_10000B5E4((uint64_t)v21, (uint64_t)v24, &qword_1009F2ED8);
  v96 = v22;
  v42 = &v24[*(int *)(v22 + 36)];
  *v42 = a2;
  *((double *)v42 + 1) = v35;
  *((_QWORD *)v42 + 2) = v37;
  *((_QWORD *)v42 + 3) = v39;
  *((_QWORD *)v42 + 4) = v41;
  v42[40] = 0;
  v98 = v21;
  v43 = sub_100010960((uint64_t)v21, &qword_1009F2ED8);
  v44 = GeometryProxy.size.getter(v43);
  v45 = *(int *)(type metadata accessor for RERootContainerView(0) + 56);
  v100 = a1;
  v95 = v45;
  v46 = *(_QWORD *)(a1 + v45);
  v47 = *(_QWORD *)(v46 + 40);
  v48 = *(_QWORD *)(v46 + 56);
  ObjectType = swift_getObjectType();
  v50 = *(double (**)(uint64_t, uint64_t))(v48 + 16);
  swift_unknownObjectRetain(v47);
  v51 = v48;
  v52 = v101;
  v53 = v50(ObjectType, v51);
  swift_unknownObjectRelease(v47);
  v55 = static Alignment.center.getter(v54);
  _FrameLayout.init(width:height:alignment:)(v114, *(_QWORD *)&v44, 0, *(_QWORD *)&v53, 0, v55, v56);
  sub_10000B5E4((uint64_t)v24, (uint64_t)v26, &qword_1009F2EE0);
  v57 = &v26[*(int *)(v52 + 36)];
  v58 = v114[1];
  *(_OWORD *)v57 = v114[0];
  *((_OWORD *)v57 + 1) = v58;
  *((_OWORD *)v57 + 2) = v114[2];
  sub_100010960((uint64_t)v24, &qword_1009F2EE0);
  sub_10000B5E4((uint64_t)v26, (uint64_t)v28, &qword_1009F2EE8);
  *(_WORD *)&v28[*(int *)(v102 + 36)] = 257;
  sub_100010960((uint64_t)v26, &qword_1009F2EE8);
  KeyPath = swift_getKeyPath(&unk_100737310);
  sub_10000B5E4((uint64_t)v28, (uint64_t)v30, &qword_1009F2EF0);
  v60 = &v30[*((int *)v105 + 9)];
  *(_QWORD *)v60 = KeyPath;
  v61 = 1;
  v60[8] = 1;
  v62 = (uint64_t)v28;
  v63 = (uint64_t)v103;
  sub_100010960(v62, &qword_1009F2EF0);
  v105 = v33;
  sub_100025B3C((uint64_t)v30, (uint64_t)v33, &qword_1009F2EF8);
  if ((v104 & 1) == 0)
  {
    v64 = (uint64_t)v98;
    v65 = v100;
    v66 = sub_10065B88C(v97 & 1, v109 & 1, v110 & 1, v99, v112, v111 & 1, (uint64_t)v98, 0.0, 1.0);
    v67 = static Edge.Set.horizontal.getter(v66);
    v68 = EdgeInsets.init(_all:)(a10);
    v70 = v69;
    v72 = v71;
    v74 = v73;
    sub_10000B5E4(v64, (uint64_t)v24, &qword_1009F2ED8);
    v75 = &v24[*(int *)(v96 + 36)];
    *v75 = v67;
    *((double *)v75 + 1) = v68;
    *((_QWORD *)v75 + 2) = v70;
    *((_QWORD *)v75 + 3) = v72;
    *((_QWORD *)v75 + 4) = v74;
    v75[40] = 0;
    v76 = sub_100010960(v64, &qword_1009F2ED8);
    v77 = GeometryProxy.size.getter(v76);
    v78 = *(_QWORD *)(v65 + v95);
    v79 = *(_QWORD *)(v78 + 40);
    v80 = *(_QWORD *)(v78 + 56);
    v81 = swift_getObjectType();
    v82 = *(double (**)(uint64_t, uint64_t))(v80 + 16);
    swift_unknownObjectRetain(v79);
    v83 = v82(v81, v80);
    swift_unknownObjectRelease(v79);
    v85 = static Alignment.center.getter(v84);
    _FrameLayout.init(width:height:alignment:)(v115, *(_QWORD *)&v77, 0, *(_QWORD *)&v83, 0, v85, v86);
    sub_10000B5E4((uint64_t)v24, (uint64_t)v26, &qword_1009F2EE0);
    v87 = &v26[*(int *)(v52 + 36)];
    v88 = v115[1];
    *(_OWORD *)v87 = v115[0];
    *((_OWORD *)v87 + 1) = v88;
    *((_OWORD *)v87 + 2) = v115[2];
    sub_100010960((uint64_t)v24, &qword_1009F2EE0);
    sub_100025B3C((uint64_t)v26, v63, &qword_1009F2EE8);
    v61 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v63, v61, 1, v52);
  v89 = (uint64_t)v105;
  sub_10000B5E4((uint64_t)v105, (uint64_t)v30, &qword_1009F2EF8);
  v90 = v108;
  sub_10000B5E4(v63, v108, &qword_1009F2ED0);
  v91 = v107;
  sub_10000B5E4((uint64_t)v30, v107, &qword_1009F2EF8);
  v92 = sub_10004CFD4(&qword_1009F2F00);
  sub_10000B5E4(v90, v91 + *(int *)(v92 + 48), &qword_1009F2ED0);
  sub_100010960(v63, &qword_1009F2ED0);
  sub_100010960(v89, &qword_1009F2EF8);
  sub_100010960(v90, &qword_1009F2ED0);
  return sub_100010960((uint64_t)v30, &qword_1009F2EF8);
}

uint64_t sub_10065B88C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t);
  int v79;
  unsigned int *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  BOOL v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  _QWORD *v103;
  int v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  int v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125[24];
  char v126[24];
  _QWORD v127[3];

  v116 = a3;
  v117 = a6;
  v120 = a5;
  v113 = a2;
  v122 = a7;
  v118 = a4 & 1;
  v13 = sub_10004CFD4(&qword_1009F2F08);
  __chkstk_darwin(v13);
  v119 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009F2F10);
  __chkstk_darwin(v15);
  v115 = (uint64_t)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_10004CFD4(&qword_1009F2F18);
  __chkstk_darwin(v114);
  v112 = (uint64_t)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v20 = (char *)&v100 - v19;
  v111 = type metadata accessor for LayoutDirection(0);
  v108 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v109 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for CenteringHStackLayout(0);
  __chkstk_darwin(v107);
  v110 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v106 = (char *)&v100 - v24;
  v25 = type metadata accessor for BookReaderChromeState(0);
  __chkstk_darwin(v25);
  v27 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for HistoryModel(0);
  __chkstk_darwin(v102);
  v103 = (uint64_t *)((char *)&v100 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = (int *)type metadata accessor for RERootContainerView(0);
  __chkstk_darwin(v29);
  v105 = (uint64_t)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v33 = (char *)&v100 - v32;
  __chkstk_darwin(v34);
  v36 = (char *)&v100 - v35;
  __chkstk_darwin(v37);
  v39 = (char *)&v100 - v38;
  v40 = sub_10004CFD4(&qword_1009DD048);
  __chkstk_darwin(v40);
  v123 = (uint64_t)&v100 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v124 = (uint64_t)&v100 - v43;
  v44 = v9;
  sub_10002CD84(v9, (uint64_t)v39, type metadata accessor for RERootContainerView);
  v104 = a1;
  v121 = v20;
  if ((a1 & 1) != 0)
  {
    v45 = v29[14];
    v101 = v27;
    v46 = *(_QWORD *)&v39[v45];
    KeyPath = swift_getKeyPath(&unk_100737338);
    v127[0] = v46;
    v48 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v127, KeyPath, v48);
    swift_release(KeyPath);
    v27 = v101;
    v49 = v46 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
    swift_beginAccess(v46 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, v125, 0, 0);
    LOBYTE(v49) = *(_BYTE *)(v49 + *(int *)(v25 + 36));
    sub_10002C8F0((uint64_t)v39, type metadata accessor for RERootContainerView);
    if ((v49 & 1) != 0)
    {
      v50 = *(_QWORD *)(v44 + v29[15] + 8);
      v51 = swift_getKeyPath(&unk_100737360);
      v52 = swift_getKeyPath(&unk_100737388);
      swift_retain(v50);
      v53 = v103;
      static Published.subscript.getter(v103, v54, v51);
      swift_release(v51);
      v55 = v52;
      v56 = v44;
      swift_release(v55);
      sub_10000B5E4((uint64_t)v53, v124, &qword_1009DD048);
      v57 = (uint64_t)v53;
      v27 = v101;
      sub_10002C8F0(v57, type metadata accessor for HistoryModel);
      swift_release(v50);
      sub_10002CD84(v44, (uint64_t)v36, type metadata accessor for RERootContainerView);
      goto LABEL_6;
    }
  }
  else
  {
    sub_10002C8F0((uint64_t)v39, type metadata accessor for RERootContainerView);
  }
  v58 = type metadata accessor for HistoryModel.Entry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v124, 1, 1, v58);
  v56 = v44;
  sub_10002CD84(v44, (uint64_t)v36, type metadata accessor for RERootContainerView);
  if ((v104 & 1) == 0)
  {
    sub_10002C8F0((uint64_t)v36, type metadata accessor for RERootContainerView);
    goto LABEL_9;
  }
LABEL_6:
  v59 = *(_QWORD *)&v36[v29[14]];
  v60 = swift_getKeyPath(&unk_100737338);
  v127[0] = v59;
  v61 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v127, v60, v61);
  swift_release(v60);
  v62 = v59 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
  swift_beginAccess(v59 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, v126, 0, 0);
  sub_10002CD84(v62, (uint64_t)v27, type metadata accessor for BookReaderChromeState);
  LOBYTE(v62) = v27[*(int *)(v25 + 36)];
  sub_10002C8F0((uint64_t)v27, type metadata accessor for BookReaderChromeState);
  sub_10002C8F0((uint64_t)v36, type metadata accessor for RERootContainerView);
  if ((v62 & 1) != 0)
  {
    v63 = *(_QWORD *)(v56 + v29[15] + 8);
    v64 = swift_getKeyPath(&unk_100737360);
    v65 = swift_getKeyPath(&unk_100737388);
    swift_retain(v63);
    v66 = v103;
    static Published.subscript.getter(v103, v67, v64);
    swift_release(v64);
    swift_release(v65);
    v68 = v123;
    sub_10000B5E4((uint64_t)v66 + *(int *)(v102 + 20), v123, &qword_1009DD048);
    sub_10002C8F0((uint64_t)v66, type metadata accessor for HistoryModel);
    swift_release(v63);
    goto LABEL_10;
  }
LABEL_9:
  v69 = type metadata accessor for HistoryModel.Entry(0);
  v68 = v123;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v123, 1, 1, v69);
LABEL_10:
  sub_10002CD84(v56, (uint64_t)v33, type metadata accessor for RERootContainerView);
  v70 = *(_QWORD *)&v33[v29[14]];
  v71 = swift_getKeyPath(&unk_100737338);
  v127[0] = v70;
  v72 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v127, v71, v72);
  swift_release(v71);
  v73 = v70 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
  swift_beginAccess(v70 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, v127, 0, 0);
  LODWORD(v73) = *(unsigned __int8 *)(v73 + *(int *)(v25 + 40));
  sub_10002C8F0((uint64_t)v33, type metadata accessor for RERootContainerView);
  v74 = v105;
  sub_10002CD84(v56, v105, type metadata accessor for RERootContainerView);
  if ((_DWORD)v73 == 1)
    v75 = (*(unsigned __int8 *)(v74 + v29[19]) >> 3) & 1;
  else
    v75 = 0;
  v76 = v124;
  sub_10002C8F0(v74, type metadata accessor for RERootContainerView);
  v77 = type metadata accessor for HistoryModel.Entry(0);
  v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48);
  LODWORD(v124) = v78(v76, 1, v77);
  v79 = v78(v68, 1, v77);
  v80 = (unsigned int *)&enum case for LayoutDirection.rightToLeft(_:);
  v81 = v108;
  if ((v113 & 1) == 0)
    v80 = (unsigned int *)&enum case for LayoutDirection.leftToRight(_:);
  v82 = v109;
  v83 = v111;
  (*(void (**)(char *, _QWORD, uint64_t))(v108 + 104))(v109, *v80, v111);
  v84 = (uint64_t)v106;
  sub_100667A20((uint64_t)&v106[*(int *)(v107 + 20)]);
  (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v84, v82, v83);
  v85 = v110;
  sub_10002C960(v84, v110, type metadata accessor for CenteringHStackLayout);
  v86 = v56;
  v87 = v115;
  sub_10002CD84(v85, v115, type metadata accessor for CenteringHStackLayout);
  v88 = v112;
  sub_10000B5E4(v87, v112, &qword_1009F2F10);
  v89 = v119;
  v90 = v86;
  v91 = v123;
  sub_10065C3A4(v76, v90, v116 & 1, v117 & 1, v118, v120, v123, v75, v119, a9, a8);
  sub_100010960(v87, &qword_1009F2F10);
  sub_100025B3C(v89, v88 + *(int *)(v114 + 44), &qword_1009F2F08);
  v92 = v88;
  v93 = (uint64_t)v121;
  sub_100025B3C(v92, (uint64_t)v121, &qword_1009F2F18);
  sub_10002C8F0(v85, type metadata accessor for CenteringHStackLayout);
  if (qword_1009CDDF0 != -1)
    swift_once(&qword_1009CDDF0, sub_1002CAE00);
  v94 = v79 != 1;
  v95 = (_DWORD)v124 != 1;
  v96 = qword_100A1E458;
  v97 = v122;
  sub_10000B5E4(v93, v122, &qword_1009F2F18);
  v98 = v97 + *(int *)(sub_10004CFD4(&qword_1009F2ED8) + 36);
  *(_QWORD *)v98 = v96;
  *(_BYTE *)(v98 + 8) = v95;
  *(_BYTE *)(v98 + 9) = v94;
  *(_BYTE *)(v98 + 10) = v75;
  swift_retain(v96);
  sub_100010960(v93, &qword_1009F2F18);
  sub_100010960(v91, &qword_1009DD048);
  return sub_100010960(v76, &qword_1009DD048);
}

_QWORD *sub_10065C2A0@<X0>(_BYTE *a1@<X8>)
{
  return sub_10065D1F8((uint64_t (*)(void))sub_1002C9DD4, (uint64_t)&type metadata for BooksAccessibilityHiddenKey, a1);
}

uint64_t sub_10065C2B4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10065D260(a1, a2, a3, a4, (uint64_t (*)(void))sub_1002C9DD4, (uint64_t)&type metadata for BooksAccessibilityHiddenKey);
}

_QWORD *sub_10065C2C8@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  char v4;
  uint64_t v5;
  char v6;

  v2 = sub_1004509CC();
  result = EnvironmentValues.subscript.getter(&v5, &type metadata for InfoBarAvailableWidthKey, &type metadata for InfoBarAvailableWidthKey, v2);
  v4 = v6;
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_10065C31C(uint64_t *a1)
{
  char v1;
  unint64_t v2;
  uint64_t v4;
  char v5;

  v1 = *((_BYTE *)a1 + 8);
  v4 = *a1;
  v5 = v1;
  v2 = sub_1004509CC();
  return EnvironmentValues.subscript.setter(&v4, &type metadata for InfoBarAvailableWidthKey, &type metadata for InfoBarAvailableWidthKey, v2);
}

BOOL sub_10065C36C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a1[1] ^ a2[1] | a2[2] ^ a1[2]) & 1) == 0;
}

_QWORD *sub_10065C3A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  _QWORD v50[38];
  _QWORD v51[2];
  char v52;
  uint64_t v53;
  _QWORD v54[25];
  __int128 v55;
  _OWORD v56[13];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  double v85;
  _OWORD v86[14];
  double v87;

  v49 = a8;
  v48 = a7;
  v46 = a6;
  v44 = a5 & 1;
  v45 = a4;
  v17 = sub_10004CFD4(&qword_1009F2F20);
  __chkstk_darwin(v17);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_10004CFD4(&qword_1009F2F28);
  __chkstk_darwin(v20);
  v47 = (uint64_t)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v44 - v23;
  v26 = static VerticalAlignment.center.getter(v25);
  sub_10065C7C8(a1, a2, a3, (uint64_t)v51);
  sub_100025B3C((uint64_t)v51, (uint64_t)v54, &qword_1009F2F30);
  v55 = (unint64_t)v26;
  LOBYTE(v56[0]) = 0;
  v27 = sub_100025B3C((uint64_t)v54, (uint64_t)v56 + 8, &qword_1009F2F30);
  v67 = v56[9];
  v68 = v56[10];
  v69 = v56[11];
  v70 = v56[12];
  v63 = v56[5];
  v64 = v56[6];
  v65 = v56[7];
  v66 = v56[8];
  v59 = v56[1];
  v60 = v56[2];
  v61 = v56[3];
  v62 = v56[4];
  v57 = v55;
  v58 = v56[0];
  *(_QWORD *)v19 = static VerticalAlignment.center.getter(v27);
  *((_QWORD *)v19 + 1) = 0;
  v19[16] = 0;
  v28 = sub_10004CFD4(&qword_1009F2F38);
  sub_10065CDD8(v45, a2, v44, (uint64_t)&v19[*(int *)(v28 + 44)], a11);
  KeyPath = swift_getKeyPath(&unk_100736F80);
  v30 = (uint64_t *)&v24[*(int *)(v20 + 36)];
  v31 = (char *)v30 + *(int *)(sub_10004CFD4(&qword_1009D1250) + 28);
  v32 = type metadata accessor for LayoutDirection(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v31, v46, v32);
  *v30 = KeyPath;
  v33 = sub_100025B3C((uint64_t)v19, (uint64_t)v24, &qword_1009F2F20);
  v51[0] = static VerticalAlignment.center.getter(v33);
  v51[1] = 0x4030000000000000;
  v52 = 0;
  sub_10065D2A8(a3, v48, a2, v49, (uint64_t)&v53);
  sub_10000B5E4((uint64_t)v51, (uint64_t)v50, &qword_1009F2F40);
  *(double *)&v50[37] = a10;
  sub_100010960((uint64_t)v51, &qword_1009F2F40);
  sub_100025B3C((uint64_t)v50, (uint64_t)v51, &qword_1009F2F48);
  v34 = v47;
  sub_10000B5E4((uint64_t)v24, v47, &qword_1009F2F28);
  sub_10000B5E4((uint64_t)v51, (uint64_t)v50, &qword_1009F2F48);
  v81 = v67;
  v82 = v68;
  v83 = v69;
  v84 = v70;
  v77 = v63;
  v78 = v64;
  v79 = v65;
  v80 = v66;
  v73 = v59;
  v74 = v60;
  v75 = v61;
  v76 = v62;
  v71 = v57;
  v72 = v58;
  v85 = a10;
  v35 = v70;
  *(_OWORD *)(a9 + 192) = v69;
  *(_OWORD *)(a9 + 208) = v35;
  v36 = v80;
  *(_OWORD *)(a9 + 128) = v79;
  *(_OWORD *)(a9 + 144) = v36;
  v37 = v82;
  *(_OWORD *)(a9 + 160) = v81;
  *(_OWORD *)(a9 + 176) = v37;
  v38 = v76;
  *(_OWORD *)(a9 + 64) = v75;
  *(_OWORD *)(a9 + 80) = v38;
  v39 = v78;
  *(_OWORD *)(a9 + 96) = v77;
  *(_OWORD *)(a9 + 112) = v39;
  v40 = v72;
  *(_OWORD *)a9 = v71;
  *(_OWORD *)(a9 + 16) = v40;
  v41 = v74;
  *(_OWORD *)(a9 + 32) = v73;
  *(_OWORD *)(a9 + 48) = v41;
  *(double *)(a9 + 224) = v85;
  v42 = sub_10004CFD4(&qword_1009F2F50);
  sub_10000B5E4(v34, a9 + *(int *)(v42 + 48), &qword_1009F2F28);
  sub_10000B5E4((uint64_t)v50, a9 + *(int *)(v42 + 64), &qword_1009F2F48);
  sub_100661BFC(&v71, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100661A70);
  sub_100661B00(v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100661A70);
  sub_100010960((uint64_t)v51, &qword_1009F2F48);
  sub_100010960((uint64_t)v24, &qword_1009F2F28);
  sub_100661B00(v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100661B6C);
  sub_100010960((uint64_t)v50, &qword_1009F2F48);
  sub_100010960(v34, &qword_1009F2F28);
  v86[10] = v67;
  v86[11] = v68;
  v86[12] = v69;
  v86[13] = v70;
  v86[6] = v63;
  v86[7] = v64;
  v86[8] = v65;
  v86[9] = v66;
  v86[2] = v59;
  v86[3] = v60;
  v86[4] = v61;
  v86[5] = v62;
  v86[0] = v57;
  v86[1] = v58;
  v87 = a10;
  return sub_100661BFC(v86, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100661B6C);
}

uint64_t sub_10065C7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  char v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  unsigned __int8 v84;
  unsigned __int8 v85;
  char v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  _QWORD v96[3];
  char v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t (*v103)();
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD v112[8];
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unsigned __int8 v123;
  uint64_t v124;
  unsigned __int8 v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD v128[26];

  LODWORD(v70) = a3;
  v71 = a2;
  v72 = a4;
  v5 = type metadata accessor for RERootContainerView(0);
  v68 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v68 + 64);
  __chkstk_darwin(v5);
  v69 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009DD048);
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for HistoryModel.Entry(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v67 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (uint64_t *)((char *)&v58 - v14);
  sub_10000B5E4(a1, (uint64_t)v9, &qword_1009DD048);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_100010960((uint64_t)v9, &qword_1009DD048);
    sub_100662158((uint64_t)v112);
  }
  else
  {
    sub_10002C960((uint64_t)v9, (uint64_t)v15, type metadata accessor for HistoryModel.Entry);
    v63 = *(int *)(v5 + 56);
    v16 = v71;
    v17 = *(_QWORD *)(v71 + v63);
    KeyPath = swift_getKeyPath(&unk_100737338);
    v128[0] = v17;
    v62 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(v128, KeyPath, v62);
    swift_release(KeyPath);
    v19 = v17 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
    swift_beginAccess(v17 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, &v111, 0, 0);
    v61 = *(unsigned __int8 *)(v19 + *(int *)(type metadata accessor for BookReaderChromeState(0) + 36));
    v20 = v15[1];
    v65 = *v15;
    v21 = v16;
    v22 = v69;
    sub_10002CD84(v21, v69, type metadata accessor for RERootContainerView);
    v66 = v15;
    v23 = (uint64_t)v15;
    v24 = v67;
    sub_10002CD84(v23, v67, type metadata accessor for HistoryModel.Entry);
    v25 = *(unsigned __int8 *)(v68 + 80);
    v26 = (v25 + 16) & ~v25;
    v27 = *(unsigned __int8 *)(v11 + 80);
    v28 = (v6 + v27 + v26) & ~v27;
    v29 = swift_allocObject(&unk_10091A328, v28 + v12, v25 | v27 | 7);
    sub_10002C960(v22, v29 + v26, type metadata accessor for RERootContainerView);
    sub_10002C960(v24, v29 + v28, type metadata accessor for HistoryModel.Entry);
    v30 = type metadata accessor for ChromeStyle(0);
    v31 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v69 = v20;
    swift_bridgeObjectRetain(v20);
    EnvironmentObject.init()(v30, v31);
    v64 = v32;
    v68 = v33;
    v67 = swift_getKeyPath(&unk_1007370D8);
    v34 = swift_getKeyPath(&unk_100737310);
    type metadata accessor for CGSize(0);
    v112[0] = 0uLL;
    State.init(wrappedValue:)(v128, v112, v35);
    v36 = v128[0];
    v37 = v128[1];
    v38 = v128[2];
    v39 = 0;
    if (v61)
      v40 = 1.0;
    else
      v40 = 0.0;
    v41 = *(_QWORD *)(v71 + v63);
    v42 = swift_getKeyPath(&unk_1007373D0);
    v128[0] = v41;
    ObservationRegistrar.access<A, B>(_:keyPath:)(v128, v42, v62);
    swift_release(v42);
    v43 = *(_QWORD *)(v41 + OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor);
    if ((v70 & 1) != 0)
    {
      v44 = qword_1009CE8D8;
      swift_retain(v43);
      if (v44 != -1)
        v45 = swift_once(&qword_1009CE8D8, sub_1005A9D10);
      v46 = 0;
      v39 = qword_100A1ECE0;
    }
    else
    {
      swift_retain(*(_QWORD *)(v41 + OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor));
      v46 = 0x4030000000000000;
    }
    v74 = 0;
    v73 = 0;
    v47 = static Alignment.center.getter(v45);
    _FrameLayout.init(width:height:alignment:)(&v122, v46, 0, 0, 1, v47, v48);
    v70 = v124;
    v71 = v122;
    v62 = v127;
    v63 = v126;
    v49 = v74;
    v59 = v73;
    v50 = v65;
    v52 = v67;
    v51 = v68;
    *(_QWORD *)&v75 = v64;
    *((_QWORD *)&v75 + 1) = v68;
    *(_QWORD *)&v76 = v67;
    BYTE8(v76) = v74;
    v53 = v34;
    *(_QWORD *)&v77 = v34;
    BYTE8(v77) = v73;
    v54 = v69;
    *(_QWORD *)&v78 = v65;
    *((_QWORD *)&v78 + 1) = v69;
    LOBYTE(v79) = 1;
    *((_QWORD *)&v79 + 1) = sub_100661F58;
    *(_QWORD *)&v80 = v29;
    *((_QWORD *)&v80 + 1) = v36;
    *(_QWORD *)&v81 = v37;
    *((_QWORD *)&v81 + 1) = v38;
    *(double *)&v82 = v40;
    v58 = v38;
    v55 = v43;
    *((_QWORD *)&v82 + 1) = v43;
    v83 = v39;
    v89 = v77;
    v90 = v78;
    v87 = v75;
    v88 = v76;
    v95 = v39;
    v93 = v81;
    v94 = v82;
    v91 = v79;
    v92 = v80;
    v86 = 1;
    v85 = v123;
    v84 = v125;
    v56 = v64;
    v60 = v123;
    v61 = v125;
    sub_10066258C((uint64_t)&v75);
    sub_10002C8F0((uint64_t)v66, type metadata accessor for HistoryModel.Entry);
    v96[0] = v56;
    v96[1] = v51;
    v96[2] = v52;
    v97 = v49;
    v98 = v53;
    v99 = v59;
    v100 = v50;
    v101 = v54;
    v102 = 1;
    v103 = sub_100661F58;
    v104 = v29;
    v105 = v36;
    v106 = v37;
    v107 = v58;
    v108 = v40;
    v109 = v55;
    v110 = v39;
    sub_10066262C((uint64_t)v96);
    v112[6] = v93;
    v112[7] = v94;
    v112[2] = v89;
    v112[3] = v90;
    v112[4] = v91;
    v112[5] = v92;
    v112[0] = v87;
    v112[1] = v88;
    v113 = v95;
    v114 = 0;
    v115 = 1;
    v116 = v71;
    v117 = v60;
    v118 = v70;
    v119 = v61;
    v120 = v63;
    v121 = v62;
    BKAppDelegate.enableMetricsInspectorOnDebugMode()();
  }
  sub_100025B3C((uint64_t)v112, (uint64_t)v128, &qword_1009F2F30);
  return sub_100025B3C((uint64_t)v128, v72, &qword_1009F2F30);
}

uint64_t sub_10065CDD8@<X0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  void (*v46)(_BYTE *, _BYTE *, uint64_t);
  __n128 v47;
  void (*v48)(_BYTE *, uint64_t, __n128);
  uint64_t v49;
  uint64_t v50;
  _BYTE v52[12];
  int v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[3];
  __int16 v60;
  uint64_t KeyPath;
  char v62;
  uint64_t v63;
  char v64;
  _BYTE v65[32];
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[19];
  char v73;

  v10 = sub_10004CFD4(&qword_1009F2FA8);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = &v52[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  v16 = &v52[-v15];
  v17 = sub_10004CFD4(&qword_1009F2FB0);
  v20 = __chkstk_darwin(v17);
  v22 = &v52[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, double))(v19 + 56))(a4, 1, 1, v20);
  v54 = v16;
  v55 = v11;
  v56 = v19;
  v57 = v18;
  v58 = a4;
  v53 = a3 & 1;
  v23 = type metadata accessor for RERootContainerView(0);
  v24 = *(_QWORD *)(a2 + *(int *)(v23 + 76));
  v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + *(int *)(v23 + 56)) + 168) + 16);
  v72[3] = type metadata accessor for InfoBarPresenter();
  v72[4] = &off_1008F8068;
  v72[0] = v25;
  v26 = *(_QWORD *)(v25 + 48);
  v27 = type metadata accessor for ChromeStyle(0);
  v28 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  swift_retain(v25);
  swift_retain(v26);
  EnvironmentObject.init()(v27, v28);
  v59[0] = v29;
  v59[1] = v30;
  v59[2] = swift_getKeyPath(&unk_1007372E8);
  v60 = 0;
  KeyPath = swift_getKeyPath(&unk_100737420);
  v62 = 0;
  v63 = swift_getKeyPath(&unk_1007370D8);
  v64 = 0;
  memset(v65, 0, sizeof(v65));
  v66 = 0;
  sub_100661FD8((uint64_t)v72, (uint64_t)v65);
  v31 = type metadata accessor for InfoBarViewModel(0);
  v32 = sub_100008DB0(&qword_1009E4218, type metadata accessor for InfoBarViewModel, (uint64_t)&unk_100724CA4);
  swift_retain(v26);
  v68 = ObservedObject.init(wrappedValue:)(v33, v31, v32);
  v69 = v34;
  v67 = (v24 & 0x20) != 0;
  if ((v24 & 0x20) != 0)
  {
    v35 = sub_1004436C8();
    swift_release(v26);
    v26 = v35;
  }
  sub_100010960((uint64_t)v72, &qword_1009F2FB8);
  v70 = v26;
  v71 = 0;
  v36 = swift_getKeyPath(&unk_100737420);
  sub_100662020((uint64_t)v59, (uint64_t)v72);
  v72[18] = v36;
  v73 = v53;
  sub_10066205C((uint64_t)v59);
  if (qword_1009CE5D8 != -1)
    swift_once(&qword_1009CE5D8, sub_1004790DC);
  v37 = sub_10004CFD4(&qword_1009D1C80);
  v38 = sub_100048F64(v37, (uint64_t)qword_100A1E9C0);
  v39 = sub_10004CFD4(&qword_1009F2FC0);
  v40 = sub_100662090();
  v41 = sub_100030B34(&qword_1009D1CC8, &qword_1009D1C80, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
  View.dynamicTypeSize<A>(_:)(v38, v39, v37, v40, v41);
  v42 = sub_100010960((uint64_t)v72, &qword_1009F2FC0);
  v43 = static Color.clear.getter(v42);
  v45 = v54;
  v44 = v55;
  v46 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v55 + 16);
  v46(v54, v13, v10);
  v47 = swift_release(v43);
  v48 = *(void (**)(_BYTE *, uint64_t, __n128))(v44 + 8);
  v48(v13, v10, v47);
  v46(v22, v45, v10);
  v49 = v57;
  *(double *)&v22[*(int *)(v57 + 36)] = a5;
  ((void (*)(_BYTE *, uint64_t))v48)(v45, v10);
  v50 = v58;
  sub_100025B3C((uint64_t)v22, v58, &qword_1009F2FB0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v50, 0, 1, v49);
}

_QWORD *sub_10065D1E4@<X0>(_BYTE *a1@<X8>)
{
  return sub_10065D1F8((uint64_t (*)(void))sub_100450A48, (uint64_t)&type metadata for InfoBarView.ModeKey, a1);
}

_QWORD *sub_10065D1F8@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X4>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  _QWORD *result;
  uint64_t v7;

  v5 = a1();
  result = EnvironmentValues.subscript.getter(&v7, a2, a2, v5);
  *a3 = v7;
  return result;
}

uint64_t sub_10065D24C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10065D260(a1, a2, a3, a4, (uint64_t (*)(void))sub_100450A48, (uint64_t)&type metadata for InfoBarView.ModeKey);
}

uint64_t sub_10065D260(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6)
{
  uint64_t v7;
  char v9;

  v9 = *a1;
  v7 = a5();
  return EnvironmentValues.subscript.setter(&v9, a6, a6, v7);
}

uint64_t sub_10065D2A8@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  uint64_t v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t Strong;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  _BYTE v112[72];
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  _OWORD v120[2];
  _BYTE v121[64];
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  _OWORD v130[2];
  __int128 v131;
  __int128 v132;
  _OWORD v133[2];
  __int128 v134;
  _BYTE v135[32];
  double v136[4];
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  _OWORD v144[2];
  uint64_t v145;
  unsigned __int8 v146;
  uint64_t v147;
  unsigned __int8 v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  char v154;
  __int128 v155;

  v102 = a4;
  v110 = a3;
  v100 = a2;
  v103 = type metadata accessor for RERootContainerView(0);
  v99 = *(_QWORD *)(v103 - 8);
  v7 = *(_QWORD *)(v99 + 64);
  __chkstk_darwin(v103);
  v97 = type metadata accessor for BookReaderChromeState(0);
  __chkstk_darwin(v97);
  v9 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009DD048);
  __chkstk_darwin(v10);
  v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for HistoryModel.Entry(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v98 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v101 = (uint64_t *)((char *)&v93 - v18);
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v111 = a1;
  if ((a1 & 1) != 0)
  {
    v25 = static Alignment.center.getter(v17);
    _FrameLayout.init(width:height:alignment:)(&v145, 0, 0, 0, 1, v25, v26);
    v19 = v145;
    v20 = v146;
    v21 = v147;
    v22 = v148;
    v23 = v149;
    v24 = v150;
  }
  v104 = v24;
  v105 = v23;
  v106 = v22;
  v107 = v21;
  v108 = v20;
  v109 = v19;
  sub_10000B5E4(v100, (uint64_t)v12, &qword_1009DD048);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
  {
    v93 = (uint64_t)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v35 = v101;
    sub_10002C960((uint64_t)v12, (uint64_t)v101, type metadata accessor for HistoryModel.Entry);
    v96 = *(int *)(v103 + 56);
    v36 = *(_QWORD *)(v110 + v96);
    v100 = v7;
    v37 = v110;
    KeyPath = swift_getKeyPath(&unk_100737338);
    *(_QWORD *)&v137 = v36;
    v95 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v137, KeyPath, v95);
    swift_release(KeyPath);
    v39 = v36 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState;
    swift_beginAccess(v36 + OBJC_IVAR____TtC5Books19BookReaderViewModel__chromeState, &v151, 0, 0);
    sub_10002CD84(v39, (uint64_t)v9, type metadata accessor for BookReaderChromeState);
    v94 = v9[*(int *)(v97 + 36)];
    sub_10002C8F0((uint64_t)v9, type metadata accessor for BookReaderChromeState);
    v40 = v35[1];
    v97 = *v35;
    v41 = v93;
    sub_10002CD84(v37, v93, type metadata accessor for RERootContainerView);
    v42 = (uint64_t)v35;
    v43 = v98;
    sub_10002CD84(v42, v98, type metadata accessor for HistoryModel.Entry);
    v44 = *(unsigned __int8 *)(v99 + 80);
    v45 = (v44 + 16) & ~v44;
    v46 = *(unsigned __int8 *)(v14 + 80);
    v47 = (v100 + v46 + v45) & ~v46;
    v48 = swift_allocObject(&unk_10091A300, v47 + v15, v44 | v46 | 7);
    sub_10002C960(v41, v48 + v45, type metadata accessor for RERootContainerView);
    v99 = v48;
    sub_10002C960(v43, v48 + v47, type metadata accessor for HistoryModel.Entry);
    v49 = type metadata accessor for ChromeStyle(0);
    v50 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
    v100 = v40;
    swift_bridgeObjectRetain(v40);
    EnvironmentObject.init()(v49, v50);
    v52 = v51;
    v54 = v53;
    v55 = swift_getKeyPath(&unk_1007370D8);
    v56 = swift_getKeyPath(&unk_100737310);
    type metadata accessor for CGSize(0);
    v131 = 0uLL;
    State.init(wrappedValue:)(&v137, &v131, v57);
    v58 = v137;
    v59 = v138;
    v60 = 0;
    if (v94)
      v61 = 1.0;
    else
      v61 = 0.0;
    v62 = *(_QWORD *)(v110 + v96);
    v63 = swift_getKeyPath(&unk_1007373D0);
    *(_QWORD *)&v137 = v62;
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v137, v63, v95);
    swift_release(v63);
    v64 = *(double *)(v62 + OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor);
    if ((v111 & 1) != 0)
    {
      swift_retain(*(_QWORD *)(v62 + OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor));
    }
    else
    {
      v65 = qword_1009CE8D8;
      swift_retain(*(_QWORD *)&v64);
      if (v65 != -1)
        swift_once(&qword_1009CE8D8, sub_1005A9D10);
      v60 = qword_100A1ECE0;
    }
    LOBYTE(v113) = 0;
    v121[0] = 0;
    *(_QWORD *)&v131 = v52;
    *((_QWORD *)&v131 + 1) = v54;
    *(_QWORD *)&v132 = v55;
    BYTE8(v132) = 0;
    *(_QWORD *)&v133[0] = v56;
    BYTE8(v133[0]) = 0;
    *(_QWORD *)&v133[1] = v97;
    *((_QWORD *)&v133[1] + 1) = v100;
    LOBYTE(v134) = 0;
    *((_QWORD *)&v134 + 1) = sub_100661F58;
    *(_QWORD *)v135 = v99;
    *(_OWORD *)&v135[8] = v58;
    *(_QWORD *)&v135[24] = v59;
    v136[0] = v61;
    v136[1] = v64;
    *(_QWORD *)&v136[2] = v60;
    sub_100661F64((uint64_t)&v131);
    sub_100025B3C((uint64_t)&v131, (uint64_t)&v137, &qword_1009F2F58);
    v66 = sub_10004CFD4(&qword_1009F2F60);
    v67 = sub_10004CFD4(&qword_1009F2F68);
    v68 = sub_10028156C(&qword_1009F2F70, &qword_1009F2F60, (void (*)(void))sub_100661C84, (void (*)(void))sub_100661CEC);
    v69 = sub_100661D30();
    _ConditionalContent<>.init(storage:)(&v137, v66, v67, v68, v69);
    sub_10002C8F0((uint64_t)v101, type metadata accessor for HistoryModel.Entry);
    v142 = v128;
    v143 = v129;
    v144[0] = v130[0];
    *(_OWORD *)((char *)v144 + 9) = *(_OWORD *)((char *)v130 + 9);
    v139 = v125;
    v140 = v126;
    v141 = v127;
    v137 = v123;
    v138 = v124;
    if ((v102 & 1) == 0)
      goto LABEL_5;
LABEL_15:
    v70 = v103;
    v71 = v110;
    v72 = *(_QWORD *)(v110 + *(int *)(v103 + 56));
    v73 = swift_getKeyPath(&unk_1007373A8);
    *(_QWORD *)&v131 = v72;
    v74 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    swift_retain(v72);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v131, v73, v74);
    swift_release(v73);
    Strong = swift_unknownObjectWeakLoadStrong(v72 + 144);
    v76 = *(_QWORD *)(v72 + 152);
    v77 = *(_QWORD *)(v71 + *(int *)(v70 + 48));
    v78 = *(_QWORD *)(v77 + 16);
    v79 = *(_QWORD *)(v77 + 24);
    v80 = v71 + *(int *)(v70 + 72);
    v81 = swift_unknownObjectWeakLoadStrong(v80);
    v82 = *(_QWORD *)(v80 + 8);
    *(_QWORD *)&v131 = swift_getKeyPath(&unk_100737310);
    BYTE8(v131) = 0;
    *(_QWORD *)&v132 = v72;
    *(_QWORD *)&v133[0] = v76;
    swift_unknownObjectWeakInit((char *)&v132 + 8);
    swift_unknownObjectRetain(v78);
    swift_unknownObjectRelease(Strong);
    *(_QWORD *)&v133[1] = v79;
    swift_unknownObjectWeakInit((char *)v133 + 8);
    swift_unknownObjectRelease(v78);
    *(_QWORD *)&v134 = v82;
    swift_unknownObjectWeakInit((char *)&v133[1] + 8);
    swift_unknownObjectRelease(v81);
    sub_100661F20((uint64_t)&v131, (uint64_t)v121);
    goto LABEL_16;
  }
  v27 = sub_100010960((uint64_t)v12, &qword_1009DD048);
  v28 = static Color.clear.getter(v27);
  v29 = static Alignment.center.getter(v28);
  _FrameLayout.init(width:height:alignment:)(&v151, 0, 0, 0, 1, v29, v30);
  *(_QWORD *)&v131 = v28;
  *((_QWORD *)&v131 + 1) = v151;
  LOBYTE(v132) = v152;
  *((_QWORD *)&v132 + 1) = v153;
  LOBYTE(v133[0]) = v154;
  *(_OWORD *)((char *)v133 + 8) = v155;
  sub_100661C78((uint64_t)&v131);
  sub_100025B3C((uint64_t)&v131, (uint64_t)&v123, &qword_1009F2F58);
  v31 = sub_10004CFD4(&qword_1009F2F60);
  v32 = sub_10004CFD4(&qword_1009F2F68);
  v33 = sub_10028156C(&qword_1009F2F70, &qword_1009F2F60, (void (*)(void))sub_100661C84, (void (*)(void))sub_100661CEC);
  v34 = sub_100661D30();
  _ConditionalContent<>.init(storage:)(&v123, v31, v32, v33, v34);
  if ((v102 & 1) != 0)
    goto LABEL_15;
LABEL_5:
  v122 = 0;
  memset(v121, 0, sizeof(v121));
LABEL_16:
  v119 = v143;
  v120[0] = v144[0];
  *(_OWORD *)((char *)v120 + 9) = *(_OWORD *)((char *)v144 + 9);
  v115 = v139;
  v116 = v140;
  v117 = v141;
  v118 = v142;
  v113 = v137;
  v114 = v138;
  sub_10000B5E4((uint64_t)v121, (uint64_t)v112, &qword_1009F2FA0);
  v83 = v119;
  v129 = v119;
  v130[0] = v120[0];
  *(_OWORD *)((char *)v130 + 9) = *(_OWORD *)((char *)v120 + 9);
  v84 = v115;
  v85 = v116;
  v125 = v115;
  v126 = v116;
  v86 = v117;
  v127 = v117;
  v128 = v118;
  v88 = v113;
  v87 = v114;
  v123 = v113;
  v124 = v114;
  *(_OWORD *)(a5 + 136) = v118;
  *(_OWORD *)(a5 + 152) = v83;
  *(_OWORD *)(a5 + 168) = v120[0];
  *(_OWORD *)(a5 + 177) = *(_OWORD *)((char *)v120 + 9);
  *(_OWORD *)(a5 + 72) = v87;
  *(_OWORD *)(a5 + 88) = v84;
  *(_OWORD *)(a5 + 104) = v85;
  *(_OWORD *)(a5 + 120) = v86;
  v89 = v108;
  *(_QWORD *)a5 = v109;
  *(_QWORD *)(a5 + 8) = v89;
  v90 = v106;
  *(_QWORD *)(a5 + 16) = v107;
  *(_QWORD *)(a5 + 24) = v90;
  v91 = v104;
  *(_QWORD *)(a5 + 32) = v105;
  *(_QWORD *)(a5 + 40) = v91;
  *(_BYTE *)(a5 + 48) = (v111 & 1) == 0;
  *(_OWORD *)(a5 + 56) = v88;
  sub_10000B5E4((uint64_t)v112, a5 + 200, &qword_1009F2FA0);
  sub_100661E24((uint64_t)&v123, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100661D94);
  sub_100010960((uint64_t)v121, &qword_1009F2FA0);
  sub_100010960((uint64_t)v112, &qword_1009F2FA0);
  *(_OWORD *)v135 = v118;
  *(_OWORD *)&v135[16] = v119;
  *(_OWORD *)v136 = v120[0];
  *(_OWORD *)((char *)&v136[1] + 1) = *(_OWORD *)((char *)v120 + 9);
  v133[0] = v115;
  v133[1] = v116;
  v134 = v117;
  v131 = v113;
  v132 = v114;
  return sub_100661E24((uint64_t)&v131, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_100661E88);
}

uint64_t sub_10065DC4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t KeyPath;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55[2];
  uint64_t v56;
  __int16 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;

  v2 = v1;
  v53 = a1;
  v49 = sub_10004CFD4(&qword_1009F3008);
  __chkstk_darwin(v49);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v7 = (char *)&v48 - v6;
  v8 = sub_10004CFD4(&qword_1009F3010);
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_10004CFD4(&qword_1009F3018);
  __chkstk_darwin(v50);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
  v14 = *(_QWORD *)(v2 + 32);
  sub_100662B98(v2, (uint64_t)v55);
  v15 = swift_allocObject(&unk_10091A468, 88, 7);
  sub_100661F20((uint64_t)v55, v15 + 16);
  v16 = type metadata accessor for ChromeStyle(0);
  v17 = sub_100008DB0((unint64_t *)&qword_1009D8330, type metadata accessor for ChromeStyle, (uint64_t)&protocol conformance descriptor for ChromeStyle);
  EnvironmentObject.init()(v16, v17);
  v19 = v18;
  v21 = v20;
  KeyPath = swift_getKeyPath(&unk_100737310);
  v55[0] = v19;
  v55[1] = v21;
  v56 = KeyPath;
  v57 = 0;
  v58 = Strong;
  v59 = v14;
  v60 = sub_100662C14;
  v61 = v15;
  v23 = *(_QWORD *)v2;
  LOBYTE(Strong) = *(_BYTE *)(v2 + 8);
  sub_1001F2508(*(_QWORD *)v2, Strong);
  LOBYTE(v21) = sub_100667C14(v23, Strong);
  sub_1001F2564(v23, Strong);
  if ((v21 & 1) != 0)
  {
    v24 = 0;
    v25 = 0xE000000000000000;
  }
  else
  {
    v26 = *(_QWORD *)(v2 + 16);
    v27 = swift_getKeyPath(&unk_1007374F8);
    v54 = v26;
    v28 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v54, v27, v28);
    swift_release(v27);
    if (*(_BYTE *)(v26 + OBJC_IVAR____TtC5Books19BookReaderViewModel__isScrollMode))
      v24 = 0xD00000000000001ALL;
    else
      v24 = 0xD000000000000015;
    if (*(_BYTE *)(v26 + OBJC_IVAR____TtC5Books19BookReaderViewModel__isScrollMode))
      v25 = 0x80000001007DB1E0;
    else
      v25 = 0x80000001007DB1C0;
  }
  v29 = sub_100487ADC();
  View.accessibilityIdentifier(_:)(v24, v25, &type metadata for CloseButton, v29);
  swift_bridgeObjectRelease(v25);

  sub_1001F2564(v56, v57);
  swift_unknownObjectRelease(v58);
  swift_release(v61);
  v30 = *(_QWORD *)v2;
  v31 = *(_BYTE *)(v2 + 8);
  sub_1001F2508(*(_QWORD *)v2, v31);
  v32 = sub_100667C14(v30, v31);
  sub_1001F2564(v30, v31);
  v33 = v49;
  ModifiedContent<>.accessibilityHidden(_:)(v32 & 1, v49);
  sub_100010960((uint64_t)v4, &qword_1009F3008);
  if (qword_1009CE5D8 != -1)
    swift_once(&qword_1009CE5D8, sub_1004790DC);
  v34 = sub_10004CFD4(&qword_1009D1C80);
  v35 = sub_100048F64(v34, (uint64_t)qword_100A1E9C0);
  v36 = sub_100662C24();
  v37 = sub_100030B34(&qword_1009D1CC8, &qword_1009D1C80, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
  View.dynamicTypeSize<A>(_:)(v35, v33, v34, v36, v37);
  sub_100010960((uint64_t)v7, &qword_1009F3008);
  v38 = *(char **)(v2 + 16);
  v39 = swift_getKeyPath(&unk_1007373D0);
  v55[0] = v38;
  v40 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v55, v39, v40);
  swift_release(v39);
  v41 = *(_QWORD *)&v38[OBJC_IVAR____TtC5Books19BookReaderViewModel__horizontalFadeColor];
  v42 = qword_1009CE8D8;
  swift_retain(v41);
  if (v42 != -1)
    swift_once(&qword_1009CE8D8, sub_1005A9D10);
  v43 = qword_100A1ECE0;
  v45 = v51;
  v44 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v12, v10, v52);
  v46 = &v12[*(int *)(v50 + 36)];
  *(_QWORD *)v46 = v41;
  *((_QWORD *)v46 + 1) = v43;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v44);
  return sub_100025B3C((uint64_t)v12, v53, &qword_1009F3018);
}

uint64_t sub_10065E11C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  result = swift_unknownObjectWeakLoadStrong(a1 + 40);
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(a1 + 48);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    return swift_unknownObjectRelease(v3);
  }
  return result;
}

void sub_10065E170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD v15[5];
  uint64_t v16;

  v4 = type metadata accessor for RERootContainerView(0);
  v5 = *(_QWORD *)(a1 + *(int *)(v4 + 48));
  KeyPath = swift_getKeyPath(&unk_1007373F8);
  v16 = v5;
  v7 = sub_100008DB0(&qword_1009D3B60, type metadata accessor for REActionMenuState, (uint64_t)&protocol conformance descriptor for REActionMenuState);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v16, KeyPath, v7);
  swift_release(KeyPath);
  if ((*(_BYTE *)(v5 + 281) & 1) == 0)
  {
    v9.n128_f64[0] = __chkstk_darwin(v8);
    v15[2] = a1;
    v10 = static Animation.default.getter(v9);
    if (UIAccessibilityIsReduceMotionEnabled())
      REActionMenuState.transition(to:)(0x8000000000000000);
    else
      withAnimation<A>(_:_:)(v10, sub_100661F74, v15, (char *)&type metadata for () + 8);
    swift_release(v10);
  }
  Strong = swift_unknownObjectWeakLoadStrong(a1 + *(int *)(v4 + 72));
  if (Strong)
  {
    v12 = Strong;
    v13 = a2 + *(int *)(type metadata accessor for HistoryModel.Entry(0) + 20);
    v14 = *(id *)(*(_QWORD *)(v12 + OBJC_IVAR____TtC5Books19BookReaderPresenter_interactor) + 168);
    sub_10062D864(v13);
    swift_unknownObjectRelease(v12);

  }
}

uint64_t sub_10065E2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[3];

  v36 = a2;
  v4 = sub_10004CFD4(&qword_1009F2E80);
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009F2E70);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009F2E60);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_10065A678(1, a1, (uint64_t)v6);
  LOBYTE(a1) = static Edge.Set.top.getter(v13);
  v14 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for RERootContainerView(0) + 56));
  KeyPath = swift_getKeyPath(&unk_100737270);
  *(_QWORD *)&v37[0] = v14;
  v16 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(v37, KeyPath, v16);
  swift_release(KeyPath);
  v17 = EdgeInsets.init(_all:)(*(double *)(v14 + OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarTopMargin));
  v19 = v18;
  v21 = v20;
  v23 = v22;
  sub_10000B5E4((uint64_t)v6, (uint64_t)v9, &qword_1009F2E80);
  v24 = &v9[*(int *)(v7 + 36)];
  *v24 = a1;
  *((double *)v24 + 1) = v17;
  *((_QWORD *)v24 + 2) = v19;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = v23;
  v24[40] = 0;
  sub_100010960((uint64_t)v6, &qword_1009F2E80);
  if (qword_1009CE190 != -1)
    swift_once(&qword_1009CE190, sub_10035D268);
  v25 = qword_100A1E718;
  sub_10000B5E4((uint64_t)v9, (uint64_t)v12, &qword_1009F2E70);
  v26 = (uint64_t *)&v12[*(int *)(v10 + 36)];
  *v26 = v25;
  v26[1] = (uint64_t)sub_10065E5CC;
  v26[2] = 0;
  v27 = sub_100010960((uint64_t)v9, &qword_1009F2E70);
  if (qword_1009CDF10 != -1)
    v27 = swift_once(&qword_1009CDF10, sub_10033A828);
  v28 = qword_100A1E610;
  v29 = static Alignment.center.getter(v27);
  _FrameLayout.init(width:height:alignment:)(v37, 0, 1, v28, 0, v29, v30);
  v31 = v36;
  sub_10000B5E4((uint64_t)v12, v36, &qword_1009F2E60);
  v32 = (_OWORD *)(v31 + *(int *)(sub_10004CFD4(&qword_1009F2E38) + 36));
  v33 = v37[1];
  *v32 = v37[0];
  v32[1] = v33;
  v32[2] = v37[2];
  return sub_100010960((uint64_t)v12, &qword_1009F2E60);
}

uint64_t sub_10065E5CC()
{
  uint64_t v0;

  v0 = static VerticalAlignment.center.getter();
  return ViewDimensions.subscript.getter(v0);
}

uint64_t sub_10065E5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t KeyPath;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[3];

  v50 = a3;
  v5 = sub_10004CFD4(&qword_1009F2E80);
  __chkstk_darwin(v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_10004CFD4(&qword_1009F2FE8);
  __chkstk_darwin(v8);
  v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009F2FF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10065A678(0, a2, (uint64_t)v7);
  v16 = GeometryProxy.size.getter(v14);
  if (qword_1009CDF10 != -1)
    v15 = swift_once(&qword_1009CDF10, sub_10033A828);
  v17 = qword_100A1E610;
  v18 = static Alignment.center.getter(v15);
  _FrameLayout.init(width:height:alignment:)(v52, *(_QWORD *)&v16, 0, v17, 0, v18, v19);
  sub_10000B5E4((uint64_t)v7, (uint64_t)v10, &qword_1009F2E80);
  v20 = &v10[*(int *)(v8 + 36)];
  v21 = v52[1];
  *(_OWORD *)v20 = v52[0];
  *((_OWORD *)v20 + 1) = v21;
  *((_OWORD *)v20 + 2) = v52[2];
  v22 = sub_100010960((uint64_t)v7, &qword_1009F2E80);
  v23 = static Edge.Set.top.getter(v22);
  v24 = *(int *)(type metadata accessor for RERootContainerView(0) + 56);
  v25 = *(_QWORD *)(a1 + v24);
  KeyPath = swift_getKeyPath(&unk_100737270);
  v51 = v25;
  v27 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v51, KeyPath, v27);
  swift_release(KeyPath);
  v28 = EdgeInsets.init(_all:)(*(double *)(v25 + OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarTopMargin));
  v30 = v29;
  v32 = v31;
  v34 = v33;
  sub_10000B5E4((uint64_t)v10, (uint64_t)v13, &qword_1009F2FE8);
  v35 = &v13[*(int *)(v11 + 36)];
  *v35 = v23;
  *((double *)v35 + 1) = v28;
  *((_QWORD *)v35 + 2) = v30;
  *((_QWORD *)v35 + 3) = v32;
  *((_QWORD *)v35 + 4) = v34;
  v35[40] = 0;
  v36 = sub_100010960((uint64_t)v10, &qword_1009F2FE8);
  v37 = static Edge.Set.bottom.getter(v36);
  v38 = *(_QWORD *)(a1 + v24);
  v39 = swift_getKeyPath(&unk_100737248);
  v51 = v38;
  ObservationRegistrar.access<A, B>(_:keyPath:)(&v51, v39, v27);
  swift_release(v39);
  v40 = EdgeInsets.init(_all:)(*(double *)(v38 + OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarBottomMargin));
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v47 = v50;
  sub_10000B5E4((uint64_t)v13, v50, &qword_1009F2FF0);
  v48 = v47 + *(int *)(sub_10004CFD4(&qword_1009F2FF8) + 36);
  *(_BYTE *)v48 = v37;
  *(double *)(v48 + 8) = v40;
  *(_QWORD *)(v48 + 16) = v42;
  *(_QWORD *)(v48 + 24) = v44;
  *(_QWORD *)(v48 + 32) = v46;
  *(_BYTE *)(v48 + 40) = 0;
  return sub_100010960((uint64_t)v13, &qword_1009F2FF0);
}

void sub_10065E92C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unsigned __int8 v31;
  uint64_t KeyPath;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  unsigned __int8 v89;
  uint64_t v90;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;

  v80 = a2;
  v5 = sub_10004CFD4(&qword_1009F2E20);
  __chkstk_darwin(v5);
  v7 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_10004CFD4(&qword_1009F2E28);
  __chkstk_darwin(v85);
  v71 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v72 = (uint64_t)&v71 - v10;
  v82 = sub_10004CFD4(&qword_1009F2E30);
  __chkstk_darwin(v82);
  v12 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_10004CFD4(&qword_1009F2E38);
  __chkstk_darwin(v83);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009F2E40);
  __chkstk_darwin(v15);
  v86 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v19 = (char *)&v71 - v18;
  v20 = (int *)type metadata accessor for RERootContainerView(0);
  v21 = v20[14];
  v81 = a1;
  v22 = *(_QWORD **)(a1 + v21);
  v23 = v22[7];
  ObjectType = swift_getObjectType();
  v26 = (*(double (**)(uint64_t, uint64_t))(v23 + 8))(ObjectType, v23);
  if (v26 <= 0.0)
  {
    v84 = 0;
    v78 = 0;
    v79 = 0;
    v77 = 0;
    v76 = 0;
    v75 = 0;
    v74 = 0;
    v73 = 0;
    v34 = 0.0;
    v36 = 0;
    v38 = 0;
    v40 = 0;
  }
  else
  {
    v27 = v26;
    v84 = static Color.clear.getter(v25);
    v28 = static Alignment.center.getter(v84);
    v30 = _FrameLayout.init(width:height:alignment:)(&v88, 0, 1, *(_QWORD *)&v27, 0, v28, v29);
    v78 = v89;
    v79 = v88;
    v77 = v90;
    v76 = v91;
    v75 = v92;
    v74 = v93;
    v31 = static Edge.Set.bottom.getter(v30);
    KeyPath = swift_getKeyPath(&unk_100737248);
    v87 = v22;
    v33 = sub_100008DB0((unint64_t *)&qword_1009E4C90, type metadata accessor for BookReaderViewModel, (uint64_t)&unk_10072A198);
    ObservationRegistrar.access<A, B>(_:keyPath:)(&v87, KeyPath, v33);
    swift_release(KeyPath);
    v34 = EdgeInsets.init(_all:)(*(double *)((char *)v22
                                           + OBJC_IVAR____TtC5Books19BookReaderViewModel__infoBarBottomMargin));
    v36 = v35;
    v38 = v37;
    v40 = v39;
    v41 = static Color.purple.getter();
    swift_release(v41);
    v73 = v31;
  }
  v42 = v22[10];
  v43 = v22[11];
  v44 = swift_getObjectType();
  swift_unknownObjectRetain(v42);
  v45 = dispatch thunk of BookLayoutModeProviding.layoutMode.getter(v44, v43);
  swift_unknownObjectRelease(v42);
  if (v45 == 2)
  {
    sub_10065E2E4(v80, (uint64_t)v14);
    v47 = &qword_1009F2E38;
    sub_10000B5E4((uint64_t)v14, (uint64_t)v12, &qword_1009F2E38);
    swift_storeEnumTagMultiPayload(v12, v82, 0);
    v48 = sub_100661760();
    v49 = sub_1006618AC();
    _ConditionalContent<>.init(storage:)(v12, v83, v85, v48, v49);
    v50 = (uint64_t)v14;
  }
  else
  {
    *(_QWORD *)v7 = static HorizontalAlignment.center.getter(v46);
    *((_QWORD *)v7 + 1) = 0;
    v7[16] = 0;
    v51 = sub_10004CFD4(&qword_1009F2E48);
    v52 = v81;
    sub_10065E5F0(v81, v80, (uint64_t)&v7[*(int *)(v51 + 44)]);
    v53 = (uint64_t *)(v52 + v20[21]);
    v55 = *v53;
    v54 = v53[1];
    v56 = *(_QWORD *)(v52 + v20[19]);
    v57 = v71;
    sub_10000B5E4((uint64_t)v7, v71, &qword_1009F2E20);
    v58 = v85;
    v59 = (_QWORD *)(v57 + *(int *)(v85 + 36));
    *v59 = v55;
    v59[1] = v54;
    v59[2] = v56;
    swift_bridgeObjectRetain(v54);
    sub_100010960((uint64_t)v7, &qword_1009F2E20);
    v47 = &qword_1009F2E28;
    v60 = v72;
    sub_100025B3C(v57, v72, &qword_1009F2E28);
    sub_10000B5E4(v60, (uint64_t)v12, &qword_1009F2E28);
    swift_storeEnumTagMultiPayload(v12, v82, 1);
    v61 = sub_100661760();
    v62 = sub_1006618AC();
    _ConditionalContent<>.init(storage:)(v12, v83, v58, v61, v62);
    v50 = v60;
  }
  sub_100010960(v50, v47);
  v63 = v86;
  sub_10000B5E4((uint64_t)v19, v86, &qword_1009F2E40);
  v64 = v84;
  v65 = v79;
  *(_QWORD *)a3 = v84;
  *(_QWORD *)(a3 + 8) = v65;
  v66 = v77;
  *(_QWORD *)(a3 + 16) = v78;
  *(_QWORD *)(a3 + 24) = v66;
  v67 = v75;
  *(_QWORD *)(a3 + 32) = v76;
  *(_QWORD *)(a3 + 40) = v67;
  v68 = v73;
  *(_QWORD *)(a3 + 48) = v74;
  *(_QWORD *)(a3 + 56) = v68;
  *(double *)(a3 + 64) = v34;
  *(_QWORD *)(a3 + 72) = v36;
  *(_QWORD *)(a3 + 80) = v38;
  *(_QWORD *)(a3 + 88) = v40;
  *(_BYTE *)(a3 + 96) = 0;
  v69 = sub_10004CFD4(&qword_1009F2EC0);
  sub_10000B5E4(v63, a3 + *(int *)(v69 + 48), &qword_1009F2E40);
  v70 = a3 + *(int *)(v69 + 64);
  *(_QWORD *)v70 = 0;
  *(_BYTE *)(v70 + 8) = 1;
  swift_retain(v64);
  sub_100010960((uint64_t)v19, &qword_1009F2E40);
  sub_100010960(v63, &qword_1009F2E40);
  swift_release(v64);
}

uint64_t sub_10065EED0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v2 = sub_10004CFD4(&qword_1009EFD70);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for RERootContainerView(0) + 56))
                 + OBJC_IVAR____TtC5Books19BookReaderViewModel_overlayViewModel);
  KeyPath = swift_getKeyPath(&unk_100737188);
  v7 = swift_getKeyPath(&unk_1007371B0);
  swift_retain(v5);
  static Published.subscript.getter(v4, v8, KeyPath);
  swift_release(v5);
  swift_release(KeyPath);
  swift_release(v7);
  v9 = type metadata accessor for OverlayViewModel.Overlay(0);
  LODWORD(v5) = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v4, 1, v9);
  result = sub_100010960((uint64_t)v4, &qword_1009EFD70);
  if ((_DWORD)v5 == 1)
  {
    v13 = 1;
    v11 = sub_10004CFD4(&qword_1009D3A10);
    return AccessibilityFocusState.wrappedValue.setter(&v13, v11);
  }
  return result;
}

uint64_t sub_10065F030@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.accessibilityReduceMotion.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_10065F060()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_10065F080()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_10065F0B0()
{
  uint64_t v0;

  return sub_1004E69A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

char *sub_10065F0C8(char *a1, char **a2, int *a3)
{
  int v4;
  char *v5;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t, __n128);
  __n128 v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t, __n128);
  __n128 v93;
  int *v95;
  char **v96;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain(v5);
  }
  else
  {
    *((_QWORD *)a1 + 1) = a2[1];
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v5;
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v10, v12) == 1)
    {
      v13 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
      v14 = 1;
    }
    else
    {
      v15 = *v10;
      *(_QWORD *)v9 = *v10;
      swift_retain(v15);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v12, v14);
    v16 = a3[6];
    v17 = &a1[v16];
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for UserInterfaceSizeClass(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
      {
        v22 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        v23 = 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t *, uint64_t))(v21 + 16))(v17, v18, v20);
        v23 = 1;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
      }
    }
    else
    {
      v24 = *v18;
      *(_QWORD *)v17 = *v18;
      swift_retain(v24);
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v23);
    v25 = a3[7];
    v26 = &a1[v25];
    v27 = (uint64_t *)((char *)a2 + v25);
    if (swift_getEnumCaseMultiPayload((char *)a2 + v25, v19) == 1)
    {
      v28 = type metadata accessor for UserInterfaceSizeClass(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        v31 = 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t *, uint64_t))(v29 + 16))(v26, v27, v28);
        v31 = 1;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
    }
    else
    {
      v32 = *v27;
      *(_QWORD *)v26 = *v27;
      swift_retain(v32);
      v31 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v19, v31);
    v33 = a3[8];
    v34 = &a1[v33];
    v35 = (uint64_t)a2 + v33;
    v36 = *(_QWORD *)v35;
    v37 = *(_BYTE *)(v35 + 8);
    sub_1001F2508(*(_QWORD *)v35, v37);
    *(_QWORD *)v34 = v36;
    v34[8] = v37;
    v38 = a3[9];
    v39 = &a1[v38];
    v40 = (uint64_t)a2 + v38;
    v41 = *(_QWORD *)v40;
    v42 = *(_BYTE *)(v40 + 8);
    sub_1001F2508(*(_QWORD *)v40, v42);
    *(_QWORD *)v39 = v41;
    v39[8] = v42;
    v43 = a3[10];
    v44 = &a1[v43];
    v45 = (uint64_t *)((char *)a2 + v43);
    v46 = sub_10004CFD4(&qword_1009F2C20);
    if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
    {
      v47 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v44, v45, v47);
      v48 = 1;
    }
    else
    {
      v49 = *v45;
      *(_QWORD *)v44 = *v45;
      swift_retain(v49);
      v48 = 0;
    }
    swift_storeEnumTagMultiPayload(v44, v46, v48);
    v50 = a3[11];
    v51 = &a1[v50];
    v52 = (uint64_t *)((char *)a2 + v50);
    v53 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v52, v53) == 1)
    {
      v54 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v51, v52, v54);
      v55 = 1;
    }
    else
    {
      v56 = *v52;
      *(_QWORD *)v51 = *v52;
      swift_retain(v56);
      v55 = 0;
    }
    swift_storeEnumTagMultiPayload(v51, v53, v55);
    v57 = a3[12];
    v58 = a3[13];
    v59 = *(uint64_t *)((char *)a2 + v57);
    *(_QWORD *)&a1[v57] = v59;
    v60 = a3;
    v61 = *(uint64_t *)((char *)a2 + v58);
    *(_QWORD *)&a1[v58] = v61;
    v62 = v60[14];
    v63 = v60[15];
    v64 = *(uint64_t *)((char *)a2 + v62);
    *(_QWORD *)&a1[v62] = v64;
    v65 = &a1[v63];
    v66 = (char **)((char *)a2 + v63);
    v67 = v66[1];
    *(_QWORD *)v65 = *v66;
    *((_QWORD *)v65 + 1) = v67;
    v95 = v60;
    v96 = a2;
    v68 = v60[16];
    v69 = &a1[v68];
    v70 = (char *)a2 + v68;
    v71 = type metadata accessor for AccessibilityTechnologies(0);
    v72 = *(_QWORD *)(v71 - 8);
    v73 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v72 + 48);
    swift_retain(v59);
    swift_retain(v61);
    swift_retain(v64);
    v74 = swift_retain(v67);
    if (v73(v70, 1, v71, v74))
    {
      v75 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
      memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
    }
    v76 = (int *)sub_10004CFD4(&qword_1009D3A10);
    v69[v76[9]] = v70[v76[9]];
    v77 = v76[10];
    v78 = *(_QWORD *)&v70[v77];
    *(_QWORD *)&v69[v77] = v78;
    v69[v76[11]] = v70[v76[11]];
    v79 = v95[17];
    v80 = &a1[v79];
    v81 = (uint64_t)v96 + v79;
    swift_retain(v78);
    swift_weakCopyInit(v80, v81);
    v82 = v95[18];
    *(_QWORD *)(swift_unknownObjectWeakCopyInit(&a1[v82], (char *)v96 + v82) + 8) = *(char **)((char *)v96 + v82 + 8);
    v83 = v95[20];
    *(_QWORD *)&a1[v95[19]] = *(char **)((char *)v96 + v95[19]);
    a1[v83] = *((_BYTE *)v96 + v83);
    v84 = v95[21];
    v85 = v95[22];
    v86 = &a1[v84];
    v87 = (char **)((char *)v96 + v84);
    v88 = v87[1];
    *(_QWORD *)v86 = *v87;
    *((_QWORD *)v86 + 1) = v88;
    v89 = &a1[v85];
    v90 = (uint64_t)v96 + v85;
    v91 = type metadata accessor for Logger(0);
    v92 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v91 - 8) + 16);
    v93 = swift_bridgeObjectRetain(v88);
    v92(v89, v90, v91, v93);
  }
  return a1;
}

uint64_t sub_10065F63C(id *a1, int *a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v4 = (id *)((char *)a1 + a2[5]);
  v5 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    swift_release(*v4);
  }
  v7 = (id *)((char *)a1 + a2[6]);
  v8 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v7, v8) == 1)
  {
    v9 = type metadata accessor for UserInterfaceSizeClass(0);
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
      (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    swift_release(*v7);
  }
  v11 = (id *)((char *)a1 + a2[7]);
  if (swift_getEnumCaseMultiPayload(v11, v8) == 1)
  {
    v12 = type metadata accessor for UserInterfaceSizeClass(0);
    v13 = *(_QWORD *)(v12 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    swift_release(*v11);
  }
  sub_1001F2564(*(uint64_t *)((char *)a1 + a2[8]), *((_BYTE *)a1 + a2[8] + 8));
  sub_1001F2564(*(uint64_t *)((char *)a1 + a2[9]), *((_BYTE *)a1 + a2[9] + 8));
  v14 = (id *)((char *)a1 + a2[10]);
  v15 = sub_10004CFD4(&qword_1009F2C20);
  if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
  {
    v16 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
  }
  else
  {
    swift_release(*v14);
  }
  v17 = (id *)((char *)a1 + a2[11]);
  v18 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v17, v18) == 1)
  {
    v19 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v17, v19);
  }
  else
  {
    swift_release(*v17);
  }
  swift_release(*(id *)((char *)a1 + a2[12]));
  swift_release(*(id *)((char *)a1 + a2[13]));
  swift_release(*(id *)((char *)a1 + a2[14]));
  swift_release(*(id *)((char *)a1 + a2[15] + 8));
  v20 = (char *)a1 + a2[16];
  v21 = type metadata accessor for AccessibilityTechnologies(0);
  v22 = *(_QWORD *)(v21 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
  v23 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)&v20[*(int *)(v23 + 40)]);
  swift_weakDestroy((char *)a1 + a2[17]);
  swift_unknownObjectWeakDestroy((char *)a1 + a2[18]);
  swift_bridgeObjectRelease(*(id *)((char *)a1 + a2[21] + 8));
  v24 = (char *)a1 + a2[22];
  v25 = type metadata accessor for Logger(0);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v24, v25);
}

_QWORD *sub_10065F930(_QWORD *a1, uint64_t a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t, __n128);
  __n128 v74;
  uint64_t v75;
  int *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t, __n128);
  __n128 v93;
  int *v95;
  uint64_t v96;

  v6 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v7;
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v11 = v6;
  v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v10, v12) == 1)
  {
    v13 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v9, v10, v13);
    v14 = 1;
  }
  else
  {
    v15 = *v10;
    *v9 = *v10;
    swift_retain(v15);
    v14 = 0;
  }
  swift_storeEnumTagMultiPayload(v9, v12, v14);
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v19 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for UserInterfaceSizeClass(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
    {
      v22 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      v23 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v21 + 16))(v17, v18, v20);
      v23 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    }
  }
  else
  {
    v24 = *v18;
    *v17 = *v18;
    swift_retain(v24);
    v23 = 0;
  }
  swift_storeEnumTagMultiPayload(v17, v19, v23);
  v25 = a3[7];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  if (swift_getEnumCaseMultiPayload(a2 + v25, v19) == 1)
  {
    v28 = type metadata accessor for UserInterfaceSizeClass(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      v31 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v29 + 16))(v26, v27, v28);
      v31 = 1;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  else
  {
    v32 = *v27;
    *v26 = *v27;
    swift_retain(v32);
    v31 = 0;
  }
  swift_storeEnumTagMultiPayload(v26, v19, v31);
  v33 = a3[8];
  v34 = (char *)a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)v35;
  v37 = *(_BYTE *)(v35 + 8);
  sub_1001F2508(*(_QWORD *)v35, v37);
  *(_QWORD *)v34 = v36;
  v34[8] = v37;
  v38 = a3[9];
  v39 = (char *)a1 + v38;
  v40 = a2 + v38;
  v41 = *(_QWORD *)v40;
  v42 = *(_BYTE *)(v40 + 8);
  sub_1001F2508(*(_QWORD *)v40, v42);
  *(_QWORD *)v39 = v41;
  v39[8] = v42;
  v43 = a3[10];
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (uint64_t *)(a2 + v43);
  v46 = sub_10004CFD4(&qword_1009F2C20);
  if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
  {
    v47 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v44, v45, v47);
    v48 = 1;
  }
  else
  {
    v49 = *v45;
    *v44 = *v45;
    swift_retain(v49);
    v48 = 0;
  }
  swift_storeEnumTagMultiPayload(v44, v46, v48);
  v50 = a3[11];
  v51 = (_QWORD *)((char *)a1 + v50);
  v52 = (uint64_t *)(a2 + v50);
  v53 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v52, v53) == 1)
  {
    v54 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(v51, v52, v54);
    v55 = 1;
  }
  else
  {
    v56 = *v52;
    *v51 = *v52;
    swift_retain(v56);
    v55 = 0;
  }
  swift_storeEnumTagMultiPayload(v51, v53, v55);
  v57 = a3[12];
  v58 = a3[13];
  v59 = *(_QWORD *)(a2 + v57);
  *(_QWORD *)((char *)a1 + v57) = v59;
  v60 = a3;
  v61 = *(_QWORD *)(a2 + v58);
  *(_QWORD *)((char *)a1 + v58) = v61;
  v62 = v60[14];
  v63 = v60[15];
  v64 = *(_QWORD *)(a2 + v62);
  *(_QWORD *)((char *)a1 + v62) = v64;
  v65 = (_QWORD *)((char *)a1 + v63);
  v66 = (_QWORD *)(a2 + v63);
  v67 = v66[1];
  *v65 = *v66;
  v65[1] = v67;
  v95 = v60;
  v96 = a2;
  v68 = v60[16];
  v69 = (char *)a1 + v68;
  v70 = (char *)(a2 + v68);
  v71 = type metadata accessor for AccessibilityTechnologies(0);
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v72 + 48);
  swift_retain(v59);
  swift_retain(v61);
  swift_retain(v64);
  v74 = swift_retain(v67);
  if (v73(v70, 1, v71, v74))
  {
    v75 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  }
  v76 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v69[v76[9]] = v70[v76[9]];
  v77 = v76[10];
  v78 = *(_QWORD *)&v70[v77];
  *(_QWORD *)&v69[v77] = v78;
  v69[v76[11]] = v70[v76[11]];
  v79 = v95[17];
  v80 = (char *)a1 + v79;
  v81 = v96 + v79;
  swift_retain(v78);
  swift_weakCopyInit(v80, v81);
  v82 = v95[18];
  *(_QWORD *)(swift_unknownObjectWeakCopyInit((char *)a1 + v82, v96 + v82) + 8) = *(_QWORD *)(v96 + v82 + 8);
  v83 = v95[20];
  *(_QWORD *)((char *)a1 + v95[19]) = *(_QWORD *)(v96 + v95[19]);
  *((_BYTE *)a1 + v83) = *(_BYTE *)(v96 + v83);
  v84 = v95[21];
  v85 = v95[22];
  v86 = (_QWORD *)((char *)a1 + v84);
  v87 = (_QWORD *)(v96 + v84);
  v88 = v87[1];
  *v86 = *v87;
  v86[1] = v88;
  v89 = (char *)a1 + v85;
  v90 = v96 + v85;
  v91 = type metadata accessor for Logger(0);
  v92 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(_QWORD *)(v91 - 8) + 16);
  v93 = swift_bridgeObjectRetain(v88);
  v92(v89, v90, v91, v93);
  return a1;
}

uint64_t sub_10065FE78(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  int v82;
  int v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  if (a1 != a2)
  {
    v9 = a3[5];
    v10 = (uint64_t *)(a1 + v9);
    v11 = (uint64_t *)(a2 + v9);
    sub_100010960(a1 + v9, (uint64_t *)&unk_1009D8200);
    v12 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
    {
      v13 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v10, v11, v13);
      v14 = 1;
    }
    else
    {
      v15 = *v11;
      *v10 = *v11;
      swift_retain(v15);
      v14 = 0;
    }
    swift_storeEnumTagMultiPayload(v10, v12, v14);
    v16 = a3[6];
    v17 = (uint64_t *)(a1 + v16);
    v18 = (uint64_t *)(a2 + v16);
    sub_100010960(a1 + v16, &qword_1009D26B8);
    v19 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for UserInterfaceSizeClass(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v20))
      {
        v22 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        v23 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v21 + 16))(v17, v18, v20);
        v23 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
      }
    }
    else
    {
      v24 = *v18;
      *v17 = *v18;
      swift_retain(v24);
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v17, v19, v23);
    v25 = a3[7];
    v26 = (uint64_t *)(a1 + v25);
    v27 = (uint64_t *)(a2 + v25);
    sub_100010960(a1 + v25, &qword_1009D26B8);
    v28 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v27, v28) == 1)
    {
      v29 = type metadata accessor for UserInterfaceSizeClass(0);
      v30 = *(_QWORD *)(v29 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v29))
      {
        v31 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        v32 = 1;
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v30 + 16))(v26, v27, v29);
        v32 = 1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v26, 0, 1, v29);
      }
    }
    else
    {
      v33 = *v27;
      *v26 = *v27;
      swift_retain(v33);
      v32 = 0;
    }
    swift_storeEnumTagMultiPayload(v26, v28, v32);
  }
  v34 = a3[8];
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = *(_QWORD *)v36;
  v38 = *(_BYTE *)(v36 + 8);
  sub_1001F2508(*(_QWORD *)v36, v38);
  v39 = *(_QWORD *)v35;
  v40 = *(_BYTE *)(v35 + 8);
  *(_QWORD *)v35 = v37;
  *(_BYTE *)(v35 + 8) = v38;
  sub_1001F2564(v39, v40);
  v41 = a3[9];
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = *(_QWORD *)v43;
  v45 = *(_BYTE *)(v43 + 8);
  sub_1001F2508(*(_QWORD *)v43, v45);
  v46 = *(_QWORD *)v42;
  v47 = *(_BYTE *)(v42 + 8);
  *(_QWORD *)v42 = v44;
  *(_BYTE *)(v42 + 8) = v45;
  sub_1001F2564(v46, v47);
  if (a1 != a2)
  {
    v48 = a3[10];
    v49 = (uint64_t *)(a1 + v48);
    v50 = (uint64_t *)(a2 + v48);
    sub_100010960(a1 + v48, &qword_1009F2C20);
    v51 = sub_10004CFD4(&qword_1009F2C20);
    if (swift_getEnumCaseMultiPayload(v50, v51) == 1)
    {
      v52 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v49, v50, v52);
      v53 = 1;
    }
    else
    {
      v54 = *v50;
      *v49 = *v50;
      swift_retain(v54);
      v53 = 0;
    }
    swift_storeEnumTagMultiPayload(v49, v51, v53);
    v55 = a3[11];
    v56 = (uint64_t *)(a1 + v55);
    v57 = (uint64_t *)(a2 + v55);
    sub_100010960(a1 + v55, (uint64_t *)&unk_1009EE650);
    v58 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v57, v58) == 1)
    {
      v59 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(v56, v57, v59);
      v60 = 1;
    }
    else
    {
      v61 = *v57;
      *v56 = *v57;
      swift_retain(v61);
      v60 = 0;
    }
    swift_storeEnumTagMultiPayload(v56, v58, v60);
  }
  v62 = a3[12];
  v63 = *(_QWORD *)(a2 + v62);
  v64 = *(_QWORD *)(a1 + v62);
  *(_QWORD *)(a1 + v62) = v63;
  swift_retain(v63);
  swift_release(v64);
  v65 = a3[13];
  v66 = *(_QWORD *)(a2 + v65);
  v67 = *(_QWORD *)(a1 + v65);
  *(_QWORD *)(a1 + v65) = v66;
  swift_retain(v66);
  swift_release(v67);
  v68 = a3[14];
  v69 = *(_QWORD *)(a2 + v68);
  v70 = *(_QWORD *)(a1 + v68);
  *(_QWORD *)(a1 + v68) = v69;
  swift_retain(v69);
  swift_release(v70);
  v71 = a3[15];
  v72 = (_QWORD *)(a1 + v71);
  v73 = (_QWORD *)(a2 + v71);
  *v72 = *v73;
  v74 = v73[1];
  v75 = v72[1];
  v72[1] = v74;
  swift_retain(v74);
  swift_release(v75);
  v76 = a3[16];
  v77 = (char *)(a1 + v76);
  v78 = (char *)(a2 + v76);
  v79 = type metadata accessor for AccessibilityTechnologies(0);
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
  v82 = v81(v77, 1, v79);
  v83 = v81(v78, 1, v79);
  if (!v82)
  {
    if (!v83)
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 24))(v77, v78, v79);
      goto LABEL_30;
    }
    (*(void (**)(char *, uint64_t))(v80 + 8))(v77, v79);
    goto LABEL_29;
  }
  if (v83)
  {
LABEL_29:
    v84 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v77, v78, v79);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
LABEL_30:
  v85 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v77[v85[9]] = v78[v85[9]];
  v86 = v85[10];
  v87 = *(_QWORD *)&v77[v86];
  v88 = *(_QWORD *)&v78[v86];
  *(_QWORD *)&v77[v86] = v88;
  swift_retain(v88);
  swift_release(v87);
  v77[v85[11]] = v78[v85[11]];
  swift_weakCopyAssign(a1 + a3[17], a2 + a3[17]);
  v89 = a3[18];
  *(_QWORD *)(swift_unknownObjectWeakCopyAssign(a1 + v89, a2 + v89) + 8) = *(_QWORD *)(a2 + v89 + 8);
  *(_QWORD *)(a1 + a3[19]) = *(_QWORD *)(a2 + a3[19]);
  *(_BYTE *)(a1 + a3[20]) = *(_BYTE *)(a2 + a3[20]);
  v90 = a3[21];
  v91 = (_QWORD *)(a1 + v90);
  v92 = (_QWORD *)(a2 + v90);
  *v91 = *v92;
  v93 = v92[1];
  v94 = v91[1];
  v91[1] = v93;
  swift_bridgeObjectRetain(v93);
  swift_bridgeObjectRelease(v94);
  v95 = a3[22];
  v96 = a1 + v95;
  v97 = a2 + v95;
  v98 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 24))(v96, v97, v98);
  return a1;
}

_OWORD *sub_1006604D0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v13, v14) == 1)
  {
    v15 = type metadata accessor for UserInterfaceSizeClass(0);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15))
    {
      v17 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v12, v13, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload(v12, v14, 1);
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  if (swift_getEnumCaseMultiPayload((char *)a2 + v18, v14) == 1)
  {
    v21 = type metadata accessor for UserInterfaceSizeClass(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload(v19, v14, 1);
  }
  else
  {
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  v24 = a3[8];
  v25 = a3[9];
  v26 = (char *)a1 + v24;
  v27 = (char *)a2 + v24;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = (char *)a1 + v25;
  v29 = (char *)a2 + v25;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v29[8];
  v30 = a3[10];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_10004CFD4(&qword_1009F2C20);
  if (swift_getEnumCaseMultiPayload(v32, v33) == 1)
  {
    v34 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v31, v32, v34);
    swift_storeEnumTagMultiPayload(v31, v33, 1);
  }
  else
  {
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  v35 = a3[11];
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v37, v38) == 1)
  {
    v39 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload(v36, v38, 1);
  }
  else
  {
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  v40 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v40) = *(_QWORD *)((char *)a2 + v40);
  v41 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v41) = *(_OWORD *)((char *)a2 + v41);
  v42 = a3[16];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for AccessibilityTechnologies(0);
  v46 = *(_QWORD *)(v45 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v47 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  }
  v48 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v43[v48[9]] = v44[v48[9]];
  *(_QWORD *)&v43[v48[10]] = *(_QWORD *)&v44[v48[10]];
  v43[v48[11]] = v44[v48[11]];
  swift_weakTakeInit((char *)a1 + a3[17], (char *)a2 + a3[17]);
  v49 = a3[18];
  *(_QWORD *)(swift_unknownObjectWeakTakeInit((char *)a1 + v49, (char *)a2 + v49) + 8) = *(_QWORD *)((char *)a2 + v49 + 8);
  v50 = a3[20];
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  *((_BYTE *)a1 + v50) = *((_BYTE *)a2 + v50);
  v51 = a3[22];
  *(_OWORD *)((char *)a1 + a3[21]) = *(_OWORD *)((char *)a2 + a3[21]);
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v54 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
  return a1;
}

_QWORD *sub_100660994(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;

  v6 = (void *)*a1;
  *a1 = *a2;

  a1[1] = a2[1];
  if (a1 != a2)
  {
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_100010960((uint64_t)a1 + v7, (uint64_t *)&unk_1009D8200);
    v10 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(v9, v10) == 1)
    {
      v11 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload(v8, v10, 1);
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_100010960((uint64_t)a1 + v12, &qword_1009D26B8);
    v15 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v14, v15) == 1)
    {
      v16 = type metadata accessor for UserInterfaceSizeClass(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        v18 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v13, v14, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      swift_storeEnumTagMultiPayload(v13, v15, 1);
    }
    else
    {
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    sub_100010960((uint64_t)a1 + v19, &qword_1009D26B8);
    v22 = sub_10004CFD4(&qword_1009D26B8);
    if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
    {
      v23 = type metadata accessor for UserInterfaceSizeClass(0);
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v23))
      {
        v25 = sub_10004CFD4((uint64_t *)&unk_1009D8210);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v20, v21, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
      }
      swift_storeEnumTagMultiPayload(v20, v22, 1);
    }
    else
    {
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
  }
  v26 = a3[8];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = *(_QWORD *)v28;
  LOBYTE(v28) = v28[8];
  v30 = *(_QWORD *)v27;
  v31 = v27[8];
  *(_QWORD *)v27 = v29;
  v27[8] = (char)v28;
  sub_1001F2564(v30, v31);
  v32 = a3[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  LOBYTE(v34) = v34[8];
  v36 = *(_QWORD *)v33;
  v37 = v33[8];
  *(_QWORD *)v33 = v35;
  v33[8] = (char)v34;
  sub_1001F2564(v36, v37);
  if (a1 != a2)
  {
    v38 = a3[10];
    v39 = (char *)a1 + v38;
    v40 = (char *)a2 + v38;
    sub_100010960((uint64_t)a1 + v38, &qword_1009F2C20);
    v41 = sub_10004CFD4(&qword_1009F2C20);
    if (swift_getEnumCaseMultiPayload(v40, v41) == 1)
    {
      v42 = type metadata accessor for ColorSchemeContrast(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload(v39, v41, 1);
    }
    else
    {
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    v43 = a3[11];
    v44 = (char *)a1 + v43;
    v45 = (char *)a2 + v43;
    sub_100010960((uint64_t)a1 + v43, (uint64_t *)&unk_1009EE650);
    v46 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
    if (swift_getEnumCaseMultiPayload(v45, v46) == 1)
    {
      v47 = type metadata accessor for LayoutDirection(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v44, v45, v47);
      swift_storeEnumTagMultiPayload(v44, v46, 1);
    }
    else
    {
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
  }
  v48 = a3[12];
  v49 = *(_QWORD *)((char *)a1 + v48);
  *(_QWORD *)((char *)a1 + v48) = *(_QWORD *)((char *)a2 + v48);
  swift_release(v49);
  v50 = a3[13];
  v51 = *(_QWORD *)((char *)a1 + v50);
  *(_QWORD *)((char *)a1 + v50) = *(_QWORD *)((char *)a2 + v50);
  swift_release(v51);
  v52 = a3[14];
  v53 = *(_QWORD *)((char *)a1 + v52);
  *(_QWORD *)((char *)a1 + v52) = *(_QWORD *)((char *)a2 + v52);
  swift_release(v53);
  v54 = a3[15];
  v55 = (_QWORD *)((char *)a1 + v54);
  v56 = (_QWORD *)((char *)a2 + v54);
  v58 = *v56;
  v57 = v56[1];
  v59 = v55[1];
  *v55 = v58;
  v55[1] = v57;
  swift_release(v59);
  v60 = a3[16];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = type metadata accessor for AccessibilityTechnologies(0);
  v64 = *(_QWORD *)(v63 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v61, 1, v63);
  v67 = v65(v62, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v61, v62, v63);
      goto LABEL_30;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v61, v63);
    goto LABEL_29;
  }
  if (v67)
  {
LABEL_29:
    v68 = sub_10004CFD4((uint64_t *)&unk_1009D8220);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
LABEL_30:
  v69 = (int *)sub_10004CFD4(&qword_1009D3A10);
  v61[v69[9]] = v62[v69[9]];
  v70 = v69[10];
  v71 = *(_QWORD *)&v61[v70];
  *(_QWORD *)&v61[v70] = *(_QWORD *)&v62[v70];
  swift_release(v71);
  v61[v69[11]] = v62[v69[11]];
  swift_weakTakeAssign((char *)a1 + a3[17], (char *)a2 + a3[17]);
  v72 = a3[18];
  *(_QWORD *)(swift_unknownObjectWeakTakeAssign((char *)a1 + v72, (char *)a2 + v72) + 8) = *(_QWORD *)((char *)a2 + v72 + 8);
  v73 = a3[20];
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  *((_BYTE *)a1 + v73) = *((_BYTE *)a2 + v73);
  v74 = a3[21];
  v75 = (_QWORD *)((char *)a1 + v74);
  v76 = (_QWORD *)((char *)a2 + v74);
  v78 = *v76;
  v77 = v76[1];
  v79 = v75[1];
  *v75 = v78;
  v75[1] = v77;
  swift_bridgeObjectRelease(v79);
  v80 = a3[22];
  v81 = (char *)a1 + v80;
  v82 = (char *)a2 + v80;
  v83 = type metadata accessor for Logger(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 40))(v81, v82, v83);
  return a1;
}

uint64_t sub_100660F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100660F9C);
}

uint64_t sub_100660F9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_10004CFD4(&qword_1009D26A0);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = sub_10004CFD4(&qword_1009F2C30);
  v7 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v9 = a3[10];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = sub_10004CFD4(&qword_1009D8240);
  v7 = *(_QWORD *)(v12 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v12;
    v9 = a3[11];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v15 = sub_10004CFD4(&qword_1009D3A10);
    v7 = *(_QWORD *)(v15 - 8);
    if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    {
      v8 = v15;
      v9 = a3[16];
    }
    else
    {
      v8 = type metadata accessor for Logger(0);
      v7 = *(_QWORD *)(v8 - 8);
      v9 = a3[22];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v13 = *(_QWORD *)(a1 + a3[12]);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  return (v13 + 1);
}

uint64_t sub_1006610E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006610F0);
}

uint64_t sub_1006610F0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v8 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
  }
  else
  {
    v12 = sub_10004CFD4(&qword_1009D26A0);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[6];
    }
    else
    {
      v13 = sub_10004CFD4(&qword_1009F2C30);
      v9 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v13;
        v11 = a4[10];
      }
      else
      {
        result = sub_10004CFD4(&qword_1009D8240);
        v9 = *(_QWORD *)(result - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = result;
          v11 = a4[11];
        }
        else
        {
          if (a3 == 0x7FFFFFFF)
          {
            *(_QWORD *)(a1 + a4[12]) = (a2 - 1);
            return result;
          }
          v15 = sub_10004CFD4(&qword_1009D3A10);
          v9 = *(_QWORD *)(v15 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v15;
            v11 = a4[16];
          }
          else
          {
            v10 = type metadata accessor for Logger(0);
            v9 = *(_QWORD *)(v10 - 8);
            v11 = a4[22];
          }
        }
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_100661234(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  char *v28;
  void *v29;
  void *v30;
  uint64_t v31;

  v14[0] = &unk_100736FF8;
  sub_1002333D0(319, (unint64_t *)&qword_1009D82B0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v3 <= 0x3F)
  {
    v14[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100233378(319);
    if (v5 <= 0x3F)
    {
      v15 = *(_QWORD *)(v4 - 8) + 64;
      v16 = v15;
      v17 = &unk_100737010;
      v18 = &unk_100737010;
      sub_1002333D0(319, (unint64_t *)&unk_1009F2CA0, (uint64_t (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
      if (v7 <= 0x3F)
      {
        v19 = *(_QWORD *)(v6 - 8) + 64;
        sub_1002333D0(319, qword_1009D82C0, (uint64_t (*)(uint64_t))&type metadata accessor for LayoutDirection);
        if (v9 <= 0x3F)
        {
          v20 = *(_QWORD *)(v8 - 8) + 64;
          v21 = (char *)&value witness table for Builtin.NativeObject + 64;
          v22 = (char *)&value witness table for Builtin.NativeObject + 64;
          v23 = (char *)&value witness table for Builtin.NativeObject + 64;
          v24 = &unk_100737028;
          sub_10023341C();
          if (v11 <= 0x3F)
          {
            v25 = *(_QWORD *)(v10 - 8) + 64;
            v26 = &unk_100737040;
            v27 = &unk_100737058;
            v28 = (char *)&value witness table for Builtin.Int64 + 64;
            v29 = &unk_100737070;
            v30 = &unk_100736FF8;
            v12 = type metadata accessor for Logger(319);
            if (v13 <= 0x3F)
            {
              v31 = *(_QWORD *)(v12 - 8) + 64;
              swift_initStructMetadata(a1, 256, 19, v14, a1 + 16);
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1006613B8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087B748, 1);
}

_QWORD *sub_1006613C8@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  uint64_t v4;

  v2 = sub_1002F5514();
  result = EnvironmentValues.subscript.getter(&v4, &type metadata for BookLayoutModeKey, &type metadata for BookLayoutModeKey, v2);
  *a1 = v4;
  return result;
}

uint64_t sub_100661414(uint64_t *a1)
{
  unint64_t v1;
  uint64_t v3;

  v3 = *a1;
  v1 = sub_1002F5514();
  return EnvironmentValues.subscript.setter(&v3, &type metadata for BookLayoutModeKey, &type metadata for BookLayoutModeKey, v1);
}

unint64_t sub_10066145C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F2D40;
  if (!qword_1009F2D40)
  {
    v1 = sub_100030B74(&qword_1009F2D20);
    sub_100030B34(&qword_1009F2D48, &qword_1009F2D18, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100030B34(&qword_1009F2D50, &qword_1009F2D58, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F2D40);
  }
  return result;
}

uint64_t sub_1006614FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RERootContainerView(0) - 8) + 80);
  return sub_100659690(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_10066154C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  double v3;
  double v4;

  v2 = type metadata accessor for RERootContainerView(0);
  v3 = GeometryProxy.size.getter(v2);
  return sub_100659118(a1, v3, v4);
}

unint64_t sub_1006615A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F2DB0;
  if (!qword_1009F2DB0)
  {
    v1 = sub_100030B74(&qword_1009F2DB8);
    sub_100030B34(&qword_1009F2DC0, &qword_1009F2DC8, (uint64_t)&protocol conformance descriptor for VStack<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F2DB0);
  }
  return result;
}

uint64_t sub_100661640(_BYTE *a1, _BYTE *a2)
{
  uint64_t result;

  result = type metadata accessor for RERootContainerView(0);
  if ((*a1 & 1) == 0)
  {
    if (*a2)
      return sub_10065A274();
  }
  return result;
}

uint64_t sub_1006616A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RERootContainerView(0) - 8) + 80);
  return sub_10065EED0(v0 + ((v1 + 16) & ~v1));
}

unint64_t sub_1006616E8()
{
  unint64_t result;

  result = qword_1009F2E10;
  if (!qword_1009F2E10)
  {
    result = swift_getWitnessTable(&unk_10071DEF4, &type metadata for PageFlippingView);
    atomic_store(result, (unint64_t *)&qword_1009F2E10);
  }
  return result;
}

uint64_t sub_10066172C(uint64_t a1)
{
  destroy for PageFlippingView(a1);
  return a1;
}

unint64_t sub_100661760()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F2E50;
  if (!qword_1009F2E50)
  {
    v1 = sub_100030B74(&qword_1009F2E38);
    sub_10028156C(&qword_1009F2E58, &qword_1009F2E60, (void (*)(void))sub_1006617EC, (void (*)(void))sub_1002B3BCC);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F2E50);
  }
  return result;
}

uint64_t sub_1006617EC()
{
  return sub_1001F5558(&qword_1009F2E68, &qword_1009F2E70, (void (*)(void))sub_100661810);
}

unint64_t sub_100661810()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F2E78;
  if (!qword_1009F2E78)
  {
    v1 = sub_100030B74(&qword_1009F2E80);
    sub_100030B34(&qword_1009F2E88, &qword_1009F2E90, (uint64_t)&protocol conformance descriptor for ZStack<A>);
    sub_100030B34(&qword_1009F2E98, &qword_1009F2EA0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F2E78);
  }
  return result;
}

unint64_t sub_1006618AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F2EA8;
  if (!qword_1009F2EA8)
  {
    v1 = sub_100030B74(&qword_1009F2E28);
    sub_100030B34(&qword_1009F2EB0, &qword_1009F2E20, (uint64_t)&protocol conformance descriptor for VStack<A>);
    sub_100661930();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F2EA8);
  }
  return result;
}

unint64_t sub_100661930()
{
  unint64_t result;

  result = qword_1009F2EB8;
  if (!qword_1009F2EB8)
  {
    result = swift_getWitnessTable(&unk_100735E1C, &type metadata for DebugInfoBarOverlayModifier);
    atomic_store(result, (unint64_t *)&qword_1009F2EB8);
  }
  return result;
}

_QWORD *sub_100661994@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2;
  _QWORD *result;
  char v4;
  uint64_t v5;
  char v6;

  v2 = sub_1004509CC();
  result = EnvironmentValues.subscript.getter(&v5, &type metadata for InfoBarAvailableWidthKey, &type metadata for InfoBarAvailableWidthKey, v2);
  v4 = v6;
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_1006619E8(uint64_t *a1)
{
  char v1;
  unint64_t v2;
  uint64_t v4;
  char v5;

  v1 = *((_BYTE *)a1 + 8);
  v4 = *a1;
  v5 = v1;
  v2 = sub_1004509CC();
  return EnvironmentValues.subscript.setter(&v4, &type metadata for InfoBarAvailableWidthKey, &type metadata for InfoBarAvailableWidthKey, v2);
}

_QWORD *sub_100661A38@<X0>(_BYTE *a1@<X8>)
{
  return sub_10065D1F8((uint64_t (*)(void))sub_1002C9DD4, (uint64_t)&type metadata for BooksAccessibilityHiddenKey, a1);
}

uint64_t sub_100661A4C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10065D260(a1, a2, a3, a4, (uint64_t (*)(void))sub_1002C9DD4, (uint64_t)&type metadata for BooksAccessibilityHiddenKey);
}

double sub_100661A70(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  char v19;
  char v20;
  id v21;
  double result;

  if (a8)
  {
    v19 = a4 & 1;
    v20 = a6 & 1;
    v21 = a1;
    sub_1001F2508(a3, v19);
    sub_1001F2508(a5, v20);
    swift_retain(a14);
    swift_retain(a16);
    swift_bridgeObjectRetain(a8);
    *(_QWORD *)&result = swift_retain(a11).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100661B00(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24]);
  return a1;
}

double sub_100661B6C(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  char v19;
  char v20;
  double result;

  if (a8)
  {
    v19 = a4 & 1;
    v20 = a6 & 1;

    sub_1001F2564(a3, v19);
    sub_1001F2564(a5, v20);
    swift_release(a16);
    swift_release(a11);
    swift_bridgeObjectRelease(a8);
    *(_QWORD *)&result = swift_release(a14).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100661BFC(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18], a1[19], a1[20], a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27]);
  return a1;
}

uint64_t sub_100661C78(uint64_t result)
{
  *(_BYTE *)(result + 136) = 1;
  return result;
}

uint64_t sub_100661C84()
{
  return sub_1001F5558(&qword_1009F2F78, &qword_1009F2F80, (void (*)(void))sub_100661CA8);
}

unint64_t sub_100661CA8()
{
  unint64_t result;

  result = qword_1009F2F88;
  if (!qword_1009F2F88)
  {
    result = swift_getWitnessTable(&unk_100710AC0, &type metadata for HistoryButton);
    atomic_store(result, (unint64_t *)&qword_1009F2F88);
  }
  return result;
}

unint64_t sub_100661CEC()
{
  unint64_t result;

  result = qword_1009F2F90;
  if (!qword_1009F2F90)
  {
    result = swift_getWitnessTable(&unk_100730578, &type metadata for HorizontalEdgeFading);
    atomic_store(result, (unint64_t *)&qword_1009F2F90);
  }
  return result;
}

unint64_t sub_100661D30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F2F98;
  if (!qword_1009F2F98)
  {
    v1 = sub_100030B74(&qword_1009F2F68);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F2F98);
  }
  return result;
}

double sub_100661D94(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  char v21;
  char v22;
  id v23;
  double result;

  if ((a18 & 1) == 0)
  {
    v21 = a4 & 1;
    v22 = a6 & 1;
    v23 = a1;
    sub_1001F2508(a3, v21);
    sub_1001F2508(a5, v22);
    swift_retain(a14);
    swift_retain(a16);
    swift_bridgeObjectRetain(a8);
    a1 = a11;
  }
  *(_QWORD *)&result = swift_retain(a1).n128_u64[0];
  return result;
}

uint64_t sub_100661E24(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 136);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), v4);
  return a1;
}

double sub_100661E88(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  char v21;
  char v22;
  double result;

  if ((a18 & 1) == 0)
  {
    v21 = a4 & 1;
    v22 = a6 & 1;

    sub_1001F2564(a3, v21);
    sub_1001F2564(a5, v22);
    swift_release(a16);
    swift_release(a11);
    swift_bridgeObjectRelease(a8);
    a1 = a14;
  }
  *(_QWORD *)&result = swift_release(a1).n128_u64[0];
  return result;
}

uint64_t sub_100661F20(uint64_t a1, uint64_t a2)
{
  initializeWithTake for RERootContainerView.BookCloseButton(a2, a1);
  return a2;
}

uint64_t sub_100661F64(uint64_t result)
{
  *(_BYTE *)(result + 136) = 0;
  return result;
}

void sub_100661F74()
{
  type metadata accessor for RERootContainerView(0);
  REActionMenuState.transition(to:)(0x8000000000000000);
}

_QWORD *sub_100661FB0@<X0>(_BYTE *a1@<X8>)
{
  return sub_10065D1F8((uint64_t (*)(void))sub_100450A48, (uint64_t)&type metadata for InfoBarView.ModeKey, a1);
}

uint64_t sub_100661FC4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10065D260(a1, a2, a3, a4, (uint64_t (*)(void))sub_100450A48, (uint64_t)&type metadata for InfoBarView.ModeKey);
}

uint64_t sub_100661FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009F2FB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100662020(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for InfoBarView(a2, a1);
  return a2;
}

uint64_t sub_10066205C(uint64_t a1)
{
  destroy for InfoBarView(a1);
  return a1;
}

unint64_t sub_100662090()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F2FC8;
  if (!qword_1009F2FC8)
  {
    v1 = sub_100030B74(&qword_1009F2FC0);
    sub_100662114();
    sub_100030B34(&qword_1009F2FD8, &qword_1009F2FE0, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F2FC8);
  }
  return result;
}

unint64_t sub_100662114()
{
  unint64_t result;

  result = qword_1009F2FD0;
  if (!qword_1009F2FD0)
  {
    result = swift_getWitnessTable(&unk_10072554C, &type metadata for InfoBarView);
    atomic_store(result, (unint64_t *)&qword_1009F2FD0);
  }
  return result;
}

double sub_100662158(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 192) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_100662180()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = (int *)type metadata accessor for RERootContainerView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v37 = *(_QWORD *)(v2 + 64);
  v38 = type metadata accessor for HistoryModel.Entry(0);
  v5 = *(_QWORD *)(v38 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v36 = *(_QWORD *)(v5 + 64);
  v7 = v0 + v4;

  v8 = (_QWORD *)(v0 + v4 + v1[5]);
  v9 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  else
  {
    swift_release(*v8);
  }
  v11 = (_QWORD *)(v7 + v1[6]);
  v12 = sub_10004CFD4(&qword_1009D26B8);
  if (swift_getEnumCaseMultiPayload(v11, v12) == 1)
  {
    v13 = type metadata accessor for UserInterfaceSizeClass(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13))
      (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v11, v13);
  }
  else
  {
    swift_release(*v11);
  }
  v15 = (_QWORD *)(v7 + v1[7]);
  if (swift_getEnumCaseMultiPayload(v15, v12) == 1)
  {
    v16 = type metadata accessor for UserInterfaceSizeClass(0);
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v15, v16);
  }
  else
  {
    swift_release(*v15);
  }
  sub_1001F2564(*(_QWORD *)(v7 + v1[8]), *(_BYTE *)(v7 + v1[8] + 8));
  sub_1001F2564(*(_QWORD *)(v7 + v1[9]), *(_BYTE *)(v7 + v1[9] + 8));
  v18 = (_QWORD *)(v7 + v1[10]);
  v19 = sub_10004CFD4(&qword_1009F2C20);
  if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
  {
    v20 = type metadata accessor for ColorSchemeContrast(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);
  }
  else
  {
    swift_release(*v18);
  }
  v21 = (_QWORD *)(v7 + v1[11]);
  v22 = sub_10004CFD4((uint64_t *)&unk_1009EE650);
  if (swift_getEnumCaseMultiPayload(v21, v22) == 1)
  {
    v23 = type metadata accessor for LayoutDirection(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v21, v23);
  }
  else
  {
    swift_release(*v21);
  }
  swift_release(*(_QWORD *)(v7 + v1[12]));
  swift_release(*(_QWORD *)(v7 + v1[13]));
  swift_release(*(_QWORD *)(v7 + v1[14]));
  swift_release(*(_QWORD *)(v7 + v1[15] + 8));
  v24 = v7 + v1[16];
  v25 = type metadata accessor for AccessibilityTechnologies(0);
  v26 = *(_QWORD *)(v25 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  v27 = (v4 + v37 + v6) & ~v6;
  v28 = v27 + v36;
  v29 = sub_10004CFD4(&qword_1009D3A10);
  swift_release(*(_QWORD *)(v24 + *(int *)(v29 + 40)));
  swift_weakDestroy(v7 + v1[17]);
  swift_unknownObjectWeakDestroy(v7 + v1[18]);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + v1[21] + 8));
  v30 = v7 + v1[22];
  v31 = type metadata accessor for Logger(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
  v32 = v0 + v27;
  swift_bridgeObjectRelease(*(_QWORD *)(v32 + 8));
  v33 = v32 + *(int *)(v38 + 20);
  v34 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
  return swift_deallocObject(v0, v28, v3 | v6 | 7);
}

void sub_10066252C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for RERootContainerView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HistoryModel.Entry(0) - 8) + 80);
  sub_10065E170(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_10066258C(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 104);
  v9 = *(_QWORD *)(a1 + 120);
  v10 = *(id *)a1;
  sub_1001F2508(v2, v3);
  sub_1001F2508(v4, v5);
  swift_retain(v8);
  swift_retain(v9);
  swift_bridgeObjectRetain(v6);
  swift_retain(v7);
  return a1;
}

uint64_t sub_10066262C(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 104);
  v9 = *(_QWORD *)(a1 + 120);

  sub_1001F2564(v2, v3);
  sub_1001F2564(v4, v5);
  swift_release(v9);
  swift_release(v7);
  swift_bridgeObjectRelease(v6);
  swift_release(v8);
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for RERootContainerView.InfoBarContentAnimationState(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RERootContainerView.InfoBarContentAnimationState(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for RERootContainerView.InfoBarContentAnimationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for RERootContainerView.InfoBarContentAnimationState()
{
  return &type metadata for RERootContainerView.InfoBarContentAnimationState;
}

uint64_t destroy for RERootContainerView.BookCloseButton(uint64_t a1)
{
  sub_1001F2564(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  swift_release(*(_QWORD *)(a1 + 16));
  swift_unknownObjectWeakDestroy(a1 + 24);
  swift_unknownObjectWeakDestroy(a1 + 40);
  return swift_unknownObjectWeakDestroy(a1 + 56);
}

uint64_t initializeWithCopy for RERootContainerView.BookCloseButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1001F2508(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain(v6);
  swift_unknownObjectWeakCopyInit(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakCopyInit(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectWeakCopyInit(a1 + 56, a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithCopy for RERootContainerView.BookCloseButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_1001F2508(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1001F2564(v6, v7);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v8;
  swift_retain(v8);
  swift_release(v9);
  swift_unknownObjectWeakCopyAssign(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakCopyAssign(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectWeakCopyAssign(a1 + 56, a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t initializeWithTake for RERootContainerView.BookCloseButton(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectWeakTakeInit(a1 + 24, a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_unknownObjectWeakTakeInit(a1 + 40, a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectWeakTakeInit(a1 + 56, a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for RERootContainerView.BookCloseButton(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_1001F2564(v6, v7);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];
  swift_release(v8);
  swift_unknownObjectWeakTakeAssign(a1 + 24, a2 + 3);
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_unknownObjectWeakTakeAssign(a1 + 40, a2 + 5);
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_unknownObjectWeakTakeAssign(a1 + 56, a2 + 7);
  *(_QWORD *)(a1 + 64) = a2[8];
  return a1;
}

ValueMetadata *type metadata accessor for RERootContainerView.BookCloseButton()
{
  return &type metadata for RERootContainerView.BookCloseButton;
}

unint64_t sub_100662A98()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t OpaqueTypeConformance2;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;

  result = qword_1009F3000;
  if (!qword_1009F3000)
  {
    v1 = sub_100030B74(&qword_1009F2D60);
    v2 = sub_100030B74(&qword_1009F2D28);
    v4 = sub_100030B74(&qword_1009F2D20);
    v5 = &type metadata for String;
    v6 = sub_10066145C();
    v7 = sub_1001F2108();
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.navigationBarTitle<A>(_:)>>, 1);
    v4 = v2;
    v5 = (_QWORD *)OpaqueTypeConformance2;
    swift_getOpaqueTypeConformance2(&v4, &opaque type descriptor for <<opaque return type of View.navigationBarHidden(_:)>>, 1);
    sub_100030B34((unint64_t *)&qword_1009F1DC0, (uint64_t *)&unk_1009EB880, (uint64_t)&protocol conformance descriptor for _BackgroundStyleModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F3000);
  }
  return result;
}

uint64_t sub_100662B88(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087B770, 1);
}

uint64_t sub_100662B98(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for RERootContainerView.BookCloseButton(a2, a1);
  return a2;
}

uint64_t sub_100662BCC()
{
  uint64_t v0;

  sub_1001F2564(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  swift_unknownObjectWeakDestroy(v0 + 40);
  swift_unknownObjectWeakDestroy(v0 + 56);
  swift_unknownObjectWeakDestroy(v0 + 72);
  return swift_deallocObject(v0, 88, 7);
}

uint64_t sub_100662C14()
{
  uint64_t v0;

  return sub_10065E11C(v0 + 16);
}

unint64_t sub_100662C24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F3020;
  if (!qword_1009F3020)
  {
    v1 = sub_100030B74(&qword_1009F3008);
    sub_100487ADC();
    sub_100008DB0(qword_1009D4760, (uint64_t (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier, (uint64_t)&protocol conformance descriptor for AccessibilityAttachmentModifier);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F3020);
  }
  return result;
}

unint64_t sub_100662CAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1009F3028;
  if (!qword_1009F3028)
  {
    v1 = sub_100030B74(&qword_1009F3018);
    v2[0] = sub_100030B74(&qword_1009F3008);
    v2[1] = sub_100030B74(&qword_1009D1C80);
    v2[2] = sub_100662C24();
    v2[3] = sub_100030B34(&qword_1009D1CC8, &qword_1009D1C80, (uint64_t)&protocol conformance descriptor for ClosedRange<A>);
    swift_getOpaqueTypeConformance2(v2, &opaque type descriptor for <<opaque return type of View.dynamicTypeSize<A>(_:)>>, 1);
    sub_100661CEC();
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F3028);
  }
  return result;
}

uint64_t UICommand.books_themeID.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = objc_msgSend(v0, "propertyList");
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10004C7B4((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast(&v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6))
      return v4;
    else
      return 0;
  }
  else
  {
    sub_10004A7B8((uint64_t)v6);
    return 0;
  }
}

uint64_t UICommand.books_annotationStyle.getter()
{
  void *v0;

  return sub_1003A1714(v0);
}

uint64_t sub_100662EB4()
{
  id *v0;

  return sub_1003A1714(*v0);
}

uint64_t UICommand.books_themeAppearance.getter()
{
  void *v0;
  id v1;
  id v2;
  _QWORD v4[2];
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v1 = objc_msgSend(v0, "propertyList");
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(v1);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_10004C7B4((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if ((swift_dynamicCast(v4, v6, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
      return ThemeAppearance.init(rawValue:)(v4[0], v4[1]);
  }
  else
  {
    sub_10004A7B8((uint64_t)v6);
  }
  return 4;
}

uint64_t sub_100662F7C()
{
  return UICommand.books_themeAppearance.getter();
}

uint64_t sub_100662F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100662FA8);
}

uint64_t sub_100662FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_100663024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100663030);
}

uint64_t sub_100663030(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for ContextActionType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

id sub_1006630A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id result;
  id v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  ValueMetadata *v24;
  _UNKNOWN **v25;
  __int128 v26[2];
  __int128 v27[2];
  __int128 v28[3];

  sub_10002E418((uint64_t)a1, (uint64_t)v28);
  sub_10002E418((uint64_t)a2, (uint64_t)v27);
  sub_10002E418((uint64_t)a4, (uint64_t)v26);
  v10 = (void *)objc_opt_self(BKAppDelegate);
  v11 = objc_msgSend(v10, "delegate");
  v12 = objc_msgSend(v11, "serviceCenter");

  v13 = objc_msgSend((id)objc_opt_self(BKLibraryManager), "defaultManager");
  v14 = objc_msgSend(v10, "delegate");
  v15 = objc_msgSend(v14, "engagementManager");

  result = objc_msgSend((id)objc_opt_self(BSUIItemDescriptionCache), "sharedInstance");
  if (result)
  {
    v17 = result;
    v18 = objc_msgSend((id)objc_opt_self(BKBookSampleHelper), "defaultHelper");
    v24 = &type metadata for MenuLibraryOperationProvider;
    v25 = &off_10090F400;
    v19 = (_QWORD *)swift_allocObject(&unk_10091A550, 56, 7);
    *(_QWORD *)&v23 = v19;
    v19[2] = v12;
    v19[3] = v13;
    v19[4] = v15;
    v19[5] = v17;
    v19[6] = v18;
    _s5Books15CurrentPageViewVwxx_0(a4);
    _s5Books15CurrentPageViewVwxx_0(a2);
    _s5Books15CurrentPageViewVwxx_0(a1);
    v20 = a5 + *(int *)(type metadata accessor for ReadThisActionItem(0) + 36);
    v21 = enum case for ContextActionType.readThis(_:);
    v22 = type metadata accessor for ContextActionType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
    sub_100022840(v28, a5);
    sub_100022840(v27, a5 + 40);
    *(_QWORD *)(a5 + 80) = a3;
    sub_100022840(v26, a5 + 88);
    return (id)sub_100022840(&v23, a5 + 128);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1006632C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = v0[3];
  v3 = v0[4];
  sub_10003F198(v0, v2);
  if ((dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(v2, v3) & 1) == 0)
    return 0;
  sub_10023ADE8(&v23);
  if (!v24)
  {
    sub_100010960((uint64_t)&v23, qword_1009D1448);
    return 0;
  }
  sub_1001EB834(&v23, &v25);
  v4 = v26;
  v5 = v27;
  sub_10003F198(&v25, v26);
  v6 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v4, v5);
  if ((static ContextActionAssetType.== infix(_:_:)(v6, 4) & 1) != 0)
    goto LABEL_11;
  v7 = v26;
  v8 = v27;
  sub_10003F198(&v25, v26);
  v9 = dispatch thunk of ContextAssetInfoProtocol.assetType.getter(v7, v8);
  if ((static ContextActionAssetType.== infix(_:_:)(v9, 5) & 1) != 0)
    goto LABEL_11;
  v10 = v26;
  v11 = v27;
  sub_10003F198(&v25, v26);
  v12 = dispatch thunk of ContextAssetInfoProtocol.storeId.getter(v10, v11);
  if (!v13)
    goto LABEL_11;
  v14 = v12;
  v15 = v13;
  swift_bridgeObjectRelease(v13);
  v16 = HIBYTE(v15) & 0xF;
  if ((v15 & 0x2000000000000000) == 0)
    v16 = v14 & 0xFFFFFFFFFFFFLL;
  if (!v16
    || (v17 = v1[3],
        v18 = v1[4],
        sub_10003F198(v1, v17),
        (dispatch thunk of ContextActionDataProtocol.isOnline.getter(v17, v18) & 1) == 0))
  {
LABEL_11:
    _s5Books15CurrentPageViewVwxx_0(&v25);
    return 0;
  }
  v19 = v26;
  v20 = v27;
  sub_10003F198(&v25, v26);
  v21 = (dispatch thunk of ContextAssetInfoProtocol.isMarkedFinished.getter(v19, v20) & 1) == 0;
  _s5Books15CurrentPageViewVwxx_0(&v25);
  return v21;
}

uint64_t sub_100663450()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1[40] = v0;
  v2 = type metadata accessor for Logger(0);
  v1[41] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[42] = v3;
  v1[43] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(type metadata accessor for ReadThisActionItem(0) - 8);
  v1[44] = v4;
  v5 = *(_QWORD *)(v4 + 64);
  v1[45] = v5;
  v1[46] = swift_task_alloc((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009D3150);
  v1[47] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v1[48] = v7;
  v1[49] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v1[50] = v8;
  v1[51] = v9;
  return swift_task_switch(sub_100663534, v8, v9);
}

uint64_t sub_100663534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;

  sub_10023ADE8((_OWORD *)(v0 + 112));
  if (*(_QWORD *)(v0 + 136))
  {
    sub_1001EB834((__int128 *)(v0 + 112), (_OWORD *)(v0 + 64));
    v1 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(v0 + 96);
    sub_10003F198((_QWORD *)(v0 + 64), v1);
    dispatch thunk of ContextAssetInfoProtocol.toFoundationAssetInfo()((_QWORD *)(v0 + 200), v1, v2);
    if (*(_QWORD *)(v0 + 224))
    {
      v3 = *(_QWORD *)(v0 + 384);
      v4 = *(_QWORD **)(v0 + 320);
      sub_100022840((__int128 *)(v0 + 200), v0 + 160);
      sub_100663A74();
      v5 = sub_10003F198(v4 + 16, v4[19]);
      *(_QWORD *)(v0 + 416) = v4[10];
      v7 = *(_OWORD *)v5;
      v6 = *((_OWORD *)v5 + 1);
      *(_QWORD *)(v0 + 272) = v5[4];
      *(_OWORD *)(v0 + 240) = v7;
      *(_OWORD *)(v0 + 256) = v6;
      *(_QWORD *)(v0 + 424) = static MainActor.shared.getter(v5);
      v8 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
      *(_QWORD *)(v0 + 432) = v8;
      *(_QWORD *)(v0 + 440) = v9;
      return swift_task_switch(sub_10066373C, v8, v9);
    }
    swift_release(*(_QWORD *)(v0 + 392));
    sub_100010960(v0 + 200, &qword_1009EC950);
    v11 = _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 392));
    v11 = sub_100010960(v0 + 112, qword_1009D1448);
  }
  v12 = static Logger.contextActionItem.getter(v11);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.error.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Action doesn't have sufficient context or assetInfo to handle action.", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }
  v17 = *(_QWORD *)(v0 + 336);
  v16 = *(_QWORD *)(v0 + 344);
  v18 = *(_QWORD *)(v0 + 328);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  v19 = *(_QWORD *)(v0 + 368);
  v20 = *(_QWORD *)(v0 + 344);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v19);
  v21 = swift_task_dealloc(v20);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v21);
}

uint64_t sub_10066373C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = v0[52];
  v2 = v0[40] + 40;
  v3 = v0[11];
  v4 = v0[12];
  sub_10003F198(v0 + 8, v3);
  v5 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v3, v4);
  v7 = v6;
  v0[56] = v6;
  v8 = static MainActor.shared.getter(v5);
  v0[57] = v8;
  v9 = swift_task_alloc(80);
  v0[58] = v9;
  *(_QWORD *)(v9 + 16) = v0 + 30;
  *(_QWORD *)(v9 + 24) = v5;
  *(_QWORD *)(v9 + 32) = v7;
  *(_WORD *)(v9 + 40) = 1;
  *(_QWORD *)(v9 + 48) = v0 + 8;
  *(_QWORD *)(v9 + 56) = v1;
  *(_BYTE *)(v9 + 64) = 0;
  *(_QWORD *)(v9 + 72) = v2;
  v10 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedContinuation<A>(isolation:function:_:)[1]);
  v0[59] = v10;
  *v10 = v0;
  v10[1] = sub_100663858;
  return withCheckedContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000050, 0x80000001007CE440, sub_1004CE4E4, v9, (char *)&type metadata for () + 8);
}

uint64_t sub_100663858()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 464);
  v4 = *(_QWORD *)(*v0 + 448);
  v3 = *(_QWORD *)(*v0 + 456);
  swift_task_dealloc(*(_QWORD *)(*v0 + 472));
  swift_bridgeObjectRelease(v4);
  swift_release(v3);
  swift_task_dealloc(v2);
  return swift_task_switch(sub_1006638C8, *(_QWORD *)(v1 + 432), *(_QWORD *)(v1 + 440));
}

uint64_t sub_1006638C8()
{
  _QWORD *v0;

  swift_release(v0[53]);
  return swift_task_switch(sub_100663900, v0[50], v0[51]);
}

uint64_t sub_100663900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 376);
  v19 = v2;
  v3 = *(_QWORD *)(v0 + 352);
  v18 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 320);
  swift_release(*(_QWORD *)(v0 + 392));
  v5 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 1, 1, v5);
  sub_100664A44(v4, v1);
  sub_1001EB84C(v0 + 64, v0 + 16);
  v6 = sub_10002E418(v0 + 160, v0 + 280);
  v7 = static MainActor.shared.getter(v6);
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = (v18 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 55) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject(&unk_10091A578, v11 + 40, v8 | 7);
  *(_QWORD *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = &protocol witness table for MainActor;
  sub_100664B68(v1, v12 + v9);
  sub_1001EB834((__int128 *)(v0 + 16), (_OWORD *)(v12 + v10));
  sub_100022840((__int128 *)(v0 + 280), v12 + v11);
  v13 = sub_100488750(v19, (uint64_t)&unk_1009F30F0, v12);
  swift_release(v13);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 160));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 64));
  v14 = *(_QWORD *)(v0 + 368);
  v15 = *(_QWORD *)(v0 + 344);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v14);
  v16 = swift_task_dealloc(v15);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v16);
}

uint64_t sub_100663A74()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t);
  char *v22;
  uint64_t ThisActionItem;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  Class isa;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71;

  v1 = v0;
  v2 = type metadata accessor for FigaroClickEvent.TargetType(0);
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  __chkstk_darwin(v2);
  v64 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FigaroClickEvent.Location.Type(0);
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  __chkstk_darwin(v4);
  v58 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FigaroActionType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = type metadata accessor for FigaroClickEvent.ActionContext(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FigaroClickEvent(0);
  v60 = *(_QWORD *)(v14 - 8);
  v61 = v14;
  __chkstk_darwin(v14);
  v59 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v0[3];
  v16 = v0[4];
  sub_10003F198(v0, v17);
  result = dispatch thunk of ContextActionDataProtocol.supportsSuggestionContextMenu.getter(v17, v16);
  if ((result & 1) != 0)
  {
    v19 = v0[3];
    v20 = v1[4];
    sub_10003F198(v1, v1[3]);
    ContextActionDataProtocol.selectionMode.getter(&v65, v19, v20);
    if (v68 == 1)
    {
      return sub_1001EB7C0((uint64_t)&v65);
    }
    else
    {
      sub_100022840(&v65, (uint64_t)v69);
      v21 = *(void (**)(char *, _QWORD, uint64_t))(v11 + 104);
      v22 = v13;
      v21(v13, enum case for FigaroClickEvent.ActionContext.actionSheet(_:), v10);
      ThisActionItem = type metadata accessor for ReadThisActionItem(0);
      *v9 = ContextActionType.rawValue.getter();
      v9[1] = v24;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for FigaroActionType.custom(_:), v6);
      v25 = sub_10004CFD4(&qword_1009E8860);
      v26 = type metadata accessor for FigaroClickEvent.Location(0);
      v27 = swift_allocObject(v25, ((*(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72), *(unsigned __int8 *)(*(_QWORD *)(v26 - 8) + 80) | 7);
      *(_OWORD *)(v27 + 16) = xmmword_10070CCA0;
      v28 = v70;
      v29 = v71;
      sub_10003F198(v69, v70);
      v55 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v28, v29);
      v54 = v30;
      v31 = sub_100008DB0((unint64_t *)&unk_1009CEC80, type metadata accessor for ReadThisActionItem, (uint64_t)&unk_1007375E8);
      v53 = ContextActionItem.title.getter(ThisActionItem, v31);
      v52 = v32;
      v33 = v1[14];
      v34 = v1[15];
      sub_10003F198(v1 + 11, v33);
      v66 = ThisActionItem;
      v67 = v31;
      v35 = sub_1000257F8(&v65);
      sub_100664A44((uint64_t)v1, (uint64_t)v35);
      v36 = dispatch thunk of FigaroProviding.contextMenuActionPosition(for:)(&v65, v33, v34);
      _s5Books15CurrentPageViewVwxx_0(&v65);
      v37 = v58;
      (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v58, enum case for FigaroClickEvent.Location.Type.button(_:), v57);
      FigaroClickEvent.Location.init(adamId:name:locationPosition:locationType:)(v55, v54, v53, v52, v36, v37);
      v38 = v70;
      v39 = v71;
      sub_10003F198(v69, v70);
      v40 = dispatch thunk of ContextAssetInfoProtocol.assetId.getter(v38, v39);
      v42 = v41;
      v43 = v64;
      (*(void (**)(char *, _QWORD, uint64_t))(v62 + 104))(v64, enum case for FigaroClickEvent.TargetType.readThis(_:), v63);
      v44 = sub_1004F6E50((uint64_t)_swiftEmptyArrayStorage);
      v45 = v59;
      FigaroClickEvent.init(actionContext:actionDetails:actionType:actionURLString:locations:targetId:targetType:)(v22, v44, v9, 0, 0, v27, v40, v42, v43);
      v46 = sub_100008DB0(&qword_1009D7C20, (uint64_t (*)(uint64_t))&type metadata accessor for FigaroClickEvent, (uint64_t)&protocol conformance descriptor for FigaroClickEvent);
      v47 = v61;
      v48 = FigaroEventBuilding.build()(v61, v46);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v47);
      v49 = (void *)objc_opt_self(JSAApplication);
      type metadata accessor for FigaroKey(0);
      sub_100008DB0(&qword_1009D05A8, (uint64_t (*)(uint64_t))type metadata accessor for FigaroKey, (uint64_t)&unk_10070DDC4);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v49, "recordNativeEvent:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

      return _s5Books15CurrentPageViewVwxx_0(v69);
    }
  }
  return result;
}

uint64_t sub_100663F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  v7 = sub_10004CFD4(&qword_1009D76B0);
  v6[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PageData(0);
  v6[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActionOrigin.Kind(0);
  v6[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v6[15] = v10;
  v6[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActionOrigin(0);
  v6[17] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v6[18] = v12;
  v6[19] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for MainActor(0);
  v6[20] = static MainActor.shared.getter(v13);
  v14 = dispatch thunk of Actor.unownedExecutor.getter(v13, &protocol witness table for MainActor);
  v6[21] = v14;
  v6[22] = v15;
  return swift_task_switch(sub_100664048, v14, v15);
}

uint64_t sub_100664048()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  __int128 v15;

  v1 = *(void **)(*(_QWORD *)(v0 + 72) + 80);
  *(_QWORD *)(v0 + 184) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 128);
    v3 = *(_QWORD **)(v0 + 80);
    (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 104))(v2, enum case for ActionOrigin.Kind.lockup(_:), *(_QWORD *)(v0 + 112));
    v4 = v1;
    ActionOrigin.init(sectionID:sectionName:contentID:kind:seriesID:genreID:collectionID:authorID:flowcaseID:brickID:)(0x7464616572657669, 0xEB00000000736968, 0, 0, 0, 0, v2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
    v15 = *(_OWORD *)(v3 + 3);
    v5 = v3[3];
    v6 = sub_10003F198(v3, v5);
    *(_OWORD *)(v0 + 40) = v15;
    v7 = sub_1000257F8((_QWORD *)(v0 + 16));
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(v7, v6, v5);
    v8 = (_QWORD *)swift_task_alloc(dword_1009F30FC);
    *(_QWORD *)(v0 + 192) = v8;
    *v8 = v0;
    v8[1] = sub_1006641D8;
    v9 = *(_QWORD *)(v0 + 72);
    v8[18] = v0 + 16;
    v8[19] = v9;
    return swift_task_switch(sub_10066452C, 0, 0);
  }
  else
  {
    swift_release(*(_QWORD *)(v0 + 160));
    v11 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 96);
    v12 = *(_QWORD *)(v0 + 104);
    swift_task_dealloc(*(_QWORD *)(v0 + 152));
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    v14 = swift_task_dealloc(v13);
    return (*(uint64_t (**)(__n128))(v0 + 8))(v14);
  }
}

uint64_t sub_1006641D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 192);
  *(_QWORD *)(*(_QWORD *)v2 + 200) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = v4[21];
    v7 = v4[22];
    v8 = sub_100664478;
  }
  else
  {
    v4[26] = a1;
    _s5Books15CurrentPageViewVwxx_0(v4 + 2);
    v6 = v4[21];
    v7 = v4[22];
    v8 = sub_100664254;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_100664254()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  double v13;
  uint64_t ThisRootView;
  uint64_t v15;
  uint64_t OpaqueTypeConformance2;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  id v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(void **)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 152);
  v28 = v3;
  v5 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD **)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 160));
  v26 = v2;
  swift_retain(v1);
  PageData.init(pageID:pageType:)(0, 0xE000000000000000, 0xD000000000000010, 0x80000001007DA440);
  v27 = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, v3, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v7, 0, 1, v5);
  v10 = swift_task_alloc(32);
  *(_QWORD *)(v10 + 16) = v8;
  v11 = objc_allocWithZone((Class)type metadata accessor for AutoSizingSheetHostingController(0));
  v12 = sub_10004CFD4(&qword_1009F3100);
  ThisRootView = type metadata accessor for IveReadThisRootView(255, v13);
  v15 = sub_100008DB0(&qword_1009F3108, (uint64_t (*)(uint64_t))&type metadata accessor for IveReadThisRootView, (uint64_t)&protocol conformance descriptor for IveReadThisRootView);
  *(_QWORD *)(v0 + 56) = ThisRootView;
  *(_QWORD *)(v0 + 64) = v15;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(v0 + 56, &opaque type descriptor for <<opaque return type of View.restrictedDynamicTypeSize(min:max:)>>, 1);
  v17 = (void *)AutoSizingSheetHostingController.init<A>(idealWidth:shouldShowCloseButton:objectGraph:parentTracker:trackerName:pageData:origin:shouldReportFigaro:rootView:)(0, 1, 1, v1, v26, 0x694673416B72614DLL, 0xEE0064656873696ELL, v6, v7, 0, sub_100664C60, v10, v12, OpaqueTypeConformance2);
  swift_task_dealloc(v10);
  v18 = v9[8];
  v19 = v9[9];
  sub_10003F198(v9 + 5, v18);
  dispatch thunk of ContextMenuPresentationContextProtocol.present(_:animated:)(v17, 1, v18, v19);

  v20 = swift_release(v1);
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v28, v27, v20);
  v21 = *(_QWORD *)(v0 + 128);
  v23 = *(_QWORD *)(v0 + 96);
  v22 = *(_QWORD *)(v0 + 104);
  swift_task_dealloc(*(_QWORD *)(v0 + 152));
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  v24 = swift_task_dealloc(v23);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v24);
}

uint64_t sub_100664478()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;

  v1 = *(void **)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 104);
  swift_release(*(_QWORD *)(v0 + 160));

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + 16));
  swift_task_dealloc(v2);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  v8 = swift_task_dealloc(v7);
  return (*(uint64_t (**)(__n128))(v0 + 8))(v8);
}

uint64_t sub_100664514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = v1;
  return swift_task_switch(sub_10066452C, 0, 0);
}

uint64_t sub_10066452C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = (_QWORD *)v0[19];
  v2 = v1[8];
  v3 = v1[9];
  sub_10003F198(v1 + 5, v2);
  v0[20] = dispatch thunk of ContextMenuPresentationContextProtocol.objectGraph.getter(v2, v3);
  v4 = (_QWORD *)swift_task_alloc(async function pointer to BaseObjectGraph.withSyncDependenciesForSwiftUI.getter[1]);
  v0[21] = v4;
  *v4 = v0;
  v4[1] = sub_1006645A8;
  return BaseObjectGraph.withSyncDependenciesForSwiftUI.getter();
}

uint64_t sub_1006645A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 168);
  *(_QWORD *)(*v2 + 176) = v1;
  swift_task_dealloc(v5);
  if (v1)
  {
    v6 = sub_1006647C8;
  }
  else
  {
    *(_QWORD *)(v4 + 184) = a1;
    v6 = sub_10066461C;
  }
  return swift_task_switch(v6, 0, 0);
}

uint64_t sub_10066461C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v13;
  uint64_t v14;

  v14 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 144);
  swift_release(*(_QWORD *)(v0 + 160));
  v2 = sub_10004CFD4(&qword_1009F3110);
  v3 = *(_QWORD *)(type metadata accessor for Dependency(0) - 8);
  v4 = swift_allocObject(v2, ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ 3 * *(_QWORD *)(v3 + 72), *(unsigned __int8 *)(v3 + 80) | 7);
  *(_OWORD *)(v4 + 16) = xmmword_100712B60;
  v5 = sub_10004CFD4(&qword_1009D2848);
  sub_10002E418(v1 + 40, v0 + 16);
  Dependency.init<A>(satisfying:with:)(v5, v0 + 16, v5);
  v6 = sub_10004CFD4(&qword_1009F3118);
  sub_10002E418(v1, v0 + 56);
  Dependency.init<A>(satisfying:with:)(v6, v0 + 56, v6);
  v7 = sub_10004CFD4(&qword_1009DD4B0);
  sub_10002E418(v13, v0 + 96);
  Dependency.init<A>(satisfying:with:)(v7, v0 + 96, v7);
  *(_QWORD *)(v0 + 136) = v4;
  v8 = sub_10004CFD4(&qword_1009F3120);
  v9 = sub_100664C68();
  v10 = dispatch thunk of BaseObjectGraph.adding<A>(allDependencies:)(v0 + 136, v8, v9);
  swift_release(v14);
  v11 = swift_bridgeObjectRelease(v4);
  return (*(uint64_t (**)(uint64_t, __n128))(v0 + 8))(v10, v11);
}

uint64_t sub_1006647C8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 160));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1006647FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t ThisRootView;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _BYTE v22[40];

  v4 = sub_10004CFD4(&qword_1009E40A0);
  __chkstk_darwin(v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = __chkstk_darwin(v7);
  v10 = &v22[-v9 - 8];
  ThisRootView = type metadata accessor for IveReadThisRootView(0, v8);
  v12 = *(_QWORD *)(ThisRootView - 8);
  __chkstk_darwin(ThisRootView);
  v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10002E418(a2, (uint64_t)v22);
  v15 = swift_retain(a1);
  IveReadThisRootView.init(assetInfo:objectGraph:)(v22, a1, v15);
  v16 = type metadata accessor for DynamicTypeSize(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v18(v10, 1, 1, v16);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v17 + 104))(v6, enum case for DynamicTypeSize.accessibility3(_:), v16);
  v18(v6, 0, 1, v16);
  v19 = sub_100008DB0(&qword_1009F3108, (uint64_t (*)(uint64_t))&type metadata accessor for IveReadThisRootView, (uint64_t)&protocol conformance descriptor for IveReadThisRootView);
  View.restrictedDynamicTypeSize(min:max:)(v10, v6, ThisRootView, v19);
  sub_100010960((uint64_t)v6, &qword_1009E40A0);
  sub_100010960((uint64_t)v10, &qword_1009E40A0);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, ThisRootView);
}

uint64_t sub_1006649B8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1009F30E4);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_10000AE34;
  return sub_100663450();
}

uint64_t sub_100664A00()
{
  id *v0;

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100664A44(uint64_t a1, uint64_t a2)
{
  uint64_t ThisActionItem;

  ThisActionItem = type metadata accessor for ReadThisActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ThisActionItem - 8) + 16))(a2, a1, ThisActionItem);
  return a2;
}

uint64_t sub_100664A88()
{
  uint64_t v0;
  uint64_t ThisActionItem;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  ThisActionItem = type metadata accessor for ReadThisActionItem(0);
  v2 = *(_QWORD *)(ThisActionItem - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 55) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v8 = v0 + v4;
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)v8);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v8 + 40));

  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v8 + 88));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v8 + 128));
  v9 = v8 + *(int *)(ThisActionItem + 36);
  v10 = type metadata accessor for ContextActionType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + v6));
  _s5Books15CurrentPageViewVwxx_0((_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 40, v5);
}

uint64_t sub_100664B68(uint64_t a1, uint64_t a2)
{
  uint64_t ThisActionItem;

  ThisActionItem = type metadata accessor for ReadThisActionItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(ThisActionItem - 8) + 32))(a2, a1, ThisActionItem);
  return a2;
}

uint64_t sub_100664BAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for ReadThisActionItem(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v1 + v5;
  v10 = v1 + v6;
  v11 = v1 + ((v6 + 55) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)swift_task_alloc(dword_1009F30EC);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_10000AE34;
  return sub_100663F44(a1, v7, v8, v9, v10, v11);
}

uint64_t sub_100664C60(uint64_t a1)
{
  uint64_t v1;

  return sub_1006647FC(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_100664C68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F3128;
  if (!qword_1009F3128)
  {
    v1 = sub_100030B74(&qword_1009F3120);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1009F3128);
  }
  return result;
}

uint64_t _s5StateVwxx(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
}

uint64_t _s5StateVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  id v11;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  v10 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  v11 = v3;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t _s5StateVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v12);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

__n128 _s5StateVwtk(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t _s5StateVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease(v8);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  return a1;
}

uint64_t _s5StateVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 113))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5StateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 113) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s5StateVMa()
{
  return &_s5StateVN;
}

void sub_100665018()
{
  qword_1009F3130 = 0x4028000000000000;
}

void sub_100665028()
{
  qword_1009F3138 = 0x4030000000000000;
}

void sub_100665038()
{
  qword_1009F3140 = 0x4044000000000000;
}

void sub_100665048(uint64_t a1)
{
  void **v1;
  void **v2;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  char v13;
  Swift::UInt v14;
  char v15;
  char v16;
  Swift::UInt v17;

  v2 = v1;
  v4 = *v1;
  if (*v1)
  {
    Hasher._combine(_:)(1u);
    v5 = v4;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v6 = v2[1];
  v7 = v2[2];
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(a1, v6, v7);
  swift_bridgeObjectRelease(v7);
  v8 = v2[3];
  v9 = v2[4];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease(v9);
  v10 = v2[5];
  v11 = v2[6];
  swift_bridgeObjectRetain(v11);
  String.hash(into:)(a1, v10, v11);
  swift_bridgeObjectRelease(v11);
  Hasher._combine(_:)((_BYTE)v2[7] & 1);
  Hasher._combine(_:)(*((_BYTE *)v2 + 57) & 1);
  v12 = *((_BYTE *)v2 + 72);
  v13 = *((_BYTE *)v2 + 73);
  v14 = (Swift::UInt)v2[10];
  Hasher._combine(_:)((_BYTE)v2[8] & 1);
  Hasher._combine(_:)(v12 & 1);
  Hasher._combine(_:)(v13 & 1);
  Hasher._combine(_:)(v14);
  v15 = *((_BYTE *)v2 + 96);
  v16 = *((_BYTE *)v2 + 97);
  v17 = (Swift::UInt)v2[13];
  Hasher._combine(_:)((_BYTE)v2[11] & 1);
  Hasher._combine(_:)(v15 & 1);
  Hasher._combine(_:)(v16 & 1);
  Hasher._combine(_:)(v17);
  Hasher._combine(_:)((_BYTE)v2[14] & 1);
}

Swift::Int sub_1006651AC()
{
  uint64_t v0;
  Swift::UInt8 v1;
  Swift::UInt v2;
  Swift::UInt v3;
  Swift::UInt v4;
  _QWORD v6[9];

  v1 = *(_BYTE *)v0;
  v2 = *(unsigned __int8 *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 9);
  v4 = *(_QWORD *)(v0 + 16);
  Hasher.init(_seed:)(v6, 0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

void sub_100665230()
{
  uint64_t v0;
  Swift::UInt v1;
  Swift::UInt v2;
  Swift::UInt v3;

  v1 = *(unsigned __int8 *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 9);
  v3 = *(_QWORD *)(v0 + 16);
  Hasher._combine(_:)(*(_BYTE *)v0);
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
}

Swift::Int sub_10066528C(uint64_t a1)
{
  uint64_t v1;
  Swift::UInt8 v2;
  Swift::UInt v3;
  Swift::UInt v4;
  Swift::UInt v5;
  _QWORD v7[9];

  v2 = *(_BYTE *)v1;
  v3 = *(unsigned __int8 *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 9);
  v5 = *(_QWORD *)(v1 + 16);
  Hasher.init(_seed:)(v7, a1);
  Hasher._combine(_:)(v2);
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(v4);
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

uint64_t sub_10066530C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    return (*((_QWORD *)a1 + 2) == *((_QWORD *)a2 + 2)) & ~(a2[8] ^ a1[8] | a2[9] ^ a1[9]);
  else
    return 0;
}

Swift::Int sub_100665358()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100665048((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100665398(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100665048((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1006653D0(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[7];
  char v13;
  _OWORD v14[7];
  char v15;

  v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  v13 = *(_BYTE *)(a1 + 112);
  v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v15 = *((_BYTE *)a2 + 112);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return sub_100665498((uint64_t)v12, (uint64_t)v14) & 1;
}

unint64_t sub_100665454()
{
  unint64_t result;

  result = qword_1009F3148;
  if (!qword_1009F3148)
  {
    result = swift_getWitnessTable(&unk_100737690, &_s5StateVN);
    atomic_store(result, (unint64_t *)&qword_1009F3148);
  }
  return result;
}

uint64_t sub_100665498(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1)
  {
    if (!v5)
      goto LABEL_27;
    sub_10066564C();
    v6 = v5;
    v7 = v4;
    v8 = static NSObject.== infix(_:_:)(v7, v6);

    if ((v8 & 1) == 0)
      goto LABEL_27;
  }
  else if (v5)
  {
LABEL_27:
    v15 = 0;
    return v15 & 1;
  }
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)(a2 + 16);
  v13 = v9 == v11 && v10 == v12;
  if (v13 || (v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, v11, v12, 0), v15 = 0, (v14 & 1) != 0))
  {
    v16 = *(_QWORD *)(a1 + 24);
    v17 = *(_QWORD *)(a1 + 32);
    v18 = *(_QWORD *)(a2 + 24);
    v19 = *(_QWORD *)(a2 + 32);
    v20 = v16 == v18 && v17 == v19;
    if (v20 || (v21 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 0), v15 = 0, (v21 & 1) != 0))
    {
      if ((v22 = *(_QWORD *)(a1 + 40),
            v23 = *(_QWORD *)(a1 + 48),
            v24 = *(_QWORD *)(a2 + 40),
            v25 = *(_QWORD *)(a2 + 48),
            v22 == v24)
        && v23 == v25
        || (v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v23, v24, v25, 0), v15 = 0, (v26 & 1) != 0))
      {
        if (((*(unsigned __int8 *)(a1 + 56) ^ *(unsigned __int8 *)(a2 + 56)) & 1) != 0
          || ((*(unsigned __int8 *)(a1 + 57) ^ *(unsigned __int8 *)(a2 + 57)) & 1) != 0
          || ((*(unsigned __int8 *)(a1 + 64) ^ *(unsigned __int8 *)(a2 + 64)) & 1) != 0
          || ((*(unsigned __int8 *)(a1 + 72) ^ *(unsigned __int8 *)(a2 + 72)) & 1) != 0)
        {
          goto LABEL_27;
        }
        v15 = 0;
        if (((*(unsigned __int8 *)(a1 + 73) ^ *(unsigned __int8 *)(a2 + 73)) & 1) == 0
          && *(_QWORD *)(a1 + 80) == *(_QWORD *)(a2 + 80))
        {
          if (((*(unsigned __int8 *)(a1 + 88) ^ *(unsigned __int8 *)(a2 + 88)) & 1) != 0
            || ((*(unsigned __int8 *)(a1 + 96) ^ *(unsigned __int8 *)(a2 + 96)) & 1) != 0)
          {
            goto LABEL_27;
          }
          v15 = 0;
          if (((*(unsigned __int8 *)(a1 + 97) ^ *(unsigned __int8 *)(a2 + 97)) & 1) == 0
            && *(_QWORD *)(a1 + 104) == *(_QWORD *)(a2 + 104))
          {
            v15 = ((*(_BYTE *)(a1 + 112) & 1) == 0) ^ *(_BYTE *)(a2 + 112);
          }
        }
      }
    }
  }
  return v15 & 1;
}

unint64_t sub_10066564C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009DA818;
  if (!qword_1009DA818)
  {
    v1 = objc_opt_self(UIImage);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1009DA818);
  }
  return result;
}

id sub_100665688()
{
  return sub_1006656AC((void **)&UIFontTextStyleBody);
}

id sub_100665694()
{
  return sub_1006656AC((void **)&UIFontTextStyleTitle3);
}

id sub_1006656A0()
{
  return sub_1006656AC((void **)&UIFontTextStyleTitle1);
}

id sub_1006656AC(void **a1)
{
  void *v1;
  void *v2;
  id v3;
  NSString *v4;
  id v5;
  id v6;
  void *v7;
  id v8;

  v1 = *a1;
  v2 = (void *)objc_opt_self(UITraitCollection);
  v3 = v1;
  v4 = UIContentSizeCategoryLarge;
  v5 = objc_msgSend(v2, "traitCollectionWithPreferredContentSizeCategory:", v4);
  v6 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:compatibleWithTraitCollection:", v3, v5);
  v7 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  objc_msgSend(v6, "pointSize");
  v8 = objc_msgSend(v7, "configurationWithPointSize:weight:scale:", 6, 3);

  return v8;
}

uint64_t _s5StateV9SkipStateVwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[24])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s5StateV9SkipStateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *_s5StateV9SkipStateVMa()
{
  return &_s5StateV9SkipStateVN;
}

unint64_t sub_100665854()
{
  unint64_t result;

  result = qword_1009F3150;
  if (!qword_1009F3150)
  {
    result = swift_getWitnessTable(&unk_100737704, &_s5StateV9SkipStateVN);
    atomic_store(result, (unint64_t *)&qword_1009F3150);
  }
  return result;
}

uint64_t _s29MultilineTextEditorControllerCMa(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009F3158, (uint64_t)&_s29MultilineTextEditorControllerCMn);
}

uint64_t sub_1006658AC(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 0, 0, v2, a1 + qword_100A1F0C0);
}

void sub_1006658E8()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001007B93A0, "Books/DebugViewController.MultilineTextEditor.swift", 51, 2, 31, 0);
  __break(1u);
}

void sub_100665940()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.MultilineTextEditorController", 35, "init(rootView:)", 15, 0);
  __break(1u);
}

void sub_10066596C()
{
  _swift_stdlib_reportUnimplementedInitializer("Books.MultilineTextEditorController", 35, "init(coder:rootView:)", 21, 0);
  __break(1u);
}

uint64_t sub_100665998()
{
  return _s29MultilineTextEditorControllerCMa(0);
}

_QWORD *sub_1006659A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v9 = a2[2];
    v8 = a2[3];
    a1[2] = v9;
    a1[3] = v8;
    v10 = a2[4];
    a1[4] = v10;
    v12 = a2 + 5;
    v11 = a2[5];
    swift_bridgeObjectRetain(v7);
    swift_retain(v9);
    swift_bridgeObjectRetain(v10);
    if (v11)
    {
      v13 = a2[6];
      a1[5] = v11;
      a1[6] = v13;
      swift_retain(v13);
    }
    else
    {
      *(_OWORD *)(a1 + 5) = *v12;
    }
    v15 = a2[8];
    a1[7] = a2[7];
    a1[8] = v15;
    v16 = *(int *)(a3 + 32);
    v17 = (_QWORD *)((char *)a1 + v16);
    v18 = (_QWORD *)((char *)a2 + v16);
    swift_retain(v15);
    v19 = sub_10004CFD4(&qword_1009D57D8);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v17, v18, v20);
      v21 = v17;
      v22 = v19;
      v23 = 1;
    }
    else
    {
      v24 = *v18;
      *v17 = *v18;
      swift_retain(v24);
      v21 = v17;
      v22 = v19;
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v21, v22, v23);
  }
  return a1;
}

double sub_100665AE8(_QWORD *a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  double result;

  swift_bridgeObjectRelease(a1[1]);
  swift_release(a1[2]);
  swift_bridgeObjectRelease(a1[4]);
  if (a1[5])
    swift_release(a1[6]);
  swift_release(a1[8]);
  v4 = (_QWORD *)((char *)a1 + *(int *)(a2 + 32));
  v5 = sub_10004CFD4(&qword_1009D57D8);
  if (swift_getEnumCaseMultiPayload(v4, v5) == 1)
  {
    v6 = type metadata accessor for DismissAction(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  else
  {
    *(_QWORD *)&result = swift_release(*v4).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100665B88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v8 = a2[2];
  v7 = a2[3];
  a1[2] = v8;
  a1[3] = v7;
  v9 = a2[4];
  a1[4] = v9;
  v11 = a2 + 5;
  v10 = a2[5];
  swift_bridgeObjectRetain(v6);
  swift_retain(v8);
  swift_bridgeObjectRetain(v9);
  if (v10)
  {
    v12 = a2[6];
    a1[5] = v10;
    a1[6] = v12;
    swift_retain(v12);
  }
  else
  {
    *(_OWORD *)(a1 + 5) = *v11;
  }
  v13 = a2[8];
  a1[7] = a2[7];
  a1[8] = v13;
  v14 = *(int *)(a3 + 32);
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  swift_retain(v13);
  v17 = sub_10004CFD4(&qword_1009D57D8);
  if (swift_getEnumCaseMultiPayload(v16, v17) == 1)
  {
    v18 = type metadata accessor for DismissAction(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v15, v16, v18);
    v19 = 1;
  }
  else
  {
    v20 = *v16;
    *v15 = *v16;
    swift_retain(v20);
    v19 = 0;
  }
  swift_storeEnumTagMultiPayload(v15, v17, v19);
  return a1;
}

_QWORD *sub_100665C9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a1[2];
  v9 = a2[2];
  a1[2] = v9;
  swift_retain(v9);
  swift_release(v8);
  a1[3] = a2[3];
  v10 = a2[4];
  v11 = a1[4];
  a1[4] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  v12 = a2[5];
  if (a1[5])
  {
    if (v12)
    {
      v13 = a2[6];
      v14 = a1[6];
      a1[5] = v12;
      a1[6] = v13;
      swift_retain(v13);
      swift_release(v14);
      goto LABEL_8;
    }
    swift_release(a1[6]);
  }
  else if (v12)
  {
    v15 = a2[6];
    a1[5] = v12;
    a1[6] = v15;
    swift_retain(v15);
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
LABEL_8:
  v16 = a2[8];
  v17 = a1[8];
  a1[7] = a2[7];
  a1[8] = v16;
  swift_retain(v16);
  swift_release(v17);
  if (a1 != a2)
  {
    v18 = *(int *)(a3 + 32);
    v19 = (_QWORD *)((char *)a1 + v18);
    v20 = (_QWORD *)((char *)a2 + v18);
    sub_100010960((uint64_t)a1 + v18, &qword_1009D57D8);
    v21 = sub_10004CFD4(&qword_1009D57D8);
    if (swift_getEnumCaseMultiPayload(v20, v21) == 1)
    {
      v22 = type metadata accessor for DismissAction(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v19, v20, v22);
      v23 = 1;
    }
    else
    {
      v24 = *v20;
      *v19 = *v20;
      swift_retain(v24);
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v19, v21, v23);
  }
  return a1;
}

uint64_t sub_100665E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v4;
    *(_QWORD *)(a1 + 48) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v6 = *(int *)(a3 + 32);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_10004CFD4(&qword_1009D57D8);
  if (swift_getEnumCaseMultiPayload(v8, v9) == 1)
  {
    v10 = type metadata accessor for DismissAction(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload(v7, v9, 1);
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100665F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release(v8);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v9;
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40))
  {
    if (v11)
    {
      v12 = *(_QWORD *)(a2 + 48);
      v13 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v12;
      swift_release(v13);
      goto LABEL_8;
    }
    swift_release(*(_QWORD *)(a1 + 48));
  }
  else if (v11)
  {
    v14 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v14;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
LABEL_8:
  v15 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release(v15);
  if (a1 != a2)
  {
    v16 = *(int *)(a3 + 32);
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_100010960(a1 + v16, &qword_1009D57D8);
    v19 = sub_10004CFD4(&qword_1009D57D8);
    if (swift_getEnumCaseMultiPayload(v18, v19) == 1)
    {
      v20 = type metadata accessor for DismissAction(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload(v17, v19, 1);
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100666060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10066606C);
}

uint64_t sub_10066606C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_10004CFD4(&qword_1009F31A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t sub_1006660EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006660F8);
}

uint64_t sub_1006660F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_10004CFD4(&qword_1009F31A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

uint64_t _s23MultilineTextEditorViewVMa(uint64_t a1)
{
  return sub_10002C92C(a1, (uint64_t *)&unk_1009F3208, (uint64_t)&_s23MultilineTextEditorViewVMn);
}

void sub_100666184(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_1007377E8;
  v4[1] = &unk_100737800;
  v4[2] = &unk_100737818;
  v4[3] = (char *)&value witness table for () + 64;
  sub_100666218(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 5, v4, a1 + 16);
  }
}

void sub_100666218(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009F3218)
  {
    v2 = type metadata accessor for DismissAction(255);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009F3218);
  }
}

uint64_t sub_10066626C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087B8CC, 1);
}

uint64_t sub_10066627C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  __n128 v20;
  char v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE v25[24];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = sub_10004CFD4(&qword_1009F3258);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_10004CFD4(&qword_1009F3260);
  __chkstk_darwin(v7);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v13 = &v25[-v12];
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 40);
  if (v14)
  {
    v15 = *(_QWORD *)(v1 + 16);
    *(_OWORD *)&v25[8] = *(_OWORD *)v1;
    v26 = v15;
    sub_10004CFD4(&qword_1009F4190);
    State.wrappedValue.getter(&v27);
    v16 = v28;
    v17 = v14(v27, v28);
    swift_bridgeObjectRelease(v16);
    v18 = v17 & 1;
  }
  else
  {
    v18 = 2;
  }
  *(_QWORD *)v6 = static HorizontalAlignment.leading.getter(v11);
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v19 = sub_10004CFD4(&qword_1009F3268);
  sub_100666494(v18, v2, (uint64_t)&v6[*(int *)(v19 + 44)]);
  v21 = static Edge.Set.all.getter(v20);
  sub_10000B5E4((uint64_t)v6, (uint64_t)v9, &qword_1009F3258);
  v22 = &v9[*(int *)(v7 + 36)];
  *v22 = v21;
  *(_OWORD *)(v22 + 8) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  v22[40] = 1;
  sub_100010960((uint64_t)v6, &qword_1009F3258);
  sub_100025B3C((uint64_t)v9, (uint64_t)v13, &qword_1009F3260);
  sub_10000B5E4((uint64_t)v13, (uint64_t)v9, &qword_1009F3260);
  sub_10000B5E4((uint64_t)v9, a1, &qword_1009F3260);
  v23 = a1 + *(int *)(sub_10004CFD4(&qword_1009F3270) + 48);
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  sub_100010960((uint64_t)v13, &qword_1009F3260);
  return sub_100010960((uint64_t)v9, &qword_1009F3260);
}

uint64_t sub_100666494@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t OpaqueTypeConformance2;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75[16];
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  unint64_t v81;

  v74 = a3;
  v5 = _s23MultilineTextEditorViewVMa(0);
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v72 = *(_QWORD *)(v5 - 8);
  v73 = v6;
  __chkstk_darwin(v5);
  v70 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for RoundedBorderTextFieldStyle(0);
  v64 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009F3278);
  v59 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10004CFD4(&qword_1009F3280);
  v61 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_10004CFD4(&qword_1009F3288);
  v71 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v58 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_10004CFD4(&qword_1009F3290);
  v68 = *(_QWORD *)(v16 - 8);
  v69 = v16;
  __chkstk_darwin(v16);
  v63 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v66 = (char *)&v57 - v19;
  v20 = sub_10004CFD4(&qword_1009F3298);
  __chkstk_darwin(v20);
  v65 = (uint64_t)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v57 - v23;
  *(_QWORD *)v24 = static VerticalAlignment.center.getter(v25);
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = 1;
  v26 = sub_10004CFD4(&qword_1009F32A0);
  sub_100666A40(a1, a2, (uint64_t *)&v24[*(int *)(v26 + 44)]);
  v27 = *(_QWORD *)(a2 + 16);
  v77 = *(_OWORD *)a2;
  v78 = v27;
  sub_10004CFD4(&qword_1009F4190);
  State.projectedValue.getter(&v79);
  v76 = a2;
  v56 = 1;
  TextField.init(text:prompt:axis:label:)(v79, *((_QWORD *)&v79 + 1), v80, v81, 0, 0, 0, 0, v56, sub_100667934, v75, &type metadata for Text, &protocol witness table for Text);
  v28 = sub_100030B34(&qword_1009F32A8, &qword_1009F3278, (uint64_t)&protocol conformance descriptor for TextField<A>);
  View.disableAutocorrection(_:)(1, v10, v28);
  v29 = (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v12, v10);
  RoundedBorderTextFieldStyle.init()(v29);
  *(_QWORD *)&v79 = v10;
  *((_QWORD *)&v79 + 1) = v28;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2(&v79, &opaque type descriptor for <<opaque return type of View.disableAutocorrection(_:)>>, 1);
  v31 = sub_100667954();
  v32 = v60;
  v33 = v62;
  View.textFieldStyle<A>(_:)(v9, v60, v62, OpaqueTypeConformance2, v31);
  v34 = v9;
  v35 = v33;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v34, v33);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v14, v32);
  v36 = *(_QWORD *)(a2 + 16);
  v79 = *(_OWORD *)a2;
  v80 = v36;
  State.wrappedValue.getter(&v77);
  v37 = v70;
  sub_10002CD84(a2, v70, _s23MultilineTextEditorViewVMa);
  v38 = *(unsigned __int8 *)(v72 + 80);
  v39 = (v38 + 16) & ~v38;
  v40 = swift_allocObject(&unk_10091A788, v39 + v73, v38 | 7);
  sub_10002C960(v37, v40 + v39, _s23MultilineTextEditorViewVMa);
  *(_QWORD *)&v79 = v32;
  *((_QWORD *)&v79 + 1) = v35;
  v80 = OpaqueTypeConformance2;
  v81 = v31;
  v41 = swift_getOpaqueTypeConformance2(&v79, &opaque type descriptor for <<opaque return type of View.textFieldStyle<A>(_:)>>, 1);
  v42 = v63;
  v43 = v67;
  v44 = v58;
  View.onChange<A>(of:initial:_:)(&v77, 0, sub_1006679A0, v40, v67, &type metadata for String, v41, &protocol witness table for String);
  swift_release(v40);
  v45 = swift_bridgeObjectRelease(*((_QWORD *)&v77 + 1));
  (*(void (**)(char *, uint64_t, __n128))(v71 + 8))(v44, v43, v45);
  v46 = v68;
  v47 = v69;
  v48 = v66;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v66, v42, v69);
  v49 = v65;
  sub_10000B5E4((uint64_t)v24, v65, &qword_1009F3298);
  v50 = *(void (**)(char *, char *, uint64_t))(v46 + 16);
  v51 = v46;
  v50(v42, v48, v47);
  v52 = v74;
  sub_10000B5E4(v49, v74, &qword_1009F3298);
  v53 = sub_10004CFD4(&qword_1009F32B8);
  v50((char *)(v52 + *(int *)(v53 + 48)), v42, v47);
  v54 = *(void (**)(char *, uint64_t))(v51 + 8);
  v54(v48, v47);
  sub_100010960((uint64_t)v24, &qword_1009F3298);
  v54(v42, v47);
  return sub_100010960(v49, &qword_1009F3298);
}

void sub_100666A40(int a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  BOOL v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t KeyPath;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  double v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  int *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  void (*v135)(char *, uint64_t, uint64_t);
  uint64_t v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(char *, char *, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _BOOL4 v145;
  _BOOL4 v146;
  _QWORD *v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  __int128 v170;
  uint64_t v171;
  unsigned __int8 v172;
  uint64_t v173;
  uint64_t v174;

  v128 = a2;
  LODWORD(v148) = a1;
  v156 = a3;
  LODWORD(v149) = a1;
  v4 = type metadata accessor for Capsule(0);
  __chkstk_darwin(v4);
  v160 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s23MultilineTextEditorViewVMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_10004CFD4(&qword_1009D8460);
  v140 = *(_QWORD *)(v158 - 8);
  __chkstk_darwin(v158);
  v157 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_10004CFD4(&qword_1009F32C0);
  __chkstk_darwin(v161);
  v12 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_10004CFD4(&qword_1009F32C8);
  __chkstk_darwin(v162);
  v14 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = sub_10004CFD4(&qword_1009F32D0);
  __chkstk_darwin(v164);
  v16 = (char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_10004CFD4(&qword_1009F32D8);
  __chkstk_darwin(v163);
  v18 = (char *)&v128 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_10004CFD4(&qword_1009F32E0);
  __chkstk_darwin(v165);
  v151 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v128 - v21;
  v166 = sub_10004CFD4(&qword_1009F32E8);
  __chkstk_darwin(v166);
  v153 = (uint64_t)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v128 - v25;
  v167 = sub_10004CFD4(&qword_1009F32F0);
  __chkstk_darwin(v167);
  v155 = (uint64_t)&v128 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v154 = (uint64_t)&v128 - v29;
  __chkstk_darwin(v30);
  v150 = (uint64_t)&v128 - v31;
  __chkstk_darwin(v32);
  v152 = (uint64_t)&v128 - v33;
  __chkstk_darwin(v34);
  v139 = (uint64_t)&v128 - v35;
  __chkstk_darwin(v36);
  v159 = (uint64_t)&v128 - v37;
  v146 = (v148 & 1) == 0;
  v38 = 0x756C615620859CE2;
  if ((v148 & 1) == 0)
    v38 = 0x1000000000000014;
  v39 = 0x80000001007DB270;
  if ((v148 & 1) != 0)
    v39 = 0xAF4B4F2073692065;
  v40 = (_DWORD)v149 == 2;
  v145 = v149 != 2;
  if ((_DWORD)v149 == 2)
    v38 = 0;
  v149 = v38;
  if (v40)
    v39 = 0;
  v148 = v39;
  v41 = _swiftEmptyArrayStorage;
  if (v40)
    v41 = 0;
  v147 = v41;
  v138 = (uint64_t)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002CD84(a2, v138, _s23MultilineTextEditorViewVMa);
  v42 = *(unsigned __int8 *)(v7 + 80);
  v143 = ((v42 + 16) & ~v42) + v8;
  v43 = (v42 + 16) & ~v42;
  v144 = v43;
  v142 = v42 | 7;
  v44 = swift_allocObject(&unk_10091A7B0, v143, v42 | 7);
  sub_10002C960((uint64_t)v9, v44 + v43, _s23MultilineTextEditorViewVMa);
  v45 = v157;
  v46 = Button.init(action:label:)(sub_100667A14, v44, sub_100667824, 0, &type metadata for Text, &protocol witness table for Text);
  LOBYTE(v44) = static Edge.Set.horizontal.getter(v46);
  v47 = v140;
  v141 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
  v48 = v158;
  v141(v12, v45, v158);
  v49 = &v12[*(int *)(v161 + 36)];
  *v49 = v44;
  *(_OWORD *)(v49 + 8) = 0u;
  *(_OWORD *)(v49 + 24) = 0u;
  v49[40] = 1;
  v140 = *(_QWORD *)(v47 + 8);
  v50 = ((uint64_t (*)(char *, uint64_t))v140)(v45, v48);
  LOBYTE(v44) = static Edge.Set.vertical.getter(v50);
  v51 = EdgeInsets.init(_all:)(2.0);
  v53 = v52;
  v55 = v54;
  v57 = v56;
  sub_10000B5E4((uint64_t)v12, (uint64_t)v14, &qword_1009F32C0);
  v58 = &v14[*(int *)(v162 + 36)];
  *v58 = v44;
  *((double *)v58 + 1) = v51;
  *((_QWORD *)v58 + 2) = v53;
  *((_QWORD *)v58 + 3) = v55;
  *((_QWORD *)v58 + 4) = v57;
  v58[40] = 0;
  sub_100010960((uint64_t)v12, &qword_1009F32C0);
  v59 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  sub_10000B5E4((uint64_t)v14, (uint64_t)v16, &qword_1009F32C8);
  *(_QWORD *)&v16[*(int *)(v164 + 36)] = v59;
  v60 = sub_100010960((uint64_t)v14, &qword_1009F32C8);
  v61 = static Color.red.getter(v60);
  LOBYTE(v48) = static Edge.Set.all.getter(v62);
  sub_10000B5E4((uint64_t)v16, (uint64_t)v18, &qword_1009F32D0);
  v63 = &v18[*(int *)(v163 + 36)];
  *(_QWORD *)v63 = v61;
  v63[8] = v48;
  sub_100010960((uint64_t)v16, &qword_1009F32D0);
  v64 = enum case for RoundedCornerStyle.continuous(_:);
  v137 = enum case for RoundedCornerStyle.continuous(_:);
  v136 = type metadata accessor for RoundedCornerStyle(0);
  v135 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 104);
  v65 = (uint64_t)v160;
  v135(v160, v64, v136);
  v66 = (uint64_t)&v22[*(int *)(v165 + 36)];
  sub_10002CD84(v65, v66, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
  v134 = sub_10004CFD4(&qword_1009D1E10);
  *(_WORD *)(v66 + *(int *)(v134 + 36)) = 256;
  sub_10000B5E4((uint64_t)v18, (uint64_t)v22, &qword_1009F32D8);
  sub_1001F597C(v65);
  sub_100010960((uint64_t)v18, &qword_1009F32D8);
  v67 = v128;
  v68 = *(_QWORD *)(v128 + 16);
  v170 = *(_OWORD *)v128;
  v171 = v68;
  sub_10004CFD4(&qword_1009F4190);
  State.wrappedValue.getter(&v168);
  v70 = v168;
  v69 = v169;
  swift_bridgeObjectRelease(v169);
  v71 = HIBYTE(v69) & 0xF;
  if ((v69 & 0x2000000000000000) == 0)
    v71 = v70 & 0xFFFFFFFFFFFFLL;
  if (v71)
    v72 = 1.0;
  else
    v72 = 0.5;
  sub_10000B5E4((uint64_t)v22, (uint64_t)v26, &qword_1009F32E0);
  *(double *)&v26[*(int *)(v166 + 36)] = v72;
  sub_100010960((uint64_t)v22, &qword_1009F32E0);
  v73 = *(_QWORD *)(v67 + 16);
  v170 = *(_OWORD *)v67;
  v171 = v73;
  State.wrappedValue.getter(&v168);
  v75 = v168;
  v74 = v169;
  swift_bridgeObjectRelease(v169);
  v76 = HIBYTE(v74) & 0xF;
  if ((v74 & 0x2000000000000000) == 0)
    v76 = v75 & 0xFFFFFFFFFFFFLL;
  v77 = v76 == 0;
  KeyPath = swift_getKeyPath(&unk_100737880);
  v79 = swift_allocObject(&unk_10091A7D8, 17, 7);
  *(_BYTE *)(v79 + 16) = v77;
  v80 = v139;
  sub_10000B5E4((uint64_t)v26, v139, &qword_1009F32E8);
  v81 = (uint64_t *)(v80 + *(int *)(v167 + 36));
  *v81 = KeyPath;
  v81[1] = (uint64_t)sub_100668F78;
  v81[2] = v79;
  sub_100010960((uint64_t)v26, &qword_1009F32E8);
  v82 = v159;
  v83 = sub_100025B3C(v80, v159, &qword_1009F32F0);
  v84 = static Alignment.center.getter(v83);
  _FrameLayout.init(width:height:alignment:)(&v170, 0x4014000000000000, 0, 0, 1, v84, v85);
  v139 = v170;
  v133 = BYTE8(v170);
  v132 = v171;
  v131 = v172;
  v130 = v173;
  v129 = v174;
  v86 = v67;
  v87 = v138;
  sub_10002CD84(v86, v138, _s23MultilineTextEditorViewVMa);
  v88 = swift_allocObject(&unk_10091A800, v143, v142);
  sub_10002C960(v87, v88 + v144, _s23MultilineTextEditorViewVMa);
  v89 = v157;
  v90 = Button.init(action:label:)(sub_100668F94, v88, sub_100667910, 0, &type metadata for Text, &protocol witness table for Text);
  LOBYTE(v88) = static Edge.Set.horizontal.getter(v90);
  v91 = v158;
  v141(v12, v89, v158);
  v92 = &v12[*(int *)(v161 + 36)];
  *v92 = v88;
  *(_OWORD *)(v92 + 8) = 0u;
  *(_OWORD *)(v92 + 24) = 0u;
  v92[40] = 1;
  v93 = ((uint64_t (*)(char *, uint64_t))v140)(v89, v91);
  LOBYTE(v88) = static Edge.Set.vertical.getter(v93);
  v94 = EdgeInsets.init(_all:)(2.0);
  v96 = v95;
  v98 = v97;
  v100 = v99;
  sub_10000B5E4((uint64_t)v12, (uint64_t)v14, &qword_1009F32C0);
  v101 = &v14[*(int *)(v162 + 36)];
  *v101 = v88;
  *((double *)v101 + 1) = v94;
  *((_QWORD *)v101 + 2) = v96;
  *((_QWORD *)v101 + 3) = v98;
  *((_QWORD *)v101 + 4) = v100;
  v101[40] = 0;
  sub_100010960((uint64_t)v12, &qword_1009F32C0);
  v102 = _s5Books11ChromeStyleC20_pageBackgroundColor33_5E35E2CA450906E5027671B98D3F72C77Combine9PublishedVy7SwiftUI0F0VGvpfi_0();
  sub_10000B5E4((uint64_t)v14, (uint64_t)v16, &qword_1009F32C8);
  *(_QWORD *)&v16[*(int *)(v164 + 36)] = v102;
  v103 = sub_100010960((uint64_t)v14, &qword_1009F32C8);
  v104 = static Color.blue.getter(v103);
  LOBYTE(v89) = static Edge.Set.all.getter(v105);
  sub_10000B5E4((uint64_t)v16, (uint64_t)v18, &qword_1009F32D0);
  v106 = &v18[*(int *)(v163 + 36)];
  *(_QWORD *)v106 = v104;
  v106[8] = (char)v89;
  sub_100010960((uint64_t)v16, &qword_1009F32D0);
  v107 = (uint64_t)v160;
  v135(v160, v137, v136);
  v108 = (uint64_t)v151;
  v109 = (uint64_t)&v151[*(int *)(v165 + 36)];
  sub_10002CD84(v107, v109, (uint64_t (*)(_QWORD))&type metadata accessor for Capsule);
  *(_WORD *)(v109 + *(int *)(v134 + 36)) = 256;
  sub_10000B5E4((uint64_t)v18, v108, &qword_1009F32D8);
  sub_1001F597C(v107);
  sub_100010960((uint64_t)v18, &qword_1009F32D8);
  v110 = v145 && v146;
  if (v145 && v146)
    v111 = 0.5;
  else
    v111 = 1.0;
  v112 = v153;
  sub_10000B5E4(v108, v153, &qword_1009F32E0);
  *(double *)(v112 + *(int *)(v166 + 36)) = v111;
  sub_100010960(v108, &qword_1009F32E0);
  v113 = swift_getKeyPath(&unk_100737880);
  v114 = swift_allocObject(&unk_10091A828, 17, 7);
  *(_BYTE *)(v114 + 16) = v110;
  v115 = v150;
  sub_10000B5E4(v112, v150, &qword_1009F32E8);
  v116 = (uint64_t *)(v115 + *(int *)(v167 + 36));
  *v116 = v113;
  v116[1] = (uint64_t)sub_100669078;
  v116[2] = v114;
  sub_100010960(v112, &qword_1009F32E8);
  v117 = v152;
  sub_100025B3C(v115, v152, &qword_1009F32F0);
  v118 = v154;
  sub_10000B5E4(v82, v154, &qword_1009F32F0);
  v119 = v155;
  sub_10000B5E4(v117, v155, &qword_1009F32F0);
  v120 = v156;
  v121 = v149;
  v122 = v148;
  *v156 = v149;
  v120[1] = v122;
  v123 = (uint64_t)v147;
  v120[2] = 0;
  v120[3] = v123;
  v120[4] = 0;
  *((_BYTE *)v120 + 40) = 1;
  v124 = v120;
  v125 = (int *)sub_10004CFD4(&qword_1009F32F8);
  sub_10000B5E4(v118, (uint64_t)v124 + v125[16], &qword_1009F32F0);
  v126 = (uint64_t)v124 + v125[20];
  *(_QWORD *)v126 = 0;
  *(_BYTE *)(v126 + 8) = 1;
  *(_QWORD *)(v126 + 16) = v139;
  *(_BYTE *)(v126 + 24) = v133;
  *(_QWORD *)(v126 + 32) = v132;
  *(_BYTE *)(v126 + 40) = v131;
  v127 = v129;
  *(_QWORD *)(v126 + 48) = v130;
  *(_QWORD *)(v126 + 56) = v127;
  sub_10000B5E4(v119, (uint64_t)v124 + v125[24], &qword_1009F32F0);
  sub_100668FEC(v121, v122, 0, v123);
  sub_100010960(v117, &qword_1009F32F0);
  sub_100010960(v159, &qword_1009F32F0);
  sub_100010960(v119, &qword_1009F32F0);
  sub_100010960(v118, &qword_1009F32F0);
  sub_10066901C(v121, v122, 0, v123);
}

double sub_1006677D0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  _QWORD v4[2];
  __int128 v5;
  uint64_t v6;

  v1 = *((_QWORD *)a1 + 2);
  v5 = *a1;
  v6 = v1;
  v4[0] = 0;
  v4[1] = 0xE000000000000000;
  v2 = sub_10004CFD4(&qword_1009F4190);
  *(_QWORD *)&result = State.wrappedValue.setter(v4, v2).n128_u64[0];
  return result;
}

double sub_100667824@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 0x7261656C43;
  *(_OWORD *)a1 = xmmword_100737770;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_100667844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = type metadata accessor for DismissAction(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23MultilineTextEditorViewVMa(0);
  sub_100667E24(&qword_1009D57D8, (uint64_t (*)(_QWORD))&type metadata accessor for DismissAction, 0x417373696D736944, 0xED00006E6F697463, (uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

double sub_100667910@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 1701736260;
  *(_OWORD *)a1 = xmmword_100737780;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_100667934@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v2 + 24);
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRetain(v3);
}

unint64_t sub_100667954()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F32B0;
  if (!qword_1009F32B0)
  {
    v1 = type metadata accessor for RoundedBorderTextFieldStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for RoundedBorderTextFieldStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1009F32B0);
  }
  return result;
}

uint64_t sub_1006679A0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t result;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s23MultilineTextEditorViewVMa(0) - 8) + 80);
  v5 = v2 + ((v4 + 16) & ~v4);
  v6 = *a2;
  v7 = a2[1];
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 40);
  if (!v8)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56))(v6, v7);
  result = v8(v6, v7);
  if ((result & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 56))(v6, v7);
  return result;
}

uint64_t sub_100667A14()
{
  return sub_100668FA0((uint64_t (*)(uint64_t))sub_1006677D0);
}

uint64_t sub_100667A20@<X0>(uint64_t a1@<X8>)
{
  return sub_100667E24((uint64_t *)&unk_1009EE650, (uint64_t (*)(_QWORD))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_100667A54(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    v8 = swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v16 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = sub_100040F58(0xD000000000000010, 0x80000001007DB3D0, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_1001F2564(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v16;
  }
  return a1;
}

uint64_t sub_100667C14(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  v8 = swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_100040F58(1819242306, 0xE400000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_1001F2564(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_100667DCC@<X0>(uint64_t a1@<X8>)
{
  return sub_100668C2C(&qword_1009D26B8, (uint64_t *)&unk_1009D8210, 0xD000000000000020, 0x80000001007DB290, a1);
}

uint64_t sub_100667DF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100667E24(&qword_1009D8790, (uint64_t (*)(_QWORD))&type metadata accessor for ContentSizeCategory, 0xD000000000000013, 0x80000001007DB390, a1);
}

uint64_t sub_100667E24@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B5E4(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload(v17, v15) == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = *v17;
    v21 = static os_log_type_t.fault.getter();
    v22 = static Log.runtimeIssuesLog.getter();
    if (os_log_type_enabled(v22, v21))
    {
      v27 = a4;
      v23 = swift_slowAlloc(12, -1);
      v28 = a5;
      v24 = (uint8_t *)v23;
      v25 = swift_slowAlloc(32, -1);
      v31 = v25;
      *(_DWORD *)v24 = 136315138;
      v30 = sub_100040F58(v29, v27, &v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v24 + 4, v24 + 12);
      _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v14, v20);
    swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_10066805C@<X0>(uint64_t a1@<X8>)
{
  return sub_100668088(&qword_1009D5038, (uint64_t (*)(_QWORD))&type metadata accessor for RoundedRectangle, 0xD000000000000010, 0x80000001007DB370, a1);
}

uint64_t sub_100668088@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B5E4(v9, (uint64_t)v17, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
  if ((_DWORD)EnumCaseMultiPayload == 1)
    return sub_10002C960((uint64_t)v17, a5, a2);
  v20 = *v17;
  v21 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
  v22 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v22, v21))
  {
    v28 = a4;
    v23 = swift_slowAlloc(12, -1);
    v29 = a5;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc(32, -1);
    v32 = v25;
    *(_DWORD *)v24 = 136315138;
    v31 = sub_100040F58(v30, v28, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32, v24 + 4, v24 + 12);
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v14, v20);
  v26 = swift_release(v20);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v26);
}

uint64_t sub_1006682B0(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = swift_retain(a1);
  if ((a2 & 1) == 0)
  {
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v17 = v13;
      *(_DWORD *)v12 = 136315138;
      v16 = sub_100040F58(0x726F6C6F43, 0xE500000000000000, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v12 + 4, v12 + 12);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    v14 = swift_release(a1);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v14);
    return v17;
  }
  return a1;
}

uint64_t sub_100668464@<X0>(uint64_t a1@<X8>)
{
  return sub_100667E24(&qword_1009D38A0, (uint64_t (*)(_QWORD))&type metadata accessor for Font.Context, 0x747865746E6F43, 0xE700000000000000, a1);
}

uint64_t sub_10066848C@<X0>(uint64_t a1@<X8>)
{
  return sub_100667E24((uint64_t *)&unk_1009D8200, (uint64_t (*)(_QWORD))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

double sub_1006684BC(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  double v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return *(double *)&a1;
  swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = *(double *)&v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_100040F58(0x74616F6C464743, 0xE700000000000000, (uint64_t *)&v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_1001F2564(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_10066867C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v17 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = v12 + 4;
      v16 = sub_100040F58(0xD000000000000011, 0x80000001007DB3F0, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v15, v12 + 12);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_100450BF4(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v17;
  }
  return a1;
}

uint64_t sub_100668850(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain(a1);
  v9 = static os_log_type_t.fault.getter(v8);
  v10 = static Log.runtimeIssuesLog.getter();
  v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v16 = v13;
    *(_DWORD *)v12 = 136315138;
    v15 = sub_100040F58(1701080909, 0xE400000000000000, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16, v12 + 4, v12 + 12);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v7, a1);
  sub_1001F2564(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v16;
}

uint64_t sub_100668A08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for EnvironmentValues(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain(a1);
    v9 = static os_log_type_t.fault.getter(v8);
    v10 = static Log.runtimeIssuesLog.getter();
    v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v13 = swift_slowAlloc(32, -1);
      v17 = v13;
      *(_DWORD *)v12 = 136315138;
      v15 = v12 + 4;
      v16 = sub_100040F58(0xD000000000000018, 0x80000001007DB2C0, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17, v15, v12 + 12);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
      swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }

    EnvironmentValues.init()();
    swift_getAtKeyPath(v7, a1);
    sub_100450BF4(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v17;
  }
  return a1;
}

uint64_t sub_100668BDC@<X0>(uint64_t a1@<X8>)
{
  return sub_100668088(&qword_1009D26B0, type metadata accessor for BuyButtonView.Style, 0x656C797453, 0xE500000000000000, a1);
}

uint64_t sub_100668C00@<X0>(uint64_t a1@<X8>)
{
  return sub_100668C2C((uint64_t *)&unk_1009F3ED0, &qword_1009F3300, 0xD000000000000019, 0x80000001007DB2E0, a1);
}

uint64_t sub_100668C2C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t EnumCaseMultiPayload;
  uint64_t v20;
  os_log_type_t v21;
  NSObject *v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a3;
  v9 = v5;
  v11 = type metadata accessor for EnvironmentValues(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(a1);
  __chkstk_darwin(v15);
  v17 = (uint64_t *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10000B5E4(v9, (uint64_t)v17, a1);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v17, v15);
  if ((_DWORD)EnumCaseMultiPayload == 1)
    return sub_100025B3C((uint64_t)v17, a5, a2);
  v20 = *v17;
  v21 = static os_log_type_t.fault.getter(EnumCaseMultiPayload);
  v22 = static Log.runtimeIssuesLog.getter();
  if (os_log_type_enabled(v22, v21))
  {
    v27 = a4;
    v23 = swift_slowAlloc(12, -1);
    v28 = a5;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc(32, -1);
    v31 = v25;
    *(_DWORD *)v24 = 136315138;
    v30 = sub_100040F58(v29, v27, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31, v24 + 4, v24 + 12);
    _os_log_impl((void *)&_mh_execute_header, v22, v21, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v24, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v24, -1, -1);
  }

  EnvironmentValues.init()();
  swift_getAtKeyPath(v14, v20);
  swift_release(v20);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_100668E54@<X0>(uint64_t a1@<X8>)
{
  return sub_100667E24(&qword_1009EA570, (uint64_t (*)(_QWORD))&type metadata accessor for SizeConstants, 0x736E6F43657A6953, 0xED000073746E6174, a1);
}

uint64_t sub_100668E88@<X0>(uint64_t a1@<X8>)
{
  return sub_100667E24(&qword_1009F2C20, (uint64_t (*)(_QWORD))&type metadata accessor for ColorSchemeContrast, 0xD000000000000013, 0x80000001007DB3B0, a1);
}

uint64_t sub_100668EB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100668EE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100668F0C(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

uint64_t sub_100668F30(unsigned __int8 *a1)
{
  return EnvironmentValues.isEnabled.setter(*a1);
}

_BYTE *sub_100668F54(_BYTE *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_100668F68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE *sub_100668F78(_BYTE *result)
{
  uint64_t v1;

  *result &= ~*(_BYTE *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_100668F94()
{
  return sub_100668FA0((uint64_t (*)(uint64_t))sub_100667844);
}

uint64_t sub_100668FA0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(_s23MultilineTextEditorViewVMa(0) - 8) + 80);
  return a1(v1 + ((v2 + 16) & ~v2));
}

uint64_t sub_100668FDC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

double sub_100668FEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_1001F596C(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRetain(a4).n128_u64[0];
  }
  return result;
}

double sub_10066901C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  double result;

  if (a4)
  {
    sub_1001F5B28(a1, a2, a3 & 1);
    *(_QWORD *)&result = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  return result;
}

uint64_t sub_10066904C()
{
  return sub_100030B34(&qword_1009F3308, &qword_1009F3310, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

ValueMetadata *type metadata accessor for DeviceRotationViewModifier()
{
  return &type metadata for DeviceRotationViewModifier;
}

uint64_t sub_10066908C(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087B910, 1);
}

uint64_t sub_10066909C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (**v20)(uint64_t);
  void (*v21)(char *, uint64_t, __n128);
  __n128 v22;
  uint64_t v24;

  v8 = type metadata accessor for NSNotificationCenter.Publisher(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009F3318);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_10004CFD4(&qword_1009F3320);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v14, a1, v15);
  v16 = &v14[*(int *)(v12 + 36)];
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  v17 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  NSNotificationCenter.publisher(for:object:)(UIDeviceOrientationDidChangeNotification, 0);

  v18 = swift_allocObject(&unk_10091A928, 32, 7);
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  sub_1006692F0((uint64_t)v14, a4);
  v19 = sub_10004CFD4(&qword_1009F3328);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a4 + *(int *)(v19 + 52), v11, v8);
  v20 = (uint64_t (**)(uint64_t))(a4 + *(int *)(v19 + 56));
  *v20 = sub_1006692E8;
  v20[1] = (uint64_t (*)(uint64_t))v18;
  v21 = *(void (**)(char *, uint64_t, __n128))(v9 + 8);
  v22 = swift_retain(a3);
  v21(v11, v8, v22);
  return sub_100669338((uint64_t)v14);
}

uint64_t sub_100669254(uint64_t a1, uint64_t (*a2)(id))
{
  id v3;
  id v4;

  v3 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v4 = objc_msgSend(v3, "orientation");

  return a2(v4);
}

uint64_t sub_1006692BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_10066909C(a1, *v2, v2[1], a2);
}

uint64_t sub_1006692C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006692E8(uint64_t a1)
{
  uint64_t v1;

  return sub_100669254(a1, *(uint64_t (**)(id))(v1 + 16));
}

uint64_t sub_1006692F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009F3318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100669338(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_10004CFD4(&qword_1009F3318);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10066937C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1009F3330;
  if (!qword_1009F3330)
  {
    v1 = sub_100030B74(&qword_1009F3328);
    result = swift_getWitnessTable(&protocol conformance descriptor for SubscriptionView<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1009F3330);
  }
  return result;
}

uint64_t property wrapper backing initializer of ChapterScrubbingState.pageIndeces(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_10004CFD4(&qword_1009D30B0);
  return Published.init(initialValue:)(&v3, v1);
}

uint64_t sub_100669410()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_100737920);
  v2 = swift_getKeyPath(&unk_100737948);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  return v4;
}

uint64_t ChapterScrubbingState.pageImageLoaders.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
  swift_beginAccess(v0 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t ChapterScrubbingState.pageImageLoaders.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*ChapterScrubbingState.pageImageLoaders.modify(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders, a1, 33, 0);
  return j__swift_endAccess;
}

id ChapterScrubbingState.currentContentSnapshotView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_currentContentSnapshotView);
}

uint64_t sub_10066956C()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_1009F3338);
  sub_100048F64(v0, (uint64_t)qword_1009F3338);
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  return static OS_os_log.be_loggerForCurrentFile(_:)(0xD000000000000021, 0x80000001007DB4B0);
}

unint64_t ChapterScrubbingState.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  void *object;
  Swift::String v7;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = v0;
  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease(0xE000000000000000);
  v10 = 0xD000000000000022;
  v11 = 0x80000001007DB410;
  KeyPath = swift_getKeyPath(&unk_100737920);
  v3 = swift_getKeyPath(&unk_100737948);
  static Published.subscript.getter(&v9, v1, KeyPath, v3);
  swift_release(KeyPath);
  swift_release(v3);
  v4 = v9;
  v5._countAndFlagsBits = Array.description.getter(v9, &type metadata for Int);
  object = v5._object;
  String.append(_:)(v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(object);
  v7._countAndFlagsBits = 15965;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  return v10;
}

void sub_1006696D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  double v36;
  unint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  char *v45;
  int64_t v46;
  _BOOL4 v47;
  uint64_t v48;
  uint64_t v49;

  v4 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  __chkstk_darwin(v4);
  v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009F3470);
  __chkstk_darwin(v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10.n128_f64[0] = __chkstk_darwin(v9);
  v12 = (char *)&v40 - v11;
  if (a1 == a2)
  {
    v47 = 1;
    return;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
    v47 = 0;
    return;
  }
  v46 = 0;
  v44 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v42 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v43 = (unint64_t)(v14 + 63) >> 6;
  v41 = v43 - 1;
  v17 = v48;
  v18 = (uint64_t)v45;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v20 = (v16 - 1) & v16;
      v21 = v19 | (v46 << 6);
LABEL_8:
      v22 = v44;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v48 + 16))(v8, *(_QWORD *)(v44 + 48) + *(_QWORD *)(v48 + 72) * v21, v49, v10);
      v23 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v21);
      v24 = sub_10004CFD4(&qword_1009F3478);
      *(_QWORD *)&v8[*(int *)(v24 + 48)] = v23;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 0, 1, v24);
      goto LABEL_27;
    }
    v25 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v25 < v43)
    {
      v26 = *(_QWORD *)(v42 + 8 * v25);
      if (v26)
        goto LABEL_12;
      v27 = v46 + 2;
      ++v46;
      if (v25 + 1 < v43)
      {
        v26 = *(_QWORD *)(v42 + 8 * v27);
        if (v26)
          goto LABEL_15;
        v46 = v25 + 1;
        if (v25 + 2 < v43)
        {
          v26 = *(_QWORD *)(v42 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          v27 = v25 + 3;
          v46 = v25 + 2;
          if (v25 + 3 < v43)
            break;
        }
      }
    }
LABEL_26:
    v28 = sub_10004CFD4(&qword_1009F3478);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 1, 1, v28);
    v20 = 0;
LABEL_27:
    sub_10066AA04((uint64_t)v8, (uint64_t)v12);
    v29 = sub_10004CFD4(&qword_1009F3478);
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v12, 1, v29);
    v47 = v30 == 1;
    if (v30 != 1)
    {
      v31 = v20;
      v32 = *(int *)(v29 + 48);
      v33 = a2;
      v34 = v49;
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v18, v12, v49);
      v35 = v12;
      v36 = *(double *)&v12[v32];
      v37 = sub_1002BB75C(v18);
      v39 = v38;
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v34);
      if ((v39 & 1) != 0)
      {
        v10.n128_u64[0] = *(_QWORD *)(*(_QWORD *)(v33 + 56) + 8 * v37);
        v12 = v35;
        a2 = v33;
        v16 = v31;
        if (v10.n128_f64[0] == v36)
          continue;
      }
    }
    return;
  }
  v26 = *(_QWORD *)(v42 + 8 * v27);
  if (v26)
  {
LABEL_15:
    v25 = v27;
LABEL_12:
    v20 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v25 << 6);
    v46 = v25;
    goto LABEL_8;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v43)
    {
      v46 = v41;
      goto LABEL_26;
    }
    v26 = *(_QWORD *)(v42 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_12;
  }
LABEL_35:
  __break(1u);
}

unint64_t sub_100669A6C(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = 8 * v11;
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v15);
    result = sub_1002BB7F4(*(_QWORD *)(*(_QWORD *)(v3 + 48) + v15));
    if ((v17 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * result) + 72) != *(_QWORD *)(v16 + 72))
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100669BF4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  _QWORD *v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  _QWORD v34[5];
  uint64_t v35;
  uint64_t v36[4];

  v6 = *a1;
  if (*(_QWORD *)(*a2 + 16) && (sub_1002BB7F4(*a1), (v7 & 1) != 0))
  {
    if (qword_1009CEB30 != -1)
      swift_once(&qword_1009CEB30, sub_10066956C);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100048F64(v8, (uint64_t)qword_1009F3338);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.info.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v12 = 134217984;
      v35 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v12 + 4, v12 + 12);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "reusing loader for index %ld", v12, 0xCu);
      swift_slowDealloc(v12, -1, -1);
    }

    return sub_10057A5F0(v6);
  }
  else
  {
    if (qword_1009CEB30 != -1)
      swift_once(&qword_1009CEB30, sub_10066956C);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100048F64(v14, (uint64_t)qword_1009F3338);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.info.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v18 = 134217984;
      v35 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36, v18 + 4, v18 + 12);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "creating loader for index %ld", v18, 0xCu);
      swift_slowDealloc(v18, -1, -1);
    }

    sub_10002E418(a4, (uint64_t)&v35);
    v19 = sub_100063750((uint64_t)&v35, v36[2]);
    __chkstk_darwin(v19);
    v21 = (_QWORD *)((char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v22 + 16))(v21);
    v23 = *v21;
    v24 = type metadata accessor for BookActionMenuDataSource();
    v34[3] = v24;
    v34[4] = &off_1008FF818;
    v34[0] = v23;
    v25 = type metadata accessor for PageSnapshotLoader(0);
    v26 = (_QWORD *)swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v27 = sub_100063750((uint64_t)v34, v24);
    __chkstk_darwin(v27);
    v29 = (_QWORD *)((char *)v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v30 + 16))(v29);
    v31 = sub_10066A1A0(*v29, v6, 1, v26);
    _s5Books15CurrentPageViewVwxx_0(v34);
    _s5Books15CurrentPageViewVwxx_0(&v35);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a2);
    v35 = *a2;
    *a2 = 0x8000000000000000;
    sub_1002C58CC((uint64_t)v31, v6, isUniquelyReferenced_nonNull_native);
    v33 = *a2;
    *a2 = v35;
    return swift_bridgeObjectRelease(v33);
  }
}

uint64_t ChapterScrubbingState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books21ChapterScrubbingState__pageIndeces;
  v2 = sub_10004CFD4(&qword_1009D9D60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders));

  return v0;
}

uint64_t ChapterScrubbingState.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC5Books21ChapterScrubbingState__pageIndeces;
  v2 = sub_10004CFD4(&qword_1009D9D60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders));

  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10066A044@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = type metadata accessor for ChapterScrubbingState(0);
  result = ObservableObject<>.objectWillChange.getter(v4, a1);
  *a2 = result;
  return result;
}

uint64_t sub_10066A080(uint64_t *a1, uint64_t *a2)
{
  return _s5Books21ChapterScrubbingStateC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

unint64_t sub_10066A08C()
{
  return ChapterScrubbingState.description.getter();
}

uint64_t sub_10066A0AC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100737920);
  v5 = swift_getKeyPath(&unk_100737948);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  *a2 = v7;
  return result;
}

uint64_t sub_10066A128(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_100737920);
  v5 = swift_getKeyPath(&unk_100737948);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  swift_retain(v3);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

_QWORD *sub_10066A1A0(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;
  _QWORD v25[5];

  v8 = sub_10004CFD4(&qword_1009D19F0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[3] = type metadata accessor for BookActionMenuDataSource();
  v25[4] = &off_1008FF818;
  v25[0] = a1;
  v12 = sub_10004CFD4(&qword_1009CEEF0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  a4[7] = PassthroughSubject.init()(v13);
  a4[8] = 0;
  v14 = (char *)a4 + OBJC_IVAR____TtC5Books18PageSnapshotLoader__image;
  v24 = 0;
  v15 = sub_10004CFD4(&qword_1009D17F8);
  Published.init(initialValue:)(&v24, v15);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v11, v8);
  *(_QWORD *)((char *)a4 + OBJC_IVAR____TtC5Books18PageSnapshotLoader_cancellables) = &_swiftEmptySetSingleton;
  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  v16 = static OS_os_log.be_loggerForCurrentFile(_:)(0xD00000000000001ELL, 0x80000001007B29A0);
  v17 = Logger.logObject.getter(v16);
  v21 = static os_log_type_t.debug.getter(v17, v18, v19, v20);
  if (os_log_type_enabled(v17, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v22 = 134217984;
    v24 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, v25, v22 + 4, v22 + 12);
    _os_log_impl((void *)&_mh_execute_header, v17, v21, "Preparing snapshot loader for page %ld", v22, 0xCu);
    swift_slowDealloc(v22, -1, -1);
  }

  sub_10002E418((uint64_t)v25, (uint64_t)(a4 + 2));
  a4[9] = a2;
  if ((a3 & 1) != 0 && _s5Books17REActionMenuStateC9pageCountSivpfi_0() != a2)
    sub_1005D22F0(a2);
  _s5Books15CurrentPageViewVwxx_0(v25);
  return a4;
}

uint64_t _s5Books21ChapterScrubbingStateC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t *v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  _QWORD *v17[3];

  KeyPath = swift_getKeyPath(&unk_100737920);
  v5 = swift_getKeyPath(&unk_100737948);
  static Published.subscript.getter(v17, a1, KeyPath, v5);
  swift_release(KeyPath);
  swift_release(v5);
  v6 = v17[0];
  v7 = swift_getKeyPath(&unk_100737920);
  v8 = swift_getKeyPath(&unk_100737948);
  static Published.subscript.getter(v17, a2, v7, v8);
  swift_release(v7);
  swift_release(v8);
  v9 = v17[0];
  LOBYTE(v8) = sub_100430EFC(v6, v17[0]);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v9);
  if ((v8 & 1) != 0
    && (sub_100009E04(0, (unint64_t *)&qword_1009D9DA0, NSObject_ptr),
        (static NSObject.== infix(_:_:)(*(_QWORD *)(a1 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_currentContentSnapshotView), *(_QWORD *)(a2 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_currentContentSnapshotView)) & 1) != 0))
  {
    v10 = (unint64_t *)(a1 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
    swift_beginAccess(a1 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders, v17, 0, 0);
    v11 = *v10;
    v12 = (uint64_t *)(a2 + OBJC_IVAR____TtC5Books21ChapterScrubbingState_pageImageLoaders);
    swift_beginAccess(v12, &v16, 0, 0);
    v13 = *v12;
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v13);
    v14 = sub_100669A6C(v11, v13);
    swift_bridgeObjectRelease(v11);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_10066A574()
{
  return type metadata accessor for ChapterScrubbingState(0);
}

uint64_t type metadata accessor for ChapterScrubbingState(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F3380;
  if (!qword_1009F3380)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for ChapterScrubbingState);
  return result;
}

void sub_10066A5B8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  sub_10066A640(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_10066A640(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009F3390)
  {
    v2 = sub_100030B74(&qword_1009D30B0);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009F3390);
  }
}

uint64_t sub_10066A698(uint64_t a1, uint64_t a2, int64_t a3, unint64_t a4, char a5)
{
  char v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;

  if (a3 < 0)
    goto LABEL_54;
  v5 = a5;
  v8 = a4;
  v7 = a2;
  v6 = _swiftEmptyArrayStorage;
  if (a3)
  {
    v29 = _swiftEmptyArrayStorage;
    v6 = &v29;
    sub_100366AFC(0, a3, 0);
    v11 = v7 - a1;
    if (__OFSUB__(v7, a1))
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    v28 = v7;
    v7 = v8;
    v8 = 0;
    v6 = v29;
    while ((unsigned __int128)((uint64_t)v8 * (__int128)v11) >> 64 == (uint64_t)(v8 * v11) >> 63)
    {
      v12 = (uint64_t)(v8 * v11) / a3;
      v13 = a1 + v12;
      if (__OFADD__(a1, v12))
        goto LABEL_52;
      v29 = v6;
      v15 = v6[2];
      v14 = v6[3];
      v16 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        sub_100366AFC(v14 > 1, v15 + 1, 1);
        v6 = v29;
      }
      ++v8;
      v6[2] = v16;
      v6[v15 + 4] = v13;
      if (a3 == v8)
      {
        LOBYTE(v8) = v7;
        v7 = v28;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v16 = _swiftEmptyArrayStorage[2];
  if (!v16)
  {
LABEL_17:
    if ((swift_isUniquelyReferenced_nonNull_native(v6) & 1) != 0)
    {
LABEL_18:
      v20 = v6[2];
      v19 = v6[3];
      v16 = v20 + 1;
      if (v20 >= v19 >> 1)
        v6 = sub_1005B0580((_QWORD *)(v19 > 1), v20 + 1, 1, v6);
      v6[2] = v16;
      v6[v20 + 4] = v7;
      goto LABEL_21;
    }
LABEL_56:
    v6 = sub_1005B0580(0, v6[2] + 1, 1, v6);
    goto LABEL_18;
  }
LABEL_12:
  if (v6[v16 + 3] != v7)
  {
    if (v16 < 2)
      goto LABEL_17;
    result = swift_isUniquelyReferenced_nonNull_native(v6);
    if ((result & 1) != 0)
    {
      v18 = v6[2];
      if (v18)
      {
LABEL_16:
        v6[2] = v18 - 1;
        goto LABEL_17;
      }
    }
    else
    {
      result = (uint64_t)sub_1002C3584(v6);
      v6 = (_QWORD *)result;
      v18 = *(_QWORD *)(result + 16);
      if (v18)
        goto LABEL_16;
    }
    __break(1u);
    return result;
  }
LABEL_21:
  if ((v8 & 1) == 0)
    return (uint64_t)v6;
  v21 = 0;
  v22 = _swiftEmptyArrayStorage;
  do
  {
    v7 = v6[v21 + 4];
    if (v7 == _s5Books17REActionMenuStateC9pageCountSivpfi_0())
    {
      v23 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
      v24 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
      goto LABEL_36;
    }
    if ((v7 & 0x8000000000000001) == 1)
    {
      if (v7 != 1)
      {
        v23 = v7--;
        if ((v5 & 1) != 0)
          goto LABEL_37;
LABEL_35:
        v24 = v23;
        v23 = v7;
LABEL_36:
        v7 = v24;
        goto LABEL_37;
      }
      v7 = _s5Books17REActionMenuStateC9pageCountSivpfi_0();
      v23 = 1;
      if ((v5 & 1) == 0)
        goto LABEL_35;
    }
    else
    {
      v23 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_53;
      if ((v5 & 1) == 0)
        goto LABEL_35;
    }
LABEL_37:
    if (v23 != _s5Books17REActionMenuStateC9pageCountSivpfi_0())
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
        v22 = sub_1005B0580(0, v22[2] + 1, 1, v22);
      v8 = v22[2];
      v25 = v22[3];
      if (v8 >= v25 >> 1)
        v22 = sub_1005B0580((_QWORD *)(v25 > 1), v8 + 1, 1, v22);
      v22[2] = v8 + 1;
      v22[v8 + 4] = v23;
    }
    if (v7 != _s5Books17REActionMenuStateC9pageCountSivpfi_0())
    {
      if ((swift_isUniquelyReferenced_nonNull_native(v22) & 1) == 0)
        v22 = sub_1005B0580(0, v22[2] + 1, 1, v22);
      v27 = v22[2];
      v26 = v22[3];
      if (v27 >= v26 >> 1)
        v22 = sub_1005B0580((_QWORD *)(v26 > 1), v27 + 1, 1, v22);
      v22[2] = v27 + 1;
      v22[v27 + 4] = v7;
    }
    ++v21;
  }
  while (v16 != v21);
  swift_bridgeObjectRelease(v6);
  return (uint64_t)v22;
}

uint64_t sub_10066AA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_10004CFD4(&qword_1009F3470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10066AA4C()
{
  uint64_t result;

  sub_100009E04(0, (unint64_t *)&qword_1009CEEB0, OS_os_log_ptr);
  result = OS_os_log.init(subsystem:category:)(0xD000000000000010, 0x80000001007B2570, 0xD000000000000017, 0x8000000100737A10);
  qword_100A1F0E0 = result;
  return result;
}

uint64_t sub_10066AAC0()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10001BFD8(v0, qword_100A1F0E8);
  sub_100048F64(v0, (uint64_t)qword_100A1F0E8);
  if (qword_1009CEB38 != -1)
    swift_once(&qword_1009CEB38, sub_10066AA4C);
  return Logger.init(_:)((id)qword_100A1F0E0);
}

uint64_t sub_10066AB40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 208) = a1;
  *(_QWORD *)(v2 + 216) = v1;
  return swift_task_switch(sub_10066AB58, 0, 0);
}

uint64_t sub_10066AB58()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  Class isa;
  unint64_t v16;
  void *v18;
  NSString v19;

  v1 = objc_msgSend((id)objc_opt_self(BUAccountsProvider), "sharedProvider");
  v2 = objc_msgSend(v1, "activeStoreAccount");

  if (v2 && (v3 = objc_msgSend(v2, "ams_DSID"), v2, v3))
  {
    v4 = v0 + 184;
    v5 = *(_QWORD *)(v0 + 208);
    v6 = objc_msgSend(v3, "stringValue");

    static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v8 = v7;

    if (v5)
    {
      v9 = v0 + 80;
      v10 = *(_QWORD *)(v0 + 208);
      v11 = *(_QWORD *)(v0 + 216);
      swift_bridgeObjectRetain(v8);
      sub_10066B974(v10);
      v13 = v12;
      *(_QWORD *)(v0 + 224) = 0;
      swift_bridgeObjectRelease_n(v8, 2);
      v14 = *(void **)(v11 + 16);
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)(v0 + 232) = isa;
      swift_bridgeObjectRelease(v13);
      *(_QWORD *)(v0 + 120) = v4;
      *(_QWORD *)(v0 + 80) = v0;
      *(_QWORD *)(v0 + 88) = sub_10066ADDC;
      *(_QWORD *)(v0 + 176) = swift_continuation_init(v0 + 80, 1);
      *(_QWORD *)(v0 + 144) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 152) = 0x40000000;
      *(_QWORD *)(v0 + 160) = sub_10066B390;
      *(_QWORD *)(v0 + 168) = &unk_10091A9D8;
      objc_msgSend(v14, "assetReviewsForAssetReviewIDs:completion:", isa, v0 + 144);
    }
    else
    {
      v9 = v0 + 16;
      v18 = *(void **)(*(_QWORD *)(v0 + 216) + 16);
      v19 = String._bridgeToObjectiveC()();
      *(_QWORD *)(v0 + 248) = v19;
      swift_bridgeObjectRelease(v8);
      *(_QWORD *)(v0 + 56) = v4;
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_10066B098;
      *(_QWORD *)(v0 + 176) = swift_continuation_init(v0 + 16, 1);
      *(_QWORD *)(v0 + 144) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 152) = 0x40000000;
      *(_QWORD *)(v0 + 160) = sub_10066B390;
      *(_QWORD *)(v0 + 168) = &unk_10091A9C0;
      objc_msgSend(v18, "fetchAssetReviewsForUserID:includingDeleted:completion:", v19, 0, v0 + 144);
    }
    return swift_continuation_await(v9);
  }
  else
  {
    v16 = sub_1001DFDB4((uint64_t)_swiftEmptyArrayStorage);
    return (*(uint64_t (**)(unint64_t))(v0 + 8))(v16);
  }
}

uint64_t sub_10066ADDC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  *(_QWORD *)(*(_QWORD *)v0 + 240) = v1;
  if (v1)
    v2 = sub_10066B310;
  else
    v2 = sub_10066AE3C;
  return swift_task_switch(v2, 0, 0);
}

void sub_10066AE3C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  __n128 v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20[2];

  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(void **)(v0 + 192);

  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 224);
    v4 = (void *)sub_1001DFDB4((uint64_t)_swiftEmptyArrayStorage);
    v19 = v4;
    v5 = v2 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v2 >> 62)
      goto LABEL_23;
    v6 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    if (v6)
    {
      while (1)
      {
        if ((v2 & 0xC000000000000001) != 0)
          v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v2);
        else
          v7 = *(id *)(v2 + 32);
        v14 = v7;
        v20[0] = v7;
        sub_10066B44C((uint64_t)&v19, v20);
        if (v3)
        {
          swift_bridgeObjectRelease(v19);

          swift_bridgeObjectRelease(v2);
          return;
        }

        if (v6 == 1)
          break;
        v15 = 5;
        while (1)
        {
          v3 = v15 - 4;
          v16 = (v2 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v15 - 4, v2)
              : *(id *)(v2 + 8 * v15);
          v4 = v16;
          v17 = v15 - 3;
          if (__OFADD__(v3, 1))
            break;
          v20[0] = v16;
          sub_10066B44C((uint64_t)&v19, v20);

          ++v15;
          if (v17 == v6)
            goto LABEL_21;
        }
        __break(1u);
LABEL_23:
        if (v2 >= 0)
          v18 = v5;
        else
          v18 = v2;
        swift_bridgeObjectRetain(v2);
        v6 = _CocoaArrayWrapper.endIndex.getter(v18);
        if (!v6)
          goto LABEL_27;
      }
LABEL_21:
      v13 = swift_bridgeObjectRelease_n(v2, 2);
      v4 = v19;
    }
    else
    {
LABEL_27:
      v13 = swift_bridgeObjectRelease_n(v2, 2);
    }
  }
  else
  {
    if (qword_1009CEB40 != -1)
      swift_once(&qword_1009CEB40, sub_10066AAC0);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100048F64(v8, (uint64_t)qword_100A1F0E8);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.error.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Error retrieving reviews from manager", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }

    v4 = (void *)sub_1001DFDB4((uint64_t)_swiftEmptyArrayStorage);
  }
  (*(void (**)(void *, __n128))(v0 + 8))(v4, v13);
}

uint64_t sub_10066B098()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 256) = v1;
  if (v1)
    v2 = sub_10066B350;
  else
    v2 = sub_10066B0F8;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_10066B0F8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v18;
  void *v19;

  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(void **)(v0 + 192);

  if (v2)
  {
    v3 = sub_1001DFDB4((uint64_t)_swiftEmptyArrayStorage);
    v18 = v3;
    v4 = v2 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v2 >> 62)
      goto LABEL_17;
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v2);
    for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v16))
    {
      for (i = 0; ; ++i)
      {
        v7 = (v2 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v2)
           : *(id *)(v2 + 8 * i + 32);
        v8 = v7;
        v9 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v19 = v7;
        v3 = 0;
        sub_10066B44C((uint64_t)&v18, &v19);

        if (v9 == v5)
        {
          v10 = swift_bridgeObjectRelease_n(v2, 2);
          v3 = v18;
          return (*(uint64_t (**)(unint64_t, __n128))(v0 + 8))(v3, v10);
        }
      }
      __break(1u);
LABEL_17:
      if (v2 >= 0)
        v16 = v4;
      else
        v16 = v2;
      swift_bridgeObjectRetain(v2);
    }
    v10 = swift_bridgeObjectRelease_n(v2, 2);
  }
  else
  {
    if (qword_1009CEB40 != -1)
      swift_once(&qword_1009CEB40, sub_10066AAC0);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100048F64(v11, (uint64_t)qword_100A1F0E8);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Error retrieving reviews from manager", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    v3 = sub_1001DFDB4((uint64_t)_swiftEmptyArrayStorage);
  }
  return (*(uint64_t (**)(unint64_t, __n128))(v0 + 8))(v3, v10);
}

uint64_t sub_10066B310(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 232);
  swift_willThrow(a1);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10066B350(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 248);
  swift_willThrow(a1);

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_10066B390(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  id v16;

  v4 = *(_QWORD *)(a1 + 32);
  if (a4)
  {
    v6 = sub_10004CFD4((uint64_t *)&unk_1009D3170);
    v7 = swift_allocError(v6, &protocol self-conformance witness table for Error, 0, 0);
    *v8 = a4;
    v9 = a4;
    return swift_continuation_throwingResumeWithError(v4, v7);
  }
  else
  {
    if (a2)
    {
      v13 = sub_100009E04(0, &qword_1009F3538, BCMutableAssetReview_ptr);
      v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a2, v13);
    }
    else
    {
      v14 = 0;
    }
    v15 = *(uint64_t **)(*(_QWORD *)(v4 + 64) + 40);
    *v15 = v14;
    v15[1] = (uint64_t)a3;
    v16 = a3;
    return swift_continuation_throwingResume(v4);
  }
}

void sub_10066B44C(uint64_t a1, void **a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  char v22;
  char v23;
  unsigned __int8 v24;
  BOOL v25;
  unint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  unsigned int v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 *v40;
  unsigned int v41;
  unsigned __int8 v42;
  unint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned int v46;
  char v47;
  _QWORD v48[2];

  v3 = sub_10004CFD4(&qword_1009D7440);
  __chkstk_darwin(v3);
  v5 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4((uint64_t *)&unk_1009E8A50);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  if (!objc_msgSend(v10, "starRating", v7))
    return;
  v11 = (void *)objc_opt_self(BCAssetReview);
  v12 = objc_msgSend(v10, "assetReviewID");
  v13 = objc_msgSend(v11, "assetIDFromAssetReviewID:", v12);

  if (!v13)
    goto LABEL_69;
  v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
  v16 = v15;

  v17 = HIBYTE(v16) & 0xF;
  v18 = v14 & 0xFFFFFFFFFFFFLL;
  if ((v16 & 0x2000000000000000) != 0)
    v19 = HIBYTE(v16) & 0xF;
  else
    v19 = v14 & 0xFFFFFFFFFFFFLL;
  if (!v19)
  {
    swift_bridgeObjectRelease(v16);
    return;
  }
  if ((v16 & 0x1000000000000000) != 0)
  {
    v21 = sub_1003277FC(v14, v16, 10);
    v23 = v47;
    goto LABEL_39;
  }
  if ((v16 & 0x2000000000000000) != 0)
  {
    v48[0] = v14;
    v48[1] = v16 & 0xFFFFFFFFFFFFFFLL;
    if (v14 == 43)
    {
      if (v17)
      {
        if (v17 != 1 && (BYTE1(v14) - 48) <= 9u)
        {
          v21 = (BYTE1(v14) - 48);
          if (v17 == 2)
            goto LABEL_38;
          if ((BYTE2(v14) - 48) <= 9u)
          {
            v21 = 10 * (BYTE1(v14) - 48) + (BYTE2(v14) - 48);
            v27 = v17 - 3;
            if (v27)
            {
              v28 = (unsigned __int8 *)v48 + 3;
              while (1)
              {
                v29 = *v28 - 48;
                if (v29 > 9)
                  goto LABEL_35;
                if (!is_mul_ok(v21, 0xAuLL))
                  goto LABEL_35;
                v25 = __CFADD__(10 * v21, v29);
                v21 = 10 * v21 + v29;
                if (v25)
                  goto LABEL_35;
                v23 = 0;
                ++v28;
                if (!--v27)
                  goto LABEL_39;
              }
            }
            goto LABEL_38;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (v14 != 45)
      {
        if (v17 && (v14 - 48) <= 9u)
        {
          v21 = (v14 - 48);
          if (v17 == 1)
            goto LABEL_38;
          if ((BYTE1(v14) - 48) <= 9u)
          {
            v21 = 10 * (v14 - 48) + (BYTE1(v14) - 48);
            v39 = v17 - 2;
            if (v39)
            {
              v40 = (unsigned __int8 *)v48 + 2;
              while (1)
              {
                v41 = *v40 - 48;
                if (v41 > 9)
                  goto LABEL_35;
                if (!is_mul_ok(v21, 0xAuLL))
                  goto LABEL_35;
                v25 = __CFADD__(10 * v21, v41);
                v21 = 10 * v21 + v41;
                if (v25)
                  goto LABEL_35;
                v23 = 0;
                ++v40;
                if (!--v39)
                  goto LABEL_39;
              }
            }
            goto LABEL_38;
          }
        }
LABEL_35:
        v21 = 0;
LABEL_36:
        v23 = 1;
        goto LABEL_39;
      }
      if (v17)
      {
        if (v17 != 1)
        {
          v24 = BYTE1(v14) - 48;
          if ((BYTE1(v14) - 48) <= 9u)
          {
            v21 = 0;
            v25 = v24 == 0;
            v26 = -(uint64_t)v24;
            if (!v25)
              goto LABEL_36;
            if (v17 == 2)
            {
              v23 = 0;
              v21 = v26;
              goto LABEL_39;
            }
            v42 = BYTE2(v14) - 48;
            if ((BYTE2(v14) - 48) <= 9u && is_mul_ok(v26, 0xAuLL))
            {
              v43 = 10 * v26;
              v21 = v43 - v42;
              if (v43 >= v42)
              {
                v44 = v17 - 3;
                if (v44)
                {
                  v45 = (unsigned __int8 *)v48 + 3;
                  while (1)
                  {
                    v46 = *v45 - 48;
                    if (v46 > 9)
                      goto LABEL_35;
                    if (!is_mul_ok(v21, 0xAuLL))
                      goto LABEL_35;
                    v25 = 10 * v21 >= (unint64_t)v46;
                    v21 = 10 * v21 - v46;
                    if (!v25)
                      goto LABEL_35;
                    v23 = 0;
                    ++v45;
                    if (!--v44)
                      goto LABEL_39;
                  }
                }
LABEL_38:
                v23 = 0;
                goto LABEL_39;
              }
            }
          }
        }
        goto LABEL_35;
      }
      __break(1u);
    }
    __break(1u);
LABEL_69:
    __break(1u);
    return;
  }
  if ((v14 & 0x1000000000000000) != 0)
    v20 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v20 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v14, v16);
  v21 = (uint64_t)sub_1003276EC(v20, v18, 10);
  v23 = v22 & 1;
LABEL_39:
  *(_QWORD *)&v30 = swift_bridgeObjectRelease(v16).n128_u64[0];
  if ((v23 & 1) == 0)
  {
    objc_msgSend(v10, "normalizedStarRating", v30);
    v32 = v31;
    v33 = objc_msgSend(v10, "modificationDate");
    if (v33)
    {
      v34 = v33;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v33);

      v35 = type metadata accessor for Date(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v5, 0, 1, v35);
    }
    else
    {
      v36 = type metadata accessor for Date(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v5, 1, 1, v36);
    }
    v37 = StoreBookRating.init(storeID:rating:timestamp:)(v21, v32, 0, v5);
    v38 = type metadata accessor for StoreBookRating(0, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v9, 0, 1, v38);
    sub_1004F033C((uint64_t)v9, v21);
  }
}

uint64_t sub_10066B910(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc(dword_1009F352C);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_100326424;
  v5[26] = a1;
  v5[27] = v4;
  return swift_task_switch(sub_10066AB58, 0, 0);
}

void sub_10066B974(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  NSString v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  int64_t v27;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    sub_100045E44(0, v1, 0);
    v3 = _swiftEmptyArrayStorage;
    v4 = sub_1005171E0(v2);
    v6 = v5;
    v8 = v7 & 1;
    v26 = v2 + 56;
    v25 = (id)objc_opt_self(BCAssetReview);
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v2 + 32))
    {
      if (((*(_QWORD *)(v26 + (((unint64_t)v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(v2 + 36) != (_DWORD)v6)
        goto LABEL_15;
      v27 = v1;
      v9 = v3;
      v10 = v2;
      v11 = String._bridgeToObjectiveC()();
      dispatch thunk of CustomStringConvertible.description.getter(&type metadata for UInt64, &protocol witness table for UInt64);
      v13 = v12;
      v14 = String._bridgeToObjectiveC()();
      v15 = objc_msgSend(v25, "assetReviewIDWithUserID:assetID:", v11, v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

      if (!v15)
        goto LABEL_16;
      v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
      v18 = v17;

      v3 = v9;
      v20 = v9[2];
      v19 = v9[3];
      if (v20 >= v19 >> 1)
      {
        sub_100045E44(v19 > 1, v20 + 1, 1);
        v3 = v9;
      }
      v3[2] = v20 + 1;
      v21 = &v3[2 * v20];
      v21[4] = v16;
      v21[5] = v18;
      v2 = v10;
      v22 = sub_100517284(v4, v6, v8 & 1, v10);
      v4 = v22;
      v6 = v23;
      v8 = v24 & 1;
      v1 = v27 - 1;
      if (v27 == 1)
      {
        sub_10030A650(v22, v23, v24 & 1);
        return;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
}

uint64_t sub_10066BB88(uint64_t a1, uint64_t a2)
{
  return sub_10066C3A8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_WORD *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_WORD *)(a2 + 16));
}

_QWORD *sub_10066BBA4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  id v27;

  v2 = v1;
  v4 = sub_10004CFD4((uint64_t *)&unk_1009D4AE0);
  __chkstk_darwin(v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10004CFD4(&qword_1009F3608);
  v25 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_10004CFD4(&qword_1009D3458);
  swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v11 = PassthroughSubject.init()();
  v2[2] = v11;
  v2[3] = &_swiftEmptySetSingleton;
  v2[4] = a1;
  v26[0] = v11;
  v12 = sub_100009E04(0, (unint64_t *)&qword_1009CEC30, OS_dispatch_queue_ptr);
  v13 = a1;
  v14 = swift_retain(v11);
  v27 = (id)static OS_dispatch_queue.main.getter(v14);
  v15 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  v16 = sub_100030B34(&qword_1009D3460, &qword_1009D3458, (uint64_t)&protocol conformance descriptor for PassthroughSubject<A, B>);
  v17 = sub_1001EDDD0();
  Publisher.receive<A>(on:options:)(&v27, v6, v10, v12, v16, v17);
  sub_1001EDE18((uint64_t)v6);

  swift_release(v26[0]);
  v18 = swift_allocObject(&unk_10091AAA0, 24, 7);
  swift_weakInit(v18 + 16, v2);
  v19 = swift_allocObject(&unk_10091AAC8, 32, 7);
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = v13;
  v20 = sub_100030B34(&qword_1009F3610, &qword_1009F3608, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v21 = v13;
  v22 = Publisher<>.sink(receiveValue:)(sub_10066C504, v19, v7, v20);
  swift_release(v19);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  swift_beginAccess(v2 + 3, v26, 33, 0);
  AnyCancellable.store(in:)(v2 + 3);
  swift_endAccess(v26);
  swift_release(v22);

  return v2;
}

void sub_10066BE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSString v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  Swift::String v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  objc_super v30;
  _BYTE v31[24];

  v5 = *(_QWORD *)a1;
  v4 = *(NSString *)(a1 + 8);
  v6 = *(unsigned __int16 *)(a1 + 16);
  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v31, 0, 0);
  Strong = swift_weakLoadStrong(v7);
  if (Strong)
  {
    v9 = Strong;
    if (!(v6 >> 14))
    {
      v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a3
                                                                  + OBJC_IVAR___BKSplitViewContentHostingController_viewController), "view"));
      if (v10)
      {
        v11 = v10;
        v12 = objc_msgSend(v10, "window");

        if (v12)
        {
          v13 = *(id *)(v9 + 32);
          v14._countAndFlagsBits = v5;
          v14._object = v4;
          SplitViewContentHostingController.select(identifier:isUserAction:editNameOnSelect:)(v14, v6 & 1, v6 & 0x100);

        }
        goto LABEL_21;
      }
      goto LABEL_30;
    }
    if (v6 >> 14 == 1)
    {
      objc_msgSend((id)objc_opt_self(JSAApplication), "openAccountSummaryPage");
LABEL_21:
      swift_release(v9);
      return;
    }
    v30.receiver = *(id *)(*(_QWORD *)(Strong + 32) + OBJC_IVAR___BKSplitViewContentHostingController_viewController);
    v30.super_class = (Class)type metadata accessor for MainContentViewController();
    v15 = objc_msgSendSuper2(&v30, "contentNavigationController");
    if (!v15)
      goto LABEL_21;
    v16 = v15;
    v17 = objc_msgSend(v15, "viewControllers");
    v18 = sub_100009E04(0, (unint64_t *)&qword_1009D8D70, UIViewController_ptr);
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v17, v18);

    if ((unint64_t)v19 >> 62)
    {
      if (v19 < 0)
        v28 = v19;
      else
        v28 = v19 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v19);
      v29 = _CocoaArrayWrapper.endIndex.getter(v28);
      swift_bridgeObjectRelease(v19);
      if (v29)
        goto LABEL_11;
    }
    else if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_11:
      if ((v19 & 0xC000000000000001) != 0)
      {
        v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v19);
LABEL_14:
        v21 = v20;
        swift_bridgeObjectRelease(v19);
        v22 = objc_opt_self(BSUIFeedViewController);
        v23 = (void *)swift_dynamicCastObjCClass(v21, v22);
        if (v23)
        {
          v24 = objc_msgSend(v23, "searchController");
          if (v24)
          {
            v25 = v24;
            v26 = *(void **)*(&off_10091AAE0 + (char)v6);
            v27 = v26;
            if (v4)
              v4 = String._bridgeToObjectiveC()();
            objc_msgSend(v25, "didUpdateWithTrigger:text:", v26, v4);

          }
          else
          {

          }
        }
        else
        {

        }
        goto LABEL_21;
      }
      if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v20 = *(id *)(v19 + 32);
        goto LABEL_14;
      }
      __break(1u);
LABEL_30:
      __break(1u);
      return;
    }

    swift_release(v9);
    swift_bridgeObjectRelease(v19);
  }
}

uint64_t sub_10066C12C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for SidebarRouter()
{
  return objc_opt_self(_TtC5Books13SidebarRouter);
}

uint64_t sub_10066C184(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t result;

  if (((a3 >> 14) & 1 | 2) == 2)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t _s13RoutingActionOwxx(uint64_t a1)
{
  return sub_10066C1B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int16 *)(a1 + 16));
}

uint64_t sub_10066C1B0(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t result;

  if (((a3 >> 14) & 1 | 2) == 2)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t _s13RoutingActionOwCP_0_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int16 *)(a2 + 16);
  sub_10066C184(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s13RoutingActionOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(unsigned __int16 *)(a2 + 16);
  sub_10066C184(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(unsigned __int16 *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v5;
  sub_10066C1B0(v6, v7, v8);
  return a1;
}

uint64_t _s13RoutingActionOwta(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;

  v3 = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(unsigned __int16 *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v3;
  sub_10066C1B0(v4, v5, v6);
  return a1;
}

uint64_t _s13RoutingActionOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFFE && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 4094);
  v3 = ((*(unsigned __int16 *)(a1 + 16) >> 14) | (4
                                                * ((*(unsigned __int16 *)(a1 + 16) >> 4) & 0x3E0 | (*(_WORD *)(a1 + 16) >> 3)))) ^ 0xFFF;
  if (v3 >= 0xFFD)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s13RoutingActionOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3;

  if (a2 > 0xFFD)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 4094;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFFE)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0xFFE)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 2) & 0x3FF) - (a2 << 10);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_WORD *)(result + 16) = (16 * v3) & 0xFE00 | (8 * (v3 & 0x1F));
    }
  }
  return result;
}

uint64_t sub_10066C364(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 16) >> 14;
}

uint64_t sub_10066C370(uint64_t result)
{
  *(_WORD *)(result + 16) &= 0x3FFFu;
  return result;
}

uint64_t sub_10066C380(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 16) = *(_WORD *)(result + 16) & 0x107 | (a2 << 14);
  return result;
}

ValueMetadata *_s13RoutingActionOMa_0()
{
  return &_s13RoutingActionON_0;
}

uint64_t sub_10066C3A8(uint64_t a1, uint64_t a2, unsigned __int16 a3, uint64_t a4, uint64_t a5, unsigned __int16 a6)
{
  int v6;
  int v7;
  int v8;
  char v9;

  v6 = a6;
  v7 = a3;
  if (a3 >> 14)
  {
    if (a3 >> 14 == 1)
    {
      if ((a6 & 0xC000) == 0x4000)
        LOBYTE(v8) = ((a1 & 1) == 0) ^ a4;
      else
        LOBYTE(v8) = 0;
      return v8 & 1;
    }
    if ((a6 & 0xC000) == 0x8000)
    {
      if (a2)
      {
        if (!a5)
          goto LABEL_24;
        if (a1 != a4 || a2 != a5)
        {
          if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0) & 1) == 0
            || v6 != v7)
          {
            goto LABEL_24;
          }
LABEL_26:
          LOBYTE(v8) = 1;
          return v8 & 1;
        }
      }
      else if (a5)
      {
        goto LABEL_24;
      }
      if (a6 == a3)
        goto LABEL_26;
    }
LABEL_24:
    LOBYTE(v8) = 0;
    return v8 & 1;
  }
  if (a6 >= 0x4000u)
    goto LABEL_24;
  if (a1 == a4 && a2 == a5)
  {
    if (((a3 ^ a6) & 1) != 0)
      goto LABEL_24;
LABEL_21:
    v8 = ((v7 & 0x100) == 0) ^ ((unsigned __int16)(v6 & 0x100) >> 8);
    return v8 & 1;
  }
  v9 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a4, a5, 0);
  LOBYTE(v8) = 0;
  if ((v9 & 1) != 0 && ((v7 ^ v6) & 1) == 0)
    goto LABEL_21;
  return v8 & 1;
}

uint64_t sub_10066C4B4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10066C4D8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10066C504(uint64_t a1)
{
  uint64_t v1;

  sub_10066BE3C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t BKMainFlowController.bookOpenAnimationHelper.getter()
{
  return sub_10004C6D8(&unk_100A1F100, &qword_1009F3618);
}

uint64_t BKMainFlowController.bookOpenAnimationHelper.setter(void *a1)
{
  return sub_10066C5E8(a1, &unk_100A1F100);
}

uint64_t BKMainFlowController.dockingDelegate.getter()
{
  return sub_10004C6D8(&unk_100A1F101, &qword_1009F3620);
}

uint64_t BKMainFlowController.dockingDelegate.setter(void *a1)
{
  return sub_10066C5E8(a1, &unk_100A1F101);
}

uint64_t BKMainFlowController.navigationDelegate.setter(void *a1)
{
  return sub_10066C5E8(a1, &unk_100A1F102);
}

uint64_t BKMainFlowController.rootBarCoordinator.setter(void *a1)
{
  return sub_10066C5E8(a1, &unk_100A1F103);
}

uint64_t sub_10066C5E8(void *a1, const void *a2)
{
  void *v2;
  _BYTE v6[24];

  swift_beginAccess(a2, v6, 32, 0);
  objc_setAssociatedObject(v2, a2, a1, 0);
  swift_endAccess(v6);
  return swift_unknownObjectRelease(a1);
}

uint64_t *sub_10066C650(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v12);
  }
  else
  {
    v7 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(a2, v7) == 1)
    {
      v8 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      v9 = a1;
      v10 = v7;
      v11 = 1;
    }
    else
    {
      v13 = *a2;
      *a1 = *a2;
      swift_retain(v13);
      v9 = a1;
      v10 = v7;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
    v14 = a3[5];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = sub_10004CFD4((uint64_t *)&unk_1009F3ED0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v16, v17);
    v19 = *v16;
    *v15 = *v16;
    if (EnumCaseMultiPayload == 1)
    {
      v20 = v16[1];
      v15[1] = v20;
      swift_retain(v19);
      swift_retain(v20);
      v21 = *(int *)(sub_10004CFD4(&qword_1009F3300) + 32);
      v22 = (char *)v15 + v21;
      v23 = (char *)v16 + v21;
      v24 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
      v25 = 1;
    }
    else
    {
      swift_retain(v19);
      v25 = 0;
    }
    swift_storeEnumTagMultiPayload(v15, v17, v25);
    v26 = a3[6];
    v27 = a3[7];
    v28 = (uint64_t *)((char *)a1 + v26);
    v29 = (uint64_t *)((char *)a2 + v26);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = (uint64_t *)((char *)a1 + v27);
    v32 = (uint64_t *)((char *)a2 + v27);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = v32[2];
    v31[2] = v34;
    v35 = a3[8];
    v36 = *(uint64_t *)((char *)a2 + v35);
    *(uint64_t *)((char *)a1 + v35) = v36;
    swift_retain(v30);
    swift_bridgeObjectRetain(v33);
    swift_retain(v34);
    swift_unknownObjectRetain(v36);
  }
  return a1;
}

double sub_10066C824(_QWORD *a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  char *v9;
  uint64_t v10;
  char *v11;
  double result;

  v4 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
  {
    v5 = type metadata accessor for ColorScheme(0);
    (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  else
  {
    swift_release(*a1);
  }
  v6 = (_QWORD *)((char *)a1 + a2[5]);
  v7 = sub_10004CFD4((uint64_t *)&unk_1009F3ED0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v7);
  swift_release(*v6);
  if (EnumCaseMultiPayload == 1)
  {
    swift_release(v6[1]);
    v9 = (char *)v6 + *(int *)(sub_10004CFD4(&qword_1009F3300) + 32);
    v10 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  swift_release(*(_QWORD *)((char *)a1 + a2[6] + 8));
  v11 = (char *)a1 + a2[7];
  swift_bridgeObjectRelease(*((_QWORD *)v11 + 1));
  swift_release(*((_QWORD *)v11 + 2));
  *(_QWORD *)&result = swift_unknownObjectRelease(*(_QWORD *)((char *)a1 + a2[8])).n128_u64[0];
  return result;
}

uint64_t *sub_10066C930(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a1;
    v9 = v6;
    v10 = 1;
  }
  else
  {
    v11 = *a2;
    *a1 = *a2;
    swift_retain(v11);
    v8 = a1;
    v9 = v6;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  v12 = a3[5];
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = sub_10004CFD4((uint64_t *)&unk_1009F3ED0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
  v17 = *v14;
  *v13 = *v14;
  if (EnumCaseMultiPayload == 1)
  {
    v18 = v14[1];
    v13[1] = v18;
    swift_retain(v17);
    swift_retain(v18);
    v19 = *(int *)(sub_10004CFD4(&qword_1009F3300) + 32);
    v20 = (char *)v13 + v19;
    v21 = (char *)v14 + v19;
    v22 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    v23 = 1;
  }
  else
  {
    swift_retain(v17);
    v23 = 0;
  }
  swift_storeEnumTagMultiPayload(v13, v15, v23);
  v24 = a3[6];
  v25 = a3[7];
  v26 = (uint64_t *)((char *)a1 + v24);
  v27 = (uint64_t *)((char *)a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = (uint64_t *)((char *)a1 + v25);
  v30 = (uint64_t *)((char *)a2 + v25);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = v30[2];
  v29[2] = v32;
  v33 = a3[8];
  v34 = *(uint64_t *)((char *)a2 + v33);
  *(uint64_t *)((char *)a1 + v33) = v34;
  swift_retain(v28);
  swift_bridgeObjectRetain(v31);
  swift_retain(v32);
  swift_unknownObjectRetain(v34);
  return a1;
}

uint64_t *sub_10066CAD8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, (uint64_t *)&unk_1009D8200);
    v6 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = a1;
      v9 = v6;
      v10 = 1;
    }
    else
    {
      v11 = *a2;
      *a1 = *a2;
      swift_retain(v11);
      v8 = a1;
      v9 = v6;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
    v12 = a3[5];
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_100010960((uint64_t)a1 + v12, (uint64_t *)&unk_1009F3ED0);
    v15 = sub_10004CFD4((uint64_t *)&unk_1009F3ED0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v14, v15);
    v17 = *v14;
    *v13 = *v14;
    if (EnumCaseMultiPayload == 1)
    {
      v18 = v14[1];
      v13[1] = v18;
      swift_retain(v17);
      swift_retain(v18);
      v19 = *(int *)(sub_10004CFD4(&qword_1009F3300) + 32);
      v20 = (char *)v13 + v19;
      v21 = (char *)v14 + v19;
      v22 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      v23 = 1;
    }
    else
    {
      swift_retain(v17);
      v23 = 0;
    }
    swift_storeEnumTagMultiPayload(v13, v15, v23);
  }
  v24 = a3[6];
  v25 = (uint64_t *)((char *)a1 + v24);
  v26 = (uint64_t *)((char *)a2 + v24);
  *v25 = *v26;
  v27 = v26[1];
  v28 = v25[1];
  v25[1] = v27;
  swift_retain(v27);
  swift_release(v28);
  v29 = a3[7];
  v30 = (uint64_t *)((char *)a1 + v29);
  v31 = (char *)a2 + v29;
  *v30 = *(uint64_t *)((char *)a2 + v29);
  v32 = *(uint64_t *)((char *)a2 + v29 + 8);
  v33 = *(uint64_t *)((char *)a1 + v29 + 8);
  v30[1] = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease(v33);
  v34 = v30[2];
  v35 = *((_QWORD *)v31 + 2);
  v30[2] = v35;
  swift_retain(v35);
  swift_release(v34);
  v36 = a3[8];
  v37 = *(uint64_t *)((char *)a2 + v36);
  v38 = *(uint64_t *)((char *)a1 + v36);
  *(uint64_t *)((char *)a1 + v36) = v37;
  swift_unknownObjectRetain(v37);
  swift_unknownObjectRelease(v38);
  return a1;
}

char *sub_10066CCE0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
  if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
  {
    v7 = type metadata accessor for ColorScheme(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, v6, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_10004CFD4((uint64_t *)&unk_1009F3ED0);
  if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
  {
    v12 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v12;
    v13 = *(int *)(sub_10004CFD4(&qword_1009F3300) + 32);
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = type metadata accessor for PresentationMode(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    swift_storeEnumTagMultiPayload(v9, v11, 1);
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  v17 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  v18 = &a1[v17];
  v19 = &a2[v17];
  *(_OWORD *)v18 = *(_OWORD *)v19;
  *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

char *sub_10066CE54(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_100010960((uint64_t)a1, (uint64_t *)&unk_1009D8200);
    v6 = sub_10004CFD4((uint64_t *)&unk_1009D8200);
    if (swift_getEnumCaseMultiPayload(a2, v6) == 1)
    {
      v7 = type metadata accessor for ColorScheme(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, v6, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_100010960((uint64_t)&a1[v8], (uint64_t *)&unk_1009F3ED0);
    v11 = sub_10004CFD4((uint64_t *)&unk_1009F3ED0);
    if (swift_getEnumCaseMultiPayload(v10, v11) == 1)
    {
      v12 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v12;
      v13 = *(int *)(sub_10004CFD4(&qword_1009F3300) + 32);
      v14 = &v9[v13];
      v15 = &v10[v13];
      v16 = type metadata accessor for PresentationMode(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      swift_storeEnumTagMultiPayload(v9, v11, 1);
    }
    else
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
  }
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  v22 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_release(v22);
  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = *(_QWORD *)&a2[v23 + 8];
  v27 = *(_QWORD *)&a1[v23 + 8];
  *(_QWORD *)v24 = *(_QWORD *)&a2[v23];
  *((_QWORD *)v24 + 1) = v26;
  swift_bridgeObjectRelease(v27);
  v28 = *((_QWORD *)v24 + 2);
  *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
  swift_release(v28);
  v29 = a3[8];
  v30 = *(_QWORD *)&a1[v29];
  *(_QWORD *)&a1[v29] = *(_QWORD *)&a2[v29];
  swift_unknownObjectRelease(v30);
  return a1;
}

uint64_t sub_10066D01C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10066D028);
}

uint64_t sub_10066D028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_10004CFD4(&qword_1009EA560);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_10066D0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10066D0E8);
}

uint64_t sub_10066D0E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_10004CFD4((uint64_t *)&unk_1009D8230);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_10004CFD4(&qword_1009EA560);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for AdjustGoalModalView(uint64_t a1)
{
  uint64_t result;

  result = qword_1009F36C0;
  if (!qword_1009F36C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AdjustGoalModalView);
  return result;
}

void sub_10066D1D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  sub_100288A64(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10066D274(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_100737B38;
      v6[3] = &unk_100737B50;
      v6[4] = &unk_100737B68;
      swift_initStructMetadata(a1, 256, 5, v6, a1 + 16);
    }
  }
}

void sub_10066D274(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1009F3F60)
  {
    v2 = sub_100030B74(&qword_1009F3300);
    v3 = type metadata accessor for Environment.Content(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1009F3F60);
  }
}

uint64_t sub_10066D2CC(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_10087BAB4, 1);
}

void sub_10066D2DC()
{
  qword_1009F3630 = 0x4070400000000000;
}

double sub_10066D2F0()
{
  double result;

  result = 0.0;
  __asm { FMOV            V1.2D, #16.0 }
  xmmword_1009F3638 = xmmword_10071CB70;
  *(_OWORD *)&qword_1009F3648 = _Q1;
  return result;
}

uint64_t sub_10066D30C()
{
  uint64_t result;

  result = static Color.primary.getter();
  qword_1009F3658 = result;
  return result;
}

uint64_t sub_10066D328()
{
  id v0;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "secondarySystemBackgroundColor");
  result = Color.init(_:)(v0);
  qword_1009F3660 = result;
  return result;
}

uint64_t sub_10066D364@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __int128 v30;
  uint64_t v31;
  __n128 v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t KeyPath;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  id (**v60)();
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  _QWORD v76[2];
  _OWORD v77[3];

  v2 = v1;
  v73 = a1;
  v3 = type metadata accessor for AdjustGoalModalView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v66 = v3;
  v67 = v4;
  __chkstk_darwin(v3);
  v69 = v5;
  v71 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_10004CFD4(&qword_1009F3708);
  __chkstk_darwin(v6);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_10004CFD4(&qword_1009F3710);
  __chkstk_darwin(v9);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_10004CFD4(&qword_1009F3718);
  __chkstk_darwin(v12);
  v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_10004CFD4(&qword_1009F3720);
  __chkstk_darwin(v64);
  v63 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_10004CFD4(&qword_1009F3728);
  __chkstk_darwin(v65);
  v70 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_10004CFD4(&qword_1009F3730);
  __chkstk_darwin(v68);
  v72 = (uint64_t)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v8 = static HorizontalAlignment.center.getter(v18);
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v19 = sub_10004CFD4(&qword_1009F3738);
  v20 = v2;
  sub_10066D950(v2, (uint64_t)&v8[*(int *)(v19 + 44)]);
  if (qword_1009CEB50 != -1)
    swift_once(&qword_1009CEB50, sub_10066D2F0);
  v62 = xmmword_1009F3638;
  v21 = qword_1009F3648;
  v22 = unk_1009F3650;
  v23 = static Edge.Set.all.getter((__n128)xmmword_1009F3638);
  sub_10000B5E4((uint64_t)v8, (uint64_t)v11, &qword_1009F3708);
  v24 = &v11[*(int *)(v9 + 36)];
  *v24 = v23;
  *(_OWORD *)(v24 + 8) = v62;
  *((_QWORD *)v24 + 3) = v21;
  *((_QWORD *)v24 + 4) = v22;
  v24[40] = 0;
  v25 = sub_100010960((uint64_t)v8, &qword_1009F3708);
  if (qword_1009CEB48 != -1)
    v25 = swift_once(&qword_1009CEB48, sub_10066D2DC);
  v26 = qword_1009F3630;
  v27 = static Alignment.center.getter(v25);
  _FrameLayout.init(width:height:alignment:)(v77, v26, 0, 0, 1, v27, v28);
  sub_10000B5E4((uint64_t)v11, (uint64_t)v14, &qword_1009F3710);
  v29 = &v14[*(int *)(v12 + 36)];
  v30 = v77[1];
  *(_OWORD *)v29 = v77[0];
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v77[2];
  sub_100010960((uint64_t)v11, &qword_1009F3710);
  if (qword_1009CEB60 != -1)
    swift_once(&qword_1009CEB60, sub_10066D328);
  v31 = qword_1009F3660;
  v32 = swift_retain(qword_1009F3660);
  v33 = static Edge.Set.all.getter(v32);
  v34 = v63;
  sub_10000B5E4((uint64_t)v14, v63, &qword_1009F3718);
  v35 = v34 + *(int *)(v64 + 36);
  *(_QWORD *)v35 = v31;
  *(_BYTE *)(v35 + 8) = v33;
  sub_100010960((uint64_t)v14, &qword_1009F3718);
  v36 = v66;
  v37 = v20 + *(int *)(v66 + 28);
  v38 = *(_OWORD *)v37;
  v39 = *(_QWORD *)(v37 + 16);
  v74 = v38;
  v75 = v39;
  sub_10004CFD4(&qword_1009F4190);
  State.wrappedValue.getter(v76);
  v40 = v76[0];
  v41 = v76[1];
  v42 = v71;
  sub_10066FB14(v20, v71);
  v43 = *(unsigned __int8 *)(v67 + 80);
  v44 = (v43 + 16) & ~v43;
  v69 += v44;
  v67 = v43 | 7;
  v45 = swift_allocObject(&unk_10091AB30, v69, v43 | 7);
  sub_10066FB5C(v42, v45 + v44);
  v46 = v70;
  sub_10000B5E4(v34, v70, &qword_1009F3720);
  v47 = (_QWORD *)(v46 + *(int *)(v65 + 36));
  *v47 = v40;
  v47[1] = v41;
  v47[2] = sub_10066FBA0;
  v47[3] = v45;
  sub_100010960(v34, &qword_1009F3720);
  v48 = *(_QWORD *)(v20 + *(int *)(v36 + 24) + 8);
  KeyPath = swift_getKeyPath(&unk_100737BD8);
  v50 = swift_getKeyPath(&unk_100737C00);
  swift_retain(v48);
  static Published.subscript.getter(&v74, v51, KeyPath);
  swift_release(v48);
  swift_release(KeyPath);
  swift_release(v50);
  v52 = v74;
  sub_10066FB14(v20, v42);
  v53 = v69;
  v54 = v67;
  v55 = swift_allocObject(&unk_10091AB58, v69, v67);
  sub_10066FB5C(v42, v55 + v44);
  v56 = v72;
  sub_10000B5E4(v46, v72, &qword_1009F3728);
  v57 = (_QWORD *)(v56 + *(int *)(v68 + 36));
  *v57 = v52;
  v57[1] = sub_10066FCD8;
  v57[2] = v55;
  sub_100010960(v46, &qword_1009F3728);
  sub_10066FB14(v20, v42);
  v58 = swift_allocObject(&unk_10091AB80, v53, v54);
  sub_10066FB5C(v42, v58 + v44);
  v59 = v73;
  sub_10000B5E4(v56, v73, &qword_1009F3730);
  v60 = (id (**)())(v59 + *(int *)(sub_10004CFD4(&qword_1009F3740) + 36));
  *v60 = sub_10066FD18;
  v60[1] = (id (*)())v58;
  v60[2] = 0;
  v60[3] = 0;
  return sub_100010960(v56, &qword_1009F3730);
}

double sub_10066D950@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double result;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  unsigned __int8 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;

  v67 = a1;
  v4 = sub_10004CFD4(&qword_1009F3748);
  __chkstk_darwin(v4);
  v71 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v8 = (char *)&v56 - v7;
  v9 = sub_10004CFD4(&qword_1009F3750);
  __chkstk_darwin(v9);
  v70 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - v12;
  v14 = (uint64_t *)(*(_QWORD *)(a1 + *(int *)(type metadata accessor for AdjustGoalModalView(0) + 24) + 8)
                  + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_title);
  v15 = v14[1];
  v80 = *v14;
  v81 = v15;
  v16 = sub_1001F2108();
  v17 = swift_bridgeObjectRetain(v15);
  v18 = Text.init<A>(_:)(&v80, &type metadata for String, v16, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23 & 1;
  v25 = static Font.title3.getter();
  static Font.Weight.semibold.getter(v25);
  v26 = Font.weight(_:)(v25);
  swift_release(v25);
  v72 = Text.font(_:)(v26, v18, v20, v24, v22);
  v68 = v27;
  v69 = v28;
  LOBYTE(v25) = v29;
  swift_release(v26);
  v30 = v25 & 1;
  sub_1001F5B28(v18, v20, v24);
  swift_bridgeObjectRelease(v22);
  v32 = static Alignment.center.getter(v31);
  v34 = _FrameLayout.init(width:height:alignment:)(&v74, 0, 1, 0x404C000000000000, 0, v32, v33);
  v35 = v74;
  v66 = v75;
  v65 = v76;
  v64 = v77;
  v63 = v78;
  v62 = v79;
  *(_QWORD *)v13 = static VerticalAlignment.center.getter(v34);
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  v36 = sub_10004CFD4(&qword_1009F3758);
  v37 = v67;
  v38 = sub_10066EBC0(v67, &v13[*(int *)(v36 + 44)]);
  v39 = static Alignment.center.getter(v38);
  v41 = _FrameLayout.init(width:height:alignment:)(&v80, 0, 1, 0x4030000000000000, 0, v39, v40);
  v61 = v80;
  v60 = v81;
  v59 = v82;
  v58 = v83;
  v57 = v84;
  v56 = v85;
  v42 = (uint64_t)v8;
  *(_QWORD *)v8 = static VerticalAlignment.center.getter(v41);
  *((_QWORD *)v8 + 1) = 0x4020000000000000;
  v8[16] = 0;
  v43 = sub_10004CFD4(&qword_1009F3760);
  sub_10066DE04(v37, &v8[*(int *)(v43 + 44)], v44);
  v73 = v30;
  v45 = (uint64_t)v13;
  v46 = v70;
  sub_10000B5E4((uint64_t)v13, v70, &qword_1009F3750);
  v47 = v71;
  sub_10000B5E4(v42, v71, &qword_1009F3748);
  v49 = v68;
  v48 = v69;
  *(_QWORD *)a2 = v72;
  *(_QWORD *)(a2 + 8) = v49;
  *(_BYTE *)(a2 + 16) = v30;
  *(_QWORD *)(a2 + 24) = v48;
  *(_QWORD *)(a2 + 32) = v35;
  *(_BYTE *)(a2 + 40) = v66;
  *(_QWORD *)(a2 + 48) = v65;
  *(_BYTE *)(a2 + 56) = v64;
  v50 = v62;
  *(_QWORD *)(a2 + 64) = v63;
  *(_QWORD *)(a2 + 72) = v50;
  v51 = (int *)sub_10004CFD4(&qword_1009F3768);
  sub_10000B5E4(v46, a2 + v51[12], &qword_1009F3750);
  v52 = a2 + v51[16];
  *(_QWORD *)v52 = 0;
  *(_BYTE *)(v52 + 8) = 1;
  *(_QWORD *)(v52 + 16) = v61;
  *(_BYTE *)(v52 + 24) = v60;
  *(_QWORD *)(v52 + 32) = v59;
  *(_BYTE *)(v52 + 40) = v58;
  v53 = v56;
  *(_QWORD *)(v52 + 48) = v57;
  *(_QWORD *)(v52 + 56) = v53;
  sub_10000B5E4(v47, a2 + v51[20], &qword_1009F3748);
  v54 = v72;
  sub_1001F596C(v72, v49, v30);
  swift_bridgeObjectRetain(v48);
  sub_1001F596C(v54, v49, v30);
  swift_bridgeObjectRetain(v48);
  sub_100010960(v42, &qword_1009F3748);
  sub_100010960(v45, &qword_1009F3750);
  sub_1001F5B28(v54, v49, v30);
  swift_bridgeObjectRelease(v48);
  sub_100010960(v47, &qword_1009F3748);
  sub_100010960(v46, &qword_1009F3750);
  sub_1001F5B28(v54, v49, v73);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v48).n128_u64[0];
  return result;
}

uint64_t sub_10066DE04@<X0>(uint64_t a1@<X0>, char *a2@<X8>, double a3@<D0>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;

  v45 = a1;
  v50 = a2;
  v4 = type metadata accessor for KeyboardShortcut(0, a3);
  v48 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AdjustGoalModalView(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_10004CFD4(&qword_1009D8460);
  v46 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_10004CFD4(&qword_1009F3770);
  v52 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v49 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v47 = (char *)&v41 - v17;
  __chkstk_darwin(v18);
  v20 = (char *)&v41 - v19;
  __chkstk_darwin(v21);
  v51 = (char *)&v41 - v22;
  sub_10066FB14(a1, (uint64_t)v10);
  v23 = *(unsigned __int8 *)(v8 + 80);
  v24 = (v23 + 16) & ~v23;
  v25 = v24 + v9;
  v44 = v23 | 7;
  v26 = swift_allocObject(&unk_10091ABA8, v25, v23 | 7);
  sub_10066FB5C((uint64_t)v10, v26 + v24);
  v27 = Button.init(action:label:)(sub_10066FD48, v26, sub_10066E36C, 0, &type metadata for Text, &protocol witness table for Text);
  static KeyboardShortcut.cancelAction.getter(v27);
  v43 = sub_100030B34((unint64_t *)&qword_1009F4060, &qword_1009D8460, (uint64_t)&protocol conformance descriptor for Button<A>);
  View.keyboardShortcut(_:)(v6, v11, v43);
  v48 = *(_QWORD *)(v48 + 8);
  ((void (*)(char *, uint64_t))v48)(v6, v4);
  v28 = *(void (**)(char *, uint64_t))(v46 + 8);
  v28(v13, v11);
  v29 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  v29(v51, v20, v14);
  sub_10066FB14(v45, (uint64_t)v10);
  v30 = swift_allocObject(&unk_10091ABD0, v25, v44);
  sub_10066FB5C((uint64_t)v10, v30 + v24);
  v31 = Button.init(action:label:)(sub_10066FD58, v30, sub_10066E574, 0, &type metadata for Text, &protocol witness table for Text);
  static KeyboardShortcut.defaultAction.getter(v31);
  v32 = v47;
  View.keyboardShortcut(_:)(v6, v11, v43);
  ((void (*)(char *, uint64_t))v48)(v6, v42);
  v28(v13, v11);
  v29(v20, v32, v14);
  v34 = v51;
  v33 = v52;
  v35 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  v35(v32, v51, v14);
  v36 = v49;
  v35(v49, v20, v14);
  v37 = v50;
  v35(v50, v32, v14);
  v38 = sub_10004CFD4(&qword_1009F3778);
  v35(&v37[*(int *)(v38 + 48)], v36, v14);
  v39 = *(void (**)(char *, uint64_t))(v33 + 8);
  v39(v20, v14);
  v39(v34, v14);
  v39(v36, v14);
  return ((uint64_t (*)(char *, uint64_t))v39)(v32, v14);
}

int *sub_10066E1D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *result;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for PresentationMode(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_10004CFD4(&qword_1009F3300);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (int *)type metadata accessor for AdjustGoalModalView(0);
  v8 = result;
  v9 = *(_QWORD *)(v0 + result[6] + 8);
  v10 = *(_QWORD *)(v9 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_initialGoal);
  if ((*(_BYTE *)(v9 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_goalType) & 1) == 0)
  {
    objc_msgSend(*(id *)(v0 + result[8]), "changeBooksPerYearGoal::", v10, 1);
    goto LABEL_5;
  }
  if ((unsigned __int128)(v10 * (__int128)60) >> 64 == (60 * v10) >> 63)
  {
    objc_msgSend(*(id *)(v0 + result[8]), "changeDailyGoal::", 1, (double)(60 * v10));
LABEL_5:
    sub_100668C00((uint64_t)v6);
    Binding.wrappedValue.getter(v3, v4);
    PresentationMode.dismiss()();
    Binding.wrappedValue.setter(v3, v4);
    v11 = sub_100010960((uint64_t)v6, &qword_1009F3300);
    return (int *)objc_msgSend(*(id *)(v0 + v8[8]), "setCurrentActiveAchievementSheetWithKind:", static Achievement.Key.jsKindNone.getter(v11));
  }
  __break(1u);
  return result;
}

uint64_t sub_10066E36C@<X0>(uint64_t *a1@<X8>)
{
  return sub_10063A3E4(0x6C65636E6143, 0xE600000000000000, "Cancel button title for reading goals stepper view", 50, a1);
}

void sub_10066E38C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for PresentationMode(0);
  __chkstk_darwin(v2);
  v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_10004CFD4(&qword_1009F3300);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AdjustGoalModalView(0);
  v9 = *(_QWORD *)(v0 + *(int *)(v8 + 24) + 8);
  KeyPath = swift_getKeyPath(&unk_100737BD8);
  v11 = swift_getKeyPath(&unk_100737C00);
  swift_retain(v9);
  static Published.subscript.getter(&v16, v12, KeyPath);
  swift_release(v9);
  swift_release(KeyPath);
  *(_QWORD *)&v13 = swift_release(v11).n128_u64[0];
  if ((*(_BYTE *)(v9 + OBJC_IVAR____TtC5Books24AdjustGoalModalViewModel_goalType) & 1) == 0)
  {
    objc_msgSend(*(id *)(v1 + *(int *)(v8 + 32)), "changeBooksPerYearGoal::", v16, 0, v13);
    goto LABEL_5;
  }
  if ((unsigned __int128)(v16 * (__int128)60) >> 64 == (60 * v16) >> 63)
  {
    objc_msgSend(*(id *)(v1 + *(int *)(v8 + 32)), "changeDailyGoal::", 0, (double)(60 * v16));
LABEL_5:
    sub_100668C00((uint64_t)v7);
    Binding.wrappedValue.getter(v4, v5);
    PresentationMode.dismiss()();
    Binding.wrappedValue.setter(v4, v5);
    v14 = sub_100010960((uint64_t)v7, &qword_1009F3300);
    objc_msgSend(*(id *)(v1 + *(int *)(v8 + 32)), "setCurrentActiveAchievementSheetWithKind:", static Achievement.Key.jsKindNone.getter(v14));
    return;
  }
  __break(1u);
}

