id sub_5304(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "clearSearchLocation");
}

void sub_5680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_56A4(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  id v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "setHidden:", 0);
  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "loader"));
  objc_msgSend(v4, "updateMediaFrames:", &stru_1BE908);

  v5 = objc_loadWeakRetained(v2);
  LODWORD(v4) = objc_msgSend(v5, "didFinishRendering");

  if ((_DWORD)v4)
  {
    v6 = objc_loadWeakRetained(v2);
    objc_msgSend(v6, "_readyToShow");

  }
}

id sub_640C(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  _QWORD *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  void *v29;
  id v30;
  NSObject *v31;
  void *v32;
  int v33;
  void *v34;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 192), "pointToCenterAfterRotation");
  v3 = v2;
  v5 = v4;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 192), "scaleToRestoreAfterRotation");
  v7 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v8, "bounds");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 192), "setFrame:");

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 192), "configureForNewBoundsAndRestoreCenterPoint:andScale:", v3, v5, v7);
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 360) = objc_msgSend(*(id *)(a1 + 32), "singlePageAspectFits");
  v9 = *(_QWORD **)(a1 + 32);
  if (*(double *)(a1 + 40) <= *(double *)(a1 + 48))
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "delegate"));
    v15 = objc_msgSend(v14, "pageNavigationCurrentReadAloudPageOffset:", *(_QWORD *)(a1 + 32));

    if (v15 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      *(_QWORD *)(*(_QWORD *)(a1 + 32) + 352) = v15;
      v16 = _AECaptureLocationLog();
      v17 = objc_claimAutoreleasedReturnValue(v16);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 352)));
        v33 = 138412290;
        v34 = v18;
        _os_log_impl(&dword_0, v17, OS_LOG_TYPE_DEFAULT, "#PictureBook 2 Capturing offset : %@", (uint8_t *)&v33, 0xCu);

      }
    }
    v19 = *(_QWORD **)(a1 + 32);
    v20 = v19[44];
    if (v20 == 0x7FFFFFFFFFFFFFFFLL)
    {
      v21 = (char *)objc_msgSend(v19, "layoutDirection");
      v22 = *(void **)(a1 + 32);
      v23 = objc_msgSend(v22, "pageOffset");
      if (v21 == (_BYTE *)&dword_0 + 1)
        v24 = objc_msgSend(v22, "rightPageNumberForSinglePageOffset:", v23);
      else
        v24 = objc_msgSend(v22, "leftPageNumberForSinglePageOffset:", v23);
      *(_QWORD *)(*(_QWORD *)(a1 + 32) + 352) = v24;
      v25 = *(_QWORD **)(a1 + 32);
      v26 = v25[44];
      if (v26 == 0x7FFFFFFFFFFFFFFFLL)
        *(_QWORD *)(*(_QWORD *)(a1 + 32) + 352) = objc_msgSend(v25, "pageOffset");
      else
        v25[44] = v26 - 1;
      v27 = _AECaptureLocationLog();
      v28 = objc_claimAutoreleasedReturnValue(v27);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
      {
        v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 352)));
        v33 = 138412290;
        v34 = v29;
        _os_log_impl(&dword_0, v28, OS_LOG_TYPE_DEFAULT, "#PictureBook 3 Capturing offset : %@", (uint8_t *)&v33, 0xCu);

      }
      v19 = *(_QWORD **)(a1 + 32);
      v20 = v19[44];
    }
    objc_msgSend(v19, "setPageOffset:", v20);
    v30 = _AECaptureLocationLog();
    v31 = objc_claimAutoreleasedReturnValue(v30);
    if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
    {
      v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 352)));
      v33 = 138412290;
      v34 = v32;
      _os_log_impl(&dword_0, v31, OS_LOG_TYPE_DEFAULT, "#PictureBook 4 Using offset : %@", (uint8_t *)&v33, 0xCu);

    }
    *(_QWORD *)(*(_QWORD *)(a1 + 32) + 352) = 0x7FFFFFFFFFFFFFFFLL;
    return objc_msgSend(*(id *)(a1 + 32), "zoomToPage:animated:", (char *)objc_msgSend(*(id *)(a1 + 32), "pageOffset") + 1, 0);
  }
  else
  {
    if (v9[44] == 0x7FFFFFFFFFFFFFFFLL)
    {
      *(_QWORD *)(*(_QWORD *)(a1 + 32) + 352) = objc_msgSend(v9, "pageOffset");
      v10 = _AECaptureLocationLog();
      v11 = objc_claimAutoreleasedReturnValue(v10);
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 352)));
        v33 = 138412290;
        v34 = v12;
        _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, "#PictureBook 1 Capturing offset : %@", (uint8_t *)&v33, 0xCu);

      }
      v9 = *(_QWORD **)(a1 + 32);
    }
    return objc_msgSend(v9, "zoomToSpread:", 0);
  }
}

id sub_67E0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateBookScale");
}

uint64_t sub_67E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_67F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_737C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_73A0(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[4];
  id v11;
  uint64_t v12;
  id v13;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    if (v3)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_imageViewForPageContentImage:", v3));
      objc_msgSend(*(id *)(a1 + 32), "setLeftContentView:", v5);

    }
    v6 = objc_msgSend(*(id *)(a1 + 40), "pageOffset");
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_7484;
    v10[3] = &unk_1BE9E8;
    v7 = *(id *)(a1 + 32);
    v8 = *(_QWORD *)(a1 + 40);
    v9 = *(void **)(a1 + 48);
    v11 = v7;
    v12 = v8;
    v13 = v9;
    objc_msgSend(WeakRetained, "_generateRightPageImageAtPageOffset:completion:", v6, v10);

  }
}

void sub_7484(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  if (a2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_imageViewForPageContentImage:", a2));
    objc_msgSend(*(id *)(a1 + 32), "setRightContentView:", v3);

  }
  objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
  v4 = *(_QWORD *)(a1 + 48);
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "im_snapshotInContext"));
  (*(void (**)(uint64_t, id))(v4 + 16))(v4, v5);

}

id sub_79E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 240), "killCurlingSourceViews");
}

id sub_79FC(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setSelectionHighlightsVisible:", 0);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 192), "setContentOffset:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

id sub_7A38(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setSelectionHighlightsVisible:", 1);
  return _objc_msgSend(*(id *)(a1 + 32), "_updateSelectionHighlights");
}

void sub_7CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_7CE4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "setImage:", a2);
}

void sub_7CF0(uint64_t a1)
{
  id v2;
  id v3;
  id to;

  objc_copyWeak(&to, (id *)(a1 + 40));
  v2 = objc_loadWeakRetained(&to);
  +[NSObject cancelPreviousPerformRequestsWithTarget:selector:object:](NSObject, "cancelPreviousPerformRequestsWithTarget:selector:object:", v2, "_timeOutWaitingForPaint", 0);

  objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
  v3 = objc_loadWeakRetained(&to);
  objc_msgSend(v3, "setLastCurlUnderPageView:", 0);

  objc_destroyWeak(&to);
}

void sub_7D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_9FC0(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[UIMenuController sharedMenuController](UIMenuController, "sharedMenuController"));
  objc_msgSend(v1, "hideMenu");

}

void sub_A0C4(id a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(+[UIMenuController sharedMenuController](UIMenuController, "sharedMenuController"));
  objc_msgSend(v1, "hideMenu");

}

id sub_A2A4(uint64_t a1)
{
  id result;

  objc_msgSend(*(id *)(a1 + 32), "enterSinglePageMode");
  result = objc_msgSend(*(id *)(a1 + 32), "turnToPageNumber:animated:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 288), 1);
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 288) = 0;
  return result;
}

id sub_C188(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "setImage:", a2);
}

id sub_C6A8(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "setImage:", a2);
}

void sub_EBA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_EBC0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  CGAffineTransform v12;
  CGAffineTransform v13;
  _OWORD v14[3];
  _OWORD v15[2];
  __int128 v16;

  if (*(_BYTE *)(a1 + 48))
  {
    objc_msgSend(*(id *)(a1 + 32), "resetZoomScale");
  }
  else
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrollView"));
    objc_msgSend(v2, "setMinimumZoomScale:", 1.0);

  }
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pageNumberHUD"));
  v11 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v15[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v10 = v15[0];
  v15[1] = v11;
  v16 = *(_OWORD *)&CGAffineTransformIdentity.tx;
  v9 = v16;
  objc_msgSend(v3, "setTransform:", v15);

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrollView"));
  v14[0] = v10;
  v14[1] = v11;
  v14[2] = v9;
  objc_msgSend(v4, "setTransform:", v14);

  CGAffineTransformMakeScale(&v13, 0.0, 0.0);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "scrubberContainerView"));
  v12 = v13;
  objc_msgSend(v5, "setTransform:", &v12);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "backgroundImageView"));
  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "backgroundImageView"));
    objc_msgSend(v7, "setAlpha:", 0.0);

  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pageNumberHUD"));
  objc_msgSend(v8, "layoutIfNeeded");

}

void sub_ED24(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v9 = WeakRetained;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "verticalScrubber"));
    objc_msgSend(v3, "cancelPendingRenderRequests");

    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "verticalScrubber"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "callout"));
    objc_msgSend(v5, "removeFromSuperview");

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "verticalScrubber"));
    objc_msgSend(v6, "removeFromSuperview");

    objc_msgSend(v9, "setVerticalScrubber:", 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "scrubberContainerView"));
    objc_msgSend(v7, "removeFromSuperview");

    objc_msgSend(v9, "setScrubberContainerView:", 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "backgroundImageView"));
    objc_msgSend(v8, "removeFromSuperview");

    objc_msgSend(v9, "setBackgroundImageView:", 0);
    objc_msgSend(*(id *)(a1 + 32), "setAllowDoubleTapToZoom:", 1);
    objc_msgSend(v9, "setVerticalScrubberAnimator:", 0);
    objc_msgSend(v9, "setSwipeToShowScrubberEnable:", 1);
    WeakRetained = v9;
  }

}

void sub_F2A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_F2D8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_F2E8(uint64_t a1)
{

}

void sub_F2F0(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (WeakRetained && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40))
  {
    objc_msgSend(WeakRetained, "setupBackgroundImageViewWithImage:", v9);
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "view"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "backgroundImageView"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "scrollView"));
    objc_msgSend(v5, "insertSubview:below:", v6, v7);

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "backgroundImageView"));
    objc_msgSend(v8, "setAlpha:", 0.0);

  }
}

UIColor *__cdecl sub_F6B0(id a1, UITraitCollection *a2)
{
  return (UIColor *)(id)objc_claimAutoreleasedReturnValue(+[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.0, 0.0, 0.0, dbl_172A00[(char *)-[UITraitCollection userInterfaceStyle](a2, "userInterfaceStyle") == (char *)&dword_0 + 2]));
}

void sub_FD3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,id location)
{
  id *v57;
  id *v58;

  objc_destroyWeak(v57);
  objc_destroyWeak(v58);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id sub_FD6C(uint64_t a1)
{
  __int128 v2;
  void *v3;
  double v4;
  void *v5;
  void *v6;
  __int128 v7;
  void *v8;
  double v9;
  void *v10;
  __int128 v11;
  void *v12;
  _OWORD v14[3];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v18[3];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[3];

  if (*(_BYTE *)(a1 + 216))
  {
    objc_msgSend(*(id *)(a1 + 32), "setZoomScale:", *(double *)(a1 + 48));
    if (*(_BYTE *)(a1 + 217))
    {
      v2 = *(_OWORD *)(a1 + 72);
      v22[0] = *(_OWORD *)(a1 + 56);
      v22[1] = v2;
      v22[2] = *(_OWORD *)(a1 + 88);
      v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrollView"));
      objc_msgSend(v3, "setTransform:", v22);

    }
  }
  v4 = *(double *)(a1 + 104);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pageNumberHUDWidthConstraint"));
  objc_msgSend(v5, "setConstant:", v4);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pageNumberHUD"));
  objc_msgSend(v6, "setNeedsLayout");

  v7 = *(_OWORD *)(a1 + 128);
  v19 = *(_OWORD *)(a1 + 112);
  v20 = v7;
  v21 = *(_OWORD *)(a1 + 144);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "scrubberContainerView"));
  v18[0] = v19;
  v18[1] = v20;
  v18[2] = v21;
  objc_msgSend(v8, "setTransform:", v18);

  v9 = *(double *)(a1 + 160);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "backgroundImageView"));
  objc_msgSend(v10, "setAlpha:", v9);

  v11 = *(_OWORD *)(a1 + 184);
  v15 = *(_OWORD *)(a1 + 168);
  v16 = v11;
  v17 = *(_OWORD *)(a1 + 200);
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "pageNumberHUD"));
  v14[0] = v15;
  v14[1] = v16;
  v14[2] = v17;
  objc_msgSend(v12, "setTransform:", v14);

  return objc_msgSend(*(id *)(a1 + 40), "_updateHUDVisibility");
}

void sub_FEC8(uint64_t a1)
{
  double v2;
  void *v3;
  double v4;
  void *v5;
  void *v6;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = *(double *)(a1 + 48);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentReadingPositionView"));
  objc_msgSend(v3, "setAlpha:", v2);

  objc_msgSend(WeakRetained, "updateCurrentReadingPositionViewIfNeeded");
  v4 = *(double *)(a1 + 56);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pageNumberHUDWidthConstraint"));
  objc_msgSend(v5, "setConstant:", v4);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pageNumberHUD"));
  objc_msgSend(v6, "layoutIfNeeded");

}

void sub_FF60(uint64_t a1, uint64_t a2)
{
  id WeakRetained;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!a2 && WeakRetained)
  {
    v4 = WeakRetained;
    objc_msgSend(WeakRetained, "setVerticalScrubberAnimator:", 0);
    WeakRetained = v4;
  }

}

id sub_11D58(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_cleanupSnapshotWebViews");
}

uint64_t sub_11D60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_1206C(id a1)
{
  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
}

void sub_12458(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetViewControllerDelegate"));
  objc_msgSend(v2, "didFinishUpdateForAssetViewController:", *(_QWORD *)(a1 + 32));

}

id sub_14048(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_1420C(uint64_t a1)
{
  _UIAccessibilityIgnoreNextNotification(UIAccessibilityScreenChangedNotification);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 968), "setAlpha:", 0.0);
}

id sub_1424C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 968), "removeFromSuperview");
}

uint64_t sub_14A88(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_156E0(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

id sub_17F18(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "setImage:", a2);
}

id sub_17F24(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "setImage:", a2);
}

void sub_17F30(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setImage:");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "addGutter:", *(unsigned __int8 *)(a1 + 48));
  if (objc_msgSend(*(id *)(a1 + 32), "isAutoCurl"))
  {
    v3 = *(void **)(a1 + 40);
    if (*(_BYTE *)(*(_QWORD *)(a1 + 32) + 104))
      objc_msgSend(v3, "setLeftImage:", v4);
    else
      objc_msgSend(v3, "setRightImage:", v4);
  }

}

id sub_17FB0(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "setRightImage:", a2);
}

id sub_17FBC(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "setLeftImage:", a2);
}

void sub_18754(id a1)
{
  BKFontCache *v1;
  void *v2;

  v1 = objc_opt_new(BKFontCache);
  v2 = (void *)qword_20F4D0;
  qword_20F4D0 = (uint64_t)v1;

}

void sub_18F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_18FCC(uint64_t a1)
{
  id v2;
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;

  if (objc_msgSend(*(id *)(a1 + 32), "state") == 2
    && *(_BYTE *)(a1 + 56)
    && *(_BYTE *)(a1 + 57)
    && (objc_msgSend(*(id *)(a1 + 40), "disableAutoFontDownload") & 1) == 0)
  {
    v2 = _AEBookPluginsFontCacheLog();
    v3 = objc_claimAutoreleasedReturnValue(v2);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "familyName"));
      v5 = 138543362;
      v6 = v4;
      _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "Attempting download of %{public}@", (uint8_t *)&v5, 0xCu);

    }
    objc_msgSend(*(id *)(a1 + 32), "download");
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_190C4(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  id v7;
  uint64_t v8;
  int v9;
  id v10;
  __int16 v11;
  uint64_t v12;

  v2 = objc_retainBlock(*(id *)(a1 + 48));
  v3 = v2;
  if (v2)
    (*((void (**)(id))v2 + 2))(v2);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v4, "postNotificationName:object:", BKStyleManagerDidRegisterFontsNotification[0], 0);

  v5 = _AEBookPluginsFontCacheLog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = objc_msgSend(*(id *)(a1 + 32), "count");
    v8 = *(_QWORD *)(a1 + 40);
    v9 = 134218242;
    v10 = v7;
    v11 = 2114;
    v12 = v8;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "Registered %lu fonts for language: %{public}@", (uint8_t *)&v9, 0x16u);
  }

}

void sub_193C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_196F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_197AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  objc_sync_exit(v7);
  _Unwind_Resume(a1);
}

uint64_t sub_19990(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_199A0(uint64_t a1)
{

}

void sub_199A8(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v16 = a2;
  v6 = objc_opt_class(NSString);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKey:", CFSTR("fontFamily")));
  v8 = BUDynamicCast(v6, v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  if (objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", v9))
  {
    v10 = objc_opt_class(NSArray);
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "objectForKey:", CFSTR("settings")));
    v12 = BUDynamicCast(v10, v11);
    v13 = objc_claimAutoreleasedReturnValue(v12);
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    v15 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v13;

    *a4 = 1;
  }

}

void sub_19B38(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19D5C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_19D88(uint64_t a1, void *a2, char *a3)
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  if ((char *)objc_msgSend(*(id *)(a1 + 32), "count") - 1 > a3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "fileNames"));
    objc_msgSend(v5, "removeObject:", v10);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "fontsByFileName"));
    objc_msgSend(v6, "setObject:forKeyedSubscript:", 0, v10);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "fontLookupByFileName"));
    objc_msgSend(v7, "setObject:forKeyedSubscript:", 0, v10);

    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "presetsByFileName"));
    objc_msgSend(v8, "setObject:forKeyedSubscript:", 0, v10);

    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "fontFaceLookupByFileName"));
    objc_msgSend(v9, "setObject:forKeyedSubscript:", 0, v10);

  }
}

void sub_1A108(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v7;
  id v8;
  id v9;
  id v10;
  NSMutableDictionary *v11;
  id v12;
  id v13;

  v13 = a4;
  if (a3)
    v7 = a3;
  else
    v7 = a2;
  v8 = v7;
  v9 = a3;
  v10 = a2;
  v11 = objc_opt_new(NSMutableDictionary);
  -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v8, CFSTR("normal"));
  -[NSMutableDictionary setObject:forKeyedSubscript:](v11, "setObject:forKeyedSubscript:", v13, CFSTR("bold"));
  v12 = -[NSMutableDictionary copy](v11, "copy");
  objc_msgSend(*(id *)(a1 + 32), "setObject:forKeyedSubscript:", v12, v10);

}

void sub_1A1D8(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  void *v6;
  id v7;
  void *v8;
  const __CFString *v9;
  id v10;
  CTFontDescriptorRef v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;

  v17 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "valueForKey:", CFSTR("system")));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "valueForKey:", CFSTR("fontFamily")));
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("default")))
  {
    v7 = objc_msgSend(v17, "mutableCopy");
    v8 = v7;
    v9 = CFSTR("system-ui");
LABEL_5:
    objc_msgSend(v7, "setObject:forKey:", v9, CFSTR("fontFamily"));
    objc_msgSend(v8, "setObject:forKey:", v9, CFSTR("postscriptName"));
    objc_msgSend(v8, "setObject:forKey:", v9, CFSTR("postscriptBoldName"));
    v10 = objc_msgSend(v8, "copy");
    objc_msgSend(*(id *)(a1 + 32), "replaceObjectAtIndex:withObject:", a3, v10);
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

    goto LABEL_6;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("serif")))
  {
    v7 = objc_msgSend(v17, "mutableCopy");
    v8 = v7;
    v9 = CFSTR("ui-serif");
    goto LABEL_5;
  }
  if (!objc_msgSend(v6, "length"))
    goto LABEL_7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v6, kCTFontFamilyNameAttribute, 0));
  v11 = CTFontDescriptorCreateWithAttributes((CFDictionaryRef)v8);
  if (v11)
  {
    v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "objectForKey:", CFSTR("postscriptName")));
    v13 = (void *)v12;
    if (v12)
      v14 = (void *)v12;
    else
      v14 = v6;
    v15 = v14;

    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "objectForKey:", CFSTR("postscriptBoldName")));
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "removeObject:", v17);
  }
  CFRelease(v11);
LABEL_6:

LABEL_7:
}

void sub_1C5A0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_activityItemsConfiguration"));
  objc_msgSend(*(id *)(a1 + 32), "setActivityItemsConfiguration:", v2);

}

NSArray *__cdecl sub_1C5E4(id a1, NSArray *a2)
{
  return (NSArray *)&__NSArray0__struct;
}

void sub_1CD2C(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v6 = a2;
  objc_opt_class(UICommand);
  v4 = BUDynamicCast(v3, *(_QWORD *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  if (v5)
    objc_msgSend(*(id *)(a1 + 40), "changeAnnotationStyle:annotation:", v5, v6);

}

void sub_1E4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1E4E4(uint64_t a1, int a2)
{
  id WeakRetained;
  unsigned __int8 v5;
  void *v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (a2)
  {
    v6 = WeakRetained;
    v5 = objc_msgSend(*(id *)(a1 + 32), "isAnnotationDeleted");
    WeakRetained = v6;
    if ((v5 & 1) == 0)
    {
      objc_msgSend(v6, "_highlightAnnotationWK2:", *(_QWORD *)(a1 + 32));
      WeakRetained = v6;
    }
  }

}

void sub_1E7F4(id a1, id a2, unint64_t a3, BOOL *a4)
{
  objc_msgSend(a2, "setCurrentLineRect:", a3, a4, CGRectZero.origin.x, CGRectZero.origin.y, CGRectZero.size.width, CGRectZero.size.height);
}

void sub_1E80C(uint64_t a1, void *a2, unint64_t a3)
{
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  double MinY;
  double Height;
  double v20;
  double v21;
  _QWORD v22[8];
  CGRect v23;
  CGRect v24;
  CGRect v25;

  objc_msgSend(a2, "CGRectValue");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v22[0] = _NSConcreteStackBlock;
  v22[1] = 3221225472;
  v22[2] = sub_1EA18;
  v22[3] = &unk_1BEF58;
  *(double *)&v22[4] = v5;
  *(double *)&v22[5] = v7;
  *(double *)&v22[6] = v9;
  *(double *)&v22[7] = v11;
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithBlock:](NSPredicate, "predicateWithBlock:", v22));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "lines"));
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "filteredArrayUsingPredicate:", v13));
  v16 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "lastObject"));

  if (!v16)
    v16 = objc_alloc_init((Class)AEHighlightLine);
  objc_msgSend(v16, "setIncludesCapSpace:", 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "theme"));
  objc_msgSend(v16, "setLightenBlend:", objc_msgSend(v17, "shouldInvertContent"));

  objc_msgSend(v16, "setFullLineRect:", v6, v8, v10, v12);
  objc_msgSend(v16, "setCurrentLineRect:", v6, v8, v10, v12);
  objc_msgSend(v16, "setUnderlineDirection:", *(unsigned int *)(a1 + 64));
  if (*(_DWORD *)(a1 + 64) || (unint64_t)objc_msgSend(*(id *)(a1 + 48), "count") <= a3)
  {
    v25.origin.x = v6;
    v25.origin.y = v8;
    v25.size.width = v10;
    v25.size.height = v12;
    v21 = round(CGRectGetMaxY(v25));
  }
  else
  {
    v23.origin.x = v6;
    v23.origin.y = v8;
    v23.size.width = v10;
    v23.size.height = v12;
    MinY = CGRectGetMinY(v23);
    v24.origin.x = v6;
    v24.origin.y = v8;
    v24.size.width = v10;
    v24.size.height = v12;
    Height = CGRectGetHeight(v24);
    objc_msgSend(*(id *)(a1 + 40), "underlinePercent");
    v21 = MinY + round(Height * v20);
  }
  objc_msgSend(v16, "setUnderlinePosition:", v21);
  if ((objc_msgSend(*(id *)(a1 + 56), "containsObject:", v16) & 1) == 0)
    objc_msgSend(*(id *)(a1 + 56), "addObject:", v16);

}

BOOL sub_1EA18(CGRect *a1, void *a2)
{
  CGRect v4;

  objc_msgSend(a2, "fullLineRect");
  return CGRectEqualToRect(v4, a1[1]);
}

void sub_1EC28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1EC5C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id WeakRetained;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  NSObject *v19;
  uint64_t v20;
  _QWORD v21[4];
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  id v25;

  v6 = a3;
  v7 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v9 = WeakRetained;
  if (v6 && WeakRetained)
  {
    if (*(_QWORD *)(a1 + 32))
    {
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "annotationRectUnionCache"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "valueForKey:", *(_QWORD *)(a1 + 32)));

      if (!v11)
      {
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "annotationRectsCache"));
        objc_msgSend(v12, "setObject:forKey:", v6, *(_QWORD *)(a1 + 32));

        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "annotationRectUnionCache"));
        v21[0] = BKUnionRects(v6);
        v21[1] = v14;
        v21[2] = v15;
        v21[3] = v16;
        v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithBytes:objCType:](NSValue, "valueWithBytes:objCType:", v21, "{CGRect={CGPoint=dd}{CGSize=dd}}"));
        objc_msgSend(v13, "setObject:forKey:", v17, *(_QWORD *)(a1 + 32));

      }
    }
    objc_msgSend(v9, "_highlightAnnotation:rects:", *(_QWORD *)(a1 + 40), v6);
  }
  if (v7)
  {
    v18 = _AEAnnotationLocationLog();
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      v20 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412546;
      v23 = v20;
      v24 = 2112;
      v25 = v7;
      _os_log_impl(&dword_0, v19, OS_LOG_TYPE_ERROR, "clientRectsForLocation%@ error:%@", buf, 0x16u);
    }

  }
}

void sub_1F590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1F5B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  id WeakRetained;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  void *i;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  NSNumber *v26;
  void *v27;
  NSNumber *v28;
  void *v29;
  NSNumber *v30;
  void *v31;
  NSNumber *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id obj;
  id obja;
  _QWORD v49[5];
  id v50;
  id v51;
  int v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[4];
  _QWORD v60[4];
  _QWORD v61[4];
  _QWORD v62[4];
  _BYTE v63[128];
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v4 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained && objc_msgSend(v4, "count"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    if ((objc_opt_respondsToSelector(v6, "currentSearchResultForContentViewController:") & 1) != 0)
    {
      objc_opt_class(BKEpubCFILocation);
      v8 = BUDynamicCast(v7, *(_QWORD *)(a1 + 32));
      v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "currentSearchResultForContentViewController:", WeakRetained));
      *(_QWORD *)&v11 = objc_opt_class(BKEpubCFILocation).n128_u64[0];
      v13 = v12;
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "location", v11));
      v15 = BUDynamicCast(v13, v14);
      v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

      if (objc_msgSend(v9, "isEqual:", v16))
      {
        v41 = v16;
        v42 = v10;
        v43 = v9;
        v44 = v6;
        v45 = a1;
        v46 = WeakRetained;
        v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v4, "count")));
        v53 = 0u;
        v54 = 0u;
        v55 = 0u;
        v56 = 0u;
        obj = v4;
        v18 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v53, v63, 16);
        if (v18)
        {
          v19 = v18;
          v20 = *(_QWORD *)v54;
          do
          {
            for (i = 0; i != v19; i = (char *)i + 1)
            {
              if (*(_QWORD *)v54 != v20)
                objc_enumerationMutation(obj);
              objc_msgSend(*(id *)(*((_QWORD *)&v53 + 1) + 8 * (_QWORD)i), "rectValue");
              x = v64.origin.x;
              y = v64.origin.y;
              width = v64.size.width;
              height = v64.size.height;
              v61[0] = CFSTR("left");
              v26 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", CGRectGetMinX(v64));
              v27 = (void *)objc_claimAutoreleasedReturnValue(v26);
              v62[0] = v27;
              v61[1] = CFSTR("top");
              v65.origin.x = x;
              v65.origin.y = y;
              v65.size.width = width;
              v65.size.height = height;
              v28 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", CGRectGetMinY(v65));
              v29 = (void *)objc_claimAutoreleasedReturnValue(v28);
              v62[1] = v29;
              v61[2] = CFSTR("width");
              v66.origin.x = x;
              v66.origin.y = y;
              v66.size.width = width;
              v66.size.height = height;
              v30 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", CGRectGetWidth(v66));
              v31 = (void *)objc_claimAutoreleasedReturnValue(v30);
              v62[2] = v31;
              v61[3] = CFSTR("height");
              v67.origin.x = x;
              v67.origin.y = y;
              v67.size.width = width;
              v67.size.height = height;
              v32 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:", CGRectGetHeight(v67));
              v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
              v62[3] = v33;
              v34 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v62, v61, 4));
              objc_msgSend(v17, "addObject:", v34);

            }
            v19 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v53, v63, 16);
          }
          while (v19);
        }

        v59[0] = CFSTR("cfi");
        obja = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "cfiString"));
        v60[0] = obja;
        v59[1] = CFSTR("selectionText");
        v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "searchString"));
        v60[1] = v35;
        v59[2] = CFSTR("contextText");
        v57[0] = CFSTR("context");
        v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "text"));
        v57[1] = CFSTR("offset");
        v58[0] = v36;
        v37 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v42, "searchStringRange")));
        v58[1] = v37;
        v38 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v58, v57, 2));
        v59[3] = CFSTR("rects");
        v60[2] = v38;
        v60[3] = v17;
        v39 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v60, v59, 4));
        WeakRetained = v46;
        objc_msgSend(v46, "setCurrentHighlightSearchSelection:", v39);

        v16 = v41;
        v10 = v42;

        v6 = v44;
        a1 = v45;
        v9 = v43;
      }

    }
    v40 = *(void **)(*(_QWORD *)(a1 + 40) + 312);
    v49[0] = _NSConcreteStackBlock;
    v49[1] = 3221225472;
    v49[2] = sub_1FA90;
    v49[3] = &unk_1BEFD0;
    v49[4] = WeakRetained;
    v50 = v4;
    v52 = *(_DWORD *)(a1 + 64);
    v51 = *(id *)(a1 + 48);
    objc_msgSend(v40, "_doAfterNextPresentationUpdate:", v49);

  }
}

id sub_1FA90(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_highlightRects:withHighlightType:owner:forWK2:clearSelection:", *(_QWORD *)(a1 + 40), *(unsigned int *)(a1 + 56), *(_QWORD *)(a1 + 48), 1, 1);
}

void sub_20444(uint64_t a1, void *a2)
{
  void (**v3)(_QWORD, __n128, __n128, __n128, __n128);
  __n128 v4;
  __n128 v5;
  __n128 v6;
  __n128 v7;
  __n128 v8;
  __n128 v9;
  __n128 v10;
  __n128 v11;
  id v12;

  v12 = a2;
  v3 = (void (**)(_QWORD, __n128, __n128, __n128, __n128))objc_retainBlock(*(id *)(a1 + 32));
  if (v12)
  {
    if (v3)
    {
      objc_msgSend(v12, "CGRectValue");
      v3[2](v3, v8, v9, v10, v11);
    }
  }
  else if (v3)
  {
    v4.n128_u64[0] = *(_QWORD *)&CGRectZero.origin.x;
    v5.n128_u64[0] = *(_QWORD *)&CGRectZero.origin.y;
    v6.n128_u64[0] = *(_QWORD *)&CGRectZero.size.width;
    v7.n128_u64[0] = *(_QWORD *)&CGRectZero.size.height;
    v3[2](v3, v4, v5, v6, v7);
  }

}

void sub_204C0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  __n128 v25;
  __n128 v26;
  __n128 v27;
  __n128 v28;
  void *v29;
  _QWORD v30[4];

  v7 = a2;
  v8 = a3;
  v9 = a4;
  if (*(_QWORD *)(a1 + 32) && objc_msgSend(v8, "count"))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "annotationRectsCache"));
    objc_msgSend(v10, "setObject:forKey:", v8, *(_QWORD *)(a1 + 48));

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "annotationRectUnionCache"));
    v30[0] = BKUnionRects(v8);
    v30[1] = v12;
    v30[2] = v13;
    v30[3] = v14;
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithBytes:objCType:](NSValue, "valueWithBytes:objCType:", v30, "{CGRect={CGPoint=dd}{CGSize=dd}}"));
    objc_msgSend(v11, "setObject:forKey:", v15, *(_QWORD *)(a1 + 48));

  }
  objc_msgSend(*(id *)(a1 + 40), "_contentRectFromRects:visible:", v8, *(unsigned __int8 *)(a1 + 64));
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v24 = objc_retainBlock(*(id *)(a1 + 56));
  v29 = v24;
  if (v24)
  {
    v25.n128_u64[0] = *(_QWORD *)&CGRectNull.origin.x;
    v26.n128_u64[0] = *(_QWORD *)&CGRectNull.origin.y;
    v27.n128_u64[0] = *(_QWORD *)&CGRectNull.size.width;
    v28.n128_u64[0] = *(_QWORD *)&CGRectNull.size.height;
    if (v8)
    {
      v28.n128_f64[0] = v23;
      v27.n128_f64[0] = v21;
      v26.n128_f64[0] = v19;
      v25.n128_f64[0] = v17;
    }
    (*((void (**)(id, __n128, __n128, __n128, __n128))v24 + 2))(v24, v25, v26, v27, v28);
  }

}

void sub_20B34(uint64_t a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v8;
  double v10;
  double v11;
  void (**v12)(double, double, double, double);
  void (**v13)(double, double, double, double);
  CGRect v14;
  CGRect v15;

  v8 = a2;
  if (!CGRectIsNull(*(CGRect *)&a2))
  {
    v14.origin.x = CGRectZero.origin.x;
    v14.origin.y = CGRectZero.origin.y;
    v14.size.width = CGRectZero.size.width;
    v14.size.height = CGRectZero.size.height;
    v15.origin.x = v8;
    v15.origin.y = a3;
    v15.size.width = a4;
    v15.size.height = a5;
    if (!CGRectEqualToRect(v14, v15))
    {
      objc_msgSend(*(id *)(a1 + 32), "_originPointForPoint:", v8, a3);
      v8 = v10;
      a3 = v11;
    }
  }
  v12 = (void (**)(double, double, double, double))objc_retainBlock(*(id *)(a1 + 40));
  if (v12)
  {
    v13 = v12;
    v12[2](v8, a3, a4, a5);
    v12 = v13;
  }

}

void sub_20C78(uint64_t a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v8;
  double v10;
  double v11;
  void (**v12)(double, double, double, double);
  void (**v13)(double, double, double, double);
  CGRect v14;
  CGRect v15;

  v8 = a2;
  if (!CGRectIsNull(*(CGRect *)&a2))
  {
    v14.origin.x = CGRectZero.origin.x;
    v14.origin.y = CGRectZero.origin.y;
    v14.size.width = CGRectZero.size.width;
    v14.size.height = CGRectZero.size.height;
    v15.origin.x = v8;
    v15.origin.y = a3;
    v15.size.width = a4;
    v15.size.height = a5;
    if (!CGRectEqualToRect(v14, v15))
    {
      objc_msgSend(*(id *)(a1 + 32), "_originPointForPoint:", v8, a3);
      v8 = v10;
      a3 = v11;
    }
  }
  v12 = (void (**)(double, double, double, double))objc_retainBlock(*(id *)(a1 + 40));
  if (v12)
  {
    v13 = v12;
    v12[2](v8, a3, a4, a5);
    v12 = v13;
  }

}

id sub_21DCC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeDummyHighlight");
}

_QWORD *sub_21DD4(_QWORD *result)
{
  uint64_t v1;

  v1 = result[4];
  if (*(_BYTE *)(v1 + 304))
    return objc_msgSend(*(id *)(v1 + 312), "be_selectForWebView:", 0);
  return result;
}

_QWORD *sub_21E00(_QWORD *result)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  void *v4;

  v1 = result[4];
  if (!*(_BYTE *)(v1 + 304))
  {
    v2 = result;
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v1 + 496), "currentSelectionCFI"));
    objc_msgSend(*(id *)(v2[4] + 456), "setDummyLocation2:", v3);

    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v2[4] + 456), "dummyLocation2"));
    objc_msgSend(v4, "setSelectionRects:", 0);

    return objc_msgSend((id)v2[4], "_annotationChanged:forceRender:", *(_QWORD *)(v2[4] + 456), 0);
  }
  return result;
}

void sub_2286C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_22890(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "webView2"));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_22944;
  v8[3] = &unk_1BF0C0;
  v6 = *(id *)(a1 + 32);
  v9 = v3;
  v10 = v6;
  v7 = v3;
  objc_msgSend(v5, "be_selectForWebView:", v8);

}

void sub_22944(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void (**v5)(id, id);

  v5 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 40));
  if (v5)
  {
    objc_opt_class(NSNumber);
    v3 = BUDynamicCast(v2, *(_QWORD *)(a1 + 32));
    v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
    v5[2](v5, objc_msgSend(v4, "BOOLValue"));

  }
}

id sub_23010(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "annotationUuid"));
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 368));

  return v4;
}

void sub_23124(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_23140(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  void *v4;
  id *v5;
  id v6;
  id WeakRetained;
  double v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25[11];

  if (!a3)
  {
    v25[9] = v3;
    v25[10] = v4;
    v5 = (id *)(a1 + 32);
    v6 = a2;
    WeakRetained = objc_loadWeakRetained(v5);
    *(_QWORD *)&v8 = objc_opt_class(NSString).n128_u64[0];
    v10 = v9;
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("cfi"), v8));

    v12 = BUDynamicCast(v10, v11);
    v13 = (void *)objc_claimAutoreleasedReturnValue(v12);

    if (objc_msgSend(v13, "length"))
    {
      v25[0] = 0;
      v14 = (void *)objc_claimAutoreleasedReturnValue(+[BKEpubCFILocation locationForCFI:error:](BKEpubCFILocation, "locationForCFI:error:", v13, v25));
      v15 = v25[0];
    }
    else
    {
      v14 = 0;
      v15 = 0;
    }
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "loader"));
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "currentVisbleCFILocation"));

    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "cfiString"));
    v19 = objc_msgSend(v18, "length");

    if (v19)
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "cfiString"));
      v24 = 0;
      v21 = (void *)objc_claimAutoreleasedReturnValue(+[BKEpubCFILocation locationForCFI:error:](BKEpubCFILocation, "locationForCFI:error:", v20, &v24));
      v22 = v24;

      v15 = v22;
    }
    else
    {
      v21 = 0;
    }
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    objc_msgSend(v23, "contentViewController:setEndOfBookToLocation:range:", WeakRetained, v14, v21);

    objc_msgSend(WeakRetained, "_bookmarkSelectionAndAnnotate:showColorEditor:", 0, 0);
  }
}

void sub_23624(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 128));
  _Unwind_Resume(a1);
}

void sub_2365C(uint64_t a1, void *a2, void *a3, char a4)
{
  id v7;
  id v8;
  id *v9;
  id WeakRetained;
  void *v11;
  id v12;
  _QWORD v13[4];
  id v14;
  id v15;
  char v16;

  v7 = a2;
  v8 = a3;
  v9 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  if ((objc_opt_respondsToSelector(v11, "contentViewController:showLookupForString:fromView:onClose:") & 1) != 0)
  {
    v12 = objc_loadWeakRetained(v9);
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    v13[2] = sub_23784;
    v13[3] = &unk_1BF160;
    objc_copyWeak(&v15, v9);
    v16 = a4;
    v14 = v8;
    objc_msgSend(v11, "contentViewController:showLookupForString:fromView:onClose:", v12, v7, v14, v13);

    objc_destroyWeak(&v15);
  }

}

void sub_23770(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_23784(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "clearSelectionHighlights");
  if (*(_BYTE *)(a1 + 48))
    objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");

}

void sub_237CC(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_2388C;
  v3[3] = &unk_1BF1B0;
  objc_copyWeak(&v6, (id *)(a1 + 56));
  v4 = *(id *)(a1 + 40);
  v5 = *(id *)(a1 + 48);
  objc_msgSend(v2, "_contentForSelectedRangeWithCompletion:", v3);

  objc_destroyWeak(&v6);
}

void sub_23878(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2388C(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  double v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  *(_QWORD *)&v5 = objc_opt_class(NSArray).n128_u64[0];
  v7 = v6;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("rects"), v5));
  v9 = BUDynamicCast(v7, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "highlightRangeFromRects:", v10));

  if (*(_QWORD *)(a1 + 32))
  {
    v27 = 0u;
    v28 = 0u;
    v25 = 0u;
    v26 = 0u;
    v12 = v11;
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v26;
      do
      {
        v16 = 0;
        do
        {
          if (*(_QWORD *)v26 != v15)
            objc_enumerationMutation(v12);
          objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)v16), "setOwner:", *(_QWORD *)(a1 + 32), (_QWORD)v25);
          v16 = (char *)v16 + 1;
        }
        while (v14 != v16);
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
      }
      while (v14);
    }

  }
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)&v18 = objc_opt_class(NSString).n128_u64[0];
  v20 = v19;
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("selectionText"), v18));
  v22 = BUDynamicCast(v20, v21);
  v23 = (void *)objc_claimAutoreleasedReturnValue(v22);
  v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "firstObject"));
  (*(void (**)(uint64_t, void *, void *, _QWORD))(v17 + 16))(v17, v23, v24, 0);

}

id sub_23A7C(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "annotationUuid"));
  objc_opt_class(NSString);
  v5 = BUDynamicCast(v4, *(_QWORD *)(a1 + 32));
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
  v7 = objc_msgSend(v3, "isEqualToString:", v6);

  return v7;
}

void sub_23D6C(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;

  v3 = a2;
  *(_QWORD *)&v4 = objc_opt_class(NSArray).n128_u64[0];
  v6 = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("rects"), v4));
  v8 = BUDynamicCast(v6, v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  *(_QWORD *)&v10 = objc_opt_class(NSString).n128_u64[0];
  v12 = v11;
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("selectionText"), v10));

  v14 = BUDynamicCast(v12, v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue(v14);

  if (objc_msgSend(v9, "count") && objc_msgSend(v15, "length"))
  {
    v20 = 0;
    objc_msgSend(v15, "tokenCountWithEnumerationOptions:maxTokenCount:outLimitLength:", 3, 200, &v20);
    v16 = objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "substringToIndex:", v20));

    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "highlightRangeFromRects:", v9));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "firstObject"));

    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate"));
    objc_msgSend(v19, "contentViewController:showTranslateForText:fromView:onClose:", _NSConcreteStackBlock, 3221225472, sub_23F04, &unk_1BEA38, *(_QWORD *)(a1 + 32));

    v15 = (void *)v16;
  }

}

id sub_23F04(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "clearSelectionHighlights");
}

void sub_23F84(uint64_t a1, void *a2, void *a3)
{
  id v5;
  BKHTMLContentViewControllerDummyAnnotation *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  void *i;
  void *v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  void *v63;
  double v64;
  double v65;
  void *v66;
  void *v67;
  double v68;
  double v69;
  double v70;
  double v71;
  void *v72;
  void *v73;
  void *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  double v82;
  void *v83;
  id v84;
  void *v85;
  void *v86;
  void *v87;
  id v88;
  void *v89;
  id obj;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  _BYTE v95[128];

  v5 = a2;
  v88 = a3;
  v6 = objc_alloc_init(BKHTMLContentViewControllerDummyAnnotation);
  *(_QWORD *)&v7 = objc_opt_class(NSString).n128_u64[0];
  v9 = v8;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("cfi"), v7));
  v11 = BUDynamicCast(v9, v10);
  v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
  -[BKHTMLContentViewControllerDummyAnnotation setCfi:](v6, "setCfi:", v12);

  *(_QWORD *)&v13 = objc_opt_class(NSString).n128_u64[0];
  v15 = v14;
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("selectionText"), v13));
  v17 = BUDynamicCast(v15, v16);
  v18 = objc_claimAutoreleasedReturnValue(v17);

  v87 = (void *)v18;
  -[BKHTMLContentViewControllerDummyAnnotation setAnnotationRepresentativeText:](v6, "setAnnotationRepresentativeText:", v18);
  v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "annotationDataProvider"));
  v20 = (void *)v19;
  if (v19 && (objc_opt_respondsToSelector(v19, "chapterTitleForOrdinal:pageOffset:") & 1) != 0)
  {
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "chapterTitleForOrdinal:pageOffset:", objc_msgSend(*(id *)(a1 + 32), "ordinal"), objc_msgSend(*(id *)(a1 + 32), "pageOffset")));
    -[BKHTMLContentViewControllerDummyAnnotation setChapterTitle:](v6, "setChapterTitle:", v21);

  }
  v86 = v20;
  *(_QWORD *)&v22 = objc_opt_class(NSArray).n128_u64[0];
  v24 = v23;
  v89 = v5;
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("rects"), v22));
  v26 = BUDynamicCast(v24, v25);
  v27 = (void *)objc_claimAutoreleasedReturnValue(v26);

  v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v27, "count")));
  v91 = 0u;
  v92 = 0u;
  v93 = 0u;
  v94 = 0u;
  obj = v27;
  v29 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v91, v95, 16);
  if (v29)
  {
    v30 = v29;
    v31 = *(_QWORD *)v92;
    do
    {
      for (i = 0; i != v30; i = (char *)i + 1)
      {
        if (*(_QWORD *)v92 != v31)
          objc_enumerationMutation(obj);
        v33 = *(void **)(*((_QWORD *)&v91 + 1) + 8 * (_QWORD)i);
        *(_QWORD *)&v34 = objc_opt_class(NSNumber).n128_u64[0];
        v36 = v35;
        v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "objectForKeyedSubscript:", CFSTR("left"), v34, v86));
        v38 = BUDynamicCast(v36, v37);
        v39 = (void *)objc_claimAutoreleasedReturnValue(v38);
        objc_msgSend(v39, "doubleValue");
        v41 = v40;

        *(_QWORD *)&v42 = objc_opt_class(NSNumber).n128_u64[0];
        v44 = v43;
        v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "objectForKeyedSubscript:", CFSTR("top"), v42));
        v46 = BUDynamicCast(v44, v45);
        v47 = (void *)objc_claimAutoreleasedReturnValue(v46);
        objc_msgSend(v47, "doubleValue");
        v49 = v48;

        *(_QWORD *)&v50 = objc_opt_class(NSNumber).n128_u64[0];
        v52 = v51;
        v53 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "objectForKeyedSubscript:", CFSTR("width"), v50));
        v54 = BUDynamicCast(v52, v53);
        v55 = (void *)objc_claimAutoreleasedReturnValue(v54);
        objc_msgSend(v55, "doubleValue");
        v57 = v56;

        *(_QWORD *)&v58 = objc_opt_class(NSNumber).n128_u64[0];
        v60 = v59;
        v61 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v33, "objectForKeyedSubscript:", CFSTR("height"), v58));
        v62 = BUDynamicCast(v60, v61);
        v63 = (void *)objc_claimAutoreleasedReturnValue(v62);
        objc_msgSend(v63, "doubleValue");
        v65 = v64;

        v66 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "loader"));
        v67 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v66, "webView"));
        objc_msgSend(v67, "_convertPointFromContentsToView:", v41, v49);
        v69 = v68;
        v71 = v70;

        v72 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "loader"));
        v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v72, "webView"));
        v74 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
        objc_msgSend(v73, "convertRect:toView:", v74, v69, v71, v57, v65);
        v76 = v75;
        v78 = v77;
        v80 = v79;
        v82 = v81;

        v83 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithCGRect:](NSValue, "valueWithCGRect:", v76, v78, v80, v82));
        objc_msgSend(v28, "addObject:", v83);

      }
      v30 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v91, v95, 16);
    }
    while (v30);
  }

  v84 = objc_retainBlock(*(id *)(a1 + 40));
  v85 = v84;
  if (v84)
    (*((void (**)(id, BKHTMLContentViewControllerDummyAnnotation *, void *, id))v84 + 2))(v84, v6, v28, v88);

}

void sub_24518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_24534(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  id v6;

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  objc_msgSend(WeakRetained, "clearSelection");
  if ((objc_opt_respondsToSelector(v4, "contentViewController:searchForString:") & 1) != 0)
    objc_msgSend(v4, "contentViewController:searchForString:", WeakRetained, v6);
  if (!+[BKBookViewController useEnhancedEditMenu](BKBookViewController, "useEnhancedEditMenu"))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenuController sharedMenuController](UIMenuController, "sharedMenuController"));
    objc_msgSend(v5, "hideMenu");

  }
}

void sub_246FC(uint64_t a1)
{
  void *v1;
  _QWORD v2[4];
  id v3;

  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_24768;
  v2[3] = &unk_1BF278;
  v1 = *(void **)(a1 + 32);
  v3 = *(id *)(a1 + 40);
  objc_msgSend(v1, "_contentForSelectedRangeWithCompletion:", v2);

}

void sub_24768(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;

  v3 = a2;
  *(_QWORD *)&v4 = objc_opt_class(NSString).n128_u64[0];
  v6 = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("selectionText"), v4));

  v8 = BUDynamicCast(v6, v7);
  v11 = (id)objc_claimAutoreleasedReturnValue(v8);

  if (objc_msgSend(v11, "length"))
  {
    v9 = objc_retainBlock(*(id *)(a1 + 32));
    v10 = v9;
    if (v9)
      (*((void (**)(id, id))v9 + 2))(v9, v11);

  }
}

void sub_248BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_248D8(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  id v18;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  if (!v3 || !objc_msgSend(v3, "length"))
  {
    v10 = BCIMLog();
    v9 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      sub_11C160(v9);
    goto LABEL_11;
  }
  v6 = objc_opt_respondsToSelector(v5, "contentViewController:setSearchString:");
  v7 = BCIMLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = v8;
  if ((v6 & 1) == 0)
  {
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      sub_11C1A0((uint64_t)v5, v9, v11, v12, v13, v14, v15, v16);
LABEL_11:

    goto LABEL_12;
  }
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v17 = 138412290;
    v18 = v3;
  }

  objc_msgSend(v5, "contentViewController:setSearchString:", WeakRetained, v3);
LABEL_12:

}

void sub_24B58(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_24B74(uint64_t a1, void *a2, void *a3)
{
  id *v4;
  id v5;
  id v6;
  id WeakRetained;

  v4 = (id *)(a1 + 32);
  v5 = a3;
  v6 = a2;
  WeakRetained = objc_loadWeakRetained(v4);
  objc_msgSend(WeakRetained, "_shareAnnotation:annotationRects:", v6, v5);

}

void sub_24BD8(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  _QWORD v9[4];
  void *v10;

  v5 = *(void **)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  *(double *)v9 = a2;
  *(double *)&v9[1] = a3;
  *(double *)&v9[2] = a4;
  *(double *)&v9[3] = a5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithBytes:objCType:](NSValue, "valueWithBytes:objCType:", v9, "{CGRect={CGPoint=dd}{CGSize=dd}}"));
  v10 = v7;
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v10, 1));
  objc_msgSend(v5, "_shareAnnotation:annotationRects:", v6, v8);

}

void sub_24D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_24DB4(uint64_t a1, void *a2, int a3)
{
  id WeakRetained;
  id v6;

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (a3 && (objc_msgSend(v6, "isEqualToString:", UIActivityTypeCopyToPasteboard) & 1) == 0)
    objc_msgSend(WeakRetained, "clearSelection");

}

void sub_24F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_24F3C(uint64_t a1, void *a2, void *a3)
{
  id *WeakRetained;
  id *v6;
  void *v7;
  BKEpubCFILocation *v8;
  void *v9;
  BKEpubCFILocation *v10;
  BKEpubCFILocation *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *i;
  void *v16;
  BKEpubCFILocation *v17;
  void *v18;
  BKEpubCFILocation *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  void *j;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  unsigned int v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  void *k;
  id v46;
  void *v47;
  void *v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void *v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  id v63;
  id v64;
  id *from;
  uint64_t v66;
  BKEpubCFILocation *v67;
  id v68;
  id v69;
  id *v70;
  id v71;
  _QWORD v72[4];
  id v73;
  BKEpubCFILocation *v74;
  id v75;
  uint64_t *v76;
  id v77;
  __int16 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t);
  void (*v95)(uint64_t);
  id v96;
  _BYTE v97[128];
  _BYTE v98[128];
  _BYTE v99[128];

  v69 = a2;
  v68 = a3;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v6 = WeakRetained;
  if (WeakRetained)
  {
    v66 = a1;
    v70 = WeakRetained;
    from = (id *)(a1 + 40);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained[48], "fetchedObjects"));
    v71 = objc_msgSend(objc_alloc((Class)NSMutableArray), "initWithCapacity:", objc_msgSend(v7, "count"));
    v8 = [BKEpubCFILocation alloc];
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "objectForKeyedSubscript:", CFSTR("cfi")));
    v10 = -[BKEpubCFILocation initWithCFI:error:](v8, "initWithCFI:error:", v9, 0);

    v11 = v10;
    v91 = 0;
    v92 = &v91;
    v93 = 0x3032000000;
    v94 = sub_2573C;
    v95 = sub_2574C;
    v96 = 0;
    v87 = 0u;
    v88 = 0u;
    v89 = 0u;
    v90 = 0u;
    v12 = v7;
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v87, v99, 16);
    v67 = v11;
    if (v13)
    {
      v14 = *(_QWORD *)v88;
      do
      {
        for (i = 0; i != v13; i = (char *)i + 1)
        {
          if (*(_QWORD *)v88 != v14)
            objc_enumerationMutation(v12);
          v16 = *(void **)(*((_QWORD *)&v87 + 1) + 8 * (_QWORD)i);
          if (objc_msgSend(v16, "annotationType") == 2)
          {
            v17 = [BKEpubCFILocation alloc];
            v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v16, "annotationLocation"));
            v19 = -[BKEpubCFILocation initWithCFI:error:](v17, "initWithCFI:error:", v18, 0);

            v20 = (void *)objc_claimAutoreleasedReturnValue(-[BKEpubCFILocation intersectWithRangeFromHeadOf:toTailOf:](v11, "intersectWithRangeFromHeadOf:toTailOf:", v19, v19));
            if (v20)
            {
              objc_msgSend(v71, "addObject:", v16);
              v21 = objc_claimAutoreleasedReturnValue(-[BKEpubCFILocation unionWithCFI:](v11, "unionWithCFI:", v19));

              v11 = (BKEpubCFILocation *)v21;
            }

          }
        }
        v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v87, v99, 16);
      }
      while (v13);
    }

    if (objc_msgSend(v71, "count"))
    {
      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray array](NSMutableArray, "array"));
      v85 = 0u;
      v86 = 0u;
      v83 = 0u;
      v84 = 0u;
      v23 = v71;
      v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v83, v98, 16);
      if (v24)
      {
        v25 = *(_QWORD *)v84;
        do
        {
          for (j = 0; j != v24; j = (char *)j + 1)
          {
            if (*(_QWORD *)v84 != v25)
              objc_enumerationMutation(v23);
            v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*((_QWORD *)&v83 + 1) + 8 * (_QWORD)j), "annotationLocation"));
            v28 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotation predicateForAnnotationsWithLocation:includingDeleted:](AEAnnotation, "predicateForAnnotationsWithLocation:includingDeleted:", v27, 0));

            objc_msgSend(v22, "addObject:", v28);
          }
          v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v83, v98, 16);
        }
        while (v24);
      }

      v29 = objc_msgSend(objc_alloc((Class)NSCompoundPredicate), "initWithType:subpredicates:", 2, v22);
      v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v70[48], "fetchedObjects"));
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "filteredArrayUsingPredicate:", v29));

      if (objc_msgSend(v31, "count") == (char *)&dword_0 + 1
        && (v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v23, "lastObject")),
            v33 = -[BKEpubCFILocation isEqual:](v11, "isEqual:", v32),
            v32,
            v33))
      {
        v34 = objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "lastObject"));
        v35 = (void *)v92[5];
        v92[5] = v34;

        v36 = objc_retainBlock(*(id *)(v66 + 32));
        v37 = v36;
        if (v36)
          (*((void (**)(id, uint64_t))v36 + 2))(v36, v92[5]);
      }
      else if (objc_msgSend(v31, "count"))
      {
        v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "lastObject"));
        v41 = v29;
        v81 = 0u;
        v82 = 0u;
        v79 = 0u;
        v80 = 0u;
        v42 = v31;
        v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v79, v97, 16);
        if (v43)
        {
          v44 = *(_QWORD *)v80;
          do
          {
            for (k = 0; k != v43; k = (char *)k + 1)
            {
              if (*(_QWORD *)v80 != v44)
                objc_enumerationMutation(v42);
              objc_msgSend(v70, "_combineAnnotation:withAnnotation:", *(_QWORD *)(*((_QWORD *)&v79 + 1) + 8 * (_QWORD)k), v40);
            }
            v43 = objc_msgSend(v42, "countByEnumeratingWithState:objects:count:", &v79, v97, 16);
          }
          while (v43);
        }

        v29 = v41;
        v46 = v70[39];
        v47 = (void *)objc_claimAutoreleasedReturnValue(-[BKEpubCFILocation cfiString](v11, "cfiString"));
        v48 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("__ibooks_cfi_utilities.setSelectedRange('%@')"), v47));
        v72[0] = _NSConcreteStackBlock;
        v72[1] = 3221225472;
        v72[2] = sub_25754;
        v72[3] = &unk_1BF368;
        objc_copyWeak(&v77, from);
        v37 = v40;
        v73 = v37;
        v74 = v11;
        v76 = &v91;
        v78 = *(_WORD *)(v66 + 48);
        v75 = *(id *)(v66 + 32);
        objc_msgSend(v46, "evaluateJavaScript:completionHandler:", v48, v72);

        objc_destroyWeak(&v77);
      }
      else
      {
        v64 = objc_retainBlock(*(id *)(v66 + 32));
        v37 = v64;
        if (v64)
          (*((void (**)(id, _QWORD))v64 + 2))(v64, 0);
      }

    }
    else
    {
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v70, "delegate"));
      if ((objc_opt_respondsToSelector(v22, "contentViewController:addAnnotation:location:selectedText:representativeText:") & 1) != 0)
      {
        *(_QWORD *)&v49 = objc_opt_class(NSString).n128_u64[0];
        v51 = v50;
        v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "objectForKeyedSubscript:", CFSTR("selectionText"), v49));
        v53 = BUDynamicCast(v51, v52);
        v54 = (void *)objc_claimAutoreleasedReturnValue(v53);
        *(_QWORD *)&v55 = objc_opt_class(NSString).n128_u64[0];
        v57 = v56;
        v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v69, "objectForKeyedSubscript:", CFSTR("selectionText"), v55));
        v59 = BUDynamicCast(v57, v58);
        v60 = (void *)objc_claimAutoreleasedReturnValue(v59);
        v61 = objc_claimAutoreleasedReturnValue(objc_msgSend(v22, "contentViewController:addAnnotation:location:selectedText:representativeText:", v70, 2, v67, v54, v60));
        v62 = (void *)v92[5];
        v92[5] = v61;

      }
      objc_msgSend(v70, "_showAnnotationWithState:showColorEditor:forAnnotation:", *(unsigned __int8 *)(v66 + 48), *(unsigned __int8 *)(v66 + 49), v92[5]);
      v63 = objc_retainBlock(*(id *)(v66 + 32));
      v29 = v63;
      if (v63)
        (*((void (**)(id, uint64_t))v63 + 2))(v63, v92[5]);
    }

    _Block_object_dispose(&v91, 8);
    v6 = v70;
  }
  else
  {
    v38 = objc_retainBlock(*(id *)(a1 + 32));
    v39 = v38;
    if (v38)
      (*((void (**)(id, _QWORD))v38 + 2))(v38, 0);

  }
}

void sub_256C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  _Block_object_dispose(&a53, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_2573C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_2574C(uint64_t a1)
{

}

void sub_25754(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  id v8;
  void *v9;
  id v10;
  __int128 v11;
  _QWORD v12[4];
  id v13;
  id v14;
  __int128 v15;
  id v16;
  __int16 v17;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (v6)
  {
    v8 = objc_retainBlock(*(id *)(a1 + 48));
    v9 = v8;
    if (v8)
      (*((void (**)(id, _QWORD))v8 + 2))(v8, 0);

  }
  else
  {
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_2589C;
    v12[3] = &unk_1BF340;
    objc_copyWeak(&v16, (id *)(a1 + 64));
    v13 = *(id *)(a1 + 32);
    v14 = *(id *)(a1 + 40);
    v17 = *(_WORD *)(a1 + 72);
    v11 = *(_OWORD *)(a1 + 48);
    v10 = (id)v11;
    v15 = v11;
    objc_msgSend(WeakRetained, "_contentForSelectedRangeWithCompletion:", v12);

    objc_destroyWeak(&v16);
  }

}

void sub_25888(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_2589C(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  id v21;

  v21 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  if ((objc_opt_respondsToSelector(v4, "contentViewController:expandAnnotation:location:selectedText:representativeText:") & 1) != 0)
  {
    v5 = *(_QWORD *)(a1 + 32);
    v6 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)&v7 = objc_opt_class(NSString).n128_u64[0];
    v9 = v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("selectionText"), v7));
    v11 = BUDynamicCast(v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue(v11);
    *(_QWORD *)&v13 = objc_opt_class(NSString).n128_u64[0];
    v15 = v14;
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("selectionText"), v13));
    v17 = BUDynamicCast(v15, v16);
    v18 = (void *)objc_claimAutoreleasedReturnValue(v17);
    objc_msgSend(v4, "contentViewController:expandAnnotation:location:selectedText:representativeText:", WeakRetained, v5, v6, v12, v18);

  }
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), *(id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_showAnnotationWithState:showColorEditor:forAnnotation:", *(unsigned __int8 *)(a1 + 72), *(unsigned __int8 *)(a1 + 73), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
  v19 = objc_retainBlock(*(id *)(a1 + 48));
  v20 = v19;
  if (v19)
    (*((void (**)(id, _QWORD))v19 + 2))(v19, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));

}

void sub_25E08(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_25E24(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  unsigned int v23;
  void (**v24)(id, void *, _QWORD);
  void *v25;
  void (**v26)(id, void *, _QWORD);
  void *v27;
  void *v28;
  void *v29;
  _QWORD v30[4];
  id v31;
  id v32;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    objc_opt_class(NSString);
    v9 = BUDynamicCast(v8, v5);
    v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
    v11 = v10;
    if (v10)
    {
      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "dataUsingEncoding:", 4));
      v32 = v6;
      v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v12, 0, &v32));
      v14 = v32;

      v15 = objc_retainBlock(*(id *)(a1 + 48));
      v16 = v15;
      if (v15)
        (*((void (**)(id, void *, id))v15 + 2))(v15, v13, v14);

      goto LABEL_18;
    }
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cfiString"));

    if (v19)
    {
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cfiString"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentHighlightSearchSelection"));
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v21, "objectForKeyedSubscript:", CFSTR("cfi")));
      v23 = objc_msgSend(v20, "isEqualToString:", v22);

      if (!v23)
      {
        v27 = *(void **)(a1 + 40);
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cfiString"));
        v29 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("__ibooks_cfi_utilities.getSelectionFromLocation('%@')"), v28));
        v30[0] = _NSConcreteStackBlock;
        v30[1] = 3221225472;
        v30[2] = sub_260CC;
        v30[3] = &unk_1BF3B8;
        v31 = *(id *)(a1 + 48);
        objc_msgSend(v27, "evaluateJavaScript:completionHandler:", v29, v30);

        goto LABEL_17;
      }
      v24 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 48));
      if (v24)
      {
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentHighlightSearchSelection"));
        v24[2](v24, v25, 0);

      }
    }
    else
    {
      v26 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 48));
      v24 = v26;
      if (v26)
        ((void (**)(id, void *, id))v26)[2](v26, 0, v6);
    }

LABEL_17:
    v14 = v6;
LABEL_18:

    v6 = v14;
    goto LABEL_19;
  }
  v17 = objc_retainBlock(*(id *)(a1 + 48));
  v18 = v17;
  if (v17)
    (*((void (**)(id, _QWORD, id))v17 + 2))(v17, 0, v6);

LABEL_19:
}

void sub_260CC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;

  v5 = a3;
  v6 = a2;
  objc_opt_class(NSString);
  v8 = BUDynamicCast(v7, v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  if (v9)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "dataUsingEncoding:", 4));
    v17 = v5;
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v10, 0, &v17));
    v12 = v17;

    v13 = objc_retainBlock(*(id *)(a1 + 32));
    v14 = v13;
    if (v13)
      (*((void (**)(id, void *, id))v13 + 2))(v13, v11, v12);

  }
  else
  {
    v15 = objc_retainBlock(*(id *)(a1 + 32));
    v16 = v15;
    if (v15)
      (*((void (**)(id, _QWORD, id))v15 + 2))(v15, 0, v5);

    v12 = v5;
  }

}

void sub_262A0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_262BC(id a1, BKHTMLContentViewController *a2, AEAnnotation *a3)
{
  void *v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(-[BKHTMLContentViewController _excerptCitedStringForAnnotation:](a2, "_excerptCitedStringForAnnotation:", a3));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIPasteboard generalPasteboard](UIPasteboard, "generalPasteboard"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeUTF8PlainText, "identifier"));
  objc_msgSend(v3, "setValue:forPasteboardType:", v5, v4);

}

void sub_26334(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_267A4(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  _BOOL8 v10;
  id v11;
  NSObject *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  _QWORD v18[4];
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  uint64_t v22;
  __int16 v23;
  void *v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v25.origin.x = CGRectZero.origin.x;
  v25.origin.y = CGRectZero.origin.y;
  v25.size.width = CGRectZero.size.width;
  v25.size.height = CGRectZero.size.height;
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  if (CGRectEqualToRect(v25, v27))
  {
    v10 = 0;
  }
  else
  {
    v26.origin.x = a2;
    v26.origin.y = a3;
    v26.size.width = a4;
    v26.size.height = a5;
    v10 = !CGRectIsNull(v26);
  }
  v11 = _AEAnnotationLocationLog();
  v12 = objc_claimAutoreleasedReturnValue(v11);
  if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
  {
    *(CGFloat *)v18 = a2;
    *(CGFloat *)&v18[1] = a3;
    *(CGFloat *)&v18[2] = a4;
    *(CGFloat *)&v18[3] = a5;
    v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithBytes:objCType:](NSValue, "valueWithBytes:objCType:", v18, "{CGRect={CGPoint=dd}{CGSize=dd}}"));
    v14 = *(_QWORD *)(a1 + 32);
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v10));
    *(_DWORD *)buf = 138412802;
    v20 = v13;
    v21 = 2112;
    v22 = v14;
    v23 = 2112;
    v24 = v15;
    _os_log_impl(&dword_0, v12, OS_LOG_TYPE_DEFAULT, "isLocationVisible: found contentRect: %@ forLocation:%@ isVisible:%@", buf, 0x20u);

  }
  v16 = objc_retainBlock(*(id *)(a1 + 40));
  v17 = v16;
  if (v16)
    (*((void (**)(id, _BOOL8))v16 + 2))(v16, v10);

}

void sub_27A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_27A3C(uint64_t a1, int a2)
{
  id v2;
  id WeakRetained;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = objc_msgSend(WeakRetained, "reload");

  }
}

id sub_27B2C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_recheckRemoveAccessApproval");
}

uint64_t sub_27C24(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(result + 32) + 377) = 0;
  return result;
}

void sub_28448(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

uint64_t sub_29D28(uint64_t a1, id a2)
{
  void (**v3)(id, void *, _QWORD);
  void *v4;

  v3 = (void (**)(id, void *, _QWORD))objc_retainBlock(a2);
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dataUsingEncoding:", 4));
    v3[2](v3, v4, 0);

  }
  return 0;
}

uint64_t sub_29D88(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypeURL, "identifier"));
  v6 = objc_msgSend(v4, "loadDataRepresentationForTypeIdentifier:completionHandler:", v5, v3);

  return 0;
}

id sub_2AA34(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_refreshContentBasedOverlay");
}

void sub_2ACF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2AD20(uint64_t a1, void *a2)
{
  id WeakRetained;
  id v4;
  id v5;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "mutableCopy");
    objc_msgSend(v4, "addEntriesFromDictionary:", v5);
    objc_msgSend(WeakRetained, "_setupAnnotationRectCachesFromClientRects:", v4);

  }
}

void sub_2B6E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2B710(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _QWORD v18[4];
  uint8_t buf[4];
  void *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  void *v24;
  __int16 v25;
  id v26;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v5 = _AEAnnotationLocationLog();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "annotationUuid"));
      v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "location"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "annotationSelectedText"));
      *(_DWORD *)buf = 138544130;
      v20 = v7;
      v21 = 2114;
      v22 = v8;
      v23 = 2112;
      v24 = v9;
      v25 = 2114;
      v26 = v3;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "#annotationcache point annotation:%{public}@ location:%{public}@ text:%@ cached rects:%{public}@", buf, 0x2Au);

    }
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "annotationLocation"));
    if (v10 && objc_msgSend(v3, "count"))
    {
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "annotationRectsCache"));
      objc_msgSend(v11, "setObject:forKey:", v3, v10);

      v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "annotationRectUnionCache"));
      v18[0] = BKUnionRects(v3);
      v18[1] = v13;
      v18[2] = v14;
      v18[3] = v15;
      v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithBytes:objCType:](NSValue, "valueWithBytes:objCType:", v18, "{CGRect={CGPoint=dd}{CGSize=dd}}"));
      objc_msgSend(v12, "setObject:forKey:", v16, v10);

    }
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    if ((objc_opt_respondsToSelector(v17, "contentViewControllerAnnotationCacheDidChange:") & 1) != 0)
      objc_msgSend(v17, "contentViewControllerAnnotationCacheDidChange:", *(_QWORD *)(a1 + 40));

  }
}

void sub_2BFDC(uint64_t a1)
{
  id v1;
  id v2;

  v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    (*((void (**)(id, _QWORD))v1 + 2))(v1, 0);
    v1 = v2;
  }

}

void sub_2C810(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_2CCFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2CD18(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  void *v34;
  const __CFString *v35;
  void *v36;
  void *v37;
  id v38;
  NSObject *v39;
  id v40;
  NSObject *v41;
  NSString *v42;
  void *v43;
  void *v44;
  void *v45;
  _QWORD v46[6];
  _QWORD v47[6];
  _QWORD v48[2];
  _QWORD v49[2];
  uint8_t buf[4];
  id v51;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!v5 || v6)
  {
    v38 = _AELog();
    v39 = objc_claimAutoreleasedReturnValue(v38);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412290;
      v51 = v6;
      _os_log_impl(&dword_0, v39, OS_LOG_TYPE_ERROR, "Failed to get size of TOC WebView: %@", buf, 0xCu);
    }

    objc_msgSend(WeakRetained, "_notifyRequesterAndSendNextRequestOfPreferredHeight:error:", v6, 0.0);
  }
  else
  {
    objc_opt_class(NSString);
    v9 = BUDynamicCast(v8, v5);
    v45 = (void *)objc_claimAutoreleasedReturnValue(v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v45, "dataUsingEncoding:", 4));
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v10, 4, 0));

    *(_QWORD *)&v12 = objc_opt_class(NSNumber).n128_u64[0];
    v14 = v13;
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("width"), v12));
    v16 = BUDynamicCast(v14, v15);
    v17 = (void *)objc_claimAutoreleasedReturnValue(v16);

    *(_QWORD *)&v18 = objc_opt_class(NSNumber).n128_u64[0];
    v20 = v19;
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("height"), v18));
    v22 = BUDynamicCast(v20, v21);
    v23 = (void *)objc_claimAutoreleasedReturnValue(v22);

    if (v17 && v23)
    {
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "webView"));
      objc_msgSend(v24, "frame");
      v26 = v25;
      v28 = v27;

      objc_msgSend(v17, "doubleValue");
      v30 = v29;
      objc_msgSend(v23, "doubleValue");
      if (v31 >= 54.0)
        v32 = v31;
      else
        v32 = 54.0;
      objc_msgSend(WeakRetained, "setFrameAndPositionWebView:", v26, v28, v30, v32);
      v46[0] = CFSTR("initial-scale");
      v46[1] = CFSTR("maximum-scale");
      v47[0] = CFSTR("1");
      v47[1] = CFSTR("1");
      v46[2] = CFSTR("minimum-scale");
      v46[3] = CFSTR("user-scalable");
      v47[2] = CFSTR("1");
      v47[3] = CFSTR("no");
      v47[4] = CFSTR("no");
      v46[4] = CFSTR("shrink-to-fit");
      v46[5] = CFSTR("width");
      v33 = objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "stringValue"));
      v34 = (void *)v33;
      v35 = CFSTR("device-width");
      if (v33)
        v35 = (const __CFString *)v33;
      v47[5] = v35;
      v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v47, v46, 6));

      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "webView"));
      objc_msgSend(v37, "_overrideViewportWithArguments:", v36);

      objc_msgSend(WeakRetained, "_snapshotCurrentContent");
    }
    else
    {
      v40 = _AELog();
      v41 = objc_claimAutoreleasedReturnValue(v40);
      if (os_log_type_enabled(v41, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 138412290;
        v51 = v5;
        _os_log_impl(&dword_0, v41, OS_LOG_TYPE_ERROR, "Failed to get width/height of TOC WebView from JSON: %@", buf, 0xCu);
      }

      v42 = WebKitErrorDomain;
      v48[0] = NSDebugDescriptionErrorKey;
      v48[1] = CFSTR("request");
      v49[0] = v11;
      v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentRequest"));
      v49[1] = v43;
      v44 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v49, v48, 2));
      v36 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v42, -5, v44));

      objc_msgSend(WeakRetained, "_notifyRequesterAndSendNextRequestOfPreferredHeight:error:", v36, 0.0);
    }

  }
}

void sub_2D1DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2D1F8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  double v17;
  id v18;
  NSObject *v19;
  int v20;
  id v21;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!v5 || v6)
  {
    v18 = _AELog();
    v19 = objc_claimAutoreleasedReturnValue(v18);
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      v20 = 138412290;
      v21 = v6;
      _os_log_impl(&dword_0, v19, OS_LOG_TYPE_ERROR, "Failed to snapshot TOC WebView: %@", (uint8_t *)&v20, 0xCu);
    }

    objc_msgSend(WeakRetained, "_notifyRequesterAndSendNextRequestOfPreferredHeight:error:", v6, 0.0);
  }
  else
  {
    v8 = v5;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "im_imageWithAlpha:", 0.65));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentRequest"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "cacheKey"));

    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "imageCache"));
    if (!v12)
      BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/Directory/Web Base TOC/BKTOCWebViewCellLoadQueue.m", 191, "-[BKTOCWebViewCellLoadQueue _snapshotCurrentContent]_block_invoke", "strongSelf.imageCache", 0);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "imageCache"));
    objc_msgSend(v13, "setObject:forKey:", v8, v11);

    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "imageCache"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "stringByAppendingString:", CFSTR("-selected")));
    objc_msgSend(v14, "setObject:forKey:", v9, v15);

    objc_msgSend(v8, "size");
    v17 = v16;

    objc_msgSend(WeakRetained, "_notifyRequesterAndSendNextRequestOfPreferredHeight:error:", 0, v17);
  }

}

void sub_2E080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_2E0AC(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v5 = a2;
  if (!a3)
  {
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_2E154;
    v6[3] = &unk_1BF560;
    objc_copyWeak(&v8, (id *)(a1 + 32));
    v7 = v5;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

    objc_destroyWeak(&v8);
  }

}

void sub_2E154(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "configureWithProfile:", *(_QWORD *)(a1 + 32));

}

void sub_2F230(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v5;
  _QWORD block[4];
  id v7;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_2F2CC;
  block[3] = &unk_1BEA38;
  v7 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  v4 = objc_retainBlock(*(id *)(a1 + 40));
  v5 = v4;
  if (v4)
    (*((void (**)(id, uint64_t))v4 + 2))(v4, a2);

}

id sub_2F2CC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "resetButtonState");
}

void sub_2F798(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x1Cu);
}

void sub_2F7A8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_31C78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_31CA4(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;

  v3 = (id *)(a1 + 32);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  objc_msgSend(WeakRetained, "_startedManualCurlAnimation:isRightSide:", v4, *(unsigned __int8 *)(a1 + 40));

}

void sub_31F1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_31F48(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;

  v3 = (id *)(a1 + 32);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  objc_msgSend(WeakRetained, "_startedManualCurlAnimation:isRightSide:", v4, *(unsigned __int8 *)(a1 + 40));

}

void sub_32220(id a1)
{
  qword_20F4E0 = (uint64_t)NSClassFromString(CFSTR("UITextRangeView"));
}

BOOL sub_32A0C(void *a1)
{
  void *v1;
  _BOOL8 v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  char isKindOfClass;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "view"));
  if ((objc_opt_isKindOfClass(v1, +[UIView be_wkContentViewClass](UIView, "be_wkContentViewClass")) & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    v3 = 0;
    do
    {
      v4 = v3;
      v5 = v1;
      v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "superview"));

      if (v4 == 2)
        break;
      isKindOfClass = objc_opt_isKindOfClass(v1, +[UIView be_wkContentViewClass](UIView, "be_wkContentViewClass"));
      v3 = v4 + 1;
    }
    while ((isKindOfClass & 1) == 0);
    v2 = v4 < 2;
  }

  return v2;
}

void sub_32C14(id a1)
{
  qword_20F4F0 = (uint64_t)NSClassFromString(CFSTR("WKTouchActionGestureRecognizer"));
}

void sub_3372C(id a1)
{
  NSMutableDictionary *v1;
  void *v2;

  v1 = objc_opt_new(NSMutableDictionary);
  v2 = (void *)qword_20F500;
  qword_20F500 = (uint64_t)v1;

}

void sub_365D0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

id sub_36A48(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "reload");
}

void sub_37E14(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  char v13;
  id location;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = *(_QWORD *)(a1 + 32);
    if (v3)
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "book"));
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "cacheItem"));
      v6 = BEURLHandlerImageDataForiBooksURLUsingCacheItem(v3, v5);
      v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

      LOBYTE(v3) = +[AEBookInfo isUndesirableImageData:](AEBookInfo, "isUndesirableImageData:", v7);
      if ((v3 & 1) != 0)
        v8 = 0;
      else
        v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", v7));

    }
    else
    {
      v8 = 0;
    }
    objc_initWeak(&location, WeakRetained);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_37F68;
    v10[3] = &unk_1BF160;
    objc_copyWeak(&v12, &location);
    v11 = v8;
    v13 = v3;
    v9 = v8;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);

    objc_destroyWeak(&v12);
    objc_destroyWeak(&location);
  }

}

void sub_37F68(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setCoverImage:isUndesirable:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 48));

}

double PDFPageGetBoxRectWithRotation(void *a1, uint64_t a2)
{
  id v3;
  double v4;
  double v5;

  v3 = a1;
  objc_msgSend(v3, "boundsForBox:", a2);
  v5 = v4;
  objc_msgSend(v3, "rotation");

  return v5;
}

double BKImageSizeForScreenSize(double a1)
{
  void *v2;
  double v3;
  double v4;
  uint64_t v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v2, "scale");
  v4 = v3;

  if (v4 != 1.0)
    return CGSizeScale(v5);
  return a1;
}

uint64_t sub_39414(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), 0);
}

uint64_t sub_394C4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), 0, *(_QWORD *)(a1 + 32));
}

void sub_3964C(uint64_t a1)
{
  void *v2;
  void *v3;
  NSFileCoordinator *v4;
  void *v5;
  NSOperationQueue *v6;
  id v7;
  uint64_t v8;
  id v9;
  _QWORD v10[4];
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileAccessIntent readingIntentWithURL:options:](NSFileAccessIntent, "readingIntentWithURL:options:", *(_QWORD *)(a1 + 32), 1));
  v4 = objc_opt_new(NSFileCoordinator);
  v16 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v16, 1));
  v6 = objc_opt_new(NSOperationQueue);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_397BC;
  v10[3] = &unk_1BF700;
  v7 = *(id *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v11 = v7;
  v12 = v8;
  v15 = *(id *)(a1 + 56);
  v13 = v3;
  v14 = *(id *)(a1 + 48);
  v9 = v3;
  -[NSFileCoordinator coordinateAccessWithIntents:queue:byAccessor:](v4, "coordinateAccessWithIntents:queue:byAccessor:", v5, v6, v10);

  objc_autoreleasePoolPop(v2);
}

void sub_397BC(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  _QWORD block[4];
  id v16;
  uint64_t v17;
  id v18;
  __int128 *v19;
  _QWORD *v20;
  _QWORD v21[5];
  id v22;
  id v23;
  _QWORD *v24;
  __int128 *p_buf;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char v30;
  _QWORD v31[5];
  id v32;
  __int128 buf;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;

  v3 = a2;
  v4 = BCIMLog();
  v5 = objc_claimAutoreleasedReturnValue(v4);
  v6 = v5;
  if (v3)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      sub_11C678(a1, (uint64_t)v3, v6);

    v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, 1001, 0));
    objc_msgSend(*(id *)(a1 + 40), "sendError:toCompletion:", v7, *(_QWORD *)(a1 + 64));

  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      v8 = *(_QWORD *)(a1 + 32);
      LODWORD(buf) = 138412290;
      *(_QWORD *)((char *)&buf + 4) = v8;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_INFO, "AEPDFPlugin coordinateReadingItemAtURL Successful coordinated read [URL: %@]", (uint8_t *)&buf, 0xCu);
    }

    *(_QWORD *)&buf = 0;
    *((_QWORD *)&buf + 1) = &buf;
    v34 = 0x3032000000;
    v35 = sub_39AEC;
    v36 = sub_39AFC;
    v37 = 0;
    v31[0] = 0;
    v31[1] = v31;
    v31[2] = 0x3032000000;
    v31[3] = sub_39AEC;
    v31[4] = sub_39AFC;
    v32 = 0;
    v27 = 0;
    v28 = &v27;
    v29 = 0x2020000000;
    v30 = 1;
    v9 = (void *)objc_claimAutoreleasedReturnValue(+[AEEpubInfoSource sharedInstance](AEEpubInfoSource, "sharedInstance"));
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_39B04;
    v21[3] = &unk_1BF688;
    v10 = *(void **)(a1 + 48);
    v21[4] = *(_QWORD *)(a1 + 40);
    v22 = v10;
    v24 = v31;
    v23 = *(id *)(a1 + 56);
    p_buf = &buf;
    v26 = &v27;
    objc_msgSend(v9, "performBackgroundTaskAndWait:", v21);

    if (*((_BYTE *)v28 + 24))
    {
      v11 = *(void **)(a1 + 40);
      v12 = objc_retainBlock(*(id *)(a1 + 64));
      objc_msgSend(v11, "performSelectorOnMainThread:withObject:waitUntilDone:", "loadError:", v12, 0);
    }
    else
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_39CDC;
      block[3] = &unk_1BF6D8;
      v19 = &buf;
      v13 = *(id *)(a1 + 56);
      v14 = *(_QWORD *)(a1 + 40);
      v16 = v13;
      v17 = v14;
      v18 = *(id *)(a1 + 64);
      v20 = v31;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      v12 = v16;
    }

    _Block_object_dispose(&v27, 8);
    _Block_object_dispose(v31, 8);

    _Block_object_dispose(&buf, 8);
  }

}

void sub_39AB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  uint64_t v33;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_39AEC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_39AFC(uint64_t a1)
{

}

void sub_39B04(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;

  v21 = a2;
  v3 = *(void **)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URL"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "_bookInfoForAssetAtURL:withMoc:error:needsCoordination:", v4, v21, *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40, 0));

  v6 = *(void **)(a1 + 32);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URL"));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "_updateBook:onMoc:forCurrentURL:", v5, v21, v7));

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKey:", AEHelperNumberIsPreorderKey));
  objc_msgSend(v8, "setIsPreorder:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKey:", CFSTR("AEPDFOptionsSuppressPasswordDialogKey")));
  v11 = objc_msgSend(v10, "BOOLValue");

  v12 = objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "objectID"));
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
  v14 = *(void **)(v13 + 40);
  *(_QWORD *)(v13 + 40) = v12;

  if (v8)
  {
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = 0;

    v17 = (void *)objc_claimAutoreleasedReturnValue(+[AEPdfCache sharedInstance](AEPdfCache, "sharedInstance"));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URL"));
    v19 = objc_msgSend(v17, "copyCacheObjectForURL:", v18);

    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "document"));
    if (objc_msgSend(v20, "isLocked"))
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = v11;
    else
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = objc_msgSend(v20, "pageCount") == 0;

  }
  objc_msgSend(v21, "reset");

}

void sub_39CDC(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEEpubInfoSource sharedInstance](AEEpubInfoSource, "sharedInstance"));
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_39DAC;
    v6[3] = &unk_1BF6B0;
    v10 = *(_QWORD *)(a1 + 56);
    v3 = *(id *)(a1 + 32);
    v4 = *(_QWORD *)(a1 + 40);
    v5 = *(void **)(a1 + 48);
    v7 = v3;
    v8 = v4;
    v9 = v5;
    objc_msgSend(v2, "performMainQueueTaskWithNewContextAndWait:", v6);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "sendError:toCompletion:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), *(_QWORD *)(a1 + 48));
  }
}

void sub_39DAC(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  v3 = a2;
  *(_QWORD *)&v4 = objc_opt_class(AEBookInfo).n128_u64[0];
  v6 = v5;
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40);
  v15 = 0;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "existingObjectWithID:error:", v7, &v15, v4));

  v9 = v15;
  v10 = BUDynamicCast(v6, v8);
  v11 = (void *)objc_claimAutoreleasedReturnValue(v10);

  if (v11)
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("assetLogID")));
    objc_msgSend(v11, "setAssetLogID:", v12);

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "valueForKey:", CFSTR("assetID")));
    objc_msgSend(v11, "initializeAnnotationProviderWithAssetID:", v13);
    if (objc_msgSend(v11, "isPasswordDialogNeeded"))
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", BCTransactionOptionsTransactionKey));
      objc_msgSend(*(id *)(a1 + 40), "showPasswordDialogForBook:transaction:withCompletion:", v11, v14, *(_QWORD *)(a1 + 48));

    }
    else
    {
      objc_msgSend(*(id *)(a1 + 40), "sendViewControllerForBook:toCompletion:", v11, *(_QWORD *)(a1 + 48));
    }

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "sendError:toCompletion:", v9, *(_QWORD *)(a1 + 48));
  }

}

void sub_3A2C4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, 1002, 0));
  objc_msgSend(*(id *)(a1 + 32), "sendError:toCompletion:", v2, *(_QWORD *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 40), "dismissViewControllerAnimated:completion:", 1, 0);

}

void sub_3A334(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "textFields"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "lastObject"));

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "text"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[AEPdfCache sharedInstance](AEPdfCache, "sharedInstance"));
  v6 = objc_msgSend(v5, "copyCacheObjectForBook:", *(_QWORD *)(a1 + 40));

  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "document"));
  if (objc_msgSend(*(id *)(a1 + 40), "isCorrectPassword:forDocument:", v4, v7))
  {
    objc_msgSend(*(id *)(a1 + 40), "setPassword:", v4);
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[AEEpubInfoSource sharedInstance](AEEpubInfoSource, "sharedInstance"));
    objc_msgSend(v8, "parseBook:", *(_QWORD *)(a1 + 40));

    v9 = *(void **)(a1 + 48);
    v16 = 0;
    v10 = objc_msgSend(v9, "save:", &v16);
    v11 = v16;
    v12 = v11;
    if ((v10 & 1) == 0)
      NSLog(CFSTR("Error Saving: %@"), v11);
    v13 = objc_msgSend(v7, "pageCount");
    v14 = *(void **)(a1 + 56);
    if (v13)
    {
      objc_msgSend(*(id *)(a1 + 56), "sendViewControllerForBook:toCompletion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 72));
    }
    else
    {
      v15 = objc_retainBlock(*(id *)(a1 + 72));
      objc_msgSend(v14, "performSelectorOnMainThread:withObject:waitUntilDone:", "loadError:", v15, 0);

    }
    objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 56), "showPasswordDialogForBook:transaction:withCompletion:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72));
  }

}

void sub_3A4D8(id a1, UITextField *a2)
{
  id v2;
  void *v3;
  void *v4;
  UITextField *v5;

  v5 = a2;
  v2 = AEBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("Password"), &stru_1C3088, 0));
  -[UITextField setPlaceholder:](v5, "setPlaceholder:", v4);

  -[UITextField setSecureTextEntry:](v5, "setSecureTextEntry:", 1);
}

void sub_3AE3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_3AEF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_3AFAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_3B018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_3B0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_3B450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,uint64_t a22,void *a23,void *a24,void *a25,void *a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *a33,void *a34)
{
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;

  _Block_object_dispose((const void *)(v39 - 168), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_3B564(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_3B574(uint64_t a1)
{

}

void sub_3B57C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_3B674;
  v14[3] = &unk_1BF7E0;
  v20 = *(_QWORD *)(a1 + 48);
  v15 = v9;
  v16 = v8;
  v17 = *(id *)(a1 + 32);
  v10 = *(id *)(a1 + 40);
  v18 = v7;
  v19 = v10;
  v11 = v7;
  v12 = v8;
  v13 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v14);

}

void sub_3B674(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = *(id *)(a1 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (!objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "_shouldShowAlertForError:"))
    {
      v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "domain"));
      if (objc_msgSend(v2, "isEqualToString:", fd45c988dd8cc08fce2e58d17f4ed2))
      {
        v3 = objc_msgSend(*(id *)(a1 + 32), "code");

        if (v3 != (id)-996)
          goto LABEL_8;
        v4 = AssetEngineErrorDomain;
        v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "userInfo"));
        v5 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v4, 2003, v2));

        v6 = (id)v5;
      }

      goto LABEL_8;
    }
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), "_showAlertForError:forAssetAtURL:transaction:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  }
LABEL_8:
  (*(void (**)(void))(*(_QWORD *)(a1 + 64) + 16))();

}

void sub_3B784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_3B7A8(uint64_t a1, void *a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  id v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  NSObject *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  int8x16_t v20;
  _QWORD v21[4];
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  _BYTE *v31;
  _QWORD *v32;
  char v33;
  _QWORD v34[4];
  id v35;
  int8x16_t v36;
  id v37;
  _BYTE *v38;
  _QWORD *v39;
  _QWORD v40[5];
  id v41;
  _BYTE buf[24];
  uint64_t (*v43)(uint64_t, uint64_t);
  void (*v44)(uint64_t);
  id v45;

  v3 = a2;
  if (v3)
  {
    v4 = _AEBookPluginsLifeCycleLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = *(_QWORD *)(a1 + 32);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("assetLogID")));
      *(_DWORD *)buf = 138412802;
      *(_QWORD *)&buf[4] = v6;
      *(_WORD *)&buf[12] = 2114;
      *(_QWORD *)&buf[14] = v7;
      *(_WORD *)&buf[22] = 2112;
      v43 = v3;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_ERROR, "AEBookInfoAssetPlugin coordinateReadingItemAtURL Error taking coordinate read for %@; logID:%{public}@  Error: %@",
        buf,
        0x20u);

    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, 1001, 0));
    v9 = *(_QWORD *)(a1 + 88);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "URL"));
    (*(void (**)(uint64_t, _QWORD, void *, void *))(v9 + 16))(v9, 0, v10, v8);

  }
  else
  {
    v11 = _AEBookPluginsLifeCycleLog();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      v13 = *(_QWORD *)(a1 + 32);
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("assetLogID")));
      *(_DWORD *)buf = 138412546;
      *(_QWORD *)&buf[4] = v13;
      *(_WORD *)&buf[12] = 2114;
      *(_QWORD *)&buf[14] = v14;
      _os_log_impl(&dword_0, v12, OS_LOG_TYPE_DEFAULT, "AEBookInfoAssetPlugin coordinateReadingItemAtURL Successful coordinated read [URL: %@] logID:%{public}@", buf, 0x16u);

    }
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v43 = sub_3B564;
    v44 = sub_3B574;
    v45 = 0;
    v40[0] = 0;
    v40[1] = v40;
    v40[2] = 0x3032000000;
    v40[3] = sub_3B564;
    v40[4] = sub_3B574;
    v41 = 0;
    v15 = (void *)objc_claimAutoreleasedReturnValue(+[AEEpubInfoSource sharedInstance](AEEpubInfoSource, "sharedInstance"));
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472;
    v34[2] = sub_3BC9C;
    v34[3] = &unk_1BF830;
    v35 = *(id *)(a1 + 40);
    v20 = *(int8x16_t *)(a1 + 48);
    v16 = (id)v20.i64[0];
    v36 = vextq_s8(v20, v20, 8uLL);
    v38 = buf;
    v39 = v40;
    v37 = *(id *)(a1 + 64);
    objc_msgSend(v15, "performBackgroundTaskAndWait:", v34);

    v17 = (void *)objc_claimAutoreleasedReturnValue(+[AEEpubInfoSource sharedInstance](AEEpubInfoSource, "sharedInstance"));
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_3BE54;
    v21[3] = &unk_1BF8D0;
    v31 = buf;
    v32 = v40;
    v22 = *(id *)(a1 + 64);
    v18 = *(id *)(a1 + 40);
    v19 = *(_QWORD *)(a1 + 56);
    v23 = v18;
    v24 = v19;
    v25 = *(id *)(a1 + 32);
    v33 = *(_BYTE *)(a1 + 104);
    v26 = *(id *)(a1 + 72);
    v27 = *(id *)(a1 + 80);
    v29 = *(id *)(a1 + 96);
    v30 = *(id *)(a1 + 88);
    v28 = *(id *)(a1 + 48);
    objc_msgSend(v17, "performMainQueueTaskWithNewContext:", v21);

    _Block_object_dispose(v40, 8);
    _Block_object_dispose(buf, 8);

  }
}

void sub_3BB94(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_3BC9C(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;

  v3 = a2;
  *(_QWORD *)&v4 = objc_opt_class(NSDate).n128_u64[0];
  v6 = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", CFSTR("assetUpdateDate"), v4));
  v8 = BUDynamicCast(v6, v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  v10 = *(void **)(a1 + 40);
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "URL"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "_bookInfoForAssetAtURL:withMoc:error:needsCoordination:updateDate:", v11, v3, *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40, 0, v9));

  v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectID"));
  v14 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
  v15 = *(void **)(v14 + 40);
  *(_QWORD *)(v14 + 40) = v13;

  objc_msgSend(v12, "initializeAnnotationProviderWithAssetID:", *(_QWORD *)(a1 + 56));
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKey:", AEHelperNumberIsPreorderKey));
  objc_msgSend(v12, "setIsPreorder:", v16);

  if (v12 && !*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40))
  {
    v17 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "confirmBagContents"));
    v18 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v19 = *(void **)(v18 + 40);
    *(_QWORD *)(v18 + 40) = v17;

  }
  v20 = 0;
  objc_msgSend(v3, "save:", &v20);

}

void sub_3BE04(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_3BE54(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  BOOL v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unsigned int v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  unsigned int v19;
  id v20;
  NSObject *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  unsigned int v43;
  uint64_t v44;
  void *v45;
  void *v46;
  _QWORD *v47;
  unsigned int v48;
  unsigned int v49;
  id v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  _QWORD v59[5];
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  _QWORD v67[5];
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint8_t buf[4];
  uint64_t v77;
  __int16 v78;
  id v79;
  __int16 v80;
  void *v81;

  v3 = a2;
  v4 = *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 104) + 8) + 40);
  if (!v4)
  {
    *(_QWORD *)&v29 = objc_opt_class(AEBookInfo).n128_u64[0];
    v31 = v30;
    v32 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 112) + 8) + 40);
    v75 = 0;
    v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "existingObjectWithID:error:", v32, &v75, v29));
    v34 = v75;
    v35 = BUDynamicCast(v31, v33);
    v36 = (void *)objc_claimAutoreleasedReturnValue(v35);

    objc_msgSend(v36, "initializeAnnotationProviderWithAssetID:", *(_QWORD *)(a1 + 32));
    if (v36)
    {
      v37 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("assetLogID")));
      objc_msgSend(v36, "setAssetLogID:", v37);

      v38 = *(void **)(a1 + 48);
      v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("storeID")));
      v40 = objc_msgSend(v38, "newViewControllerForAEBookInfo:storeID:", v36, v39);

      if (v40)
      {

        v4 = 0;
        goto LABEL_29;
      }
    }
    v4 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, 1004, 0));

    if (!v4)
      goto LABEL_30;
  }
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "domain"));
  if (objc_msgSend(v5, "isEqual:", AssetEngineErrorDomain))
  {
    v6 = objc_msgSend(v4, "code") == &stru_3D8.segname[4];

    if (v6)
      goto LABEL_9;
  }
  else
  {

  }
  v7 = _AEBookPluginsLifeCycleLog();
  v8 = objc_claimAutoreleasedReturnValue(v7);
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
  {
    v9 = *(_QWORD *)(a1 + 56);
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("assetLogID")));
    *(_DWORD *)buf = 138412802;
    v77 = v9;
    v78 = 2112;
    v79 = v4;
    v80 = 2114;
    v81 = v10;
    _os_log_impl(&dword_0, v8, OS_LOG_TYPE_ERROR, "Error fetching bookInfoForAssetAtURL: %@ -- %@ logID:%{public}@", buf, 0x20u);

  }
LABEL_9:
  if (objc_msgSend(v4, "code") != (char *)&stru_798.reloff + 2)
    goto LABEL_28;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "domain"));
  v12 = objc_msgSend(v11, "isEqualToString:", AssetEngineErrorDomain);

  if (*(_BYTE *)(a1 + 120))
  {
    if (v12)
    {
      v58 = (void *)objc_claimAutoreleasedReturnValue(+[AEAssetEngine appInfoMgr](AEAssetEngine, "appInfoMgr"));
      v51 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "path"));
      v52 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v51, "stringByAppendingPathComponent:", CFSTR("iTunesMetadata.plist")));
      v53 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithContentsOfFile:](NSDictionary, "dictionaryWithContentsOfFile:"));
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v53, "objectForKey:", CFSTR("com.apple.iTunesStore.downloadInfo")));
      v55 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "valueForKeyPath:", CFSTR("accountInfo.DSPersonID")));
      v54 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "valueForKeyPath:", CFSTR("accountInfo.AltDSID")));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "valueForKeyPath:", CFSTR("accountInfo.AppleID")));
      if (!objc_msgSend(v14, "length"))
      {
        v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v53, "objectForKeyedSubscript:", CFSTR("apple-id")));

        v14 = (void *)v15;
      }
      v16 = v4;
      v57 = v16;
      if (objc_msgSend(v14, "length"))
      {
        v17 = (void *)objc_claimAutoreleasedReturnValue(+[ACAccountStore bu_sharedAccountStore](ACAccountStore, "bu_sharedAccountStore"));
        v56 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "ams_iTunesAccountWithUsername:", v14));

        if (v56
          && (v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v56, "credential")),
              v19 = objc_msgSend(v18, "isEmpty"),
              v18,
              !v19))
        {
          v46 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v56, "ams_DSID"));
          v59[0] = _NSConcreteStackBlock;
          v59[1] = 3221225472;
          v59[2] = sub_3CAF0;
          v59[3] = &unk_1BF8A8;
          v59[4] = *(_QWORD *)(a1 + 48);
          v60 = *(id *)(a1 + 72);
          v61 = *(id *)(a1 + 40);
          v65 = *(id *)(a1 + 88);
          v50 = v46;
          v62 = v50;
          v66 = *(id *)(a1 + 96);
          v63 = *(id *)(a1 + 80);
          v16 = v57;
          v64 = v16;
          v47 = objc_retainBlock(v59);
          if ((objc_opt_respondsToSelector(v58, "isConnectedToInternet") & 1) != 0)
          {
            v48 = objc_msgSend(v58, "isConnectedToInternet");
            v49 = v50 ? v48 : 0;
            if (v49 == 1)
            {
              +[ft9cupR7u6OrU4m1pyhB Xj3eVHDeBoTD6fVn6fY8:completion:](ft9cupR7u6OrU4m1pyhB, "Xj3eVHDeBoTD6fVn6fY8:completion:", v50, v47);

              v16 = 0;
            }
          }

        }
        else
        {
          v20 = _AEBookPluginsLifeCycleLog();
          v21 = objc_claimAutoreleasedReturnValue(v20);
          if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
          {
            v22 = *(_QWORD *)(a1 + 56);
            v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("assetLogID")));
            *(_DWORD *)buf = 138412802;
            v77 = v22;
            v78 = 2112;
            v79 = v14;
            v80 = 2114;
            v81 = v23;
            _os_log_impl(&dword_0, v21, OS_LOG_TYPE_DEFAULT, "Auth needed due to non-existing account for asset at url, username: %@ -- %@, logID:%{public}@", buf, 0x20u);

          }
          v50 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v58, "_mainViewControllerForTransaction:", *(_QWORD *)(a1 + 64)));
          v24 = objc_alloc_init((Class)AMSAuthenticateOptions);
          objc_msgSend(v24, "setCanMakeAccountActive:", 0);
          v25 = objc_msgSend(objc_alloc((Class)AMSAuthenticateRequest), "initWithDSID:altDSID:username:options:", v55, v54, v14, v24);
          v26 = objc_msgSend(objc_alloc((Class)AMSUIAuthenticateTask), "initWithRequest:presentingViewController:", v25, v50);
          v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "performAuthentication"));
          v67[0] = _NSConcreteStackBlock;
          v67[1] = 3221225472;
          v67[2] = sub_3C8EC;
          v67[3] = &unk_1BF880;
          v67[4] = *(_QWORD *)(a1 + 48);
          v68 = *(id *)(a1 + 72);
          v69 = *(id *)(a1 + 40);
          v73 = *(id *)(a1 + 88);
          v70 = v14;
          v74 = *(id *)(a1 + 96);
          v71 = *(id *)(a1 + 80);
          v28 = v57;
          v72 = v28;
          objc_msgSend(v27, "addFinishBlock:", v67);

          v16 = 0;
        }

      }
      goto LABEL_40;
    }
LABEL_28:
    v40 = 0;
    goto LABEL_29;
  }
  if (!v12)
    goto LABEL_28;
  v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "userInfo"));
  v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v41, "objectForKeyedSubscript:", AssetEngineErrorIsFamilyRemovalKey));
  v43 = objc_msgSend(v42, "BOOLValue");

  if (!v43)
    goto LABEL_28;
  v16 = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", fd45c988dd8cc08fce2e58d17f4ed2, -996, 0));

LABEL_40:
  if (!v16)
    goto LABEL_30;
  v40 = 0;
  v4 = v16;
LABEL_29:
  v44 = *(_QWORD *)(a1 + 96);
  v45 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 80), "URL", v50));
  (*(void (**)(uint64_t, id, void *, id))(v44 + 16))(v44, v40, v45, v4);

LABEL_30:
}

void sub_3C670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

void sub_3C8EC(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[5];
  id v15;
  id v16;
  id v17;
  uint8_t buf[4];
  uint64_t v19;
  __int16 v20;
  void *v21;
  __int16 v22;
  void *v23;

  v5 = a3;
  v6 = v5;
  if (!a2 || v5)
  {
    v8 = _AEBookPluginsLifeCycleLog();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      v10 = *(_QWORD *)(a1 + 56);
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", CFSTR("assetLogID")));
      *(_DWORD *)buf = 138412802;
      v19 = v10;
      v20 = 2112;
      v21 = v6;
      v22 = 2114;
      v23 = v11;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_ERROR, "Error authenticating account: %@ -- %@, logID:%{public}@", buf, 0x20u);

    }
    v12 = *(_QWORD *)(a1 + 88);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "URL"));
    (*(void (**)(uint64_t, _QWORD, void *, _QWORD))(v12 + 16))(v12, 0, v13, *(_QWORD *)(a1 + 72));

  }
  else
  {
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_3CADC;
    v14[3] = &unk_1BF858;
    v7 = *(void **)(a1 + 40);
    v14[4] = *(_QWORD *)(a1 + 32);
    v15 = v7;
    v16 = *(id *)(a1 + 48);
    v17 = *(id *)(a1 + 80);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v14);

  }
}

void sub_3CAA8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_3CADC(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "helper:canRefetch:viewControllerWithOptions:completion:", *(_QWORD *)(a1 + 40), 1, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

void sub_3CAF0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  _QWORD v11[5];
  id v12;
  id v13;
  id v14;
  uint8_t buf[4];
  uint64_t v16;
  __int16 v17;
  id v18;
  __int16 v19;
  void *v20;

  v3 = a2;
  if (v3)
  {
    v4 = _AEBookPluginsLifeCycleLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = *(_QWORD *)(a1 + 56);
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectForKeyedSubscript:", CFSTR("assetLogID")));
      *(_DWORD *)buf = 138412802;
      v16 = v6;
      v17 = 2112;
      v18 = v3;
      v19 = 2114;
      v20 = v7;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_ERROR, "Error refetching bag for dsid: %@ -- %@, logID:%{public}@", buf, 0x20u);

    }
    v8 = *(_QWORD *)(a1 + 88);
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 64), "URL"));
    (*(void (**)(uint64_t, _QWORD, void *, _QWORD))(v8 + 16))(v8, 0, v9, *(_QWORD *)(a1 + 72));

  }
  else
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_3CCD8;
    v11[3] = &unk_1BF858;
    v10 = *(void **)(a1 + 40);
    v11[4] = *(_QWORD *)(a1 + 32);
    v12 = v10;
    v13 = *(id *)(a1 + 48);
    v14 = *(id *)(a1 + 80);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);

  }
}

void sub_3CCA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id sub_3CCD8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "helper:canRefetch:viewControllerWithOptions:completion:", *(_QWORD *)(a1 + 40), 0, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
}

void sub_3CE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  void *v11;
  void *v12;
  void *v13;
  va_list va;

  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_3CE40(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  BOOL v6;
  void *v7;
  void *v8;
  id v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  void *v13;
  id v14;

  v3 = a2;
  v14 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookInfoForAssetAtURL:withMoc:error:needsCoordination:updateDate:", *(_QWORD *)(a1 + 40), v3, &v14, *(unsigned __int8 *)(a1 + 64), 0));
  v5 = v4;
  if (v4)
    v6 = v14 == 0;
  else
    v6 = 0;
  if (v6 && *(_QWORD *)(a1 + 56))
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "confirmBagContents"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "domain"));
    v9 = objc_msgSend(v7, "code");
    v10 = objc_msgSend(v8, "isEqualToString:", fd45c988dd8cc08fce2e58d17f4ed2);
    if (v9 == (id)-996)
      v11 = v10;
    else
      v11 = 0;
    if (v11 == 1)
    {
      v12 = AssetEngineErrorDomain;
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "userInfo"));
      **(_QWORD **)(a1 + 56) = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", v12, 2003, v13));

    }
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;

  }
}

void sub_3CF80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;

  _Unwind_Resume(a1);
}

void sub_3D0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  void *v22;
  void *v23;
  void *v24;

  v24 = v23;

  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_3D13C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  id v7;
  void *v8;
  void *v9;
  unsigned __int8 v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  unsigned int v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  unsigned int v22;
  void *v23;
  id v24;
  int v25;
  _BOOL8 v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  uint64_t v53;
  id v54;
  char v55;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "existingBookInfoForURL:fromManagedObjectContext:", *(_QWORD *)(a1 + 40), v3));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "embeddedArtHrefRejected"));
  v6 = objc_msgSend(v5, "BOOLValue");

  if ((v6 & 1) == 0)
  {
    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URLByAppendingPathComponent:", CFSTR("iTunesArtwork")));
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "path"));
    v10 = objc_msgSend(v8, "fileExistsAtPath:", v9);

    if ((v10 & 1) != 0)
    {
      if (v7)
        goto LABEL_21;
    }
    else
    {

    }
    v11 = (void *)objc_claimAutoreleasedReturnValue(+[AEAssetEngine libraryMgr](AEAssetEngine, "libraryMgr"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "metadataForAssetAtURL:needsCoordination:", *(_QWORD *)(a1 + 40), 1));

    v13 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist coverPathFromPlistEntry:](IMLibraryPlist, "coverPathFromPlistEntry:", v12));
    if (objc_msgSend(v13, "length"))
    {
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URLByAppendingPathComponent:", v13));
      v15 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "path"));
      v17 = objc_msgSend(v15, "fileExistsAtPath:", v16);

      if (v17)
        v7 = v14;
      else
        v7 = 0;

      if (v7)
        goto LABEL_21;
    }
    else
    {

    }
    if (!v4)
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_bookInfoForAssetAtURL:withMoc:error:needsCoordination:updateDate:", *(_QWORD *)(a1 + 40), v3, 0, 1, 0));
    v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "embeddedArtHref"));
    if (objc_msgSend(v18, "length"))
    {
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "URLByAppendingPathComponent:", v18));
      v20 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
      v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "path"));
      v22 = objc_msgSend(v20, "fileExistsAtPath:", v21);

      if (v22)
        v7 = v19;
      else
        v7 = 0;

    }
    else
    {
      v7 = 0;
    }

LABEL_21:
    v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "embeddedArtHrefRejected"));

    if (!v7)
    {
      v26 = 0;
      if (!v23)
        goto LABEL_52;
      goto LABEL_53;
    }
    v24 = objc_msgSend(objc_alloc((Class)NSData), "initWithContentsOfURL:options:error:", v7, 8, 0);
    if (v24)
    {
      if (!v23 && +[AEBookInfo isUndesirableImageData:](AEBookInfo, "isUndesirableImageData:", v24))
      {
        v25 = 1;
        goto LABEL_51;
      }
      v27 = objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", v24));
      v28 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      v29 = *(void **)(v28 + 40);
      *(_QWORD *)(v28 + 40) = v27;

    }
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
    {
      v25 = 0;
      goto LABEL_51;
    }
    if (!v4)
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "_bookInfoForAssetAtURL:withMoc:error:needsCoordination:updateDate:", *(_QWORD *)(a1 + 40), v3, 0, 1, 0));
    v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "sinfInfo"));
    if (objc_msgSend(v30, "count"))
    {
      v52 = v30;
      if ((unint64_t)objc_msgSend(v30, "count") >= 2)
      {
        v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "path"));
        v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "bookBundlePath"));
        v33 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v31, "substringFromIndex:", objc_msgSend(v32, "length")));

        v51 = v33;
        v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "documentAtPath:", v33));
        v35 = v34;
        if (v34)
        {
          v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v34, "sinfNumber"));
          v37 = objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("sinfNumber ==[n] %@"), v36));

          v50 = (void *)v37;
          v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "sinfInfo"));
          v39 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v38, "filteredSetUsingPredicate:", v37));

          if (objc_msgSend(v39, "count") == (char *)&dword_0 + 1)
          {
            v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v39, "anyObject"));
            v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v40, "sinfBlob"));

          }
          else
          {
            v41 = 0;
          }

          v30 = v52;
          if (v41)
          {
LABEL_42:
            v55 = 0;
            v43 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "path"));
            v54 = 0;
            v44 = objc_claimAutoreleasedReturnValue(+[ft9cupR7u6OrU4m1pyhB pK0gFZ9QOdm17E9p9cpP:sinfData:refetch:error:](ft9cupR7u6OrU4m1pyhB, "pK0gFZ9QOdm17E9p9cpP:sinfData:refetch:error:", v43, v41, &v55, &v54));
            v45 = v54;

            if (v44)
            {
              if (!v23
                && +[AEBookInfo isUndesirableImageData:](AEBookInfo, "isUndesirableImageData:", v44))
              {
                v25 = 1;
LABEL_49:

                v30 = v52;
                goto LABEL_50;
              }
              v46 = objc_claimAutoreleasedReturnValue(+[UIImage imageWithData:](UIImage, "imageWithData:", v44));
              v47 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
              v48 = *(void **)(v47 + 40);
              *(_QWORD *)(v47 + 40) = v46;

            }
            v25 = 0;
            goto LABEL_49;
          }
        }
        else
        {

          v30 = v52;
        }
      }
      v42 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "anyObject"));
      v41 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v42, "sinfBlob"));

      if (v41)
        goto LABEL_42;
    }
    v25 = 0;
    v44 = (uint64_t)v24;
LABEL_50:

    v24 = (id)v44;
LABEL_51:

    v26 = v25 != 0;
    if (!v23)
    {
LABEL_52:
      v49 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", v26));
      objc_msgSend(v4, "setEmbeddedArtHrefRejected:", v49);

    }
LABEL_53:

  }
  if (objc_msgSend(v3, "hasChanges"))
  {
    v53 = 0;
    objc_msgSend(v3, "save:", &v53);
  }
  objc_msgSend(v3, "reset");

}

void sub_3D704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  _Unwind_Resume(a1);
}

void sub_3D9E8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_3DAA8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_3DB4C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_3DF48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

id BKActionControllerLog()
{
  if (qword_20F528 != -1)
    dispatch_once(&qword_20F528, &stru_1BF968);
  return (id)qword_20F520;
}

void sub_3E07C(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKActionControllerLog");
  v2 = (void *)qword_20F520;
  qword_20F520 = (uint64_t)v1;

}

void sub_3E53C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_3E558(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  NSObject *v15;
  void *v16;
  void *v17;
  id v18;
  unsigned int v19;
  const __CFString *v20;
  void *v21;
  id v22;
  NSObject *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  int v32;
  void *v33;
  __int16 v34;
  const __CFString *v35;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activityItems"));
  v6 = v5;
  if (v3)
    objc_msgSend(v5, "addObject:", v3);
  v7 = objc_alloc((Class)UIActivityViewController);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "applicationActivities"));
  v9 = objc_msgSend(v7, "initWithActivityItems:applicationActivities:", v6, v8);

  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "includedActivityTypes"));
  objc_msgSend(v9, "setIncludedActivityTypes:", v10);

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "excludedActivityTypes"));
  if (objc_msgSend(v11, "count"))
  {
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "excludedActivityTypes"));
    objc_msgSend(v9, "setExcludedActivityTypes:", v12);

  }
  else
  {
    objc_msgSend(v9, "setExcludedActivityTypes:", 0);
  }

  objc_msgSend(v9, "setModalPresentationStyle:", 7);
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "bookInfo"));
  objc_msgSend(v9, "setIsContentManaged:", objc_msgSend(v13, "isManagedBook"));

  v14 = BKActionControllerLog();
  v15 = objc_claimAutoreleasedReturnValue(v14);
  if (os_log_type_enabled(v15, OS_LOG_TYPE_INFO))
  {
    objc_opt_class(WeakRetained);
    v17 = v16;
    v18 = v16;
    v19 = objc_msgSend(v9, "isContentManaged");
    v20 = CFSTR("NO");
    if (v19)
      v20 = CFSTR("YES");
    v32 = 138412546;
    v33 = v17;
    v34 = 2112;
    v35 = v20;
    _os_log_impl(&dword_0, v15, OS_LOG_TYPE_INFO, "%@ isContentManaged: %@", (uint8_t *)&v32, 0x16u);

  }
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "excludedActivityTypes"));

  if (v21)
  {
    v22 = BKActionControllerLog();
    v23 = objc_claimAutoreleasedReturnValue(v22);
    if (os_log_type_enabled(v23, OS_LOG_TYPE_INFO))
    {
      v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "excludedActivityTypes"));
      v32 = 138412290;
      v33 = v24;
      _os_log_impl(&dword_0, v23, OS_LOG_TYPE_INFO, "Excluded activity types: %@", (uint8_t *)&v32, 0xCu);

    }
  }
  v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "popoverPresentationController"));
  v26 = objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "ancestorViewController"));
  v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v26, "view"));
  objc_msgSend(v25, "setSourceView:", v27);

  objc_msgSend(v25, "setBarButtonItem:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v25, "setPermittedArrowDirections:", 15);
  v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  LOBYTE(v26) = objc_opt_respondsToSelector(v28, "actionControllerWillShow:");

  if ((v26 & 1) != 0)
  {
    v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    objc_msgSend(v29, "actionControllerWillShow:", WeakRetained);

  }
  v30 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "ancestorViewController"));
  v31 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksKeyColor](UIColor, "bc_booksKeyColor"));
  objc_msgSend(v30, "bc_presentViewController:animated:tintColor:completion:", v9, 1, v31, 0);

}

void sub_3E8C8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_3E958;
  v6[3] = &unk_1BF0C0;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

uint64_t sub_3E958(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

float roundValueToOneHundredth(float a1)
{
  return roundf(a1 * 100.0) / 100.0;
}

id sub_4053C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "loadFonts");
}

void sub_42528(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_44384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_443AC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_443BC(uint64_t a1)
{

}

void sub_443C4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  id v6;
  double v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = a2;
  *(_QWORD *)&v7 = objc_opt_class(v5).n128_u64[0];
  v9 = v8;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "directoryDelegate", v7));
  v19 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "pageNumberStringForChapter:directoryDelegate:", v6, v10));

  *(_QWORD *)&v11 = objc_opt_class(*(_QWORD *)(a1 + 32)).n128_u64[0];
  v13 = v12;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "directoryDelegate", v11));
  v15 = objc_msgSend(v13, "pageNumberForChapter:directoryDelegate:", v6, v14);

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "addObject:", v19);
  v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectAtIndexedSubscript:", a3));
  objc_msgSend(v16, "setObject:forKeyedSubscript:", v19, CFSTR("pageNumber"));

  v17 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v15));
  v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectAtIndexedSubscript:", a3));
  objc_msgSend(v18, "setObject:forKeyedSubscript:", v17, CFSTR("pageInteger"));

}

void sub_444FC(id a1, id a2, NSError *a3)
{
  if (a3)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/Directory/BKTOCWebViewController2.m", 140, "-[BKTOCWebViewController2 updatePageNumberStrings]_block_invoke_2", "!error", 0);
}

void sub_44EA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_44EC8(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  __CFString *v15;
  id v16;
  const __CFString *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  const __CFString *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  _QWORD v31[9];
  _QWORD v32[9];
  const __CFString *v33;
  void *v34;

  v5 = a2;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "htmlName"));
  v7 = objc_msgSend(v6, "length");

  if (v7)
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "htmlName"));
  else
    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "name"));
  v9 = v8;
  v28 = (void *)v8;
  v10 = *(void **)(a1 + 56);
  v33 = CFSTR("indentationLevel");
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "indentationLevel"));
  v34 = v11;
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v34, &v33, 1));
  v13 = objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "classNameFromChapterInfo:excludedFromSample:", v12, objc_msgSend(v5, "isExcludedFromSample")));
  v29 = (void *)v13;

  v14 = objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("li%ld"), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24)));
  v27 = (void *)v14;
  ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
  v15 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 56), "pageNumberStringForChapter:directoryDelegate:", v5, *(_QWORD *)(a1 + 32)));
  v16 = objc_msgSend(*(id *)(a1 + 56), "pageNumberForChapter:directoryDelegate:", v5, *(_QWORD *)(a1 + 32));
  v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%@%lu"), CFSTR("row-"), a3));
  v31[0] = CFSTR("href");
  v32[0] = v30;
  v32[1] = v9;
  if (v15)
    v17 = v15;
  else
    v17 = &stru_1C3088;
  v32[2] = v17;
  v31[1] = CFSTR("title");
  v31[2] = CFSTR("pageNumber");
  v31[3] = CFSTR("pageInteger");
  v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v16));
  v32[3] = v18;
  v32[4] = v13;
  v31[4] = CFSTR("class");
  v31[5] = CFSTR("id");
  v32[5] = v14;
  v31[6] = CFSTR("absoluteOrder");
  v19 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "absoluteOrder"));
  v20 = (void *)v19;
  if (v19)
    v21 = (const __CFString *)v19;
  else
    v21 = &stru_1C3088;
  v32[6] = v21;
  v31[7] = CFSTR("rowIndex");
  v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a3));
  v32[7] = v22;
  v31[8] = CFSTR("indentationLevel");
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "indentationLevel"));
  v32[8] = v23;
  v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", v32, v31, 9));
  v25 = objc_msgSend(v24, "mutableCopy");

  v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectForKeyedSubscript:", CFSTR("chapters")));
  objc_msgSend(v26, "addObject:", v25);

}

void sub_45780(id a1, id a2, NSError *a3)
{
  if (a3)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/Directory/BKTOCWebViewController2.m", 354, "-[BKTOCWebViewController2 centerWebView]_block_invoke", "!error", 0);
}

void sub_45AE4(id a1, id a2, NSError *a3)
{
  if (a3)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/Directory/BKTOCWebViewController2.m", 434, "-[BKTOCWebViewController2 webView:decidePolicyForNavigationAction:decisionHandler:]_block_invoke", "!error", 0);
}

id sub_45B70(uint64_t a1, char a2)
{
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  int v8;
  const char *v9;
  __int16 v10;
  const char *v11;
  __int16 v12;
  int v13;

  if ((a2 & 1) == 0)
  {
    v3 = BCIMLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
    {
      v8 = 136315650;
      v9 = "-[BKTOCWebViewController2 webView:didFinishNavigation:]_block_invoke";
      v10 = 2080;
      v11 = "/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/Directory/BKTOCWebViewController2.m";
      v12 = 1024;
      v13 = 448;
      _os_log_impl(&dword_0, v4, OS_LOG_TYPE_INFO, "%s %s:%d", (uint8_t *)&v8, 0x1Cu);
    }

    v5 = BCIMLog();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      LOWORD(v8) = 0;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_INFO, "@\"Error encountered installing scripts into vertical toc.\"", (uint8_t *)&v8, 2u);
    }

  }
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 460) = 1;
  objc_msgSend(*(id *)(a1 + 32), "updateView");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 464), "hideIndicatorAnimated:animationDelay:", 1, 0.25);
  return objc_msgSend(*(id *)(a1 + 32), "highlightCurrentNode");
}

void sub_45EA4(uint64_t a1, void *a2)
{
  void (**v3)(id, BOOL);
  id v4;

  v4 = a2;
  if (v4)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/Directory/BKTOCWebViewController2.m", 508, "-[BKTOCWebViewController2 scrollToItemId:completionBlock:]_block_invoke", "!error", 0);
  v3 = (void (**)(id, BOOL))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
    v3[2](v3, v4 == 0);

}

void sub_45F2C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;

  v6 = a3;
  v4 = objc_retainBlock(*(id *)(a1 + 32));
  v5 = v4;
  if (v4)
    (*((void (**)(id, id))v4 + 2))(v4, v6);

}

void sub_46288(id a1, id a2, NSError *a3)
{
  if (a3)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/Directory/BKTOCWebViewController2.m", 565, "-[BKTOCWebViewController2 applyClassName:toOnlyLinkWithHref:]_block_invoke", "!error", 0);
}

void sub_469F0(id a1, id a2, NSError *a3)
{
  if (a3)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/Directory/BKTOCWebViewController2.m", 631, "-[BKTOCWebViewController2 highlightCurrentNodeWithCompletionBlock:]_block_invoke", "!error", 0);
}

void sub_46C00(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  const char *v13;
  int v14;
  const char *v15;
  __int16 v16;
  const char *v17;
  __int16 v18;
  int v19;

  v3 = a2;
  if (objc_msgSend(v3, "length"))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "dataUsingEncoding:", 4));
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v4, 0, 0));

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("width")));
    v7 = (double)(uint64_t)objc_msgSend(v6, "integerValue");
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("height")));
    objc_msgSend(*(id *)(a1 + 32), "setContentSize:", v7, (double)(uint64_t)objc_msgSend(v8, "integerValue"));

    objc_msgSend(*(id *)(a1 + 32), "centerWebView");
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

  }
  else
  {
    v9 = BCIMLog();
    v10 = objc_claimAutoreleasedReturnValue(v9);
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      v14 = 136315650;
      v15 = "-[BKTOCWebViewController2 installJavaScriptWithCompletionBlock:]_block_invoke";
      v16 = 2080;
      v17 = "/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/Directory/BKTOCWebViewController2.m";
      v18 = 1024;
      v19 = 659;
      _os_log_impl(&dword_0, v10, OS_LOG_TYPE_INFO, "%s %s:%d", (uint8_t *)&v14, 0x1Cu);
    }

    v11 = BCIMLog();
    v12 = objc_claimAutoreleasedReturnValue(v11);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_INFO))
    {
      v13 = *(const char **)(a1 + 40);
      v14 = 138412290;
      v15 = v13;
      _os_log_impl(&dword_0, v12, OS_LOG_TYPE_INFO, "@\"installJavaScript error %@\"", (uint8_t *)&v14, 0xCu);
    }

    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

void sub_46E0C(uint64_t a1, void *a2)
{
  void (**v3)(id, void *);
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v7 = a2;
  v3 = (void (**)(id, void *))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    v4 = objc_opt_class(NSString);
    v5 = BUDynamicCast(v4, v7);
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v3[2](v3, v6);

  }
}

id sub_470F8(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setTocData:", a2);
}

void sub_4749C(id a1, id a2, NSError *a3)
{
  if (a3)
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/Directory/BKTOCWebViewController2.m", 748, "-[BKTOCWebViewController2 updatePageStylesheet]_block_invoke", "!error", 0);
}

void sub_47A58(id a1, IMConfigurationAdder *a2)
{
  id v2;
  void *v3;
  void *v4;
  IMConfigurationAdder *v5;

  v5 = a2;
  v2 = AEBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("Library"), &stru_1C3088, 0));
  -[IMConfigurationAdder addString:forKey:](v5, "addString:forKey:", v4, CFSTR("libraryButtonTitle"));

  -[IMConfigurationAdder addFloat:forKey:](v5, "addFloat:forKey:", CFSTR("sideContentInset"), 16.0);
}

void sub_47AE0(id a1, IMConfigurationAdder *a2)
{
  id v2;
  void *v3;
  void *v4;
  IMConfigurationAdder *v5;

  v5 = a2;
  v2 = AEBundle();
  v3 = (void *)objc_claimAutoreleasedReturnValue(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "localizedStringForKey:value:table:", CFSTR("Library"), &stru_1C3088, 0));
  -[IMConfigurationAdder addString:forKey:](v5, "addString:forKey:", v4, CFSTR("libraryButtonTitle"));

  -[IMConfigurationAdder addFloat:forKey:](v5, "addFloat:forKey:", CFSTR("sideContentInset"), 75.0);
}

void sub_47BBC(id a1, IMConfigurationAdder *a2)
{
  IMConfigurationAdder *v2;
  void *v3;
  id v4;

  v2 = a2;
  -[IMConfigurationAdder addFloat:forKey:](v2, "addFloat:forKey:", CFSTR("tapToTurnWidth"), 80.0);
  -[IMConfigurationAdder addFloat:forKey:](v2, "addFloat:forKey:", CFSTR("singlePagePadding"), 30.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate portraitPredicate](IMConfigurationPredicate, "portraitPredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v3, &stru_1BFC98);

  v4 = (id)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate landscapePredicate](IMConfigurationPredicate, "landscapePredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v4, &stru_1BFCB8);

}

void sub_47C6C(id a1, IMConfigurationAdder *a2)
{
  IMConfigurationAdder *v2;

  v2 = a2;
  -[IMConfigurationAdder addEdgeInsets:forKey:](v2, "addEdgeInsets:forKey:", CFSTR("tocButtonImageEdgeInsets"), 0.0, -10.0, 0.0, 0.0);
  -[IMConfigurationAdder addEdgeInsets:forKey:](v2, "addEdgeInsets:forKey:", CFSTR("resumeButtonTitleEdgeInsets"), 0.0, 0.0, 0.0, 0.0);

}

void sub_47CCC(id a1, IMConfigurationAdder *a2)
{
  IMConfigurationAdder *v2;

  v2 = a2;
  -[IMConfigurationAdder addEdgeInsets:forKey:](v2, "addEdgeInsets:forKey:", CFSTR("tocButtonImageEdgeInsets"), 0.0, 0.0, 0.0, 0.0);
  -[IMConfigurationAdder addEdgeInsets:forKey:](v2, "addEdgeInsets:forKey:", CFSTR("resumeButtonTitleEdgeInsets"), 0.0, 7.0, 0.0, -7.0);

}

void sub_47D7C(id a1, IMConfigurationAdder *a2)
{
  IMConfigurationAdder *v2;
  void *v3;
  id v4;

  v2 = a2;
  -[IMConfigurationAdder addEdgeInsets:forKey:](v2, "addEdgeInsets:forKey:", CFSTR("tocButtonImageEdgeInsets"), 0.0, 0.0, 0.0, 0.0);
  -[IMConfigurationAdder addEdgeInsets:forKey:](v2, "addEdgeInsets:forKey:", CFSTR("resumeButtonTitleEdgeInsets"), 0.0, 8.0, 0.0, -8.0);
  -[IMConfigurationAdder addFloat:forKey:](v2, "addFloat:forKey:", CFSTR("singlePagePadding"), 60.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate portraitPredicate](IMConfigurationPredicate, "portraitPredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v3, &stru_1BFCF8);

  v4 = (id)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate landscapePredicate](IMConfigurationPredicate, "landscapePredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v4, &stru_1BFD18);

}

void sub_47E58(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("tapToTurnWidth"), 110.0);
}

void sub_47E70(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("tapToTurnWidth"), 82.0);
}

void sub_49144(uint64_t a1)
{
  void *v2;
  void (**v3)(void);
  void (**v4)(void);

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "book"));
  objc_msgSend(v2, "setIsPreorder:", &__kCFBooleanTrue);

  v3 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v3)
  {
    v4 = v3;
    v3[2]();
    v3 = v4;
  }

}

id sub_4A0A8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "emitReadingOrientationChangeEventIfNeeded");
}

id sub_4A0B0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setRotationInProgress:", 0);
}

id sub_4A870(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "stopFetchingBookmarks");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetViewControllerDelegate"));
  objc_msgSend(v2, "assetViewController:requestClose:error:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), 0);

  objc_msgSend(*(id *)(a1 + 32), "saveBook");
  return objc_msgSend(*(id *)(a1 + 32), "setControlsVisible:animated:", 0, 0);
}

id sub_4B59C(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  v3 = v2;
  if (v2)
    (*((void (**)(id, _QWORD))v2 + 2))(v2, 0);

  return objc_msgSend(*(id *)(a1 + 32), "reloadExternalWebFrames");
}

id sub_4B5E0(uint64_t a1)
{
  id v2;
  void *v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  v3 = v2;
  if (v2)
    (*((void (**)(id, uint64_t))v2 + 2))(v2, 1);

  return objc_msgSend(*(id *)(a1 + 32), "reloadExternalWebFrames");
}

id sub_4B6FC(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "cachedApproval:forBookID:", a2, *(_QWORD *)(a1 + 40));
}

id sub_4BB20(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 200), "setTheme:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 432), "setTheme:", *(_QWORD *)(a1 + 40));
}

id sub_4C018(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "canShowContent");
  if ((_DWORD)result)
    return _objc_msgSend(*(id *)(a1 + 32), "_resume");
  return result;
}

_BYTE *sub_4C0DC(uint64_t a1)
{
  _BYTE *result;

  objc_msgSend(*(id *)(a1 + 32), "setResumeLocation:", 0);
  result = *(_BYTE **)(a1 + 32);
  if (result[264])
    return objc_msgSend(result, "startReadAloud");
  return result;
}

void sub_4C174(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "cancelPendingHidePageControls");
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentLocation"));
  if (!v2)
    v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "location"));
  v6 = (id)v2;
  objc_msgSend(*(id *)(a1 + 32), "setResumeLocation:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentPageLocation"));
  v4 = v3;
  if (!v3 || objc_msgSend(v3, "ordinal") == (id)-1)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "resumeLocation"));
    objc_msgSend(*(id *)(a1 + 32), "setTocCurrentLocation:", v5);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "setTocCurrentLocation:", v4);
  }
  objc_msgSend(*(id *)(a1 + 32), "stopReadAloud");
  objc_msgSend(*(id *)(a1 + 32), "setSection:animated:adjustScrollToReveal:", 1, +[UIView areAnimationsEnabled](UIView, "areAnimationsEnabled"), 0);

}

uint64_t sub_4C444(uint64_t a1)
{
  uint64_t result;

  if (*(_BYTE *)(a1 + 48))
  {
    objc_msgSend(*(id *)(a1 + 32), "setNeedsStatusBarAppearanceUpdate");
    objc_msgSend(*(id *)(a1 + 32), "setNeedsUpdateOfHomeIndicatorAutoHidden");
  }
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_4C490(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_4C60C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_4C6DC(uint64_t a1)
{
  BKBrightnessController *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v2 = objc_alloc_init(BKBrightnessController);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 520);
  *(_QWORD *)(v3 + 520) = v2;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "theme"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "brightnessController"));
  objc_msgSend(v6, "setTheme:", v5);

  v7 = *(void **)(a1 + 32);
  v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "brightnessController"));
  objc_msgSend(v7, "showOverlayViewController:fromView:popoverOnPhone:popoverBackgroundColor:", v8, *(_QWORD *)(a1 + 40), 1, 0);

}

void sub_4C81C(uint64_t a1)
{
  BKAudioController *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v2 = objc_alloc_init(BKAudioController);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 528);
  *(_QWORD *)(v3 + 528) = v2;

  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "theme"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "audioController"));
  objc_msgSend(v6, "setTheme:", v5);

  v7 = *(void **)(a1 + 32);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "audioController"));
  objc_msgSend(v8, "setDelegate:", v7);

  v9 = objc_alloc((Class)UINavigationController);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "audioController"));
  v12 = objc_msgSend(v9, "initWithRootViewController:", v10);

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "navigationBar"));
  objc_msgSend(v11, "setTranslucent:", 0);

  objc_msgSend(*(id *)(a1 + 32), "showOverlayViewController:fromView:popoverOnPhone:popoverBackgroundColor:", v12, *(_QWORD *)(a1 + 40), 1, 0);
}

void sub_4CA6C(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void **v10;
  uint64_t v11;
  id *(*v12)(id *, char);
  void *v13;
  uint64_t v14;
  id v15;

  v2 = *(_QWORD **)(a1 + 32);
  if (!v2[44])
  {
    objc_msgSend(v2, "setupAppearanceViewController");
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "paginationController"));
    objc_msgSend(v3, "pause");

    v2 = *(_QWORD **)(a1 + 32);
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "currentLocation"));
  v5 = *(void **)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "location"));
  v10 = _NSConcreteStackBlock;
  v11 = 3221225472;
  v12 = sub_4CB94;
  v13 = &unk_1BFD90;
  v14 = *(_QWORD *)(a1 + 32);
  v15 = v4;
  v7 = v4;
  objc_msgSend(v5, "isLocationVisible:completion:", v6, &v10);

  objc_msgSend(*(id *)(a1 + 32), "clearSelection", v10, v11, v12, v13, v14);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "theme"));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "tableViewBackgroundColor"));

  objc_msgSend(*(id *)(a1 + 32), "showOverlayViewController:fromItem:popoverOnPhone:passthroughViews:popoverBackgroundColor:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 368), *(_QWORD *)(a1 + 40), 1, 0, v9);
}

id *sub_4CB94(id *result, char a2)
{
  if ((a2 & 1) == 0)
    return (id *)objc_msgSend(result[4], "setLocation:", result[5]);
  return result;
}

id sub_4E528(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "mergeChangesFromContextDidSaveNotification:", *(_QWORD *)(a1 + 40));
}

uint64_t sub_4E534(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_50000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_5002C(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  int v9;
  double v10;
  id v11;

  v11 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    if (objc_msgSend(WeakRetained, "pageCountIncludingUpsell") != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "book"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "sampleContent"));
      v7 = 0;
      if ((objc_msgSend(v6, "BOOLValue") & 1) == 0)
      {
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "_currentReadingProgress"));
        objc_msgSend(v8, "floatValue");
        v7 = v9;

      }
      LODWORD(v10) = v7;
      objc_msgSend(v11, "updateReadingProgressAndBumpHighWaterMarkToProgress:", v10);
    }
    if ((objc_msgSend(v4, "shouldSyncLocation:", *(_QWORD *)(a1 + 32)) & 1) != 0)
      objc_msgSend(v11, "clearAvoidSync");
    else
      objc_msgSend(v11, "setAvoidSync");
  }

}

void sub_506D4(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  unsigned __int8 v16;
  void *v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];

  objc_msgSend(*(id *)(a1 + 32), "clearSelection");
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentLocation"));
  if (v2)
  {
    v3 = (void *)v2;
    objc_opt_class(BKEpubCFILocation);
    v5 = BUDynamicCast(v4, v3);
    v6 = (void *)objc_claimAutoreleasedReturnValue(v5);
    v7 = v6;
    if (v6)
    {
      v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "head"));

      v3 = (void *)v8;
    }
    v21 = 0u;
    v22 = 0u;
    v19 = 0u;
    v20 = 0u;
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 328), "fetchedObjects", 0));
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v20;
LABEL_6:
      v13 = 0;
      while (1)
      {
        if (*(_QWORD *)v20 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * v13);
        if (objc_msgSend(v14, "annotationType") == 1)
        {
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "location"));
          v16 = objc_msgSend(v15, "isEqual:", v3);

          if ((v16 & 1) != 0)
            break;
        }
        if (v11 == (id)++v13)
        {
          v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
          if (v11)
            goto LABEL_6;
          goto LABEL_13;
        }
      }
    }
    else
    {
LABEL_13:

      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "addAnnotation:location:selectedText:representativeText:", 1, v3, 0, 0));
      v17 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationProvider sharedInstance](AEAnnotationProvider, "sharedInstance"));
      v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "managedObjectContext"));
      objc_msgSend(v17, "saveManagedObjectContext:", v18);

      objc_msgSend(*(id *)(a1 + 32), "paginationUpdateRequired");
    }

    objc_msgSend(*(id *)(a1 + 32), "_notifyBookmarkObservers");
  }
}

void sub_50928(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];

  objc_msgSend(*(id *)(a1 + 32), "clearSelection");
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "visiblePageBookmarks", 0));
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v12;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v12 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * (_QWORD)v6);
        v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "book"));
        objc_msgSend(v8, "deleteAnnotation:", v7);

        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v4);
  }

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotationProvider sharedInstance](AEAnnotationProvider, "sharedInstance"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "uiManagedObjectContext"));
  objc_msgSend(v9, "saveManagedObjectContext:", v10);

  objc_msgSend(*(id *)(a1 + 32), "paginationUpdateRequired");
  objc_msgSend(*(id *)(a1 + 32), "_notifyBookmarkObservers");

}

id *sub_518FC(id *result, int a2)
{
  if (a2)
    return (id *)objc_msgSend(result[4], "updateBookmarkButton:", 1);
  return result;
}

void sub_52EF8(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v7[4];
  id v8;

  v2 = objc_alloc_init((Class)LTUITranslationViewController);
  if ((objc_msgSend(*(id *)(a1 + 32), "im_isCompactWidth") & 1) == 0
    && (objc_msgSend(*(id *)(a1 + 32), "im_isCompactHeight") & 1) == 0)
  {
    objc_msgSend(v2, "setModalPresentationStyle:", 7);
  }
  v3 = objc_msgSend(objc_alloc((Class)NSAttributedString), "initWithString:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v2, "setText:", v3);

  objc_msgSend(v2, "setIsSourceEditable:", 0);
  objc_msgSend(v2, "setOverrideUserInterfaceStyle:", objc_msgSend(*(id *)(a1 + 32), "overrideUserInterfaceStyle"));
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_53078;
  v7[3] = &unk_1BEC70;
  v8 = *(id *)(a1 + 56);
  objc_msgSend(v2, "setDismissCompletionHandler:", v7);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "popoverPresentationController"));
  objc_msgSend(v4, "setSourceView:", *(_QWORD *)(a1 + 48));
  objc_msgSend(v4, "setPermittedArrowDirections:", 15);
  objc_msgSend(v4, "setDelegate:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v4, "bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:", *(_QWORD *)(a1 + 32));
  v5 = *(void **)(a1 + 32);
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksKeyColor](UIColor, "bc_booksKeyColor"));
  objc_msgSend(v5, "bc_presentViewController:animated:tintColor:completion:", v2, 1, v6, 0);

  objc_msgSend(*(id *)(a1 + 32), "setTranslationViewController:", v2);
}

void sub_53078(uint64_t a1)
{
  void (**v1)(void);
  void (**v2)(void);

  v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    v2 = v1;
    v1[2]();
    v1 = v2;
  }

}

void sub_53E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_53E6C(uint64_t a1)
{
  id v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "updateToolbarController");
  v2 = objc_retainBlock(*(id *)(a1 + 32));
  v3 = v2;
  if (v2)
    (*((void (**)(id))v2 + 2))(v2);

}

void sub_54A80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_54A9C(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32);
  v5 = WeakRetained;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "searchButtonItem"));
  objc_msgSend(v5, "showOverlayViewController:fromItem:popoverOnPhone:passthroughViews:popoverBackgroundColor:", v3, v4, 0, &__NSArray0__struct, 0);

}

void sub_54D44(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_54D60(uint64_t a1, char a2)
{
  id *v4;
  id WeakRetained;
  id *v6;
  id *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  _QWORD block[4];
  id v12;
  id v13;
  id v14;
  char v15;

  v4 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if ((a2 & 1) != 0)
    {
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      v8[2] = sub_54FD8;
      v8[3] = &unk_1BF560;
      v6 = &v10;
      objc_copyWeak(&v10, v4);
      v7 = &v9;
      v9 = *(id *)(a1 + 40);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);
    }
    else
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_54E9C;
      block[3] = &unk_1BFEA0;
      v6 = &v14;
      objc_copyWeak(&v14, v4);
      v7 = &v12;
      v12 = *(id *)(a1 + 32);
      v15 = *(_BYTE *)(a1 + 56);
      v13 = *(id *)(a1 + 40);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    }
    objc_destroyWeak(v6);
  }

}

void sub_54E9C(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v2 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 56);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_54F70;
  v6[3] = &unk_1BF560;
  objc_copyWeak(&v8, v2);
  v7 = *(id *)(a1 + 40);
  objc_msgSend(WeakRetained, "recordedJumpToLocation:animated:completion:", v4, v5, v6);

  objc_destroyWeak(&v8);
}

void sub_54F5C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_54F70(uint64_t a1)
{
  uint64_t v2;
  id *v3;
  id WeakRetained;
  id v5;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setSearchResult:", v2);

  v5 = objc_loadWeakRetained(v3);
  objc_msgSend(v5, "highlightSearchResult:forceVisible:", *(_QWORD *)(a1 + 32), 1);

}

void sub_54FD8(uint64_t a1)
{
  uint64_t v2;
  id *v3;
  id WeakRetained;
  id v5;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setSearchResult:", v2);

  v5 = objc_loadWeakRetained(v3);
  objc_msgSend(v5, "highlightSearchResult:forceVisible:", *(_QWORD *)(a1 + 32), 1);

}

id sub_550F4(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_dismissSearchViewController");
}

void sub_55510(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  double x;
  double y;
  double width;
  double height;
  unsigned __int8 v16;
  BCDDParsecCollectionViewController *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void **v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  void *v26;
  id v27;
  id v28;
  CGRect v29;
  CGRect v30;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v2, "convertRect:toView:", v11, v4, v6, v8, v10);
  v30 = CGRectIntegral(v29);
  x = v30.origin.x;
  y = v30.origin.y;
  width = v30.size.width;
  height = v30.size.height;

  if ((objc_msgSend(*(id *)(a1 + 40), "im_isCompactWidth") & 1) != 0)
    v16 = 1;
  else
    v16 = objc_msgSend(*(id *)(a1 + 40), "im_isCompactHeight");
  v17 = -[BCDDParsecCollectionViewController initWithString:range:]([BCDDParsecCollectionViewController alloc], "initWithString:range:", *(_QWORD *)(a1 + 48), 0, objc_msgSend(*(id *)(a1 + 48), "length"));
  -[BCDDParsecCollectionViewController setOverrideUserInterfaceStyle:](v17, "setOverrideUserInterfaceStyle:", objc_msgSend(*(id *)(a1 + 40), "overrideUserInterfaceStyle"));
  if ((v16 & 1) == 0)
    -[BCDDParsecCollectionViewController setModalPresentationStyle:](v17, "setModalPresentationStyle:", 7);
  v18 = (void *)objc_claimAutoreleasedReturnValue(-[BCDDParsecCollectionViewController popoverPresentationController](v17, "popoverPresentationController"));
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v18, "setSourceView:", v19);

  objc_msgSend(v18, "setSourceRect:", x, y, width, height);
  objc_msgSend(v18, "setPermittedArrowDirections:", 15);
  objc_msgSend(v18, "setDelegate:", *(_QWORD *)(a1 + 40));
  objc_msgSend(v18, "bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:", *(_QWORD *)(a1 + 40));
  v20 = *(void **)(a1 + 40);
  v21 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksKeyColor](UIColor, "bc_booksKeyColor"));
  objc_msgSend(v20, "bc_presentViewController:animated:tintColor:completion:", v17, 1, v21, 0);

  v23 = _NSConcreteStackBlock;
  v24 = 3221225472;
  v25 = sub_55754;
  v26 = &unk_1BFEF0;
  v27 = (id)objc_claimAutoreleasedReturnValue(-[BCDDParsecCollectionViewController dismissCompletionHandler](v17, "dismissCompletionHandler"));
  v28 = *(id *)(a1 + 56);
  v22 = v27;
  -[BCDDParsecCollectionViewController setDismissCompletionHandler:](v17, "setDismissCompletionHandler:", &v23);
  objc_msgSend(*(id *)(a1 + 40), "setReferenceLibraryViewController:", v17, v23, v24, v25, v26);

}

void sub_55754(uint64_t a1)
{
  id v2;
  void *v3;
  void (**v4)(void);
  void (**v5)(void);

  v2 = objc_retainBlock(*(id *)(a1 + 32));
  v3 = v2;
  if (v2)
    (*((void (**)(id))v2 + 2))(v2);

  v4 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v4)
  {
    v5 = v4;
    v4[2]();
    v4 = v5;
  }

}

id sub_56FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _objc_msgSend(*(id *)(a1 + 40), "valueOfAnnotationProperty:activityType:book:", a3, a2, *(_QWORD *)(a1 + 32));
}

void sub_5724C(uint64_t a1)
{
  _BYTE *v2;
  char v3;
  double v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  double v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  _QWORD *v25;
  _QWORD v26[4];
  id v27;
  _QWORD v28[4];
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  char v35;
  id location;

  objc_msgSend(*(id *)(a1 + 32), "clearSearchResult");
  v2 = *(_BYTE **)(a1 + 32);
  v3 = v2[112];
  objc_msgSend(v2, "setStatusBarHidden:animated:", 0, 1);
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40) = 3;
  *(_QWORD *)&v4 = objc_opt_class(*(_QWORD *)(a1 + 32)).n128_u64[0];
  v6 = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "book", v4));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "propertySourceFromBook:", v7));

  if (!objc_msgSend(*(id *)(a1 + 40), "count"))
  {
    v11 = objc_msgSend(objc_alloc((Class)AEAssetActivityItemProvider), "initWithPropertySource:", v8);
    goto LABEL_9;
  }
  if (!*(_BYTE *)(a1 + 64))
  {
    v12 = (char *)objc_msgSend(*(id *)(a1 + 40), "count");
    v13 = objc_alloc((Class)AEAssetActivityItemProvider);
    v9 = v13;
    if (v12 == (_BYTE *)&dword_0 + 1)
    {
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "objectAtIndexedSubscript:", 0));
      goto LABEL_7;
    }
    v11 = objc_msgSend(v13, "initWithAnnotations:propertySource:", *(_QWORD *)(a1 + 40), v8);
LABEL_9:
    v15 = v11;
    goto LABEL_10;
  }
  v9 = objc_alloc((Class)AEAssetActivityItemProvider);
  v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "lastObject"));
LABEL_7:
  v14 = (void *)v10;
  v15 = objc_msgSend(v9, "initWithAnnotation:propertySource:", v10, v8);

LABEL_10:
  objc_msgSend(v15, "setPaginationDataSource:", *(_QWORD *)(a1 + 32));
  *(_QWORD *)&v16 = objc_opt_class(*(_QWORD *)(a1 + 32)).n128_u64[0];
  v18 = v17;
  v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "book", v16));
  objc_msgSend(v15, "setCitationsAllowed:", objc_msgSend(v18, "areCitationsAllowedForBook:", v19));

  objc_initWeak(&location, *(id *)(a1 + 32));
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 3221225472;
  v28[2] = sub_57538;
  v28[3] = &unk_1BFF90;
  objc_copyWeak(&v34, &location);
  v20 = v15;
  v29 = v20;
  v21 = v8;
  v22 = *(_QWORD *)(a1 + 32);
  v32 = v21;
  v30 = v22;
  v35 = v3;
  v33 = *(id *)(a1 + 56);
  v31 = *(id *)(a1 + 48);
  v23 = objc_retainBlock(v28);
  v24 = (void *)objc_claimAutoreleasedReturnValue(+[BCProgressKitController sharedController](BCProgressKitController, "sharedController"));
  v26[0] = _NSConcreteStackBlock;
  v26[1] = 3221225472;
  v26[2] = sub_577B8;
  v26[3] = &unk_1BF9B8;
  v25 = v23;
  v27 = v25;
  objc_msgSend(v24, "activeContextWithCompletion:", v26);

  objc_destroyWeak(&v34);
  objc_destroyWeak(&location);

}

void sub_5751C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_57538(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[5];
  id v18;
  char v19;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithObject:](NSMutableArray, "arrayWithObject:", *(_QWORD *)(a1 + 32)));
  v6 = v5;
  if (v3)
    objc_msgSend(v5, "addObject:", v3);
  v7 = objc_alloc((Class)IMActivityController);
  v8 = objc_msgSend(*(id *)(a1 + 32), "shareType");
  v9 = *(_QWORD *)(a1 + 56);
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "ba_effectiveAnalyticsTracker"));
  v11 = objc_msgSend(v7, "initWithActivityItems:applicationActivities:shareType:propertySource:tracker:", v6, 0, v8, v9, v10);

  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "book"));
  objc_msgSend(v11, "setManagedBook:", objc_msgSend(v12, "isManagedBook"));

  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "viewController"));
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_57754;
  v17[3] = &unk_1BFF68;
  v17[4] = WeakRetained;
  v19 = *(_BYTE *)(a1 + 80);
  v18 = *(id *)(a1 + 64);
  objc_msgSend(v11, "setCompletionHandler:", v17);
  objc_msgSend(v13, "setModalPresentationStyle:", 7);
  objc_msgSend(v13, "setOverrideUserInterfaceStyle:", objc_msgSend(*(id *)(a1 + 40), "overrideUserInterfaceStyle"));
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "popoverPresentationController"));
  objc_msgSend(v14, "setBarButtonItem:", *(_QWORD *)(a1 + 48));
  objc_msgSend(v14, "setPermittedArrowDirections:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 40));
  objc_msgSend(v14, "setDelegate:", WeakRetained);
  objc_msgSend(v14, "bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:", *(_QWORD *)(a1 + 40));
  objc_msgSend(WeakRetained, "setActivityViewController:", v13);
  v15 = *(void **)(a1 + 40);
  v16 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksKeyColor](UIColor, "bc_booksKeyColor"));
  objc_msgSend(v15, "bc_presentViewController:animated:tintColor:completion:", v13, 1, v16, 0);

}

void sub_57754(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  v6 = a2;
  objc_msgSend(*(id *)(a1 + 32), "setStatusBarHidden:animated:", *(_BYTE *)(a1 + 48) == 0, 1);
  v5 = *(_QWORD *)(a1 + 40);
  if (v5)
    (*(void (**)(uint64_t, id, uint64_t))(v5 + 16))(v5, v6, a3);

}

void sub_577B8(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_57848;
  v6[3] = &unk_1BF0C0;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

uint64_t sub_57848(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

void sub_57964(uint64_t a1)
{
  _BYTE *v2;
  char v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  _BOOL4 v37;
  void *v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  CGFloat v42;
  void *v43;
  unsigned int v44;
  void *v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  double v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  id v59;
  uint64_t v60;
  id v61;
  char *v62;
  id v63;
  void *v64;
  id v65;
  double v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  _QWORD v81[5];
  id v82;
  char v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;

  v2 = *(_BYTE **)(a1 + 32);
  v3 = v2[112];
  objc_msgSend(v2, "setStatusBarHidden:animated:", 0, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "window"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "windowScene"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "statusBarManager"));

  objc_msgSend(v7, "statusBarFrame");
  x = v84.origin.x;
  y = v84.origin.y;
  width = v84.size.width;
  height = v84.size.height;
  v12 = 0.0;
  if (!CGRectIsNull(v84))
  {
    v85.origin.x = x;
    v85.origin.y = y;
    v85.size.width = width;
    v85.size.height = height;
    v12 = CGRectGetHeight(v85);
  }
  v13 = CGRectZero.origin.x;
  v14 = CGRectZero.origin.y;
  v16 = CGRectZero.size.width;
  v15 = CGRectZero.size.height;
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40) = 15;
  v17 = *(_QWORD *)(a1 + 40);
  if (v17)
  {
    objc_opt_class(UIButton);
    if ((objc_opt_isKindOfClass(v17, v18) & 1) != 0)
    {
      v19 = *(void **)(a1 + 40);
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "imageView"));
      objc_msgSend(v20, "frame");
      v22 = v21;
      v24 = v23;
      v26 = v25;
      v28 = v27;
      v29 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
      objc_msgSend(v19, "convertRect:toView:", v29, v22, v24, v26, v28);
      v87 = CGRectIntegral(v86);
      v13 = v87.origin.x;
      v14 = v87.origin.y;
      v16 = v87.size.width;
      v15 = v87.size.height;

    }
    v88.origin.x = v13;
    v88.origin.y = v14;
    v88.size.width = v16;
    v88.size.height = v15;
    if (CGRectIsEmpty(v88))
    {
      v30 = *(void **)(a1 + 40);
      v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
      objc_msgSend(v30, "convertRect:toView:", v31, *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88));
      v90 = CGRectIntegral(v89);
      v13 = v90.origin.x;
      v14 = v90.origin.y;
      v16 = v90.size.width;
      v15 = v90.size.height;

    }
    v32 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    objc_msgSend(v32, "bounds");
    v99.origin.x = v33;
    v99.origin.y = v34;
    v99.size.width = v35;
    v99.size.height = v36;
    v91.origin.x = v13;
    v91.origin.y = v14;
    v91.size.width = v16;
    v91.size.height = v15;
    v37 = CGRectIntersectsRect(v91, v99);

    if (v37)
    {
      v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
      objc_msgSend(v38, "bounds");
      v100.origin.x = v39;
      v100.origin.y = v40;
      v100.size.width = v41;
      v100.size.height = v42;
      v92.origin.x = v13;
      v92.origin.y = v14;
      v92.size.width = v16;
      v92.size.height = v15;
      v93 = CGRectIntersection(v92, v100);
      v13 = v93.origin.x;
      v14 = v93.origin.y;
      v16 = v93.size.width;
      v15 = v93.size.height;

    }
  }
  v94.origin.x = v13;
  v94.origin.y = v14;
  v94.size.width = v16;
  v94.size.height = v15;
  if (CGRectIsNull(v94))
  {
    if (+[BKBookViewController useEnhancedEditMenu](BKBookViewController, "useEnhancedEditMenu")
      || (v43 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenuController sharedMenuController](UIMenuController, "sharedMenuController")), v44 = objc_msgSend(v43, "isMenuVisible"), v43, !v44))
    {
      objc_msgSend(*(id *)(a1 + 40), "bounds");
      v13 = CGRectGetMidX(v97) + -1.0;
      objc_msgSend(*(id *)(a1 + 40), "bounds");
      v14 = v12 + CGRectGetMidY(v98) + -1.0;
    }
    else
    {
      v45 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenuController sharedMenuController](UIMenuController, "sharedMenuController"));
      objc_msgSend(v45, "menuFrame");
      v47 = v46;
      v49 = v48;
      v51 = v50;
      v53 = v52;

      v95.origin.x = v47;
      v95.origin.y = v49;
      v95.size.width = v51;
      v95.size.height = v53;
      v13 = CGRectGetMidX(v95) + -2.0;
      v96.origin.x = v47;
      v96.origin.y = v49;
      v96.size.width = v51;
      v96.size.height = v53;
      v14 = CGRectGetMaxY(v96) + -2.0;
    }
    v15 = 1.0;
    v16 = 1.0;
  }
  *(_QWORD *)&v54 = objc_opt_class(*(_QWORD *)(a1 + 32)).n128_u64[0];
  v56 = v55;
  v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "book", v54));
  v58 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v56, "propertySourceFromBook:", v57));

  if (!objc_msgSend(*(id *)(a1 + 48), "count"))
  {
    v61 = objc_msgSend(objc_alloc((Class)AEAssetActivityItemProvider), "initWithPropertySource:", v58);
    goto LABEL_24;
  }
  if (!*(_BYTE *)(a1 + 96))
  {
    v62 = (char *)objc_msgSend(*(id *)(a1 + 48), "count");
    v63 = objc_alloc((Class)AEAssetActivityItemProvider);
    v59 = v63;
    if (v62 == (_BYTE *)&dword_0 + 1)
    {
      v60 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "objectAtIndexedSubscript:", 0));
      goto LABEL_22;
    }
    v61 = objc_msgSend(v63, "initWithAnnotations:propertySource:", *(_QWORD *)(a1 + 48), v58);
LABEL_24:
    v65 = v61;
    goto LABEL_25;
  }
  v59 = objc_alloc((Class)AEAssetActivityItemProvider);
  v60 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "lastObject"));
LABEL_22:
  v64 = (void *)v60;
  v65 = objc_msgSend(v59, "initWithAnnotation:propertySource:", v60, v58);

LABEL_25:
  objc_msgSend(v65, "setPaginationDataSource:", *(_QWORD *)(a1 + 32));
  *(_QWORD *)&v66 = objc_opt_class(*(_QWORD *)(a1 + 32)).n128_u64[0];
  v68 = v67;
  v69 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "book", v66));
  objc_msgSend(v65, "setCitationsAllowed:", objc_msgSend(v68, "areCitationsAllowedForBook:", v69));

  v70 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObject:](NSArray, "arrayWithObject:", v65));
  v71 = objc_alloc((Class)IMActivityController);
  v72 = objc_msgSend(v65, "shareType");
  v73 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "ba_effectiveAnalyticsTracker"));
  v74 = objc_msgSend(v71, "initWithActivityItems:applicationActivities:shareType:propertySource:tracker:", v70, 0, v72, v58, v73);

  v75 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "book"));
  objc_msgSend(v74, "setManagedBook:", objc_msgSend(v75, "isManagedBook"));

  v76 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v74, "viewController"));
  v81[0] = _NSConcreteStackBlock;
  v81[1] = 3221225472;
  v81[2] = sub_57FEC;
  v81[3] = &unk_1BFF68;
  v81[4] = *(_QWORD *)(a1 + 32);
  v83 = v3;
  v82 = *(id *)(a1 + 56);
  objc_msgSend(v74, "setCompletionHandler:", v81);
  objc_msgSend(v76, "setModalPresentationStyle:", 7);
  objc_msgSend(v76, "setOverrideUserInterfaceStyle:", objc_msgSend(*(id *)(a1 + 32), "overrideUserInterfaceStyle"));
  v77 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v76, "popoverPresentationController"));
  v78 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v77, "setSourceView:", v78);

  objc_msgSend(v77, "setSourceRect:", v13, v14, v16, v15);
  objc_msgSend(v77, "setPermittedArrowDirections:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40));
  objc_msgSend(v77, "setDelegate:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v77, "bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:", *(_QWORD *)(a1 + 32));
  objc_msgSend(v77, "setCanOverlapSourceViewRect:", 1);
  objc_msgSend(*(id *)(a1 + 32), "setActivityViewController:", v76);
  v79 = *(void **)(a1 + 32);
  v80 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksKeyColor](UIColor, "bc_booksKeyColor"));
  objc_msgSend(v79, "bc_presentViewController:animated:tintColor:completion:", v76, 1, v80, 0);

}

void sub_57FEC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  v6 = a2;
  objc_msgSend(*(id *)(a1 + 32), "setStatusBarHidden:animated:", *(_BYTE *)(a1 + 48) == 0, 1);
  v5 = *(_QWORD *)(a1 + 40);
  if (v5)
    (*(void (**)(uint64_t, id, uint64_t))(v5 + 16))(v5, v6, a3);

}

void sub_5832C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_58348(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id *WeakRetained;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "view"));
    objc_msgSend(v10, "convertRect:toView:", v11, a2, a3, a4, a5);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;

    v20 = WeakRetained[43];
    if (!v20)
    {
      v21 = objc_msgSend(objc_alloc((Class)AEHighlightColorEditorController), "initWithNibName:bundle:", 0, 0);
      v22 = WeakRetained[43];
      WeakRetained[43] = v21;

      objc_msgSend(WeakRetained[43], "setDelegate:");
      v20 = WeakRetained[43];
    }
    objc_msgSend(v20, "setAnnotationTheme:", *(_QWORD *)(a1 + 40));
    objc_msgSend(WeakRetained[43], "setPageTheme:", *(_QWORD *)(a1 + 64));
    objc_msgSend(WeakRetained[43], "setAnnotation:", *(_QWORD *)(a1 + 48));
    objc_msgSend(WeakRetained, "addChildViewController:", WeakRetained[43]);
    v23 = WeakRetained[43];
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "view"));
    objc_msgSend(v23, "presentFromRect:view:", v24, v13, v15, v17, v19);

  }
}

uint64_t sub_584B4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_58648(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void *v10;
  uint64_t v11;
  id v12;

  v10 = *(void **)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "view"));
  objc_msgSend(v10, "shareAnnotation:fromRect:inView:completion:", v11, v12, *(_QWORD *)(a1 + 56), a2, a3, a4, a5);

}

void sub_5ACBC(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetViewControllerDelegate"));
  objc_msgSend(v2, "assetViewController:requestClose:error:", *(_QWORD *)(a1 + 32), 1, *(_QWORD *)(a1 + 40));

}

void sub_5AF08(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetViewControllerDelegate"));
  objc_msgSend(v2, "assetViewController:requestClose:error:", *(_QWORD *)(a1 + 32), 1, *(_QWORD *)(a1 + 40));

}

id sub_5B294(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_reportResourceUnavailableForBookWithTitle:error:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void sub_5B5BC(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  void *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  _QWORD *v20;
  void *v21;
  id v22;
  CGRect v23;

  if (CGRectIsNull(*(CGRect *)&a2))
    BCReportAssertionFailureWithMessage("/Library/Caches/com.apple.xbs/Sources/Alder/ios/AEBookPlugins/Shared/Controllers/BKBookViewController.m", 7026, "-[BKBookViewController showNoteEditorForAnnotation:]_block_invoke", "!CGRectIsNull(rect)", CFSTR("Failed to get rect for annotation."));
  v23.origin.x = a2;
  v23.origin.y = a3;
  v23.size.width = a4;
  v23.size.height = a5;
  if (!CGRectIsNull(v23))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
    objc_msgSend(v10, "convertRect:toView:", v11, a2, a3, a4, a5);
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v19 = v18;

    v20 = *(_QWORD **)(a1 + 40);
    v21 = (void *)v20[42];
    v22 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "view"));
    objc_msgSend(v21, "presentFromRect:view:", v22, v13, v15, v17, v19);

  }
}

id *sub_5BE30(id *result, uint64_t a2, int a3)
{
  if (a3)
    return (id *)objc_msgSend(result[4], "clearSelectedAnnotation");
  return result;
}

id sub_5C72C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showTOC:", *(_QWORD *)(a1 + 32));
}

void sub_5C738(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v8 = (id)objc_claimAutoreleasedReturnValue(+[BKExpandedContentResource resourceForURL:](BKExpandedContentResource, "resourceForURL:", *(_QWORD *)(a1 + 32)));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "book"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "cacheItem"));
  objc_msgSend(v8, "setCacheItem:", v3);

  if (BEDoesURLPointToUSDZFile(*(_QWORD *)(a1 + 32)))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "absoluteURL"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "standardizedURL"));
    v6 = BEURLHandlerAssetInfoPathForBookURL();
    v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
    objc_msgSend(v8, "setSourceURL:", v7);

  }
  objc_msgSend(*(id *)(a1 + 40), "showExpandedContentForResource:atLocation:completion:", v8, 0, 0);

}

id sub_5C9D4(uint64_t a1, uint64_t a2)
{
  return _objc_msgSend(*(id *)(a1 + 32), "buildHoverControlRegionWithBuilder:", a2);
}

void sub_5CE94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_5CEB0(uint64_t a1, int a2)
{
  id WeakRetained;
  uint64_t v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v5 = WeakRetained;
  if (a2)
    v4 = 1;
  else
    v4 = 2;
  objc_msgSend(WeakRetained, "setDoNotDisturbStatusAtStart:", v4);

}

void sub_5D13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_5D184(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_5D194(uint64_t a1)
{

}

void sub_5D19C(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  __int128 v5;
  id v6;
  int8x16_t v7;
  _QWORD v8[4];
  int8x16_t v9;
  id v10;
  id v11;
  __int128 v12;

  v3 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_5D260;
  v8[3] = &unk_1C0198;
  v7 = *(int8x16_t *)(a1 + 32);
  v4 = (id)v7.i64[0];
  v5 = *(_OWORD *)(a1 + 56);
  v9 = vextq_s8(v7, v7, 8uLL);
  v12 = v5;
  v10 = *(id *)(a1 + 48);
  v11 = v3;
  v6 = v3;
  objc_msgSend(v4, "performAfterPrivateDataFetchedWithCompletionHandler:", v8);

}

void sub_5D260(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  _QWORD block[5];
  id v6;
  id v7;
  id v8;
  id v9;
  __int128 v10;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "upSellData"));
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_5D32C;
  block[3] = &unk_1C0170;
  v3 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v6 = v3;
  v10 = *(_OWORD *)(a1 + 64);
  v7 = *(id *)(a1 + 48);
  v8 = v2;
  v9 = *(id *)(a1 + 56);
  v4 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

void sub_5D32C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  _QWORD v9[6];

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readingSessionDataForSearchViewController:", 0));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "analyticsReadingSettingsData"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_contentSettingsDataFromReadingSessionData:optedIn:", v2, objc_msgSend(*(id *)(a1 + 40), "optedIn")));
  v5 = *(_QWORD *)(a1 + 72);
  if (*(_QWORD *)(*(_QWORD *)(v5 + 8) + 40))
  {
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_5D470;
    v9[3] = &unk_1C0148;
    v9[4] = *(_QWORD *)(a1 + 80);
    v9[5] = v5;
    v6 = objc_retainBlock(v9);
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[BAEventReporter sharedReporter](BAEventReporter, "sharedReporter"));
    objc_msgSend(v7, "emitReadEventWithTracker:readingSessionData:contentData:readingSettingsData:upSellData:contentSettingsData:doNotDisturbData:startTime:completion:", *(_QWORD *)(a1 + 40), v2, *(_QWORD *)(a1 + 48), v3, *(_QWORD *)(a1 + 56), v4, *(_QWORD *)(a1 + 64), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40), v6);

  }
  else
  {
    v8 = BCCurrentBookLog();
    v6 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
      sub_11C96C(v6);
  }

}

void sub_5D470(uint64_t a1)
{
  _QWORD v1[4];
  __int128 v2;

  v1[0] = _NSConcreteStackBlock;
  v1[1] = 3221225472;
  v1[2] = sub_5D4CC;
  v1[3] = &unk_1C0148;
  v2 = *(_OWORD *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v1);
}

void sub_5D4CC(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "invalidate");
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = 0;

}

void sub_5D6B8(uint64_t a1, int a2)
{
  uint64_t v3;
  id v4;

  if (a2)
    v3 = 1;
  else
    v3 = 2;
  v4 = objc_msgSend(objc_alloc((Class)BADoNotDisturbData), "initWithStartStatus:endStatus:", *(_QWORD *)(a1 + 40), v3);
  (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

}

void sub_5F1B8(uint64_t a1, CGFloat x, CGFloat y, CGFloat width, CGFloat height)
{
  void *v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  void (**v15)(double, double, double, double);
  void (**v16)(double, double, double, double);
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  v17.origin.x = CGRectZero.origin.x;
  v17.origin.y = CGRectZero.origin.y;
  v17.size.width = CGRectZero.size.width;
  v17.size.height = CGRectZero.size.height;
  v20.origin.x = x;
  v20.origin.y = y;
  v20.size.width = width;
  v20.size.height = height;
  if (!CGRectEqualToRect(v17, v20))
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    objc_msgSend(v10, "bounds");
    v21.origin.x = v11;
    v21.origin.y = v12;
    v21.size.width = v13;
    v21.size.height = v14;
    v18.origin.x = x;
    v18.origin.y = y;
    v18.size.width = width;
    v18.size.height = height;
    v19 = CGRectIntersection(v18, v21);
    x = v19.origin.x;
    y = v19.origin.y;
    width = v19.size.width;
    height = v19.size.height;

  }
  v15 = (void (**)(double, double, double, double))objc_retainBlock(*(id *)(a1 + 40));
  if (v15)
  {
    v16 = v15;
    v15[2](x, y, width, height);
    v15 = v16;
  }

}

void sub_5F330(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void (**v9)(double, double, double, double);
  void (**v10)(double, double, double, double);

  v9 = (void (**)(double, double, double, double))objc_retainBlock(*(id *)(a1 + 32));
  if (v9)
  {
    v10 = v9;
    v9[2](a2, a3, a4, a5);
    v9 = v10;
  }

}

void sub_5F488(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void (**v9)(double, double, double, double);
  void (**v10)(double, double, double, double);

  v9 = (void (**)(double, double, double, double))objc_retainBlock(*(id *)(a1 + 32));
  if (v9)
  {
    v10 = v9;
    v9[2](a2, a3, a4, a5);
    v9 = v10;
  }

}

void sub_5F4EC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void (**v9)(double, double, double, double);
  void (**v10)(double, double, double, double);

  v9 = (void (**)(double, double, double, double))objc_retainBlock(*(id *)(a1 + 32));
  if (v9)
  {
    v10 = v9;
    v9[2](a2, a3, a4, a5);
    v9 = v10;
  }

}

id sub_5FDF8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_5FED8(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_5FEE4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

id sub_600D4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_601B4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

id sub_601C0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "removeFromSuperview");
}

void sub_607B4(id a1, IMConfigurationAdder *a2)
{
  IMConfigurationAdder *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate phoneSizeClassPredicate](IMConfigurationPredicate, "phoneSizeClassPredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v3, &stru_1C0228);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate tallPhoneSizeClassPredicate](IMConfigurationPredicate, "tallPhoneSizeClassPredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v4, &stru_1C0248);

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate largePhoneSizeClassPredicate](IMConfigurationPredicate, "largePhoneSizeClassPredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v5, &stru_1C0268);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate superPhoneLandscapeExactSizePredicate](IMConfigurationPredicate, "superPhoneLandscapeExactSizePredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v6, &stru_1C0288);

  v7 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate megaPhoneSizeClassPredicate](IMConfigurationPredicate, "megaPhoneSizeClassPredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v7, &stru_1C02A8);

  v8 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate superMegaPhonePortraitExactSizePredicate](IMConfigurationPredicate, "superMegaPhonePortraitExactSizePredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v8, &stru_1C02C8);

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate iPadSizeClassPredicate](IMConfigurationPredicate, "iPadSizeClassPredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v9, &stru_1C02E8);

  v10 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate iPad10SizeClassPredicate](IMConfigurationPredicate, "iPad10SizeClassPredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v10, &stru_1C0308);

  v11 = (void *)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate iPadOtherSizeClassPredicate](IMConfigurationPredicate, "iPadOtherSizeClassPredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v11, &stru_1C0328);

  v12 = (id)objc_claimAutoreleasedReturnValue(+[IMConfigurationPredicate megaPadSizeClassPredicate](IMConfigurationPredicate, "megaPadSizeClassPredicate"));
  -[IMConfigurationAdder addWithPredicate:adder:](v2, "addWithPredicate:adder:", v12, &stru_1C0348);

}

void sub_60980(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 0.5);
}

void sub_60994(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 0.45);
}

void sub_609AC(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 0.4);
}

void sub_609C4(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 0.4);
}

void sub_609DC(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 0.35);
}

void sub_609F4(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 0.35);
}

void sub_60A0C(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 0.3);
}

void sub_60A24(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 0.3);
}

void sub_60A3C(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 0.3);
}

void sub_60A54(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 0.25);
}

void sub_60AB8(id a1, IMConfigurationAdder *a2)
{
  -[IMConfigurationAdder addFloat:forKey:](a2, "addFloat:forKey:", CFSTR("heightAllowanceScalar"), 1.0);
}

id AEBundle()
{
  if (qword_20F538 != -1)
    dispatch_once(&qword_20F538, &stru_1C0388);
  return (id)qword_20F530;
}

void sub_60B3C(id a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  *(_QWORD *)&v1 = objc_opt_class(AEBundleLookupClass).n128_u64[0];
  v3 = objc_claimAutoreleasedReturnValue(+[NSBundle bundleForClass:](NSBundle, "bundleForClass:", v2, v1));
  v4 = (void *)qword_20F530;
  qword_20F530 = v3;

}

id sub_6206C(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setPageOffset:", *(_QWORD *)(a1 + 40) - 1);
}

id sub_62078(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 161) = 0;
  objc_msgSend(*(id *)(a1 + 32), "_updatePageViewScrollStates");
  objc_msgSend(*(id *)(a1 + 40), "postEvent:sender:", kBETestDriverPageTurnAnimationEnd, *(_QWORD *)(a1 + 32));
  return objc_msgSend(*(id *)(a1 + 40), "postEvent:sender:", kBETestDriverPageTurnEnd, *(_QWORD *)(a1 + 32));
}

void sub_62610(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_62634(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 162) = 0;
  v1 = *(void **)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v1, "_visibleAreaChangedInScrollView:", WeakRetained);

}

id sub_62C28(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)(a1 + 32) + 162) = 0;
  return objc_msgSend(*(id *)(a1 + 32), "_visibleAreaChangedInScrollView:", *(_QWORD *)(a1 + 40));
}

void sub_64144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_64170(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  void *v4;
  id *v5;
  id v6;
  void (**WeakRetained)(_QWORD);

  if (!a2)
  {
    v5 = (id *)(a1 + 32);
    v6 = a3;
    WeakRetained = (void (**)(_QWORD))objc_loadWeakRetained(v5);
    objc_msgSend(WeakRetained, "_postLoadComplete:", v6);

    goto LABEL_5;
  }
  v3 = a3;
  WeakRetained = (void (**)(_QWORD))objc_retainBlock(v3);

  v4 = WeakRetained;
  if (WeakRetained)
  {
    WeakRetained[2](WeakRetained);
LABEL_5:
    v4 = WeakRetained;
  }

}

void sub_64464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_64488(id a1, BEEvaluateJavaScriptContext *a2)
{
  BEEvaluateJavaScriptContext *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[BEContentLayoutInfo textContentScript](BEContentLayoutInfo, "textContentScript"));
  -[BEEvaluateJavaScriptContext addScriptToEvaluate:key:transform:](v2, "addScriptToEvaluate:key:transform:", v3, CFSTR("textContent"), 0);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[BEContentLayoutInfo textDirectionScript](BEContentLayoutInfo, "textDirectionScript"));
  -[BEEvaluateJavaScriptContext addScriptToEvaluate:key:transform:](v2, "addScriptToEvaluate:key:transform:", v4, CFSTR("textDirection"), 0);

  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BEContentLayoutInfo writingModeScript](BEContentLayoutInfo, "writingModeScript"));
  -[BEEvaluateJavaScriptContext addScriptToEvaluate:key:transform:](v2, "addScriptToEvaluate:key:transform:", v5, CFSTR("writingMode"), 0);

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[BEContentLayoutInfo scrollingElementSizeScript](BEContentLayoutInfo, "scrollingElementSizeScript"));
  -[BEEvaluateJavaScriptContext addScriptToEvaluate:key:transform:](v2, "addScriptToEvaluate:key:transform:", v6, CFSTR("scrollingElementSize"), &stru_1C05E8);

  v7 = (id)objc_claimAutoreleasedReturnValue(+[BEContentSupportJS performAfterLoad](BEContentSupportJS, "performAfterLoad"));
  -[BEEvaluateJavaScriptContext addScriptToEvaluate:key:transform:](v2, "addScriptToEvaluate:key:transform:", v7, CFSTR("performAfterLoad"), 0);

}

void sub_645A8(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  NSObject *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  int v22;
  id v23;
  __int16 v24;
  void *v25;
  __int16 v26;
  void *v27;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "stringResultForKey:", CFSTR("textContent")));
  objc_msgSend(WeakRetained, "setTextContent:", v6);

  objc_msgSend(WeakRetained, "setTextDirectionDetermined:", 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "stringResultForKey:", CFSTR("textDirection")));
  objc_msgSend(WeakRetained, "setPageTextDirectionIsRTL:", objc_msgSend(v7, "isEqualToString:", CFSTR("textDirectionRTL")));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "stringResultForKey:", CFSTR("writingMode")));
  objc_msgSend(WeakRetained, "setIsVerticalDocument:", objc_msgSend(v8, "hasPrefix:", CFSTR("vertical-")));
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "valueResultForKey:", CFSTR("scrollingElementSize")));

  if (v9)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "webView"));
    objc_msgSend(v10, "setBe_estimatedContentSizeValue:", v9);

  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "webView"));
  v12 = objc_msgSend(v11, "_paginationMode");

  if (v12)
  {
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "webView"));
    v14 = objc_msgSend(v13, "_pageCount");

    if ((unint64_t)v14 <= 1)
      v15 = &dword_0 + 1;
    else
      v15 = v14;
  }
  else
  {
    v15 = objc_msgSend(WeakRetained, "_scrollPageCountFromCurrentPageSize");
  }
  if (objc_msgSend(WeakRetained, "pageCount") != v15)
  {
    v16 = _AEWKLoaderLog();
    v17 = objc_claimAutoreleasedReturnValue(v16);
    if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", objc_msgSend(WeakRetained, "pageCount")));
      v19 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", v15));
      v22 = 138412802;
      v23 = WeakRetained;
      v24 = 2112;
      v25 = v18;
      v26 = 2112;
      v27 = v19;
      _os_log_impl(&dword_0, v17, OS_LOG_TYPE_DEFAULT, "Loader %@ finished executing JS - previously captured page count has been updated from %@ to %@", (uint8_t *)&v22, 0x20u);

    }
    objc_msgSend(WeakRetained, "setPageCount:", v15);
  }
  v20 = objc_retainBlock(*(id *)(a1 + 32));
  v21 = v20;
  if (v20)
    (*((void (**)(id))v20 + 2))(v20);

}

void sub_64B38(uint64_t a1)
{
  id v2;
  NSObject *v3;
  id v4;
  uint64_t v5;
  int v6;
  id v7;
  __int16 v8;
  uint64_t v9;

  objc_msgSend(*(id *)(a1 + 32), "setPageCount:", objc_msgSend(*(id *)(a1 + 40), "_pageCount"));
  v2 = _AEWKLoaderLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "ordinal");
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 80);
    v6 = 134218240;
    v7 = v4;
    v8 = 2048;
    v9 = v5;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "Loader updatePaginationOptions for ordinal %lu captured pageCount:%lu", (uint8_t *)&v6, 0x16u);
  }

}

void sub_6524C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_65278(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  void *v8;
  id v9;
  NSObject *v10;
  id v11;
  int v12;
  id v13;
  __int16 v14;
  id v15;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v8 = WeakRetained;
  if (WeakRetained)
  {
    if (v5)
    {
      objc_msgSend(WeakRetained, "setTocIdCssRules:", v5);
    }
    else
    {
      v9 = _AEWKLoaderLog();
      v10 = objc_claimAutoreleasedReturnValue(v9);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        v11 = objc_msgSend(*(id *)(a1 + 32), "ordinal");
        v12 = 134218242;
        v13 = v11;
        v14 = 2112;
        v15 = v6;
        _os_log_impl(&dword_0, v10, OS_LOG_TYPE_ERROR, "No result parseTOCIdCssRules. Ordinal: %lu Error: %@", (uint8_t *)&v12, 0x16u);
      }

    }
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void sub_65828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_6584C(_QWORD *a1, void *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  int v11;
  void *v12;
  __int16 v13;
  void *v14;
  __int16 v15;
  uint64_t v16;

  v3 = a1[4];
  v4 = a2;
  objc_msgSend(v4, "addScriptToEvaluate:key:transform:", v3, CFSTR("contentInfoUpdate"), 0);
  objc_msgSend(v4, "addScriptToEvaluate:key:transform:", a1[5], CFSTR("cfiUpdateSource"), 0);
  objc_msgSend(v4, "addScriptToEvaluate:key:transform:", a1[6], CFSTR("cleanupUpdateSource"), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[BEContentSupportJS performAfterLoad](BEContentSupportJS, "performAfterLoad"));
  objc_msgSend(v4, "addScriptToEvaluate:key:transform:", v5, CFSTR("performAfterLoad"), 0);

  v6 = _AEWKLoaderLog();
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    v8 = (void *)a1[7];
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "webView"));
    v10 = a1[8];
    v11 = 138412802;
    v12 = v8;
    v13 = 2112;
    v14 = v9;
    v15 = 2112;
    v16 = v10;
    _os_log_impl(&dword_0, v7, OS_LOG_TYPE_INFO, "loader: %@ webview: %@ processing request: %@ adding scripts to context", (uint8_t *)&v11, 0x20u);

  }
}

void sub_659A8(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint8_t buf[4];
  void *v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  uint64_t v18;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = _AEWKLoaderLog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    v7 = *(void **)(a1 + 32);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "webView"));
    v9 = *(_QWORD *)(a1 + 40);
    *(_DWORD *)buf = 138412802;
    v14 = v7;
    v15 = 2112;
    v16 = v8;
    v17 = 2112;
    v18 = v9;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_INFO, "loader: %@ webview: %@ processing request: %@ completed initial evaluation.  Generating pagination data.", buf, 0x20u);

  }
  objc_initWeak((id *)buf, WeakRetained);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_65B44;
  v10[3] = &unk_1BF560;
  objc_copyWeak(&v12, (id *)buf);
  v11 = *(id *)(a1 + 40);
  objc_msgSend(WeakRetained, "generatePaginationDataCompletion:", v10);

  objc_destroyWeak(&v12);
  objc_destroyWeak((id *)buf);

}

void sub_65B20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_65B44(uint64_t a1)
{
  void (**v2)(_QWORD, _QWORD, _QWORD);
  uint64_t v3;
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setState:", 6);
  v2 = (void (**)(_QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "completion"));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "pendingInfoRequest"));
  ((void (**)(_QWORD, uint64_t, BOOL))v2)[2](v2, v3, v4 == 0);

  objc_msgSend(WeakRetained, "setCurrentInfoRequest:", 0);
  objc_msgSend(WeakRetained, "_sendNextInfoRequest");

}

void sub_65D8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_65DB0(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v6 = WeakRetained;
  if (WeakRetained)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "currentInfoRequest"));
    objc_msgSend(v3, "setState:", 5);

  }
  v4 = objc_retainBlock(*(id *)(a1 + 32));
  v5 = v4;
  if (v4)
    (*((void (**)(id))v4 + 2))(v4);

}

void sub_66018(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_66044(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BEContentLayoutInfo anchorFramesScript](BEContentLayoutInfo, "anchorFramesScript"));
    objc_msgSend(v8, "addScriptToEvaluate:key:transform:", v4, CFSTR("anchorFrames"), &stru_1C0628);

    v5 = (void *)objc_claimAutoreleasedReturnValue(+[BEContentLayoutInfo mediaFramesScript](BEContentLayoutInfo, "mediaFramesScript"));
    objc_msgSend(v8, "addScriptToEvaluate:key:transform:", v5, CFSTR("mediaFrames"), &stru_1C0628);

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BEContentLayoutInfo scrollingElementSizeScript](BEContentLayoutInfo, "scrollingElementSizeScript"));
    objc_msgSend(v8, "addScriptToEvaluate:key:transform:", v6, CFSTR("scrollingElementSize"), &stru_1C05E8);

    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    if ((objc_opt_respondsToSelector(v7, "addScriptsToLoader:context:") & 1) != 0)
      objc_msgSend(v7, "addScriptsToLoader:context:", WeakRetained, v8);

  }
}

void sub_66158(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;

  v15 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "dictionaryResultForKey:", CFSTR("mediaFrames")));
    objc_msgSend(WeakRetained, "setMediaFrames:", v4);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "dictionaryResultForKey:", CFSTR("anchorFrames")));
    objc_msgSend(WeakRetained, "setAnchorFrames:", v5);

    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "valueResultForKey:", CFSTR("scrollingElementSize")));
    v7 = v6;
    if (v6)
    {
      objc_msgSend(v6, "CGSizeValue");
      objc_msgSend(WeakRetained, "setContentSize:");
    }
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    if ((objc_opt_respondsToSelector(v8, "scriptsDidCompleteForLoader:context:") & 1) != 0)
      objc_msgSend(v8, "scriptsDidCompleteForLoader:context:", WeakRetained, v15);

  }
  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "anchorFrames"));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_pageOffsetsForFrames:", v9));
  objc_msgSend(WeakRetained, "setAnchorLocations:", v10);

  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "mediaFrames"));
  v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_pageOffsetsForFrames:", v11));
  objc_msgSend(WeakRetained, "setMediaLocations:", v12);

  v13 = objc_retainBlock(*(id *)(a1 + 32));
  v14 = v13;
  if (v13)
    (*((void (**)(id))v13 + 2))(v13);

}

void sub_663F4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_66420(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  id v6;

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BEContentLayoutInfo mediaFramesScript](BEContentLayoutInfo, "mediaFramesScript"));
    objc_msgSend(v6, "addScriptToEvaluate:key:transform:", v4, CFSTR("mediaFrames"), &stru_1C0628);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    if ((objc_opt_respondsToSelector(v5, "addScriptsToLoader:context:") & 1) != 0)
      objc_msgSend(v5, "addScriptsToLoader:context:", WeakRetained, v6);

  }
}

void sub_664CC(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;

  v10 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "dictionaryResultForKey:", CFSTR("mediaFrames")));
    objc_msgSend(WeakRetained, "setMediaFrames:", v4);

    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
    if ((objc_opt_respondsToSelector(v5, "scriptsDidCompleteForLoader:context:") & 1) != 0)
      objc_msgSend(v5, "scriptsDidCompleteForLoader:context:", WeakRetained, v10);

  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "mediaFrames"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "_pageOffsetsForFrames:", v6));
  objc_msgSend(WeakRetained, "setMediaLocations:", v7);

  v8 = objc_retainBlock(*(id *)(a1 + 32));
  v9 = v8;
  if (v8)
    (*((void (**)(id))v8 + 2))(v8);

}

void sub_66A58(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  void (**v10)(void);
  void (**v11)(void);
  void (*v12)(void);
  id v13;
  NSObject *v14;
  id v15;
  void (**v16)(void);
  int v17;
  id v18;
  __int16 v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;

  v3 = a2;
  if (objc_msgSend(v3, "count"))
  {
    v4 = objc_msgSend(*(id *)(a1 + 32), "pageOffsetRangeForRect:", BKUnionRects(v3));
    v6 = v5;
    v7 = _AEWKLoaderLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = *(_QWORD *)(a1 + 40);
      v17 = 134218498;
      v18 = v4;
      v19 = 2048;
      v20 = v6;
      v21 = 2112;
      v22 = v9;
      _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "Determined pageOffset %lu length: %lu for cfi location %@", (uint8_t *)&v17, 0x20u);
    }

    v10 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
    v11 = v10;
    if (v10)
    {
      v12 = v10[2];
LABEL_10:
      v12();
    }
  }
  else
  {
    v13 = _AEWKLoaderLog();
    v14 = objc_claimAutoreleasedReturnValue(v13);
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      v15 = objc_msgSend(*(id *)(a1 + 32), "ordinal");
      v17 = 134217984;
      v18 = v15;
      _os_log_impl(&dword_0, v14, OS_LOG_TYPE_ERROR, "pageOffsetRangeForLocation unable to determine client rects for ordinal:%lu", (uint8_t *)&v17, 0xCu);
    }

    v16 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
    v11 = v16;
    if (v16)
    {
      v12 = v16[2];
      goto LABEL_10;
    }
  }

}

void sub_66BF4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  NSObject *v7;
  uint64_t v8;
  void (**v9)(void);
  void (**v10)(void);
  void (*v11)(void);
  id v12;
  NSObject *v13;
  void *v14;
  id v15;
  void (**v16)(void);
  int v17;
  id v18;
  __int16 v19;
  id v20;
  __int16 v21;
  uint64_t v22;

  if (a2)
  {
    objc_msgSend(a2, "CGRectValue");
    v3 = objc_msgSend(*(id *)(a1 + 32), "pageOffsetRangeForRect:");
    v5 = v4;
    v6 = _AEWKLoaderLog();
    v7 = objc_claimAutoreleasedReturnValue(v6);
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v8 = *(_QWORD *)(a1 + 40);
      v17 = 134218498;
      v18 = v3;
      v19 = 2048;
      v20 = v5;
      v21 = 2112;
      v22 = v8;
      _os_log_impl(&dword_0, v7, OS_LOG_TYPE_DEFAULT, "Determined pageOffset %lu length: %lu for epub location %@", (uint8_t *)&v17, 0x20u);
    }

    v9 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
    v10 = v9;
    if (v9)
    {
      v11 = v9[2];
LABEL_10:
      v11();
    }
  }
  else
  {
    v12 = _AEWKLoaderLog();
    v13 = objc_claimAutoreleasedReturnValue(v12);
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      v14 = *(void **)(a1 + 40);
      v15 = objc_msgSend(*(id *)(a1 + 32), "ordinal");
      v17 = 138412546;
      v18 = v14;
      v19 = 2048;
      v20 = v15;
      _os_log_impl(&dword_0, v13, OS_LOG_TYPE_ERROR, "failed to get location for %@ for ordinal:%lu", (uint8_t *)&v17, 0x16u);
    }

    v16 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
    v10 = v16;
    if (v16)
    {
      v11 = v16[2];
      goto LABEL_10;
    }
  }

}

void sub_67184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
  id *v33;

  objc_destroyWeak(v33);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_671B0(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *i;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id obj;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained(a1 + 6);
  if (WeakRetained)
  {
    v8 = objc_alloc_init((Class)NSMutableDictionary);
    if (v5)
    {
      v28 = WeakRetained;
      v29 = v6;
      objc_opt_class(NSDictionary);
      v30 = v5;
      v10 = BUDynamicCast(v9, v5);
      v11 = (void *)objc_claimAutoreleasedReturnValue(v10);
      v32 = 0u;
      v33 = 0u;
      v34 = 0u;
      v35 = 0u;
      obj = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "allKeys"));
      v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
      if (v12)
      {
        v13 = v12;
        v14 = *(_QWORD *)v33;
        do
        {
          for (i = 0; i != v13; i = (char *)i + 1)
          {
            if (*(_QWORD *)v33 != v14)
              objc_enumerationMutation(obj);
            v16 = *(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * (_QWORD)i);
            *(_QWORD *)&v17 = objc_opt_class(NSArray).n128_u64[0];
            v19 = v18;
            v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "objectForKeyedSubscript:", v16, v17));
            v21 = BUDynamicCast(v19, v20);
            v22 = (void *)objc_claimAutoreleasedReturnValue(v21);

            v23 = (void *)objc_claimAutoreleasedReturnValue(+[BEJavascriptUtilities collapsedLineRectsFromArrayOfRectDictionaries:isVerticalDocument:](BEJavascriptUtilities, "collapsedLineRectsFromArrayOfRectDictionaries:isVerticalDocument:", v22, objc_msgSend(a1[4], "isVerticalDocument")));
            objc_msgSend(v8, "setObject:forKeyedSubscript:", v23, v16);

          }
          v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
        }
        while (v13);
      }

      v6 = v29;
      v5 = v30;
      WeakRetained = v28;
    }
    v24 = objc_retainBlock(a1[5]);
    v25 = v24;
    if (v24)
      (*((void (**)(id, id, id))v24 + 2))(v24, v8, v6);

  }
  else
  {
    v26 = objc_retainBlock(a1[5]);
    v27 = v26;
    if (v26)
      (*((void (**)(id, _QWORD, id))v26 + 2))(v26, 0, v6);

  }
}

void sub_674EC(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void (**v6)(id, void *, id);
  void *v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = a3;
  v6 = (void (**)(id, void *, id))objc_retainBlock(*(id *)(a1 + 40));
  if (v6)
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "cfiString"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", v7));
    v6[2](v6, v8, v5);

  }
}

void sub_67814(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (**v25)(id, void *, _QWORD);
  void *v26;
  id v27;
  NSObject *v28;
  uint64_t v29;
  CGSize size;
  _QWORD v31[4];
  _OWORD v32[2];
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  id v36;

  v5 = a3;
  v6 = a2;
  objc_opt_class(NSDictionary);
  v8 = BUDynamicCast(v7, v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);

  if (!v5 && v9)
  {
    v10 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("_id")));
    *(_QWORD *)&v11 = objc_opt_class(NSArray).n128_u64[0];
    v13 = v12;
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "objectForKeyedSubscript:", CFSTR("rects"), v11));
    v15 = BUDynamicCast(v13, v14);
    v16 = (void *)objc_claimAutoreleasedReturnValue(v15);

    v17 = (void *)objc_claimAutoreleasedReturnValue(+[BEJavascriptUtilities collapsedLineRectsFromArrayOfRectDictionaries:isVerticalDocument:](BEJavascriptUtilities, "collapsedLineRectsFromArrayOfRectDictionaries:isVerticalDocument:", v16, objc_msgSend(*(id *)(a1 + 40), "isVerticalDocument")));
    v18 = BKUnionRects(v17);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v25 = (void (**)(id, void *, _QWORD))objc_retainBlock(*(id *)(a1 + 48));
    if (v25)
    {
      *(double *)v31 = v18;
      v31[1] = v20;
      v31[2] = v22;
      v31[3] = v24;
      v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithBytes:objCType:](NSValue, "valueWithBytes:objCType:", v31, "{CGRect={CGPoint=dd}{CGSize=dd}}"));
      v25[2](v25, v26, 0);

    }
    goto LABEL_10;
  }
  v27 = _AEAnnotationLocationLog();
  v28 = objc_claimAutoreleasedReturnValue(v27);
  if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
  {
    v29 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    v34 = v29;
    v35 = 2112;
    v36 = v5;
    _os_log_impl(&dword_0, v28, OS_LOG_TYPE_ERROR, "Failed to get rect information for location: %@ error: %@", buf, 0x16u);
  }

  v10 = objc_retainBlock(*(id *)(a1 + 48));
  if (v10)
  {
    size = CGRectZero.size;
    v32[0] = CGRectZero.origin;
    v32[1] = size;
    v16 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithBytes:objCType:](NSValue, "valueWithBytes:objCType:", v32, "{CGRect={CGPoint=dd}{CGSize=dd}}"));
    (*((void (**)(id, void *, id))v10 + 2))(v10, v16, v5);
LABEL_10:

  }
}

void sub_67F38(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  BKPageLocation *v7;

  v5 = *(void **)(a1 + 32);
  v6 = a2;
  objc_msgSend(a3, "CGRectValue");
  v7 = -[BKPageLocation initWithOrdinal:andOffset:]([BKPageLocation alloc], "initWithOrdinal:andOffset:", *(_QWORD *)(a1 + 48), objc_msgSend(v5, "_uncheckedPageOffsetRangeForRect:"));
  objc_msgSend(*(id *)(a1 + 40), "setObject:forKeyedSubscript:", v7, v6);

}

NSValue *__cdecl sub_69B28(id a1, NSObject *a2, NSError *a3)
{
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD v24[2];

  v3 = a2;
  objc_opt_class(NSDictionary);
  v5 = BUDynamicCast(v4, v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  if (v6)
  {
    *(_QWORD *)&v7 = objc_opt_class(NSNumber).n128_u64[0];
    v9 = v8;
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("width"), v7));
    v11 = BUDynamicCast(v9, v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

    *(_QWORD *)&v13 = objc_opt_class(NSNumber).n128_u64[0];
    v15 = v14;
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("height"), v13));
    v17 = BUDynamicCast(v15, v16);
    v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

    objc_msgSend(v12, "doubleValue");
    v20 = v19;
    objc_msgSend(v18, "doubleValue");
    v24[0] = v20;
    v24[1] = v21;
    v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSValue valueWithBytes:objCType:](NSValue, "valueWithBytes:objCType:", v24, "{CGSize=dd}"));

  }
  else
  {
    v22 = 0;
  }

  return (NSValue *)v22;
}

NSDictionary *__cdecl sub_69C60(id a1, NSObject *a2, NSError *a3)
{
  NSObject *v4;
  NSError *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  NSObject *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *i;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v23;
  NSObject *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint8_t v29[128];
  uint8_t buf[4];
  NSObject *v31;
  __int16 v32;
  NSError *v33;

  v4 = a2;
  v5 = a3;
  objc_opt_class(NSDictionary);
  v7 = BUDynamicCast(v6, v4);
  v8 = objc_claimAutoreleasedReturnValue(v7);
  v9 = (void *)v8;
  if (v5 || !v8)
  {
    v10 = _AEWKLoaderLog();
    v11 = objc_claimAutoreleasedReturnValue(v10);
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412546;
      v31 = v4;
      v32 = 2112;
      v33 = v5;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_ERROR, "Failed to get keyed rects from '%@' - %@", buf, 0x16u);
    }

  }
  v24 = v4;
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[BEJavascriptUtilities keyedRectsFromKeyedDOMRects:](BEJavascriptUtilities, "keyedRectsFromKeyedDOMRects:", v9, v5));
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", objc_msgSend(v12, "count")));
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "allKeys"));
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)v26;
    do
    {
      for (i = 0; i != v16; i = (char *)i + 1)
      {
        if (*(_QWORD *)v26 != v17)
          objc_enumerationMutation(v14);
        v19 = *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i);
        v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "objectForKeyedSubscript:", v19));
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "firstObject"));
        objc_msgSend(v13, "setObject:forKeyedSubscript:", v21, v19);

      }
      v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    }
    while (v16);
  }

  return (NSDictionary *)v13;
}

id sub_6A1D8(uint64_t a1)
{
  void *v2;
  __int128 v3;
  _OWORD v5[3];

  v2 = *(void **)(a1 + 32);
  v3 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v5[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v5[1] = v3;
  v5[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  UIRectGetCenter(objc_msgSend(v2, "setTransform:", v5), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  objc_msgSend(*(id *)(a1 + 32), "setCenter:");
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
}

id sub_6A240(uint64_t a1, int a2)
{
  void *v4;
  void *v5;
  uint64_t v6;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v4, "setUserInteractionEnabled:", 1);

  objc_msgSend(*(id *)(a1 + 40), "removeFromSuperview");
  v5 = *(void **)(a1 + 48);
  if (a2)
    v6 = objc_msgSend(v5, "transitionWasCancelled") ^ 1;
  else
    v6 = 0;
  return _objc_msgSend(v5, "completeTransition:", v6);
}

uint64_t sub_6B18C(uint64_t a1)
{
  id v2;
  void *v3;
  uint64_t result;

  v2 = objc_retainBlock(*(id *)(a1 + 48));
  v3 = v2;
  if (v2)
    (*((void (**)(id))v2 + 2))(v2);

  result = objc_opt_respondsToSelector(*(_QWORD *)(a1 + 32), "expandedContentViewDidDisappear:");
  if ((result & 1) != 0)
    return (uint64_t)_objc_msgSend(*(id *)(a1 + 32), "expandedContentViewDidDisappear:", *(_QWORD *)(a1 + 40));
  return result;
}

void sub_6B998(uint64_t a1)
{
  void *v2;
  void *v3;
  double v4;
  void *v5;
  id v6;

  v2 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 40))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor systemBlackColor](UIColor, "systemBlackColor"));
    objc_msgSend(v2, "setBackgroundColor:", v3);
    v4 = 0.0;
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "theme"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "backgroundColorForTraitEnvironment:", *(_QWORD *)(a1 + 32)));
    objc_msgSend(v2, "setBackgroundColor:", v5);

    v4 = 1.0;
  }

  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "toolbar"));
  objc_msgSend(v6, "setAlpha:", v4);

}

id sub_6BA54(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setNeedsStatusBarAppearanceUpdate");
}

void sub_6C150(void *a1)
{
  id v2;
  id v3;

  if (a1)
  {
    v3 = (id)objc_claimAutoreleasedReturnValue(+[UITraitCollection bc_allAPITraits](UITraitCollection, "bc_allAPITraits"));
    v2 = objc_msgSend(a1, "registerForTraitChanges:withAction:", v3, "_traitCollectionDidChange:previousTraitCollection:");

  }
}

void sub_6DB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_6DB70(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id WeakRetained;
  uint8_t v5[16];

  v2 = BCIMLog();
  v3 = objc_claimAutoreleasedReturnValue(v2);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_DEFAULT, "dismissCurrentPopoverWithCompletion: checking for more popover view controllers...", v5, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "dismissCurrentPopoverWithCompletion:animated:", *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 48));

}

void sub_6DE34(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  uint64_t v51;
  void *v52;
  void *v53;
  id v54;

  objc_msgSend(*(id *)(a1 + 32), "setForcePopoverInsteadOfSheet:", *(unsigned __int8 *)(a1 + 72));
  objc_msgSend(*(id *)(a1 + 40), "setModalPresentationStyle:", 7);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "popoverPresentationController"));
  v54 = v2;
  if (*(_QWORD *)(a1 + 48))
  {
    objc_msgSend(v2, "setBackgroundColor:");
  }
  else
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "theme"));
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "popoverBackgroundColor"));
    objc_msgSend(v54, "setBackgroundColor:", v4);

  }
  objc_msgSend(v54, "setPassthroughViews:", *(_QWORD *)(a1 + 56));
  objc_msgSend(v54, "_setIgnoreBarButtonItemSiblings:", 1);
  objc_msgSend(v54, "setDelegate:", *(_QWORD *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "barButtonItemForButton:", *(_QWORD *)(a1 + 64)));
  if (v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "_viewForPresenting"));
    objc_msgSend(v5, "_rectForPresenting");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;
    objc_msgSend(v7, "bounds");
    objc_msgSend(v7, "convertRect:toView:", v6);
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v23 = v22;
    objc_msgSend(v7, "convertRect:toView:", v6, v9, v11, v13, v15);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v32 = objc_msgSend(objc_alloc((Class)UIView), "initWithFrame:", v17, v19, v21, v23);
    v33 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
    objc_msgSend(v32, "setBackgroundColor:", v33);

    objc_msgSend(v32, "setUserInteractionEnabled:", 0);
    objc_msgSend(v6, "addSubview:", v32);
    objc_msgSend(v54, "_setCentersPopoverIfSourceViewNotSet:", 1);
    objc_msgSend(v54, "setBc_realSourceBarButtonItem:", v5);
    objc_msgSend(v54, "setBc_fakeSourceView:", v32);
    objc_msgSend(v54, "setSourceView:", v32);
    objc_msgSend(v6, "convertRect:toView:", v32, v25, v27, v29, v31);
    objc_msgSend(v54, "setSourceRect:");

    v34 = &dword_0 + 3;
  }
  else
  {
    objc_opt_class(BKToolbarButton);
    v36 = BUDynamicCast(v35, *(_QWORD *)(a1 + 64));
    v6 = (void *)objc_claimAutoreleasedReturnValue(v36);
    objc_opt_class(UIView);
    v38 = BUDynamicCast(v37, *(_QWORD *)(a1 + 64));
    v7 = (void *)objc_claimAutoreleasedReturnValue(v38);
    objc_msgSend(v7, "bounds");
    if (v6)
    {
      objc_msgSend(v6, "popoverPresentationRect");
      v44 = v43;
      v46 = v45;
      v48 = v47;
      v50 = v49;
      v34 = objc_msgSend(v6, "popoverArrowDirections");
    }
    else
    {
      v44 = v39;
      v46 = v40;
      v48 = v41;
      v50 = v42;
      v34 = &dword_C + 3;
    }
    objc_msgSend(v54, "_setCentersPopoverIfSourceViewNotSet:", 1);
    objc_msgSend(v54, "setSourceView:", v7);
    objc_msgSend(v54, "setSourceRect:", v44, v46, v48, v50);
  }

  objc_msgSend(v54, "setPermittedArrowDirections:", v34);
  objc_msgSend(v54, "bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:", *(_QWORD *)(a1 + 40));
  *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40) = v34;
  objc_msgSend(*(id *)(a1 + 32), "setCurrentOverlayViewController:", *(_QWORD *)(a1 + 40));
  v52 = *(void **)(a1 + 32);
  v51 = *(_QWORD *)(a1 + 40);
  v53 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor bc_booksKeyColor](UIColor, "bc_booksKeyColor"));
  objc_msgSend(v52, "bc_presentViewController:animated:tintColor:completion:", v51, 1, v53, 0);

}

void sub_6E198(uint64_t a1)
{
  id *v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = (id *)(a1 + 32);
  if ((objc_msgSend(*(id *)(a1 + 32), "isBeingPresented") & 1) != 0
    || objc_msgSend(*v2, "isBeingDismissed"))
  {
    v3 = BCIMLog();
    v4 = objc_claimAutoreleasedReturnValue(v3);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
      sub_11CAC4((uint64_t)v2, v4, v5, v6, v7, v8, v9, v10);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
}

void sub_6ED54(id a1)
{
  qword_20F540 = (uint64_t)NSClassFromString(CFSTR("WKSyntheticTapGestureRecognizer"));
}

id sub_70830(uint64_t a1)
{
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 320), "cleanupAfterRotation");
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 320), "layoutSubviews");
}

id sub_70960(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "animateRotationWithDuration:", *(double *)(a1 + 40));
}

id sub_70970(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "didRotate");
}

id sub_71DAC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", *(double *)(a1 + 40));
}

uint64_t sub_71DB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id *sub_71DC4(id *result)
{
  if (*((double *)result + 5) <= 0.0)
    return (id *)objc_msgSend(result[4], "removeFromSuperview");
  return result;
}

id BKTOCCVCLog()
{
  if (qword_20F558 != -1)
    dispatch_once(&qword_20F558, &stru_1C0760);
  return (id)qword_20F550;
}

void sub_723C0(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "BKTOCContentViewController");
  v2 = (void *)qword_20F550;
  qword_20F550 = (uint64_t)v1;

}

id sub_73818(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "recenteredIndexPath"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "recenteredIndexPath"));
    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 500) = 1;
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 460);
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend((id)v4, "recenteredIndexPath"));
    objc_msgSend(v5, "scrollToRowAtIndexPath:atScrollPosition:animated:", v6, 3, 0);

    *(_BYTE *)(*(_QWORD *)(a1 + 32) + 500) = 0;
    objc_msgSend(*(id *)(a1 + 32), "setRecenteredIndexPath:", v3);

  }
  return objc_msgSend(*(id *)(a1 + 32), "updateView");
}

id sub_738D0(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "showRowForCurrentLocation");
}

void sub_744A8(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (!objc_msgSend(WeakRetained, "cellLoadingOperationCount"))
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "activityIndicatorOverlayView"));
    objc_msgSend(v1, "hideIndicatorAnimated:animationDelay:", 1, 0.0);

  }
}

void sub_75D38(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_75D58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id WeakRetained;
  void *v6;
  void (**v7)(id, id);

  v7 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v6 = WeakRetained;
  if (WeakRetained)
    v7[2](v7, objc_msgSend(WeakRetained, "shareItemAtIndexPath:", *(_QWORD *)(a1 + 32)));

}

void sub_75EB4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_75ED4(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "deleteAnnotationAtIndexPath:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

id sub_771F0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "beginSelectionStartingWithIndexPath:", *(_QWORD *)(a1 + 40));
}

id sub_771FC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "shareItemAtIndexPath:", *(_QWORD *)(a1 + 40));
}

id sub_77208(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "deleteAnnotationAtIndexPath:", *(_QWORD *)(a1 + 40));
}

id sub_77214(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v7[2];
  uint64_t v8;

  v8 = *(_QWORD *)(a1 + 32);
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v8, 1));
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithTitle:image:identifier:options:children:](UIMenu, "menuWithTitle:image:identifier:options:children:", &stru_1C3088, 0, 0, 1, v2));

  v7[0] = *(_QWORD *)(a1 + 40);
  v7[1] = v3;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v7, 2));
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithChildren:](UIMenu, "menuWithChildren:", v4));

  return v5;
}

id sub_77310(_QWORD *a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[2];
  _QWORD v9[2];

  v2 = a1[5];
  v9[0] = a1[4];
  v9[1] = v2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v9, 2));
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithTitle:image:identifier:options:children:](UIMenu, "menuWithTitle:image:identifier:options:children:", &stru_1C3088, 0, 0, 1, v3));

  v8[0] = a1[6];
  v8[1] = v4;
  v5 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v8, 2));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIMenu menuWithChildren:](UIMenu, "menuWithChildren:", v5));

  return v6;
}

id sub_79314(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "shareFromToolbar");
}

id sub_7931C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "deleteFromToolbar");
}

void sub_79868(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void sub_7A02C(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  void *v4;
  BOOL v5;
  void *v6;
  float v7;
  float v8;
  id v9;
  NSObject *v10;
  NSObject *v11;
  float v12;
  double v13;
  id v14;
  id v15;
  NSObject *v16;
  id v17;
  dispatch_time_t v18;
  id v19;
  id v20;
  NSObject *v21;
  void *v22;
  void *v23;
  unsigned int v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void **v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  void *v33;
  id v34;
  char v35;
  uint8_t buf[4];
  double v37;
  __int16 v38;
  id v39;
  __int16 v40;
  uint64_t v41;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = WeakRetained;
  if (!WeakRetained)
    goto LABEL_24;
  objc_msgSend(WeakRetained, "postPaginationLoadedNotification");
  v35 = 0;
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bookDatabaseKey"));
  if (+[BKTextIndex doesBookIndexWithNameExist:isLoaded:](BKTextIndex, "doesBookIndexWithNameExist:isLoaded:", v4, &v35))
  {
    v5 = v35 == 0;
  }
  else
  {
    v5 = 1;
  }
  if (!v5)
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BKTextIndex bookIndexWithName:](BKTextIndex, "bookIndexWithName:", v4));
    objc_msgSend(v6, "save");
    +[BKTextIndex removeTextIndexWithName:](BKTextIndex, "removeTextIndexWithName:", v4);

  }
  objc_msgSend(v3, "progress");
  v8 = v7;
  v9 = _AEPaginationLog();
  v10 = objc_claimAutoreleasedReturnValue(v9);
  v11 = v10;
  if (v8 >= 1.0)
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      v19 = objc_msgSend(v3, "paginationRetryCount");
      *(_DWORD *)buf = 134217984;
      v37 = *(double *)&v19;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_DEFAULT, "Pagination completed successfully, Required %lu retries for pagination. Posting BKPaginationCompleteForBookNotification. #retryPagination", buf, 0xCu);
    }

  }
  else
  {
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v3, "progress");
      v13 = v12;
      v14 = objc_msgSend(v3, "paginationRetryCount");
      *(_DWORD *)buf = 134218496;
      v37 = v13;
      v38 = 2048;
      v39 = v14;
      v40 = 2048;
      v41 = 5;
      _os_log_impl(&dword_0, v11, OS_LOG_TYPE_ERROR, "Received paginationComplete.  Progress:%f - Used %lu/%lu retrys. #retryPagination", buf, 0x20u);
    }

    if ((uint64_t)objc_msgSend(v3, "paginationRetryCount") <= 4)
    {
      objc_msgSend(v3, "setPaginationRetryCount:", (char *)objc_msgSend(v3, "paginationRetryCount") + 1);
      v15 = _AEPaginationLog();
      v16 = objc_claimAutoreleasedReturnValue(v15);
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        v17 = objc_msgSend(v3, "paginationRetryCount");
        *(_DWORD *)buf = 134217984;
        v37 = *(double *)&v17;
        _os_log_impl(&dword_0, v16, OS_LOG_TYPE_INFO, "Will attempt to repaginate after %lu seconds.  #retryPagination", buf, 0xCu);
      }

      v18 = dispatch_time(0, 1000000000 * (_QWORD)objc_msgSend(v3, "paginationRetryCount"));
      v30 = _NSConcreteStackBlock;
      v31 = 3221225472;
      v32 = sub_7A414;
      v33 = &unk_1C0788;
      objc_copyWeak(&v34, v1);
      dispatch_after(v18, (dispatch_queue_t)&_dispatch_main_q, &v30);
      objc_destroyWeak(&v34);
      goto LABEL_21;
    }
    v20 = _AEPaginationLog();
    v21 = objc_claimAutoreleasedReturnValue(v20);
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_0, v21, OS_LOG_TYPE_ERROR, "Used all retries! We've totally failed to paginate content! #retryPagination", buf, 2u);
    }

  }
  objc_msgSend(v3, "setPaginationRetryCount:", 0);
  v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v22, "postNotificationName:object:", BKPaginationCompleteForBookNotification, v3);

LABEL_21:
  v23 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared", v30, v31, v32, v33));
  v24 = objc_msgSend(v23, "testingLayout");

  if (v24)
  {
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "book"));
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "style"));
    v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "configuration"));
    v28 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver getBookKeyWithBook:style:geometry:](AETestDriver, "getBookKeyWithBook:style:geometry:", v25, v26, v27));

    v29 = (void *)objc_claimAutoreleasedReturnValue(+[AETestDriver shared](AETestDriver, "shared"));
    objc_msgSend(v29, "paginationControllerFinishedBookPagination:", v28);

  }
LABEL_24:

}

void sub_7A414(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  NSObject *v3;
  void *v4;
  id v5;
  const char *v6;
  uint8_t *v7;
  id v8;
  __int16 v9;
  uint8_t buf[2];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (!WeakRetained)
  {
    v5 = _AEPaginationLog();
    v3 = objc_claimAutoreleasedReturnValue(v5);
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      goto LABEL_9;
    v9 = 0;
    v6 = "Skipping pagination retry as self released.";
    v7 = (uint8_t *)&v9;
LABEL_8:
    _os_log_impl(&dword_0, v3, OS_LOG_TYPE_INFO, v6, v7, 2u);
    goto LABEL_9;
  }
  if (!objc_msgSend(WeakRetained, "paginationRetryCount"))
  {
    v8 = _AEPaginationLog();
    v3 = objc_claimAutoreleasedReturnValue(v8);
    if (!os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
      goto LABEL_9;
    *(_WORD *)buf = 0;
    v6 = "Skipping pagination retry as key has changed. #retryPagination";
    v7 = buf;
    goto LABEL_8;
  }
  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "style"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "configuration"));
  objc_msgSend(v2, "repaginateWithStyle:geometry:", v3, v4);

LABEL_9:
}

void sub_7A9CC(_Unwind_Exception *exception_object, int a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  unsigned int v5;

  if (a2 == 1)
  {
    v3 = objc_begin_catch(exception_object);
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "name"));
    v5 = objc_msgSend(v4, "isEqualToString:", NSObjectInaccessibleException);

    if (v5)
    {
      *(_QWORD *)(v2 + 104) = 0x7FFFFFFFFFFFFFFFLL;

      objc_end_catch();
      JUMPOUT(0x7A9B0);
    }
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void sub_7B04C(_Unwind_Exception *exception_object, int a2)
{
  id v2;
  void *v3;
  unsigned int v4;

  if (a2 == 1)
  {
    v2 = objc_begin_catch(exception_object);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "name"));
    v4 = objc_msgSend(v3, "isEqualToString:", NSObjectInaccessibleException);

    if (v4)
    {

      objc_end_catch();
      JUMPOUT(0x7B02CLL);
    }
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void sub_7B3A0()
{
  objc_end_catch();
  JUMPOUT(0x7B3A8);
}

void sub_7B4CC()
{
  objc_end_catch();
  JUMPOUT(0x7B4D4);
}

void sub_7B630(_Unwind_Exception *exception_object, int a2)
{
  id v2;
  void *v3;

  if (a2 == 1)
  {
    v2 = objc_begin_catch(exception_object);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "name"));
    objc_msgSend(v3, "isEqualToString:", NSObjectInaccessibleException);

    objc_end_catch();
    JUMPOUT(0x7B5DCLL);
  }
  _Unwind_Resume(exception_object);
}

void sub_7B7B4(_Unwind_Exception *exception_object, int a2)
{
  id v2;
  void *v3;
  unsigned int v4;

  if (a2 == 1)
  {
    v2 = objc_begin_catch(exception_object);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "name"));
    v4 = objc_msgSend(v3, "isEqualToString:", NSObjectInaccessibleException);

    if (v4)
    {

      objc_end_catch();
      JUMPOUT(0x7B79CLL);
    }
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_7B828(uint64_t a1, void *a2)
{
  void *v3;
  _BOOL8 v4;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "pageNumber"));
  v4 = objc_msgSend(v3, "integerValue") == *(id *)(a1 + 32);

  return v4;
}

void sub_7BACC()
{
  objc_end_catch();
  JUMPOUT(0x7BAD4);
}

void sub_7BD64(_Unwind_Exception *exception_object, int a2)
{
  id v2;
  void *v3;
  unsigned int v4;

  if (a2 == 1)
  {
    v2 = objc_begin_catch(exception_object);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "name"));
    v4 = objc_msgSend(v3, "isEqualToString:", NSObjectInaccessibleException);

    if (v4)
    {

      objc_end_catch();
      JUMPOUT(0x7BD00);
    }
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_7BDD8(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;
  id v7;
  uint64_t v8;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "pageNumber"));
  v7 = objc_msgSend(v6, "integerValue");
  v8 = *(_QWORD *)(a1 + 32);

  if ((uint64_t)v7 <= v8)
    *a4 = 1;
  return (uint64_t)v7 <= v8;
}

id sub_7C788(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 40))
    objc_msgSend(*(id *)(a1 + 32), "setBookmarkPageCounts:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "updatePaginationCache:", 0);
}

void sub_7DE70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_7DE90(uint64_t a1)
{
  id WeakRetained;
  unsigned __int8 v3;
  void *v4;
  uint64_t v5;
  void *v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = objc_msgSend(WeakRetained, "isCancelled");

  if ((v3 & 1) == 0)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[IMThumbnailUtilities scaleImage:toSize:options:](IMThumbnailUtilities, "scaleImage:toSize:options:", *(_QWORD *)(a1 + 32), 0, *(double *)(a1 + 56), *(double *)(a1 + 64)));
    v5 = *(_QWORD *)(a1 + 40);
    if (v5)
    {
      v6 = v4;
      (*(void (**)(void))(v5 + 16))();
      v4 = v6;
    }

  }
}

id sub_7EAAC(id a1, id a2)
{
  return objc_msgSend(a2, "objectForKeyedSubscript:", CFSTR("fullHref"));
}

id sub_7EABC(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("fullHref")));
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v5, kBCReadingStatisticsHrefKey);
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("name")));

  objc_msgSend(v4, "setObject:forKeyedSubscript:", v6, kBCReadingStatisticsNameKey);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", v5));
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v7, kBCReadingStatisticsStartCFIKey);

  return v4;
}

void sub_7F300(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
  JUMPOUT(0x7F2E4);
}

void sub_7F5EC(id a1, id a2, NSError *a3)
{
  NSError *v3;
  uint64_t v4;
  NSObject *v5;
  int v6;
  NSError *v7;

  v3 = a3;
  if (v3)
  {
    v4 = _BookEPUBLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v3;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_ERROR, "Failed to swap image urls: %@", (uint8_t *)&v6, 0xCu);
    }

  }
}

void sub_7F89C(id a1, id a2, NSError *a3)
{
  NSError *v3;
  uint64_t v4;
  NSObject *v5;
  int v6;
  NSError *v7;

  v3 = a3;
  if (v3)
  {
    v4 = _BookEPUBLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v3;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_ERROR, "Failed to update Image Inversion: %@", (uint8_t *)&v6, 0xCu);
    }

  }
}

void sub_800E0(id a1, id a2, NSError *a3)
{
  NSError *v3;
  uint64_t v4;
  NSObject *v5;
  int v6;
  NSError *v7;

  v3 = a3;
  if (v3)
  {
    v4 = _BookEPUBLog();
    v5 = objc_claimAutoreleasedReturnValue(v4);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v3;
      _os_log_impl(&dword_0, v5, OS_LOG_TYPE_ERROR, "Failed to update viewport width: %@", (uint8_t *)&v6, 0xCu);
    }

  }
}

void sub_8023C(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id location;

  if ((_DWORD)a2)
  {
    objc_initWeak(&location, *(id *)(*(_QWORD *)(a1 + 32) + 256));
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BEContentBlockingRules sharedInstance](BEContentBlockingRules, "sharedInstance"));
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 256);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_8035C;
    v8[3] = &unk_1BF470;
    objc_copyWeak(&v9, &location);
    objc_msgSend(v4, "applyContentBlockingRule:toWebView:completion:", 2, v5, v8);

    objc_destroyWeak(&v9);
    objc_destroyWeak(&location);
  }
  v6 = objc_retainBlock(*(id *)(a1 + 40));
  v7 = v6;
  if (v6)
    (*((void (**)(id, uint64_t))v6 + 2))(v6, a2);

}

void sub_80338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_8035C(uint64_t a1, int a2)
{
  id v2;
  id WeakRetained;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    v2 = objc_msgSend(WeakRetained, "reload");

  }
}

void sub_80654(uint64_t a1)
{
  void *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "webView"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "title"));
  objc_msgSend(WeakRetained, "setPreviewTitle:", v2);

}

void sub_812AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_812CC(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "delegate"));
  objc_msgSend(v2, "reloadViewDidBeginReloading:", *(_QWORD *)(a1 + 32));

}

void sub_817F8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a2;
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "coverWritingModeString"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bookLanguage"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "pageProgressionDirection"));

  if (v6)
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v6, CFSTR("coverWritingMode"));
  if (v4)
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v4, CFSTR("language"));
  if (v5)
    objc_msgSend(*(id *)(a1 + 32), "setObject:forKey:", v5, CFSTR("pageProgressionDirection"));

}

void sub_819FC(id *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;

  v15 = a2;
  if (objc_msgSend(a1[4], "length"))
  {
    v3 = a1[4];
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "bookTitle"));
    LOBYTE(v3) = objc_msgSend(v3, "isEqualToString:", v4);

    if ((v3 & 1) == 0)
    {
      objc_msgSend(v15, "setBookTitle:", a1[4]);
      objc_msgSend(v15, "setSortTitle:", a1[4]);
    }
  }
  if (objc_msgSend(a1[5], "length"))
  {
    v5 = a1[5];
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "bookAuthor"));
    LOBYTE(v5) = objc_msgSend(v5, "isEqualToString:", v6);

    if ((v5 & 1) == 0)
    {
      objc_msgSend(v15, "setBookAuthor:", a1[5]);
      objc_msgSend(v15, "setSortAuthor:", a1[5]);
    }
  }
  if (objc_msgSend(a1[6], "length"))
  {
    v7 = a1[6];
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "genre"));
    LOBYTE(v7) = objc_msgSend(v7, "isEqualToString:", v8);

    if ((v7 & 1) == 0)
      objc_msgSend(v15, "setGenre:", a1[6]);
  }
  if (objc_msgSend(a1[7], "length"))
  {
    v9 = a1[7];
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "pageProgressionDirection"));
    LOBYTE(v9) = objc_msgSend(v9, "isEqualToString:", v10);

    if ((v9 & 1) == 0)
      objc_msgSend(v15, "setPageProgressionDirection:", a1[7]);
  }
  v11 = objc_msgSend(a1[8], "length");
  v12 = v15;
  if (v11)
  {
    v13 = a1[8];
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "bookLanguage"));
    LOBYTE(v13) = objc_msgSend(v13, "isEqualToString:", v14);

    v12 = v15;
    if ((v13 & 1) == 0)
    {
      objc_msgSend(v15, "setBookLanguage:", a1[8]);
      v12 = v15;
    }
  }

}

void sub_81DE8(uint64_t a1)
{
  void *v2;

  v2 = objc_autoreleasePoolPush();
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  objc_autoreleasePoolPop(v2);
}

uint64_t sub_81EAC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_82030(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_82050(void *a1)
{
  objc_begin_catch(a1);
  objc_end_catch();
  JUMPOUT(0x81FA4);
}

void sub_8205C(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x81FA8);
}

id sub_82068(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "hasChanges");
  if ((_DWORD)result)
    return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "save:", 0);
  return result;
}

uint64_t sub_823B8(uint64_t a1, CGPDFDictionaryRef dict)
{
  uint64_t result;
  CGPDFArrayRef value;

  value = 0;
  result = CGPDFDictionaryGetArray(dict, "Annots", &value);
  if ((_DWORD)result)
    return (uint64_t)objc_msgSend(*(id *)(a1 + 32), "_countMarkupAnnotationsInArray:result:", value, *(_QWORD *)(a1 + 40));
  return result;
}

void sub_824D4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "countMarkupAnnotations"));
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_82580;
  v6[3] = &unk_1BF0C0;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);

}

void sub_82580(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 32));
    v2 = v3;
  }

}

uint64_t sub_82704(uint64_t a1, int a2, CGPDFObjectRef object)
{
  CGPDFDictionary *value;

  value = 0;
  if (CGPDFObjectGetValue(object, kCGPDFObjectTypeDictionary, &value))
  {
    if (sub_82924(value, "Page"))
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    else
      CFArrayAppendValue(*(CFMutableArrayRef *)(a1 + 40), value);
  }
  return 1;
}

uint64_t sub_82810(uint64_t a1, int a2, CGPDFObjectRef object)
{
  CGPDFDictionary *v4;
  char *v5;
  CGPDFDictionaryRef dict;
  char *value;

  dict = 0;
  if (CGPDFObjectGetValue(object, kCGPDFObjectTypeDictionary, &dict))
  {
    v4 = dict;
    if (sub_82924(dict, "Annot"))
    {
      value = 0;
      if (CGPDFDictionaryGetName(v4, "Subtype", (const char **)&value))
      {
        v5 = value;
        if (!strcmp(value, "Highlight") || !strcmp(v5, "StrikeOut") || !strcmp(v5, "Underline"))
        {
          objc_msgSend(*(id *)(a1 + 32), "setNumberOfMarkupAnnotations:", (char *)objc_msgSend(*(id *)(a1 + 32), "numberOfMarkupAnnotations") + 1);
          value = 0;
          if (CGPDFDictionaryGetDictionary(dict, "Popup", (CGPDFDictionaryRef *)&value) && value)
            objc_msgSend(*(id *)(a1 + 32), "setNumberOfMarkupAnnotationsWithPopups:", (char *)objc_msgSend(*(id *)(a1 + 32), "numberOfMarkupAnnotationsWithPopups") + 1);
        }
      }
    }
  }
  return 1;
}

BOOL sub_82924(CGPDFDictionary *a1, const char *a2)
{
  _BOOL8 result;
  char *value;

  value = 0;
  result = CGPDFDictionaryGetName(a1, "Type", (const char **)&value);
  if (result)
    return strcmp(value, a2) == 0;
  return result;
}

void sub_834A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 160), 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_834E0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_834F0(uint64_t a1)
{

}

id sub_834F8(uint64_t a1, void *a2)
{
  id result;

  result = objc_msgSend(a2, "countEntity:withPredicate:", CFSTR("AEAnnotation"), *(_QWORD *)(a1 + 32));
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_83534(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;

  v13 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "batchJob"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lookupKey"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "batchJob"));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "bookDatabaseKey"));
  v7 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("(lookupKey ==[n] %@) AND (annotationUuid ==[n] %@)"), v4, v6));

  if (objc_msgSend(v13, "countEntity:withPredicate:", CFSTR("BKBookmarkPageCount"), v7) != *(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8)
                                                                                                  + 24))
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:](NSArray, "arrayWithObjects:", CFSTR("annotationUuid"), 0));
    v9 = objc_msgSend(v13, "copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:", v8, CFSTR("BKBookmarkPageCount"), v7, 0, 0);

    v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "valueForKey:", CFSTR("annotationUuid")));
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v12 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;

  }
}

void sub_83680(_QWORD *a1, void *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;

  v3 = *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 40);
  v4 = a2;
  v12 = (id)objc_claimAutoreleasedReturnValue(+[AEAnnotation predicateForAnnotationsIncludingDeletedWithUUIDInList:assetID:](AEAnnotation, "predicateForAnnotationsIncludingDeletedWithUUIDInList:assetID:", v3, 0));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "entity:withPredicate:", CFSTR("AEAnnotation"), v12));
  v6 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("NOT (self IN %@)"), v5));
  v7 = objc_msgSend(objc_alloc((Class)NSArray), "initWithObjects:", a1[4], v6, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue(+[NSCompoundPredicate andPredicateWithSubpredicates:](NSCompoundPredicate, "andPredicateWithSubpredicates:", v7));
  v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "entity:withPredicate:sortBy:ascending:fetchLimit:", CFSTR("AEAnnotation"), v8, 0, 0, 0));

  v10 = *(_QWORD *)(a1[6] + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v9;

}

void sub_84004(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  unsigned int v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  v3 = a2;
  if (objc_msgSend(v3, "hasChanges"))
    objc_msgSend(v3, "save:", 0);
  if (+[BCDevice isInternalInstall](BCDevice, "isInternalInstall"))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
    v5 = objc_msgSend(v4, "BOOLForKey:", CFSTR("BKPictureBookPaginationForceCrash"));

    if (v5)
      +[NSException raise:format:](NSException, "raise:format:", NSInvalidArgumentException, CFSTR("Forcing a crash during pagination!"));
  }
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookObjectID"));
  v10 = 0;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "existingObjectWithID:error:", v6, &v10));
  v8 = v10;

  if (v7)
  {
    v9 = objc_msgSend(*(id *)(a1 + 32), "copyDocumentArray:", v3);
    objc_msgSend(*(id *)(a1 + 32), "recordDocumentPageCountForDocumentInfos:context:", v9, v3);
    if (objc_msgSend(*(id *)(a1 + 32), "_needsFullReparseForRecordedChapterPageCountForDocumentInfos:context:", v9, v3))objc_msgSend(v7, "setIsDirty:", &__kCFBooleanTrue);
    objc_msgSend(*(id *)(a1 + 32), "recordAnnotationPageNumbers:", v3);
    if (objc_msgSend(v3, "hasChanges"))
      objc_msgSend(v3, "save:", 0);

  }
  else if (v8)
  {
    objc_msgSend(v8, "logRecursively");
  }

}

BOOL bk_CGRectsNearlyEqual(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  CGRect v17;

  if (CGRectIsEmpty(*(CGRect *)&a1))
  {
    v17.origin.x = a5;
    v17.origin.y = a6;
    v17.size.width = a7;
    v17.size.height = a8;
    if (CGRectIsEmpty(v17))
      return 1;
  }
  if (vabdd_f64(a1, a5) >= 5.0 || vabdd_f64(a2, a6) >= 5.0 || vabdd_f64(a3, a7) >= 5.0)
    return 0;
  return vabdd_f64(a4, a8) < 5.0;
}

void sub_84E98(uint64_t a1, void *a2, void *a3)
{
  id v5;
  void (**v6)(id, _QWORD, void *, id);
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = a3;
  v6 = (void (**)(id, _QWORD, void *, id))objc_retainBlock(*(id *)(a1 + 40));
  if (v6)
  {
    v7 = *(_QWORD *)(a1 + 32);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "allValues"));
    v6[2](v6, v7, v8, v5);

  }
}

void sub_8507C(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void (**v9)(id, void *, void *, id);
  void *v10;
  void *v11;
  id v12;

  v12 = a2;
  v7 = a3;
  v8 = a4;
  v9 = (void (**)(id, void *, void *, id))objc_retainBlock(*(id *)(a1 + 32));
  if (v9)
  {
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "firstObject"));
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "firstObject"));
    v9[2](v9, v10, v11, v8);

  }
}

id sub_85814(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_butActually_wk2_scrollToPage:paginationMode:pageProgressionDirection:configuration:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(unsigned int *)(a1 + 64), *(_QWORD *)(a1 + 40));
}

void sub_864C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_885E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_88608(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  id v5;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained, "_didFinishCreatingWebView:forTrackingID:completion:", v5, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 32));

}

void sub_88DA8(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v1 = objc_alloc(*(Class *)(a1 + 32));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[BKAudiobookPlayer sharedInstance](BKAudiobookPlayer, "sharedInstance"));
  v3 = objc_msgSend(v1, "initWithPlayer:", v2);
  v4 = (void *)qword_20F570;
  qword_20F570 = (uint64_t)v3;

  v5 = (id)objc_claimAutoreleasedReturnValue(+[BCBookReadingTimeTracker sharedInstance](BCBookReadingTimeTracker, "sharedInstance"));
  objc_msgSend((id)qword_20F570, "setBcTracker:", v5);

}

id sub_895AC(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeAllObjects");
}

id sub_8963C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeObjectForKey:", *(_QWORD *)(a1 + 40));
}

id sub_896CC(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "removeObjectsForKeys:", *(_QWORD *)(a1 + 40));
}

void sub_897E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_897F8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_89808(uint64_t a1)
{

}

void sub_89810(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[4];
  id v10;
  uint64_t v11;
  uint64_t v12;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[AEEpubInfoSource sharedInstance](AEEpubInfoSource, "sharedInstance"));
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_89948;
    v9[3] = &unk_1C0CC0;
    v6 = *(id *)(a1 + 40);
    v7 = *(_QWORD *)(a1 + 48);
    v8 = *(_QWORD *)(a1 + 32);
    v10 = v6;
    v11 = v8;
    v12 = v7;
    objc_msgSend(v5, "performBackgroundTaskAndWait:", v9);

  }
}

void sub_89948(_QWORD *a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a2;
  v3 = objc_autoreleasePoolPush();
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[AEEpubInfoSource sharedInstance](AEEpubInfoSource, "sharedInstance"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "existingBookInfoForDatabaseKey:fromManagedObjectContext:", a1[4], v9));

  if (v5)
  {
    v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "cacheItem"));
    v7 = *(_QWORD *)(a1[6] + 8);
    v8 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;

    objc_msgSend(*(id *)(a1[5] + 16), "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40), a1[4]);
  }

  objc_autoreleasePoolPop(v3);
}

void sub_89F4C(_Unwind_Exception *exception_object, int a2)
{
  void *v2;
  void *v3;

  if (a2)
  {
    objc_begin_catch(exception_object);
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "delegate"));
    objc_msgSend(v3, "searchWasCancelled:", v2);

    objc_end_catch();
    JUMPOUT(0x89EB0);
  }
  _Unwind_Resume(exception_object);
}

void sub_8BE54(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  id v5;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 152));
  objc_msgSend(WeakRetained, "searchViewController:didTransitionToSize:", *(_QWORD *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48));

  if (*(_BYTE *)(a1 + 56))
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "searchController"));
    objc_msgSend(v4, "beginSearchWithReportAnalytics:", 1);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_reloadResultsAndResizeIfNecessary:", objc_msgSend(v5, "isAnimated"));
  }
  objc_msgSend(*(id *)(a1 + 32), "_updateCancelButton");

}

void sub_8C53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_8C554(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_8C564(uint64_t a1)
{

}

BOOL sub_8C56C(uint64_t a1, void *a2, uint64_t a3, char *a4)
{
  id v7;
  void *v8;
  id v9;
  char v10;

  v7 = a2;
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "valueForKey:", CFSTR("name")));
  v9 = objc_msgSend(v8, "caseInsensitiveCompare:", *(_QWORD *)(a1 + 32));

  if (v9)
  {
    v10 = 0;
  }
  else
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    v10 = 1;
  }
  *a4 = v10;

  return v9 == 0;
}

id sub_8CB3C(uint64_t a1)
{
  id result;

  objc_msgSend(*(id *)(a1 + 32), "setResizeAnimationInProgress:", 0);
  result = objc_msgSend(*(id *)(a1 + 32), "resizeRequestPending");
  if ((_DWORD)result)
    return objc_msgSend(*(id *)(a1 + 32), "_updateContentSize:", 1);
  return result;
}

id sub_8D998(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = (void *)objc_opt_new(_UIBackgroundViewConfiguration);
  if (a2 == 2048)
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "secondaryBackgroundColor"));
  else
    v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "backgroundColor"));
  v6 = (void *)v5;
  objc_msgSend(v4, "setBackgroundColor:", v5);

  return v4;
}

id sub_93118(void *a1)
{
  id v1;
  id v2;
  id v3;
  Bytef *v4;
  id v5;
  uLong v6;
  uLong total_out;
  id v8;
  _QWORD *v9;
  z_stream v11;

  v1 = a1;
  v2 = objc_msgSend(v1, "length");
  if (v2)
  {
    v3 = v2;
    v4 = (Bytef *)malloc_type_malloc(0x400uLL, 0x858B5FCCuLL);
    memset(&v11.avail_in, 0, 104);
    v11.next_in = (Bytef *)objc_msgSend(objc_retainAutorelease(v1), "cStringUsingEncoding:", 4);
    v11.avail_in = v3;
    if (deflateInit_(&v11, 9, "1.2.12", 112))
    {
      v5 = 0;
    }
    else
    {
      v11.next_out = v4;
      v11.avail_out = 0;
      v6 = 1024;
      do
      {
        total_out = v11.total_out;
        if (v11.total_out >= v6)
        {
          v6 += 1024;
          v4 = (Bytef *)malloc_type_realloc(v4, v6, 0xEE5FF435uLL);
          total_out = v11.total_out;
        }
        v11.next_out = &v4[total_out];
        v11.avail_out = v6 - total_out;
        deflate(&v11, 4);
      }
      while (!v11.avail_out);
      v8 = objc_alloc((Class)NSMutableData);
      v5 = objc_retainAutorelease(objc_msgSend(v8, "initWithLength:", v11.total_out + 8));
      v9 = objc_msgSend(v5, "mutableBytes");
      *v9 = v3;
      memcpy(v9 + 1, v4, v11.total_out);
      deflateEnd(&v11);
    }
    free(v4);
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_9383C(id a1)
{
  AEPdfCache *v1;
  void *v2;

  v1 = objc_alloc_init(AEPdfCache);
  v2 = (void *)qword_20F590;
  qword_20F590 = (uint64_t)v1;

}

void sub_93A34(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlToDocumentCache"));
  objc_msgSend(v1, "removeAllObjects");

}

void sub_93BE4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlToStringCache"));
  v6 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "objectForKey:", *(_QWORD *)(a1 + 40)));

  v3 = v6;
  if (!v6)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlToStringCache"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "password"));
    objc_msgSend(v4, "setObject:forKey:", v5, *(_QWORD *)(a1 + 40));

    v3 = 0;
  }

}

void sub_93F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v8 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_93F40(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_93F50(uint64_t a1)
{

}

void sub_93F58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlToDocumentCache"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_93FB0(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlToDocumentCache"));
  objc_msgSend(v2, "setObject:forKey:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(_QWORD *)(a1 + 40));

}

void sub_93FF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlToStringCache"));
  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectForKey:", *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void sub_94274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_9428C(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlToDocumentCache"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", *(_QWORD *)(a1 + 40)));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v2 != 0;

}

void sub_94388(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "urlToDocumentCache"));
  objc_msgSend(v2, "removeObjectForKey:", *(_QWORD *)(a1 + 40));

}

void sub_9457C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_94710(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9478C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_94808(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_94A3C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_968A8()
{
  void *v0;
  _Unwind_Exception *v1;

  objc_end_catch();
  _Unwind_Resume(v1);
}

void sub_968C0()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  _Unwind_Exception *v6;

  _Unwind_Resume(v6);
}

void sub_96908()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_96914()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_96920()
{
  void *v0;
  void *v1;

  JUMPOUT(0x96B9CLL);
}

void sub_96928()
{
  JUMPOUT(0x96B98);
}

void sub_96930()
{
  JUMPOUT(0x96AF4);
}

void sub_96940()
{
  JUMPOUT(0x96B08);
}

void sub_96950()
{
  JUMPOUT(0x96B1CLL);
}

void sub_96960()
{
  JUMPOUT(0x96B30);
}

void sub_96970()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_9697C()
{
  int v0;
  void *v1;
  void *v2;
  _Unwind_Exception *v3;

  if ((v0 & 0x80000000) == 0)
  _Unwind_Resume(v3);
}

void sub_96998()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  _Unwind_Exception *v4;

  _Unwind_Resume(v4);
}

void sub_969C8()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_969D4()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_969E0()
{
  void *v0;
  void *v1;
  _Unwind_Exception *v2;

  _Unwind_Resume(v2);
}

void sub_969F8()
{
  JUMPOUT(0x96AE4);
}

void sub_96A00()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_96A0C()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_96A18()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_96A24()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_96A30()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_96A3C()
{
  JUMPOUT(0x96B44);
}

void sub_96A4C()
{
  JUMPOUT(0x96B58);
}

void sub_96A5C()
{
  JUMPOUT(0x96B6CLL);
}

void sub_96A6C()
{
  JUMPOUT(0x96B80);
}

void sub_96A7C()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_96A88()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_96A94()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  _Unwind_Exception *v5;

  _Unwind_Resume(v5);
}

void sub_96AD0()
{
  void *v0;
  _Unwind_Exception *v1;

  _Unwind_Resume(v1);
}

void sub_96B8C()
{
  void *v0;

  JUMPOUT(0x96B94);
}

void sub_96C1C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_96D24(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_974F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_97724(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_979FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_97C44(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_97DBC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_97E8C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_98634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, id a16, uint64_t a17, uint64_t a18, void *a19, void *a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,void *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,void *a32,void *a33)
{
  void *v33;
  void *v34;
  void *v35;

  _Unwind_Resume(a1);
}

void sub_98858(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _BYTE *i;
  double v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;

  v19 = a2;
  objc_opt_class(NSArray);
  v4 = BUDynamicCast(v3, v19);
  v5 = (void *)objc_claimAutoreleasedReturnValue(v4);
  if (objc_msgSend(v5, "count"))
  {
    for (i = 0; i < (char *)objc_msgSend(v5, "count") - 1; ++i)
    {
      *(_QWORD *)&v7 = objc_opt_class(NSString).n128_u64[0];
      v9 = v8;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "objectAtIndex:", i, v7));
      v11 = BUDynamicCast(v9, v10);
      v12 = (void *)objc_claimAutoreleasedReturnValue(v11);

      if (i == (char *)objc_msgSend(v5, "count") - 1)
      {

        break;
      }
      *(_QWORD *)&v13 = objc_opt_class(BKDocument).n128_u64[0];
      v15 = v14;
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKey:", v12, v13));
      v17 = BUDynamicCast(v15, v16);
      v18 = (void *)objc_claimAutoreleasedReturnValue(v17);

      objc_msgSend(v18, "setHasTocElements:", *(_QWORD *)(a1 + 40));
      objc_msgSend(v18, "setIsDuplicateSpineEntry:", *(_QWORD *)(a1 + 48));

    }
  }

}

void sub_98998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_98DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;

  _Unwind_Resume(a1);
}

void sub_98F54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_99030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_9910C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_991A4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_99258(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v5 = v4;

  _Unwind_Resume(a1);
}

void sub_99308(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_9948C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_99558(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_99934(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

void sub_9A03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_9A77C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_9AE18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;

  _Unwind_Resume(a1);
}

void sub_9AF5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_9B05C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v10;

  _Unwind_Resume(a1);
}

void sub_9B0E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_9B170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_9B214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_9B56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{

  _Unwind_Resume(a1);
}

void sub_9B728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_9B7B8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id sub_9C318(uint64_t a1)
{
  void *v2;
  void *v3;
  _QWORD *v4;
  void *v5;
  void *v6;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 512), "reloadData");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "recenteredIndexPath"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "recenteredIndexPath"));
    v4 = *(_QWORD **)(a1 + 32);
    v5 = (void *)v4[64];
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "recenteredIndexPath"));
    objc_msgSend(v5, "scrollToRowAtIndexPath:atScrollPosition:animated:", v6, 3, 0);

    objc_msgSend(*(id *)(a1 + 32), "setRecenteredIndexPath:", v3);
  }
  return objc_msgSend(*(id *)(a1 + 32), "updateView");
}

void sub_9D8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_9D8FC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_9D90C(uint64_t a1)
{

}

void sub_9D914(uint64_t a1)
{
  id WeakRetained;
  id v3;
  _QWORD v4[4];
  __int128 v5;

  WeakRetained = objc_loadWeakRetained((id *)(*(_QWORD *)(a1 + 32) + 80));
  v3 = objc_msgSend(*(id *)(a1 + 32), "pageNumber");
  objc_msgSend(*(id *)(a1 + 32), "snapshotSize");
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_9D9B4;
  v4[3] = &unk_1C0E70;
  v5 = *(_OWORD *)(a1 + 32);
  objc_msgSend(WeakRetained, "snapshotWithPageNumber:size:completion:", v3, v4);

}

void sub_9D9B4(uint64_t a1, void *a2)
{
  id v4;
  NSObject *dsema;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dsema = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "dispatchSemaphore"));

  dispatch_semaphore_signal(dsema);
}

void sub_9DA14(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 72);
  if (v1)
  {
    v3 = v1;
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 72);
    *(_QWORD *)(v4 + 72) = 0;

    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_9DAC4;
    v8[3] = &unk_1C0E98;
    v6 = *(_QWORD *)(a1 + 40);
    v9 = v3;
    v10 = v6;
    v7 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);

  }
}

void sub_9DAC4(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * (_QWORD)v6), "renderingCacheCallbackImage:context:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), 0, (_QWORD)v7);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

id sub_9DC54(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 72);
  if (!v2)
  {
    v3 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithCapacity:", 2);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 72);
    *(_QWORD *)(v4 + 72) = v3;

    v2 = *(void **)(*(_QWORD *)(a1 + 32) + 72);
  }
  return objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));
}

void sub_9E0B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_9E440(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_9E540(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_9E734(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

void sub_9E7F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_9E9D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_9EDC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_9EDF8(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  double v5;
  double v6;
  id v7;
  void *v8;
  double v9;
  id v10;
  void *v11;
  id *v12;
  void *v13;
  id v14;
  _QWORD block[4];
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "setImage:", v3);

  objc_msgSend(v3, "size");
  v6 = v5;
  v7 = objc_loadWeakRetained((id *)(a1 + 40));
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "imageResizerDelegate"));
  if (!v8)
  {

    goto LABEL_5;
  }
  v9 = vabdd_f64(*(double *)(a1 + 48), v6);

  if (v9 < 10.0)
  {
LABEL_5:
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_9F0A0;
    block[3] = &unk_1BF560;
    v12 = &v17;
    objc_copyWeak(&v17, (id *)(a1 + 32));
    v16 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    v10 = v16;
    goto LABEL_6;
  }
  v10 = objc_loadWeakRetained((id *)(a1 + 40));
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "imageResizerDelegate"));
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  v18[2] = sub_9EFC0;
  v18[3] = &unk_1C0EC0;
  v12 = &v19;
  objc_copyWeak(&v19, (id *)(a1 + 32));
  v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "resizeImage:toSize:callback:", v3, v18, *(double *)(a1 + 48), *(double *)(a1 + 56)));
  v14 = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v14, "set_resizeOperation:", v13);

LABEL_6:
  objc_destroyWeak(v12);

}

void sub_9EFAC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_9EFC0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_9F064;
  v5[3] = &unk_1BF560;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_9F064(uint64_t a1)
{
  uint64_t v1;
  id WeakRetained;

  v1 = *(_QWORD *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setImage:", v1);

}

void sub_9F0A0(uint64_t a1)
{
  uint64_t v1;
  id WeakRetained;

  v1 = *(_QWORD *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setImage:", v1);

}

id sub_9F648(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "view"));
  objc_msgSend(v2, "setAlpha:", 1.0);

  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 24), "setAlpha:", 0.0);
}

CGPath *CreateCGPathForTopMaskInRect(CGContext *a1, CGFloat a2, double a3, double a4, double a5)
{
  CGPath *Mutable;

  CGContextTranslateCTM(a1, a2, a3 + a5);
  CGContextScaleCTM(a1, a4 / 60.0, a5 / -11.0);
  Mutable = CGPathCreateMutable();
  CGPathMoveToPoint(Mutable, 0, 2.0, 0.0);
  CGPathAddCurveToPoint(Mutable, 0, 2.0, 0.0, 16.0, 2.0, 21.0, 4.0);
  CGPathAddCurveToPoint(Mutable, 0, 26.0, 6.0, 30.0, 11.0, 30.0, 11.0);
  CGPathAddCurveToPoint(Mutable, 0, 30.0, 11.0, 34.0, 6.0, 39.0, 4.0);
  CGPathAddCurveToPoint(Mutable, 0, 44.0, 2.0, 58.0, 0.0, 58.0, 0.0);
  CGPathAddLineToPoint(Mutable, 0, 2.0, 0.0);
  CGPathCloseSubpath(Mutable);
  return Mutable;
}

CGPath *CreateCGPathForBottomMaskInRect(CGContext *a1, CGFloat a2, double a3, double a4, double a5)
{
  CGPath *Mutable;

  CGContextTranslateCTM(a1, a2, a3 + a5);
  CGContextScaleCTM(a1, a4 / 60.0, a5 / -11.0);
  Mutable = CGPathCreateMutable();
  CGPathMoveToPoint(Mutable, 0, 1.0, 11.0);
  CGPathAddCurveToPoint(Mutable, 0, 1.0, 11.0, 10.0, 11.0, 18.0, 8.0);
  CGPathAddCurveToPoint(Mutable, 0, 26.0, 5.0, 30.0, 1.0, 30.0, 1.0);
  CGPathAddCurveToPoint(Mutable, 0, 30.0, 1.0, 34.0, 5.0, 42.0, 8.0);
  CGPathAddCurveToPoint(Mutable, 0, 50.0, 11.0, 59.0, 11.0, 59.0, 11.0);
  CGPathAddLineToPoint(Mutable, 0, 1.0, 11.0);
  CGPathCloseSubpath(Mutable);
  return Mutable;
}

void drawBottomInRect(CGContext *a1, CGFloat a2, double a3, double a4, double a5)
{
  CGPath *CGPathForBottomMaskInRect;

  CGContextSaveGState(a1);
  CGPathForBottomMaskInRect = CreateCGPathForBottomMaskInRect(a1, a2, a3, a4, a5);
  CGContextAddPath(a1, CGPathForBottomMaskInRect);
  CGPathRelease(CGPathForBottomMaskInRect);
  CGContextRestoreGState(a1);
}

void drawTopInRect(CGContext *a1, CGFloat a2, double a3, double a4, double a5)
{
  CGPath *CGPathForTopMaskInRect;

  CGContextSaveGState(a1);
  CGPathForTopMaskInRect = CreateCGPathForTopMaskInRect(a1, a2, a3, a4, a5);
  CGContextAddPath(a1, CGPathForTopMaskInRect);
  CGPathRelease(CGPathForTopMaskInRect);
  CGContextRestoreGState(a1);
}

BOOL writeImageAsPNGToPath(_BOOL8 a1, void *a2)
{
  return AE_CGImageWriteToPathWithScaleAsPNG(a1, a2, 1.0);
}

BOOL AE_CGImageWriteToPathWithScaleAsPNG(_BOOL8 a1, void *a2, double a3)
{
  id v5;
  void *v6;
  const __CFURL *v7;
  __CFString *v8;
  CGImageDestination *v9;
  id v10;
  void *v11;
  CFNumberRef v12;
  double v14;
  CFStringRef v15;
  _UNKNOWN **v16;

  v5 = a2;
  v6 = v5;
  if (a1)
  {
    if (objc_msgSend(v5, "length"))
    {
      v7 = (const __CFURL *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:isDirectory:](NSURL, "fileURLWithPath:isDirectory:", v6, 0));
      v8 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(UTTypePNG, "identifier"));
      v9 = CGImageDestinationCreateWithURL(v7, v8, 1uLL, 0);

      if (v9)
      {
        v10 = objc_alloc_init((Class)NSMutableDictionary);
        v15 = kCGImagePropertyPNGCompressionFilter;
        v16 = &off_1CD340;
        v11 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v16, &v15, 1));
        objc_msgSend(v10, "setObject:forKey:", v11, kCGImagePropertyPNGDictionary);
        objc_msgSend(v10, "setObject:forKey:", &off_1CD358, kCGImagePropertyPNGBandCount);
        if (a3 != 1.0)
        {
          v14 = a3 * 72.0;
          v12 = CFNumberCreate(0, kCFNumberDoubleType, &v14);
          objc_msgSend(v10, "setObject:forKey:", v12, kCGImagePropertyDPIWidth);
          objc_msgSend(v10, "setObject:forKey:", v12, kCGImagePropertyDPIHeight);
          CFRelease(v12);
        }
        CGImageDestinationAddImage(v9, (CGImageRef)a1, (CFDictionaryRef)v10);
        a1 = CGImageDestinationFinalize(v9);
        CFRelease(v9);

      }
      else
      {
        a1 = 0;
      }

    }
    else
    {
      a1 = 0;
    }
  }

  return a1;
}

CGImageRef CGImageAddAlphaAndAddBookMask(CGImage *a1, CGImage *a2, int a3, double a4)
{
  double Width;
  double Height;
  size_t v10;
  double v11;
  double v12;
  int IsWideGamut;
  int IsDeepColor;
  size_t v15;
  CGColorSpace *DeviceRGB;
  CGImageRef Image;
  CGColorSpace *v18;
  uint32_t v19;
  CGContext *v20;
  CGContext *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  double v27;
  double v28;
  CGRect v30;

  if (!a1)
    return 0;
  Width = (double)CGImageGetWidth(a1);
  Height = (double)CGImageGetHeight(a1);
  v10 = CGImageGetWidth(a2);
  v11 = a4 * 60.0;
  if (a3)
    v12 = a4 * 60.0 * -0.5;
  else
    v12 = Width + a4 * 60.0 * -0.5;
  IsWideGamut = CGImageIsWideGamut(a1);
  IsDeepColor = CGImageIsDeepColor(a1);
  if (IsDeepColor)
    v15 = 16;
  else
    v15 = 8;
  if (IsWideGamut)
    DeviceRGB = CGColorSpaceCreateWithName(kCGColorSpaceDisplayP3);
  else
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
  v18 = DeviceRGB;
  if (IsDeepColor)
    v19 = 4097;
  else
    v19 = 8193;
  v20 = CGBitmapContextCreate(0, (unint64_t)Width, (unint64_t)Height, v15, 0, DeviceRGB, v19);
  if (v20)
  {
    v21 = v20;
    v22 = a4 * 11.0;
    v23 = (double)v10 * a4;
    v24 = Height - a4 * 11.0;
    CGContextSaveGState(v20);
    v30.origin.x = 0.0;
    v30.origin.y = 0.0;
    v30.size.width = Width;
    v30.size.height = Height;
    CGContextDrawImage(v21, v30, a1);
    if (v23 != 0.0)
    {
      v25 = v23 * -0.5;
      if (!a3)
        v25 = Width + v23 * -0.5;
      v26 = 0;
      v27 = v23;
      v28 = Height;
      CGContextDrawImage(v21, *(CGRect *)&v25, a2);
    }
    drawBottomInRect(v21, v12, 0.0, v11, v22);
    drawTopInRect(v21, v12, v24, v11, v22);
    CGContextSetBlendMode(v21, kCGBlendModeClear);
    CGContextFillPath(v21);
    CGContextRestoreGState(v21);
    Image = CGBitmapContextCreateImage(v21);
    CGContextRelease(v21);
  }
  else
  {
    Image = 0;
  }
  CGColorSpaceRelease(v18);
  return Image;
}

void sub_A03DC(id a1)
{
  id v1;
  _BOOL8 v2;
  _QWORD block[4];
  Block_layout *v4;

  v1 = +[AEAudiobookReadingTimeTracker startTracking](AEAudiobookReadingTimeTracker, "startTracking");
  v2 = +[NSThread isMainThread](NSThread, "isMainThread");
  if (v2)
  {
    sub_A0474((id)v2);
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_A04F4;
    block[3] = &unk_1BEC70;
    v4 = &stru_1C0F30;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  }
}

void sub_A0474(id a1)
{
  void *v1;
  int v2;
  int v3;
  double v4;
  id v5;

  v5 = (id)objc_claimAutoreleasedReturnValue(+[BKAudiobookPlayer sharedInstance](BKAudiobookPlayer, "sharedInstance"));
  v1 = (void *)objc_claimAutoreleasedReturnValue(+[NSUserDefaults standardUserDefaults](NSUserDefaults, "standardUserDefaults"));
  objc_msgSend(v1, "floatForKey:", CFSTR("AEAudioBookNowPlayingViewControllerPlaybackRateUserDefaultsKey"));
  v3 = v2;

  LODWORD(v4) = v3;
  objc_msgSend(v5, "setPlaybackSpeed:", +[BKAudiobookPlayer playbackSpeedFrom:](BKAudiobookPlayer, "playbackSpeedFrom:", v4));

}

uint64_t sub_A04F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_A129C(id a1)
{
  uint64_t v1;
  void *v2;
  _QWORD v3[15];

  v3[0] = UIContentSizeCategoryExtraSmall;
  v3[1] = UIContentSizeCategorySmall;
  v3[2] = UIContentSizeCategoryMedium;
  v3[3] = UIContentSizeCategoryLarge;
  v3[4] = UIContentSizeCategoryExtraLarge;
  v3[5] = UIContentSizeCategoryExtraExtraLarge;
  v3[6] = UIContentSizeCategoryExtraExtraExtraLarge;
  v3[7] = UIContentSizeCategoryAccessibilityMedium;
  v3[8] = UIContentSizeCategoryAccessibilityLarge;
  v3[9] = UIContentSizeCategoryAccessibilityExtraLarge;
  v3[10] = UIContentSizeCategoryAccessibilityExtraExtraLarge;
  v3[11] = UIContentSizeCategoryAccessibilityExtraExtraExtraLarge;
  v3[12] = UIContentSizeCategoryExpandedFontSize1;
  v3[13] = UIContentSizeCategoryExpandedFontSize2;
  v3[14] = UIContentSizeCategoryExpandedFontSize3;
  v1 = objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", v3, 15));
  v2 = (void *)qword_20F5A0;
  qword_20F5A0 = v1;

}

void sub_A25A8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_A25C4(uint64_t a1)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  id WeakRetained;
  id v9;

  *(_QWORD *)&v2 = objc_opt_class(NSNumber).n128_u64[0];
  v4 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "objectForKeyedSubscript:", NSKeyValueChangeNewKey, v2));
  v6 = BUDynamicCast(v4, v5);
  v9 = (id)objc_claimAutoreleasedReturnValue(v6);

  if (-[__CFString isEqualToString:](BKAutoHyphenation[0], "isEqualToString:", *(_QWORD *)(a1 + 40)))
  {
    v7 = objc_msgSend(v9, "BOOLValue");
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    objc_msgSend(WeakRetained, "setAutoHyphenation:", v7);

  }
}

uint64_t sub_A2670(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_A34B8(id a1)
{
  AEMinimalTemplateSet *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_alloc_init(AEMinimalTemplateSet);
  v2 = (void *)qword_20F5B8;
  qword_20F5B8 = (uint64_t)v1;

  sub_A3544(v3, CFSTR("user_stylesheet_base.css"), CFSTR("base"));
  sub_A3544(v4, CFSTR("user_stylesheet_fonts.css"), CFSTR("fonts"));
  sub_A3544(v5, CFSTR("user_stylesheet_colors.css"), CFSTR("colors"));
  sub_A3544(v6, CFSTR("user_stylesheet_flowable.css"), CFSTR("flowable"));
  sub_A3544(v7, CFSTR("user_stylesheet_picturebook.css"), CFSTR("picturebook"));
}

void sub_A3544(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v4 = a3;
  v5 = a2;
  v6 = AEBundle();
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "pathForResource:ofType:", v5, CFSTR("tmpl")));

  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSURL fileURLWithPath:](NSURL, "fileURLWithPath:", v8));
  v12 = 0;
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[AEMinimalTemplate templateWithURL:error:](AEMinimalTemplate, "templateWithURL:error:", v9, &v12));
  v11 = v12;

  objc_msgSend((id)qword_20F5B8, "addTemplate:withName:", v10, v4);
}

void sub_A3B7C(id a1)
{
  _CachedFallbackInfo *v1;
  void *v2;

  v1 = objc_alloc_init(_CachedFallbackInfo);
  v2 = (void *)qword_20F5C8;
  qword_20F5C8 = (uint64_t)v1;

}

id sub_A3C44(void *a1, void *a2)
{
  __CFString *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  unsigned int v10;
  void *v11;
  unsigned int v12;
  id v13;
  uint64_t v14;
  void *v15;
  void *v16;
  const __CFDictionary *v17;
  const __CTFontDescriptor *v18;
  const __CTFontDescriptor *v19;
  const __CTFont *v20;
  id v21;
  void *v22;
  id v23;
  unint64_t v24;
  void *v25;
  const __CFArray *v26;
  CFIndex Count;
  void *v28;
  CFIndex i;
  const __CTFontDescriptor *ValueAtIndex;
  void *v31;
  const __CTFont *v33;
  void *v34;

  v3 = a1;
  v4 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(+[NSArray array](NSArray, "array"));
  if (-[__CFString length](v3, "length"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[BKStyleManager suffixForLanguage:](BKStyleManager, "suffixForLanguage:", v4));
    v7 = objc_msgSend(v6, "length");

    if (v7)
    {
      v8 = (void *)objc_claimAutoreleasedReturnValue(+[_CachedFallbackInfo cachedFallbackInfo](_CachedFallbackInfo, "cachedFallbackInfo"));
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "fontFamily"));
      v10 = objc_msgSend(v9, "isEqualToString:", v3);

      if (v10)
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "language"));
        v12 = objc_msgSend(v11, "isEqualToString:", v4);

        if (v12)
        {
          v13 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "fallbacks"));
LABEL_30:

          goto LABEL_31;
        }
        v20 = (const __CTFont *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "font"));
      }
      else
      {
        objc_msgSend(v8, "setFontFamily:", v3);
        v17 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObject:forKey:](NSDictionary, "dictionaryWithObject:forKey:", v3, kCTFontFamilyNameAttribute));
        v18 = CTFontDescriptorCreateWithAttributes(v17);
        if (!v18 || (v19 = v18, v20 = CTFontCreateWithFontDescriptor(v18, 0.0, 0), CFRelease(v19), !v20))
          v20 = CTFontCreateWithName(v3, 0.0, 0);
        objc_msgSend(v8, "setFont:", v20);

      }
      v21 = objc_msgSend(v4, "copy");
      objc_msgSend(v8, "setLanguage:", v21);

      v22 = (void *)objc_claimAutoreleasedReturnValue(+[NSLocale preferredLanguages](NSLocale, "preferredLanguages"));
      v23 = objc_msgSend(v22, "indexOfObject:", v4);
      if (v23)
      {
        v24 = (unint64_t)v23;
        if (v23 == (id)0x7FFFFFFFFFFFFFFFLL)
        {
          v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", (char *)objc_msgSend(v22, "count") + 1));
          objc_msgSend(v25, "addObject:", v4);
          objc_msgSend(v25, "addObjectsFromArray:", v22);
        }
        else
        {
          v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", objc_msgSend(v22, "count")));
          objc_msgSend(v25, "addObject:", v4);
          objc_msgSend(v25, "replaceObjectsInRange:withObjectsFromArray:range:", 1, 0, v22, 0, v24);
          objc_msgSend(v25, "replaceObjectsInRange:withObjectsFromArray:range:", objc_msgSend(v25, "count"), 0, v22, v24 + 1, (char *)objc_msgSend(v22, "count") + ~v24);
        }

        v22 = v25;
      }
      if (v20)
      {
        v33 = v20;
        v34 = v8;
        v26 = CTFontCopyDefaultCascadeListForLanguages(v20, (CFArrayRef)v22);
        Count = CFArrayGetCount(v26);
        v28 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", Count));
        if (Count >= 1)
        {
          for (i = 0; i != Count; ++i)
          {
            ValueAtIndex = (const __CTFontDescriptor *)CFArrayGetValueAtIndex(v26, i);
            v31 = (void *)CTFontDescriptorCopyAttribute(ValueAtIndex, kCTFontFamilyNameAttribute);
            if (v31)
              objc_msgSend(v28, "addObject:", v31);

          }
        }
        CFRelease(v26);
        v8 = v34;
        objc_msgSend(v34, "setFallbacks:", v28);

        v20 = v33;
      }
      else
      {
        v28 = v5;
      }
      v5 = v28;

      v13 = v5;
      goto LABEL_30;
    }
    v14 = objc_claimAutoreleasedReturnValue(objc_msgSend(&off_1CD4F0, "objectForKeyedSubscript:", v3));
    v15 = (void *)v14;
    if (v14)
      v16 = (void *)v14;
    else
      v16 = v5;
    v13 = v16;

  }
  else
  {
    v5 = v5;
    v13 = v5;
  }
LABEL_31:

  return v13;
}

BOOL sub_A4858(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _BOOL8 v6;
  id v8;
  unsigned int v9;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "length");
  if (v5 < objc_msgSend(v4, "length")
    || objc_msgSend(v3, "compare:options:range:", v4, 1, 0, objc_msgSend(v4, "length")))
  {
    v6 = 0;
  }
  else
  {
    v8 = objc_msgSend(v3, "length");
    if (v8 <= objc_msgSend(v4, "length"))
    {
      v6 = 1;
    }
    else
    {
      v9 = objc_msgSend(v3, "characterAtIndex:", objc_msgSend(v4, "length"));
      v6 = v9 == 45 || v9 == 95;
    }
  }

  return v6;
}

void sub_A4928(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSMutableDictionary *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *i;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];

  v5 = a2;
  v6 = a3;
  v7 = objc_opt_new(NSMutableDictionary);
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v8 = objc_msgSend(&off_1CD690, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v18;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v18 != v10)
          objc_enumerationMutation(&off_1CD690);
        v12 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * (_QWORD)i);
        v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", v12));

        if (v13)
        {
          v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "objectForKeyedSubscript:", v12));
          -[NSMutableDictionary setObject:forKeyedSubscript:](v7, "setObject:forKeyedSubscript:", v14, v12);

        }
      }
      v9 = objc_msgSend(&off_1CD690, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v9);
  }
  if (-[NSMutableDictionary count](v7, "count"))
  {
    v15 = *(void **)(a1 + 32);
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "imSanitizedFontFamilyName"));
    objc_msgSend(v15, "setObject:forKey:", v7, v16);

  }
}

void sub_A9BBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  char v6;

  v6 = 0;
  objc_opt_class(UIViewController);
  v3 = __IMAccessibilityCastAsClass(v2, *(_QWORD *)(a1 + 32), 1, &v6);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if (v6)
    abort();
  v5 = v4;
  objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);

}

void sub_AD2C0(id a1)
{
  id v1;
  void *v2;
  void *v3;
  AEMinimalTemplate *v4;
  id v5;
  void *v6;
  id v7;

  v1 = AEBundle();
  v2 = (void *)objc_claimAutoreleasedReturnValue(v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "URLForResource:withExtension:", CFSTR("toc_web_cell.html"), CFSTR("tmpl")));

  v7 = 0;
  v4 = -[AEMinimalTemplate initWithURL:error:]([AEMinimalTemplate alloc], "initWithURL:error:", v3, &v7);
  v5 = v7;
  v6 = (void *)qword_20F5D8;
  qword_20F5D8 = (uint64_t)v4;

}

id sub_AF560(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setZoomScale:animated:", 0, *(double *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

uint64_t sub_AF590(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_AF6C0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "zoomToRect:animated:", 0, *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

uint64_t sub_AF6F4(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id sub_AFB48(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  double v33;
  void *v34;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "image"));

  if (v2)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
    objc_msgSend(*(id *)(a1 + 32), "setBackgroundColor:", v3);

    v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pageLabel"));
    objc_msgSend(v5, "setTextColor:", v4);

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor whiteColor](UIColor, "whiteColor"));
    v7 = 14.0;
  }
  else
  {
    v8 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](UIColor, "colorWithWhite:alpha:", 1.0, 0.5));
    objc_msgSend(*(id *)(a1 + 32), "setBackgroundColor:", v8);

    v9 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor blackColor](UIColor, "blackColor"));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pageLabel"));
    objc_msgSend(v10, "setTextColor:", v9);

    v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
    v7 = 24.0;
  }
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pageLabel"));
  objc_msgSend(v11, "setBackgroundColor:", v6);

  objc_msgSend(*(id *)(a1 + 32), "bounds");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v20 = (v2 != 0) & ~objc_msgSend(*(id *)(a1 + 32), "showsPageNumber");
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pageLabel"));
  objc_msgSend(v21, "setHidden:", v20);

  v22 = *(_QWORD *)(a1 + 32);
  if (*(_QWORD *)(v22 + 24))
  {
    objc_msgSend(*(id *)(v22 + 40), "setText:");
    v23 = (void *)objc_claimAutoreleasedReturnValue(+[UIFont boldSystemFontOfSize:](UIFont, "boldSystemFontOfSize:", v7));
  }
  else
  {
    v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("%lu"), objc_msgSend((id)v22, "pageNumber")));
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "setText:", v24);

    v23 = (void *)objc_claimAutoreleasedReturnValue(+[UIFont monospacedDigitSystemFontOfSize:weight:](UIFont, "monospacedDigitSystemFontOfSize:weight:", v7, UIFontWeightBold));
  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "setFont:", v23);

  if (v2)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "sizeToFit");
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "bounds");
    v26 = v25;
    v28 = v27 + 8.0;
    v36.origin.x = v13;
    v36.origin.y = v15;
    v36.size.width = v17;
    v36.size.height = v19;
    v29 = CGRectGetMaxX(v36) - v28 + -5.0;
    v37.origin.x = v13;
    v37.origin.y = v15;
    v37.size.width = v17;
    v37.size.height = v19;
    v30 = CGRectGetMaxY(v37) - v26 + -5.0;
    v31 = v29;
    v32 = v28;
    v33 = v26;
  }
  else
  {
    v31 = v13;
    v30 = v15;
    v32 = v17;
    v33 = v19;
  }
  v38 = CGRectIntegral(*(CGRect *)&v31);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "setFrame:", v38.origin.x, v38.origin.y, v38.size.width, v38.size.height);
  v34 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 40), "layer"));
  objc_msgSend(v34, "setCornerRadius:", 0.0);

  v39.origin.x = v13;
  v39.origin.y = v15;
  v39.size.width = v17;
  v39.size.height = v19;
  v40 = CGRectIntegral(v39);
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 32), "setFrame:", v40.origin.x, v40.origin.y, v40.size.width, v40.size.height);
}

void sub_B0498(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  uint64_t v10;
  void *v11;
  unsigned __int8 v12;
  void *v13;
  unsigned __int8 v14;
  double v15;
  void *v16;
  double v17;
  double v18;
  CGFloat v19;
  id v20;
  CGRect v21;
  CGRect v22;

  objc_msgSend(*(id *)(a1 + 32), "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setHidden:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "pageNumber") == (id)0x7FFFFFFFFFFFFFFFLL);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setHidden:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "pageNumber") == (id)0x7FFFFFFFFFFFFFFFLL);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(void **)(v10 + 8);
  if (v11
    && (v12 = objc_msgSend(v11, "isHidden"), v10 = *(_QWORD *)(a1 + 32), (v12 & 1) == 0)
    && (v13 = *(void **)(v10 + 16)) != 0
    && (v14 = objc_msgSend(v13, "isHidden"), v10 = *(_QWORD *)(a1 + 32), (v14 & 1) == 0))
  {
    v15 = floor(v7 * 0.5);
    objc_msgSend(*(id *)(v10 + 8), "setFrame:", v3, v5, v15, v9);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setFrame:", v3 + v15, v5, v15, v9);
    v20 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "gutter"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "image"));
    objc_msgSend(v16, "size");
    v18 = v17;

    objc_msgSend(v20, "setHidden:", objc_msgSend(*(id *)(a1 + 32), "hidesSpine"));
    v21.origin.x = v3;
    v21.origin.y = v5;
    v21.size.width = v7;
    v21.size.height = v9;
    v19 = CGRectGetMidX(v21) - v18 * 0.5;
    v22.origin.x = v3;
    v22.origin.y = v5;
    v22.size.width = v7;
    v22.size.height = v9;
    objc_msgSend(v20, "setFrame:", v19, 0.0, v18, CGRectGetHeight(v22));

  }
  else
  {
    objc_msgSend(*(id *)(v10 + 48), "setHidden:", 1);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "setFrame:", v3, v5, v7, v9);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "setFrame:", v3, v5, v7, v9);
  }
}

void sub_B180C(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  float v12;
  double v13;
  id v14;

  objc_msgSend(*(id *)(a1 + 32), "contextualTopViewToCenter");
  v3 = v2;
  v5 = v4;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "topPagesView"));
  objc_msgSend(v6, "setCenter:", v3, v5);

  objc_msgSend(*(id *)(a1 + 32), "contextualBottomViewToCenter");
  v8 = v7;
  v10 = v9;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bottomPagesView"));
  objc_msgSend(v11, "setCenter:", v8, v10);

  if (objc_msgSend(*(id *)(a1 + 32), "isGoingToNextPage"))
    v12 = 0.0;
  else
    v12 = 0.3;
  v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "layer"));
  *(float *)&v13 = v12;
  objc_msgSend(v14, "setOpacity:", v13);

}

id sub_B18DC(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "setFinished:", 1);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 2);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pageAnimationDelegate"));
  objc_msgSend(v2, "pageAnimation:didFinish:", *(_QWORD *)(a1 + 32), 1);

  return objc_msgSend(*(id *)(a1 + 32), "_cleanup");
}

void sub_B19B8(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  float v12;
  double v13;
  id v14;

  objc_msgSend(*(id *)(a1 + 32), "contextualTopViewFromCenter");
  v3 = v2;
  v5 = v4;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "topPagesView"));
  objc_msgSend(v6, "setCenter:", v3, v5);

  objc_msgSend(*(id *)(a1 + 32), "contextualBottomViewFromCenter");
  v8 = v7;
  v10 = v9;
  v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bottomPagesView"));
  objc_msgSend(v11, "setCenter:", v8, v10);

  if (objc_msgSend(*(id *)(a1 + 32), "isGoingToNextPage"))
    v12 = 0.3;
  else
    v12 = 0.0;
  v14 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "layer"));
  *(float *)&v13 = v12;
  objc_msgSend(v14, "setOpacity:", v13);

}

id sub_B1A88(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "setFinished:", 1);
  objc_msgSend(*(id *)(a1 + 32), "setState:", 3);
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pageAnimationDelegate"));
  objc_msgSend(v2, "pageAnimation:didFinish:", *(_QWORD *)(a1 + 32), 1);

  return objc_msgSend(*(id *)(a1 + 32), "_cleanup");
}

id sub_B4154(id a1, id a2)
{
  return objc_msgSend(a2, "objectForKeyedSubscript:", CFSTR("fullHref"));
}

id sub_B42F0(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSMutableDictionary dictionary](NSMutableDictionary, "dictionary"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("fullHref")));
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v5, kBCReadingStatisticsHrefKey);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("name")));
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v6, kBCReadingStatisticsNameKey);

  v7 = *(void **)(a1 + 32);
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("fullHref")));

  v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "objectForKeyedSubscript:", v8));
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v9, kBCReadingStatisticsStartCFIKey);

  return v4;
}

uint64_t sub_B5444(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

double BKScreenSizeForImageSize(double a1)
{
  void *v2;
  double v3;
  double v4;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[UIScreen mainScreen](UIScreen, "mainScreen"));
  objc_msgSend(v2, "scale");
  v4 = v3;

  if (v4 != 1.0)
    return a1 / v4;
  return a1;
}

void sub_B9858(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;

  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pdfDocument"));
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "pageAtIndex:", a2));

  objc_msgSend(*(id *)(a1 + 40), "addObject:", v5);
}

void sub_B9CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_B9CFC(uint64_t result, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  if (*(_QWORD *)(result + 32) == a2)
  {
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(result + 40) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

void sub_BB054(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_BB3E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15, uint64_t a16, void *a17, void *a18, void *a19, void *__p,uint64_t a21)
{
  if (__p)
    operator delete(__p);

  _Unwind_Resume(a1);
}

_QWORD *sub_BB4BC(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = sub_BB534(result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_BB518(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_BB534(_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 61)
    sub_BB574();
  result = (char *)sub_BB588((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void sub_BB574()
{
  sub_BB5BC("vector");
}

void *sub_BB588(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    sub_BB630();
  return operator new(8 * a2);
}

void sub_BB5BC(const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_BB60C(exception, a1);
}

void sub_BB5F8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_BB60C(std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  return result;
}

void sub_BB630()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

void sub_BCEC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_BCEF0(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  void *v4;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "analysisInteraction"));
  objc_msgSend(v4, "setAnalysis:", v3);

}

uint64_t NSStringFromBKWK2LoaderContentInfoRequestState(unint64_t a1)
{
  if (a1 > 7)
    return 0;
  else
    return (uint64_t)*(&off_1C1118 + a1);
}

void sub_BDC70(id a1, ICStoreRequestContext *a2)
{
  ICStoreRequestContext *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;

  v2 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentity activeAccount](ICUserIdentity, "activeAccount"));
  -[ICStoreRequestContext setIdentity:](v2, "setIdentity:", v3);

  v4 = (void *)objc_claimAutoreleasedReturnValue(+[ICUserIdentityStore defaultIdentityStore](ICUserIdentityStore, "defaultIdentityStore"));
  -[ICStoreRequestContext setIdentityStore:](v2, "setIdentityStore:", v4);

  v5 = objc_msgSend(objc_alloc((Class)ICClientInfo), "initWithSystemApplicationType:", 2);
  -[ICStoreRequestContext setClientInfo:](v2, "setClientInfo:", v5);

  v8 = objc_msgSend(objc_alloc((Class)ICStoreURLResponseAuthenticationProvider), "initWithUserInteractionLevel:", 5);
  -[ICStoreRequestContext setAuthenticationProvider:](v2, "setAuthenticationProvider:", v8);
  v6 = objc_alloc_init((Class)ICStoreDialogResponseHandlerConfiguration);
  objc_msgSend(v6, "setAllowsHandlingNonAuthenticationDialogs:", 0);
  v7 = objc_msgSend(objc_alloc((Class)ICStoreDialogResponseHandler), "initWithConfiguration:", v6);
  -[ICStoreRequestContext setStoreDialogResponseHandler:](v2, "setStoreDialogResponseHandler:", v7);

}

void BKSwizzleClassMethods(objc_class *a1, const char *a2, const char *a3)
{
  objc_method *ClassMethod;
  objc_method *v7;
  objc_method *v8;
  void (*Implementation)(void);
  const char *TypeEncoding;
  void (*v11)(void);
  const char *v12;

  if (a1)
  {
    ClassMethod = class_getClassMethod(a1, a2);
    v7 = class_getClassMethod(a1, a3);
    if (ClassMethod)
    {
      v8 = v7;
      if (v7)
      {
        Implementation = method_getImplementation(v7);
        TypeEncoding = method_getTypeEncoding(v8);
        if (class_addMethod(a1, a2, Implementation, TypeEncoding))
        {
          v11 = method_getImplementation(ClassMethod);
          v12 = method_getTypeEncoding(ClassMethod);
          class_replaceMethod(a1, a3, v11, v12);
        }
        else
        {
          method_exchangeImplementations(ClassMethod, v8);
        }
      }
    }
  }
}

void BKSwizzleInstanceMethods(objc_class *a1, const char *a2, const char *a3)
{
  objc_method *InstanceMethod;
  objc_method *v7;
  objc_method *v8;
  void (*Implementation)(void);
  const char *TypeEncoding;
  void (*v11)(void);
  const char *v12;

  if (a1)
  {
    InstanceMethod = class_getInstanceMethod(a1, a2);
    v7 = class_getInstanceMethod(a1, a3);
    if (InstanceMethod)
    {
      v8 = v7;
      if (v7)
      {
        Implementation = method_getImplementation(v7);
        TypeEncoding = method_getTypeEncoding(v8);
        if (class_addMethod(a1, a2, Implementation, TypeEncoding))
        {
          v11 = method_getImplementation(InstanceMethod);
          v12 = method_getTypeEncoding(InstanceMethod);
          class_replaceMethod(a1, a3, v11, v12);
        }
        else
        {
          method_exchangeImplementations(InstanceMethod, v8);
        }
      }
    }
  }
}

double BKUnionRects(void *a1)
{
  id v1;
  CGFloat y;
  double x;
  CGFloat height;
  CGFloat width;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  CGRect v20;
  CGRect v21;
  CGRect v22;

  v1 = a1;
  x = CGRectNull.origin.x;
  y = CGRectNull.origin.y;
  width = CGRectNull.size.width;
  height = CGRectNull.size.height;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v6 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v16;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v16 != v8)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v15 + 1) + 8 * (_QWORD)v9), "CGRectValue");
        v22.origin.x = v10;
        v22.origin.y = v11;
        v22.size.width = v12;
        v22.size.height = v13;
        v20.origin.x = x;
        v20.origin.y = y;
        v20.size.width = width;
        v20.size.height = height;
        v21 = CGRectUnion(v20, v22);
        x = v21.origin.x;
        y = v21.origin.y;
        width = v21.size.width;
        height = v21.size.height;
        v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v7);
  }

  return x;
}

void sub_BE0D4(id a1)
{
  BKEpubCFILocation *v1;
  void *v2;
  id v3;

  v1 = objc_alloc_init(BKEpubCFILocation);
  v2 = (void *)qword_20F5F8;
  qword_20F5F8 = (uint64_t)v1;

  v3 = (id)objc_claimAutoreleasedReturnValue(+[BCCFI unknownCFI](BCCFI, "unknownCFI"));
  objc_msgSend((id)qword_20F5F8, "setCfi:", v3);

}

uint64_t sub_BEA38(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v5 = a3;
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "documentWithOrdinal:", a2));
  v7 = v6;
  if (v6
    && (v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "manifestId")),
        v9 = objc_msgSend(v5, "isEqualToString:", v8),
        v8,
        (v9 & 1) != 0))
  {
    v10 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "databaseKey"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("bookDatabaseKey == %@ AND manifestId == %@"), v11, v5));

    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "managedObjectContext"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "entity:withPredicate:sortBy:ascending:fetchLimit:", CFSTR("BKDocument"), v12, 0, 1, 1));

    if (objc_msgSend(v14, "count"))
    {
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "objectAtIndex:", 0));
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "documentOrdinal"));
      v10 = 2 * (_QWORD)objc_msgSend(v16, "integerValue") + 2;

    }
    else
    {
      v10 = 0x7FFFFFFFFFFFFFFFLL;
    }

  }
  return v10;
}

id sub_BFA50(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_didDismissFootnoteViewController");
}

void sub_BFD2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_BFD48(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id WeakRetained;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  double v28;
  id v29;

  v29 = a2;
  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v7 = WeakRetained;
  if (WeakRetained)
  {
    if (v5)
    {
      objc_msgSend(WeakRetained, "_footnoteViewControllerPreparationForDisplayFailed:", v5);
    }
    else
    {
      objc_opt_class(NSString);
      v9 = BUDynamicCast(v8, v29);
      v10 = (void *)objc_claimAutoreleasedReturnValue(v9);
      if (objc_msgSend(v10, "length"))
      {
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "dataUsingEncoding:", 4));
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v11, 0, 0));

        objc_msgSend(v7, "preferredContentSize");
        v14 = v13;
        *(_QWORD *)&v15 = objc_opt_class(NSNumber).n128_u64[0];
        v17 = v16;
        v18 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "lastObject", v15));
        v19 = BUDynamicCast(v17, v18);
        v20 = (void *)objc_claimAutoreleasedReturnValue(v19);

        if (v20)
        {
          objc_msgSend(v20, "doubleValue");
          v14 = v21;
        }
        *(_QWORD *)&v22 = objc_opt_class(NSNumber).n128_u64[0];
        v24 = v23;
        v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "firstObject", v22));
        v26 = BUDynamicCast(v24, v25);
        v27 = (void *)objc_claimAutoreleasedReturnValue(v26);

        if (v27)
          objc_msgSend(v27, "doubleValue");
        if (v14 <= 667.0)
          v28 = v14;
        else
          v28 = 667.0;
        objc_msgSend(v7, "setPreferredContentSize:", 375.0, v28);
        objc_msgSend(v7, "_footnoteViewControllerReadyForDisplay");

      }
      else
      {
        v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", WKErrorDomain, 4, 0));
        objc_msgSend(v7, "_footnoteViewControllerPreparationForDisplayFailed:", v12);
      }

    }
  }

}

void sub_C48E8(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v3 = a2;
  v11 = v3;
  if (*(_DWORD *)(a1 + 56) == 3
    && (v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readingLocationAnnotation:moc:", 0, v3))) != 0)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "ordinal");
    if (v6 == objc_msgSend(*(id *)(a1 + 40), "ordinal")
      && (objc_msgSend(v5, "isLocationSame:", *(_QWORD *)(a1 + 40)) & 1) != 0)
    {
      goto LABEL_10;
    }
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[AEBookInfo defaultAnnotationCreatorIdentifier](AEBookInfo, "defaultAnnotationCreatorIdentifier"));
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "assetID"));
    v5 = (void *)objc_claimAutoreleasedReturnValue(+[AEAnnotation insertAnnotationWithAssetID:creatorIdentifier:annotationUuid:intoManagedObjectContext:](AEAnnotation, "insertAnnotationWithAssetID:creatorIdentifier:annotationUuid:intoManagedObjectContext:", v8, v7, 0, v11));

    objc_msgSend(v5, "setAnnotationType:", *(unsigned int *)(a1 + 56));
  }
  objc_msgSend(*(id *)(a1 + 32), "_adjustAnnotation:withLocation:selectedText:representativeText:updateStyle:", v5, *(_QWORD *)(a1 + 40), 0, 0, 1);
  v9 = objc_retainBlock(*(id *)(a1 + 48));
  v10 = v9;
  if (v9)
    (*((void (**)(id, void *))v9 + 2))(v9, v5);

LABEL_10:
}

void sub_C4AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_C4B04(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_C4B14(uint64_t a1)
{

}

void sub_C4B1C(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readingLocationAnnotation:moc:", 1, a2));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "location"));

  if (v3)
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "location"));
  else
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "firstDocumentLocation"));
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

}

void sub_C4D54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_C5344(uint64_t a1, void *a2, uint64_t a3)
{
  void *v4;
  id v5;
  void *v6;
  id v7;

  v4 = *(void **)(a1 + 32);
  v5 = a2;
  v7 = (id)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a3));
  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "documentOrdinal"));

  objc_msgSend(v4, "setObject:forKey:", v7, v6);
}

void sub_C5B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  _Block_object_dispose(&a56, 8);
  _Block_object_dispose(&a62, 8);
  _Unwind_Resume(a1);
}

void sub_C5B5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v2 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "readingLocationAnnotation:moc:", 1, *(_QWORD *)(a1 + 40)));
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

  v5 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "location"));
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;

}

void sub_C5BC4(_QWORD *a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id obj;
  id v19;
  id v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[AEBookInfo _nonUpdatedAnnotationsForDocumentOrdinal:assetID:moc:](AEBookInfo, "_nonUpdatedAnnotationsForDocumentOrdinal:assetID:moc:", a1[4], a1[5], a1[6]));
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  obj = v2;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v22;
    v16 = kAEAnnotationVersion_5;
    v17 = a1;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v22 != v5)
          objc_enumerationMutation(obj);
        v7 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * (_QWORD)i);
        if ((objc_msgSend(v7, "spineIndexUpdated") & 1) == 0)
        {
          v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "annotationLocation"));
          v20 = 0;
          v9 = (void *)objc_claimAutoreleasedReturnValue(+[BKEpubCFILocation locationForCFI:error:](BKEpubCFILocation, "locationForCFI:error:", v8, &v20));
          v10 = v20;
          if (v10)
          {
            v11 = 0;
            v12 = 0;
          }
          else
          {
            v13 = a1[7];
            v19 = 0;
            v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "locationWithAdjustedSpineIndex:error:", v13, &v19));
            v11 = v19;
            if (v12)
            {
              v14 = (id)a1[8];
              if (v14 == objc_msgSend(v12, "ordinal"))
              {
                v15 = objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "cfiString"));

                objc_msgSend(v7, "setAnnotationLocation:", v15);
                objc_msgSend(v7, "setOrdinal:", objc_msgSend(v12, "ordinal"));
                objc_msgSend(v7, "setSpineIndexUpdated:", 1);
                objc_msgSend(v7, "bumpAnnotationVersionToMinimumVersion:", v16);
                v8 = (void *)v15;
              }
              a1 = v17;
            }
          }

        }
      }
      v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    }
    while (v4);
  }

}

id sub_C5DE0(_QWORD *a1)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)(a1[4] + 8) + 40), "spineIndexUpdated");
  if ((result & 1) == 0)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "setOrdinal:", (char *)objc_msgSend(*(id *)(*(_QWORD *)(a1[5] + 8) + 40), "ordinal") + a1[7]);
    result = objc_msgSend(*(id *)(*(_QWORD *)(a1[4] + 8) + 40), "setSpineIndexUpdated:", 1);
    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
  }
  return result;
}

void sub_C5E58(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "annotationProvider"));
  objc_msgSend(v2, "saveManagedObjectContext:", *(_QWORD *)(a1 + 40));

}

void sub_C7824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_C7A60(uint64_t a1)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  id v5;

  v2 = *(_QWORD **)(a1 + 32);
  if (v2[15])
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "annotationProvider"));
    v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "uiManagedObjectContext"));

    if (objc_msgSend(v5, "hasChanges"))
    {
      v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "annotationProvider"));
      objc_msgSend(v4, "saveManagedObjectContext:", v5);

    }
  }
}

void sub_C818C(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

id sub_C823C(void *a1)
{
  void *v1;
  void *v2;

  v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "assetID"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "stringByAppendingString:", CFSTR("4")));

  return v2;
}

void sub_C9A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_C9AA8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_C9AB8(uint64_t a1)
{

}

void sub_C9AC0(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v4 = objc_msgSend(objc_alloc((Class)IMJPEGPrefetch), "initWithData:optimalSize:options:", *(_QWORD *)(a1 + 32), 0, *(double *)(a1 + 48), *(double *)(a1 + 56));
  v2 = objc_msgSend(v4, "cachedImage");
  if (v2)
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", v2));
  else
    v3 = 0;
  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v3);
  if (v2)

}

void sub_CA3E4(uint64_t a1, void *a2)
{
  CGContext *v3;
  void *v4;
  CGColorSpace *DeviceRGB;
  CGColorSpace *v6;
  CGGradient *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  __int128 v13;
  CGFloat locations[3];
  CGPoint v15;
  CGRect v16;

  v3 = (CGContext *)objc_msgSend(a2, "CGContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor whiteColor](UIColor, "whiteColor"));
  objc_msgSend(v4, "set");

  v16.size.width = *(CGFloat *)(a1 + 40);
  v16.size.height = *(CGFloat *)(a1 + 48);
  v16.origin.x = 0.0;
  v16.origin.y = 0.0;
  CGContextFillRect(v3, v16);
  if (objc_msgSend(*(id *)(a1 + 32), "preferredRange", 0x3FF0000000000000, 0x3FF0000000000000, 0x3FF0000000000000, unk_1731A0, 0x3FEC9BA5E0000000, 0x3FEC9BA5E0000000, 0x3FEC9BA5E0000000, unk_1731C0, 0, 0x3FF0000000000000) == (char *)&dword_0 + 1|| !objc_msgSend(*(id *)(a1 + 32), "preferredRange"))
  {
    DeviceRGB = CGColorSpaceCreateWithName(kCGColorSpaceDisplayP3);
  }
  else
  {
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
  }
  v6 = DeviceRGB;
  v7 = CGGradientCreateWithColorComponents(DeviceRGB, (const CGFloat *)&v13, locations, 2uLL);
  v8 = *(double *)(a1 + 48);
  v9 = *(double *)(a1 + 40) * 0.5;
  if (v9 >= v8 * 0.5)
    v11 = *(double *)(a1 + 40) * 0.5;
  else
    v11 = v8 * 0.5;
  v15.x = *(double *)(a1 + 40) * 0.5;
  v15.y = v8 * 0.5;
  v10 = v8 * 0.5;
  CGContextDrawRadialGradient(v3, v7, *(CGPoint *)&v9, 0.0, v15, v11, 2u);
  CGColorSpaceRelease(v6);
  CGGradientRelease(v7);
  CGContextSaveGState(v3);
  v12 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor colorWithWhite:alpha:](UIColor, "colorWithWhite:alpha:", 0.537254902, 1.0));
  objc_msgSend(v12, "set");

  CGContextRestoreGState(v3);
}

void sub_CB898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location)
{
  uint64_t v13;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v13 - 160));
  _Unwind_Resume(a1);
}

void sub_CB8C0(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  id WeakRetained;

  v3 = (id *)(a1 + 56);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  objc_msgSend(WeakRetained, "_gotSnapshotWithMask:bookInfo:containerBounds:contentSize:isRight:key:pageNumber:snapshot:scale:size:completion:", *(unsigned __int8 *)(a1 + 144), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 145), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 112), v4, *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104), *(double *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 48));

}

id sub_CC634(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setUndoManager:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "setMergePolicy:", NSMergeByPropertyObjectTrumpMergePolicy);
}

id sub_CC6E8(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "reset");
}

id sub_CC7C8(uint64_t a1)
{
  return _objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "mergeChangesFromContextDidSaveNotification:", *(_QWORD *)(a1 + 40));
}

void sub_CCC34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  void *v24;

  objc_sync_exit(v24);
  _Unwind_Resume(a1);
}

void sub_CCC78(uint64_t a1, void *a2, void *a3)
{
  id v5;
  NSObject *v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  unsigned __int8 v15;
  NSObject *v16;
  id v17;
  NSObject *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint8_t buf[4];
  void *v24;
  __int16 v25;
  NSObject *v26;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = _AELog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "URL"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "path"));
      *(_DWORD *)buf = 138543618;
      v24 = v10;
      v25 = 2112;
      v26 = v6;
      _os_log_impl(&dword_0, v8, OS_LOG_TYPE_ERROR, "Error adding AEBookInfo Persistent Store at %{public}@: %@", buf, 0x16u);

    }
    v11 = *(void **)(a1 + 32);
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "URL"));
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "type"));
    v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "options"));
    v22 = 0;
    v15 = objc_msgSend(v11, "destroyPersistentStoreAtURL:withType:options:error:", v12, v13, v14, &v22);
    v16 = v22;

    if ((v15 & 1) == 0 && (-[NSObject bu_isNoSuchFileError](v16, "bu_isNoSuchFileError") & 1) == 0)
    {
      v17 = _AELog();
      v18 = objc_claimAutoreleasedReturnValue(v17);
      if (!os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      {
LABEL_11:

        goto LABEL_12;
      }
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "URL"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "path"));
      *(_DWORD *)buf = 138543618;
      v24 = v20;
      v25 = 2112;
      v26 = v16;
      _os_log_impl(&dword_0, v18, OS_LOG_TYPE_ERROR, "Error trying to destroy the AEBookInfo Store at %{public}@: %@", buf, 0x16u);

LABEL_10:
      goto LABEL_11;
    }
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 0;
    v21 = _AELog();
    v16 = objc_claimAutoreleasedReturnValue(v21);
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      v18 = objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "URL"));
      v19 = (void *)objc_claimAutoreleasedReturnValue(-[NSObject path](v18, "path"));
      *(_DWORD *)buf = 138543362;
      v24 = v19;
      _os_log_impl(&dword_0, v16, OS_LOG_TYPE_DEFAULT, "Added AEBookInfo Persistent Store at %{public}@", buf, 0xCu);
      goto LABEL_10;
    }
  }
LABEL_12:

}

void sub_CCEF8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  const char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint32_t v14;
  id v15;
  int v16;
  void *v17;
  __int16 v18;
  id v19;

  v5 = a2;
  v6 = a3;
  if (v6)
  {
    v7 = _AELog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "URL"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "path"));
      v16 = 138543618;
      v17 = v10;
      v18 = 2112;
      v19 = v6;
      v11 = "Error trying again to add AEBookInfo Persistent Store at %{public}@: %@";
      v12 = v8;
      v13 = OS_LOG_TYPE_ERROR;
      v14 = 22;
LABEL_6:
      _os_log_impl(&dword_0, v12, v13, v11, (uint8_t *)&v16, v14);

    }
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
    v15 = _AELog();
    v8 = objc_claimAutoreleasedReturnValue(v15);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "URL"));
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v9, "path"));
      v16 = 138543362;
      v17 = v10;
      v11 = "Added AEBookInfo Persistent Store at %{public}@ on second trying";
      v12 = v8;
      v13 = OS_LOG_TYPE_DEFAULT;
      v14 = 12;
      goto LABEL_6;
    }
  }

}

id sub_CD0F0(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setUndoManager:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "setMergePolicy:", NSMergeByPropertyObjectTrumpMergePolicy);
}

uint64_t sub_CD1C4(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

uint64_t sub_CD2B8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setPersistentStoreCoordinator:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setUndoManager:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setMergePolicy:", NSMergeByPropertyObjectTrumpMergePolicy);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

uint64_t sub_CD3E8(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setPersistentStoreCoordinator:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 32), "setUndoManager:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setMergePolicy:", NSMergeByPropertyObjectTrumpMergePolicy);
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
}

void sub_CD5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_CD5C8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_CD5D8(uint64_t a1)
{

}

void sub_CD5E0(_QWORD *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1[4] + 16), "objectIDsWithPredicate:forEntity:", a1[5], CFSTR("AEBookInfo")));
  if (objc_msgSend(v3, "count"))
  {
    v4 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "lastObject"));
    v5 = *(_QWORD *)(a1[6] + 8);
    v6 = *(void **)(v5 + 40);
    *(_QWORD *)(v5 + 40) = v4;

  }
  objc_autoreleasePoolPop(v2);
}

void sub_CD78C(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = a2;
  v8 = (id)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("databaseKey ==[n] %@"), v3));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "unbatchedObjectsWithPredicate:forEntity:"));

  if (objc_msgSend(v5, "count"))
  {
    v6 = *(_QWORD *)(a1 + 40);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "lastObject"));
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v7);

  }
}

void sub_CD8E4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  id v8;
  void *v9;
  id v10;

  v3 = a2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSPredicate predicateWithFormat:](NSPredicate, "predicateWithFormat:", CFSTR("databaseKey ==[n] %@"), *(_QWORD *)(a1 + 32)));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "unbatchedObjectsWithPredicate:forEntity:", v4, CFSTR("AEBookInfo")));
  if (objc_msgSend(v5, "count"))
  {
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "lastObject"));
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    if (objc_msgSend(v3, "hasChanges"))
    {
      v10 = 0;
      v7 = objc_msgSend(v3, "save:", &v10);
      v8 = v10;
      if ((v7 & 1) == 0)
      {
        v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "url"));
        NSLog(CFSTR("Error updating book: %@ -- %@"), v9, v8);

      }
    }

  }
}

void sub_CDD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_CDD48(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "existingBookInfoForDatabaseKey:fromManagedObjectContext:", *(_QWORD *)(a1 + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)));
  if (!v3)
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("AEBookInfo"), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)));
    objc_msgSend(v3, "setDatabaseKey:", *(_QWORD *)(a1 + 40));
  }
  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "hasChanges"))
  {
    v4 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
    v12 = 0;
    v5 = objc_msgSend(v4, "save:", &v12);
    v6 = v12;
    v7 = v6;
    if ((v5 & 1) == 0)
      objc_msgSend(v6, "logRecursively");

  }
  v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectID"));
  v9 = objc_msgSend(v8, "copy");
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v11 = *(void **)(v10 + 40);
  *(_QWORD *)(v10 + 40) = v9;

  objc_autoreleasePoolPop(v2);
  if (!*(_BYTE *)(a1 + 56))
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "reset");
}

void sub_CE0C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  uint64_t v32;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_CE0F0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  unsigned __int8 v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _QWORD v46[5];
  id v47;

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "existingBookInfoForURL:fromManagedObjectContext:", *(_QWORD *)(a1 + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)));
  if (v3)
  {
LABEL_19:
    v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "parserVersion"));
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24) = objc_msgSend(CFSTR("BookEPUB Parser - 2024.05.01"), "isEqualToString:", v21);

    if (*(_QWORD *)(a1 + 48))
      objc_msgSend(v3, "setUpdateDate:");
    v22 = objc_msgSend(*(id *)(a1 + 32), "parseBook:", v3);
    if ((_DWORD)v22)
    {
      if (*(_QWORD *)(a1 + 80))
      {
        v23 = v22;
        v24 = 1001;
        if ((_DWORD)v22 == -998)
          v24 = 2002;
        if ((_DWORD)v22 == -999)
          v25 = 2000;
        else
          v25 = v24;
        v26 = (void *)objc_claimAutoreleasedReturnValue(+[AEAssetEngine libraryMgr](AEAssetEngine, "libraryMgr"));
        v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v26, "metadataForAssetAtURL:needsCoordination:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 88)));

        v28 = *(_QWORD *)(a1 + 40);
        v29 = AssetEngineErrorAssetURLUserInfoKey;
        v30 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInt:](NSNumber, "numberWithInt:", v23));
        v31 = v27;
        if (!v27)
          v31 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
        v32 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v28, v29, v30, CFSTR("BKBookParserError"), v31, AssetEngineErrorLibraryMgrInfoUserInfoKey, 0));
        if (!v27)

        v33 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, v25, v32));
        v34 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        v35 = *(void **)(v34 + 40);
        *(_QWORD *)(v34 + 40) = v33;

      }
      v3 = 0;
    }
    if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "hasChanges"))
    {
      v36 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
      v47 = 0;
      v37 = objc_msgSend(v36, "save:", &v47);
      v38 = v47;
      v39 = v38;
      if ((v37 & 1) == 0)
        objc_msgSend(v38, "logRecursively");

    }
    v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectID"));
    v41 = objc_msgSend(v40, "copy");
    v42 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v43 = *(void **)(v42 + 40);
    *(_QWORD *)(v42 + 40) = v41;

    objc_autoreleasePoolPop(v2);
    if (!*(_BYTE *)(a1 + 89))
    {
      v44 = *(_QWORD *)(a1 + 32);
      v45 = *(void **)(v44 + 16);
      v46[0] = _NSConcreteStackBlock;
      v46[1] = 3221225472;
      v46[2] = sub_CE5D0;
      v46[3] = &unk_1BEA38;
      v46[4] = v44;
      objc_msgSend(v45, "performBlockAndWait:", v46);
    }
    return;
  }
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[AEAssetEngine libraryMgr](AEAssetEngine, "libraryMgr"));
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "assetIDForAssetAtURLOnMainThread:", *(_QWORD *)(a1 + 40)));

  if (objc_msgSend(v5, "length"))
  {
    v6 = 0;
  }
  else
  {
    v7 = (void *)objc_claimAutoreleasedReturnValue(+[AEAssetEngine libraryMgr](AEAssetEngine, "libraryMgr"));
    v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "metadataForAssetAtURL:needsCoordination:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 88)));

    v8 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "databaseKeyFromLibraryManagerInfo:forAssetAtURL:", v6, *(_QWORD *)(a1 + 40)));
    v5 = (void *)v8;
  }
  if (objc_msgSend(v5, "length"))
  {
    v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "existingBookInfoForDatabaseKey:fromManagedObjectContext:", v5, *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)));
    if (v9)
    {
      v3 = v9;
      objc_msgSend(v9, "resetAsNewlyDownloaded");
    }
    else
    {
      v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSEntityDescription insertNewObjectForEntityForName:inManagedObjectContext:](NSEntityDescription, "insertNewObjectForEntityForName:inManagedObjectContext:", CFSTR("AEBookInfo"), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)));
      objc_msgSend(v3, "setDatabaseKey:", v5);
    }
    v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "path"));
    objc_msgSend(v3, "setBookBundlePath:", v17);

    if (!v6)
    {
      v18 = (void *)objc_claimAutoreleasedReturnValue(+[AEAssetEngine libraryMgr](AEAssetEngine, "libraryMgr"));
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "metadataForAssetAtURL:needsCoordination:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 88)));

    }
    objc_msgSend(*(id *)(a1 + 32), "setPropertiesOfBook:withPlistEntry:", v3, v6);
    v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bookBundlePath"));
    objc_msgSend(v3, "setContentType:", BookFormatByFilePath(v19, v20));

    goto LABEL_19;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = AssetEngineErrorAssetURLUserInfoKey;
  v12 = v6;
  if (!v6)
    v12 = (void *)objc_claimAutoreleasedReturnValue(+[NSNull null](NSNull, "null"));
  v13 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v10, v11, v12, AssetEngineErrorLibraryMgrInfoUserInfoKey, 0));
  if (!v6)

  if (*(_QWORD *)(a1 + 80))
  {
    v14 = objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", AssetEngineErrorDomain, 2001, v13));
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v16 = *(void **)(v15 + 40);
    *(_QWORD *)(v15 + 40) = v14;

  }
  objc_autoreleasePoolPop(v2);
}

id sub_CE5D0(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "reset");
}

void sub_CE5DC(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_CE644;
  block[3] = &unk_1BEA38;
  v2 = *(id *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

}

id sub_CE644(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "checkAnnotationsForDuplicatedDocuments");
}

void sub_CE7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_CE80C(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  id v7;
  void *v8;
  id v9;

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "existingObjectWithID:error:", *(_QWORD *)(a1 + 40), 0));
  if (v3)
  {
    v4 = (void *)objc_claimAutoreleasedReturnValue(+[BKBookParser parserForBook:](BKBookParser, "parserForBook:", v3));
    *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = objc_msgSend(v4, "parse:", 0);
    if (*(_BYTE *)(a1 + 56) && objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "hasChanges"))
    {
      v5 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
      v9 = 0;
      v6 = objc_msgSend(v5, "save:", &v9);
      v7 = v9;
      v8 = v7;
      if ((v6 & 1) == 0)
        objc_msgSend(v7, "logRecursively");

    }
  }

  objc_autoreleasePoolPop(v2);
  if (!*(_BYTE *)(a1 + 57))
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 16), "reset");
}

void sub_CE9A8(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "existingBookInfoForURL:fromManagedObjectContext:", *(_QWORD *)(a1 + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "path"));
  if (v3)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bookBundlePath"));
    v6 = objc_msgSend(v5, "isEqualToString:", v4);

    if ((v6 & 1) == 0)
    {
      v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 48), "path"));
      objc_msgSend(v3, "setBookBundlePath:", v7);

      v8 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
      v9 = 0;
      objc_msgSend(v8, "save:", &v9);
    }
  }

  objc_autoreleasePoolPop(v2);
}

void sub_CEAF0(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "existingBookInfoForURL:fromManagedObjectContext:", *(_QWORD *)(a1 + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)));
  objc_msgSend(*(id *)(a1 + 32), "_resetBookInfo:", v3);

  objc_autoreleasePoolPop(v2);
}

void sub_CEBC0(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = objc_autoreleasePoolPush();
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "existingBookInfoForDatabaseKey:fromManagedObjectContext:", *(_QWORD *)(a1 + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16)));
  objc_msgSend(*(id *)(a1 + 32), "_resetBookInfo:", v3);

  objc_autoreleasePoolPop(v2);
}

void sub_CEC90(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  if (v2)
  {
    objc_msgSend(v2, "resetAsNewlyDownloaded");
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 16), "deleteObject:", *(_QWORD *)(a1 + 32));
    v3 = *(void **)(*(_QWORD *)(a1 + 40) + 16);
    v5 = 0;
    objc_msgSend(v3, "save:", &v5);
    v4 = v5;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 16), "reset");

  }
}

void sub_CEFCC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_CEFFC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  __int128 v11;

  v2 = *(void **)(a1 + 40);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 16);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_CF0A0;
  v6[3] = &unk_1C1490;
  v4 = v2;
  v5 = *(_QWORD *)(a1 + 32);
  v7 = v4;
  v8 = v5;
  v9 = *(id *)(a1 + 48);
  v10 = *(id *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  objc_msgSend(v3, "performBlockAndWait:", v6);

}

void sub_CF0A0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;

  v2 = objc_autoreleasePoolPush();
  if (objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", AEHelperStringMetadataAssetIDKey))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "databaseKeyFromLibraryManagerInfo:forAssetAtURL:", *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56)));
LABEL_5:
    v4 = v3;
    v5 = objc_msgSend(v3, "copy");
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 24) = objc_msgSend(v4, "length") == 0;
    goto LABEL_6;
  }
  if (objc_msgSend(*(id *)(a1 + 32), "isEqualToString:", AEHelperStringMetadataPageProgressionKey))
  {
    v3 = (void *)objc_claimAutoreleasedReturnValue(+[IMLibraryPlist pageProgressionFromPlistEntry:](IMLibraryPlist, "pageProgressionFromPlistEntry:", *(_QWORD *)(a1 + 48)));
    goto LABEL_5;
  }
LABEL_6:
  objc_autoreleasePoolPop(v2);
}

void sub_CF164(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  unsigned int v14;
  void *v15;
  unsigned int v16;
  void **v17;
  void *v18;

  v3 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookInfoForURL:fromManagedObjectContext:error:needsCoordination:updateDate:", *(_QWORD *)(a1 + 40), a2, 0, *(unsigned __int8 *)(a1 + 64), 0));
  v4 = (void *)v3;
  if (v3)
  {
    v18 = (void *)v3;
    if (objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataAssetIDKey))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "databaseKey"));
    }
    else if (objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataAuthorKey))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "bookAuthor"));
    }
    else if (objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataTitleKey))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "bookTitle"));
    }
    else if (objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataGenreKey))
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "genre"));
    }
    else
    {
      if (!objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataLanguageKey))
      {
        if (objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataDefaultCollectionNameKey))
        {
          v10 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
          v6 = *(void **)(v10 + 40);
          *(_QWORD *)(v10 + 40) = CFSTR("Books");
          goto LABEL_13;
        }
        if (objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataCoverArtEffectKey))
        {
          v11 = (void *)AEHelperStringMetadataCoverArtEffectEdgeBookCreaseValue;
          v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
        }
        else
        {
          if (objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataBookIdUrlIdentifierKey))
          {
            v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "bookEpubId"));
            goto LABEL_12;
          }
          if (objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataPageProgressionKey))
          {
            v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "pageProgressionDirection"));
            goto LABEL_12;
          }
          if (objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataCoverWritingModeKey))
          {
            v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "coverWritingModeString"));
            goto LABEL_12;
          }
          v14 = objc_msgSend(*(id *)(a1 + 48), "isEqualToString:", AEHelperStringMetadataCoverArtEffectEdgeKey);
          v4 = v18;
          if (!v14)
            goto LABEL_14;
          v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "readingDirection"));
          v16 = objc_msgSend(v15, "isEqualToString:", CFSTR("rtl"));

          v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
          if (v16)
            v17 = (void **)&AEHelperStringMetadataCoverArtEffectEdgeRightValue;
          else
            v17 = (void **)&AEHelperStringMetadataCoverArtEffectEdgeLeftValue;
          v11 = *v17;
        }
        v13 = v11;
        v6 = *(void **)(v12 + 40);
        *(_QWORD *)(v12 + 40) = v13;
        goto LABEL_13;
      }
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v18, "bookLanguage"));
    }
LABEL_12:
    v6 = v5;
    v7 = objc_msgSend(v5, "copy");
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

LABEL_13:
    v4 = v18;
  }
LABEL_14:

}

void sub_CF4B8(uint64_t a1, void *a2)
{
  void *v3;
  id v4;

  v4 = a2;
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "bookInfoForURL:fromManagedObjectContext:error:needsCoordination:updateDate:", *(_QWORD *)(a1 + 40), v4, 0, 1, 0));
  objc_msgSend(v3, "setDifferentString:forKey:", *(_QWORD *)(a1 + 48), CFSTR("bookTitle"));
  if (objc_msgSend(v4, "hasChanges"))
    objc_msgSend(v4, "save:", 0);

}

void sub_CF588()
{
  AEEpubInfoSource *v0;
  void *v1;

  v0 = -[AEEpubInfoSource initWithIdentifier:]([AEEpubInfoSource alloc], "initWithIdentifier:", CFSTR("AEBookInfo"));
  v1 = (void *)qword_20F608;
  qword_20F608 = (uint64_t)v0;

}

id _AEBookPluginsAudiobookLog()
{
  if (qword_20F618 != -1)
    dispatch_once(&qword_20F618, &stru_1C1500);
  return (id)qword_20F610;
}

void sub_CF6C8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.Audiobook");
  v2 = (void *)qword_20F610;
  qword_20F610 = (uint64_t)v1;

}

id _AEBookPluginsAnnotationsLog()
{
  if (qword_20F628 != -1)
    dispatch_once(&qword_20F628, &stru_1C1520);
  return (id)qword_20F620;
}

void sub_CF738(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.Annotations");
  v2 = (void *)qword_20F620;
  qword_20F620 = (uint64_t)v1;

}

id _ITEpubParsingLog()
{
  if (qword_20F638 != -1)
    dispatch_once(&qword_20F638, &stru_1C1540);
  return (id)qword_20F630;
}

void sub_CF7A8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "ITEpubParsing");
  v2 = (void *)qword_20F630;
  qword_20F630 = (uint64_t)v1;

}

id _AELog()
{
  if (qword_20F648 != -1)
    dispatch_once(&qword_20F648, &stru_1C1560);
  return (id)qword_20F640;
}

void sub_CF818(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins");
  v2 = (void *)qword_20F640;
  qword_20F640 = (uint64_t)v1;

}

id _AEAnnotationLocationLog()
{
  if (qword_20F658 != -1)
    dispatch_once(&qword_20F658, &stru_1C1580);
  return (id)qword_20F650;
}

void sub_CF888(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.AEAnnotationLocationLOg");
  v2 = (void *)qword_20F650;
  qword_20F650 = (uint64_t)v1;

}

id _AESearchLog()
{
  if (qword_20F668 != -1)
    dispatch_once(&qword_20F668, &stru_1C15A0);
  return (id)qword_20F660;
}

void sub_CF8F8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.Search");
  v2 = (void *)qword_20F660;
  qword_20F660 = (uint64_t)v1;

}

id _AEPaginationLog()
{
  if (qword_20F678 != -1)
    dispatch_once(&qword_20F678, &stru_1C15C0);
  return (id)qword_20F670;
}

void sub_CF968(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.Pagination");
  v2 = (void *)qword_20F670;
  qword_20F670 = (uint64_t)v1;

}

id _AERePaginationLog()
{
  if (qword_20F688 != -1)
    dispatch_once(&qword_20F688, &stru_1C15E0);
  return (id)qword_20F680;
}

void sub_CF9D8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.RePagination");
  v2 = (void *)qword_20F680;
  qword_20F680 = (uint64_t)v1;

}

id _AEWKProxyLog()
{
  if (qword_20F698 != -1)
    dispatch_once(&qword_20F698, &stru_1C1600);
  return (id)qword_20F690;
}

void sub_CFA48(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.WKProxy");
  v2 = (void *)qword_20F690;
  qword_20F690 = (uint64_t)v1;

}

id _AEWKLoaderLog()
{
  if (qword_20F6A8 != -1)
    dispatch_once(&qword_20F6A8, &stru_1C1620);
  return (id)qword_20F6A0;
}

void sub_CFAB8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.WKLoader");
  v2 = (void *)qword_20F6A0;
  qword_20F6A0 = (uint64_t)v1;

}

id _AEWKTocParseLog()
{
  if (qword_20F6B8 != -1)
    dispatch_once(&qword_20F6B8, &stru_1C1640);
  return (id)qword_20F6B0;
}

void sub_CFB28(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.WKTocParse");
  v2 = (void *)qword_20F6B0;
  qword_20F6B0 = (uint64_t)v1;

}

id _AEWKPictureBookLog()
{
  if (qword_20F6C8 != -1)
    dispatch_once(&qword_20F6C8, &stru_1C1660);
  return (id)qword_20F6C0;
}

void sub_CFB98(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.PictureBook");
  v2 = (void *)qword_20F6C0;
  qword_20F6C0 = (uint64_t)v1;

}

id _AEWKThumbnailBookLog()
{
  if (qword_20F6D8 != -1)
    dispatch_once(&qword_20F6D8, &stru_1C1680);
  return (id)qword_20F6D0;
}

void sub_CFC08(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.ThumbnailBook");
  v2 = (void *)qword_20F6D0;
  qword_20F6D0 = (uint64_t)v1;

}

id _AENavigationControllerLog()
{
  if (qword_20F6E8 != -1)
    dispatch_once(&qword_20F6E8, &stru_1C16A0);
  return (id)qword_20F6E0;
}

void sub_CFC78(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.NavigationController");
  v2 = (void *)qword_20F6E0;
  qword_20F6E0 = (uint64_t)v1;

}

id _AECaptureLocationLog()
{
  if (qword_20F6F8 != -1)
    dispatch_once(&qword_20F6F8, &stru_1C16C0);
  return (id)qword_20F6F0;
}

void sub_CFCE8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.CaptureLocation");
  v2 = (void *)qword_20F6F0;
  qword_20F6F0 = (uint64_t)v1;

}

id _AESwipeLog()
{
  if (qword_20F708 != -1)
    dispatch_once(&qword_20F708, &stru_1C16E0);
  return (id)qword_20F700;
}

void sub_CFD58(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.Swipe");
  v2 = (void *)qword_20F700;
  qword_20F700 = (uint64_t)v1;

}

id _AEPanGRLog()
{
  if (qword_20F718 != -1)
    dispatch_once(&qword_20F718, &stru_1C1700);
  return (id)qword_20F710;
}

void sub_CFDC8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.PanGRLog");
  v2 = (void *)qword_20F710;
  qword_20F710 = (uint64_t)v1;

}

id _AEBookPluginsFontCacheLog()
{
  if (qword_20F728 != -1)
    dispatch_once(&qword_20F728, &stru_1C1720);
  return (id)qword_20F720;
}

void sub_CFE38(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.FontCache");
  v2 = (void *)qword_20F720;
  qword_20F720 = (uint64_t)v1;

}

id _AEBookPluginsScrollLog()
{
  if (qword_20F738 != -1)
    dispatch_once(&qword_20F738, &stru_1C1740);
  return (id)qword_20F730;
}

void sub_CFEA8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.Scrolling");
  v2 = (void *)qword_20F730;
  qword_20F730 = (uint64_t)v1;

}

id _AEBookPluginsRTLLog()
{
  if (qword_20F748 != -1)
    dispatch_once(&qword_20F748, &stru_1C1760);
  return (id)qword_20F740;
}

void sub_CFF18(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.RTL");
  v2 = (void *)qword_20F740;
  qword_20F740 = (uint64_t)v1;

}

id _AEBookPluginsPageTurnLog()
{
  if (qword_20F758 != -1)
    dispatch_once(&qword_20F758, &stru_1C1780);
  return (id)qword_20F750;
}

void sub_CFF88(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.PageTurning");
  v2 = (void *)qword_20F750;
  qword_20F750 = (uint64_t)v1;

}

id _AEBookPluginsLifeCycleLog()
{
  if (qword_20F768 != -1)
    dispatch_once(&qword_20F768, &stru_1C17A0);
  return (id)qword_20F760;
}

void sub_CFFF8(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.LifeCycle");
  v2 = (void *)qword_20F760;
  qword_20F760 = (uint64_t)v1;

}

id _AEBookOpenLog()
{
  if (qword_20F778 != -1)
    dispatch_once(&qword_20F778, &stru_1C17C0);
  return (id)qword_20F770;
}

void sub_D0068(id a1)
{
  os_log_t v1;
  void *v2;

  v1 = os_log_create("com.apple.iBooks", "AEBookPlugins.BookOpen");
  v2 = (void *)qword_20F770;
  qword_20F770 = (uint64_t)v1;

}

uint64_t AEAccessibilityInitialize()
{
  if (IMAccessibilityShouldPerformValidationChecks())
  {
    __IMAccessibilityValidateIsKindOfClass(CFSTR("BEAppearanceViewController"), CFSTR("UIViewController"));
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BEAppearanceViewController"), CFSTR("brightnessSlider"), "@");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BEAppearanceViewController"), CFSTR("sizeLargerButton"), "@");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BEAppearanceViewController"), CFSTR("sizeSmallerButton"), "@");
    __IMAccessibilityValidateIsKindOfClass(CFSTR("BKTOCAnnotationTableCell"), CFSTR("BKTOCTableViewCell"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("BKTOCRangeAnnotationTableCell"), CFSTR("BKTOCAnnotationTableCell"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("AEBottomToolbar"), CFSTR("UIView"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("IMMediaPlayer"), CFSTR("IMAVPlayer"));
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("IMAVPlayer"), CFSTR("isPlaying"), "B");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKAudiobookPlayer"), CFSTR("durationOfCurrentChapter"), "d");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKAudiobookPlayer"), CFSTR("positionInCurrentChapter"), "d");
    __IMAccessibilityValidateIvarType(CFSTR("BKAudiobookPlayer"), "skipController", "BKAudiobookSkipController");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKAudiobookSkipController"), CFSTR("forwardSkipTime"), "d");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKAudiobookSkipController"), CFSTR("backwardSkipTime"), "d");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("IMPlayerManifest"), CFSTR("currentItem"), "@");
    __IMAccessibilityValidateProtocolMethod(CFSTR("IMMediaItem"), CFSTR("chapters"), 1, 1);
    __IMAccessibilityValidateProtocolMethod(CFSTR("IMMediaChapter"), CFSTR("title"), 1, 1);
    __IMAccessibilityValidateProtocolMethod(CFSTR("IMMediaChapter"), CFSTR("customTitle"), 1, 1);
    __IMAccessibilityValidateProtocolMethod(CFSTR("IMMediaChapter"), CFSTR("assetTimeRange"), 1, 1);
    __IMAccessibilityValidateClass(CFSTR("UIViewController"));
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("UIViewController"), CFSTR("dismissViewControllerAnimated:completion:"), "v");
    __IMAccessibilityValidateIsKindOfClass(CFSTR("AENoteFullscreenEditorController"), CFSTR("UIViewController"));
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("AENoteFullscreenEditorController"), CFSTR("textView"), "@");
    __IMAccessibilityValidateInstanceMethod(CFSTR("AEBookInfo"), CFSTR("suppressTOC"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("BKHTMLContentViewController"), CFSTR("UIViewController"));
    __IMAccessibilityValidateIvarType(CFSTR("BKHTMLContentViewController"), "_highlightsFRC", "NSFetchedResultsController");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKHTMLContentViewController"), CFSTR("isContentLoaded"), "B");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKHTMLContentViewController"), CFSTR("selectedAnnotation"), "@");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKHTMLContentViewController"), CFSTR("_shareAnnotation"), "v");
    __IMAccessibilityValidateIvarType(CFSTR("BKHTMLContentViewController"), "_selectedDOMRange", "DOMRange");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKHTMLContentViewController"), CFSTR("showHighlightingMenuForAnnotation:"), "v");
    __IMAccessibilityValidateIvarType(CFSTR("BKHTMLContentViewController"), "_webView", "BKWebView");
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKScrubberControl"), CFSTR("progress"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKScrubberControl"), CFSTR("value"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKScrubberCalloutView"), CFSTR("title"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKScrubberCalloutView"), CFSTR("subtitle"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKScrubberControl"), CFSTR("pageNumber"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKScrubberControl"), CFSTR("setPageNumber:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKScrubberControl"), CFSTR("pageCount"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("BKThumbnailBookViewController"), CFSTR("BKBookViewController"));
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKThumbnailBookViewController"), CFSTR("_editToolboxBarButtonItem"), "@");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKThumbnailBookViewController"), CFSTR("_libraryBarButtonItem"), "@");
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("_searchBarButtonItem"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("_tocBarButtonItem"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("_brightnessBarButtonItem"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("_bookmarkBarButtonItem"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("turnToPageNumber:animated:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("_audioBarButtonItem"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("viewDidLoad"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("_directorySwitchBarButtonItem"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("scrubValueChanged:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("updateBottomToolbar:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKThumbnailBookViewController"), CFSTR("toggleBookmark:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("IMViewController"), CFSTR("theme"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKExpandedContentViewController"), CFSTR("setToolbarVisible:animated:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKTOCAnnotationTableCell"), CFSTR("noteLabel"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKTOCTableViewCell"), CFSTR("pageLabel"));
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKTOCTableViewCell"), CFSTR("indentationLevel"), "q");
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKActionController"), CFSTR("barButtonItem"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKBookViewController"), CFSTR("hasSpreadPages"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKBookViewController"), CFSTR("book"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKExpandedContentViewController"), CFSTR("stopActivityIndicator:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKExpandedContentViewController"), CFSTR("close:"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKExpandedWebContentViewController"), CFSTR("contentView"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKTOCRangeAnnotationTableCell"), CFSTR("highlightedTextLabel"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("BKThumbnailBookViewController"), CFSTR("IMViewController"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("BKThumbnailBookViewController"), CFSTR("BKBookViewController"));
    __IMAccessibilityValidateIsKindOfClass(CFSTR("BKPDFModernBookViewController"), CFSTR("BKThumbnailBookViewController"));
    __IMAccessibilityValidateInstanceMethod(CFSTR("BKPDFModernBookViewController"), CFSTR("toggleBookmark:"));
    __IMAccessibilityValidateIvar(CFSTR("BKThumbnailBookViewController"), "_audioBarButtonItem");
    __IMAccessibilityValidateIvar(CFSTR("BKThumbnailBookViewController"), "_directorySwitch");
    __IMAccessibilityValidateIvar(CFSTR("BKThumbnailBookViewController"), "isPageBookmarked");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKThumbnailBookViewController"), CFSTR("_directorySwitchBarButtonItem"), "@");
    __IMAccessibilityValidateIvar(CFSTR("BKThumbnailBookViewController"), "_pageNumberHUD");
    __IMAccessibilityValidateInstanceMethodComplete(CFSTR("BKThumbnailBookViewController"), CFSTR("_tocBarButtonItem"), "@");
    __IMAccessibilityValidateIvar(CFSTR("BKThumbnailBookViewController"), "_topToolbar");
    __IMAccessibilityValidateIvar(CFSTR("BKPDFModernBookViewController"), "_bookmarkBarButtonItem");
    __IMAccessibilityValidateIvar(CFSTR("BKTOCAnnotationTableCell"), "_noteLabel");
    __IMAccessibilityValidateIvar(CFSTR("BKTOCAnnotationTableCell"), "_dateLabel");
    __IMAccessibilityValidateIvar(CFSTR("BKTOCTableViewCell"), "_pageLabel");
    __IMAccessibilityValidateIvar(CFSTR("BKScrubberControl"), "_thumb");
    NSLog(CFSTR("AX: Validated AX methods in AEBookPlugins"));
  }
  IMAccessibilityInstallSafeCategory(CFSTR("AXUIViewAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("AEAudiobookPlaybackRateViewControllerAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("AEBottomToolbarAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("AENoteFullscreenEditorControllerAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("BEAppearanceViewControllerAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("BKPDFModernBookViewControllerAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("BKScrubberControlAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("BKThumbnailBookViewControllerAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("BKActionControllerAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("BKExpandedContentViewControllerAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("BKExpandedWebContentViewControllerAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("BKHTMLContentViewControllerAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("BKTOCTableViewCellAccessibility"));
  IMAccessibilityInstallSafeCategory(CFSTR("BKTOCAnnotationTableCellAccessibility"));
  return IMAccessibilityInstallSafeCategory(CFSTR("BKTOCRangeAnnotationTableCellAccessibility"));
}

id AEAccessibilityCurrentPageNumber(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;

  v1 = a1;
  objc_opt_class(BKBookViewController);
  v3 = BUDynamicCast(v2, v1);
  v4 = (void *)objc_claimAutoreleasedReturnValue(v3);
  if (v4)
  {
    v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v1, "imaxValueForKey:", CFSTR("currentPages")));
    v6 = objc_msgSend(v5, "rangeValue");
    v8 = objc_msgSend(v4, "pageNumberFromRange:", v6, v7);

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

id AEAXDurationStringForDuration(double a1)
{
  NSDateComponentsFormatter *v3;
  void *v4;

  v3 = objc_opt_new(NSDateComponentsFormatter);
  -[NSDateComponentsFormatter setZeroFormattingBehavior:](v3, "setZeroFormattingBehavior:", 1);
  -[NSDateComponentsFormatter setUnitsStyle:](v3, "setUnitsStyle:", 4);
  -[NSDateComponentsFormatter setAllowedUnits:](v3, "setAllowedUnits:", 224);
  if ((*(_QWORD *)&a1 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
    v4 = 0;
  else
    v4 = (void *)objc_claimAutoreleasedReturnValue(-[NSDateComponentsFormatter stringFromTimeInterval:](v3, "stringFromTimeInterval:", a1));

  return v4;
}

id AEAXLocString(void *a1)
{
  id v1;
  void *v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v1 = a1;
  v2 = (void *)qword_20F780;
  if (qword_20F780
    || (*(_QWORD *)&v3 = objc_opt_class(AEBookPluginAccessibility).n128_u64[0],
        v5 = objc_claimAutoreleasedReturnValue(+[NSBundle bundleForClass:](NSBundle, "bundleForClass:", v4, v3)),
        v6 = (void *)qword_20F780,
        qword_20F780 = v5,
        v6,
        (v2 = (void *)qword_20F780) != 0))
  {
    v7 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, &stru_1C3088, CFSTR("AEAccessibility")));
  }
  else
  {
    v7 = 0;
  }
  if (v7 == v1)
  {
    if (IMAccessibilityShouldPerformValidationChecks())
    {
      NSLog(CFSTR("UIAccessibilityError: String could not be found for key: %@"), v1);
      abort();
    }

    v7 = 0;
  }

  return v7;
}

void sub_D1CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_D1D08(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v6;

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "familyName"));
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_msgSend(v6, "length") == 0;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    *a4 = 1;
}

void sub_D34A0(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", *(_QWORD *)(a1 + 40), 2));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "tableView"));
  v5 = v2;
  v4 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObjects:count:](NSArray, "arrayWithObjects:count:", &v5, 1));
  objc_msgSend(v3, "reloadRowsAtIndexPaths:withRowAnimation:", v4, 5);

}

void sub_D3A40(uint64_t a1)
{
  UIAccessibilityNotifications v1;
  void *v2;
  id v3;

  v1 = IMAccessibilityMoveToElementNotification;
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "imaxValueForKey:", CFSTR("contentView")));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "imaxUnignoredDescendant"));
  UIAccessibilityPostNotification(v1, v2);

}

void sub_D5410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_D5434(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _QWORD *WeakRetained;
  void *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  void *v13;
  _QWORD v14[4];
  id v15;
  id v16;
  _QWORD v17[4];
  id v18;
  id v19;
  id v20;
  uint64_t v21;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v8 = WeakRetained;
  if (v5 || !WeakRetained)
  {
    v12 = objc_retainBlock(v6);
    v13 = v12;
    if (v12)
      (*((void (**)(id))v12 + 2))(v12);

  }
  else
  {
    v9 = (void *)WeakRetained[13];
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    v17[2] = sub_D55B8;
    v17[3] = &unk_1C1818;
    v10 = WeakRetained;
    v11 = *(_QWORD *)(a1 + 56);
    v18 = v10;
    v21 = v11;
    v19 = *(id *)(a1 + 32);
    v20 = *(id *)(a1 + 40);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_D5698;
    v14[3] = &unk_1C0440;
    objc_copyWeak(&v16, (id *)(a1 + 48));
    v15 = v6;
    objc_msgSend(v9, "be_evaluateJavaScript:completion:", v17, v14);

    objc_destroyWeak(&v16);
  }

}

void sub_D55A4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_D55B8(_QWORD *a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v3 = (void *)a1[4];
  v4 = a2;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "bookInfoSnapshot"));
  v7 = (id)objc_claimAutoreleasedReturnValue(+[BECFIUtilitiesJSOptions cfiUtilitiesJSOptionsForBookInfoSnapshot:ordinal:](BECFIUtilitiesJSOptions, "cfiUtilitiesJSOptionsForBookInfoSnapshot:ordinal:", v5, a1[7]));

  v6 = (void *)objc_claimAutoreleasedReturnValue(+[BECFIUtilitiesJS updateScriptWithOptions:gapBetweenPages:paginatedTopToBottom:](BECFIUtilitiesJS, "updateScriptWithOptions:gapBetweenPages:paginatedTopToBottom:", v7, 0, 0.0));
  objc_msgSend(v4, "addScriptToEvaluate:key:transform:", v6, CFSTR("fixOrdinalScript"), 0);
  objc_msgSend(v4, "addScriptToEvaluate:key:transform:", a1[5], CFSTR("cfisForHrefsScript"), 0);
  objc_msgSend(v4, "addScriptToEvaluate:key:transform:", a1[6], CFSTR("textNodeCharacterCounts"), 0);

}

void sub_D5698(uint64_t a1, void *a2)
{
  id *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id WeakRetained;

  v3 = (id *)(a1 + 40);
  v4 = a2;
  WeakRetained = objc_loadWeakRetained(v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "dictionaryResultForKey:", CFSTR("textNodeCharacterCounts")));
  objc_msgSend(WeakRetained, "setTextNodeCharacterCounts:", v5);

  v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "dictionaryResultForKey:", CFSTR("cfisForHrefsScript")));
  objc_msgSend(WeakRetained, "setCfisForHrefs:", v6);

  v7 = objc_retainBlock(*(id *)(a1 + 32));
  v8 = v7;
  if (v7)
    (*((void (**)(id))v7 + 2))(v7);

}

id sub_D5A68(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setupWebView");
}

id sub_D5A70(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_releaseWebView");
}

void sub_D5A78(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 168);
  if (v1)
  {
    v3 = v1;
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 168);
    *(_QWORD *)(v4 + 168) = 0;

    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_D5B38;
    v7[3] = &unk_1BFDB8;
    v8 = v3;
    v9 = *(id *)(a1 + 40);
    v6 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v7);

  }
}

void sub_D5B38(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];

  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v8 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * (_QWORD)v6), "renderingCacheCallbackImage:context:", *(_QWORD *)(a1 + 40), 0, (_QWORD)v7);
        v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
    }
    while (v4);
  }

}

id sub_D5DF0(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_takeSnapshot");
}

void sub_D5F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_D5FAC(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  id v5;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "setImage:", v5);
    objc_msgSend(v4, "_updateSignal");
  }
  else
  {
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  }

}

void sub_D6110(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_D6134(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  dispatch_queue_global_t global_queue;
  NSObject *v8;
  id v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char v18;

  v5 = a2;
  v6 = a3;
  global_queue = dispatch_get_global_queue(0, 0);
  v8 = objc_claimAutoreleasedReturnValue(global_queue);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_D6244;
  v12[3] = &unk_1C18B8;
  objc_copyWeak(&v17, (id *)(a1 + 48));
  v18 = *(_BYTE *)(a1 + 56);
  v13 = v5;
  v14 = *(id *)(a1 + 32);
  v9 = *(id *)(a1 + 40);
  v15 = v6;
  v16 = v9;
  v10 = v6;
  v11 = v5;
  dispatch_async(v8, v12);

  objc_destroyWeak(&v17);
}

void sub_D6244(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  _QWORD v4[5];
  id v5;
  id v6;
  id v7;
  id v8;
  char v9;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    if (*(_BYTE *)(a1 + 72))
      LOBYTE(WeakRetained) = objc_msgSend(*(id *)(a1 + 32), "im_isLikelyBlank");
    else
      LOBYTE(WeakRetained) = 0;
  }
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_D6328;
  v4[3] = &unk_1C1890;
  v9 = (char)WeakRetained;
  v4[4] = v3;
  v5 = *(id *)(a1 + 40);
  v8 = *(id *)(a1 + 56);
  v6 = *(id *)(a1 + 32);
  v7 = *(id *)(a1 + 48);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);

}

void sub_D6328(uint64_t a1)
{
  id v2;
  id v3;

  if (*(_BYTE *)(a1 + 72))
  {
    objc_msgSend(*(id *)(a1 + 32), "_takeSnapshotWithConfiguration:retryOnBlank:completionHandler:", *(_QWORD *)(a1 + 40), 0, *(_QWORD *)(a1 + 64));
  }
  else
  {
    v2 = objc_retainBlock(*(id *)(a1 + 64));
    if (v2)
    {
      v3 = v2;
      (*((void (**)(id, _QWORD, _QWORD))v2 + 2))(v2, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
      v2 = v3;
    }

  }
}

id sub_D6548(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 168);
  if (!v2)
  {
    v3 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithCapacity:", 2);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 168);
    *(_QWORD *)(v4 + 168) = v3;

    v2 = *(void **)(*(_QWORD *)(a1 + 32) + 168);
  }
  return objc_msgSend(v2, "addObject:", *(_QWORD *)(a1 + 40));
}

void sub_D6A18(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_D6A34(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_loadWebViewFromMainThread");
    WeakRetained = v2;
  }

}

void sub_D7034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_D7060(uint64_t a1, void *a2, char a3)
{
  id WeakRetained;
  void *v6;
  uint64_t v7;
  id v8;

  v8 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  v6 = WeakRetained;
  if (WeakRetained)
  {
    LOBYTE(v7) = a3;
    objc_msgSend(WeakRetained, "_loadWebView:bookSnapshot:paginationOptions:stylesheetSet:cleanupOptions:cfiOptions:isConfigured:", v8, *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), v7);
  }

}

void sub_D7358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_D7380(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_didFinishConfiguringWebView");
    WeakRetained = v2;
  }

}

void sub_D75DC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  int v7;
  void *v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "searchBook"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "documentWithOrdinal:", objc_msgSend(*(id *)(a1 + 32), "ordinal")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "urlForDocument:", v3));
  v5 = _AESearchLog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v4;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_ERROR, "Timeout while loading document: %@", (uint8_t *)&v7, 0xCu);
  }

}

void sub_D7990(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_D79AC(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_startFindPerformIndexingFromMainThread:", *(unsigned __int8 *)(a1 + 40));
    WeakRetained = v3;
  }

}

void sub_D7B4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_D7B78(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  NSObject *v6;
  id v7;

  v7 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    if (objc_msgSend(WeakRetained, "_indexTextContent:", v7))
    {
      objc_msgSend(v4, "_startFind");
    }
    else
    {
      v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "findSemaphore"));

      if (v5)
      {
        v6 = objc_claimAutoreleasedReturnValue(objc_msgSend(v4, "findSemaphore"));
        dispatch_semaphore_signal(v6);

      }
    }
  }

}

void sub_D7FD4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  NSObject *v6;
  int v7;
  void *v8;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "searchBook"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "documentWithOrdinal:", objc_msgSend(*(id *)(a1 + 32), "ordinal")));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "urlForDocument:", v3));
  v5 = _AESearchLog();
  v6 = objc_claimAutoreleasedReturnValue(v5);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    v7 = 138412290;
    v8 = v4;
    _os_log_impl(&dword_0, v6, OS_LOG_TYPE_ERROR, "Timeout while searching document: %@", (uint8_t *)&v7, 0xCu);
  }

}

void sub_D8318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_D8344(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  NSObject *v6;
  int v7;
  id v8;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = _AESearchLog();
    v6 = objc_claimAutoreleasedReturnValue(v5);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      v7 = 138412290;
      v8 = v3;
      _os_log_impl(&dword_0, v6, OS_LOG_TYPE_DEFAULT, "setSelectedRange result: %@", (uint8_t *)&v7, 0xCu);
    }

    objc_msgSend(WeakRetained, "_startWebKitFind");
  }

}

void sub_D8FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_D9004(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  id v5;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained, "_addResultsWithPhysicalPageHrefs:selectedRangeResult:", *(_QWORD *)(a1 + 32), v5);

}

void sub_D965C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_D9698(void *a1)
{
  void *v1;
  void *v2;

  if (a1)
  {
    v1 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "dataUsingEncoding:", 4));
    v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSJSONSerialization JSONObjectWithData:options:error:](NSJSONSerialization, "JSONObjectWithData:options:error:", v1, 0, 0));

  }
  else
  {
    v2 = 0;
  }
  return v2;
}

uint64_t sub_D96F4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_D9704(uint64_t a1)
{

}

void sub_D970C(uint64_t a1, void *a2)
{
  id v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  double v34;
  double v35;
  void *v36;
  id v37;

  v3 = a2;
  *(_QWORD *)&v4 = objc_opt_class(NSNumber).n128_u64[0];
  v6 = v5;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", CFSTR("left"), v4));
  v8 = BUDynamicCast(v6, v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue(v8);
  objc_msgSend(v9, "doubleValue");
  v11 = v10;

  *(_QWORD *)&v12 = objc_opt_class(NSNumber).n128_u64[0];
  v14 = v13;
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", CFSTR("top"), v12));
  v16 = BUDynamicCast(v14, v15);
  v17 = (void *)objc_claimAutoreleasedReturnValue(v16);
  objc_msgSend(v17, "doubleValue");
  v19 = v18;

  *(_QWORD *)&v20 = objc_opt_class(NSNumber).n128_u64[0];
  v22 = v21;
  v23 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", CFSTR("width"), v20));
  v24 = BUDynamicCast(v22, v23);
  v25 = (void *)objc_claimAutoreleasedReturnValue(v24);
  objc_msgSend(v25, "doubleValue");
  v27 = v26;

  *(_QWORD *)&v28 = objc_opt_class(NSNumber).n128_u64[0];
  v30 = v29;
  v31 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "objectForKey:", CFSTR("height"), v28));

  v32 = BUDynamicCast(v30, v31);
  v33 = (void *)objc_claimAutoreleasedReturnValue(v32);
  objc_msgSend(v33, "doubleValue");
  v35 = v34;

  v36 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  v37 = (id)objc_claimAutoreleasedReturnValue(+[NSValue valueWithRect:](NSValue, "valueWithRect:", v11, v19, v27, v35));
  objc_msgSend(v36, "addObject:", v37);

}

void sub_DDB04(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  id *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  void *v20;
  unsigned __int8 v21;
  id v22;
  void *v23;
  void *v24;
  _QWORD v25[4];
  id v26;
  BOOL v27;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pdfDocumentCache"));
  v3 = objc_msgSend(v2, "copyCacheObjectForURL:", *(_QWORD *)(a1 + 40));

  v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "document"));
  if (!v4)
    v4 = objc_msgSend(objc_alloc((Class)PDFDocument), "initWithURL:", *(_QWORD *)(a1 + 40));
  v5 = *(id **)(a1 + 32);
  v6 = v5[126];
  if (v4 != v6)
  {
    objc_storeStrong(v5 + 126, v4);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1008), "setShowsAnnotations:", 1);
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1008), "setPDFAKControllerDelegate:");
    v7 = objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "pdfUndoManager"));
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(v8 + 1032);
    *(_QWORD *)(v8 + 1032) = v7;

    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 992), "setDocument:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 1008));
    v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pdfView"));
    objc_msgSend(v10, "setMaxScaleFactor:", 32.0);

    v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "searchViewControllerIfLoaded"));
    v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "searchString"));

    if (objc_msgSend(v12, "length"))
    {
      v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "searchViewController"));
      v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v13, "searchController"));
      objc_msgSend(v14, "beginSearchWithReportAnalytics:", 1);

    }
    objc_msgSend(*(id *)(a1 + 32), "loadAKToolbarView");

    v5 = *(id **)(a1 + 32);
  }
  v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "initialJumpLocation"));

  if (v15)
  {
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "initialJumpLocation"));
    objc_msgSend(*(id *)(a1 + 32), "setLocation:", v16);

    objc_msgSend(*(id *)(a1 + 32), "setInitialJumpLocation:", 0);
  }
  v17 = *(_QWORD **)(a1 + 32);
  v18 = (void *)v17[22];
  if (v18)
  {
    v19 = v18;
  }
  else
  {
    v19 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v17, "location"));
    if (!v19)
      goto LABEL_13;
  }
  v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentPageLocation"));
  v21 = objc_msgSend(v19, "isEqual:", v20);

  if ((v21 & 1) == 0)
  {
    v24 = *(void **)(a1 + 32);
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    v25[2] = sub_DDDD0;
    v25[3] = &unk_1C19F8;
    v26 = *(id *)(a1 + 48);
    v27 = v4 != v6;
    objc_msgSend(v24, "jumpToLocation:animated:completion:", v19, 0, v25);

    goto LABEL_17;
  }
LABEL_13:
  v22 = objc_retainBlock(*(id *)(a1 + 48));
  v23 = v22;
  if (v22)
    (*((void (**)(id, BOOL, _QWORD))v22 + 2))(v22, v4 != v6, 0);

LABEL_17:
}

void sub_DDDD0(uint64_t a1)
{
  id v2;
  id v3;

  v2 = objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    (*((void (**)(id, _QWORD, uint64_t))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 40), 1);
    v2 = v3;
  }

}

uint64_t sub_DDE18(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_DE34C(uint64_t a1)
{
  id v1;

  v1 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pdfView"));
  objc_msgSend(v1, "forceTileRefresh");

}

void sub_DEC8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_DECA8(uint64_t a1, char a2, char a3)
{
  id WeakRetained;
  BOOL v7;
  id v8;
  id v9;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if ((a2 & 1) != 0
      || (v8 = WeakRetained, v7 = objc_msgSend(*(id *)(a1 + 32), "layout") == (char *)&dword_0 + 2,
                             WeakRetained = v8,
                             v7))
    {
      if (*(_QWORD *)(a1 + 48) != 0x7FFFFFFFFFFFFFFFLL && (a3 & 1) == 0)
      {
        v9 = WeakRetained;
        objc_msgSend(WeakRetained, "scrollToPageNumber:animate:", +[BKPDFModernBookViewController pageNumberForPageIndex:](BKPDFModernBookViewController, "pageNumberForPageIndex:"), 0);
        WeakRetained = v9;
      }
    }
  }

}

void sub_E0830(uint64_t a1)
{
  double v3;
  id v4;

  if (*(double *)(a1 + 40) == CGPointZero.x && *(double *)(a1 + 48) == CGPointZero.y)
  {
    v3 = *(double *)(a1 + 56);
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pdfView"));
    objc_msgSend(v4, "setScaleFactor:", v3);
  }
  else
  {
    v4 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pdfView"));
    objc_msgSend(v4, "setScaleFactor:anchorPoint:", *(double *)(a1 + 56), *(double *)(a1 + 40), *(double *)(a1 + 48));
  }

}

void sub_E0C88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_E0CB0(uint64_t a1)
{
  id result;

  result = objc_msgSend(*(id *)(a1 + 32), "isSaving");
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  return result;
}

void sub_E0CE0(uint64_t a1)
{
  void *v2;
  id v3;

  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pdfDocument"));
  if (objc_msgSend(v3, "bookmarksChanged"))
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = 1;
  }
  else
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pdfDocument"));
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24) = objc_msgSend(v2, "documentChanged");

  }
}

id sub_E0E88(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setIsSaving:", 1);
}

void sub_E0E94(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  _QWORD v9[5];
  _QWORD v10[4];
  id v11;
  uint64_t v12;
  id v13;

  if ((objc_msgSend(*(id *)(a1 + 32), "bookmarksChanged") & 1) != 0
    || objc_msgSend(*(id *)(a1 + 32), "documentChanged"))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "book"));
    v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "url"));
    v13 = 0;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_E0FD4;
    v10[3] = &unk_1C1B00;
    v4 = *(id *)(a1 + 32);
    v5 = *(_QWORD *)(a1 + 40);
    v11 = v4;
    v12 = v5;
    +[BCUbiquityMetadataHelper replaceFileAndUpdateMetadata:metadata:error:fileWritingBlock:](BCUbiquityMetadataHelper, "replaceFileAndUpdateMetadata:metadata:error:fileWritingBlock:", v3, 0, &v13, v10);
    v6 = v13;

  }
  else
  {
    v7 = *(os_unfair_lock_s **)(a1 + 40);
    v8 = v7 + 242;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_E130C;
    v9[3] = &unk_1BEA38;
    v9[4] = v7;
    os_unfair_lock_lock(v7 + 242);
    sub_E130C((uint64_t)v9);
    os_unfair_lock_unlock(v8);
  }
}

void sub_E0FD4(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;
  uint64_t v6;
  NSObject *v7;
  void *v8;
  void *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  os_unfair_lock_s *v27;
  os_unfair_lock_s *v28;
  _QWORD v29[5];
  uint64_t v30;
  void *v31;
  uint8_t buf[4];
  uint64_t v33;
  __int16 v34;
  id v35;

  v5 = a2;
  v6 = BKModernPDFLog(v5);
  v7 = objc_claimAutoreleasedReturnValue(v6);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 141558274;
    v33 = 1752392040;
    v34 = 2112;
    v35 = v5;
    _os_log_impl(&dword_0, v7, OS_LOG_TYPE_DEFAULT, "PDF document save starting. Requesting append writing mode for %{mask.hash}@", buf, 0x16u);
  }

  v8 = *(void **)(a1 + 32);
  v30 = kPDFDocumentWriteOption_UseAppendMode;
  v31 = &__kCFBooleanTrue;
  v9 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjects:forKeys:count:](NSDictionary, "dictionaryWithObjects:forKeys:count:", &v31, &v30, 1));
  v10 = objc_msgSend(v8, "writeToURL:withOptions:", v5, v9);

  if (a3)
    *a3 = v10;
  v12 = BKModernPDFLog(v11);
  v13 = objc_claimAutoreleasedReturnValue(v12);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    LODWORD(v33) = v10;
    _os_log_impl(&dword_0, v13, OS_LOG_TYPE_DEFAULT, "PDF document save done. localSuccess = %{BOOL}d", buf, 8u);
  }

  if (v10)
  {
    v14 = (void *)objc_claimAutoreleasedReturnValue(+[NSFileManager defaultManager](NSFileManager, "defaultManager"));
    v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "path"));
    v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v14, "attributesOfItemAtPath:error:", v15, 0));

    v17 = objc_msgSend(v16, "fileSize");
    if (v17)
    {
      v18 = v17;
      v19 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "book"));
      v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v19, "fileSize"));
      v21 = objc_msgSend(v20, "longLongValue");

      if (v18 != v21)
      {
        v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "book"));
        v23 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", v18));
        objc_msgSend(v22, "setFileSize:", v23);

        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 88), "save:", 0);
      }
    }

  }
  if (objc_msgSend(*(id *)(a1 + 40), "coverNeedsUpdate"))
  {
    v24 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "sharedBookCoverResetter"));
    v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "book"));
    v26 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v25, "assetID"));
    objc_msgSend(v24, "resetCover:", v26);

    objc_msgSend(*(id *)(a1 + 40), "setCoverNeedsUpdate:", 0);
  }
  v27 = *(os_unfair_lock_s **)(a1 + 40);
  v28 = v27 + 242;
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_E1300;
  v29[3] = &unk_1BEA38;
  v29[4] = v27;
  os_unfair_lock_lock(v27 + 242);
  sub_E1300((uint64_t)v29);
  os_unfair_lock_unlock(v28);

}

id sub_E1300(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setIsSaving:", 0);
}

id sub_E130C(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "setIsSaving:", 0);
}

void sub_E2994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_E29B8(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "setAnnotationCountResults:", v3);

  objc_msgSend(WeakRetained, "setAnnotationCounter:", 0);
}

void sub_E2D94(uint64_t a1)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSObject *v13;

  objc_msgSend(*(id *)(a1 + 32), "clearSelection");
  *(_QWORD *)&v2 = objc_opt_class(BKPageLocation).n128_u64[0];
  v4 = v3;
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "currentLocation", v2));
  v6 = BUDynamicCast(v4, v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue(v6);

  if (v7)
  {
    v8 = objc_msgSend(v7, "pageOffset");
    if (v8 != (id)0x7FFFFFFFFFFFFFFFLL)
    {
      v9 = v8;
      v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pdfDocument"));
      v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v10, "pageAtIndex:", v9));

      v12 = BKModernPDFLog(objc_msgSend(v11, "setBookmarked:", objc_msgSend(v11, "isBookmarked") ^ 1));
      v13 = objc_claimAutoreleasedReturnValue(v12);
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
        sub_11D588(v11);

    }
  }

}

void sub_E3238(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "scrub:isScrubbing:", *(_QWORD *)(a1 + 32), 1);

}

void sub_E3A78(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  id v7;

  v5 = a2;
  v7 = objc_msgSend(objc_alloc((Class)UIMenuItem), "initWithTitle:action:", v5, a3);

  v6 = v7;
  if (v7)
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v7);
    v6 = v7;
  }

}

void sub_E4790(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

double _BKFontCellAppearanceFontHeight()
{
  double result;
  unsigned int v2;

  if (!+[UIFont bc_accessibilityFontSizesEnabled](UIFont, "bc_accessibilityFontSizesEnabled"))return 40.0;
  if ((+[UIFont bc_contentSizeCategoryIsGreaterThan:](UIFont, "bc_contentSizeCategoryIsGreaterThan:", UIContentSizeCategoryAccessibilityExtraLarge) & 1) != 0)return 80.0;
  v2 = +[UIFont bc_contentSizeCategoryIsGreaterThan:](UIFont, "bc_contentSizeCategoryIsGreaterThan:", UIContentSizeCategoryAccessibilityLarge);
  result = 50.0;
  if (v2)
    return 60.0;
  return result;
}

void _BKFontCellMaxImageHeight()
{
  +[IMRadialProgressButton minimumBoundingBox](IMRadialProgressButton, "minimumBoundingBox");
  _BKFontCellAppearanceFontHeight();
}

double _BKFontTableViewSizePaddingForContentSizeCategory(void *a1)
{
  id v1;
  double v2;

  v1 = a1;
  v2 = 0.0;
  if ((objc_msgSend(v1, "isEqualToString:", UIContentSizeCategoryExtraSmall) & 1) == 0)
  {
    if (objc_msgSend(v1, "isEqualToString:", UIContentSizeCategorySmall))
      v2 = 3.0;
    else
      v2 = 6.0;
  }

  return v2;
}

void sub_E6564(uint64_t a1)
{
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 112);
  v3 = (id)objc_claimAutoreleasedReturnValue(+[NSIndexPath indexPathForRow:inSection:](NSIndexPath, "indexPathForRow:inSection:", *(_QWORD *)(a1 + 40), 0));
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSArray arrayWithObject:](NSArray, "arrayWithObject:", v3));
  objc_msgSend(v1, "reloadRowsAtIndexPaths:withRowAnimation:", v2, 5);

}

id sub_E7CC4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id result;

  result = objc_msgSend(a2, "count");
  if ((unint64_t)result >= 2)
    return _objc_msgSend(*(id *)(a1 + 32), "removeAttribute:range:", CFSTR("UIAccessibilityTokenLowPitch"), a3, a4);
  return result;
}

void sub_E7E94(id a1)
{
  AETestDriver *v1;
  void *v2;

  v1 = objc_alloc_init(AETestDriver);
  v2 = (void *)qword_20F788;
  qword_20F788 = (uint64_t)v1;

}

uint64_t sub_E8AA8(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;

  v5 = a3;
  v6 = a2;
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v6, "superview"));
  objc_msgSend(v6, "frame");
  v9 = v8;
  v11 = v10;

  objc_msgSend(v7, "convertPoint:toView:", *(_QWORD *)(a1 + 32), v9, v11);
  v13 = v12;

  v14 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v5, "superview"));
  objc_msgSend(v5, "frame");
  v16 = v15;
  v18 = v17;

  objc_msgSend(v14, "convertPoint:toView:", *(_QWORD *)(a1 + 32), v16, v18);
  v20 = v19;

  if (v13 < v20)
    return -1;
  else
    return v13 != v20;
}

id sub_E9578(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_setupScrollView");
  return objc_msgSend(*(id *)(a1 + 32), "_displayPagesForOffset:", (char *)objc_msgSend(*(id *)(a1 + 32), "pageNumberBeforeTransition") - 1);
}

void sub_E95B0(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  _QWORD v17[4];
  id v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];

  objc_msgSend(*(id *)(a1 + 32), "setAnimating:", 0);
  objc_msgSend(*(id *)(a1 + 32), "setPageNumberBeforeTransition:", 0x7FFFFFFFFFFFFFFFLL);
  objc_msgSend(*(id *)(a1 + 32), "_updatePages");
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pageViews"));
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v21;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v21 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v7, "setNeedsLayout");
        *(_QWORD *)&v8 = objc_opt_class(BKPictureBookContentViewController).n128_u64[0];
        v10 = v9;
        v11 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "delegate", v8));
        v12 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v11, "contentViewControllerForPageNumber:", objc_msgSend(v7, "pageNumber")));
        v13 = BUDynamicCast(v10, v12);
        v14 = (void *)objc_claimAutoreleasedReturnValue(v13);

        objc_msgSend(*(id *)(a1 + 32), "_applyAdditionalScale:", v14);
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v4);
  }
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 3221225472;
  v17[2] = sub_E979C;
  v17[3] = &unk_1BFDB8;
  v15 = *(_QWORD *)(a1 + 32);
  v18 = v2;
  v19 = v15;
  v16 = v2;
  +[UIView animateWithDuration:animations:](UIView, "animateWithDuration:animations:", v17, 0.2);

}

void sub_E979C(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  void *i;
  void *v7;
  id v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];

  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v4; i = (char *)i + 1)
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v10 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v7, "setAlpha:", 1.0, (_QWORD)v10);
        v8 = objc_msgSend(v7, "pageNumber");
        if (v8 == objc_msgSend(*(id *)(a1 + 40), "pageNumberBeforeTransition"))
        {
          v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v7, "pageScrollerPageView"));
          objc_msgSend(v9, "setScrollState:", 2);

        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }

}

BOOL sub_E9990(id a1, UIView *a2, NSDictionary *a3)
{
  UIView *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v3 = a2;
  v4 = objc_opt_class(BKPictureBookPageContainerView);
  v5 = BUDynamicCast(v4, v3);
  v6 = (void *)objc_claimAutoreleasedReturnValue(v5);

  return v6 != 0;
}

id sub_EA678(uint64_t a1)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MaxY;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGFloat v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;

  objc_msgSend(*(id *)(a1 + 32), "frameForPageNumber:", *(_QWORD *)(a1 + 40));
  x = v25.origin.x;
  y = v25.origin.y;
  width = v25.size.width;
  height = v25.size.height;
  MaxY = CGRectGetMaxY(v25);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 192), "frame");
  if (MaxY > CGRectGetMaxY(v26))
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 192), "frame");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v27.origin.x = x;
    v27.origin.y = y;
    v27.size.width = width;
    v27.size.height = height;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 192), "setFrame:", v8, v10, v12, CGRectGetMaxY(v27));
  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 192), "frame");
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "setContentSize:", 0.0, CGRectGetMaxY(v28));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "frame");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "view"));
  objc_msgSend(v21, "bounds");
  v22 = CGRectGetWidth(v29);
  v30.origin.x = v14;
  v30.origin.y = v16;
  v30.size.width = v18;
  v30.size.height = v20;
  v23 = (v22 - CGRectGetWidth(v30)) * 0.5;

  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 184), "setFrame:", v23, v16, v18, v20);
}

void sub_EAEBC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unsigned int v6;
  BOOL v7;
  BOOL v8;
  id v9;

  v9 = a2;
  if (*(_QWORD *)(a1 + 40))
    v3 = 0;
  else
    v3 = objc_msgSend(*(id *)(a1 + 32), "shouldDisplaySpread") ^ 1;
  objc_msgSend(v9, "setHidden:", v3);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "book"));
  v6 = objc_msgSend(v5, "bkPageProgressionDirection");

  if (objc_msgSend(*(id *)(a1 + 32), "shouldDisplaySpread"))
  {
    if (v6 == 1)
      v7 = (v4 & 1) == 0;
    else
      v7 = v4;
    v8 = !v7;
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  objc_msgSend(v9, "setIsLeftPage:", v8);
  objc_msgSend(v9, "setIsRightPage:", v7);

}

void sub_EB4DC(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "layer"));
  v4 = objc_msgSend(v3, "CGContext");

  objc_msgSend(v5, "renderInContext:", v4);
}

void sub_EB78C(uint64_t a1, uint64_t a2)
{
  void *v3;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_imageViewForPageContentImage:", a2));
  objc_msgSend(*(id *)(a1 + 32), "setLeftContentView:", v3);

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_EB7D0(uint64_t a1, uint64_t a2)
{
  void *v3;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "_imageViewForPageContentImage:", a2));
  objc_msgSend(*(id *)(a1 + 32), "setRightContentView:", v3);

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_EB814(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;

  v7 = (id)objc_claimAutoreleasedReturnValue(+[UIGraphicsImageRendererFormat preferredFormat](UIGraphicsImageRendererFormat, "preferredFormat"));
  v2 = objc_alloc((Class)UIGraphicsImageRenderer);
  objc_msgSend(*(id *)(a1 + 32), "actualSize");
  v3 = objc_msgSend(v2, "initWithSize:format:", v7);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_EB900;
  v8[3] = &unk_1C1C50;
  v9 = *(id *)(a1 + 32);
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "imageWithActions:", v8));
  v5 = objc_retainBlock(*(id *)(a1 + 40));
  v6 = v5;
  if (v5)
    (*((void (**)(id, void *))v5 + 2))(v5, v4);

}

void sub_EB900(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "layer"));
  v4 = objc_msgSend(v3, "CGContext");

  objc_msgSend(v5, "renderInContext:", v4);
}

void sub_EB95C(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a2;
  v3 = objc_retainBlock(*(id *)(a1 + 32));
  v4 = v3;
  if (v3)
    (*((void (**)(id, id))v3 + 2))(v3, v5);

}

void sub_EBC2C(uint64_t a1)
{
  void (**v2)(void);
  void (**v3)(void);

  objc_msgSend(*(id *)(a1 + 32), "_setPageOffsetUncheckedImmediate:", *(_QWORD *)(a1 + 48));
  v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    v3 = v2;
    v2[2]();
    v2 = v3;
  }

}

void sub_EC434(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_EC450(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  char *v4;
  id v5;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double Height;
  CGFloat Width;
  double v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  void *i;
  void *v30;
  double v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  id v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (char *)objc_msgSend(WeakRetained, "currentPageNumber");
    v5 = objc_msgSend(v3, "_setupPageNumber:", v4);
    if ((objc_msgSend(v3, "animating") & 1) == 0)
    {
      v6 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "scrollView"));
      objc_msgSend(v6, "bounds");
      v8 = v7;
      v10 = v9;
      v12 = v11;
      v14 = v13;
      objc_msgSend(v6, "contentOffset");
      v16 = v15;
      objc_msgSend(v6, "zoomScale");
      v18 = v17;
      v42.origin.x = v8;
      v42.origin.y = v10;
      v42.size.width = v12;
      v42.size.height = v14;
      Height = CGRectGetHeight(v42);
      v43.origin.x = v8;
      v43.origin.y = v10;
      v43.size.width = v12;
      v43.size.height = v14;
      Width = CGRectGetWidth(v43);
      v44.origin.x = v8;
      v44.origin.y = v10;
      v44.size.width = v12;
      v44.size.height = v14;
      v21 = CGRectGetHeight(v44);
      v22 = (char *)objc_msgSend(v3, "pageCount");
      if ((unint64_t)v4 >= 5)
        v23 = (unint64_t)(v4 - 5);
      else
        v23 = 0;
      if (v4 + 5 >= v22 + 1)
        v24 = (unint64_t)(v22 + 1);
      else
        v24 = (unint64_t)(v4 + 5);
      v37 = 0u;
      v38 = 0u;
      v39 = 0u;
      v40 = 0u;
      v25 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "pageViews", 0));
      v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
      if (v26)
      {
        v27 = v26;
        v28 = *(_QWORD *)v38;
        do
        {
          for (i = 0; i != v27; i = (char *)i + 1)
          {
            if (*(_QWORD *)v38 != v28)
              objc_enumerationMutation(v25);
            v30 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * (_QWORD)i);
            if ((unint64_t)objc_msgSend(v30, "pageNumber") < v23
              || (unint64_t)objc_msgSend(v30, "pageNumber") > v24)
            {
              objc_msgSend(v3, "_teardownPageNumber:", objc_msgSend(v30, "pageNumber"));
            }
          }
          v27 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
        }
        while (v27);
      }

      if (v23 < v24)
      {
        v31 = v16 / v18 - Height;
        do
        {
          objc_msgSend(v3, "frameForPageNumber:", v23);
          v46.origin.x = v32;
          v46.origin.y = v33;
          v46.size.width = v34;
          v46.size.height = v35;
          v45.origin.x = 0.0;
          v45.origin.y = v31;
          v45.size.width = Width;
          v45.size.height = v21 * 3.0;
          ++v23;
          if (CGRectIntersectsRect(v45, v46))
            v36 = objc_msgSend(v3, "_setupPageNumber:", v23);
          else
            objc_msgSend(v3, "_teardownPageNumber:", v23);
        }
        while (v23 < v24);
      }

    }
  }

}

void sub_ED36C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_ED51C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_ED604(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_ED724(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_ED918(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_EDC28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromBKFontKind(unint64_t a1)
{
  if (a1 >= 5)
    return (__CFString *)(id)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Undefined(%ld)"), a1));
  else
    return off_1C1D78[a1];
}

void sub_EE4A0(id a1)
{
  dispatch_queue_t v1;
  void *v2;

  v1 = dispatch_queue_create("com.apple.iBooks.BKFont.lookup", 0);
  v2 = (void *)qword_20F798;
  qword_20F798 = (uint64_t)v1;

}

void sub_EE6C8(uint64_t a1)
{
  const __CTFontDescriptor *v2;
  const __CTFontDescriptor *v3;
  CFArrayRef MatchingFontDescriptors;
  const __CTFontDescriptor *v5;
  const __CTFontDescriptor *v6;
  CFArrayRef v7;
  CFTypeRef v8;
  id v9;

  v2 = CTFontDescriptorCreateWithAttributes(*(CFDictionaryRef *)(a1 + 32));
  if (v2)
  {
    v3 = v2;
    MatchingFontDescriptors = CTFontDescriptorCreateMatchingFontDescriptors(v2, 0);
    CFRelease(v3);
    if (!-[__CFArray count](MatchingFontDescriptors, "count"))
    {
      objc_msgSend(*(id *)(a1 + 32), "setValue:forKey:", kCFBooleanTrue, kCTFontDownloadableAttribute);
      v5 = CTFontDescriptorCreateWithAttributes(*(CFDictionaryRef *)(a1 + 32));
      if (v5)
      {
        v6 = v5;
        v7 = CTFontDescriptorCreateMatchingFontDescriptors(v5, 0);

        CFRelease(v6);
        MatchingFontDescriptors = v7;
      }
      else
      {

        MatchingFontDescriptors = 0;
      }
    }
    if (-[__CFArray count](MatchingFontDescriptors, "count"))
      v8 = CTFontDescriptorCopyLocalizedAttribute((CTFontDescriptorRef)-[__CFArray objectAtIndex:](MatchingFontDescriptors, "objectAtIndex:", 0), kCTFontFamilyNameAttribute, 0);
    else
      v8 = 0;
    v9 = (id)v8;
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

  }
}

void sub_EE8D0(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[5];
  id v6;

  v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_EE950;
  v5[3] = &unk_1BFDB8;
  v5[4] = *(_QWORD *)(a1 + 32);
  v6 = v3;
  v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

}

id sub_EE950(uint64_t a1)
{
  id v2;
  uint64_t v3;
  void *v4;

  objc_msgSend(*(id *)(a1 + 32), "willChangeValueForKey:", CFSTR("localizedName"));
  objc_msgSend(*(id *)(a1 + 32), "willChangeValueForKey:", CFSTR("displayName"));
  v2 = objc_msgSend(*(id *)(a1 + 40), "copy");
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 32);
  *(_QWORD *)(v3 + 32) = v2;

  objc_msgSend(*(id *)(a1 + 32), "didChangeValueForKey:", CFSTR("displayName"));
  return objc_msgSend(*(id *)(a1 + 32), "didChangeValueForKey:", CFSTR("localizedName"));
}

uint64_t sub_EF288(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t sub_EF294(uint64_t a1, int a2, void *a3)
{
  uint64_t v6;
  id v7;
  NSObject *v8;
  uint64_t v9;
  void *v10;
  const __CFString *v11;
  unsigned int v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  __CFString *v18;
  id v19;
  NSObject *v20;
  void *v21;
  _QWORD block[5];
  uint8_t buf[4];
  uint64_t v24;
  __int16 v25;
  const __CFString *v26;

  v6 = *(_QWORD *)(a1 + 32);
  if (*(_DWORD *)(v6 + 92) != a2)
  {
    v7 = _AEBookPluginsFontCacheLog();
    v8 = objc_claimAutoreleasedReturnValue(v7);
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      v9 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "familyName"));
      v10 = (void *)v9;
      if ((a2 - 1) > 7)
        v11 = CFSTR("Began");
      else
        v11 = off_1C1DA0[a2 - 1];
      *(_DWORD *)buf = 138543618;
      v24 = v9;
      v25 = 2114;
      v26 = v11;
      _os_log_impl(&dword_0, v8, OS_LOG_TYPE_DEFAULT, "%{public}@ status: %{public}@", buf, 0x16u);

    }
    v6 = *(_QWORD *)(a1 + 32);
  }
  *(_DWORD *)(v6 + 92) = a2;
  v12 = objc_msgSend(*(id *)(a1 + 32), "state");
  v13 = 1;
  switch(a2)
  {
    case 3:
    case 4:
      v14 = *(void **)(a1 + 32);
      v15 = 2;
      goto LABEL_12;
    case 5:
      v14 = *(void **)(a1 + 32);
      v15 = 3;
      goto LABEL_12;
    case 7:
      v14 = *(void **)(a1 + 32);
      v15 = 1;
LABEL_12:
      objc_msgSend(v14, "setState:", v15);
      goto LABEL_13;
    case 8:
      v18 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "objectForKey:", kCTFontDescriptorMatchingError));
      v19 = _AEBookPluginsFontCacheLog();
      v20 = objc_claimAutoreleasedReturnValue(v19);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      {
        v21 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "familyName"));
        *(_DWORD *)buf = 138543618;
        v24 = (uint64_t)v21;
        v25 = 2112;
        v26 = v18;
        _os_log_impl(&dword_0, v20, OS_LOG_TYPE_ERROR, "Error downloading %{public}@: %@", buf, 0x16u);

      }
      objc_msgSend(*(id *)(a1 + 32), "setState:", 4);

LABEL_13:
      v13 = 0;
      break;
    default:
      break;
  }
  if (v12 != objc_msgSend(*(id *)(a1 + 32), "state"))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_EF510;
    block[3] = &unk_1BEA38;
    block[4] = *(_QWORD *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  if (a2 == 1)
  {
    v16 = *(NSObject **)(a1 + 40);
    if (v16)
      dispatch_group_leave(v16);
  }
  return v13;
}

void sub_EF510(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", BEFontStateChangedNotification, *(_QWORD *)(a1 + 32));

}

void sub_EF76C(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", BEFontStateChangedNotification, *(_QWORD *)(a1 + 32));

}

uint64_t sub_EF7BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

id sub_EF7C8(uint64_t a1, int a2, void *a3)
{
  unsigned __int8 v6;
  _DWORD *v7;
  id v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  const __CFString *v12;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  double v18;
  double v19;
  float v20;
  double v21;
  uint64_t v22;
  BOOL v23;
  double v24;
  __CFString *v25;
  id v26;
  NSObject *v27;
  void *v28;
  int v29;
  _QWORD v30[5];
  _QWORD block[5];
  _QWORD v32[5];
  uint8_t buf[4];
  uint64_t v34;
  __int16 v35;
  const __CFString *v36;

  v6 = objc_msgSend(*(id *)(a1 + 32), "continueDownloading");
  v7 = *(_DWORD **)(a1 + 32);
  if ((v6 & 1) == 0)
    return objc_msgSend(v7, "continueDownloading");
  if (v7[23] != a2)
  {
    v8 = _AEBookPluginsFontCacheLog();
    v9 = objc_claimAutoreleasedReturnValue(v8);
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      v10 = objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "familyName"));
      v11 = (void *)v10;
      if ((a2 - 1) > 7)
        v12 = CFSTR("Began");
      else
        v12 = off_1C1DA0[a2 - 1];
      *(_DWORD *)buf = 138543618;
      v34 = v10;
      v35 = 2114;
      v36 = v12;
      _os_log_impl(&dword_0, v9, OS_LOG_TYPE_DEFAULT, "%{public}@ downloadstatus: %{public}@", buf, 0x16u);

    }
    v7 = *(_DWORD **)(a1 + 32);
  }
  v7[23] = a2;
  switch(a2)
  {
    case 0:
      objc_msgSend(*(id *)(a1 + 32), "setContinueDownloading:", 1);
      break;
    case 4:
      v14 = *(void **)(a1 + 32);
      v15 = 3;
      goto LABEL_24;
    case 5:
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "objectForKey:", kCTFontDescriptorMatchingTotalAssetSize));
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "objectForKey:", kCTFontDescriptorMatchingTotalDownloadedSize));
      v18 = (double)(uint64_t)objc_msgSend(v17, "longLongValue");
      v19 = v18 / (double)(uint64_t)objc_msgSend(v16, "longLongValue");
      objc_msgSend(*(id *)(a1 + 32), "downloadProgress");
      v21 = v20;
      if (v19 > v21)
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_EFC54;
        block[3] = &unk_1BEA38;
        block[4] = *(_QWORD *)(a1 + 32);
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      }
      *(float *)&v21 = v19;
      objc_msgSend(*(id *)(a1 + 32), "setDownloadProgress:", v21);
      objc_msgSend(*(id *)(a1 + 32), "setState:", 3);
      goto LABEL_22;
    case 6:
      v16 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "objectForKey:", kCTFontDescriptorMatchingTotalAssetSize));
      v22 = objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "objectForKey:", kCTFontDescriptorMatchingTotalDownloadedSize));
      v17 = (void *)v22;
      if (v16)
        v23 = v22 == 0;
      else
        v23 = 1;
      if (!v23 && objc_msgSend(v16, "isEqualToNumber:", v22))
      {
        objc_msgSend(*(id *)(a1 + 32), "setState:", 1);
        LODWORD(v24) = 1.0;
        objc_msgSend(*(id *)(a1 + 32), "setDownloadProgress:", v24);
      }
LABEL_22:

      break;
    case 7:
      v14 = *(void **)(a1 + 32);
      v15 = 1;
LABEL_24:
      objc_msgSend(v14, "setState:", v15);
      break;
    case 8:
      v25 = (__CFString *)objc_claimAutoreleasedReturnValue(objc_msgSend(a3, "objectForKey:", kCTFontDescriptorMatchingError));
      v26 = _AEBookPluginsFontCacheLog();
      v27 = objc_claimAutoreleasedReturnValue(v26);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        v28 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "familyName"));
        *(_DWORD *)buf = 138543618;
        v34 = (uint64_t)v28;
        v35 = 2114;
        v36 = v25;
        _os_log_impl(&dword_0, v27, OS_LOG_TYPE_ERROR, "Error downloading %{public}@: %{public}@", buf, 0x16u);

      }
      objc_msgSend(*(id *)(a1 + 32), "setState:", 4);
      objc_msgSend(*(id *)(a1 + 32), "setContinueDownloading:", 0);
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472;
      v32[2] = sub_EFC04;
      v32[3] = &unk_1BEA38;
      v32[4] = *(_QWORD *)(a1 + 32);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v32);

      break;
    default:
      break;
  }
  v29 = *(_DWORD *)(a1 + 40);
  if (v29 != objc_msgSend(*(id *)(a1 + 32), "state"))
  {
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 3221225472;
    v30[2] = sub_EFCA4;
    v30[3] = &unk_1BEA38;
    v30[4] = *(_QWORD *)(a1 + 32);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, v30);
  }
  return objc_msgSend(*(id *)(a1 + 32), "continueDownloading");
}

void sub_EFC04(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", BEFontDownloadFailedNotification, *(_QWORD *)(a1 + 32));

}

void sub_EFC54(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", BEFontDownloadProgressChangedNotification, *(_QWORD *)(a1 + 32));

}

void sub_EFCA4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", BEFontStateChangedNotification, *(_QWORD *)(a1 + 32));

}

void sub_EFDE4(uint64_t a1)
{
  id v2;

  v2 = (id)objc_claimAutoreleasedReturnValue(+[NSNotificationCenter defaultCenter](NSNotificationCenter, "defaultCenter"));
  objc_msgSend(v2, "postNotificationName:object:", BEFontStateChangedNotification, *(_QWORD *)(a1 + 32));

}

uint64_t sub_EFE34(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void sub_F1B74(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "updateTopToolbar:", 1);
  v2 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 352), "view"));
  objc_msgSend(v2, "setNeedsLayout");

}

id sub_F1BCC(uint64_t a1)
{
  void *v1;
  id v2;
  uint64_t v3;

  v1 = *(void **)(a1 + 32);
  v2 = objc_msgSend(v1, "currentPages");
  return objc_msgSend(v1, "updateScrubber:", v2, v3);
}

id sub_F2460(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setInitialJumpLocation:", 0);
}

void sub_F481C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;

  objc_msgSend(*(id *)(a1 + 32), "setTopToolBarVisible:", *(unsigned __int8 *)(a1 + 40));
  if (*(_BYTE *)(a1 + 40))
  {
    v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "scrubber"));
    objc_msgSend(v2, "loadAnyMissingThumbnails");

  }
  v3 = *(void **)(a1 + 32);
  v4 = objc_msgSend(v3, "currentPages");
  objc_msgSend(v3, "updateScrubber:", v4, v5);
  objc_msgSend(*(id *)(a1 + 32), "updateHUDVisibilityAnimated:", 0);
  objc_msgSend(*(id *)(a1 + 32), "updateBottomToolbar:", *(unsigned __int8 *)(a1 + 41));
  v6 = *(unsigned __int8 *)(a1 + 40);
  v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bookmarkBarButtonItem"));
  objc_msgSend(v7, "setIsAccessibilityElement:", v6);

  v8 = *(unsigned __int8 *)(a1 + 40);
  v9 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_searchBarButtonItem"));
  objc_msgSend(v9, "setIsAccessibilityElement:", v8);

}

id sub_F4A98(uint64_t a1)
{
  uint64_t v1;
  objc_super v3;

  v1 = *(_QWORD *)(a1 + 32);
  v3.receiver = *(id *)(a1 + 40);
  v3.super_class = (Class)BKThumbnailBookViewController;
  return objc_msgSendSuper2(&v3, "showTOC:", v1);
}

id sub_F4D78(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  objc_super v5;

  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "presentedViewController"));

  if (!v2 && (objc_msgSend(*(id *)(a1 + 32), "canShowControlsDuringOpenClose") & 1) == 0)
    objc_msgSend(*(id *)(a1 + 32), "setControlsVisible:animated:", 0, 0);
  v3 = *(_QWORD *)(a1 + 40);
  v5.receiver = *(id *)(a1 + 32);
  v5.super_class = (Class)BKThumbnailBookViewController;
  return objc_msgSendSuper2(&v5, "showLibrary:", v3);
}

void sub_F5D88(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  v5 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "layer"));
  v4 = objc_msgSend(v3, "CGContext");

  objc_msgSend(v5, "renderInContext:", v4);
}

id sub_F6844(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  return objc_msgSend(*(id *)(a1 + 40), "setFrame:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
}

id sub_F6878(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_zoomOutAnimationDidStop:", *(_QWORD *)(a1 + 40));
}

void sub_F6D64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_F6D80(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void **v14;
  uint64_t v15;
  id (*v16)(uint64_t);
  void *v17;
  id v18;
  id v19;
  _QWORD v20[4];
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  char v28;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  if (WeakRetained)
  {
    v5 = objc_msgSend(objc_alloc((Class)UIImageView), "initWithImage:", v3);
    objc_msgSend(v5, "setFrame:", *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104));
    v6 = (void *)objc_claimAutoreleasedReturnValue(+[UIColor clearColor](UIColor, "clearColor"));
    objc_msgSend(v5, "setBackgroundColor:", v6);

    objc_msgSend(v5, "setOpaque:", 0);
    objc_msgSend(v5, "setContentMode:", 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "view"));
    objc_msgSend(v7, "insertSubview:aboveSubview:", v5, *(_QWORD *)(a1 + 32));

    objc_msgSend(*(id *)(a1 + 40), "setAlpha:", 0.0);
    v8 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "view"));
    objc_msgSend(v8, "insertSubview:belowSubview:", *(_QWORD *)(a1 + 40), v5);

    objc_msgSend(WeakRetained, "updateBookContentConstraints");
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_F6F90;
    v20[3] = &unk_1C1E58;
    v21 = *(id *)(a1 + 32);
    v22 = WeakRetained;
    v28 = *(_BYTE *)(a1 + 112);
    v23 = v3;
    v9 = *(id *)(a1 + 48);
    v10 = *(_QWORD *)(a1 + 56);
    v11 = *(void **)(a1 + 64);
    v24 = v9;
    v25 = v10;
    v26 = v11;
    v27 = v5;
    v14 = _NSConcreteStackBlock;
    v15 = 3221225472;
    v16 = sub_F7120;
    v17 = &unk_1BFD90;
    v18 = WeakRetained;
    v19 = v27;
    v12 = v27;
    +[UIView animateWithDuration:animations:completion:](UIView, "animateWithDuration:animations:completion:", v20, &v14, 0.2);
    v13 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(WeakRetained, "view", v14, v15, v16, v17, v18));
    objc_msgSend(v13, "setUserInteractionEnabled:", 0);

  }
}

void sub_F6F90(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double Width;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  CGRect v25;
  CGRect v26;

  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + 40), "updateContentScale");
  v24 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "bookContentView"));
  objc_msgSend(v24, "bounds");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 40), "view"));
  objc_msgSend(v24, "convertRect:toView:", v10, v3, v5, v7, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  if (!*(_BYTE *)(a1 + 88))
    goto LABEL_13;
  v25.origin.x = v12;
  v25.origin.y = v14;
  v25.size.width = v16;
  v25.size.height = v18;
  Width = CGRectGetWidth(v25);
  objc_msgSend(*(id *)(a1 + 48), "size");
  v21 = v20;
  v23 = v22;
  if ((objc_msgSend(*(id *)(a1 + 56), "shouldDisplaySpread") & 1) == 0
    && !objc_msgSend(*(id *)(a1 + 64), "hasSpreadPages"))
  {
    goto LABEL_13;
  }
  if (objc_msgSend(*(id *)(a1 + 72), "showSpreads"))
  {
    if (Width + Width == v21 && v12 - Width >= 0.0)
      v12 = v12 - Width;
  }
  else
  {
    if ((objc_msgSend(*(id *)(a1 + 72), "showSpreads") & 1) != 0)
    {
LABEL_13:
      v23 = v18;
      v21 = v16;
      goto LABEL_14;
    }
    if (v12 - Width >= 0.0)
      v12 = v12 - Width;
  }
  if (v21 <= Width)
  {
    v26.origin.x = v12;
    v26.origin.y = v14;
    v26.size.width = v16;
    v26.size.height = v18;
    if (v23 <= CGRectGetHeight(v26))
      goto LABEL_13;
  }
LABEL_14:
  objc_msgSend(*(id *)(a1 + 80), "setFrame:", v12, v14, v21, v23);

}

id sub_F7120(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "_zoomInAnimationDidStop:", *(_QWORD *)(a1 + 40));
}

id sub_F7D84(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 904), "setAlpha:", 0.0);
}

void sub_F8100(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(a1 + 32), "_updatePageNumberHUDVisible:", *(unsigned __int8 *)(a1 + 40));
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "_bk_backgroundColor"));
  v2 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "backgroundView"));
  objc_msgSend(v2, "setBackgroundColor:", v3);

}

id sub_F8D14(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setSection:animated:adjustScrollToReveal:", 0, +[UIView areAnimationsEnabled](UIView, "areAnimationsEnabled"), 0);
}

id sub_F8F8C(uint64_t a1)
{
  uint64_t v2;
  objc_super v4;

  v2 = *(_QWORD *)(a1 + 40);
  v4.receiver = *(id *)(a1 + 32);
  v4.super_class = (Class)BKThumbnailBookViewController;
  objc_msgSendSuper2(&v4, "turnToPageNumber:animated:", v2, 0);
  return objc_msgSend(*(id *)(a1 + 32), "setSection:animated:adjustScrollToReveal:", 0, +[UIView areAnimationsEnabled](UIView, "areAnimationsEnabled"), 0);
}

id sub_FAA84(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double height;
  double v7;
  double v8;
  double v9;

  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
  objc_msgSend(*(id *)(a1 + 32), "frame");
  v3 = v2;
  v5 = v4;
  height = CGSizeZero.height;
  objc_msgSend(*(id *)(a1 + 32), "loupeWidth");
  v8 = v3 + floor(v7 * 0.5);
  objc_msgSend(*(id *)(a1 + 32), "loupeHeight");
  return objc_msgSend(*(id *)(a1 + 32), "setFrame:", v8, v5 + v9, CGSizeZero.width, height);
}

id sub_FB014(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;

  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(a1 + 32), "frame");
  v2 = *(void **)(a1 + 32);
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "superview"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "targetView"));
  objc_msgSend(v3, "convertPoint:fromView:", v4, *(double *)(a1 + 40), *(double *)(a1 + 48));
  objc_msgSend(v2, "loupePointForPoint:");
  v6 = v5;
  v8 = v7;

  objc_msgSend(*(id *)(a1 + 32), "loupeWidth");
  v10 = v9;
  objc_msgSend(*(id *)(a1 + 32), "loupeHeight");
  return objc_msgSend(*(id *)(a1 + 32), "setFrame:", v6, v8, v10, v11);
}

void sub_FB518(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FB578(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FB610(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_FB6B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_FB76C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_FB838(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_FBA5C(_Unwind_Exception *a1, uint64_t a2, void *a3, ...)
{
  void *v3;
  id *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, id);
  v19 = va_arg(va1, id);
  v20 = va_arg(va1, id);
  v21 = va_arg(va1, id);
  v22 = va_arg(va1, _QWORD);
  v23 = va_arg(va1, _QWORD);

  sub_FCED8((uint64_t *)va);
  _Block_object_dispose(va1, 8);
  objc_destroyWeak(v4);

  _Unwind_Resume(a1);
}

void sub_FBAD0(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

void sub_FBADC(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

uint64_t sub_FBAE4(uint64_t a1, void *a2, void *a3, void *a4, _QWORD *a5)
{
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  char v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  void *v27;
  char v28;
  unint64_t v29;
  char *v30;
  id v31;
  char **v32;
  char *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  BOOL v39;
  void *v40;
  char v41;
  id v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t (**WeakRetained)(id, void *, void *, void *, _QWORD *);
  void *v53;
  id v54;
  id v55;
  char v56;
  void *v57;
  char *v58;
  id *v59;
  id *v60;
  char *v61;
  id *v62;
  __int128 v63;
  void *v64;
  uint64_t v65;
  id v66;
  BOOL v67;
  id v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t (**v73)(id, void *, void *, _QWORD, char **);
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  unsigned int v81;
  void *v82;
  void *v83;
  id v84;
  id v85;
  _QWORD *v86;
  char **v87;
  id obj;
  id v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _QWORD v97[4];
  id v98;
  uint64_t v99;
  uint64_t *v100;
  char **v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  char v105;
  id v106;
  id v107;
  id v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  _QWORD v113[4];
  id v114;
  id v115;
  _QWORD *v116;
  uint64_t v117;
  _BYTE v118[128];
  _BYTE v119[128];

  v9 = a2;
  v113[0] = _NSConcreteStackBlock;
  v113[1] = 3321888768;
  v113[2] = sub_FC860;
  v113[3] = &unk_1C1EB0;
  v82 = a3;
  v83 = a4;
  v84 = a3;
  v114 = v84;
  v85 = a4;
  v115 = v85;
  v116 = a5;
  v87 = (char **)a5;
  v91 = a1;
  v117 = *(_QWORD *)(a1 + 72);
  v86 = objc_retainBlock(v113);
  v111 = 0u;
  v112 = 0u;
  v109 = 0u;
  v110 = 0u;
  obj = v9;
  v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v109, v119, 16);
  v81 = 1;
  if (!v10)
    goto LABEL_98;
  v90 = *(_QWORD *)v110;
LABEL_3:
  v89 = v10;
  v11 = 0;
  while (1)
  {
    if (*(_QWORD *)v110 != v90)
      objc_enumerationMutation(obj);
    v12 = *(void **)(*((_QWORD *)&v109 + 1) + 8 * v11);
    objc_opt_class(AEMinimalTemplateStepText);
    if ((objc_opt_isKindOfClass(v12, v13) & 1) != 0)
    {
      v14 = *(void **)(v91 + 32);
      v15 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "text"));
      objc_msgSend(v14, "appendString:", v15);
LABEL_47:

      goto LABEL_48;
    }
    objc_opt_class(AEMinimalTemplateStepField);
    if ((objc_opt_isKindOfClass(v12, v16) & 1) != 0)
    {
      v108 = 0;
      v17 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v12, "keyPath"));
      v18 = ((uint64_t (*)(_QWORD *, id *, void *))v86[2])(v86, &v108, v17);
      v15 = v108;

      if ((v18 & 1) == 0)
        goto LABEL_96;
      if (!v15)
        goto LABEL_47;
      v19 = *(void **)(v91 + 32);
      v20 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "description"));
      objc_msgSend(v19, "appendString:", v20);
      goto LABEL_46;
    }
    objc_opt_class(AEMinimalTemplateStepIf);
    if ((objc_opt_isKindOfClass(v12, v21) & 1) != 0)
    {
      v15 = v12;
      v107 = 0;
      v22 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "conditional"));
      v23 = ((uint64_t (*)(_QWORD *, id *, void *))v86[2])(v86, &v107, v22);
      v20 = v107;

      if ((v23 & 1) == 0)
        goto LABEL_95;
      if (v20)
      {
        objc_opt_class(NSString);
        if ((objc_opt_isKindOfClass(v20, v24) & 1) != 0)
        {
          v25 = objc_msgSend(v20, "length") != 0;
        }
        else
        {
          objc_opt_class(NSNumber);
          if ((objc_opt_isKindOfClass(v20, v44) & 1) != 0)
          {
            v25 = objc_msgSend(v20, "BOOLValue");
          }
          else
          {
            objc_opt_class(NSNull);
            v25 = objc_opt_isKindOfClass(v20, v50) ^ 1;
          }
        }
      }
      else
      {
        v25 = 0;
      }
      v51 = objc_msgSend(v15, "negated");
      WeakRetained = (uint64_t (**)(id, void *, void *, void *, _QWORD *))objc_loadWeakRetained((id *)(*(_QWORD *)(*(_QWORD *)(v91 + 64) + 8) + 40));
      v53 = (void *)(((v25 ^ v51) & 1) != 0
                   ? objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "thenSteps"))
                   : objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "elseSteps")));
      v54 = v84;
      v55 = v85;
      v56 = ((uint64_t (**)(id, void *, void *, void *, char **))WeakRetained)[2](WeakRetained, v53, v82, v83, v87);

      if ((v56 & 1) == 0)
        goto LABEL_95;
      goto LABEL_46;
    }
    objc_opt_class(AEMinimalTemplateStepRange);
    if ((objc_opt_isKindOfClass(v12, v26) & 1) != 0)
    {
      v15 = v12;
      v106 = 0;
      v27 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "keyPath"));
      v28 = ((uint64_t (*)(_QWORD *, id *, void *))v86[2])(v86, &v106, v27);
      v20 = v106;

      if ((v28 & 1) == 0)
        goto LABEL_95;
      if (!v20)
      {
LABEL_46:

        goto LABEL_47;
      }
      v30 = v87[1];
      v29 = (unint64_t)v87[2];
      if ((unint64_t)v30 >= v29)
      {
        v45 = (v30 - *v87) >> 4;
        if ((unint64_t)(v45 + 1) >> 60)
          sub_BB574();
        v46 = v29 - (_QWORD)*v87;
        v47 = v46 >> 3;
        if (v46 >> 3 <= (unint64_t)(v45 + 1))
          v47 = v45 + 1;
        if ((unint64_t)v46 >= 0x7FFFFFFFFFFFFFF0)
          v48 = 0xFFFFFFFFFFFFFFFLL;
        else
          v48 = v47;
        if (v48)
        {
          if (v48 >> 60)
            sub_BB630();
          v49 = (char *)operator new(16 * v48);
        }
        else
        {
          v49 = 0;
        }
        v58 = &v49[16 * v45];
        *(_QWORD *)v58 = v84;
        *((_QWORD *)v58 + 1) = v85;
        v32 = v87;
        v59 = (id *)*v87;
        v60 = (id *)v87[1];
        if (v60 == (id *)*v87)
        {
          v33 = v58 + 16;
          *v87 = v58;
          v87[1] = v58 + 16;
          v87[2] = &v49[16 * v48];
          if (!v59)
            goto LABEL_65;
        }
        else
        {
          v61 = v58;
          v62 = (id *)v87[1];
          do
          {
            v63 = *((_OWORD *)v62 - 1);
            v62 -= 2;
            *v62 = 0;
            v62[1] = 0;
            *((_OWORD *)v61 - 1) = v63;
            v61 -= 16;
          }
          while (v62 != v59);
          v33 = v58 + 16;
          *v87 = v61;
          v87[1] = v58 + 16;
          v87[2] = &v49[16 * v48];
          do
          {

            v64 = *(v60 - 2);
            v60 -= 2;

          }
          while (v60 != v59);
          v32 = v87;
          if (!v59)
            goto LABEL_65;
        }
        operator delete(v59);
        v32 = v87;
      }
      else
      {
        *(_QWORD *)v30 = v84;
        v31 = v85;
        v32 = v87;
        *((_QWORD *)v30 + 1) = v31;
        v33 = v30 + 16;
      }
LABEL_65:
      v32[1] = v33;
      objc_opt_class(NSDictionary);
      if ((objc_opt_isKindOfClass(v20, v65) & 1) != 0)
      {
        v102 = 0;
        v103 = &v102;
        v104 = 0x2020000000;
        v105 = 1;
        v97[0] = _NSConcreteStackBlock;
        v97[1] = 3221225472;
        v97[2] = sub_FCDE4;
        v97[3] = &unk_1C1EE8;
        v99 = *(_QWORD *)(v91 + 64);
        v66 = v15;
        v100 = &v102;
        v101 = v87;
        v98 = v66;
        objc_msgSend(v20, "enumerateKeysAndObjectsUsingBlock:", v97);
        v67 = *((_BYTE *)v103 + 24) == 0;

        _Block_object_dispose(&v102, 8);
        if (v67)
          goto LABEL_95;
      }
      else
      {
        if (!objc_msgSend(v20, "conformsToProtocol:", &OBJC_PROTOCOL___NSFastEnumeration))
        {
          if (*(_QWORD *)(v91 + 72))
          {
            v68 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "keyPath"));
            v79 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", CFSTR("Attempted to use range with a non-enumerable context"), NSLocalizedDescriptionKey, v68, CFSTR("keyPath"), 0));
            **(_QWORD **)(v91 + 72) = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("AEMinimalTemplateErrorDomain"), 3, v79));

            goto LABEL_94;
          }
LABEL_95:

          goto LABEL_96;
        }
        v95 = 0u;
        v96 = 0u;
        v93 = 0u;
        v94 = 0u;
        v68 = v20;
        v69 = objc_msgSend(v68, "countByEnumeratingWithState:objects:count:", &v93, v118, 16);
        if (v69)
        {
          v70 = *(_QWORD *)v94;
LABEL_71:
          v71 = 0;
          while (1)
          {
            if (*(_QWORD *)v94 != v70)
              objc_enumerationMutation(v68);
            v72 = *(void **)(*((_QWORD *)&v93 + 1) + 8 * v71);
            v73 = (uint64_t (**)(id, void *, void *, _QWORD, char **))objc_loadWeakRetained((id *)(*(_QWORD *)(*(_QWORD *)(v91 + 64) + 8) + 40));
            v74 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "steps"));
            LOBYTE(v72) = v73[2](v73, v74, v72, 0, v87);

            if ((v72 & 1) == 0)
              break;
            if (v69 == (id)++v71)
            {
              v69 = objc_msgSend(v68, "countByEnumeratingWithState:objects:count:", &v93, v118, 16);
              if (v69)
                goto LABEL_71;
              goto LABEL_77;
            }
          }
LABEL_94:

          goto LABEL_95;
        }
LABEL_77:

      }
      sub_FE020((uint64_t)v87, (uint64_t)(v87[1] - 16));
      goto LABEL_46;
    }
    objc_opt_class(AEMinimalTemplateStepEmbed);
    if ((objc_opt_isKindOfClass(v12, v34) & 1) != 0)
      break;
LABEL_48:
    if ((id)++v11 == v89)
    {
      v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v109, v119, 16);
      if (!v10)
      {
        v81 = 1;
        goto LABEL_98;
      }
      goto LABEL_3;
    }
  }
  if (*(_QWORD *)(v91 + 40))
  {
    v15 = v12;
    v35 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(v91 + 40), "templates"));
    v36 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "name"));
    v20 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v35, "objectForKey:", v36));

    if (!v20)
    {
      if (!*(_QWORD *)(v91 + 72))
        goto LABEL_95;
      v75 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "name"));
      v76 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("No such template named '%@' in embed"), v75));
      v77 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "name"));
      v78 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v76, v77, CFSTR("name"), 0));
      **(_QWORD **)(v91 + 72) = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("AEMinimalTemplateErrorDomain"), 4, v78));

LABEL_90:
      goto LABEL_95;
    }
    objc_msgSend(*(id *)(v91 + 48), "addObject:", v20);
    if ((unint64_t)objc_msgSend(*(id *)(v91 + 48), "countForObject:", v20) >= 0xA)
    {
      if (!*(_QWORD *)(v91 + 72))
        goto LABEL_95;
      v75 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", CFSTR("Cycle detected in {{embed}}"), NSLocalizedDescriptionKey, 0));
      **(_QWORD **)(v91 + 72) = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("AEMinimalTemplateErrorDomain"), 6, v75));
      goto LABEL_90;
    }
    v37 = *(id *)(v91 + 56);
    v38 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "keyPath"));
    v39 = v38 == 0;

    if (v39)
    {
      v42 = v37;
    }
    else
    {
      v92 = v37;
      v40 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v15, "keyPath"));
      v41 = ((uint64_t (*)(_QWORD *, id *, void *))v86[2])(v86, &v92, v40);
      v42 = v92;

      if ((v41 & 1) == 0)
      {
        v43 = 1;
        goto LABEL_55;
      }
    }
    v57 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v20, "evaluateWithData:templateSet:cycleContext:error:", v42, *(_QWORD *)(v91 + 40), *(_QWORD *)(v91 + 48), *(_QWORD *)(v91 + 72)));
    objc_msgSend(*(id *)(v91 + 48), "removeObject:", v20);
    if (v57)
    {
      objc_msgSend(*(id *)(v91 + 32), "appendString:", v57);
      v43 = 0;
    }
    else
    {
      v43 = 1;
    }

LABEL_55:
    if (v43)
      goto LABEL_97;
    goto LABEL_48;
  }
  if (!*(_QWORD *)(v91 + 72))
    goto LABEL_97;
  v15 = (id)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObject:forKey:](NSDictionary, "dictionaryWithObject:forKey:", CFSTR("Template is not part of a set"), NSLocalizedDescriptionKey));
  **(_QWORD **)(v91 + 72) = (id)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("AEMinimalTemplateErrorDomain"), 4, v15));
LABEL_96:

LABEL_97:
  v81 = 0;
LABEL_98:

  return v81;
}

void sub_FC648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,void *a62,void *a63)
{
  void *v63;
  void *v64;
  void *v65;
  void *v66;

  _Unwind_Resume(a1);
}

uint64_t sub_FC860(uint64_t a1, _QWORD *a2, void *a3)
{
  id v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD **v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v28;
  void *v30;
  id v31;
  id v32;

  v4 = a3;
  v32 = *(id *)(a1 + 32);
  v31 = *(id *)(a1 + 40);
  v5 = *(uint64_t **)(a1 + 48);
  v7 = *v5;
  v6 = v5[1];
  v8 = (char *)objc_msgSend(v4, "length");
  v30 = v4;
  if (v8)
  {
    v28 = a1;
    v9 = 0;
    while (1)
    {
      v10 = (char *)objc_msgSend(v30, "rangeOfString:options:range:", CFSTR("."), 0, v9, v8);
      v12 = &v8[(_QWORD)v9];
      v13 = v10 == (char *)0x7FFFFFFFFFFFFFFFLL ? 0 : v11;
      v14 = v10 == (char *)0x7FFFFFFFFFFFFFFFLL ? &v8[(_QWORD)v9] : v10;
      v15 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "substringWithRange:", v9, v14 - v9));
      if (objc_msgSend(v15, "isEqualToString:", CFSTR("$key")))
        break;
      if (!objc_msgSend(v15, "isEqualToString:", CFSTR("$parent")))
        goto LABEL_17;
      if (v6 == v7)
      {
        v23 = (_QWORD **)(v28 + 56);
        if (!*(_QWORD *)(v28 + 56))
          goto LABEL_28;
        v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Unknown key path '%@'"), v15));
        v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v24, NSLocalizedDescriptionKey, v30, CFSTR("NSUnknownUserInfoKey"), 0));
        v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("AEMinimalTemplateErrorDomain"), 2, v25));
        goto LABEL_27;
      }
      v16 = *(void **)(v6 - 16);
      v6 -= 16;
      v17 = v16;

      v18 = *(id *)(v6 + 8);
      v9 = &v14[v13];
      v8 = (char *)(v12 - &v14[v13]);

      v31 = v18;
      v32 = v17;
      if (!v8)
      {
        v31 = v18;
        v32 = v17;
        goto LABEL_18;
      }
    }
    if (v31)
    {
      v19 = v31;

      v31 = 0;
      v32 = v19;
      v9 = &v14[v13];
      v8 = (char *)(v12 - &v14[v13]);
LABEL_17:

      goto LABEL_18;
    }
    v23 = (_QWORD **)(v28 + 56);
    if (*(_QWORD *)(v28 + 56))
    {
      v24 = (void *)objc_claimAutoreleasedReturnValue(+[NSString stringWithFormat:](NSString, "stringWithFormat:", CFSTR("Unknown key path '%@'"), v15));
      v25 = (void *)objc_claimAutoreleasedReturnValue(+[NSDictionary dictionaryWithObjectsAndKeys:](NSDictionary, "dictionaryWithObjectsAndKeys:", v24, NSLocalizedDescriptionKey, v30, CFSTR("NSUnknownUserInfoKey"), 0));
      v26 = (void *)objc_claimAutoreleasedReturnValue(+[NSError errorWithDomain:code:userInfo:](NSError, "errorWithDomain:code:userInfo:", CFSTR("AEMinimalTemplateErrorDomain"), 2, v25));
      v31 = 0;
LABEL_27:
      **v23 = v26;

      goto LABEL_28;
    }
    v31 = 0;
LABEL_28:

    v22 = 0;
    v20 = v30;
  }
  else
  {
    v9 = 0;
LABEL_18:
    v20 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v30, "substringWithRange:", v9, v8));

    if (objc_msgSend(v20, "length") && (objc_msgSend(v20, "isEqualToString:", CFSTR(".")) & 1) == 0)
      v21 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(v32, "valueForKeyPath:", v20));
    else
      v21 = objc_retainAutorelease(v32);
    *a2 = v21;
    v22 = 1;
  }

  return v22;
}

void sub_FCBBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, void *a18)
{
  void *v18;
  void *v19;
  void *v20;

  _Unwind_Resume(a1);
}

id sub_FCD84(uint64_t a1, uint64_t a2)
{
  id result;

  *(_QWORD *)(a1 + 32) = *(id *)(a2 + 32);
  result = *(id *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void sub_FCDBC(uint64_t a1)
{

}

void sub_FCDE4(uint64_t a1, void *a2, void *a3, _BYTE *a4)
{
  id v7;
  id v8;
  uint64_t (**WeakRetained)(id, void *, id);
  void *v10;
  id v11;
  char v12;
  id v13;

  v7 = a2;
  v8 = a3;
  WeakRetained = (uint64_t (**)(id, void *, id))objc_loadWeakRetained((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40)
                                                                                                 + 8)
                                                                                     + 40));
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "steps"));
  v11 = v8;
  v13 = v7;
  v12 = WeakRetained[2](WeakRetained, v10, v11);

  if ((v12 & 1) == 0)
  {
    *a4 = 1;
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 0;
  }

}

void sub_FCEB4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  _Unwind_Resume(a1);
}

uint64_t *sub_FCED8(uint64_t *a1)
{
  if (*a1)
  {
    sub_FE020((uint64_t)a1, *a1);
    operator delete((void *)*a1);
  }
  return a1;
}

void sub_FDA10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,void *a21,uint64_t a22,void *a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38)
{
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;

  _Block_object_dispose((const void *)(v44 - 184), 8);
  _Block_object_dispose((const void *)(v44 - 136), 8);

  _Unwind_Resume(a1);
}

uint64_t sub_FDBC8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void sub_FDBD8(uint64_t a1)
{

}

void sub_FDBE0(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  char isKindOfClass;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;

  v3 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  v12 = v3;
  if (v4)
  {
    objc_opt_class(AEMinimalTemplateStepIf);
    isKindOfClass = objc_opt_isKindOfClass(v4, v5);
    v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    if ((isKindOfClass & 1) != 0)
    {
      v8 = v7;
      v9 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "elseSteps"));

      if (v9)
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "elseSteps"));
      else
        v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v8, "thenSteps"));
      objc_msgSend(v10, "addObject:", v12);

      goto LABEL_10;
    }
    objc_opt_class(AEMinimalTemplateStepRange);
    if ((objc_opt_isKindOfClass(v7, v11) & 1) != 0)
    {
      v8 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "steps"));
      objc_msgSend(v8, "addObject:", v12);
LABEL_10:

    }
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);
  }

}

void sub_FDCF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;
  void *v11;
  void *v12;

  v12 = v11;

  _Unwind_Resume(a1);
}

void sub_FDD28(uint64_t a1, void *a2)
{
  char *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;

  v7 = a2;
  v3 = (char *)objc_msgSend(v7, "length");
  if (v3)
  {
    v4 = 0;
    do
    {
      v5 = (char *)objc_msgSend(v7, "rangeOfCharacterFromSet:options:range:", *(_QWORD *)(a1 + 32), 0, v4, v3 - v4);
      if (v5 == (char *)0x7FFFFFFFFFFFFFFFLL)
        break;
      ++*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);
      v4 = &v5[v6];
    }
    while (&v5[v6] < v3);
  }

}

void sub_FDDB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_FDE68(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_FDFD0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_FE020(uint64_t a1, uint64_t a2)
{
  uint64_t i;
  void *v5;

  for (i = *(_QWORD *)(a1 + 8); i != a2; i -= 16)
  {

    v5 = *(void **)(i - 16);
  }
  *(_QWORD *)(a1 + 8) = a2;
}

void sub_FE398(id a1)
{
  objc_class *v1;

  v1 = +[UIViewController be_PDFPageViewControllerClass](UIViewController, "be_PDFPageViewControllerClass");
  if (v1)
    sub_FE3D0(v1, "autoScaleFactor", "be_autoScaleFactor");
}

void sub_FE3D0(objc_class *a1, const char *a2, const char *a3)
{
  objc_method *InstanceMethod;
  objc_method *v7;
  objc_method *v8;
  void (*Implementation)(void);
  const char *TypeEncoding;
  void (*v11)(void);
  const char *v12;

  InstanceMethod = class_getInstanceMethod(a1, a2);
  v7 = class_getInstanceMethod(a1, a3);
  if (InstanceMethod)
  {
    v8 = v7;
    if (v7)
    {
      Implementation = method_getImplementation(v7);
      TypeEncoding = method_getTypeEncoding(v8);
      if (class_addMethod(a1, a2, Implementation, TypeEncoding))
      {
        v11 = method_getImplementation(InstanceMethod);
        v12 = method_getTypeEncoding(InstanceMethod);
        class_replaceMethod(a1, a3, v11, v12);
      }
      else
      {
        method_exchangeImplementations(InstanceMethod, v8);
      }
    }
  }
}

void sub_FE4E4(id a1)
{
  qword_20F7B0 = (uint64_t)NSClassFromString(CFSTR("PDFPageViewController"));
}

void sub_FE530(id a1)
{
  objc_class *v1;

  objc_opt_class(PDFView);
  if (v1)
    sub_FE3D0(v1, "autoScaleFactor", "be_autoScaleFactor");
}

uint64_t sub_FE7D8()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_109D34(v0, qword_20EA48);
  sub_109D1C(v0, (uint64_t)qword_20EA48);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x8000000000164BC0, 0xD000000000000028, 0x8000000000164750);
}

uint64_t sub_FE89C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_trackerHost;
  swift_beginAccess(v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_trackerHost, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_FE934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_trackerHost;
  swift_beginAccess(v3, v5, 1, 0);
  swift_unknownObjectWeakAssign(v3, a1);
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_FE98C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = *a1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_trackerHost;
  swift_beginAccess(v3, v5, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  *a2 = result;
  return result;
}

uint64_t sub_FE9E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = *a1;
  v3 = *a2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_trackerHost;
  swift_beginAccess(v3, v5, 1, 0);
  return swift_unknownObjectWeakAssign(v3, v2);
}

void (*sub_FEA34(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___AEAudiobookAnalyticsRecorder_trackerHost;
  v3[4] = v1;
  v3[5] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  v3[3] = swift_unknownObjectWeakLoadStrong(v5);
  return sub_FEAA4;
}

void sub_FEAA4(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  swift_unknownObjectWeakAssign(*(_QWORD *)(*(_QWORD *)a1 + 32) + *(_QWORD *)(*(_QWORD *)a1 + 40), v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

uint64_t sub_FEB10@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6[24];

  v3 = *a1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource;
  swift_beginAccess(v3, v6, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_FEB68(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource;
  swift_beginAccess(v4, v6, 1, 0);
  *(_QWORD *)(v4 + 8) = v3;
  return swift_unknownObjectWeakAssign(v4, v2);
}

uint64_t sub_FEBC8()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource;
  swift_beginAccess(v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource, v3, 0, 0);
  return swift_unknownObjectWeakLoadStrong(v1);
}

uint64_t sub_FEC14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource;
  swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign(v5, a1);
  return swift_unknownObjectRelease(a1);
}

void (*sub_FEC7C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess(v1 + v4, v3, 33, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_FECF0;
}

void sub_FECF0(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48);
  *(_QWORD *)(v6 + 8) = v5;
  swift_unknownObjectWeakAssign(v6, v4);
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease(v3[3]);
    swift_endAccess(v3);
  }
  else
  {
    swift_endAccess(v3);
    swift_unknownObjectRelease(v4);
  }
  free(v3);
}

id sub_FED64()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id result;

  v0 = objc_msgSend((id)objc_opt_self(BKAudiobookPlayer), "sharedInstance");
  v1 = objc_msgSend((id)objc_opt_self(BKAudiobookMediaRemoteAdaptor), "startAdaptor");
  type metadata accessor for EventReporter(0);
  v2 = (void *)static EventReporter.shared.getter();
  v3 = objc_allocWithZone((Class)type metadata accessor for AudiobookAnalyticsRecorder(0));
  result = sub_FEE8C(v0, v1, v2);
  qword_20EA68 = (uint64_t)result;
  return result;
}

id static AudiobookAnalyticsRecorder.shared.getter()
{
  if (qword_20EA60 != -1)
    swift_once(&qword_20EA60, sub_FED64);
  return (id)qword_20EA68;
}

id sub_FEE8C(void *a1, void *a2, void *a3)
{
  char *v3;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  objc_super v31;

  swift_unknownObjectWeakInit(&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_trackerHost], 0);
  v7 = &v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource];
  *((_QWORD *)v7 + 1) = 0;
  swift_unknownObjectWeakInit(v7, 0);
  *(_QWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionAssertion] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAudiobook] = 0;
  v8 = &v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAssetID];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v9 = &v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionStartDate];
  v10 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_QWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionStartMediaTime] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_skipStartMediaTime] = 0;
  *(_DWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionPlaybackRate] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionTracker] = 0;
  v11 = &v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_doNotDisturbStatusAtStart];
  v12 = enum case for DoNotDisturbStatus.unknown(_:);
  v13 = type metadata accessor for DoNotDisturbStatus(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
  v14 = &v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentRoute];
  v15 = enum case for ListeningRoutedTo.unknown(_:);
  v16 = type metadata accessor for ListeningRoutedTo(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v14, v15, v16);
  v17 = &v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_previousCellularAccessTechnology];
  v18 = enum case for CellularRadioAccessTechnology.unknown(_:);
  v19 = type metadata accessor for CellularRadioAccessTechnology(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v17, v18, v19);
  *(_DWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentBitrate] = 0;
  *(_QWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_player] = a1;
  *(_QWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_mediaRemoteAdaptor] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_eventReporter] = a3;
  v31.receiver = v3;
  v31.super_class = (Class)type metadata accessor for AudiobookAnalyticsRecorder(0);
  v20 = a1;
  v21 = a2;
  v22 = a3;
  v23 = objc_msgSendSuper2(&v31, "init");
  v24 = (void *)objc_opt_self(NSNotificationCenter);
  v25 = v23;
  v26 = objc_msgSend(v24, "defaultCenter", v31.receiver, v31.super_class);
  objc_msgSend(v26, "addObserver:selector:name:object:", v25, "routeChanged:", MPAVRouteDidChangeNotification, 0);

  v27 = objc_msgSend(v24, "defaultCenter");
  v28 = BUNetworkMonitorInterfaceDidChangeNotification;
  v29 = v25;
  objc_msgSend(v27, "addObserver:selector:name:object:", v29, "networkChanged:", v28, 0);

  return v29;
}

void sub_FF170(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  unsigned int *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  unsigned int *v16;
  uint64_t v17;
  id v18;
  _OWORD v19[2];
  _BYTE v20[24];
  uint64_t v21;

  v3 = type metadata accessor for ListeningRoutedTo(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, "object");
  if (v7)
  {
    v8 = v7;
    _bridgeAnyObjectToAny(_:)(v19);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_108F48((uint64_t)v19, (uint64_t)v20);
  if (!v21)
  {
    sub_10988C((uint64_t)v20, &qword_20EDB0);
    return;
  }
  v9 = sub_1093C0(0, &qword_20EDB8, MPAVEndpointRoute_ptr);
  if ((swift_dynamicCast(&v18, v20, (char *)&type metadata for Any + 8, v9, 6) & 1) != 0)
  {
    v10 = v18;
    if (objc_msgSend(v18, "isCarplayRoute"))
    {
      v11 = (unsigned int *)&enum case for ListeningRoutedTo.carPlay(_:);
    }
    else if (objc_msgSend(v10, "isHomePodRoute"))
    {
      v11 = (unsigned int *)&enum case for ListeningRoutedTo.homePod(_:);
    }
    else if (objc_msgSend(v10, "isAppleTVRoute"))
    {
      v11 = (unsigned int *)&enum case for ListeningRoutedTo.appleTV(_:);
    }
    else if (objc_msgSend(v10, "isAirpodsRoute"))
    {
      v11 = (unsigned int *)&enum case for ListeningRoutedTo.airPods(_:);
    }
    else if (objc_msgSend(v10, "isHeadphonesRoute"))
    {
      v11 = (unsigned int *)&enum case for ListeningRoutedTo.headphones(_:);
    }
    else
    {
      if (!objc_msgSend(v10, "isDeviceSpeakerRoute"))
      {
        v15 = (char *)objc_msgSend(v10, "routeSubtype");
        v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
        if (v15 == (_BYTE *)&dword_10 + 3)
          v16 = (unsigned int *)&enum case for ListeningRoutedTo.carAudio(_:);
        else
          v16 = (unsigned int *)&enum case for ListeningRoutedTo.unknown(_:);
        v12 = *v16;
        goto LABEL_20;
      }
      v11 = (unsigned int *)&enum case for ListeningRoutedTo.device(_:);
    }
    v12 = *v11;
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
LABEL_20:
    v13(v6, v12, v3);
    v14 = v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentRoute;
    swift_beginAccess(v14, v20, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v14, v6, v3);
    swift_endAccess(v20);

  }
}

uint64_t sub_FF41C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char v15;
  uint64_t result;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v0 = type metadata accessor for CellularRadioAccessTechnology(0);
  v34 = *(_QWORD *)(v0 - 8);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v5 = (char *)&v33 - v4;
  v6 = type metadata accessor for CellularData(0);
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  v7 = *(_QWORD *)(v35 + 64);
  v8 = __chkstk_darwin(v6);
  v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - v9;
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char **)((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v14 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v15 = _dispatchPreconditionTest(_:)(v14);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    sub_100088();
    v18 = v17;
    v19 = sub_1046B0();
    v20 = BATracker.newSessionExtendingAssertion()(v19);
    v21 = CellularData.cellularRadioAccessTechnology.getter();
    CellularData.preCellularRadioAccessTechnology.getter(v21);
    v22 = sub_10AA94(&qword_20EDC0, (uint64_t (*)(uint64_t))&type metadata accessor for CellularRadioAccessTechnology, (uint64_t)&protocol conformance descriptor for CellularRadioAccessTechnology);
    v23 = dispatch thunk of static Equatable.== infix(_:_:)(v5, v3, v0, v22);
    v24 = *(void (**)(char *, uint64_t))(v34 + 8);
    v24(v3, v0);
    v24(v5, v0);
    if ((v23 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v36);

      return swift_unknownObjectRelease(v20);
    }
    else
    {
      v26 = v35;
      v25 = v36;
      v27 = v33;
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v33, v10, v36);
      v28 = *(unsigned __int8 *)(v26 + 80);
      v29 = (v28 + 24) & ~v28;
      v30 = (v7 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
      v31 = swift_allocObject(&unk_1C2440, v30 + 8, v28 | 7);
      *(_QWORD *)(v31 + 16) = v18;
      (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v31 + v29, v27, v25);
      *(_QWORD *)(v31 + v30) = v20;
      swift_unknownObjectRetain(v20);
      v32 = v18;
      BATracker.performAfterPrivateDataFetched(completionHandler:)(sub_109104, v31);

      swift_unknownObjectRelease(v20);
      swift_release(v31);
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v10, v25);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_FF7A4(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  id v4;

  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  v3 = swift_allocObject(&unk_1C1FF8, 32, 7);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = a1;
  v4 = v1;
  swift_unknownObjectRetain(a1);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_FF8C8, v3);
  return swift_release(v3);
}

uint64_t sub_FF824(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v4 = OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost);
  if (!v5)
  {
    v6 = *(void **)(a1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_player);
    objc_msgSend(v6, "addObserver:", a1);
    v7 = objc_msgSend(v6, "skipController");
    objc_msgSend(v7, "addObserver:", a1);

    v5 = *(_QWORD *)(a1 + v4);
  }
  *(_QWORD *)(a1 + v4) = a2;
  swift_unknownObjectRetain(a2);
  return swift_unknownObjectRelease(v5);
}

uint64_t sub_FF8C8()
{
  uint64_t v0;

  return sub_FF824(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_FF974()
{
  return sub_FFA24((uint64_t)&unk_1C2020, (uint64_t)sub_FFA08);
}

uint64_t sub_FF988(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;

  v2 = *(void **)(a1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_player);
  v3 = objc_msgSend(v2, "skipController");
  objc_msgSend(v3, "removeObserver:", a1);

  objc_msgSend(v2, "removeObserver:", a1);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost);
  *(_QWORD *)(a1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost) = 0;
  return swift_unknownObjectRelease(v4);
}

uint64_t sub_FFA08()
{
  uint64_t v0;

  return sub_FF988(*(_QWORD *)(v0 + 16));
}

uint64_t sub_FFA10()
{
  return sub_FFA24((uint64_t)&unk_1C2048, (uint64_t)sub_FFA98);
}

uint64_t sub_FFA24(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  id v6;

  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  v5 = swift_allocObject(a1, 24, 7);
  *(_QWORD *)(v5 + 16) = v2;
  v6 = v2;
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(a2, v5);
  return swift_release(v5);
}

void sub_FFA9C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  double v20;
  void *v21;
  uint64_t v22;
  NSString v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void *v27;
  _BYTE v28[24];
  char v29[24];

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_108F90(&qword_20EDE8);
  v7 = __chkstk_darwin(v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  v11 = &v28[-v10];
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v28[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v16 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v17 = (uint64_t)&v1[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionStartDate];
    swift_beginAccess(&v1[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionStartDate], v29, 0, 0);
    sub_109DE8(v17, (uint64_t)v11, &qword_20EDE8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2))
    {
      sub_10988C((uint64_t)v11, &qword_20EDE8);
      v18 = 0.0;
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 16))(v5, v11, v2);
      v19 = sub_10988C((uint64_t)v11, &qword_20EDE8);
      v20 = Date.timeIntervalSinceNow.getter(v19);
      (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
      v18 = -v20;
    }
    v21 = *(void **)&v1[OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost];
    if (!v21)
      goto LABEL_8;
    v22 = *(_QWORD *)&v1[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAssetID + 8];
    if (v22)
    {
      swift_unknownObjectRetain(*(_QWORD *)&v1[OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost]);
      swift_bridgeObjectRetain(v22);
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v22);
      objc_msgSend(v21, "playSessionDidEnd:playTime:", v23, v18);

      swift_unknownObjectRelease(v21);
LABEL_8:
      v24 = swift_allocObject(&unk_1C2620, 24, 7);
      *(_QWORD *)(v24 + 16) = v1;
      v25 = v1;
      sub_1029E8((uint64_t)sub_109E2C, v24);
      swift_release(v24);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v9, 1, 1, v2);
      swift_beginAccess(v17, v28, 33, 0);
      sub_109D74((uint64_t)v9, v17);
      swift_endAccess(v28);
      v26 = *(_QWORD *)&v25[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAudiobook];
      *(_QWORD *)&v25[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAudiobook] = 0;
      swift_unknownObjectRelease(v26);
      v27 = *(void **)&v25[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionTracker];
      *(_QWORD *)&v25[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionTracker] = 0;

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id Document.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), "init");
}

void AudiobookAnalyticsRecorder.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("AEBookPlugins.AudiobookAnalyticsRecorder", 40, "init()", 6, 0);
  __break(1u);
}

id AudiobookAnalyticsRecorder.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiobookAnalyticsRecorder(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for AudiobookAnalyticsRecorder(uint64_t a1)
{
  uint64_t result;

  result = qword_20EB98;
  if (!qword_20EB98)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for AudiobookAnalyticsRecorder);
  return result;
}

void sub_100088()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *Strong;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  _BYTE v10[24];

  v1 = *(void **)(v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionTracker);
  if (v1)
    goto LABEL_6;
  v2 = v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_trackerHost;
  swift_beginAccess(v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_trackerHost, v10, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = Strong;
    v5 = objc_msgSend(Strong, "trackerForAudiobookAnalytics");
    swift_unknownObjectRelease(v4);
    if (v5)
      goto LABEL_6;
  }
  v6 = *(void **)(v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost);
  if (v6
    && (v7 = objc_msgSend(v6, "primaryAnalyticsController"),
        v8 = dispatch thunk of AnalyticsController.applicationTracker.getter(),
        v7,
        v8))
  {
LABEL_6:
    v9 = v1;
  }
  else
  {
    __break(1u);
  }
}

id AudiobookAnalyticsRecorder.skipController(_:willBeginSkippingIn:)()
{
  uint64_t v0;
  id result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_player), "positionInCurrentAudiobook");
  *(_QWORD *)(v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_skipStartMediaTime) = v2;
  return result;
}

uint64_t AudiobookAnalyticsRecorder.skipControllerDidEndSkipping(_:actionSource:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unsigned int *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = type metadata accessor for SkipActionType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    v7 = (unsigned int *)&enum case for SkipActionType.unknown(_:);
LABEL_5:
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *v7, v3);
    sub_1002F4((uint64_t)v6);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  if (a2 == 1)
  {
    v7 = (unsigned int *)&enum case for SkipActionType.buttonTap(_:);
    goto LABEL_5;
  }
  type metadata accessor for BKAudiobookActionSource(0);
  v11 = a2;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(v9, &v11, v9, &type metadata for UInt);
  __break(1u);
  return result;
}

void type metadata accessor for BKAudiobookActionSource(uint64_t a1)
{
  sub_108EE0(a1, &qword_20EDA8, (uint64_t)&unk_1C2380);
}

id sub_1002F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  id result;
  void *v31;
  void *v32;
  float v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char v98[24];

  v2 = v1;
  v74 = a1;
  v94 = type metadata accessor for SkipData(0);
  v79 = *(_QWORD *)(v94 - 8);
  v3 = __chkstk_darwin(v94);
  v89 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v4;
  __chkstk_darwin(v3);
  v91 = (uint64_t)&v68 - v5;
  v6 = type metadata accessor for ErrorData(0);
  v92 = *(_QWORD *)(v6 - 8);
  v93 = v6;
  v7 = __chkstk_darwin(v6);
  v87 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v8;
  __chkstk_darwin(v7);
  v88 = (char *)&v68 - v9;
  v90 = type metadata accessor for BitRateData(0);
  v78 = *(_QWORD *)(v90 - 8);
  v10 = __chkstk_darwin(v90);
  v84 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = v11;
  __chkstk_darwin(v10);
  v86 = (char *)&v68 - v12;
  v73 = type metadata accessor for ListeningRoutedTo(0);
  v72 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v14 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ListeningActionSourceType(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for ListeningActionSourceData(0);
  v96 = *(_QWORD *)(v85 - 8);
  v18 = *(_QWORD *)(v96 + 64);
  v19 = __chkstk_darwin(v85);
  v81 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v82 = (char *)&v68 - v20;
  v95 = type metadata accessor for ContentData(0);
  v83 = *(_QWORD *)(v95 - 8);
  v21 = *(_QWORD *)(v83 + 64);
  v22 = __chkstk_darwin(v95);
  v80 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v68 - v23;
  v25 = type metadata accessor for DispatchPredicate(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (uint64_t *)((char *)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v28 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v26 + 104))(v28, enum case for DispatchPredicate.onQueue(_:), v25);
  v29 = _dispatchPreconditionTest(_:)(v28);
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v26 + 8))(v28, v25);
  if ((v29 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_100088();
  v32 = v31;
  result = objc_msgSend(*(id *)(v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_player), "isStreaming");
  v71 = v32;
  v70 = v18;
  if (!(_DWORD)result)
  {
    v34 = 0;
    goto LABEL_8;
  }
  v33 = *(float *)(v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentBitrate);
  if ((~LODWORD(v33) & 0x7F800000) == 0)
    goto LABEL_10;
  if (v33 <= -2147500000.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v33 < 2147500000.0)
  {
    v34 = (int)v33;
LABEL_8:
    v35 = v24;
    v69 = v24;
    sub_1033A0((uint64_t)v24);
    sub_10402C((uint64_t)v17);
    v36 = v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentRoute;
    swift_beginAccess(v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentRoute, v98, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v14, v36, v73);
    v37 = v82;
    ListeningActionSourceData.init(listeningActionSourceType:listeningRoutedTo:)(v17, v14);
    v97 = 0;
    v38 = v86;
    BitRateData.init(prevBitRate:bitRate:)(v34, v34);
    v39 = v88;
    sub_10456C();
    v40 = v91;
    sub_1049A0(v74, v91);
    v41 = v83;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v35, v95);
    v42 = v96;
    (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v81, v37, v85);
    v43 = v78;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v84, v38, v90);
    v44 = v92;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v87, v39, v93);
    v45 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v89, v40, v94);
    v46 = *(unsigned __int8 *)(v41 + 80);
    v47 = (v46 + 24) & ~v46;
    v48 = *(unsigned __int8 *)(v42 + 80);
    v49 = (v21 + v48 + v47) & ~v48;
    v50 = *(unsigned __int8 *)(v43 + 80);
    v51 = (v70 + v50 + v49) & ~v50;
    v52 = *(unsigned __int8 *)(v44 + 80);
    v53 = (v75 + v52 + v51) & ~v52;
    v54 = *(unsigned __int8 *)(v45 + 80);
    v55 = (v76 + v54 + v53) & ~v54;
    v56 = swift_allocObject(&unk_1C2738, v55 + v77, v46 | v48 | v50 | v52 | v54 | 7);
    v57 = v71;
    *(_QWORD *)(v56 + 16) = v71;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v56 + v47, v80, v95);
    v58 = v56 + v49;
    v59 = v85;
    (*(void (**)(uint64_t, char *, uint64_t))(v96 + 32))(v58, v81, v85);
    v60 = v56 + v51;
    v61 = v90;
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v60, v84, v90);
    v62 = v56 + v53;
    v64 = v92;
    v63 = v93;
    (*(void (**)(uint64_t, char *, uint64_t))(v92 + 32))(v62, v87, v93);
    v65 = v56 + v55;
    v66 = v94;
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v65, v89, v94);
    v67 = v57;
    BATracker.performAfterPrivateDataFetched(completionHandler:)(sub_10A9BC, v56);

    swift_release(v56);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v91, v66);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v88, v63);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v86, v61);
    (*(void (**)(char *, uint64_t))(v96 + 8))(v82, v59);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v69, v95);
  }
LABEL_12:
  __break(1u);
  return result;
}

void AudiobookAnalyticsRecorder.player(_:audiobookWillChange:)()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionAssertion))
    sub_FFA9C();
}

void AudiobookAnalyticsRecorder.player(_:stateDidChangeFrom:to:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_108A0C(a1, a3);
}

void sub_100B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  int v21;
  void *v22;
  void *v23;
  char v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[5];
  uint64_t v49;

  v1 = v0;
  v2 = type metadata accessor for DoNotDisturbStatus(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_108F90(&qword_20EDE8);
  __chkstk_darwin(v6);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchPredicate(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (_QWORD *)((char *)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  v13 = _dispatchPreconditionTest(_:)(v12);
  (*(void (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    return;
  }
  sub_100088();
  v14 = OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionTracker;
  v15 = *(void **)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionTracker);
  *(_QWORD *)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionTracker) = v16;

  Date.init()();
  v17 = type metadata accessor for Date(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v8, 0, 1, v17);
  v18 = v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionStartDate;
  swift_beginAccess(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionStartDate, aBlock, 33, 0);
  sub_109D74((uint64_t)v8, v18);
  swift_endAccess(aBlock);
  v19 = *(void **)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_player);
  objc_msgSend(v19, "positionInCurrentAudiobook");
  *(_QWORD *)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionStartMediaTime) = v20;
  objc_msgSend(v19, "playbackRate");
  *(_DWORD *)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionPlaybackRate) = v21;
  sub_100088();
  v23 = v22;
  v24 = BATracker.optedIn.getter();

  if ((v24 & 1) == 0)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for DoNotDisturbStatus.unknown(_:), v2);
    v31 = v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_doNotDisturbStatusAtStart;
    swift_beginAccess(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_doNotDisturbStatusAtStart, aBlock, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v31, v5, v2);
    swift_endAccess(aBlock);
    v28 = *(void **)(v1 + v14);
    if (v28)
      goto LABEL_4;
LABEL_6:
    v30 = 0;
    goto LABEL_7;
  }
  v25 = (void *)objc_opt_self(BADoNotDisturbHelper);
  v26 = swift_allocObject(&unk_1C25D0, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16, v1);
  aBlock[4] = sub_109DE0;
  v49 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1028DC;
  aBlock[3] = &unk_1C25E8;
  v27 = _Block_copy(aBlock);
  swift_release(v49);
  objc_msgSend(v25, "fetchCurrentState:", v27);
  _Block_release(v27);
  v28 = *(void **)(v1 + v14);
  if (!v28)
    goto LABEL_6;
LABEL_4:
  v29 = v28;
  v30 = BATracker.newSessionAssertion()();

LABEL_7:
  v32 = *(_QWORD *)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionAssertion);
  *(_QWORD *)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionAssertion) = v30;
  swift_unknownObjectRelease(v32);
  v33 = objc_msgSend(v19, "currentAudiobook");
  v34 = OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAudiobook;
  v35 = *(_QWORD *)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAudiobook);
  *(_QWORD *)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAudiobook) = v33;
  swift_unknownObjectRelease(v35);
  v36 = *(void **)(v1 + v34);
  if (v36)
  {
    v37 = objc_msgSend(v36, "assetID");
    v39 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37, v38);
    v41 = v40;

  }
  else
  {
    v39 = 0;
    v41 = 0;
  }
  v42 = (uint64_t *)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAssetID);
  v43 = *(_QWORD *)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAssetID + 8);
  *v42 = v39;
  v42[1] = v41;
  swift_bridgeObjectRelease(v43);
  sub_100088();
  v45 = v44;
  v46 = type metadata accessor for PlayEvent(0);
  v47 = sub_10AA94(&qword_20EF28, (uint64_t (*)(uint64_t))&type metadata accessor for PlayEvent, (uint64_t)&protocol conformance descriptor for PlayEvent);
  BATracker.time<A>(_:submitAndRestartWithSession:)(v46, 0, v46, v47);

}

id sub_100F9C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  id result;
  void *v32;
  void *v33;
  void *v34;
  float v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char v106[8];

  v1 = v0;
  v2 = sub_108F90(&qword_20EEC0);
  __chkstk_darwin(v2);
  v94 = (uint64_t)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for ErrorData(0);
  v86 = *(_QWORD *)(v102 - 8);
  v4 = __chkstk_darwin(v102);
  v98 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = v5;
  __chkstk_darwin(v4);
  v99 = (char *)&v74 - v6;
  v7 = type metadata accessor for BitRateData(0);
  v100 = *(_QWORD *)(v7 - 8);
  v101 = v7;
  v8 = __chkstk_darwin(v7);
  v95 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v9;
  __chkstk_darwin(v8);
  v96 = (char *)&v74 - v10;
  v82 = type metadata accessor for ListeningRoutedTo(0);
  v80 = *(_QWORD *)(v82 - 8);
  __chkstk_darwin(v82);
  v81 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ListeningActionSourceType(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for ListeningActionSourceData(0);
  v93 = *(_QWORD *)(v97 - 8);
  v15 = __chkstk_darwin(v97);
  v89 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = v16;
  __chkstk_darwin(v15);
  v90 = (char *)&v74 - v17;
  v92 = type metadata accessor for ListeningSessionData(0);
  v104 = *(_QWORD *)(v92 - 8);
  v18 = *(_QWORD *)(v104 + 64);
  v19 = __chkstk_darwin(v92);
  v88 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (char *)&v74 - v20;
  v103 = type metadata accessor for ContentData(0);
  v91 = *(_QWORD *)(v103 - 8);
  v22 = *(_QWORD *)(v91 + 64);
  v23 = __chkstk_darwin(v103);
  v87 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v25 = (char *)&v74 - v24;
  v26 = type metadata accessor for DispatchPredicate(0);
  v27 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v29 = (uint64_t *)((char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v29 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v27 + 104))(v29, enum case for DispatchPredicate.onQueue(_:), v26);
  v30 = _dispatchPreconditionTest(_:)(v29);
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v27 + 8))(v29, v26);
  if ((v30 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v32 = v1;
  sub_100088();
  v34 = v33;
  result = objc_msgSend(*(id *)&v1[OBJC_IVAR___AEAudiobookAnalyticsRecorder_player], "isStreaming");
  v79 = v34;
  v78 = v18;
  v77 = v22;
  if (!(_DWORD)result)
  {
    v36 = 0;
    goto LABEL_8;
  }
  v35 = *(float *)&v1[OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentBitrate];
  if ((~LODWORD(v35) & 0x7F800000) == 0)
    goto LABEL_10;
  if (v35 <= -2147500000.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v35 < 2147500000.0)
  {
    v36 = (int)v35;
LABEL_8:
    v37 = v25;
    v76 = v25;
    sub_1033A0((uint64_t)v25);
    v106[0] = 1;
    v75 = v21;
    sub_103D2C(0x100000000uLL, 0x100000000uLL);
    sub_10402C((uint64_t)v14);
    v38 = &v1[OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentRoute];
    swift_beginAccess(&v1[OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentRoute], v106, 0, 0);
    v39 = v81;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v81, v38, v82);
    v40 = v90;
    ListeningActionSourceData.init(listeningActionSourceType:listeningRoutedTo:)(v14, v39);
    v105 = 0;
    v41 = v96;
    BitRateData.init(prevBitRate:bitRate:)(v36, v36);
    v42 = v99;
    sub_10456C();
    v43 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v94, 1, 1, v43);
    v44 = v91;
    (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v87, v37, v103);
    v45 = v104;
    (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v88, v21, v92);
    v46 = v93;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v89, v40, v97);
    v47 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v95, v41, v101);
    v48 = v86;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v98, v42, v102);
    v49 = *(unsigned __int8 *)(v44 + 80);
    v50 = (v49 + 48) & ~v49;
    v51 = *(unsigned __int8 *)(v45 + 80);
    v52 = (v77 + v51 + v50) & ~v51;
    v53 = *(unsigned __int8 *)(v46 + 80);
    v54 = (v78 + v53 + v52) & ~v53;
    v55 = *(unsigned __int8 *)(v47 + 80);
    v56 = (v83 + v55 + v54) & ~v55;
    v57 = *(unsigned __int8 *)(v48 + 80);
    v58 = (v84 + v57 + v56) & ~v57;
    v59 = (char *)swift_allocObject(&unk_1C24E0, v58 + v85, v49 | v51 | v53 | v55 | v57 | 7);
    *((_QWORD *)v59 + 2) = 0;
    *((_QWORD *)v59 + 3) = 0;
    v60 = v79;
    *((_QWORD *)v59 + 4) = v32;
    *((_QWORD *)v59 + 5) = v60;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(&v59[v50], v87, v103);
    v61 = &v59[v52];
    v62 = v92;
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v61, v88, v92);
    v63 = &v59[v54];
    v64 = v93;
    v65 = v97;
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v63, v89, v97);
    v66 = &v59[v56];
    v68 = v100;
    v67 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v66, v95, v101);
    v69 = &v59[v58];
    v70 = v102;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v69, v98, v102);
    v71 = v32;
    v72 = v60;
    v73 = sub_106578(v94, (uint64_t)&unk_20EED0, (uint64_t)v59);

    swift_release(v73);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v99, v70);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v96, v67);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v90, v65);
    (*(void (**)(char *, uint64_t))(v104 + 8))(v75, v62);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v76, v103);
  }
LABEL_12:
  __break(1u);
  return result;
}

id AudiobookAnalyticsRecorder.player(_:playbackRateDidChange:)(float a1)
{
  uint64_t v1;
  uint64_t v2;
  float v3;
  id result;

  v2 = OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionPlaybackRate;
  v3 = *(float *)(v1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionPlaybackRate);
  if (v3 != a1)
  {
    result = sub_1017A0(a1, v3);
    *(float *)(v1 + v2) = a1;
  }
  return result;
}

id sub_1017A0(float a1, float a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  id result;
  void *v37;
  void *v38;
  void *v39;
  float v40;
  uint64_t v41;
  char *v42;
  double v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  char *v84;
  char *v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118[8];

  v3 = v2;
  v112 = type metadata accessor for AudioPlaybackSpeedData(0);
  v95 = *(_QWORD *)(v112 - 8);
  v6 = __chkstk_darwin(v112);
  v108 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = v7;
  __chkstk_darwin(v6);
  v110 = (char *)&v84 - v8;
  v99 = type metadata accessor for ErrorData(0);
  v111 = *(_QWORD *)(v99 - 8);
  v9 = __chkstk_darwin(v99);
  v105 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v10;
  __chkstk_darwin(v9);
  v106 = (char *)&v84 - v11;
  v109 = type metadata accessor for BitRateData(0);
  v107 = *(_QWORD *)(v109 - 8);
  v12 = __chkstk_darwin(v109);
  v102 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v13;
  __chkstk_darwin(v12);
  v104 = (char *)&v84 - v14;
  v90 = type metadata accessor for ListeningRoutedTo(0);
  v88 = *(_QWORD *)(v90 - 8);
  __chkstk_darwin(v90);
  v89 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for ListeningActionSourceType(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for ListeningActionSourceData(0);
  v116 = *(_QWORD *)(v103 - 8);
  v19 = __chkstk_darwin(v103);
  v98 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v20;
  __chkstk_darwin(v19);
  v101 = (char *)&v84 - v21;
  v22 = type metadata accessor for ListeningSessionData(0);
  v114 = *(_QWORD *)(v22 - 8);
  v115 = v22;
  v23 = *(_QWORD *)(v114 + 64);
  v24 = __chkstk_darwin(v22);
  v97 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v26 = (char *)&v84 - v25;
  v113 = type metadata accessor for ContentData(0);
  v100 = *(_QWORD *)(v113 - 8);
  v27 = *(_QWORD *)(v100 + 64);
  v28 = __chkstk_darwin(v113);
  v96 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v30 = (char *)&v84 - v29;
  v31 = type metadata accessor for DispatchPredicate(0);
  v32 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v34 = (char **)((char *)&v84 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v34 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v32 + 104))(v34, enum case for DispatchPredicate.onQueue(_:), v31);
  v35 = _dispatchPreconditionTest(_:)(v34);
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v32 + 8))(v34, v31);
  if ((v35 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_100088();
  v38 = v37;
  v39 = *(void **)(v3 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_player);
  result = objc_msgSend(v39, "isStreaming");
  v87 = v38;
  v86 = v23;
  if (!(_DWORD)result)
  {
    v41 = 0;
    goto LABEL_8;
  }
  v40 = *(float *)(v3 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentBitrate);
  if ((~LODWORD(v40) & 0x7F800000) == 0)
    goto LABEL_10;
  if (v40 <= -2147500000.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v40 < 2147500000.0)
  {
    v41 = (int)v40;
LABEL_8:
    v42 = v30;
    v85 = v30;
    sub_1033A0((uint64_t)v30);
    objc_msgSend(v39, "positionInCurrentAudiobook");
    *(float *)&v43 = v43;
    v118[0] = 1;
    v44 = v26;
    v84 = v26;
    sub_103D2C(LODWORD(v43), 0x100000000uLL);
    sub_10402C((uint64_t)v18);
    v45 = v3 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentRoute;
    swift_beginAccess(v3 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentRoute, v118, 0, 0);
    v46 = v89;
    (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v89, v45, v90);
    v47 = v101;
    ListeningActionSourceData.init(listeningActionSourceType:listeningRoutedTo:)(v18, v46);
    v117 = 0;
    v48 = v104;
    BitRateData.init(prevBitRate:bitRate:)(v41, v41);
    v49 = v106;
    sub_10456C();
    v50 = v110;
    AudioPlaybackSpeedData.init(playbackSpeed:previousPlaybackSpeed:)(a1, a2);
    v51 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v96, v42, v113);
    v52 = v114;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v97, v44, v115);
    v53 = v116;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v98, v47, v103);
    v54 = v107;
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v102, v48, v109);
    v55 = v111;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v105, v49, v99);
    v56 = v50;
    v57 = v95;
    (*(void (**)(char *, char *, uint64_t))(v95 + 16))(v108, v56, v112);
    v58 = *(unsigned __int8 *)(v51 + 80);
    v59 = (v58 + 24) & ~v58;
    v60 = *(unsigned __int8 *)(v52 + 80);
    v61 = (v27 + v60 + v59) & ~v60;
    v62 = *(unsigned __int8 *)(v53 + 80);
    v63 = (v86 + v62 + v61) & ~v62;
    v64 = *(unsigned __int8 *)(v54 + 80);
    v65 = (v91 + v64 + v63) & ~v64;
    v66 = *(unsigned __int8 *)(v55 + 80);
    v67 = (v92 + v66 + v65) & ~v66;
    v68 = *(unsigned __int8 *)(v57 + 80);
    v69 = v57;
    v70 = (v93 + v68 + v67) & ~v68;
    v71 = swift_allocObject(&unk_1C24B8, v70 + v94, v58 | v60 | v62 | v64 | v66 | v68 | 7);
    v72 = v87;
    *(_QWORD *)(v71 + 16) = v87;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v71 + v59, v96, v113);
    (*(void (**)(uint64_t, char *, uint64_t))(v114 + 32))(v71 + v61, v97, v115);
    v73 = v71 + v63;
    v74 = v103;
    (*(void (**)(uint64_t, char *, uint64_t))(v116 + 32))(v73, v98, v103);
    v75 = v71 + v65;
    v76 = v107;
    v77 = v109;
    (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v75, v102, v109);
    v78 = v71 + v67;
    v79 = v111;
    v80 = v99;
    (*(void (**)(uint64_t, char *, uint64_t))(v111 + 32))(v78, v105, v99);
    v81 = v71 + v70;
    v82 = v112;
    (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v81, v108, v112);
    v83 = v72;
    BATracker.performAfterPrivateDataFetched(completionHandler:)(sub_109404, v71);

    swift_release(v71);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v110, v82);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v106, v80);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v104, v77);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v101, v74);
    (*(void (**)(char *, uint64_t))(v114 + 8))(v84, v115);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v100 + 8))(v85, v113);
  }
LABEL_12:
  __break(1u);
  return result;
}

id AudiobookAnalyticsRecorder.player(_:isScrubbing:)(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id result;
  uint64_t v10;
  uint64_t v11;

  v5 = type metadata accessor for SkipActionType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    result = objc_msgSend(a1, "positionInCurrentAudiobook");
    *(_QWORD *)(v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_skipStartMediaTime) = v10;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for SkipActionType.scrubbing(_:), v5);
    sub_1002F4((uint64_t)v8);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t AudiobookAnalyticsRecorder.player(_:bitRateChangedFrom:to:)(float a1, float a2)
{
  void *v2;
  uint64_t v5;
  id v6;

  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  v5 = swift_allocObject(&unk_1C2070, 32, 7);
  *(_QWORD *)(v5 + 16) = v2;
  *(float *)(v5 + 24) = a2;
  *(float *)(v5 + 28) = a1;
  v6 = v2;
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_108B20, v5);
  return swift_release(v5);
}

uint64_t sub_1022D8(uint64_t result, float a2, float a3)
{
  *(float *)(result + OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentBitrate) = a2;
  if (a2 <= -2147500000.0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a2 >= 2147500000.0)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((LODWORD(a2) & 0x7F800000) == 0x7F800000 || (LODWORD(a3) & 0x7F800000) == 0x7F800000)
    goto LABEL_10;
  if (a3 <= -2147500000.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a3 < 2147500000.0)
    return sub_102398((int)a2, (int)a3);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_102398(unsigned int a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v20;
  uint64_t result;
  void *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  char *v45;
  char *v46;
  unint64_t v47;
  unsigned int v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;

  v47 = a2;
  v48 = a1;
  v58 = type metadata accessor for ErrorData(0);
  v54 = *(_QWORD *)(v58 - 8);
  v2 = __chkstk_darwin(v58);
  v57 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v3;
  __chkstk_darwin(v2);
  v5 = (char *)&v44 - v4;
  v56 = type metadata accessor for BitRateData(0);
  v53 = *(_QWORD *)(v56 - 8);
  v6 = __chkstk_darwin(v56);
  v50 = v7;
  v51 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v44 - v8;
  v55 = type metadata accessor for ContentData(0);
  v10 = *(_QWORD *)(v55 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = __chkstk_darwin(v55);
  v13 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v44 - v14;
  v16 = type metadata accessor for DispatchPredicate(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (void **)((char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v19 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  v20 = _dispatchPreconditionTest(_:)(v19);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    sub_100088();
    v44 = v22;
    v46 = v15;
    sub_1033A0((uint64_t)v15);
    v23 = v9;
    v45 = v9;
    BitRateData.init(prevBitRate:bitRate:)(v47 | ((HIDWORD(v47) & 1) << 32), v48);
    sub_10456C();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v55);
    v24 = v53;
    v25 = v51;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v51, v23, v56);
    v26 = v54;
    v27 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    v49 = v5;
    v27(v57, v5, v58);
    v28 = *(unsigned __int8 *)(v10 + 80);
    v29 = v10;
    v30 = (v28 + 24) & ~v28;
    v31 = *(unsigned __int8 *)(v24 + 80);
    v32 = (v11 + v31 + v30) & ~v31;
    v33 = *(unsigned __int8 *)(v26 + 80);
    v34 = (v50 + v33 + v32) & ~v33;
    v35 = swift_allocObject(&unk_1C2490, v34 + v52, v28 | v31 | v33 | 7);
    v36 = v44;
    *(_QWORD *)(v35 + 16) = v44;
    v37 = v13;
    v38 = v55;
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v35 + v30, v37, v55);
    v39 = v35 + v32;
    v40 = v56;
    (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v39, v25, v56);
    v41 = v35 + v34;
    v42 = v58;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v41, v57, v58);
    v43 = v36;
    BATracker.performAfterPrivateDataFetched(completionHandler:)(sub_1092A8, v35);

    swift_release(v35);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v49, v42);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v45, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v46, v38);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1027D8(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t Strong;
  char *v9;
  unsigned int *v10;
  char *v11;
  _BYTE v12[24];
  char v13[24];

  v4 = type metadata accessor for DoNotDisturbStatus(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin();
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = (unsigned int *)&enum case for DoNotDisturbStatus.on(_:);
    if ((a1 & 1) == 0)
      v10 = (unsigned int *)&enum case for DoNotDisturbStatus.off(_:);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v5 + 104))(v7, *v10, v4);
    v11 = &v9[OBJC_IVAR___AEAudiobookAnalyticsRecorder_doNotDisturbStatusAtStart];
    swift_beginAccess(&v9[OBJC_IVAR___AEAudiobookAnalyticsRecorder_doNotDisturbStatusAtStart], v12, 33, 0);
    (*(void (**)(char *, _BYTE *, uint64_t))(v5 + 40))(v11, v7, v4);
    swift_endAccess(v12);

  }
}

uint64_t sub_1028DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

uint64_t sub_102918(void *a1)
{
  uint64_t v2;
  id v3;

  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  v2 = swift_allocObject(&unk_1C2710, 24, 7);
  *(_QWORD *)(v2 + 16) = a1;
  v3 = a1;
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10A7E8, v2);
  return swift_release(v2);
}

uint64_t sub_10298C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;

  v2 = *(void **)(a1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost);
  if (v2)
    objc_msgSend(v2, "listeningSessionWillEnd");
  v3 = OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionAssertion;
  v4 = *(void **)(a1 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionAssertion);
  if (v4)
  {
    objc_msgSend(v4, "invalidate");
    v4 = *(void **)(a1 + v3);
  }
  *(_QWORD *)(a1 + v3) = 0;
  return swift_unknownObjectRelease(v4);
}

id sub_1029E8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  id result;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  float v39;
  uint64_t v40;
  unsigned int v41;
  unint64_t v42;
  double v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  void *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  char v115[8];

  v3 = v2;
  v94 = a2;
  v93 = a1;
  v4 = sub_108F90(&qword_20EEC0);
  __chkstk_darwin(v4);
  v106 = (uint64_t)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ErrorData(0);
  v109 = *(_QWORD *)(v6 - 8);
  v110 = v6;
  v7 = __chkstk_darwin(v6);
  v105 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v8;
  __chkstk_darwin(v7);
  v104 = (char *)&v81 - v9;
  v10 = type metadata accessor for BitRateData(0);
  v107 = *(_QWORD *)(v10 - 8);
  v108 = v10;
  v11 = __chkstk_darwin(v10);
  v102 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v12;
  __chkstk_darwin(v11);
  v101 = (char *)&v81 - v13;
  v89 = type metadata accessor for ListeningRoutedTo(0);
  v87 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v88 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ListeningActionSourceType(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for ListeningActionSourceData(0);
  v113 = *(_QWORD *)(v103 - 8);
  v18 = __chkstk_darwin(v103);
  v97 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = v19;
  __chkstk_darwin(v18);
  v98 = (char *)&v81 - v20;
  v112 = type metadata accessor for ListeningSessionData(0);
  v100 = *(_QWORD *)(v112 - 8);
  v21 = *(_QWORD *)(v100 + 64);
  v22 = __chkstk_darwin(v112);
  v96 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v24 = (char *)&v81 - v23;
  v111 = type metadata accessor for ContentData(0);
  v99 = *(_QWORD *)(v111 - 8);
  v25 = *(_QWORD *)(v99 + 64);
  v26 = __chkstk_darwin(v111);
  v95 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v28 = (char *)&v81 - v27;
  v29 = type metadata accessor for DispatchPredicate(0);
  v30 = *(_QWORD *)(v29 - 8);
  __chkstk_darwin(v29);
  v32 = (id *)((char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v32 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v32, enum case for DispatchPredicate.onQueue(_:), v29);
  v33 = _dispatchPreconditionTest(_:)(v32);
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v30 + 8))(v32, v29);
  if ((v33 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v35 = v3;
  sub_100088();
  v37 = v36;
  v38 = *(void **)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_player];
  result = objc_msgSend(v38, "isStreaming");
  v86 = v37;
  v85 = v21;
  v84 = v25;
  if (!(_DWORD)result)
  {
    v40 = 0;
    goto LABEL_8;
  }
  v39 = *(float *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentBitrate];
  if ((~LODWORD(v39) & 0x7F800000) == 0)
    goto LABEL_10;
  if (v39 <= -2147500000.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v39 < 2147500000.0)
  {
    v40 = (int)v39;
LABEL_8:
    v83 = v28;
    sub_1033A0((uint64_t)v28);
    *(float *)&v41 = *(double *)&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionStartMediaTime];
    v42 = v41;
    objc_msgSend(v38, "positionInCurrentAudiobook");
    *(float *)&v43 = v43;
    v115[0] = 0;
    v44 = v24;
    v82 = v24;
    sub_103D2C(v42, LODWORD(v43));
    sub_10402C((uint64_t)v17);
    v45 = &v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentRoute];
    swift_beginAccess(&v3[OBJC_IVAR___AEAudiobookAnalyticsRecorder_currentRoute], v115, 0, 0);
    v46 = v88;
    (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v88, v45, v89);
    v47 = v98;
    ListeningActionSourceData.init(listeningActionSourceType:listeningRoutedTo:)(v17, v46);
    v114 = 0;
    v48 = v101;
    BitRateData.init(prevBitRate:bitRate:)(v40, v40);
    v49 = v104;
    sub_10456C();
    v50 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v106, 1, 1, v50);
    v51 = v99;
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v95, v28, v111);
    v52 = v100;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v96, v44, v112);
    v53 = v113;
    (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v97, v47, v103);
    v54 = v107;
    (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v102, v48, v108);
    v55 = v109;
    (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v105, v49, v110);
    v56 = *(unsigned __int8 *)(v51 + 80);
    v57 = (v56 + 48) & ~v56;
    v58 = *(unsigned __int8 *)(v52 + 80);
    v59 = v35;
    v81 = v35;
    v60 = (v84 + v58 + v57) & ~v58;
    v61 = *(unsigned __int8 *)(v53 + 80);
    v62 = (v85 + v61 + v60) & ~v61;
    v63 = *(unsigned __int8 *)(v54 + 80);
    v64 = (v90 + v63 + v62) & ~v63;
    v65 = *(unsigned __int8 *)(v55 + 80);
    v66 = (v91 + v65 + v64) & ~v65;
    v67 = (v92 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
    v68 = (char *)swift_allocObject(&unk_1C2648, v67 + 16, v56 | v58 | v61 | v63 | v65 | 7);
    *((_QWORD *)v68 + 2) = 0;
    *((_QWORD *)v68 + 3) = 0;
    *((_QWORD *)v68 + 4) = v59;
    v69 = v86;
    *((_QWORD *)v68 + 5) = v86;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v68[v57], v95, v111);
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(&v68[v60], v96, v112);
    v70 = v103;
    (*(void (**)(char *, char *, uint64_t))(v113 + 32))(&v68[v62], v97, v103);
    v71 = &v68[v64];
    v73 = v107;
    v72 = v108;
    (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v71, v102, v108);
    v75 = v109;
    v74 = v110;
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(&v68[v66], v105, v110);
    v76 = &v68[v67];
    v77 = v94;
    *(_QWORD *)v76 = v93;
    *((_QWORD *)v76 + 1) = v77;
    v78 = v81;
    v79 = v69;
    swift_retain(v77);
    v80 = sub_106578(v106, (uint64_t)&unk_20EF38, (uint64_t)v68);

    swift_release(v80);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v104, v74);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v101, v72);
    (*(void (**)(char *, uint64_t))(v113 + 8))(v98, v70);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v82, v112);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v83, v111);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1031BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t result;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unsigned int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = type metadata accessor for DispatchPredicate(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (uint64_t *)((char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v7 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for DispatchPredicate.onQueue(_:), v4);
  v8 = _dispatchPreconditionTest(_:)(v7);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    v10 = objc_msgSend(*(id *)(v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_player), "currentAudiobook");
    if (v10)
    {
      v11 = v10;
      v12 = objc_opt_self(BKMLAudiobook);
      v10 = (id)swift_dynamicCastObjCClass(v11, v12);
      if (!v10)
      {
        swift_unknownObjectRelease(v11);
        v10 = 0;
      }
    }
    v13 = OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAudiobook;
    v14 = *(_QWORD *)(v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAudiobook);
    *(_QWORD *)(v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionAudiobook) = v10;
    swift_unknownObjectRelease(v14);
    v15 = *(void **)(v2 + v13);
    if (v15)
      v16 = objc_msgSend(v15, "representativeItem");
    else
      v16 = 0;
    v17 = objc_msgSend(v16, "bk_storeID");
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend(v18, "longLongValue");

      if ((uint64_t)v19 > 0)
      {
        v20 = (unsigned int *)&enum case for ContentAcquisitionType.storeBought(_:);
LABEL_13:
        v21 = *v20;
        v22 = type metadata accessor for ContentAcquisitionType(0);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(a1, v21, v22);
      }
    }
    else
    {

    }
    v20 = (unsigned int *)&enum case for ContentAcquisitionType.nonStoreBought(_:);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1033A0@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  NSString v34;
  _BYTE *v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  NSString v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_BYTE *, uint64_t, uint64_t);
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t Strong;
  uint64_t v57;
  uint64_t v58;
  uint64_t ObjectType;
  uint64_t v60;
  char v61;
  int v62;
  char v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  unsigned __int8 v77;
  uint64_t v78;
  _BYTE *v79;
  unsigned int *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  uint64_t v89;
  __int16 v90;
  _BYTE v91[4];
  int v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  _QWORD *v102;
  uint64_t v103;
  _BYTE *v104;
  _BYTE *v105;
  id v106;
  _BYTE *v107;
  _BYTE *v108;
  _BYTE *v109;
  char v110[24];
  _BYTE v111[40];

  v2 = v1;
  v4 = sub_108F90(&qword_20EE38);
  __chkstk_darwin(v4);
  v101 = &v91[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_108F90(&qword_20EE40);
  __chkstk_darwin(v6);
  v100 = &v91[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_108F90(&qword_20EE48);
  __chkstk_darwin(v8);
  v104 = &v91[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_108F90(&qword_20EE50);
  __chkstk_darwin(v10);
  v108 = &v91[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = (_QWORD *)type metadata accessor for ContentType(0);
  v103 = *(v12 - 1);
  __chkstk_darwin(v12);
  v107 = &v91[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = type metadata accessor for BooksFeatureFlag(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = &v91[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = sub_108F90(&qword_20EE58);
  v19 = __chkstk_darwin(v18);
  v105 = &v91[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  v109 = &v91[-v21];
  v22 = type metadata accessor for DispatchPredicate(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = &v91[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v25 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v23 + 104))(v25, enum case for DispatchPredicate.onQueue(_:), v22);
  v26 = _dispatchPreconditionTest(_:)(v25);
  (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v25, v22);
  if ((v26 & 1) == 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  v102 = v12;
  v106 = *(id *)&v2[OBJC_IVAR___AEAudiobookAnalyticsRecorder_player];
  v27 = objc_msgSend(v106, "currentAudiobook");
  v99 = a1;
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, "assetID");
    swift_unknownObjectRelease(v28);
    v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v29, v30);
    v12 = v31;

  }
  else
  {
    v23 = 0;
    v12 = (_QWORD *)0xE000000000000000;
  }
  v32 = OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost;
  v33 = *(void **)&v2[OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionHost];
  if (v33)
  {
    v98 = v15;
    swift_unknownObjectRetain(v33);
    v34 = String._bridgeToObjectiveC()();
    v35 = v2;
    v36 = v12;
    v37 = v23;
    v38 = objc_msgSend(v33, "contentPrivateIDForContentID:", v34);

    swift_unknownObjectRelease(v33);
    v96 = static String._unconditionallyBridgeFromObjectiveC(_:)(v38, v39);
    v95 = v40;

    v41 = *(void **)&v35[v32];
    if (v41)
    {
      swift_unknownObjectRetain(*(_QWORD *)&v35[v32]);
      v42 = String._bridgeToObjectiveC()();
      v43 = objc_msgSend(v41, "contentUserIDForContentID:", v42);

      swift_unknownObjectRelease(v41);
      v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43, v44);
      v93 = v45;

    }
    else
    {
      v94 = 0;
      v93 = 0;
    }
    v23 = v37;
    v12 = v36;
    v2 = v35;
    v15 = v98;
  }
  else
  {
    v95 = 0;
    v96 = 0;
    v94 = 0;
    v93 = 0;
  }
  v46 = objc_msgSend(v106, "currentTrack");
  if (!v46
    || (v47 = v46,
        v48 = objc_msgSend(v46, "audiobook"),
        swift_unknownObjectRelease(v47),
        !v48))
  {
    v106 = 0;
    goto LABEL_17;
  }
  v49 = objc_msgSend(v48, "supplementalContents");
  swift_unknownObjectRelease(v48);
  v50 = sub_1093C0(0, &qword_20EE78, BKAudiobookSupplementalContent_ptr);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v49, v50);

  if ((unint64_t)v22 >> 62)
    goto LABEL_52;
  v106 = *(id *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    swift_bridgeObjectRelease(v22);
LABEL_17:
    v98 = v23;
    dispatch thunk of EventReporter.seriesType(for:)(v23, v12);
    v51 = enum case for BooksFeatureFlag.unifiedProductPage(_:);
    v52 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v15 + 104);
    v52(v17, enum case for BooksFeatureFlag.unifiedProductPage(_:), v14);
    v53 = sub_10AA94(&qword_20EE60, (uint64_t (*)(uint64_t))&type metadata accessor for BooksFeatureFlag, (uint64_t)&protocol conformance descriptor for BooksFeatureFlag);
    v54 = sub_109330();
    v55 = RawRepresentable<>.isEnabled.getter(v14, v53, v54);
    v15 = *(_QWORD *)(v15 + 8);
    ((void (*)(_BYTE *, uint64_t))v15)(v17, v14);
    v97 = v12;
    if ((v55 & 1) == 0)
      goto LABEL_21;
    v12 = &v2[OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource];
    swift_beginAccess(&v2[OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource], v110, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v12);
    if (!Strong)
      goto LABEL_21;
    v57 = Strong;
    v58 = v12[1];
    ObjectType = swift_getObjectType();
    v12 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(ObjectType, v58);
    v60 = swift_unknownObjectRelease(v57);
    if (v12)
    {
      v61 = AppAnalyticsAdditionalData.supportsUnifiedProductPage.getter(v60);

      v62 = v61 & 1;
    }
    else
    {
LABEL_21:
      v62 = 2;
    }
    v92 = v62;
    v52(v17, v51, v14);
    v63 = RawRepresentable<>.isEnabled.getter(v14, v53, v54);
    ((void (*)(_BYTE *, uint64_t))v15)(v17, v14);
    if ((v63 & 1) != 0)
    {
      v64 = &v2[OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource];
      swift_beginAccess(&v2[OBJC_IVAR___AEAudiobookAnalyticsRecorder_dataSource], v111, 0, 0);
      v65 = swift_unknownObjectWeakLoadStrong(v64);
      v66 = v109;
      v23 = (uint64_t)v106;
      if (v65
        && (v67 = v65,
            v68 = *((_QWORD *)v64 + 1),
            v69 = swift_getObjectType(),
            v70 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8))(v69, v68),
            v71 = swift_unknownObjectRelease(v67),
            v70))
      {
        v17 = (_BYTE *)AppAnalyticsAdditionalData.editionKind.getter(v71);
        v14 = v72;

      }
      else
      {
        v17 = 0;
        v14 = 0;
      }
    }
    else
    {
      v17 = 0;
      v14 = 0;
      v66 = v109;
      v23 = (uint64_t)v106;
    }
    (*(void (**)(_BYTE *, _QWORD, _QWORD *))(v103 + 104))(v107, enum case for ContentType.audiobook(_:), v102);
    v22 = (uint64_t)v108;
    sub_1031BC((uint64_t)v108);
    v73 = type metadata accessor for ContentAcquisitionType(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v22, 0, 1, v73);
    v74 = type metadata accessor for ContentSubType(0);
    v2 = v104;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v104, 1, 1, v74);
    if (v23 < (uint64_t)0xFFFFFFFF80000000)
    {
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (v23 <= 0x7FFFFFFF)
      break;
LABEL_51:
    __break(1u);
LABEL_52:
    if (v22 < 0)
      v89 = v22;
    else
      v89 = v22 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v22);
    v106 = (id)_CocoaArrayWrapper.endIndex.getter(v89);
    swift_bridgeObjectRelease(v22);
  }
  sub_109DE8((uint64_t)v66, (uint64_t)v105, &qword_20EE58);
  v75 = objc_msgSend((id)objc_opt_self(BKAudiobookPlayer), "sharedInstance");
  v76 = objc_msgSend(v75, "currentAudiobook");

  if (v76)
  {
    v77 = objc_msgSend(v76, "isSG");
    swift_unknownObjectRelease(v76);
    v78 = type metadata accessor for ProductionType(0);
    v79 = v100;
    if ((v77 & 1) != 0)
      v80 = (unsigned int *)&enum case for ProductionType.sgProduction(_:);
    else
      v80 = (unsigned int *)&enum case for ProductionType.nonSGProduction(_:);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(*(_QWORD *)(v78 - 8) + 104))(v100, *v80, v78);
  }
  else
  {
    v81 = enum case for ProductionType.unknown(_:);
    v78 = type metadata accessor for ProductionType(0);
    v79 = v100;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 104))(v100, v81, v78);
  }
  if (v93)
    v82 = v93;
  else
    v82 = 0xE000000000000000;
  if (v93)
    v83 = v94;
  else
    v83 = 0;
  if (v95)
    v84 = v95;
  else
    v84 = 0xE000000000000000;
  if (v95)
    v85 = v96;
  else
    v85 = 0;
  type metadata accessor for ProductionType(0);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v79, 0, 1, v78);
  v86 = type metadata accessor for MangaFlag(0);
  v87 = v101;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v101, 1, 1, v86);
  v111[28] = 0;
  HIBYTE(v90) = 2;
  LOBYTE(v90) = v92;
  ContentData.init(contentID:contentType:contentPrivateID:contentUserID:contentAcquisitionType:contentSubType:contentLength:supplementalContentCount:seriesType:productionType:mangaFlag:isUnified:isAccoladedContent:contentKind:)(v98, v97, v107, v85, v84, v83, v82, v108, v2, 0x100000000, v106, v105, v79, v87, v90, v17, v14);
  return sub_10988C((uint64_t)v109, &qword_20EE58);
}

uint64_t sub_103D2C(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  uint64_t result;
  void *v12;
  id v13;
  id v14;
  double v15;
  double v16;
  uint64_t v17;
  unsigned __int8 v18;
  float v19;
  BOOL v20;
  float v21;
  id v22;
  id v23;
  unsigned int v24;
  id v25;
  id v26;
  float v27;
  float v28;
  id v29;
  id v30;
  unsigned int v31;
  id v32;
  char *v33;
  uint64_t v34;

  v3 = v2;
  v6 = type metadata accessor for DispatchPredicate(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (uint64_t *)((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v9 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  v10 = _dispatchPreconditionTest(_:)(v9);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) != 0)
  {
    v12 = *(void **)(v3 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_player);
    v13 = objc_msgSend(v12, "currentAudiobook");
    if (v13
      && (v14 = v13, objc_msgSend(v13, "duration"),
                     v16 = v15,
                     swift_unknownObjectRelease(v14),
                     (a2 & 0x100000000) == 0))
    {
      v19 = v16;
      v18 = 1;
      v17 = 0;
      if (v19 > 0.0 && *(float *)&a2 >= 0.0)
      {
        v20 = v19 < *(float *)&a2;
        v21 = (float)(*(float *)&a2 / v19) * 100.0;
        if (v20)
          v17 = 0;
        else
          v17 = LODWORD(v21);
        v18 = v20;
      }
    }
    else
    {
      v17 = 0;
      v18 = 1;
    }
    v22 = objc_msgSend(v12, "currentAudiobook");
    v23 = v22;
    if (v22)
    {
      v24 = objc_msgSend(v22, "respondsToSelector:", "isAudiobookPreview");
      swift_unknownObjectRelease(v23);
      if (v24 && (v25 = objc_msgSend(v12, "currentAudiobook")) != 0)
      {
        v26 = v25;
        v23 = objc_msgSend(v25, "isAudiobookPreview");
        swift_unknownObjectRelease(v26);
      }
      else
      {
        v23 = 0;
      }
    }
    objc_msgSend(v12, "playbackRate");
    v28 = v27;
    v29 = objc_msgSend(v12, "isStreaming");
    v30 = objc_msgSend(v12, "timeRemainingInBuffer");
    v31 = objc_msgSend(v30, "intValue");

    v32 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v33 = (char *)objc_msgSend(v32, "applicationState");

    BYTE4(v34) = 0;
    LOBYTE(v34) = v18;
    return ListeningSessionData.init(startTime:endTime:playbackSpeed:listeningID:isPreview:isStreaming:remainingBufferTime:isBackgrounded:percentCompletionEnd:isSnoozeTimeReached:)(a1 | ((HIDWORD(a1) & 1) << 32), a2 | ((HIDWORD(a2) & 1) << 32), 0, 0, v23, v29, v31, v33 == (_BYTE *)&dword_0 + 2, v28, v17 | ((unint64_t)v18 << 32), 2, v34);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10402C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v17;
  unint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unsigned int *v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR___AEAudiobookAnalyticsRecorder_mediaRemoteAdaptor), "currentEvent"));
  if (!v3)
  {
    v14 = enum case for ListeningActionSourceType.inApp(_:);
    v15 = ((uint64_t (*)(void))type metadata accessor for ListeningActionSourceType)();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(a1, v14, v15);
  }
  v4 = v3;
  v5 = objc_msgSend(v3, "mediaRemoteOptions");
  if (!v5
    || (v6 = v5,
        v7 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for AnyHashable, (char *)&type metadata for Any + 8, &protocol witness table for AnyHashable), v6, !v7))
  {
    v34 = 0u;
    v35 = 0u;
    sub_10988C((uint64_t)&v34, &qword_20EDB0);
    v10 = 0;
    v11 = 0;
    v34 = 0u;
    v35 = 0u;
    goto LABEL_8;
  }
  v30 = 0xD000000000000034;
  v31 = 0x8000000000164B80;
  swift_bridgeObjectRetain(v7);
  AnyHashable.init<A>(_:)(&v32, &v30, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_1172D8((uint64_t)&v32), (v9 & 1) != 0))
  {
    sub_109490(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v34);
  }
  else
  {
    v34 = 0u;
    v35 = 0u;
  }
  swift_bridgeObjectRelease(v7);
  sub_10945C((uint64_t)&v32);
  if (*((_QWORD *)&v35 + 1))
  {
    v17 = swift_dynamicCast(&v32, &v34, (char *)&type metadata for Any + 8, &type metadata for String, 6);
    if (v17)
      v11 = v32;
    else
      v11 = 0;
    if (v17)
      v10 = v33;
    else
      v10 = 0;
  }
  else
  {
    sub_10988C((uint64_t)&v34, &qword_20EDB0);
    v10 = 0;
    v11 = 0;
  }
  v30 = 0xD00000000000001CLL;
  v31 = 0x8000000000164B60;
  AnyHashable.init<A>(_:)(&v32, &v30, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v7 + 16) && (v18 = sub_1172D8((uint64_t)&v32), (v19 & 1) != 0))
  {
    sub_109490(*(_QWORD *)(v7 + 56) + 32 * v18, (uint64_t)&v34);
  }
  else
  {
    v34 = 0u;
    v35 = 0u;
  }
  swift_bridgeObjectRelease(v7);
  sub_10945C((uint64_t)&v32);
  if (!*((_QWORD *)&v35 + 1))
  {
LABEL_8:
    sub_10988C((uint64_t)&v34, &qword_20EDB0);
    v12 = 0;
    v13 = 0;
    if (!v10)
      goto LABEL_44;
    goto LABEL_32;
  }
  v20 = swift_dynamicCast(&v32, &v34, (char *)&type metadata for Any + 8, &type metadata for String, 6);
  if (v20)
    v12 = v32;
  else
    v12 = 0;
  if (v20)
    v13 = v33;
  else
    v13 = 0;
  if (!v10)
    goto LABEL_44;
LABEL_32:
  if (v10 == 0x8000000000164B20 && v11 == 0xD000000000000014
    || (_stringCompareWithSmolCheck(_:_:expecting:)(v11, v10, 0xD000000000000014) & 1) != 0)
  {
    v21 = enum case for ListeningActionSourceType.nowPlaying(_:);
    v22 = type metadata accessor for ListeningActionSourceType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(a1, v21, v22);

    swift_bridgeObjectRelease(v10);
    return swift_bridgeObjectRelease(v13);
  }
  v32 = v11;
  v33 = v10;
  *(_QWORD *)&v34 = 0x79616C50726143;
  *((_QWORD *)&v34 + 1) = 0xE700000000000000;
  v23 = sub_109418();
  if ((StringProtocol.contains<A>(_:)(&v34, &type metadata for String, &type metadata for String, v23, v23) & 1) == 0)
  {
    v32 = v11;
    v33 = v10;
    *(_QWORD *)&v34 = 0x5043525641;
    *((_QWORD *)&v34 + 1) = 0xE500000000000000;
    if ((StringProtocol.contains<A>(_:)(&v34, &type metadata for String, &type metadata for String, v23, v23) & 1) != 0)
    {
      if (v13)
      {
        v32 = v12;
        v33 = v13;
        *(_QWORD *)&v34 = 0x70637276415442;
        *((_QWORD *)&v34 + 1) = 0xE700000000000000;
        if ((StringProtocol.contains<A>(_:)(&v34, &type metadata for String, &type metadata for String, v23, v23) & 1) != 0)
        {
          swift_bridgeObjectRelease(v10);
          swift_bridgeObjectRelease(v13);

          v24 = (unsigned int *)&enum case for ListeningActionSourceType.blueTooth(_:);
          goto LABEL_49;
        }
      }
    }
    v32 = v11;
    v33 = v10;
    *(_QWORD *)&v34 = 0xD000000000000016;
    *((_QWORD *)&v34 + 1) = 0x8000000000164B40;
    v25 = StringProtocol.contains<A>(_:)(&v34, &type metadata for String, &type metadata for String, v23, v23);
    swift_bridgeObjectRelease(v10);
    if ((v25 & 1) != 0)
    {

      swift_bridgeObjectRelease(v13);
      v24 = (unsigned int *)&enum case for ListeningActionSourceType.usb(_:);
      goto LABEL_49;
    }
LABEL_44:
    if (v13)
    {
      v32 = v12;
      v33 = v13;
      *(_QWORD *)&v34 = 0xD000000000000018;
      *((_QWORD *)&v34 + 1) = 0x8000000000164B00;
      v26 = sub_109418();
      v27 = StringProtocol.contains<A>(_:)(&v34, &type metadata for String, &type metadata for String, v26, v26);
      swift_bridgeObjectRelease(v13);

      if ((v27 & 1) != 0)
      {
        v24 = (unsigned int *)&enum case for ListeningActionSourceType.watch(_:);
        goto LABEL_49;
      }
    }
    else
    {

    }
    v24 = (unsigned int *)&enum case for ListeningActionSourceType.inApp(_:);
    goto LABEL_49;
  }
  swift_bridgeObjectRelease(v10);

  swift_bridgeObjectRelease(v13);
  v24 = (unsigned int *)&enum case for ListeningActionSourceType.carPlay(_:);
LABEL_49:
  v28 = *v24;
  v29 = type metadata accessor for ListeningActionSourceType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(a1, v28, v29);
}

void sub_10456C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_player), "lastError");
  if (v1
    && (v14 = v1,
        v2 = sub_108F90(&qword_20EE28),
        v3 = sub_1093C0(0, &qword_20EE30, NSError_ptr),
        (swift_dynamicCast(&v13, &v14, v2, v3, 6) & 1) != 0))
  {
    v4 = v13;
    v14 = objc_msgSend(v13, "code");
    v5 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v7 = v6;
    v8 = objc_msgSend(v4, "description");
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);
    v12 = v11;

    ErrorData.init(errorCode:errorDescription:)(v5, v7, v10, v12);
  }
  else
  {
    ErrorData.init(errorCode:errorDescription:)(16718, 0xE200000000000000, 0, 0xE000000000000000);
  }
}

uint64_t sub_1046B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t);
  _BYTE v14[24];
  _BYTE v15[24];

  v1 = type metadata accessor for CellularRadioAccessTechnology(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = ((uint64_t (*)(void))__chkstk_darwin)();
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __chkstk_darwin(v3);
  v8 = &v14[-v7];
  __chkstk_darwin(v6);
  v10 = &v14[-v9];
  type metadata accessor for Utilities(0);
  dispatch thunk of static Utilities.cellularRadioAccessTechnology()();
  v11 = v0 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_previousCellularAccessTechnology;
  swift_beginAccess(v11, v15, 0, 0);
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16);
  v12(v8, v11, v1);
  v12(v5, (uint64_t)v10, v1);
  CellularData.init(preCellularRadioAccessTechnology:cellularRadioAccessTechnology:)(v8, v5);
  v12(v8, (uint64_t)v10, v1);
  swift_beginAccess(v11, v14, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 40))(v11, v8, v1);
  swift_endAccess(v14);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v2 + 8))(v10, v1);
}

uint64_t sub_104818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, _QWORD, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for SkipActionType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v8(v7, enum case for SkipActionType.unknown(_:), v4);
  v9 = sub_10AA94(&qword_20EF60, (uint64_t (*)(uint64_t))&type metadata accessor for SkipActionType, (uint64_t)&protocol conformance descriptor for SkipActionType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v16, v4, v9);
  dispatch thunk of RawRepresentable.rawValue.getter(&v14, v4, v9);
  v10 = v17;
  v11 = v15;
  if (v16 == v14 && v17 == v15)
  {
    swift_bridgeObjectRelease_n(v17, 2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v8)(a2, enum case for SkipActionType.buttonTap(_:), v4);
  }
  v12 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v14);
  swift_bridgeObjectRelease(v10);
  swift_bridgeObjectRelease(v11);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v12 & 1) != 0)
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))v8)(a2, enum case for SkipActionType.buttonTap(_:), v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
}

uint64_t sub_1049A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t result;
  void *v23;
  id v24;
  double v25;
  double v26;
  double v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char **v33;
  char v34;
  uint64_t v35;
  void *v36;
  double v37;
  double v38;
  uint64_t v39;
  float v40;
  float v41;
  unsigned int v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  id v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v3 = v2;
  v51 = a1;
  v53 = a2;
  v4 = type metadata accessor for SkipActionType(0);
  v54 = *(_QWORD *)(v4 - 8);
  v55 = v4;
  v5 = __chkstk_darwin(v4);
  v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v50 = (uint64_t)&v49 - v7;
  v8 = type metadata accessor for SkipDirection(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v49 - v14;
  __chkstk_darwin(v13);
  v56 = (char *)&v49 - v16;
  v17 = type metadata accessor for DispatchPredicate(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (void (**)(char *, uint64_t))((char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  *v20 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  v21 = _dispatchPreconditionTest(_:)(v20);
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v21 & 1) != 0)
  {
    v23 = *(void **)(v3 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_player);
    v24 = objc_msgSend(v23, "skipController");
    v25 = *(double *)(v3 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_playSessionStartMediaTime);
    objc_msgSend(v23, "positionInCurrentAudiobook");
    v27 = v26;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
    if (v26 >= v25)
    {
      v28(v56, enum case for SkipDirection.forward(_:), v8);
      v29 = enum case for SkipDirection.back(_:);
    }
    else
    {
      v29 = enum case for SkipDirection.back(_:);
      v28(v56, enum case for SkipDirection.back(_:), v8);
    }
    v28(v15, v29, v8);
    v30 = sub_10AA94(&qword_20EF58, (uint64_t (*)(uint64_t))&type metadata accessor for SkipDirection, (uint64_t)&protocol conformance descriptor for SkipDirection);
    dispatch thunk of RawRepresentable.rawValue.getter(&v59, v8, v30);
    dispatch thunk of RawRepresentable.rawValue.getter(&v57, v8, v30);
    v31 = v60;
    v32 = v58;
    if (v59 == v57 && v60 == v58)
    {
      swift_bridgeObjectRelease_n(v60, 2);
      v49 = *(void (**)(char *, uint64_t))(v9 + 8);
      v49(v15, v8);
      v33 = &selRef_backwardSkipTime;
    }
    else
    {
      v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v59, v60, v57);
      swift_bridgeObjectRelease(v31);
      swift_bridgeObjectRelease(v32);
      v49 = *(void (**)(char *, uint64_t))(v9 + 8);
      v49(v15, v8);
      v33 = &selRef_forwardSkipTime;
      if ((v34 & 1) != 0)
        v33 = &selRef_backwardSkipTime;
    }
    v35 = v8;
    v36 = v24;
    objc_msgSend(v24, *v33);
    v38 = v37;
    v39 = v50;
    sub_104818(v51, v50);
    v40 = v25;
    v41 = v27;
    *(float *)&v42 = v38;
    v51 = v42;
    v43 = v56;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v56, v35);
    v45 = v54;
    v44 = v55;
    v46 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v52, v39, v55);
    v47 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v48 = (char *)objc_msgSend(v47, "applicationState");

    LOBYTE(v59) = 0;
    SkipData.init(startTime:endTime:skipInterval:skipDirection:skipActionType:listeningID:isBackgrounded:)(v51, v12, v46, 0, 0, v48 == (_BYTE *)&dword_0 + 2, v40, v41);

    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v39, v44);
    return ((uint64_t (*)(char *, uint64_t))v49)(v43, v35);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_104DFC(char a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned int *v17;
  uint64_t v19;
  void (*v20)(char *);

  v20 = a2;
  v6 = type metadata accessor for DoNotDisturbStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v19 - v11;
  v13 = type metadata accessor for DoNotDisturbData(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v12, a4, v6);
  v17 = (unsigned int *)&enum case for DoNotDisturbStatus.on(_:);
  if ((a1 & 1) == 0)
    v17 = (unsigned int *)&enum case for DoNotDisturbStatus.off(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v10, *v17, v6);
  DoNotDisturbData.init(startStatus:endStatus:)(v12, v10);
  v20(v16);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_104F44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch(sub_104F5C, 0, 0);
}

uint64_t sub_104F5C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(async function pointer to EventReporter.userEmbeddingData()[1]);
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_104FBC;
  return EventReporter.userEmbeddingData()(*(_QWORD *)(v0 + 24));
}

uint64_t sub_104FBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 40);
  v3 = *v1;
  *(_QWORD *)(v3 + 48) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_105028, 0, 0);
  else
    return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_105028()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_20EA40 != -1)
    swift_once(&qword_20EA40, sub_FE7D8);
  v1 = *(_QWORD *)(v0 + 48);
  v2 = type metadata accessor for Logger(0);
  sub_109D1C(v2, (uint64_t)qword_20EA48);
  v3 = swift_errorRetain(v1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.error.getter();
  v6 = os_log_type_enabled(v4, v5);
  v7 = *(_QWORD *)(v0 + 48);
  if (v6)
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    v10 = _convertErrorToNSError(_:)(v7);
    *(_QWORD *)(v0 + 16) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24, v8 + 4, v8 + 12);
    *v9 = v10;
    swift_errorRelease(v7);
    _os_log_impl(&dword_0, v4, v5, "Failed to create UserEmbeddingData: %@", v8, 0xCu);
    v11 = sub_108F90(&qword_20EF20);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

    swift_errorRelease(v7);
  }
  else
  {
    swift_errorRelease(*(_QWORD *)(v0 + 48));
    swift_errorRelease(v7);

  }
  v12 = *(_QWORD *)(v0 + 24);
  v13 = type metadata accessor for UserEmbeddingData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1051FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v42;
  uint64_t v43;

  v8[16] = v42;
  v8[17] = v43;
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[11] = a4;
  v10 = type metadata accessor for DoNotDisturbData(0);
  v8[18] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v8[19] = v11;
  v8[20] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ErrorData(0);
  v8[21] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v8[22] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v8[23] = v14;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[24] = swift_task_alloc(v15);
  v8[25] = swift_task_alloc(v15);
  v16 = type metadata accessor for BitRateData(0);
  v8[26] = v16;
  v17 = *(_QWORD *)(v16 - 8);
  v8[27] = v17;
  v18 = *(_QWORD *)(v17 + 64);
  v8[28] = v18;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[29] = swift_task_alloc(v19);
  v8[30] = swift_task_alloc(v19);
  v20 = type metadata accessor for ListeningActionSourceData(0);
  v8[31] = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v8[32] = v21;
  v22 = *(_QWORD *)(v21 + 64);
  v8[33] = v22;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[34] = swift_task_alloc(v23);
  v8[35] = swift_task_alloc(v23);
  v24 = type metadata accessor for ListeningSessionData(0);
  v8[36] = v24;
  v25 = *(_QWORD *)(v24 - 8);
  v8[37] = v25;
  v26 = *(_QWORD *)(v25 + 64);
  v8[38] = v26;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[39] = swift_task_alloc(v27);
  v8[40] = swift_task_alloc(v27);
  v28 = type metadata accessor for ContentData(0);
  v8[41] = v28;
  v29 = *(_QWORD *)(v28 - 8);
  v8[42] = v29;
  v30 = *(_QWORD *)(v29 + 64);
  v8[43] = v30;
  v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[44] = swift_task_alloc(v31);
  v8[45] = swift_task_alloc(v31);
  v32 = type metadata accessor for DoNotDisturbStatus(0);
  v8[46] = v32;
  v33 = *(_QWORD *)(v32 - 8);
  v8[47] = v33;
  v34 = *(_QWORD *)(v33 + 64);
  v8[48] = v34;
  v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF0;
  v8[49] = swift_task_alloc(v35);
  v8[50] = swift_task_alloc(v35);
  v8[51] = swift_task_alloc(v35);
  v36 = sub_108F90(&qword_20EEE8);
  v37 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[52] = v37;
  v38 = type metadata accessor for UserEmbeddingData(0);
  v8[53] = v38;
  v39 = *(_QWORD *)(v38 - 8);
  v8[54] = v39;
  v8[55] = swift_task_alloc((*(_QWORD *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = (_QWORD *)swift_task_alloc(dword_20EEF4);
  v8[56] = v40;
  *v40 = v8;
  v40[1] = sub_105460;
  v40[3] = v37;
  v40[4] = a4;
  return swift_task_switch(sub_104F5C, 0, 0);
}

uint64_t sub_105460()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 448));
  return swift_task_switch(sub_1054B4, 0, 0);
}

uint64_t sub_1054B4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v1 = v0[53];
  v2 = v0[54];
  v3 = v0[52];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10988C(v3, &qword_20EEE8);
  }
  else
  {
    v4 = v0[55];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v3, v1);
    v5 = sub_108F90(&qword_20EDC8);
    v6 = type metadata accessor for DataEventTrait(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject(v5, v9 + *(_QWORD *)(v7 + 72), v8 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_173340;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10 + v9, enum case for DataEventTrait.onlyOnce(_:), v6);
    v11 = sub_10AA94(&qword_20EEF8, (uint64_t (*)(uint64_t))&type metadata accessor for UserEmbeddingData, (uint64_t)&protocol conformance descriptor for UserEmbeddingData);
    v12 = sub_10AA94(&qword_20EF00, (uint64_t (*)(uint64_t))&type metadata accessor for UserEmbeddingData, (uint64_t)&protocol conformance descriptor for UserEmbeddingData);
    BATracker.push<A>(data:traits:file:line:)(v4, v10, 0xD000000000000073, 0x8000000000164A80, 491, v1, v11, v12);
    swift_bridgeObjectRelease(v10);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
  }
  v64 = v0[47];
  v67 = v0[46];
  v69 = v0[51];
  v120 = v0[45];
  v13 = v0[42];
  v88 = v0[43];
  v72 = v13;
  v73 = v0[44];
  v14 = v0[41];
  v117 = v14;
  v99 = v0[40];
  v74 = v0[39];
  v15 = v0[37];
  v86 = v0[38];
  v71 = v15;
  v97 = v0[36];
  v103 = v0[35];
  v75 = v0[34];
  v16 = v0[32];
  v84 = v0[33];
  v101 = v0[31];
  v108 = v0[30];
  v76 = v0[29];
  v17 = v0[27];
  v82 = v0[28];
  v105 = v0[26];
  v114 = v0[25];
  v18 = v0[22];
  v78 = v0[24];
  v80 = v0[23];
  v111 = v0[21];
  v19 = v0[13];
  v91 = (void *)v0[12];
  v20 = v0[11] + OBJC_IVAR___AEAudiobookAnalyticsRecorder_doNotDisturbStatusAtStart;
  v66 = v0[17];
  v21 = v0[14];
  v61 = v0[15];
  v63 = v0[16];
  swift_beginAccess(v20, v0 + 8, 0, 0);
  v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 16);
  v93(v69, v20, v67);
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v70(v120, v19, v14);
  v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v68(v99, v21, v97);
  v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v65(v103, v61, v101);
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v62(v108, v63, v105);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v22(v114, v66, v111);
  v70(v73, v120, v14);
  v68(v74, v99, v97);
  v65(v75, v103, v101);
  v62(v76, v108, v105);
  v22(v78, v114, v111);
  v23 = *(unsigned __int8 *)(v72 + 80);
  v24 = (v23 + 24) & ~v23;
  v25 = *(unsigned __int8 *)(v15 + 80);
  v26 = (v88 + v25 + v24) & ~v25;
  v27 = *(unsigned __int8 *)(v16 + 80);
  v28 = (v86 + v27 + v26) & ~v27;
  v29 = *(unsigned __int8 *)(v17 + 80);
  v30 = (v84 + v29 + v28) & ~v29;
  v31 = *(unsigned __int8 *)(v18 + 80);
  v89 = (v82 + v31 + v30) & ~v31;
  v32 = swift_allocObject(&unk_1C2530, v89 + v80, v23 | v25 | v27 | v29 | v31 | 7);
  *(_QWORD *)(v32 + 16) = v91;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v32 + v24, v120, v117);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v32 + v26, v99, v97);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v32 + v28, v103, v101);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v32 + v30, v108, v105);
  v121 = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v32 + v89, v114, v111);
  v33 = v91;
  v34 = BATracker.optedIn.getter();
  v35 = v0[50];
  v36 = v0[51];
  v37 = v0[46];
  v38 = v0[47];
  if ((v34 & 1) != 0)
  {
    v39 = v0[48];
    v40 = (void *)objc_opt_self(BADoNotDisturbHelper);
    v93(v35, v36, v37);
    v41 = *(unsigned __int8 *)(v38 + 80);
    v42 = (v41 + 32) & ~v41;
    v43 = swift_allocObject(&unk_1C2558, v42 + v39, v41 | 7);
    *(_QWORD *)(v43 + 16) = sub_1098EC;
    *(_QWORD *)(v43 + 24) = v32;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v43 + v42, v35, v37);
    v0[6] = sub_1099D8;
    v0[7] = v43;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1028DC;
    v0[5] = &unk_1C2570;
    v44 = _Block_copy(v0 + 2);
    v45 = v0[7];
    swift_retain(v32);
    swift_release(v45);
    objc_msgSend(v40, "fetchCurrentState:", v44);
    _Block_release(v44);
  }
  else
  {
    v46 = v0[49];
    v112 = v0[39];
    v115 = v0[44];
    v47 = v0[29];
    v106 = v0[24];
    v109 = v0[34];
    v48 = v0[20];
    v118 = v0[19];
    v49 = v0[18];
    v50 = (void *)v0[12];
    v93(v35, v36, v37);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v38 + 104))(v46, enum case for DoNotDisturbStatus.unknown(_:), v37);
    DoNotDisturbData.init(startStatus:endStatus:)(v35, v46);
    sub_105C74(v48, v50, v115, v112, v109, v47, v106);
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v48, v49);
  }
  v96 = v0[55];
  v98 = v0[52];
  v95 = v0[51];
  v100 = v0[50];
  v102 = v0[49];
  v92 = v0[47];
  v94 = v0[46];
  v51 = v0[44];
  v52 = v0[41];
  v53 = v0[42];
  v54 = v0[39];
  v104 = v0[45];
  v107 = v0[40];
  v56 = v0[36];
  v55 = v0[37];
  v110 = v0[35];
  v79 = v0[34];
  v57 = v0[31];
  v58 = v0[32];
  v113 = v0[30];
  v77 = v0[27];
  v83 = v0[26];
  v85 = v0[29];
  v116 = v0[25];
  v81 = v0[22];
  v87 = v0[21];
  v90 = v0[24];
  v119 = v0[20];
  v59 = (void *)v0[12];
  swift_release(v121);

  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v51, v52);
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v54, v56);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v79, v57);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v85, v83);
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v90, v87);
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v95, v94);
  swift_task_dealloc(v96);
  swift_task_dealloc(v98);
  swift_task_dealloc(v95);
  swift_task_dealloc(v100);
  swift_task_dealloc(v102);
  swift_task_dealloc(v104);
  swift_task_dealloc(v51);
  swift_task_dealloc(v107);
  swift_task_dealloc(v54);
  swift_task_dealloc(v110);
  swift_task_dealloc(v79);
  swift_task_dealloc(v113);
  swift_task_dealloc(v85);
  swift_task_dealloc(v116);
  swift_task_dealloc(v90);
  swift_task_dealloc(v119);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_105C74(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;

  v51 = a6;
  v52 = a7;
  v50 = a5;
  v47 = a3;
  v48 = a4;
  v56 = a2;
  v53 = a1;
  v65 = type metadata accessor for DoNotDisturbData(0);
  v61 = *(_QWORD *)(v65 - 8);
  v55 = *(_QWORD *)(v61 + 64);
  __chkstk_darwin(v65);
  v64 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for ErrorData(0);
  v46 = *(_QWORD *)(v63 - 8);
  v54 = *(_QWORD *)(v46 + 64);
  __chkstk_darwin(v63);
  v62 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for BitRateData(0);
  v58 = *(_QWORD *)(v60 - 8);
  v49 = *(_QWORD *)(v58 + 64);
  __chkstk_darwin(v60);
  v59 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ListeningActionSourceData(0);
  v57 = *(_QWORD *)(v10 - 8);
  v44 = v10;
  v11 = *(_QWORD *)(v57 + 64);
  __chkstk_darwin(v10);
  v45 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ListeningSessionData(0);
  v13 = *(_QWORD *)(v12 - 8);
  v42 = v12;
  v14 = *(_QWORD *)(v13 + 64);
  __chkstk_darwin(v12);
  v43 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ContentData(0);
  v16 = *(_QWORD *)(v15 - 8);
  v40 = v15;
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v41 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v16 + 16))();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v39 = v13;
  v18((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v48, v12);
  v19 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v50, v10);
  v20 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v59, v51, v60);
  v21 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v62, v52, v63);
  v22 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v64, v53, v65);
  v23 = *(unsigned __int8 *)(v16 + 80);
  v24 = (v23 + 24) & ~v23;
  v25 = *(unsigned __int8 *)(v13 + 80);
  v26 = (v17 + v25 + v24) & ~v25;
  v27 = *(unsigned __int8 *)(v19 + 80);
  v28 = (v14 + v27 + v26) & ~v27;
  v29 = *(unsigned __int8 *)(v20 + 80);
  v30 = (v11 + v29 + v28) & ~v29;
  v31 = *(unsigned __int8 *)(v21 + 80);
  v32 = (v49 + v31 + v30) & ~v31;
  v33 = *(unsigned __int8 *)(v22 + 80);
  v34 = (v54 + v33 + v32) & ~v33;
  v35 = swift_allocObject(&unk_1C25A8, v34 + v55, v23 | v25 | v27 | v29 | v31 | v33 | 7);
  v36 = v56;
  *(_QWORD *)(v35 + 16) = v56;
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v35 + v24, v41, v40);
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v35 + v26, v43, v42);
  (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v35 + v28, v45, v44);
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 32))(v35 + v30, v59, v60);
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v35 + v32, v62, v63);
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v35 + v34, v64, v65);
  v37 = v36;
  BATracker.performAfterPrivateDataFetched(completionHandler:)(sub_109BF0, v35);
  return swift_release(v35);
}

uint64_t sub_106038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;

  v8 = sub_108F90(&qword_20EDC8);
  v9 = type metadata accessor for DataEventTrait(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v49 = ((v11 + 32) & ~v11) + *(_QWORD *)(v10 + 72);
  v50 = (v11 + 32) & ~v11;
  v47 = v11 | 7;
  v12 = swift_allocObject(v8, v49, v11 | 7);
  *(_OWORD *)(v12 + 16) = xmmword_173340;
  v13 = enum case for DataEventTrait.onlyOnce(_:);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104);
  v46 = enum case for DataEventTrait.onlyOnce(_:);
  v45 = v9;
  v48(v12 + v50, enum case for DataEventTrait.onlyOnce(_:), v9);
  v14 = type metadata accessor for ContentData(0);
  v15 = sub_10AA94(&qword_20EDF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
  v16 = sub_10AA94(&qword_20EDF8, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
  BATracker.push<A>(data:traits:file:line:)(a2, v12, 0xD000000000000073, 0x8000000000164A80, 495, v14, v15, v16);
  swift_bridgeObjectRelease(v12);
  v17 = swift_allocObject(v8, v49, v47);
  *(_OWORD *)(v17 + 16) = xmmword_173340;
  v48(v17 + v50, v13, v9);
  v18 = type metadata accessor for ListeningSessionData(0);
  v19 = sub_10AA94(&qword_20EE80, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningSessionData, (uint64_t)&protocol conformance descriptor for ListeningSessionData);
  v20 = sub_10AA94(&qword_20EE88, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningSessionData, (uint64_t)&protocol conformance descriptor for ListeningSessionData);
  BATracker.push<A>(data:traits:file:line:)(a3, v17, 0xD000000000000073, 0x8000000000164A80, 496, v18, v19, v20);
  swift_bridgeObjectRelease(v17);
  v21 = swift_allocObject(v8, v49, v47);
  *(_OWORD *)(v21 + 16) = xmmword_173340;
  v48(v21 + v50, v46, v45);
  v22 = type metadata accessor for ListeningActionSourceData(0);
  v23 = sub_10AA94(&qword_20EE90, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningActionSourceData, (uint64_t)&protocol conformance descriptor for ListeningActionSourceData);
  v24 = sub_10AA94(&qword_20EE98, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningActionSourceData, (uint64_t)&protocol conformance descriptor for ListeningActionSourceData);
  BATracker.push<A>(data:traits:file:line:)(a4, v21, 0xD000000000000073, 0x8000000000164A80, 497, v22, v23, v24);
  swift_bridgeObjectRelease(v21);
  v25 = swift_allocObject(v8, v49, v47);
  *(_OWORD *)(v25 + 16) = xmmword_173340;
  v48(v25 + v50, v46, v45);
  v26 = type metadata accessor for BitRateData(0);
  v27 = sub_10AA94(&qword_20EE00, (uint64_t (*)(uint64_t))&type metadata accessor for BitRateData, (uint64_t)&protocol conformance descriptor for BitRateData);
  v28 = sub_10AA94(&qword_20EE08, (uint64_t (*)(uint64_t))&type metadata accessor for BitRateData, (uint64_t)&protocol conformance descriptor for BitRateData);
  BATracker.push<A>(data:traits:file:line:)(a5, v25, 0xD000000000000073, 0x8000000000164A80, 498, v26, v27, v28);
  swift_bridgeObjectRelease(v25);
  v29 = swift_allocObject(v8, v49, v47);
  *(_OWORD *)(v29 + 16) = xmmword_173340;
  v48(v29 + v50, v46, v45);
  v30 = type metadata accessor for ErrorData(0);
  v31 = sub_10AA94(&qword_20EE10, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorData, (uint64_t)&protocol conformance descriptor for ErrorData);
  v32 = sub_10AA94(&qword_20EE18, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorData, (uint64_t)&protocol conformance descriptor for ErrorData);
  BATracker.push<A>(data:traits:file:line:)(a6, v29, 0xD000000000000073, 0x8000000000164A80, 499, v30, v31, v32);
  swift_bridgeObjectRelease(v29);
  v33 = swift_allocObject(v8, v49, v47);
  *(_OWORD *)(v33 + 16) = xmmword_173340;
  v48(v33 + v50, v46, v45);
  v34 = type metadata accessor for DoNotDisturbData(0);
  v35 = sub_10AA94(&qword_20EF08, (uint64_t (*)(uint64_t))&type metadata accessor for DoNotDisturbData, (uint64_t)&protocol conformance descriptor for DoNotDisturbData);
  v36 = sub_10AA94(&qword_20EF10, (uint64_t (*)(uint64_t))&type metadata accessor for DoNotDisturbData, (uint64_t)&protocol conformance descriptor for DoNotDisturbData);
  BATracker.push<A>(data:traits:file:line:)(a7, v33, 0xD000000000000073, 0x8000000000164A80, 500, v34, v35, v36);
  swift_bridgeObjectRelease(v33);
  v37 = type metadata accessor for PlayAttemptEvent(0);
  v38 = sub_10AA94(&qword_20EF18, (uint64_t (*)(uint64_t))&type metadata accessor for PlayAttemptEvent, (uint64_t)&protocol conformance descriptor for PlayAttemptEvent);
  return BATracker.submit<A>(_:completion:)(v37, 0, 0, v37, v38);
}

uint64_t sub_106578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v19[4];

  v6 = type metadata accessor for TaskPriority(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) == 1)
  {
    sub_10988C(a1, &qword_20EEC0);
    v8 = 7168;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
    {
LABEL_3:
      v10 = *(_QWORD *)(a3 + 24);
      ObjectType = swift_getObjectType(v9);
      swift_unknownObjectRetain(v9);
      v12 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v10);
      v14 = v13;
      swift_unknownObjectRelease(v9);
      goto LABEL_6;
    }
  }
  else
  {
    v15 = TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    v8 = v15 | 0x1C00;
    v9 = *(_QWORD *)(a3 + 16);
    if (v9)
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v16 = swift_allocObject(&unk_1C2508, 32, 7);
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v17 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  else
  {
    v17 = 0;
  }
  return swift_task_create(v8, v17, (char *)&type metadata for () + 8, &unk_20EEE0, v16);
}

uint64_t sub_1066C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  *(_QWORD *)(v8 + 144) = v43;
  *(_QWORD *)(v8 + 152) = v44;
  *(_OWORD *)(v8 + 128) = v42;
  *(_QWORD *)(v8 + 112) = a7;
  *(_QWORD *)(v8 + 120) = a8;
  *(_QWORD *)(v8 + 96) = a5;
  *(_QWORD *)(v8 + 104) = a6;
  *(_QWORD *)(v8 + 88) = a4;
  v10 = type metadata accessor for DoNotDisturbData(0);
  *(_QWORD *)(v8 + 160) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 168) = v11;
  *(_QWORD *)(v8 + 176) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ErrorData(0);
  *(_QWORD *)(v8 + 184) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 192) = v13;
  v14 = *(_QWORD *)(v13 + 64);
  *(_QWORD *)(v8 + 200) = v14;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 208) = swift_task_alloc(v15);
  *(_QWORD *)(v8 + 216) = swift_task_alloc(v15);
  v16 = type metadata accessor for BitRateData(0);
  *(_QWORD *)(v8 + 224) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v8 + 232) = v17;
  v18 = *(_QWORD *)(v17 + 64);
  *(_QWORD *)(v8 + 240) = v18;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 248) = swift_task_alloc(v19);
  *(_QWORD *)(v8 + 256) = swift_task_alloc(v19);
  v20 = type metadata accessor for ListeningActionSourceData(0);
  *(_QWORD *)(v8 + 264) = v20;
  v21 = *(_QWORD *)(v20 - 8);
  *(_QWORD *)(v8 + 272) = v21;
  v22 = *(_QWORD *)(v21 + 64);
  *(_QWORD *)(v8 + 280) = v22;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 288) = swift_task_alloc(v23);
  *(_QWORD *)(v8 + 296) = swift_task_alloc(v23);
  v24 = type metadata accessor for ListeningSessionData(0);
  *(_QWORD *)(v8 + 304) = v24;
  v25 = *(_QWORD *)(v24 - 8);
  *(_QWORD *)(v8 + 312) = v25;
  v26 = *(_QWORD *)(v25 + 64);
  *(_QWORD *)(v8 + 320) = v26;
  v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 328) = swift_task_alloc(v27);
  *(_QWORD *)(v8 + 336) = swift_task_alloc(v27);
  v28 = type metadata accessor for ContentData(0);
  *(_QWORD *)(v8 + 344) = v28;
  v29 = *(_QWORD *)(v28 - 8);
  *(_QWORD *)(v8 + 352) = v29;
  v30 = *(_QWORD *)(v29 + 64);
  *(_QWORD *)(v8 + 360) = v30;
  v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 368) = swift_task_alloc(v31);
  *(_QWORD *)(v8 + 376) = swift_task_alloc(v31);
  v32 = type metadata accessor for DoNotDisturbStatus(0);
  *(_QWORD *)(v8 + 384) = v32;
  v33 = *(_QWORD *)(v32 - 8);
  *(_QWORD *)(v8 + 392) = v33;
  v34 = *(_QWORD *)(v33 + 64);
  *(_QWORD *)(v8 + 400) = v34;
  v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v8 + 408) = swift_task_alloc(v35);
  *(_QWORD *)(v8 + 416) = swift_task_alloc(v35);
  *(_QWORD *)(v8 + 424) = swift_task_alloc(v35);
  v36 = sub_108F90(&qword_20EEE8);
  v37 = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v36 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v8 + 432) = v37;
  v38 = type metadata accessor for UserEmbeddingData(0);
  *(_QWORD *)(v8 + 440) = v38;
  v39 = *(_QWORD *)(v38 - 8);
  *(_QWORD *)(v8 + 448) = v39;
  *(_QWORD *)(v8 + 456) = swift_task_alloc((*(_QWORD *)(v39 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = (_QWORD *)swift_task_alloc(dword_20EEF4);
  *(_QWORD *)(v8 + 464) = v40;
  *v40 = v8;
  v40[1] = sub_106930;
  v40[3] = v37;
  v40[4] = a4;
  return swift_task_switch(sub_104F5C, 0, 0);
}

uint64_t sub_106930()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 464));
  return swift_task_switch(sub_106984, 0, 0);
}

uint64_t sub_106984()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v1 = v0[55];
  v2 = v0[56];
  v3 = v0[54];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10988C(v3, &qword_20EEE8);
  }
  else
  {
    v4 = v0[57];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4, v3, v1);
    v5 = sub_108F90(&qword_20EDC8);
    v6 = type metadata accessor for DataEventTrait(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned __int8 *)(v7 + 80);
    v9 = (v8 + 32) & ~v8;
    v10 = swift_allocObject(v5, v9 + *(_QWORD *)(v7 + 72), v8 | 7);
    *(_OWORD *)(v10 + 16) = xmmword_173340;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10 + v9, enum case for DataEventTrait.onlyOnce(_:), v6);
    v11 = sub_10AA94(&qword_20EEF8, (uint64_t (*)(uint64_t))&type metadata accessor for UserEmbeddingData, (uint64_t)&protocol conformance descriptor for UserEmbeddingData);
    v12 = sub_10AA94(&qword_20EF00, (uint64_t (*)(uint64_t))&type metadata accessor for UserEmbeddingData, (uint64_t)&protocol conformance descriptor for UserEmbeddingData);
    BATracker.push<A>(data:traits:file:line:)(v4, v10, 0xD000000000000073, 0x8000000000164A80, 522, v1, v11, v12);
    swift_bridgeObjectRelease(v10);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v1);
  }
  v66 = v0[49];
  v68 = v0[48];
  v70 = v0[53];
  v125 = v0[47];
  v13 = v0[44];
  v85 = v0[45];
  v72 = v13;
  v73 = v0[46];
  v14 = v0[43];
  v119 = v14;
  v101 = v0[42];
  v74 = v0[41];
  v15 = v0[39];
  v83 = v0[40];
  v99 = v0[38];
  v105 = v0[37];
  v75 = v0[36];
  v16 = v0[34];
  v81 = v0[35];
  v103 = v0[33];
  v110 = v0[32];
  v76 = v0[31];
  v17 = v0[29];
  v79 = v0[30];
  v122 = v17;
  v107 = v0[28];
  v116 = v0[27];
  v77 = v0[26];
  v88 = v0[25];
  v128 = v0[24];
  v113 = v0[23];
  v18 = v0[13];
  v19 = v0[11] + OBJC_IVAR___AEAudiobookAnalyticsRecorder_doNotDisturbStatusAtStart;
  v95 = v0[19];
  v91 = (void *)v0[12];
  v93 = v0[18];
  v20 = v0[15];
  v64 = v0[16];
  v65 = v0[17];
  v21 = v0[14];
  swift_beginAccess(v19, v0 + 8, 0, 0);
  v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16);
  v97(v70, v19, v68);
  v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v71(v125, v18, v14);
  v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v69(v101, v21, v99);
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  v67(v105, v20, v103);
  v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
  v63(v110, v64, v107);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 16);
  v22(v116, v65, v113);
  v71(v73, v125, v14);
  v69(v74, v101, v99);
  v67(v75, v105, v103);
  v63(v76, v110, v107);
  v22(v77, v116, v113);
  v23 = *(unsigned __int8 *)(v72 + 80);
  v24 = (v23 + 24) & ~v23;
  v25 = *(unsigned __int8 *)(v15 + 80);
  v26 = (v85 + v25 + v24) & ~v25;
  v27 = *(unsigned __int8 *)(v16 + 80);
  v28 = (v83 + v27 + v26) & ~v27;
  v29 = *(unsigned __int8 *)(v17 + 80);
  v30 = (v81 + v29 + v28) & ~v29;
  v31 = *(unsigned __int8 *)(v128 + 80);
  v86 = (v79 + v31 + v30) & ~v31;
  v89 = (v88 + v86 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject(&unk_1C2670, v89 + 16, v23 | v25 | v27 | v29 | v31 | 7);
  *(_QWORD *)(v32 + 16) = v91;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v32 + v24, v125, v119);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v32 + v26, v101, v99);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v32 + v28, v105, v103);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 32))(v32 + v30, v110, v107);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v128 + 32))(v32 + v86, v116, v113);
  v129 = v32;
  v33 = (_QWORD *)(v32 + v89);
  *v33 = v93;
  v33[1] = v95;
  v34 = v91;
  swift_retain_n(v95, 2);
  v35 = v34;
  v36 = BATracker.optedIn.getter();
  v37 = v0[52];
  v38 = v0[53];
  v39 = v0[48];
  v40 = v0[49];
  if ((v36 & 1) != 0)
  {
    v41 = v0[50];
    v42 = (void *)objc_opt_self(BADoNotDisturbHelper);
    v97(v37, v38, v39);
    v43 = *(unsigned __int8 *)(v40 + 80);
    v44 = (v43 + 32) & ~v43;
    v45 = swift_allocObject(&unk_1C2698, v44 + v41, v43 | 7);
    *(_QWORD *)(v45 + 16) = sub_10A2F8;
    *(_QWORD *)(v45 + 24) = v32;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v45 + v44, v37, v39);
    v0[6] = sub_1099D8;
    v0[7] = v45;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1028DC;
    v0[5] = &unk_1C26B0;
    v46 = _Block_copy(v0 + 2);
    v47 = v0[7];
    swift_retain(v32);
    swift_release(v47);
    objc_msgSend(v42, "fetchCurrentState:", v46);
    _Block_release(v46);
  }
  else
  {
    v48 = v0[51];
    v120 = v0[41];
    v123 = v0[46];
    v114 = v0[31];
    v117 = v0[36];
    v49 = v0[22];
    v126 = v0[21];
    v51 = v0[19];
    v50 = v0[20];
    v108 = v0[18];
    v111 = v0[26];
    v52 = (void *)v0[12];
    v97(v37, v38, v39);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 104))(v48, enum case for DoNotDisturbStatus.unknown(_:), v39);
    DoNotDisturbData.init(startStatus:endStatus:)(v37, v48);
    sub_1071AC(v49, v52, v123, v120, v117, v114, v111, v108, v51);
    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v49, v50);
  }
  v102 = v0[57];
  v104 = v0[54];
  v100 = v0[53];
  v106 = v0[52];
  v109 = v0[51];
  v96 = v0[49];
  v98 = v0[48];
  v53 = v0[46];
  v54 = v0[43];
  v55 = v0[44];
  v56 = v0[41];
  v112 = v0[47];
  v115 = v0[42];
  v58 = v0[38];
  v57 = v0[39];
  v118 = v0[37];
  v80 = v0[36];
  v59 = v0[33];
  v60 = v0[34];
  v121 = v0[32];
  v78 = v0[29];
  v84 = v0[28];
  v87 = v0[31];
  v124 = v0[27];
  v82 = v0[24];
  v90 = v0[23];
  v92 = v0[26];
  v127 = v0[22];
  v94 = v0[19];
  v61 = (void *)v0[12];
  swift_release(v129);

  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v53, v54);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v80, v59);
  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v87, v84);
  (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v92, v90);
  swift_release(v94);
  (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v100, v98);
  swift_task_dealloc(v102);
  swift_task_dealloc(v104);
  swift_task_dealloc(v100);
  swift_task_dealloc(v106);
  swift_task_dealloc(v109);
  swift_task_dealloc(v112);
  swift_task_dealloc(v53);
  swift_task_dealloc(v115);
  swift_task_dealloc(v56);
  swift_task_dealloc(v118);
  swift_task_dealloc(v80);
  swift_task_dealloc(v121);
  swift_task_dealloc(v87);
  swift_task_dealloc(v124);
  swift_task_dealloc(v92);
  swift_task_dealloc(v127);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1071AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  v57 = a6;
  v58 = a7;
  v56 = a5;
  v53 = a3;
  v54 = a4;
  v62 = a2;
  v59 = a1;
  v63 = a9;
  v64 = a8;
  v73 = type metadata accessor for DoNotDisturbData(0);
  v69 = *(_QWORD *)(v73 - 8);
  v61 = *(_QWORD *)(v69 + 64);
  __chkstk_darwin(v73);
  v72 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for ErrorData(0);
  v67 = *(_QWORD *)(v71 - 8);
  v60 = *(_QWORD *)(v67 + 64);
  __chkstk_darwin(v71);
  v70 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = type metadata accessor for BitRateData(0);
  v66 = *(_QWORD *)(v68 - 8);
  v55 = *(_QWORD *)(v66 + 64);
  __chkstk_darwin(v68);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v12;
  v13 = type metadata accessor for ListeningActionSourceData(0);
  v65 = *(_QWORD *)(v13 - 8);
  v50 = v13;
  v14 = *(_QWORD *)(v65 + 64);
  __chkstk_darwin(v13);
  v51 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ListeningSessionData(0);
  v16 = *(_QWORD *)(v15 - 8);
  v48 = v15;
  v17 = *(_QWORD *)(v16 + 64);
  __chkstk_darwin(v15);
  v49 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ContentData(0);
  v19 = *(_QWORD *)(v18 - 8);
  v46 = v18;
  v20 = *(_QWORD *)(v19 + 64);
  __chkstk_darwin(v18);
  v47 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(void))(v19 + 16))();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v45 = v16;
  v21((char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v15);
  v22 = v65;
  (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v56, v13);
  v23 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v12, v57, v68);
  v24 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v70, v58, v71);
  v25 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v72, v59, v73);
  v26 = *(unsigned __int8 *)(v19 + 80);
  v27 = (v26 + 24) & ~v26;
  v28 = *(unsigned __int8 *)(v16 + 80);
  v29 = (v20 + v28 + v27) & ~v28;
  v30 = *(unsigned __int8 *)(v22 + 80);
  v31 = (v17 + v30 + v29) & ~v30;
  v32 = *(unsigned __int8 *)(v23 + 80);
  v33 = (v14 + v32 + v31) & ~v32;
  v34 = *(unsigned __int8 *)(v24 + 80);
  v35 = (v55 + v34 + v33) & ~v34;
  v36 = *(unsigned __int8 *)(v25 + 80);
  v37 = (v60 + v36 + v35) & ~v36;
  v38 = (v61 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject(&unk_1C26E8, v38 + 16, v26 | v28 | v30 | v32 | v34 | v36 | 7);
  v40 = v62;
  *(_QWORD *)(v39 + 16) = v62;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v39 + v27, v47, v46);
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v39 + v29, v49, v48);
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v39 + v31, v51, v50);
  (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v39 + v33, v52, v68);
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v39 + v35, v70, v71);
  (*(void (**)(uint64_t, char *, uint64_t))(v69 + 32))(v39 + v37, v72, v73);
  v41 = (_QWORD *)(v39 + v38);
  v42 = v63;
  *v41 = v64;
  v41[1] = v42;
  v43 = v40;
  swift_retain(v42);
  BATracker.performAfterPrivateDataFetched(completionHandler:)(sub_10A6BC, v39);
  return swift_release(v39);
}

uint64_t sub_1075B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  unsigned int v45;
  void (*v52)(uint64_t);
  uint64_t v53;

  v9 = sub_108F90(&qword_20EDC8);
  v10 = type metadata accessor for DataEventTrait(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 32) & ~v12;
  v14 = v13 + *(_QWORD *)(v11 + 72);
  v53 = v12 | 7;
  v15 = swift_allocObject(v9, v14, v12 | 7);
  *(_OWORD *)(v15 + 16) = xmmword_173340;
  v45 = enum case for DataEventTrait.onlyOnce(_:);
  v16 = *(void (**)(uint64_t))(v11 + 104);
  v16(v15 + v13);
  v52 = v16;
  v17 = type metadata accessor for ContentData(0);
  v18 = sub_10AA94(&qword_20EDF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
  v19 = sub_10AA94(&qword_20EDF8, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
  BATracker.push<A>(data:traits:file:line:)(a2, v15, 0xD000000000000073, 0x8000000000164A80, 526, v17, v18, v19);
  swift_bridgeObjectRelease(v15);
  v20 = swift_allocObject(v9, v14, v53);
  *(_OWORD *)(v20 + 16) = xmmword_173340;
  ((void (*)(uint64_t, _QWORD, uint64_t))v16)(v20 + v13, v45, v10);
  v21 = type metadata accessor for ListeningSessionData(0);
  v22 = sub_10AA94(&qword_20EE80, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningSessionData, (uint64_t)&protocol conformance descriptor for ListeningSessionData);
  v23 = sub_10AA94(&qword_20EE88, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningSessionData, (uint64_t)&protocol conformance descriptor for ListeningSessionData);
  BATracker.push<A>(data:traits:file:line:)(a3, v20, 0xD000000000000073, 0x8000000000164A80, 527, v21, v22, v23);
  swift_bridgeObjectRelease(v20);
  v24 = swift_allocObject(v9, v14, v53);
  *(_OWORD *)(v24 + 16) = xmmword_173340;
  v44 = v13;
  ((void (*)(uint64_t, _QWORD, uint64_t))v52)(v24 + v13, v45, v10);
  v25 = type metadata accessor for ListeningActionSourceData(0);
  v26 = sub_10AA94(&qword_20EE90, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningActionSourceData, (uint64_t)&protocol conformance descriptor for ListeningActionSourceData);
  v27 = sub_10AA94(&qword_20EE98, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningActionSourceData, (uint64_t)&protocol conformance descriptor for ListeningActionSourceData);
  BATracker.push<A>(data:traits:file:line:)(a4, v24, 0xD000000000000073, 0x8000000000164A80, 528, v25, v26, v27);
  swift_bridgeObjectRelease(v24);
  v28 = swift_allocObject(v9, v14, v53);
  *(_OWORD *)(v28 + 16) = xmmword_173340;
  ((void (*)(uint64_t, _QWORD, uint64_t))v52)(v28 + v13, v45, v10);
  v29 = type metadata accessor for BitRateData(0);
  v30 = sub_10AA94(&qword_20EE00, (uint64_t (*)(uint64_t))&type metadata accessor for BitRateData, (uint64_t)&protocol conformance descriptor for BitRateData);
  v31 = sub_10AA94(&qword_20EE08, (uint64_t (*)(uint64_t))&type metadata accessor for BitRateData, (uint64_t)&protocol conformance descriptor for BitRateData);
  BATracker.push<A>(data:traits:file:line:)(a5, v28, 0xD000000000000073, 0x8000000000164A80, 529, v29, v30, v31);
  swift_bridgeObjectRelease(v28);
  v32 = swift_allocObject(v9, v14, v53);
  *(_OWORD *)(v32 + 16) = xmmword_173340;
  ((void (*)(uint64_t, _QWORD, uint64_t))v52)(v32 + v44, v45, v10);
  v33 = type metadata accessor for ErrorData(0);
  v34 = sub_10AA94(&qword_20EE10, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorData, (uint64_t)&protocol conformance descriptor for ErrorData);
  v35 = sub_10AA94(&qword_20EE18, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorData, (uint64_t)&protocol conformance descriptor for ErrorData);
  BATracker.push<A>(data:traits:file:line:)(a6, v32, 0xD000000000000073, 0x8000000000164A80, 530, v33, v34, v35);
  swift_bridgeObjectRelease(v32);
  v36 = swift_allocObject(v9, v14, v53);
  *(_OWORD *)(v36 + 16) = xmmword_173340;
  ((void (*)(uint64_t, _QWORD, uint64_t))v52)(v36 + v44, v45, v10);
  v37 = type metadata accessor for DoNotDisturbData(0);
  v38 = sub_10AA94(&qword_20EF08, (uint64_t (*)(uint64_t))&type metadata accessor for DoNotDisturbData, (uint64_t)&protocol conformance descriptor for DoNotDisturbData);
  v39 = sub_10AA94(&qword_20EF10, (uint64_t (*)(uint64_t))&type metadata accessor for DoNotDisturbData, (uint64_t)&protocol conformance descriptor for DoNotDisturbData);
  BATracker.push<A>(data:traits:file:line:)(a7, v36, 0xD000000000000073, 0x8000000000164A80, 531, v37, v38, v39);
  swift_bridgeObjectRelease(v36);
  v40 = type metadata accessor for PlayEvent(0);
  v41 = sub_10AA94(&qword_20EF28, (uint64_t (*)(uint64_t))&type metadata accessor for PlayEvent, (uint64_t)&protocol conformance descriptor for PlayEvent);
  v42 = BATracker.submit<A>(_:completion:)(v40, 0, 0, v40, v41);
  return a8(v42);
}

uint64_t sub_107AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;

  v8 = sub_108F90(&qword_20EDC8);
  v9 = type metadata accessor for DataEventTrait(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v49 = ((v11 + 32) & ~v11) + *(_QWORD *)(v10 + 72);
  v50 = (v11 + 32) & ~v11;
  v47 = v11 | 7;
  v12 = swift_allocObject(v8, v49, v11 | 7);
  *(_OWORD *)(v12 + 16) = xmmword_173340;
  v13 = enum case for DataEventTrait.onlyOnce(_:);
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 104);
  v46 = enum case for DataEventTrait.onlyOnce(_:);
  v45 = v9;
  v48(v12 + v50, enum case for DataEventTrait.onlyOnce(_:), v9);
  v14 = type metadata accessor for ContentData(0);
  v15 = sub_10AA94(&qword_20EDF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
  v16 = sub_10AA94(&qword_20EDF8, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
  BATracker.push<A>(data:traits:file:line:)(a2, v12, 0xD000000000000073, 0x8000000000164A80, 554, v14, v15, v16);
  swift_bridgeObjectRelease(v12);
  v17 = swift_allocObject(v8, v49, v47);
  *(_OWORD *)(v17 + 16) = xmmword_173340;
  v48(v17 + v50, v13, v9);
  v18 = type metadata accessor for ListeningSessionData(0);
  v19 = sub_10AA94(&qword_20EE80, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningSessionData, (uint64_t)&protocol conformance descriptor for ListeningSessionData);
  v20 = sub_10AA94(&qword_20EE88, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningSessionData, (uint64_t)&protocol conformance descriptor for ListeningSessionData);
  BATracker.push<A>(data:traits:file:line:)(a3, v17, 0xD000000000000073, 0x8000000000164A80, 555, v18, v19, v20);
  swift_bridgeObjectRelease(v17);
  v21 = swift_allocObject(v8, v49, v47);
  *(_OWORD *)(v21 + 16) = xmmword_173340;
  v48(v21 + v50, v46, v45);
  v22 = type metadata accessor for ListeningActionSourceData(0);
  v23 = sub_10AA94(&qword_20EE90, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningActionSourceData, (uint64_t)&protocol conformance descriptor for ListeningActionSourceData);
  v24 = sub_10AA94(&qword_20EE98, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningActionSourceData, (uint64_t)&protocol conformance descriptor for ListeningActionSourceData);
  BATracker.push<A>(data:traits:file:line:)(a4, v21, 0xD000000000000073, 0x8000000000164A80, 556, v22, v23, v24);
  swift_bridgeObjectRelease(v21);
  v25 = swift_allocObject(v8, v49, v47);
  *(_OWORD *)(v25 + 16) = xmmword_173340;
  v48(v25 + v50, v46, v45);
  v26 = type metadata accessor for BitRateData(0);
  v27 = sub_10AA94(&qword_20EE00, (uint64_t (*)(uint64_t))&type metadata accessor for BitRateData, (uint64_t)&protocol conformance descriptor for BitRateData);
  v28 = sub_10AA94(&qword_20EE08, (uint64_t (*)(uint64_t))&type metadata accessor for BitRateData, (uint64_t)&protocol conformance descriptor for BitRateData);
  BATracker.push<A>(data:traits:file:line:)(a5, v25, 0xD000000000000073, 0x8000000000164A80, 557, v26, v27, v28);
  swift_bridgeObjectRelease(v25);
  v29 = swift_allocObject(v8, v49, v47);
  *(_OWORD *)(v29 + 16) = xmmword_173340;
  v48(v29 + v50, v46, v45);
  v30 = type metadata accessor for ErrorData(0);
  v31 = sub_10AA94(&qword_20EE10, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorData, (uint64_t)&protocol conformance descriptor for ErrorData);
  v32 = sub_10AA94(&qword_20EE18, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorData, (uint64_t)&protocol conformance descriptor for ErrorData);
  BATracker.push<A>(data:traits:file:line:)(a6, v29, 0xD000000000000073, 0x8000000000164A80, 558, v30, v31, v32);
  swift_bridgeObjectRelease(v29);
  v33 = swift_allocObject(v8, v49, v47);
  *(_OWORD *)(v33 + 16) = xmmword_173340;
  v48(v33 + v50, v46, v45);
  v34 = type metadata accessor for AudioPlaybackSpeedData(0);
  v35 = sub_10AA94(&qword_20EEA0, (uint64_t (*)(uint64_t))&type metadata accessor for AudioPlaybackSpeedData, (uint64_t)&protocol conformance descriptor for AudioPlaybackSpeedData);
  v36 = sub_10AA94(&qword_20EEA8, (uint64_t (*)(uint64_t))&type metadata accessor for AudioPlaybackSpeedData, (uint64_t)&protocol conformance descriptor for AudioPlaybackSpeedData);
  BATracker.push<A>(data:traits:file:line:)(a7, v33, 0xD000000000000073, 0x8000000000164A80, 559, v34, v35, v36);
  swift_bridgeObjectRelease(v33);
  v37 = type metadata accessor for AudioPlaybackSpeedChangeEvent(0);
  v38 = sub_10AA94(&qword_20EEB0, (uint64_t (*)(uint64_t))&type metadata accessor for AudioPlaybackSpeedChangeEvent, (uint64_t)&protocol conformance descriptor for AudioPlaybackSpeedChangeEvent);
  return BATracker.submit<A>(_:completion:)(v37, 0, 0, v37, v38);
}

uint64_t sub_10802C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v7 = sub_108F90(&qword_20EDC8);
  v8 = type metadata accessor for DataEventTrait(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v10 + 32) & ~v10;
  v42 = v11 + *(_QWORD *)(v9 + 72);
  v43 = v10 | 7;
  v12 = swift_allocObject(v7, v42, v10 | 7);
  *(_OWORD *)(v12 + 16) = xmmword_173340;
  v44 = v11;
  v13 = enum case for DataEventTrait.onlyOnce(_:);
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104);
  v41 = enum case for DataEventTrait.onlyOnce(_:);
  v36(v12 + v11, enum case for DataEventTrait.onlyOnce(_:), v8);
  v14 = type metadata accessor for ContentData(0);
  v15 = sub_10AA94(&qword_20EDF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
  v16 = sub_10AA94(&qword_20EDF8, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
  BATracker.push<A>(data:traits:file:line:)(a2, v12, 0xD000000000000073, 0x8000000000164A80, 578, v14, v15, v16);
  swift_bridgeObjectRelease(v12);
  v17 = swift_allocObject(v7, v42, v43);
  *(_OWORD *)(v17 + 16) = xmmword_173340;
  v36(v17 + v11, v13, v8);
  v18 = type metadata accessor for ListeningActionSourceData(0);
  v19 = sub_10AA94(&qword_20EE90, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningActionSourceData, (uint64_t)&protocol conformance descriptor for ListeningActionSourceData);
  v20 = sub_10AA94(&qword_20EE98, (uint64_t (*)(uint64_t))&type metadata accessor for ListeningActionSourceData, (uint64_t)&protocol conformance descriptor for ListeningActionSourceData);
  BATracker.push<A>(data:traits:file:line:)(a3, v17, 0xD000000000000073, 0x8000000000164A80, 579, v18, v19, v20);
  swift_bridgeObjectRelease(v17);
  v21 = swift_allocObject(v7, v42, v43);
  *(_OWORD *)(v21 + 16) = xmmword_173340;
  v36(v21 + v44, v41, v8);
  v22 = type metadata accessor for BitRateData(0);
  v23 = sub_10AA94(&qword_20EE00, (uint64_t (*)(uint64_t))&type metadata accessor for BitRateData, (uint64_t)&protocol conformance descriptor for BitRateData);
  v24 = sub_10AA94(&qword_20EE08, (uint64_t (*)(uint64_t))&type metadata accessor for BitRateData, (uint64_t)&protocol conformance descriptor for BitRateData);
  BATracker.push<A>(data:traits:file:line:)(a4, v21, 0xD000000000000073, 0x8000000000164A80, 580, v22, v23, v24);
  swift_bridgeObjectRelease(v21);
  v25 = swift_allocObject(v7, v42, v43);
  *(_OWORD *)(v25 + 16) = xmmword_173340;
  v36(v25 + v44, v41, v8);
  v26 = type metadata accessor for ErrorData(0);
  v27 = sub_10AA94(&qword_20EE10, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorData, (uint64_t)&protocol conformance descriptor for ErrorData);
  v28 = sub_10AA94(&qword_20EE18, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorData, (uint64_t)&protocol conformance descriptor for ErrorData);
  BATracker.push<A>(data:traits:file:line:)(a5, v25, 0xD000000000000073, 0x8000000000164A80, 581, v26, v27, v28);
  swift_bridgeObjectRelease(v25);
  v29 = swift_allocObject(v7, v42, v43);
  *(_OWORD *)(v29 + 16) = xmmword_173340;
  v36(v29 + v44, v41, v8);
  v30 = type metadata accessor for SkipData(0);
  v31 = sub_10AA94(&qword_20EF40, (uint64_t (*)(uint64_t))&type metadata accessor for SkipData, (uint64_t)&protocol conformance descriptor for SkipData);
  v32 = sub_10AA94(&qword_20EF48, (uint64_t (*)(uint64_t))&type metadata accessor for SkipData, (uint64_t)&protocol conformance descriptor for SkipData);
  BATracker.push<A>(data:traits:file:line:)(a6, v29, 0xD000000000000073, 0x8000000000164A80, 582, v30, v31, v32);
  swift_bridgeObjectRelease(v29);
  v33 = type metadata accessor for AudioSkipEvent(0);
  v34 = sub_10AA94(&qword_20EF50, (uint64_t (*)(uint64_t))&type metadata accessor for AudioSkipEvent, (uint64_t)&protocol conformance descriptor for AudioSkipEvent);
  return BATracker.submit<A>(_:completion:)(v33, 0, 0, v33, v34);
}

uint64_t sub_1084A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_108F90(&qword_20EDC8);
  v6 = type metadata accessor for DataEventTrait(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject(v5, v9 + *(_QWORD *)(v7 + 72), v8 | 7);
  *(_OWORD *)(v10 + 16) = xmmword_173340;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 + 104))(v10 + v9, enum case for DataEventTrait.onlyOnce(_:), v6);
  v11 = type metadata accessor for CellularData(0);
  v12 = sub_10AA94(&qword_20EDD0, (uint64_t (*)(uint64_t))&type metadata accessor for CellularData, (uint64_t)&protocol conformance descriptor for CellularData);
  v13 = sub_10AA94(&qword_20EDD8, (uint64_t (*)(uint64_t))&type metadata accessor for CellularData, (uint64_t)&protocol conformance descriptor for CellularData);
  BATracker.push<A>(data:traits:file:line:)(a2, v10, 0xD000000000000073, 0x8000000000164A80, 596, v11, v12, v13);
  swift_bridgeObjectRelease(v10);
  v14 = type metadata accessor for CellularToggleEvent(0);
  v15 = sub_10AA94(&qword_20EDE0, (uint64_t (*)(uint64_t))&type metadata accessor for CellularToggleEvent, (uint64_t)&protocol conformance descriptor for CellularToggleEvent);
  BATracker.submit<A>(_:completion:)(v14, 0, 0, v14, v15);
  sub_1093C0(0, &qword_20EA88, OS_dispatch_queue_ptr);
  v16 = swift_allocObject(&unk_1C2468, 24, 7);
  *(_QWORD *)(v16 + 16) = a3;
  swift_unknownObjectRetain(a3);
  static OS_dispatch_queue.dispatchAsyncOnMainIfNeeded(block:)(sub_10916C, v16);
  return swift_release(v16);
}

uint64_t sub_108664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void (*v30)(uint64_t);
  unsigned int v31;

  v5 = sub_108F90(&qword_20EDC8);
  v6 = type metadata accessor for DataEventTrait(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((v8 + 32) & ~v8) + *(_QWORD *)(v7 + 72);
  v10 = (v8 + 32) & ~v8;
  v26 = v6;
  v27 = v8 | 7;
  v11 = swift_allocObject(v5, v9, v8 | 7);
  *(_OWORD *)(v11 + 16) = xmmword_173340;
  v31 = enum case for DataEventTrait.onlyOnce(_:);
  v30 = *(void (**)(uint64_t))(v7 + 104);
  v30(v11 + v10);
  v12 = type metadata accessor for ContentData(0);
  v13 = sub_10AA94(&qword_20EDF0, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
  v14 = sub_10AA94(&qword_20EDF8, (uint64_t (*)(uint64_t))&type metadata accessor for ContentData, (uint64_t)&protocol conformance descriptor for ContentData);
  BATracker.push<A>(data:traits:file:line:)(a2, v11, 0xD000000000000073, 0x8000000000164A80, 616, v12, v13, v14);
  swift_bridgeObjectRelease(v11);
  v15 = swift_allocObject(v5, v9, v27);
  *(_OWORD *)(v15 + 16) = xmmword_173340;
  ((void (*)(uint64_t, _QWORD, uint64_t))v30)(v15 + v10, v31, v26);
  v16 = type metadata accessor for BitRateData(0);
  v17 = sub_10AA94(&qword_20EE00, (uint64_t (*)(uint64_t))&type metadata accessor for BitRateData, (uint64_t)&protocol conformance descriptor for BitRateData);
  v18 = sub_10AA94(&qword_20EE08, (uint64_t (*)(uint64_t))&type metadata accessor for BitRateData, (uint64_t)&protocol conformance descriptor for BitRateData);
  BATracker.push<A>(data:traits:file:line:)(a3, v15, 0xD000000000000073, 0x8000000000164A80, 617, v16, v17, v18);
  swift_bridgeObjectRelease(v15);
  v19 = swift_allocObject(v5, v9, v27);
  *(_OWORD *)(v19 + 16) = xmmword_173340;
  ((void (*)(uint64_t, _QWORD, uint64_t))v30)(v19 + v10, v31, v26);
  v20 = type metadata accessor for ErrorData(0);
  v21 = sub_10AA94(&qword_20EE10, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorData, (uint64_t)&protocol conformance descriptor for ErrorData);
  v22 = sub_10AA94(&qword_20EE18, (uint64_t (*)(uint64_t))&type metadata accessor for ErrorData, (uint64_t)&protocol conformance descriptor for ErrorData);
  BATracker.push<A>(data:traits:file:line:)(a4, v19, 0xD000000000000073, 0x8000000000164A80, 618, v20, v21, v22);
  swift_bridgeObjectRelease(v19);
  v23 = type metadata accessor for StreamingBitrateChangeEvent(0);
  v24 = sub_10AA94(&qword_20EE20, (uint64_t (*)(uint64_t))&type metadata accessor for StreamingBitrateChangeEvent, (uint64_t)&protocol conformance descriptor for StreamingBitrateChangeEvent);
  return BATracker.submit<A>(_:completion:)(v23, 0, 0, v23, v24);
}

uint64_t sub_10895C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc(a2[1]);
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1089C0;
  return v6(a1);
}

uint64_t sub_1089C0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_108A0C(id a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  unsigned __int8 v5;
  id v6;
  unsigned __int8 v7;

  if ((unint64_t)(a2 - 3) >= 2)
  {
    if (a2 == 2 && !*(_QWORD *)(v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionAssertion))
    {
      v6 = objc_msgSend(a1, "skipController");
      v7 = objc_msgSend(v6, "isSkipping");
      swift_unknownObjectRelease(v6);
      if ((v7 & 1) == 0 && (objc_msgSend(a1, "isScrubbing") & 1) == 0)
      {
        sub_100B68();
        sub_100F9C();
      }
    }
  }
  else if (*(_QWORD *)(v2 + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionAssertion))
  {
    v4 = objc_msgSend(a1, "skipController");
    v5 = objc_msgSend(v4, "isSkipping");
    swift_unknownObjectRelease(v4);
    if ((v5 & 1) == 0 && (objc_msgSend(a1, "isScrubbing") & 1) == 0)
      sub_FFA9C();
  }
}

uint64_t sub_108B20()
{
  uint64_t v0;

  return sub_1022D8(*(_QWORD *)(v0 + 16), *(float *)(v0 + 24), *(float *)(v0 + 28));
}

uint64_t sub_108B2C()
{
  return type metadata accessor for AudiobookAnalyticsRecorder(0);
}

void sub_108B34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[18];

  v10[0] = &unk_1733A0;
  v10[1] = &unk_1733B8;
  v10[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[3] = &unk_1733D0;
  v10[4] = &unk_1733D0;
  v10[5] = &unk_1733D0;
  v10[6] = &unk_1733E8;
  sub_108D68(319);
  if (v3 <= 0x3F)
  {
    v10[7] = *(_QWORD *)(v2 - 8) + 64;
    v10[8] = (char *)&value witness table for Builtin.Int64 + 64;
    v10[9] = (char *)&value witness table for Builtin.Int64 + 64;
    v10[10] = (char *)&value witness table for Builtin.Int32 + 64;
    v10[11] = &unk_1733D0;
    v4 = type metadata accessor for DoNotDisturbStatus(319);
    if (v5 <= 0x3F)
    {
      v10[12] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for ListeningRoutedTo(319);
      if (v7 <= 0x3F)
      {
        v10[13] = *(_QWORD *)(v6 - 8) + 64;
        v8 = type metadata accessor for CellularRadioAccessTechnology(319);
        if (v9 <= 0x3F)
        {
          v10[14] = *(_QWORD *)(v8 - 8) + 64;
          v10[15] = (char *)&value witness table for Builtin.Int32 + 64;
          v10[16] = (char *)&value witness table for Builtin.UnknownObject + 64;
          v10[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
          swift_updateClassMetadata2(a1, 256, 18, v10, a1 + 80);
        }
      }
    }
  }
}

uint64_t method lookup function for AudiobookAnalyticsRecorder(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AudiobookAnalyticsRecorder);
}

uint64_t dispatch thunk of Page.bookmarks.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.bookmarks.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Document.$pageOffset.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.contentSize.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of AudiobookAnalyticsRecorder.dataSource.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Document.pages.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Document.$pages.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of Document.pageCount.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.navigationDirection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.offset + (swift_isaMask & *v0)))();
}

void sub_108D68(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_20EBA8)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_20EBA8);
  }
}

uint64_t dispatch thunk of AudiobookAnalyticsRecorderDataSource.analyticsData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

__n128 sub_108DC4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_108EE0(a1, &qword_20ED90, (uint64_t)&unk_1C2258);
}

uint64_t sub_108DE8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_108E08(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_108EE0(a1, &qword_20ED98, (uint64_t)&unk_1C22D8);
}

uint64_t sub_108E44(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

__n128 sub_108E74(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_108E80(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_108EA0(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_108EE0(a1, &qword_20EDA0, (uint64_t)&unk_1C2358);
}

void sub_108EE0(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_108F24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_108F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_108F90(&qword_20EDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_108F90(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_108FD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_108FF4()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___AEAudiobookAnalyticsRecorder_analyticsSessionAssertion))
    sub_FFA9C();
}

uint64_t sub_109028()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_109054()
{
  return sub_FF41C();
}

uint64_t sub_109074()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for CellularData(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_109104()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for CellularData(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1084A4(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_109148()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

id sub_10916C()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 16);
  if (result)
    return objc_msgSend(result, "invalidate");
  return result;
}

uint64_t sub_109184(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1091A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v17 = type metadata accessor for ContentData(0);
  v1 = *(_QWORD *)(v17 - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v16 = type metadata accessor for BitRateData(0);
  v5 = *(_QWORD *)(v16 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = type metadata accessor for ErrorData(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v8 + v11) & ~v11;
  v15 = v12 + *(_QWORD *)(v10 + 64);
  v13 = v2 | v6 | v11 | 7;

  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);
  return swift_deallocObject(v0, v15, v13);
}

uint64_t sub_1092A8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for ContentData(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for BitRateData(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ErrorData(0) - 8) + 80);
  return sub_108664(*(_QWORD *)(v0 + 16), v0 + v2, v0 + v5, v0 + ((v5 + v6 + v7) & ~v7));
}

unint64_t sub_109330()
{
  unint64_t result;
  uint64_t v1;

  result = qword_20EE68;
  if (!qword_20EE68)
  {
    v1 = sub_10937C(&qword_20EE70);
    result = swift_getWitnessTable(&protocol conformance descriptor for StaticFeatureFlagsKey<A>, v1);
    atomic_store(result, (unint64_t *)&qword_20EE68);
  }
  return result;
}

uint64_t sub_10937C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1093C0(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1093F8()
{
  return sub_109A00((uint64_t (*)(_QWORD))&type metadata accessor for AudioPlaybackSpeedData);
}

uint64_t sub_109404()
{
  return sub_109C04((uint64_t (*)(_QWORD))&type metadata accessor for AudioPlaybackSpeedData, (uint64_t (*)(_QWORD, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t))sub_107AEC);
}

unint64_t sub_109418()
{
  unint64_t result;

  result = qword_20EEB8;
  if (!qword_20EEB8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_20EEB8);
  }
  return result;
}

uint64_t sub_10945C(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

uint64_t sub_109490(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1094CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = type metadata accessor for ContentData(0);
  v28 = *(_QWORD *)(v30 - 8);
  v1 = *(unsigned __int8 *)(v28 + 80);
  v2 = *(_QWORD *)(v28 + 64);
  v29 = type metadata accessor for ListeningSessionData(0);
  v3 = *(_QWORD *)(v29 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (((v1 + 48) & ~v1) + v2 + v4) & ~v4;
  v22 = v5;
  v23 = v3;
  v6 = *(_QWORD *)(v3 + 64);
  v27 = type metadata accessor for ListeningActionSourceData(0);
  v7 = *(_QWORD *)(v27 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v6 + v8) & ~v8;
  v21 = v9;
  v10 = *(_QWORD *)(v7 + 64);
  v26 = type metadata accessor for BitRateData(0);
  v11 = *(_QWORD *)(v26 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v9 + v10 + v12) & ~v12;
  v14 = *(_QWORD *)(v11 + 64);
  v15 = type metadata accessor for ErrorData(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = (v13 + v14 + v17) & ~v17;
  v24 = v18 + *(_QWORD *)(v16 + 64);
  v25 = v15;
  v19 = v1 | v4 | v8 | v12 | v17 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v0 + ((v1 + 48) & ~v1), v30);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0 + v22, v29);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v21, v27);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v26);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0 + v18, v25);
  return swift_deallocObject(v0, v24, v19);
}

uint64_t sub_10966C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v3 = *(_QWORD *)(type metadata accessor for ContentData(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for ListeningSessionData(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for ListeningActionSourceData(0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  type metadata accessor for BitRateData(0);
  type metadata accessor for ErrorData(0);
  v11 = v1[2];
  v12 = v1[3];
  v13 = v1[4];
  v14 = v1[5];
  v15 = (_QWORD *)swift_task_alloc(dword_20EECC);
  *(_QWORD *)(v2 + 16) = v15;
  *v15 = v2;
  v15[1] = sub_10AAE0;
  return sub_1051FC(a1, v11, v12, v13, v14, (uint64_t)v1 + v4, (uint64_t)v1 + v7, (uint64_t)v1 + v10);
}

uint64_t sub_1097B0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1097D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc(dword_20EEDC);
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_109844;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_20EED8 + dword_20EED8))(a1, v4);
}

uint64_t sub_109844()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10988C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_108F90(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1098C8()
{
  return sub_10A814((uint64_t (*)(_QWORD))&type metadata accessor for ListeningSessionData, (uint64_t (*)(_QWORD))&type metadata accessor for ListeningActionSourceData, (uint64_t (*)(_QWORD))&type metadata accessor for BitRateData, (uint64_t (*)(_QWORD))&type metadata accessor for ErrorData);
}

uint64_t sub_1098EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(type metadata accessor for ContentData(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for ListeningSessionData(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for ListeningActionSourceData(0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(type metadata accessor for BitRateData(0) - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ErrorData(0) - 8) + 80);
  return sub_105C74(a1, *(void **)(v1 + 16), v1 + v4, v1 + v7, v1 + v10, v1 + v13, v1 + ((v13 + v14 + v15) & ~v15));
}

uint64_t sub_1099DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_1099EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_1099F4()
{
  return sub_109A00((uint64_t (*)(_QWORD))&type metadata accessor for DoNotDisturbData);
}

uint64_t sub_109A00(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = type metadata accessor for ContentData(0);
  v31 = *(_QWORD *)(v33 - 8);
  v21 = *(unsigned __int8 *)(v31 + 80);
  v2 = *(_QWORD *)(v31 + 64);
  v32 = type metadata accessor for ListeningSessionData(0);
  v29 = *(_QWORD *)(v32 - 8);
  v3 = *(unsigned __int8 *)(v29 + 80);
  v23 = (((v21 + 24) & ~v21) + v2 + v3) & ~v3;
  v4 = *(_QWORD *)(v29 + 64);
  v30 = type metadata accessor for ListeningActionSourceData(0);
  v25 = *(_QWORD *)(v30 - 8);
  v5 = *(unsigned __int8 *)(v25 + 80);
  v20 = (v23 + v4 + v5) & ~v5;
  v6 = *(_QWORD *)(v25 + 64);
  v28 = type metadata accessor for BitRateData(0);
  v7 = *(_QWORD *)(v28 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v19 = (v20 + v6 + v8) & ~v8;
  v9 = *(_QWORD *)(v7 + 64);
  v24 = type metadata accessor for ErrorData(0);
  v10 = *(_QWORD *)(v24 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v19 + v9 + v11) & ~v11;
  v13 = *(_QWORD *)(v10 + 64);
  v27 = a1(0);
  v14 = *(_QWORD *)(v27 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v12 + v13 + v15) & ~v15;
  v22 = v16 + *(_QWORD *)(v14 + 64);
  v17 = v21 | v3 | v5 | v8 | v11 | v15 | 7;

  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v1 + ((v21 + 24) & ~v21), v33);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v1 + v23, v32);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v1 + v20, v30);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1 + v19, v28);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1 + v12, v24);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1 + v16, v27);
  return swift_deallocObject(v1, v22, v17);
}

uint64_t sub_109BF0()
{
  return sub_109C04((uint64_t (*)(_QWORD))&type metadata accessor for DoNotDisturbData, (uint64_t (*)(_QWORD, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t))sub_106038);
}

uint64_t sub_109C04(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t))
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(type metadata accessor for ContentData(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for ListeningSessionData(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(type metadata accessor for ListeningActionSourceData(0) - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(_QWORD *)(type metadata accessor for BitRateData(0) - 8);
  v14 = (v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(_QWORD *)(type metadata accessor for ErrorData(0) - 8);
  v17 = (v14 + v15 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = *(_QWORD *)(v16 + 64);
  v19 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + v5, v2 + v8, v2 + v11, v2 + v14, v2 + v17, v2 + ((v17 + v18 + v19) & ~v19));
}

uint64_t sub_109D1C(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *sub_109D34(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_109D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_108F90(&qword_20EDE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_109DBC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_109DE0(char a1)
{
  uint64_t v1;

  sub_1027D8(a1, v1);
}

uint64_t sub_109DE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_108F90(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_109E2C()
{
  uint64_t v0;

  return sub_102918(*(void **)(v0 + 16));
}

uint64_t sub_109E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = type metadata accessor for ContentData(0);
  v28 = *(_QWORD *)(v30 - 8);
  v1 = *(unsigned __int8 *)(v28 + 80);
  v25 = (v1 + 48) & ~v1;
  v2 = *(_QWORD *)(v28 + 64);
  v29 = type metadata accessor for ListeningSessionData(0);
  v3 = *(_QWORD *)(v29 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v25 + v2 + v4) & ~v4;
  v22 = v5;
  v23 = v3;
  v6 = *(_QWORD *)(v3 + 64);
  v27 = type metadata accessor for ListeningActionSourceData(0);
  v7 = *(_QWORD *)(v27 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v5 + v6 + v8) & ~v8;
  v21 = v9;
  v10 = *(_QWORD *)(v7 + 64);
  v26 = type metadata accessor for BitRateData(0);
  v11 = *(_QWORD *)(v26 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v9 + v10 + v12) & ~v12;
  v14 = *(_QWORD *)(v11 + 64);
  v24 = type metadata accessor for ErrorData(0);
  v15 = *(_QWORD *)(v24 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v13 + v14 + v16) & ~v16;
  v18 = v1 | v4 | v8 | v12 | v16 | 7;
  v19 = (*(_QWORD *)(v15 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v0 + v25, v30);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0 + v22, v29);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v21, v27);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v26);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v0 + v17, v24);
  swift_release(*(_QWORD *)(v0 + v19 + 8));
  return swift_deallocObject(v0, v19 + 16, v18);
}

uint64_t sub_109FEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(type metadata accessor for ContentData(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for ListeningSessionData(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for ListeningActionSourceData(0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  type metadata accessor for BitRateData(0);
  type metadata accessor for ErrorData(0);
  v11 = v1[4];
  v15 = v1[3];
  v16 = v1[2];
  v12 = v1[5];
  v13 = (_QWORD *)swift_task_alloc(dword_20EF34);
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_109844;
  return sub_1066C4(a1, v16, v15, v11, v12, (uint64_t)v1 + v4, (uint64_t)v1 + v7, (uint64_t)v1 + v10);
}

uint64_t sub_10A150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = type metadata accessor for ContentData(0);
  v27 = *(_QWORD *)(v29 - 8);
  v1 = *(unsigned __int8 *)(v27 + 80);
  v24 = (v1 + 24) & ~v1;
  v2 = *(_QWORD *)(v27 + 64);
  v28 = type metadata accessor for ListeningSessionData(0);
  v3 = *(_QWORD *)(v28 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v21 = (v24 + v2 + v4) & ~v4;
  v22 = v3;
  v5 = *(_QWORD *)(v3 + 64);
  v26 = type metadata accessor for ListeningActionSourceData(0);
  v6 = *(_QWORD *)(v26 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v21 + v5 + v7) & ~v7;
  v20 = v8;
  v9 = *(_QWORD *)(v6 + 64);
  v25 = type metadata accessor for BitRateData(0);
  v10 = *(_QWORD *)(v25 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v8 + v9 + v11) & ~v11;
  v13 = *(_QWORD *)(v10 + 64);
  v23 = type metadata accessor for ErrorData(0);
  v14 = *(_QWORD *)(v23 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v12 + v13 + v15) & ~v15;
  v17 = v1 | v4 | v7 | v11 | v15 | 7;
  v18 = (*(_QWORD *)(v14 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v0 + v24, v29);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v0 + v21, v28);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v20, v26);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v25);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v0 + v16, v23);
  swift_release(*(_QWORD *)(v0 + v18 + 8));
  return swift_deallocObject(v0, v18 + 16, v17);
}

uint64_t sub_10A2F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;

  v3 = *(_QWORD *)(type metadata accessor for ContentData(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for ListeningSessionData(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(type metadata accessor for ListeningActionSourceData(0) - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(type metadata accessor for BitRateData(0) - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = *(_QWORD *)(type metadata accessor for ErrorData(0) - 8);
  v16 = (v13 + v14 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = (uint64_t *)(v1 + ((*(_QWORD *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1071AC(a1, *(void **)(v1 + 16), v1 + v4, v1 + v7, v1 + v10, v1 + v13, v1 + v16, *v17, v17[1]);
}

uint64_t sub_10A40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for DoNotDisturbStatus(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 24));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10A480(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DoNotDisturbStatus(0) - 8) + 80);
  return sub_104DFC(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_10A4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v32 = type metadata accessor for ContentData(0);
  v30 = *(_QWORD *)(v32 - 8);
  v1 = *(unsigned __int8 *)(v30 + 80);
  v25 = (v1 + 24) & ~v1;
  v2 = *(_QWORD *)(v30 + 64);
  v31 = type metadata accessor for ListeningSessionData(0);
  v28 = *(_QWORD *)(v31 - 8);
  v3 = *(unsigned __int8 *)(v28 + 80);
  v23 = (v25 + v2 + v3) & ~v3;
  v4 = *(_QWORD *)(v28 + 64);
  v29 = type metadata accessor for ListeningActionSourceData(0);
  v26 = *(_QWORD *)(v29 - 8);
  v5 = *(unsigned __int8 *)(v26 + 80);
  v20 = (v23 + v4 + v5) & ~v5;
  v6 = *(_QWORD *)(v26 + 64);
  v27 = type metadata accessor for BitRateData(0);
  v21 = *(_QWORD *)(v27 - 8);
  v7 = *(unsigned __int8 *)(v21 + 80);
  v19 = (v20 + v6 + v7) & ~v7;
  v8 = *(_QWORD *)(v21 + 64);
  v24 = type metadata accessor for ErrorData(0);
  v9 = *(_QWORD *)(v24 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = (v19 + v8 + v10) & ~v10;
  v12 = *(_QWORD *)(v9 + 64);
  v22 = type metadata accessor for DoNotDisturbData(0);
  v13 = *(_QWORD *)(v22 - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = (v11 + v12 + v14) & ~v14;
  v16 = v1 | v3 | v5 | v7 | v10 | v14 | 7;
  v17 = (*(_QWORD *)(v13 + 64) + v15 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v0 + v25, v32);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v0 + v23, v31);
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v0 + v20, v29);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v0 + v19, v27);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v11, v24);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v15, v22);
  swift_release(*(_QWORD *)(v0 + v17 + 8));
  return swift_deallocObject(v0, v17 + 16, v16);
}

uint64_t sub_10A6BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v1 = *(_QWORD *)(type metadata accessor for ContentData(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for ListeningSessionData(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for ListeningActionSourceData(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(type metadata accessor for BitRateData(0) - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(_QWORD *)(type metadata accessor for ErrorData(0) - 8);
  v14 = (v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 64);
  v16 = *(_QWORD *)(type metadata accessor for DoNotDisturbData(0) - 8);
  v17 = (v14 + v15 + *(unsigned __int8 *)(v16 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  return sub_1075B4(*(_QWORD *)(v0 + 16), v0 + v2, v0 + v5, v0 + v8, v0 + v11, v0 + v14, v0 + v17, *(uint64_t (**)(uint64_t))(v0 + ((*(_QWORD *)(v16 + 64) + v17 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10A7E8()
{
  uint64_t v0;

  return sub_10298C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10A7F0()
{
  return sub_10A814((uint64_t (*)(_QWORD))&type metadata accessor for ListeningActionSourceData, (uint64_t (*)(_QWORD))&type metadata accessor for BitRateData, (uint64_t (*)(_QWORD))&type metadata accessor for ErrorData, (uint64_t (*)(_QWORD))&type metadata accessor for SkipData);
}

uint64_t sub_10A814(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD), uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = type metadata accessor for ContentData(0);
  v36 = *(_QWORD *)(v38 - 8);
  v8 = *(unsigned __int8 *)(v36 + 80);
  v31 = (v8 + 24) & ~v8;
  v9 = *(_QWORD *)(v36 + 64);
  v37 = a1(0);
  v10 = *(_QWORD *)(v37 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v31 + v9 + v11) & ~v11;
  v28 = v12;
  v29 = v10;
  v13 = *(_QWORD *)(v10 + 64);
  v35 = a2(0);
  v14 = *(_QWORD *)(v35 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v12 + v13 + v15) & ~v15;
  v27 = v16;
  v17 = *(_QWORD *)(v14 + 64);
  v34 = a3(0);
  v18 = *(_QWORD *)(v34 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v16 + v17 + v19) & ~v19;
  v21 = *(_QWORD *)(v18 + 64);
  v33 = a4(0);
  v22 = *(_QWORD *)(v33 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (v20 + v21 + v23) & ~v23;
  v30 = v24 + *(_QWORD *)(v22 + 64);
  v25 = v8 | v11 | v15 | v19 | v23 | 7;

  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v4 + v31, v38);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v4 + v28, v37);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4 + v27, v35);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v4 + v20, v34);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v4 + v24, v33);
  return swift_deallocObject(v4, v30, v25);
}

uint64_t sub_10A9BC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(type metadata accessor for ContentData(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(type metadata accessor for ListeningActionSourceData(0) - 8);
  v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(type metadata accessor for BitRateData(0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(type metadata accessor for ErrorData(0) - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SkipData(0) - 8) + 80);
  return sub_10802C(*(_QWORD *)(v0 + 16), v0 + v2, v0 + v5, v0 + v8, v0 + v11, v0 + ((v11 + v12 + v13) & ~v13));
}

uint64_t sub_10AA94(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t ContentPageDirection.init(rawValue:)(unint64_t a1)
{
  return sub_10BD40(a1);
}

BOOL sub_10AB2C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_10AB44()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

unint64_t sub_10AB70@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_10BD40(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_10ABA0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

unint64_t DocumentCollectionType.init(rawValue:)(unint64_t a1)
{
  return sub_10BD50(a1);
}

Swift::Int sub_10ABC4()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_10AC08(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

unint64_t sub_10AC48@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_10BD50(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

double sub_10AC84()
{
  return sub_10AEA0(&OBJC_IVAR___BEDocumentPaginationDataInfo_pageSize);
}

uint64_t sub_10AC9C(double a1, double a2)
{
  return sub_10AF48(&OBJC_IVAR___BEDocumentPaginationDataInfo_pageSize, a1, a2);
}

uint64_t (*sub_10ACA8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_pageSize, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10AD30()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BEDocumentPaginationDataInfo_pageCount;
  swift_beginAccess(v0 + OBJC_IVAR___BEDocumentPaginationDataInfo_pageCount, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_10ADBC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_pageCount);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*sub_10AE04(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_pageCount, a1, 33, 0);
  return j_j__swift_endAccess;
}

double sub_10AE54(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _BYTE v5[24];

  v3 = a1 + *a3;
  swift_beginAccess(v3, v5, 0, 0);
  return *(double *)v3;
}

double sub_10AE94()
{
  return sub_10AEA0(&OBJC_IVAR___BEDocumentPaginationDataInfo_contentSize);
}

double sub_10AEA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[24];

  v2 = v1 + *a1;
  swift_beginAccess(v2, v4, 0, 0);
  return *(double *)v2;
}

uint64_t sub_10AEEC(uint64_t a1, double a2, double a3, uint64_t a4, _QWORD *a5)
{
  double *v7;
  uint64_t result;
  _BYTE v9[24];

  v7 = (double *)(a1 + *a5);
  result = swift_beginAccess(v7, v9, 1, 0);
  *v7 = a2;
  v7[1] = a3;
  return result;
}

uint64_t sub_10AF3C(double a1, double a2)
{
  return sub_10AF48(&OBJC_IVAR___BEDocumentPaginationDataInfo_contentSize, a1, a2);
}

uint64_t sub_10AF48(_QWORD *a1, double a2, double a3)
{
  uint64_t v3;
  double *v6;
  uint64_t result;
  _BYTE v8[24];

  v6 = (double *)(v3 + *a1);
  result = swift_beginAccess(v6, v8, 1, 0);
  *v6 = a2;
  v6[1] = a3;
  return result;
}

uint64_t (*sub_10AF98(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_contentSize, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10B020()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BEDocumentPaginationDataInfo_pageOffset;
  swift_beginAccess(v0 + OBJC_IVAR___BEDocumentPaginationDataInfo_pageOffset, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_10B0AC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_pageOffset);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*sub_10B0F4(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_pageOffset, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_10B180()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BEDocumentPaginationDataInfo_paginationDirection;
  swift_beginAccess(v0 + OBJC_IVAR___BEDocumentPaginationDataInfo_paginationDirection, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_10B20C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_paginationDirection);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*sub_10B254(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_paginationDirection, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10B2DC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BEDocumentPaginationDataInfo_navigationDirection;
  swift_beginAccess(v0 + OBJC_IVAR___BEDocumentPaginationDataInfo_navigationDirection, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_10B368(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_navigationDirection);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*sub_10B3B0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_navigationDirection, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10B400()
{
  return sub_10B8BC(&OBJC_IVAR___BEDocumentPaginationDataInfo_userAnnotations);
}

uint64_t sub_10B418(uint64_t a1)
{
  return sub_10B994(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_userAnnotations);
}

uint64_t (*sub_10B424(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_userAnnotations, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10B474()
{
  return sub_10B8BC(&OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchors);
}

uint64_t sub_10B48C(uint64_t a1)
{
  return sub_10B994(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchors);
}

uint64_t (*sub_10B498(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchors, a1, 33, 0);
  return j_j__swift_endAccess;
}

Class sub_10B4E8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t *v3;
  uint64_t v4;
  Class isa;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + *a3);
  swift_beginAccess(v3, v7, 0, 0);
  v4 = *v3;
  if (!v4)
    return (Class)0;
  type metadata accessor for CGRect(0);
  swift_bridgeObjectRetain(v4);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  return isa;
}

uint64_t sub_10B570()
{
  return sub_10B8BC(&OBJC_IVAR___BEDocumentPaginationDataInfo_mediaElements);
}

uint64_t sub_10B588(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v11[24];

  v5 = a3;
  if (a3)
  {
    type metadata accessor for CGRect(0);
    v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v5, &type metadata for String, v7, &protocol witness table for String);
  }
  v8 = (uint64_t *)(a1 + *a4);
  swift_beginAccess(v8, v11, 1, 0);
  v9 = *v8;
  *v8 = v5;
  return swift_bridgeObjectRelease(v9);
}

uint64_t sub_10B610(uint64_t a1)
{
  return sub_10B994(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_mediaElements);
}

uint64_t (*sub_10B61C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_mediaElements, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10B66C()
{
  return sub_10B8BC(&OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchorItems);
}

uint64_t sub_10B684(uint64_t a1)
{
  return sub_10B994(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchorItems);
}

uint64_t (*sub_10B690(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchorItems, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10B6E0()
{
  return sub_10B8BC(&OBJC_IVAR___BEDocumentPaginationDataInfo_landmarkAnchorItems);
}

uint64_t sub_10B6F8(uint64_t a1)
{
  return sub_10B994(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_landmarkAnchorItems);
}

uint64_t (*sub_10B704(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_landmarkAnchorItems, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10B754()
{
  return sub_10B8BC(&OBJC_IVAR___BEDocumentPaginationDataInfo_physicalPageAnchors);
}

uint64_t sub_10B76C(uint64_t a1)
{
  return sub_10B994(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_physicalPageAnchors);
}

uint64_t (*sub_10B778(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_physicalPageAnchors, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_10B7C8()
{
  return sub_10B8BC(&OBJC_IVAR___BEDocumentPaginationDataInfo_bookmarks);
}

uint64_t sub_10B7E0(uint64_t a1)
{
  return sub_10B994(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_bookmarks);
}

uint64_t (*sub_10B7EC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_bookmarks, a1, 33, 0);
  return j_j__swift_endAccess;
}

Class sub_10B83C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t *v3;
  uint64_t v4;
  Class isa;
  _BYTE v7[24];

  v3 = (uint64_t *)(a1 + *a3);
  swift_beginAccess(v3, v7, 0, 0);
  v4 = *v3;
  if (!v4)
    return (Class)0;
  swift_bridgeObjectRetain(v4);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v4);
  return isa;
}

uint64_t sub_10B8B0()
{
  return sub_10B8BC(&OBJC_IVAR___BEDocumentPaginationDataInfo_historyEntries);
}

uint64_t sub_10B8BC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  _BYTE v4[24];

  v2 = (_QWORD *)(v1 + *a1);
  swift_beginAccess(v2, v4, 0, 0);
  return swift_bridgeObjectRetain(*v2);
}

uint64_t sub_10B90C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  char v10[24];

  if (a3)
    v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, (char *)&type metadata for Any + 8);
  else
    v6 = 0;
  v7 = (uint64_t *)(a1 + *a4);
  swift_beginAccess(v7, v10, 1, 0);
  v8 = *v7;
  *v7 = v6;
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_10B988(uint64_t a1)
{
  return sub_10B994(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_historyEntries);
}

uint64_t sub_10B994(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (uint64_t *)(v2 + *a2);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = *v4;
  *v4 = a1;
  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_10B9E0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _BYTE v9[24];

  v5 = *a1;
  v6 = (uint64_t *)(*a2 + *a5);
  swift_beginAccess(v6, v9, 1, 0);
  v7 = *v6;
  *v6 = v5;
  swift_bridgeObjectRetain(v5);
  return swift_bridgeObjectRelease(v7);
}

uint64_t (*sub_10BA44(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocumentPaginationDataInfo_historyEntries, a1, 33, 0);
  return j_j__swift_endAccess;
}

id DocumentPaginationDataInfo.__allocating_init(pageSize:pageCount:contentSize:pageOffset:paginationDirection:documentNavigationDirection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  objc_class *v8;
  id v17;

  v17 = objc_allocWithZone(v8);
  return DocumentPaginationDataInfo.init(pageSize:pageCount:contentSize:pageOffset:paginationDirection:documentNavigationDirection:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

id DocumentPaginationDataInfo.init(pageSize:pageCount:contentSize:pageOffset:paginationDirection:documentNavigationDirection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  char *v8;
  double *v9;
  double *v10;
  objc_super v12;

  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_userAnnotations] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchors] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_mediaElements] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchorItems] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_landmarkAnchorItems] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_physicalPageAnchors] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_bookmarks] = 0;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_historyEntries] = 0;
  v9 = (double *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_pageSize];
  *v9 = a5;
  v9[1] = a6;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_pageCount] = a1;
  v10 = (double *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_contentSize];
  *v10 = a7;
  v10[1] = a8;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_pageOffset] = a2;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_paginationDirection] = a3;
  *(_QWORD *)&v8[OBJC_IVAR___BEDocumentPaginationDataInfo_navigationDirection] = a4;
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for DocumentPaginationDataInfo();
  return objc_msgSendSuper2(&v12, "init");
}

void DocumentPaginationDataInfo.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("AEBookPlugins.DocumentPaginationDataInfo", 40, "init()", 6, 0);
  __break(1u);
}

id DocumentPaginationDataInfo.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DocumentPaginationDataInfo();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_10BD40(unint64_t result)
{
  if (result > 4)
    return 0;
  return result;
}

unint64_t sub_10BD50(unint64_t result)
{
  if (result > 3)
    return 0;
  return result;
}

uint64_t type metadata accessor for DocumentPaginationDataInfo()
{
  return objc_opt_self(BEDocumentPaginationDataInfo);
}

unint64_t sub_10BD84()
{
  unint64_t result;

  result = qword_20EFD8;
  if (!qword_20EFD8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ContentPageDirection, &type metadata for ContentPageDirection);
    atomic_store(result, (unint64_t *)&qword_20EFD8);
  }
  return result;
}

unint64_t sub_10BDCC()
{
  unint64_t result;

  result = qword_20EFE0;
  if (!qword_20EFE0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DocumentPageDirection, &type metadata for DocumentPageDirection);
    atomic_store(result, (unint64_t *)&qword_20EFE0);
  }
  return result;
}

double sub_10BE10@<D0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_10BE4C(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_pageSize, a2).n128_u64[0];
  return result;
}

uint64_t sub_10BE1C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10BEA4(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_pageSize);
}

uint64_t sub_10BE28@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10BF00(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_pageCount, a2);
}

uint64_t sub_10BE34(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10BF88(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_pageCount);
}

double sub_10BE40@<D0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_10BE4C(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_contentSize, a2).n128_u64[0];
  return result;
}

__n128 sub_10BE4C@<Q0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, __n128 *a3@<X8>)
{
  __n128 *v4;
  __n128 result;
  _BYTE v6[24];

  v4 = (__n128 *)(*a1 + *a2);
  swift_beginAccess(v4, v6, 0, 0);
  result = *v4;
  *a3 = *v4;
  return result;
}

uint64_t sub_10BE98(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10BEA4(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_contentSize);
}

uint64_t sub_10BEA4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;
  _BYTE v9[24];

  v5 = *a1;
  v6 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  result = swift_beginAccess(v7, v9, 1, 0);
  *v7 = v5;
  v7[1] = v6;
  return result;
}

uint64_t sub_10BEF4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10BF00(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_pageOffset, a2);
}

uint64_t sub_10BF00@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t result;
  _BYTE v6[24];

  v4 = (_QWORD *)(*a1 + *a2);
  result = swift_beginAccess(v4, v6, 0, 0);
  *a3 = *v4;
  return result;
}

uint64_t sub_10BF4C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10BF88(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_pageOffset);
}

uint64_t sub_10BF58@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10BF00(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_paginationDirection, a2);
}

uint64_t sub_10BF64(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10BF88(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_paginationDirection);
}

uint64_t sub_10BF70@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_10BF00(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_navigationDirection, a2);
}

uint64_t sub_10BF7C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10BF88(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_navigationDirection);
}

uint64_t sub_10BF88(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  _BYTE v8[24];

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  result = swift_beginAccess(v6, v8, 1, 0);
  *v6 = v5;
  return result;
}

uint64_t sub_10BFD0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10C0F4(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_userAnnotations, a2);
}

uint64_t sub_10BFDC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10B9E0(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_userAnnotations);
}

uint64_t sub_10BFF8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10C0F4(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchors, a2);
}

uint64_t sub_10C004(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10B9E0(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchors);
}

uint64_t sub_10C020@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10C0F4(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_mediaElements, a2);
}

uint64_t sub_10C02C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10B9E0(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_mediaElements);
}

uint64_t sub_10C048@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10C0F4(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchorItems, a2);
}

uint64_t sub_10C054(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10B9E0(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_navigationAnchorItems);
}

uint64_t sub_10C070@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10C0F4(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_landmarkAnchorItems, a2);
}

uint64_t sub_10C07C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10B9E0(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_landmarkAnchorItems);
}

uint64_t sub_10C098@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10C0F4(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_physicalPageAnchors, a2);
}

uint64_t sub_10C0A4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10B9E0(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_physicalPageAnchors);
}

uint64_t sub_10C0C0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10C0F4(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_bookmarks, a2);
}

uint64_t sub_10C0CC(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10B9E0(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_bookmarks);
}

uint64_t sub_10C0E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10C0F4(a1, &OBJC_IVAR___BEDocumentPaginationDataInfo_historyEntries, a2);
}

uint64_t sub_10C0F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (uint64_t *)(*a1 + *a2);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = *v4;
  *a3 = *v4;
  return swift_bridgeObjectRetain(v5);
}

uint64_t sub_10C144(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_10B9E0(a1, a2, a3, a4, &OBJC_IVAR___BEDocumentPaginationDataInfo_historyEntries);
}

ValueMetadata *type metadata accessor for ContentPageDirection()
{
  return &type metadata for ContentPageDirection;
}

ValueMetadata *type metadata accessor for DocumentPageDirection()
{
  return &type metadata for DocumentPageDirection;
}

uint64_t method lookup function for DocumentPaginationDataInfo(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for DocumentPaginationDataInfo);
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.pageSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.pageSize.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Page.$annotations.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.pageCount.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of Document.pageOffset.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.contentSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.$bookmarks.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.pageOffset.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Document.pages.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of Page.highlights.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.paginationDirection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of Page.$highlights.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.navigationDirection.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.anchors.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.userAnnotations.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.userAnnotations.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Page.$anchors.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.navigationAnchors.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.navigationAnchors.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of Page.mediaElements.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.mediaElements.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.mediaElements.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.$mediaElements.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.navigationAnchorItems.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.navigationAnchorItems.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.physicalPageMarkers.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.landmarkAnchorItems.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.landmarkAnchorItems.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Page.$physicalPageMarkers.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.physicalPageAnchors.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.physicalPageAnchors.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.physicalChapterMarkers.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.bookmarks.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.bookmarks.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.$physicalChapterMarkers.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.historyEntries.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1F8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.historyEntries.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1F8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.historyEntries.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1F8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of DocumentPaginationDataInfo.__allocating_init(pageSize:pageCount:contentSize:pageOffset:paginationDirection:documentNavigationDirection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 528))();
}

uint64_t sub_10C5CC()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for BundleFinder()
{
  return objc_opt_self(_TtC13AEBookPluginsP33_85512F8ECF37354076CBA2C6BA458C5512BundleFinder);
}

id sub_10C5FC()
{
  id result;

  result = _AEPaginationLog();
  qword_20F0A8 = (uint64_t)result;
  return result;
}

id static OS_os_log.paginationDataProvider.getter()
{
  if (qword_20EA70 != -1)
    swift_once(&qword_20EA70, sub_10C5FC);
  return (id)qword_20F0A8;
}

uint64_t PaginationDataLog(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10C7DC(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.default.getter);
}

uint64_t __PaginationDataLogWriteLog(_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  if (qword_20EA70 != -1)
    swift_once(&qword_20EA70, sub_10C5FC);
  v10 = (void *)qword_20F0A8;
  v11 = sub_108F90(&qword_20F0B0);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_173340;
  *(_QWORD *)(v12 + 56) = sub_108F90(&qword_20F0B8);
  *(_QWORD *)(v12 + 64) = sub_10C760();
  *(_QWORD *)(v12 + 32) = a5;
  v13 = v10;
  swift_bridgeObjectRetain(a5);
  os_log(_:dso:log:_:_:)(a1, &dword_0, v13, a2, a3, a4, v12);

  return swift_bridgeObjectRelease(v12);
}

unint64_t sub_10C760()
{
  unint64_t result;
  uint64_t v1;

  result = qword_20F0C0;
  if (!qword_20F0C0)
  {
    v1 = sub_10937C(&qword_20F0B8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_20F0C0);
  }
  return result;
}

uint64_t PaginationDataLogDebug(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10C7DC(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
}

uint64_t PaginationDataLogInfo(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10C7DC(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.info.getter);
}

uint64_t PaginationDataLogError(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10C7DC(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.error.getter);
}

uint64_t PaginationDataLogFault(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10C7DC(a1, a2, a3, a4, (uint64_t (*)(void))&static os_log_type_t.fault.getter);
}

uint64_t sub_10C7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  v9 = a5();
  if (qword_20EA70 != -1)
    swift_once(&qword_20EA70, sub_10C5FC);
  v10 = (void *)qword_20F0A8;
  v11 = sub_108F90(&qword_20F0B0);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_173340;
  *(_QWORD *)(v12 + 56) = sub_108F90(&qword_20F0B8);
  *(_QWORD *)(v12 + 64) = sub_10C760();
  *(_QWORD *)(v12 + 32) = a4;
  v13 = v10;
  swift_bridgeObjectRetain(a4);
  os_log(_:dso:log:_:_:)(v9, &dword_0, v13, a1, a2, a3, v12);

  return swift_bridgeObjectRelease(v12);
}

char *sub_10C8F8(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  NSString v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t ObjCClassFromMetadata;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSString v43;
  id v44;
  objc_class *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  id v59;
  objc_super v60;

  v9 = type metadata accessor for Locale(0);
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  v10 = __chkstk_darwin(v9);
  v57 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v51 - v12;
  v58 = type metadata accessor for String.LocalizationValue(0);
  v56 = *(_QWORD *)(v58 - 8);
  v14 = __chkstk_darwin(v58);
  v52 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v51 - v16;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_regularButtonPadding] = 0x4010000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_compactButtonPadding] = 0x4008000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_intrinsicWidthPadding] = 0x4036000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_intrinsicHeight] = 0x4046000000000000;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_luminanceThreshold] = 0x3FE0000000000000;
  v4[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_selected] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_buttonPadding] = 0x4010000000000000;
  v18 = v4;
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v19);

  v59 = v20;
  if (v20)
  {
    v21 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v22 = v59;
    v23 = objc_msgSend(v21, "configurationWithPointSize:weight:scale:", 4, 3, 17.0);
    v24 = objc_msgSend(v22, "imageWithConfiguration:", v23);

    *(_QWORD *)&v18[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_regularImage] = v24;
    v25 = v22;
    v26 = objc_msgSend(v21, "configurationWithPointSize:weight:scale:", 4, 2, 17.0);
    v27 = objc_msgSend(v25, "imageWithConfiguration:", v26);

  }
  else
  {
    v27 = 0;
    *(_QWORD *)&v18[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_regularImage] = 0;
  }
  *(_QWORD *)&v18[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_compactImage] = v27;
  v28 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v29 = OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button;
  *(_QWORD *)&v18[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button] = v28;
  objc_msgSend(v28, "setImage:forState:", *(_QWORD *)&v18[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_regularImage], 0);
  objc_msgSend(*(id *)&v18[v29], "setClipsToBounds:", 1);
  v53 = *(id *)&v18[v29];
  v30 = String.LocalizationValue.init(stringLiteral:)(0x70756B72614DLL, 0xE600000000000000);
  static Locale.current.getter(v30);
  v31 = v17;
  v32 = v56;
  v33 = v52;
  v34 = v58;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v52, v31, v58);
  v35 = type metadata accessor for BundleFinder();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v35);
  v37 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
  v38 = v54;
  v39 = v55;
  v40 = v57;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v57, v13, v55);
  String.init(localized:table:bundle:locale:comment:)(v33, 0, 0, v37, v40, "Accessibility string for the markup feature.", 44, 2);
  v42 = v41;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v39);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v34);
  v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v42);
  v44 = v53;
  objc_msgSend(v53, "setAccessibilityLabel:", v43);

  v45 = (objc_class *)type metadata accessor for MarkupButtonContainerView();
  v60.receiver = v18;
  v60.super_class = v45;
  v46 = (char *)objc_msgSendSuper2(&v60, "initWithFrame:", a1, a2, a3, a4);
  objc_msgSend(v46, "setAutoresizingMask:", 45);
  objc_msgSend(v46, "addSubview:", *(_QWORD *)&v46[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button]);
  sub_10D67C();
  v47 = v46;
  v48 = static UITraitCollection.bc_allAPITraits.getter();
  v49 = UIView.registerForTraitChanges(_:action:)(v48, "_traitCollectionDidChangeWithSender:previousTraitCollection:");

  swift_unknownObjectRelease(v49);
  swift_bridgeObjectRelease(v48);

  return v47;
}

void sub_10CE10()
{
  char *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  id v5;
  id v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for MarkupButtonContainerView();
  objc_msgSendSuper2(&v7, "layoutSubviews");
  v1 = OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button], "intrinsicContentSize");
  if (v2 <= v3)
    v2 = v3;
  v4 = *(double *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_buttonPadding] + v2;
  objc_msgSend(*(id *)&v0[v1], "setFrame:", 0.0, 0.0, v4, v4);
  v5 = *(id *)&v0[v1];
  CGRectGetCenter(objc_msgSend(v0, "bounds"));
  objc_msgSend(v5, "setCenter:");

  v6 = objc_msgSend(*(id *)&v0[v1], "layer");
  objc_msgSend(v6, "setCornerRadius:", v4 * 0.5);

}

void sub_10CFBC()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  id v4;
  id v5;
  id v6;

  v1 = OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_buttonPadding;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_buttonPadding] = *(_QWORD *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_regularButtonPadding];
  v5 = *(id *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_regularImage];
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = (char *)objc_msgSend(v2, "verticalSizeClass");

  if (v3 == (_BYTE *)&dword_0 + 1)
  {

    *(_QWORD *)&v0[v1] = *(_QWORD *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_compactButtonPadding];
    v4 = *(id *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_compactImage];
  }
  else
  {
    v4 = v5;
  }
  v6 = v4;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button], "setImage:forState:");
  objc_msgSend(v0, "setNeedsLayout");

}

void sub_10D168()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  id v16;
  int v17;
  void *v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t ObjCClassFromMetadata;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 *v58;

  v1 = type metadata accessor for Locale(0);
  v56 = *(_QWORD *)(v1 - 8);
  v57 = v1;
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v52 - v5;
  v7 = type metadata accessor for String.LocalizationValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v52 - v12;
  v14 = (void *)objc_opt_self(CATransaction);
  objc_msgSend(v14, "begin");
  objc_msgSend(v14, "setDisableActions:", 1);
  v55 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  v15 = objc_msgSend(v0, "tintColor");
  if (v15)
  {
    v16 = v15;
    v54 = v14;
    v17 = v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_selected];
    v58 = v0;
    if (v17 != 1)
    {
      v53 = *(id *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button];
      v36 = String.LocalizationValue.init(stringLiteral:)(6710863, 0xE300000000000000);
      static Locale.current.getter(v36);
      v37 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v38 = v11;
      v39 = v11;
      v40 = v8;
      v41 = v7;
      v37(v38, v13, v7);
      v42 = type metadata accessor for BundleFinder();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v42);
      v44 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", ObjCClassFromMetadata);
      v46 = v56;
      v45 = v57;
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v4, v6, v57);
      v47 = v39;
      v32 = v53;
      String.init(localized:table:bundle:locale:comment:)(v47, 0, 0, v44, v4, "Accessibility string for the markup button being in an 'off' state.", 67, 2);
      v49 = v48;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v6, v45);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
      v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v49);
      objc_msgSend(v32, "setAccessibilityValue:", v35);
      v23 = v55;
      goto LABEL_6;
    }
    v18 = v0;
    v19 = v11;
    v20 = v8;
    v21 = objc_msgSend(v18, "tintColor");
    if (v21)
    {
      v22 = v21;

      v23 = v22;
      v55 = sub_10D770(v23);

      v53 = *(id *)&v58[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button];
      v24 = String.LocalizationValue.init(stringLiteral:)(28239, 0xE200000000000000);
      static Locale.current.getter(v24);
      v25 = v7;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v19, v13, v7);
      v26 = type metadata accessor for BundleFinder();
      v27 = swift_getObjCClassFromMetadata(v26);
      v28 = objc_msgSend((id)objc_opt_self(NSBundle), "bundleForClass:", v27);
      v30 = v56;
      v29 = v57;
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v4, v6, v57);
      v31 = v19;
      v32 = v53;
      String.init(localized:table:bundle:locale:comment:)(v31, 0, 0, v28, v4, "Accessibility string for the markup button being in an 'on' state.", 66, 2);
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v29);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v25);
      v35 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v34);
      objc_msgSend(v32, "setAccessibilityValue:", v35);
      v16 = v55;
LABEL_6:

      v50 = OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button;
      v51 = v58;
      objc_msgSend(*(id *)&v58[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button], "setBackgroundColor:", v23);
      objc_msgSend(*(id *)&v51[v50], "setTintColor:", v16);
      objc_msgSend(v54, "commit");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10D5C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MarkupButtonContainerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for MarkupButtonContainerView()
{
  return objc_opt_self(_TtC13AEBookPlugins25MarkupButtonContainerView);
}

uint64_t sub_10D65C(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_10D67C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_20F140;
  if (!qword_20F140)
  {
    v1 = objc_opt_self(UITraitCollection);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_20F140);
  }
  return result;
}

void sub_10D6B8()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_regularButtonPadding] = 0x4010000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_compactButtonPadding] = 0x4008000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_intrinsicWidthPadding] = 0x4036000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_intrinsicHeight] = 0x4046000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_luminanceThreshold] = 0x3FE0000000000000;
  v0[OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_selected] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000000001654F0, "AEBookPlugins/MarkupButtonContainerView.swift", 45, 2, 34, 0);
  __break(1u);
}

id sub_10D770(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  double v6;

  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "blackColor");
  v4 = objc_msgSend(a1, "bc_invertedDynamicColor");
  if (v4)
    goto LABEL_5;
  v5 = objc_msgSend(v2, "labelColor");
  v4 = objc_msgSend(v5, "bc_invertedDynamicColor");

  if (v4)
    goto LABEL_5;
  objc_msgSend(a1, "_luminance");
  if (v6 < 0.5)
  {
    v4 = objc_msgSend(v2, "whiteColor");
LABEL_5:

    return v4;
  }
  return v3;
}

id AEAnnotation.annotation.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  _BYTE v15[14];
  char v16;
  char v17;

  v0 = type metadata accessor for Date(0);
  __chkstk_darwin(v0);
  v2 = &v15[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for UUID(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = UUID.init()(v5);
  v9 = UUID.uuidString.getter(v8);
  v11 = v10;
  v12 = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v7, v3);
  v17 = 1;
  v16 = 0;
  Date.init()(v12);
  v13 = objc_allocWithZone((Class)type metadata accessor for Annotation(0));
  return Annotation.init(uuid:type:style:creationDate:)(v9, v11, &v17, &v16, (uint64_t)v2);
}

void *static AEAnnotation.insertObject(into:ordinal:location:annotationStyle:selectedText:representativeText:assetID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSString v24;
  NSString v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  uint64_t v33;
  Class isa;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  Class v37;
  NSString v38;
  NSString v39;
  NSString v40;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v48 = a7;
  v49 = a8;
  v47 = a6;
  v46 = a5;
  v44 = a3;
  v45 = a4;
  v43 = a2;
  v12 = type metadata accessor for Date(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (void *)objc_opt_self(NSEntityDescription);
  v50 = sub_10DC64();
  v21 = sub_108F90(&qword_20F150);
  String.init<A>(describing:)(&v50, v21);
  v23 = v22;
  v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v25 = objc_msgSend(v20, "insertNewObjectForEntityForName:inManagedObjectContext:", v24, a1);

  v26 = objc_opt_self(AEAnnotation);
  v27 = swift_dynamicCastObjCClass(v25, v26);
  v28 = (void *)v27;
  if (v27)
  {
    v42[0] = a10;
    v42[1] = a11;
    v29 = UUID.init()(v27);
    UUID.uuidString.getter(v29);
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31);
    objc_msgSend(v28, "setAnnotationUuid:", v32);

    Date.init()(v33);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v35 = *(void (**)(char *, uint64_t))(v13 + 8);
    v35(v15, v12);
    objc_msgSend(v28, "setAnnotationCreationDate:", isa);

    Date.init()(v36);
    v37 = Date._bridgeToObjectiveC()().super.isa;
    v35(v15, v12);
    objc_msgSend(v28, "setUserModificationDate:", v37);

    objc_msgSend(v28, "setOrdinal:", v43);
    v38 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setAnnotationLocation:", v38);

    objc_msgSend(v28, "setAnnotationStyle:", v46);
    v39 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setAnnotationSelectedText:", v39);

    v40 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setAnnotationRepresentativeText:", v40);

    objc_msgSend(v28, "setAnnotationCreatorIdentifier:", kAEAnnotationCreatorIdentifier_iBooks);
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(v28, "setAnnotationAssetID:", v25);
  }

  return v28;
}

unint64_t sub_10DC64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_20F148;
  if (!qword_20F148)
  {
    v1 = objc_opt_self(AEAnnotation);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_20F148);
  }
  return result;
}

uint64_t DocumentCollectionType.description.getter(unint64_t a1)
{
  uint64_t result;
  unint64_t v2;

  if (a1 < 4)
    return *(_QWORD *)&aReflowabfixedl[8 * a1];
  v2 = a1;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for DocumentCollectionType, &v2, &type metadata for DocumentCollectionType, &type metadata for Int);
  __break(1u);
  return result;
}

uint64_t sub_10DD68()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BEBookViewModel_documentUniqueID);
  swift_beginAccess(v0 + OBJC_IVAR___BEBookViewModel_documentUniqueID, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_10DE24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR___BEBookViewModel_documentUniqueID);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t sub_10DE80(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___BEBookViewModel_documentUniqueID);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = v4[1];
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

uint64_t (*sub_10DEE8(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEBookViewModel_documentUniqueID, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t BookViewModel.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BEBookViewModel_title);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BEBookViewModel_title + 8));
  return v1;
}

id sub_10DF7C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  NSString v4;

  v3 = *(_QWORD *)(a1 + *a3 + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v3);
  return v4;
}

uint64_t BookViewModel.path.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BEBookViewModel_path);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BEBookViewModel_path + 8));
  return v1;
}

uint64_t BookViewModel.authors.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BEBookViewModel_authors));
}

uint64_t sub_10E05C()
{
  return 0;
}

uint64_t sub_10E0A8()
{
  uint64_t v0;
  unsigned __int8 *v1;
  _BYTE v3[24];

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___BEBookViewModel_sample);
  swift_beginAccess(v0 + OBJC_IVAR___BEBookViewModel_sample, v3, 0, 0);
  return *v1;
}

uint64_t sub_10E134(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR___BEBookViewModel_sample);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*sub_10E17C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEBookViewModel_sample, a1, 33, 0);
  return j_j__swift_endAccess;
}

id BookViewModel.__allocating_init(uuid:title:authors:sample:path:documents:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  objc_class *v9;
  id v18;

  v18 = objc_allocWithZone(v9);
  return BookViewModel.init(uuid:title:authors:sample:path:documents:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

id BookViewModel.init(uuid:title:authors:sample:path:documents:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char *v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  id result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;
  uint64_t v45;
  uint64_t v46[4];

  v42 = a7;
  v43 = a8;
  v41 = a6;
  v39 = a4;
  v40 = a5;
  v13 = sub_108F90(&qword_20F180);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = &v9[OBJC_IVAR___BEBookViewModel__pageTotal];
  v46[0] = 0;
  v18 = v9;
  Published.init(initialValue:)(v46, &type metadata for Int);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v17, v16, v13);
  v19 = &v18[OBJC_IVAR___BEBookViewModel_documentUniqueID];
  *(_QWORD *)v19 = a1;
  *((_QWORD *)v19 + 1) = a2;
  v20 = &v18[OBJC_IVAR___BEBookViewModel_title];
  v21 = v39;
  *(_QWORD *)v20 = a3;
  *((_QWORD *)v20 + 1) = v21;
  *(_QWORD *)&v18[OBJC_IVAR___BEBookViewModel_authors] = v40;
  v18[OBJC_IVAR___BEBookViewModel_sample] = v41;
  v22 = &v18[OBJC_IVAR___BEBookViewModel_path];
  v23 = v43;
  *(_QWORD *)v22 = v42;
  *((_QWORD *)v22 + 1) = v23;
  if (!((unint64_t)a9 >> 62))
  {
    v24 = *(_QWORD *)((char *)&dword_10 + (a9 & 0xFFFFFFFFFFFFF8));
    if (v24)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease(a9);
    v31 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0)
      goto LABEL_19;
    goto LABEL_16;
  }
  if (a9 < 0)
    v32 = a9;
  else
    v32 = a9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a9);
  v24 = _CocoaArrayWrapper.endIndex.getter(v32);
  swift_bridgeObjectRelease(a9);
  if (!v24)
    goto LABEL_15;
LABEL_3:
  v46[0] = (uint64_t)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(v24);
  if ((v24 & 0x8000000000000000) == 0)
  {
    v25 = 0;
    do
    {
      if ((a9 & 0xC000000000000001) != 0)
      {
        v26 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v25, a9);
      }
      else
      {
        v26 = *(void **)(a9 + 8 * v25 + 32);
        swift_unknownObjectRetain(v26);
      }
      ++v25;
      v27 = objc_allocWithZone((Class)type metadata accessor for Document(0));
      v28 = Document.init(document:)(v26);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v28);
      v29 = *(_QWORD *)(v46[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v29);
      v30 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v29, v28);
      specialized ContiguousArray._endMutation()(v30);
    }
    while (v24 != v25);
    v31 = v46[0];
    swift_bridgeObjectRelease(a9);
    if (v31 < 0)
      goto LABEL_19;
LABEL_16:
    if ((v31 & 0x4000000000000000) == 0)
    {
      v33 = v31 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v31);
LABEL_18:
      v46[0] = v33;
      sub_10FBAC(v46);
      swift_bridgeObjectRelease(v31);
      v34 = v46[0];
      swift_beginAccess(&v18[OBJC_IVAR___BEBookViewModel__paginatableDocuments], v46, 33, 0);
      v45 = v34;
      v35 = sub_108F90(&qword_20F198);
      Published.init(initialValue:)(&v45, v35);
      swift_endAccess(v46);

      v36 = (objc_class *)type metadata accessor for BookViewModel(0);
      v44.receiver = v18;
      v44.super_class = v36;
      return objc_msgSendSuper2(&v44, "init");
    }
LABEL_19:
    v38 = swift_bridgeObjectRetain(v31);
    v33 = (uint64_t)sub_10FC30(v38, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_110A3C);
    swift_bridgeObjectRelease(v31);
    goto LABEL_18;
  }
  __break(1u);
  result = (id)swift_release(v46[0]);
  __break(1u);
  return result;
}

uint64_t sub_10E564(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_173698);
  v4 = swift_getKeyPath(&unk_1736C0);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

id BookViewModel.__allocating_init(book:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return BookViewModel.init(book:)(a1);
}

id BookViewModel.init(book:)(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = objc_msgSend(a1, "documentUniqueID");
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);
  v27 = v7;
  v28 = v6;

  v8 = objc_msgSend(a1, "title");
  v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8, v9);
  v12 = v11;

  v13 = objc_msgSend(a1, "authors");
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v13, &type metadata for String);

  LODWORD(v13) = objc_msgSend(a1, "sample");
  v15 = objc_msgSend(a1, "path");
  v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15, v16);
  v19 = v18;

  v20 = objc_msgSend(a1, "paginatableDocuments");
  v21 = sub_108F90(&qword_20F1A0);
  v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

  v23 = objc_allocWithZone((Class)type metadata accessor for BookViewModel(0));
  v24 = BookViewModel.init(uuid:title:authors:sample:path:documents:)(v28, v27, v10, v12, v14, (int)v13, v17, v19, v22);
  swift_unknownObjectRelease(a1);
  ObjectType = swift_getObjectType(v2);
  swift_deallocPartialClassInstance(v2, ObjectType, *(unsigned int *)&stru_20.segname[(swift_isaMask & *v2) + 8], *(unsigned __int16 *)&stru_20.segname[(swift_isaMask & *v2) + 12]);
  return v24;
}

id BookViewModel.__allocating_init(uuid:title:author:sample:path:documents:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;
  uint64_t v18;
  id v19;

  v17 = sub_108F90(&qword_20F1A8);
  v18 = swift_allocObject(v17, 48, 7);
  *(_OWORD *)(v18 + 16) = xmmword_173340;
  *(_QWORD *)(v18 + 32) = a5;
  *(_QWORD *)(v18 + 40) = a6;
  v19 = objc_allocWithZone((Class)type metadata accessor for BookViewModel(0));
  return BookViewModel.init(uuid:title:authors:sample:path:documents:)(a1, a2, a3, a4, v18, a7, a8, a9, a10);
}

void *sub_10E8B4(id a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;

  KeyPath = swift_getKeyPath(&unk_173698);
  v4 = swift_getKeyPath(&unk_1736C0);
  static Published.subscript.getter(&v14, v1, KeyPath, v4);
  swift_release(v4);
  swift_release(KeyPath);
  v5 = v14;
  if (v14 >> 62)
    goto LABEL_15;
  v6 = *(_QWORD *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain(v14);
  while (v6)
  {
    v7 = 4;
    while (1)
    {
      v8 = v7 - 4;
      if ((v5 & 0xC000000000000001) == 0)
        break;
      v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v5);
      v10 = __OFADD__(v8, 1);
      v11 = v7 - 3;
      if (v10)
        goto LABEL_14;
LABEL_9:
      if (objc_msgSend(v9, "ordinal") == a1)
      {
        swift_bridgeObjectRelease_n(v5, 2);
        return v9;
      }
      swift_unknownObjectRelease(v9);
      ++v7;
      if (v11 == v6)
        goto LABEL_11;
    }
    v9 = *(void **)(v5 + 8 * v7);
    swift_unknownObjectRetain(v9);
    v10 = __OFADD__(v8, 1);
    v11 = v7 - 3;
    if (!v10)
      goto LABEL_9;
LABEL_14:
    __break(1u);
LABEL_15:
    if (v5 < 0)
      v13 = v5;
    else
      v13 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v13);
  }
LABEL_11:
  swift_bridgeObjectRelease_n(v5, 2);
  return 0;
}

uint64_t sub_10EAEC()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_173698);
  v2 = swift_getKeyPath(&unk_1736C0);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_10EBE4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_173698);
  v5 = swift_getKeyPath(&unk_1736C0);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_10EC60(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_173698);
  v5 = swift_getKeyPath(&unk_1736C0);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t (*sub_10ECD4(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_173698);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_1736C0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

uint64_t sub_10ED50()
{
  return sub_10F268(&OBJC_IVAR___BEBookViewModel__paginatableDocuments, &qword_20F1B0);
}

uint64_t sub_10ED64(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F1B8, &OBJC_IVAR___BEBookViewModel__paginatableDocuments, &qword_20F1B0);
}

void (*sub_10ED80(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F1B8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEBookViewModel__paginatableDocuments;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F1B0);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

uint64_t sub_10EE4C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_1736E0);
  v5 = swift_getKeyPath(&unk_173708);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_10EEC8(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_1736E0);
  v5 = swift_getKeyPath(&unk_173708);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t sub_10EF34()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_1736E0);
  v2 = swift_getKeyPath(&unk_173708);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_10EFA4(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_1736E0);
  v4 = swift_getKeyPath(&unk_173708);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

uint64_t (*sub_10F00C(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_1736E0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_173708);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

void sub_10F084(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release(v2);
  swift_release(v3);
  free(v1);
}

uint64_t sub_10F0D0(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v6;
  _BYTE v8[24];

  swift_beginAccess(*a1 + *a4, v8, 33, 0);
  v6 = sub_108F90(a5);
  Published.projectedValue.getter(v6);
  return swift_endAccess(v8);
}

uint64_t sub_10F13C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6, uint64_t *a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  void (*v18)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _BYTE v23[24];

  v11 = sub_108F90(a5);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  v17 = &v23[-v16 - 8];
  v18 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 16);
  v18(&v23[-v16 - 8], a1, v11);
  v19 = *a2;
  v18(v15, v17, v11);
  swift_beginAccess(v19 + *a6, v23, 33, 0);
  v20 = sub_108F90(a7);
  Published.projectedValue.setter(v15, v20);
  swift_endAccess(v23);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t sub_10F254()
{
  return sub_10F268(&OBJC_IVAR___BEBookViewModel__pageTotal, &qword_20F180);
}

uint64_t sub_10F268(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[24];

  swift_beginAccess(v2 + *a1, v6, 33, 0);
  v4 = sub_108F90(a2);
  Published.projectedValue.getter(v4);
  return swift_endAccess(v6);
}

uint64_t sub_10F2CC(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F1C0, &OBJC_IVAR___BEBookViewModel__pageTotal, &qword_20F180);
}

uint64_t sub_10F2E8(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v15[24];

  v8 = sub_108F90(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  swift_beginAccess(v4 + *a3, v15, 33, 0);
  v12 = sub_108F90(a4);
  Published.projectedValue.setter(v11, v12);
  swift_endAccess(v15);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
}

void (*sub_10F3C0(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F1C0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEBookViewModel__pageTotal;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F180);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

void sub_10F488(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = v3[15];
  v6 = v3[16];
  v7 = (void *)v3[13];
  v8 = (void *)v3[14];
  v10 = v3[11];
  v9 = (void *)v3[12];
  v11 = v3[9];
  v12 = v3[10];
  v13 = v11 + v5;
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess(v13, v3 + 3, 33, 0);
    Published.projectedValue.setter(v9, v6);
    swift_endAccess(v3 + 3);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
    v14(v7, v12);
  }
  else
  {
    swift_beginAccess(v11 + v5, v3 + 6, 33, 0);
    Published.projectedValue.setter(v7, v6);
    swift_endAccess(v3 + 6);
    v14 = *(void (**)(void *, uint64_t))(v10 + 8);
  }
  v14(v8, v12);
  free(v8);
  free(v7);
  free(v9);
  free(v3);
}

void BookViewModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("AEBookPlugins.BookViewModel", 27, "init()", 6, 0);
  __break(1u);
}

id BookViewModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BookViewModel(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t BookViewModel.description.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t KeyPath;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  void *object;
  uint64_t v15;
  uint64_t v16;
  objc_super v17;
  uint64_t v18;
  unint64_t v19;

  v1 = v0;
  v18 = 0;
  v19 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v17.receiver = v0;
  v17.super_class = (Class)type metadata accessor for BookViewModel(0);
  v2 = objc_msgSendSuper2(&v17, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  v6 = v5;
  swift_bridgeObjectRelease(0xE000000000000000);

  v18 = v4;
  v19 = v6;
  v7._object = (void *)0x8000000000165600;
  v7._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v7);
  KeyPath = swift_getKeyPath(&unk_173698);
  v9 = swift_getKeyPath(&unk_1736C0);
  static Published.subscript.getter(&v16, v1, KeyPath, v9);
  swift_release(KeyPath);
  swift_release(v9);
  v10 = v16;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v15 = v16;
    else
      v15 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v11 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = *(_QWORD *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease(v10);
  v16 = v11;
  v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v12._object;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(object);
  return v18;
}

id sub_10F870(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  NSString v7;

  v4 = a1;
  a3();
  v6 = v5;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v6);
  return v7;
}

uint64_t BookViewModel.debugDescription.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v1 = v0;
  v2 = objc_msgSend(v0, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  v6 = v5;

  v36 = v4;
  v37 = v6;
  swift_bridgeObjectRetain(v6);
  v7._countAndFlagsBits = 10;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  v9 = v4;
  v8 = v6;
  KeyPath = swift_getKeyPath(&unk_173698);
  v11 = swift_getKeyPath(&unk_1736C0);
  static Published.subscript.getter(&v36, v1, KeyPath, v11);
  swift_release(KeyPath);
  swift_release(v11);
  v12 = v36;
  if (!((unint64_t)v36 >> 62))
  {
    v13 = *(_QWORD *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFF8));
    if (v13)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(v12);
    v16 = _swiftEmptyArrayStorage;
LABEL_20:
    v36 = (uint64_t)v16;
    v28 = sub_108F90(&qword_20F1C8);
    v29 = sub_111578((unint64_t *)&qword_20F1D0, &qword_20F1C8, (uint64_t)&protocol conformance descriptor for [A]);
    v30 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v28, v29);
    v32 = v31;
    swift_bridgeObjectRelease(v16);
    v36 = v9;
    v37 = v8;
    swift_bridgeObjectRetain(v8);
    v33._countAndFlagsBits = v30;
    v33._object = v32;
    String.append(_:)(v33);
    swift_bridgeObjectRelease(v8);
    swift_bridgeObjectRelease(v32);
    return v36;
  }
  if (v36 < 0)
    v27 = v36;
  else
    v27 = v36 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v36);
  v13 = _CocoaArrayWrapper.endIndex.getter(v27);
  swift_bridgeObjectRelease(v12);
  if (!v13)
    goto LABEL_19;
LABEL_3:
  v36 = (uint64_t)_swiftEmptyArrayStorage;
  result = sub_1108B8(0, v13 & ~(v13 >> 63), 0);
  if ((v13 & 0x8000000000000000) == 0)
  {
    v34 = v9;
    v35 = v8;
    v15 = 0;
    v16 = (_QWORD *)v36;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        v17 = specialized _ArrayBuffer._getElementSlowPath(_:)(v15, v12);
      }
      else
      {
        v17 = *(_QWORD *)(v12 + 8 * v15 + 32);
        swift_unknownObjectRetain(v17);
      }
      v18 = type metadata accessor for Document(0);
      v19 = (void *)swift_dynamicCastClass(v17, v18);
      if (v19)
      {
        swift_unknownObjectRetain(v17);
        v20 = objc_msgSend(v19, "debugDescription");
        v19 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);
        v23 = v22;
        swift_unknownObjectRelease_n(v17, 2);

      }
      else
      {
        swift_unknownObjectRelease(v17);
        v23 = 0xE000000000000000;
      }
      v36 = (uint64_t)v16;
      v25 = v16[2];
      v24 = v16[3];
      if (v25 >= v24 >> 1)
      {
        sub_1108B8(v24 > 1, v25 + 1, 1);
        v16 = (_QWORD *)v36;
      }
      ++v15;
      v16[2] = v25 + 1;
      v26 = &v16[2 * v25];
      v26[4] = v19;
      v26[5] = v23;
    }
    while (v13 != v15);
    swift_bridgeObjectRelease(v12);
    v9 = v34;
    v8 = v35;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_10FBAC(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  Swift::Int v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_11BFBC(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  v5 = sub_10FD30(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

_QWORD *sub_10FC24(uint64_t a1)
{
  return sub_10FC30(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_110C4C);
}

_QWORD *sub_10FC30(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  if (!v4)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_108F90(&qword_20F228);
      v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(a1);
    v9 = a2(v6 + 4, v4, a1);
    a2 = v10;
    swift_bridgeObjectRelease(v9);
    if (a2 == (uint64_t (*)(_QWORD *, uint64_t, uint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
    if (!v4)
      return _swiftEmptyArrayStorage;
  }
  return v6;
}

Swift::Int sub_10FD30(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  unint64_t v12;
  Swift::Int v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t *v23;
  Swift::Int v24;
  Swift::Int v25;
  uint64_t *v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t v29;
  void *v30;
  Swift::Int v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  Swift::Int v103;
  id v104;
  Swift::Int v105;
  Swift::Int v106;
  Swift::Int v107;
  Swift::Int v108;
  char *v109;
  uint64_t v110;

  v3 = a1[1];
  result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_132;
    if (v3)
      return sub_1104AC(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_140;
  v103 = result;
  v98 = a1;
  if (v3 < 2)
  {
    v9 = (char *)_swiftEmptyArrayStorage;
    v110 = (uint64_t)_swiftEmptyArrayStorage;
    v109 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
LABEL_98:
      if (v12 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v12 - 2;
          if (v12 < 2)
            goto LABEL_127;
          if (!v91)
            goto LABEL_139;
          v93 = *(_QWORD *)&v9[16 * v92 + 32];
          v94 = *(_QWORD *)&v9[16 * v12 + 24];
          sub_1105A4((char *)(v91 + 8 * v93), (char *)(v91 + 8 * *(_QWORD *)&v9[16 * v12 + 16]), v91 + 8 * v94, v109);
          if (v1)
            break;
          if (v94 < v93)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
            v9 = sub_11BFA8((uint64_t)v9);
          if (v92 >= *((_QWORD *)v9 + 2))
            goto LABEL_129;
          v95 = &v9[16 * v92 + 32];
          *(_QWORD *)v95 = v93;
          *((_QWORD *)v95 + 1) = v94;
          v96 = *((_QWORD *)v9 + 2);
          if (v12 > v96)
            goto LABEL_130;
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v96 - v12));
          *((_QWORD *)v9 + 2) = v96 - 1;
          v12 = v96 - 1;
        }
        while (v96 > 2);
      }
LABEL_109:
      v97 = swift_bridgeObjectRelease(v9);
      *(_QWORD *)((char *)&dword_10 + (v110 & 0xFFFFFFFFFFFFF8)) = 0;
      specialized Array._endMutation()(v97);
      return swift_bridgeObjectRelease(v110);
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_108F90(&qword_20F1A0);
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
    *(_QWORD *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8)) = v6;
    v109 = (char *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v110 = v8;
  }
  v10 = 0;
  v11 = *a1;
  v99 = *a1 - 8;
  v100 = *a1 + 16;
  v9 = (char *)_swiftEmptyArrayStorage;
  v106 = v3;
  while (1)
  {
    v13 = v10++;
    v107 = v13;
    if (v10 < v3)
    {
      v14 = *(void **)(v11 + 8 * v10);
      v15 = *(void **)(v11 + 8 * v13);
      swift_unknownObjectRetain(v14);
      swift_unknownObjectRetain(v15);
      v104 = objc_msgSend(v14, "ordinal");
      v16 = objc_msgSend(v15, "ordinal");
      swift_unknownObjectRelease(v14);
      v17 = v15;
      v3 = v106;
      swift_unknownObjectRelease(v17);
      v10 = v13 + 2;
      if (v13 + 2 < v106)
      {
        v101 = v9;
        v18 = (_QWORD *)(v100 + 8 * v13);
        while (1)
        {
          v20 = (void *)*(v18 - 1);
          v19 = (void *)*v18;
          swift_unknownObjectRetain(*v18);
          swift_unknownObjectRetain(v20);
          v21 = objc_msgSend(v19, "ordinal");
          v22 = objc_msgSend(v20, "ordinal");
          swift_unknownObjectRelease(v19);
          swift_unknownObjectRelease(v20);
          if ((uint64_t)v104 < (uint64_t)v16 == (uint64_t)v21 >= (uint64_t)v22)
            break;
          ++v10;
          ++v18;
          v3 = v106;
          if (v106 == v10)
          {
            v10 = v106;
            v9 = v101;
            goto LABEL_22;
          }
        }
        v9 = v101;
        v3 = v106;
LABEL_22:
        v13 = v107;
      }
      if ((uint64_t)v104 < (uint64_t)v16)
      {
        if (v10 < v13)
          goto LABEL_133;
        if (v13 < v10)
        {
          v23 = (uint64_t *)(v99 + 8 * v10);
          v24 = v10;
          v25 = v13;
          v26 = (uint64_t *)(v11 + 8 * v13);
          do
          {
            if (v25 != --v24)
            {
              if (!v11)
                goto LABEL_138;
              v27 = *v26;
              *v26 = *v23;
              *v23 = v27;
            }
            ++v25;
            --v23;
            ++v26;
          }
          while (v25 < v24);
        }
      }
    }
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v13))
        goto LABEL_131;
      if (v10 - v13 < v103)
        break;
    }
LABEL_48:
    if (v10 < v13)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) == 0)
      v9 = sub_11BE08(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v38 = *((_QWORD *)v9 + 2);
    v37 = *((_QWORD *)v9 + 3);
    v12 = v38 + 1;
    if (v38 >= v37 >> 1)
      v9 = sub_11BE08((char *)(v37 > 1), v38 + 1, 1, v9);
    *((_QWORD *)v9 + 2) = v12;
    v39 = v9 + 32;
    v40 = &v9[16 * v38 + 32];
    *(_QWORD *)v40 = v13;
    *((_QWORD *)v40 + 1) = v10;
    if (v38)
    {
      v108 = v10;
      while (1)
      {
        v41 = v12 - 1;
        if (v12 >= 4)
        {
          v46 = &v39[16 * v12];
          v47 = *((_QWORD *)v46 - 8);
          v48 = *((_QWORD *)v46 - 7);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_115;
          v51 = *((_QWORD *)v46 - 6);
          v50 = *((_QWORD *)v46 - 5);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_116;
          v53 = v12 - 2;
          v54 = &v39[16 * v12 - 32];
          v56 = *(_QWORD *)v54;
          v55 = *((_QWORD *)v54 + 1);
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_118;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_121;
          if (v58 >= v49)
          {
            v76 = &v39[16 * v41];
            v78 = *(_QWORD *)v76;
            v77 = *((_QWORD *)v76 + 1);
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_125;
            v69 = v44 < v79;
            goto LABEL_86;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v70 = *((_QWORD *)v9 + 4);
            v71 = *((_QWORD *)v9 + 5);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_80;
          }
          v43 = *((_QWORD *)v9 + 4);
          v42 = *((_QWORD *)v9 + 5);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_117;
        v53 = v12 - 2;
        v59 = &v39[16 * v12 - 32];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_120;
        v65 = &v39[16 * v41];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_123;
        if (__OFADD__(v63, v68))
          goto LABEL_124;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_86:
          if (v69)
            v41 = v53;
          goto LABEL_88;
        }
LABEL_80:
        if ((v64 & 1) != 0)
          goto LABEL_119;
        v72 = &v39[16 * v41];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_122;
        if (v75 < v63)
          goto LABEL_14;
LABEL_88:
        v80 = v41 - 1;
        if (v41 - 1 >= v12)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v81 = v11;
        if (!v11)
          goto LABEL_137;
        v82 = v9;
        v83 = &v39[16 * v80];
        v84 = *(_QWORD *)v83;
        v85 = v39;
        v86 = v41;
        v87 = &v39[16 * v41];
        v88 = *((_QWORD *)v87 + 1);
        v89 = v81;
        sub_1105A4((char *)(v81 + 8 * *(_QWORD *)v83), (char *)(v81 + 8 * *(_QWORD *)v87), v81 + 8 * v88, v109);
        if (v1)
        {
          v9 = v82;
          goto LABEL_109;
        }
        if (v88 < v84)
          goto LABEL_112;
        if (v86 > *((_QWORD *)v82 + 2))
          goto LABEL_113;
        *(_QWORD *)v83 = v84;
        *(_QWORD *)&v85[16 * v80 + 8] = v88;
        v90 = *((_QWORD *)v82 + 2);
        if (v86 >= v90)
          goto LABEL_114;
        v9 = v82;
        v12 = v90 - 1;
        memmove(v87, v87 + 16, 16 * (v90 - 1 - v86));
        v39 = v85;
        *((_QWORD *)v82 + 2) = v90 - 1;
        v11 = v89;
        v10 = v108;
        if (v90 <= 2)
          goto LABEL_14;
      }
    }
    v12 = 1;
LABEL_14:
    v3 = v106;
    if (v10 >= v106)
      goto LABEL_98;
  }
  if (__OFADD__(v13, v103))
    goto LABEL_134;
  if (v13 + v103 >= v3)
    v28 = v3;
  else
    v28 = v13 + v103;
  if (v28 >= v13)
  {
    if (v10 != v28)
    {
      v102 = v9;
      v29 = v99 + 8 * v10;
      v105 = v28;
      do
      {
        v30 = *(void **)(v11 + 8 * v10);
        v31 = v13;
        v32 = v29;
        do
        {
          v33 = *(void **)v32;
          swift_unknownObjectRetain(v30);
          swift_unknownObjectRetain(v33);
          v34 = objc_msgSend(v30, "ordinal");
          v35 = objc_msgSend(v33, "ordinal");
          swift_unknownObjectRelease(v30);
          swift_unknownObjectRelease(v33);
          if ((uint64_t)v34 >= (uint64_t)v35)
            break;
          if (!v11)
            goto LABEL_136;
          v36 = *(void **)v32;
          v30 = *(void **)(v32 + 8);
          *(_QWORD *)v32 = v30;
          *(_QWORD *)(v32 + 8) = v36;
          v32 -= 8;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 8;
        v13 = v107;
      }
      while (v10 != v105);
      v10 = v105;
      v9 = v102;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
  return result;
}

uint64_t sub_1104AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;

  v14 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(void **)(v5 + 8 * v4);
    v8 = v14;
    v15 = v6;
    while (1)
    {
      v9 = *(void **)v6;
      swift_unknownObjectRetain(v7);
      swift_unknownObjectRetain(v9);
      v10 = objc_msgSend(v7, "ordinal");
      v11 = objc_msgSend(v9, "ordinal");
      swift_unknownObjectRelease(v7);
      result = swift_unknownObjectRelease(v9);
      if ((uint64_t)v10 >= (uint64_t)v11)
      {
LABEL_4:
        ++v4;
        v6 = v15 + 8;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v12 = *(void **)v6;
      v7 = *(void **)(v6 + 8);
      *(_QWORD *)v6 = v7;
      *(_QWORD *)(v6 + 8) = v12;
      v6 -= 8;
      if (v4 == ++v8)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1105A4(char *a1, char *__src, unint64_t a3, char *a4)
{
  void **v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void **v11;
  void **v12;
  void **v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void **v18;
  char *v19;
  void **v20;
  char *v21;
  void **v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t result;
  void **v31;
  char *v32;
  void **v33;
  void *v34;

  v4 = (void **)__src;
  v5 = __src - a1;
  v6 = __src - a1 + 7;
  if (__src - a1 >= 0)
    v6 = __src - a1;
  v7 = v6 >> 3;
  v8 = a3 - (_QWORD)__src;
  v9 = a3 - (_QWORD)__src + 7;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v9 = a3 - (_QWORD)__src;
  v10 = v9 >> 3;
  v34 = a1;
  v33 = (void **)a4;
  if (v7 >= v9 >> 3)
  {
    if (v8 >= -7)
    {
      if (a4 != __src || &__src[8 * v10] <= a4)
        memmove(a4, __src, 8 * v10);
      v19 = &a4[8 * v10];
      v32 = v19;
      v34 = v4;
      if (a1 < (char *)v4 && v8 >= 8)
      {
        v20 = (void **)(a3 - 8);
        v21 = (char *)v4;
        do
        {
          v31 = v4;
          v22 = v20 + 1;
          v23 = (void *)*((_QWORD *)v19 - 1);
          v24 = (void *)*((_QWORD *)v21 - 1);
          v21 -= 8;
          swift_unknownObjectRetain(v23);
          swift_unknownObjectRetain(v24);
          v25 = objc_msgSend(v23, "ordinal");
          v26 = objc_msgSend(v24, "ordinal");
          swift_unknownObjectRelease(v23);
          swift_unknownObjectRelease(v24);
          if ((uint64_t)v25 >= (uint64_t)v26)
          {
            v32 = v19 - 8;
            if (v22 < (void **)v19 || v20 >= (void **)v19 || v22 != (void **)v19)
              *v20 = (void *)*((_QWORD *)v19 - 1);
            v21 = (char *)v31;
            v19 -= 8;
          }
          else
          {
            if (v22 != v31 || v20 >= v31)
              *v20 = *(void **)v21;
            v34 = v21;
          }
          if (v21 <= a1)
            break;
          --v20;
          v4 = (void **)v21;
        }
        while (v19 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v5 >= -7)
  {
    if (a4 != a1 || &a1[8 * v7] <= a4)
      memmove(a4, a1, 8 * v7);
    v11 = (void **)&a4[8 * v7];
    v32 = (char *)v11;
    if ((unint64_t)v4 < a3 && v5 >= 8)
    {
      v12 = (void **)a4;
      v13 = (void **)a1;
      do
      {
        v14 = *v4;
        v15 = *v12;
        swift_unknownObjectRetain(*v4);
        swift_unknownObjectRetain(v15);
        v16 = objc_msgSend(v14, "ordinal");
        v17 = objc_msgSend(v15, "ordinal");
        swift_unknownObjectRelease(v14);
        swift_unknownObjectRelease(v15);
        if ((uint64_t)v16 >= (uint64_t)v17)
        {
          if (v13 != v12)
            *v13 = *v12;
          v33 = ++v12;
          v18 = v4;
        }
        else
        {
          v18 = v4 + 1;
          if (v13 < v4 || v13 >= v18 || v13 != v4)
            *v13 = *v4;
        }
        ++v13;
        if (v12 >= v11)
          break;
        v4 = v18;
      }
      while ((unint64_t)v18 < a3);
      v34 = v13;
    }
LABEL_43:
    sub_11BF00(&v34, (const void **)&v33, &v32);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1108B8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1108D4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1108D4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_108F90(&qword_20F1A8);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v8] || v14 >= &v15[16 * v8])
  {
    swift_arrayInitWithCopy(v14, v15, v8, &type metadata for String);
LABEL_30:
    swift_release(a4);
    return (uint64_t)v11;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_110A3C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t i;
  void (*v15)(_QWORD *);
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t *v20[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v12 = a3;
    else
      v12 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v13 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a3);
    if (v13 <= a2)
    {
      if (v7 >= 1)
      {
        sub_111578(&qword_20F240, &qword_20F198, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_108F90(&qword_20F198);
          v15 = sub_110E58(v20, i, a3);
          v17 = *v16;
          swift_unknownObjectRetain(*v16);
          ((void (*)(uint64_t **, _QWORD))v15)(v20, 0);
          *(_QWORD *)(a1 + 8 * i) = v17;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  v10 = v8 + 32;
  if (v8 + 32 >= a1 + 8 * v9 || v10 + 8 * v9 <= a1)
  {
    v11 = sub_108F90(&qword_20F1A0);
    swift_arrayInitWithCopy(a1, v10, v9, v11);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_110C4C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t i;
  void (*v15)(_QWORD *);
  id *v16;
  id v17;
  uint64_t v18;
  uint64_t result;
  void (*v20[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8));
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v12 = a3;
    else
      v12 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v13 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a3);
    if (v13 <= a2)
    {
      if (v7 >= 1)
      {
        sub_111578(&qword_20F238, &qword_20F230, (uint64_t)&protocol conformance descriptor for [A]);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_108F90(&qword_20F230);
          v15 = sub_110EB0(v20, i, a3);
          v17 = *v16;
          ((void (*)(void (**)(id *), _QWORD))v15)(v20, 0);
          *(_QWORD *)(a1 + 8 * i) = v17;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  v10 = v8 + 32;
  if (v8 + 32 >= a1 + 8 * v9 || v10 + 8 * v9 <= a1)
  {
    v11 = type metadata accessor for Page(0);
    swift_arrayInitWithCopy(a1, v10, v9, v11);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

void (*sub_110E58(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_110F30(v6, a2, a3);
  return sub_110EAC;
}

void (*sub_110EB0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_110FA4(v6, a2, a3);
  return sub_110EAC;
}

void sub_110F04(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t *sub_110F30(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8)) > a2)
  {
    v4 = swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)sub_110F9C;
  }
  __break(1u);
  return result;
}

uint64_t sub_110F9C(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

void (*sub_110FA4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFF8)) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return sub_111010;
  }
  __break(1u);
  return result;
}

void sub_111010(id *a1)
{

}

uint64_t type metadata accessor for BookViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_20F208;
  if (!qword_20F208)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for BookViewModel);
  return result;
}

unint64_t sub_111068()
{
  unint64_t result;

  result = qword_20F1D8;
  if (!qword_20F1D8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for DocumentCollectionType, &type metadata for DocumentCollectionType);
    atomic_store(result, (unint64_t *)&qword_20F1D8);
  }
  return result;
}

uint64_t sub_1110AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___BEBookViewModel_documentUniqueID);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain(v4);
}

uint64_t sub_111104@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(*a1 + OBJC_IVAR___BEBookViewModel_sample);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

uint64_t sub_111154(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR___BEBookViewModel_sample);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = v2;
  return result;
}

uint64_t sub_1111A0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEBookViewModel__paginatableDocuments, &qword_20F1B0);
}

uint64_t sub_1111C4(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F1B8, &OBJC_IVAR___BEBookViewModel__paginatableDocuments, &qword_20F1B0);
}

uint64_t sub_1111F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEBookViewModel__pageTotal, &qword_20F180);
}

uint64_t sub_111214(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F1C0, &OBJC_IVAR___BEBookViewModel__pageTotal, &qword_20F180);
}

ValueMetadata *type metadata accessor for DocumentCollectionType()
{
  return &type metadata for DocumentCollectionType;
}

uint64_t sub_111250()
{
  return type metadata accessor for BookViewModel(0);
}

void sub_111258(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[7];

  v6[0] = &unk_173818;
  v6[1] = &unk_173818;
  v6[2] = &unk_173818;
  v6[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v6[4] = &unk_173830;
  sub_1114C8(319);
  if (v3 <= 0x3F)
  {
    v6[5] = *(_QWORD *)(v2 - 8) + 64;
    sub_111520();
    if (v5 <= 0x3F)
    {
      v6[6] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 7, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for BookViewModel(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookViewModel);
}

uint64_t dispatch thunk of BookViewModel.documentUniqueID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_68.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of BookViewModel.documentUniqueID.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BookViewModel.documentUniqueID.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.snapToContentBoundary.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.occludesSecondayContent.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of BookViewModel.sample.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.annotations.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of BookViewModel.__allocating_init(uuid:title:authors:sample:path:documents:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of BookViewModel.document(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Document.pageOffset.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of Document.pageOffset.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of Document.$pageOffset.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Document.$pageOffset.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Document.pages.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Document.$pages.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Document.$pages.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 8])();
}

void sub_1114C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_20F218)
  {
    v2 = sub_10937C(&qword_20F198);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_20F218);
  }
}

void sub_111520()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_20F220)
  {
    v0 = type metadata accessor for Published(0, &type metadata for Int);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_20F220);
  }
}

uint64_t sub_111578(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10937C(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

char *MarkupBarButtonItem.init()()
{
  void *v0;
  id v1;
  char *v2;
  id v3;
  char *v4;
  objc_super v6;

  v1 = objc_allocWithZone((Class)type metadata accessor for MarkupButtonContainerView());
  v2 = v0;
  v3 = objc_msgSend(v1, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v2[OBJC_IVAR___AEMarkupBarButtonItem_toggleView] = v3;

  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for MarkupBarButtonItem();
  v4 = (char *)objc_msgSendSuper2(&v6, "init");
  objc_msgSend(v4, "setCustomView:", *(_QWORD *)&v4[OBJC_IVAR___AEMarkupBarButtonItem_toggleView]);
  return v4;
}

uint64_t type metadata accessor for MarkupBarButtonItem()
{
  return objc_opt_self(AEMarkupBarButtonItem);
}

id sub_111874(uint64_t a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id result;
  id v8;
  id v9;
  objc_super v10;

  v3 = objc_msgSend(v1, "action");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v1, "target");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR___AEMarkupBarButtonItem_toggleView]+ OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button), "removeTarget:action:forControlEvents:", v5, v4, 64);
      swift_unknownObjectRelease(v6);
    }
  }
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for MarkupBarButtonItem();
  objc_msgSendSuper2(&v10, "setAction:", a1);
  result = objc_msgSend(v1, "action");
  if (result)
  {
    v8 = result;
    result = objc_msgSend(v1, "target");
    if (result)
    {
      v9 = result;
      objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR___AEMarkupBarButtonItem_toggleView]+ OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button), "addTarget:action:forControlEvents:", result, v8, 64);
      return (id)swift_unknownObjectRelease(v9);
    }
  }
  return result;
}

id sub_111A48(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MarkupBarButtonItem();
  return objc_msgSendSuper2(&v5, *a3);
}

id MarkupBarButtonItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MarkupBarButtonItem();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_111B68(uint64_t a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  id result;
  id v8;
  id v9;
  objc_super v10;

  v3 = objc_msgSend(v1, "action");
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v1, "target");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR___AEMarkupBarButtonItem_toggleView]+ OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button), "removeTarget:action:forControlEvents:", v5, v4, 64);
      swift_unknownObjectRelease(v6);
    }
  }
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for MarkupBarButtonItem();
  objc_msgSendSuper2(&v10, "setTarget:", a1);
  result = objc_msgSend(v1, "action");
  if (result)
  {
    v8 = result;
    result = objc_msgSend(v1, "target");
    if (result)
    {
      v9 = result;
      objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR___AEMarkupBarButtonItem_toggleView]+ OBJC_IVAR____TtC13AEBookPlugins25MarkupButtonContainerView_button), "addTarget:action:forControlEvents:", result, v8, 64);
      return (id)swift_unknownObjectRelease(v9);
    }
  }
  return result;
}

id BKDocument.document.getter()
{
  void *v0;
  id result;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;

  result = objc_msgSend(v0, "documentOrdinal");
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = result;
  v3 = objc_msgSend(result, "integerValue");

  result = objc_msgSend(v0, "href");
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = result;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(result, v4);
  v8 = v7;

  result = objc_msgSend(v0, "manifestId");
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v10 = result;
  v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(result, v9);
  v13 = v12;

  result = objc_msgSend(v0, "manifestId");
  if (result)
  {
    v15 = result;
    v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(result, v14);
    v18 = v17;

    v19 = objc_allocWithZone((Class)type metadata accessor for Document(0));
    return Document.init(ordinal:href:manifestId:assetId:title:fileSize:)((uint64_t)v3, v6, v8, v11, v13, v16, v18, 0, 0, 0);
  }
LABEL_9:
  __break(1u);
  return result;
}

Swift::Void __swiftcall CABasicAnimation.reverseValues()()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[32];

  v1 = objc_msgSend(v0, "toValue");
  if (v1)
  {
    v2 = v1;
    _bridgeAnyObjectToAny(_:)(&v12);
    swift_unknownObjectRelease(v2);
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  sub_108F48((uint64_t)&v12, (uint64_t)v14);
  v3 = objc_msgSend(v0, "fromValue");
  if (v3)
  {
    _bridgeAnyObjectToAny(_:)(&v12);
    swift_unknownObjectRelease(v3);
    v4 = *((_QWORD *)&v13 + 1);
    v5 = sub_112008(&v12, *((uint64_t *)&v13 + 1));
    v3 = (id)_bridgeAnythingToObjectiveC<A>(_:)(v5, v4);
    sub_10D65C(&v12);
  }
  objc_msgSend(v0, "setToValue:", v3, v12, (_QWORD)v13);
  swift_unknownObjectRelease(v3);
  sub_111F80((uint64_t)v14, (uint64_t)&v12);
  v6 = *((_QWORD *)&v13 + 1);
  if (*((_QWORD *)&v13 + 1))
  {
    v7 = sub_112008(&v12, *((uint64_t *)&v13 + 1));
    v8 = *(_QWORD *)(v6 - 8);
    __chkstk_darwin(v7);
    v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    v11 = _bridgeAnythingToObjectiveC<A>(_:)(v10, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    sub_10D65C(&v12);
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v0, "setFromValue:", v11);
  swift_unknownObjectRelease(v11);
  sub_111FC8((uint64_t)v14);
}

uint64_t sub_111F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_108F90(&qword_20EDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_111FC8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_108F90(&qword_20EDB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_112008(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

id Annotation.__allocating_init(uuid:type:style:creationDate:)(uint64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return Annotation.init(uuid:type:style:creationDate:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1120CC()
{
  return sub_112580(&OBJC_IVAR___BEAnnotation_cfi);
}

uint64_t sub_1120E4(uint64_t a1, uint64_t a2)
{
  return sub_1125DC(a1, a2, &OBJC_IVAR___BEAnnotation_cfi);
}

uint64_t (*sub_1120F0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_cfi, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1121A4()
{
  uint64_t v0;
  _QWORD *v1;
  _BYTE v3[24];

  v1 = (_QWORD *)(v0 + OBJC_IVAR___BEAnnotation_rects);
  swift_beginAccess(v0 + OBJC_IVAR___BEAnnotation_rects, v3, 0, 0);
  return swift_bridgeObjectRetain(*v1);
}

uint64_t sub_112258(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(v1 + OBJC_IVAR___BEAnnotation_rects);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = a1;
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_1122A8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v2 = *a1;
  v3 = (uint64_t *)(*a2 + OBJC_IVAR___BEAnnotation_rects);
  swift_beginAccess(v3, v6, 1, 0);
  v4 = *v3;
  *v3 = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v4);
}

uint64_t (*sub_112310(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_rects, a1, 33, 0);
  return j_j__swift_endAccess;
}

id sub_112360(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  _BYTE v7[24];

  v3 = a1 + *a3;
  swift_beginAccess(v3, v7, 0, 0);
  v4 = *(_QWORD *)(v3 + 8);
  if (!v4)
    return 0;
  swift_bridgeObjectRetain(v4);
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  return v5;
}

uint64_t sub_1123D4()
{
  return sub_112580(&OBJC_IVAR___BEAnnotation_content);
}

uint64_t sub_1123EC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  char v12[24];

  if (a3)
  {
    v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(a3, a2);
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess(v9, v12, 1, 0);
  v10 = v9[1];
  *v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease(v10);
}

uint64_t sub_112464(uint64_t a1, uint64_t a2)
{
  return sub_1125DC(a1, a2, &OBJC_IVAR___BEAnnotation_content);
}

uint64_t (*sub_112470(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_content, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_1124B4()
{
  return sub_112580(&OBJC_IVAR___BEAnnotation_representativeContent);
}

uint64_t sub_1124C0(uint64_t a1, uint64_t a2)
{
  return sub_1125DC(a1, a2, &OBJC_IVAR___BEAnnotation_representativeContent);
}

uint64_t (*sub_1124CC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_representativeContent, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_112510(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _BYTE v10[24];

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess(v7, v10, 1, 0);
  v8 = v7[1];
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain(v5);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_112574()
{
  return sub_112580(&OBJC_IVAR___BEAnnotation_note);
}

uint64_t sub_112580(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _BYTE v5[24];

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess(v2, v5, 0, 0);
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t sub_1125D0(uint64_t a1, uint64_t a2)
{
  return sub_1125DC(a1, a2, &OBJC_IVAR___BEAnnotation_note);
}

uint64_t sub_1125DC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  _BYTE v9[24];

  v6 = (_QWORD *)(v3 + *a3);
  swift_beginAccess(v6, v9, 1, 0);
  v7 = v6[1];
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease(v7);
}

uint64_t (*sub_112634(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_note, a1, 33, 0);
  return j_j__swift_endAccess;
}

BOOL sub_112678()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BEAnnotation_note;
  swift_beginAccess(v0 + OBJC_IVAR___BEAnnotation_note, v3, 0, 0);
  return *(_QWORD *)(v1 + 8) != 0;
}

uint64_t sub_1126C4@<X0>(uint64_t a1@<X8>)
{
  return sub_112854(&OBJC_IVAR___BEAnnotation_creationDate, a1);
}

uint64_t sub_1126D0(uint64_t a1)
{
  return sub_1128C0(a1, &OBJC_IVAR___BEAnnotation_creationDate);
}

uint64_t (*sub_1126DC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_creationDate, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_112720@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = *a1 + *a2;
  swift_beginAccess(v4, v7, 0, 0);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v4, v5);
}

uint64_t sub_112784(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v15[24];

  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = *a2 + *a5;
  swift_beginAccess(v12, v15, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 40))(v12, v11, v8);
  return swift_endAccess(v15);
}

uint64_t sub_112848@<X0>(uint64_t a1@<X8>)
{
  return sub_112854(&OBJC_IVAR___BEAnnotation_modificationDate, a1);
}

uint64_t sub_112854@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = v2 + *a1;
  swift_beginAccess(v4, v7, 0, 0);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1128B4(uint64_t a1)
{
  return sub_1128C0(a1, &OBJC_IVAR___BEAnnotation_modificationDate);
}

uint64_t sub_1128C0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = v2 + *a2;
  swift_beginAccess(v4, v7, 33, 0);
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
  return swift_endAccess(v7);
}

uint64_t (*sub_112928(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_modificationDate, a1, 33, 0);
  return j_j__swift_endAccess;
}

AEBookPlugins::Annotation::AnnotationType_optional __swiftcall Annotation.AnnotationType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 6;
  if ((unint64_t)rawValue < 6)
    v2 = rawValue;
  *v1 = v2;
  return (AEBookPlugins::Annotation::AnnotationType_optional)rawValue;
}

uint64_t Annotation.AnnotationType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_112988(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_1129A0()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

AEBookPlugins::Annotation::AnnotationType_optional sub_1129CC(Swift::Int *a1)
{
  return Annotation.AnnotationType.init(rawValue:)(*a1);
}

void sub_1129D4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

AEBookPlugins::Annotation::Style_optional __swiftcall Annotation.Style.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 7;
  if ((unint64_t)rawValue < 7)
    v2 = rawValue;
  *v1 = v2;
  return (AEBookPlugins::Annotation::Style_optional)rawValue;
}

Swift::Int sub_1129F4()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

Swift::Int sub_112A38(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

AEBookPlugins::Annotation::Style_optional sub_112A78(Swift::Int *a1)
{
  return Annotation.Style.init(rawValue:)(*a1);
}

uint64_t sub_112A80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR___BEAnnotation_type);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a1 = *v3;
  return result;
}

uint64_t sub_112ACC(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR___BEAnnotation_type);
  result = swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_type, v5, 1, 0);
  *v3 = v2;
  return result;
}

uint64_t (*sub_112B1C(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_type, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_112B60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_BYTE *)(v1 + OBJC_IVAR___BEAnnotation_style);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a1 = *v3;
  return result;
}

uint64_t sub_112BAC(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR___BEAnnotation_style);
  result = swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_style, v5, 1, 0);
  *v3 = v2;
  return result;
}

uint64_t (*sub_112BFC(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_style, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_112C40(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___BEAnnotation_uuid);
  swift_beginAccess(v4, v7, 1, 0);
  v5 = v4[1];
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain(v2);
  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_112CA8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BEAnnotation_uuid);
  swift_beginAccess(v0 + OBJC_IVAR___BEAnnotation_uuid, v4, 0, 0);
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t sub_112CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _BYTE v8[24];

  v5 = (_QWORD *)(v2 + OBJC_IVAR___BEAnnotation_uuid);
  swift_beginAccess(v5, v8, 1, 0);
  v6 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease(v6);
}

uint64_t (*sub_112D58(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_uuid, a1, 33, 0);
  return j_j__swift_endAccess;
}

uint64_t sub_112D9C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BEAnnotation_pageNumber;
  swift_beginAccess(v0 + OBJC_IVAR___BEAnnotation_pageNumber, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_112DE4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[24];

  v5 = v2 + OBJC_IVAR___BEAnnotation_pageNumber;
  result = swift_beginAccess(v5, v7, 1, 0);
  *(_QWORD *)v5 = a1;
  *(_BYTE *)(v5 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_112E40(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEAnnotation_pageNumber, a1, 33, 0);
  return j__swift_endAccess;
}

id Annotation.init(uuid:type:style:creationDate:)(uint64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5)
{
  _BYTE *v5;
  char v7;
  char v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  id v19;
  objc_super v21;

  v7 = *a3;
  v8 = *a4;
  v9 = &v5[OBJC_IVAR___BEAnnotation_cfi];
  *v9 = 0;
  v9[1] = 0;
  *(_QWORD *)&v5[OBJC_IVAR___BEAnnotation_rects] = &_swiftEmptyArrayStorage;
  v10 = &v5[OBJC_IVAR___BEAnnotation_content];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v5[OBJC_IVAR___BEAnnotation_representativeContent];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v5[OBJC_IVAR___BEAnnotation_note];
  *v12 = 0;
  v12[1] = 0;
  v13 = &v5[OBJC_IVAR___BEAnnotation_pageNumber];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = &v5[OBJC_IVAR___BEAnnotation_uuid];
  *v14 = a1;
  v14[1] = a2;
  v5[OBJC_IVAR___BEAnnotation_type] = v7;
  v5[OBJC_IVAR___BEAnnotation_style] = v8;
  v15 = &v5[OBJC_IVAR___BEAnnotation_creationDate];
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18(v15, a5, v16);
  v18(&v5[OBJC_IVAR___BEAnnotation_modificationDate], a5, v16);
  v21.receiver = v5;
  v21.super_class = (Class)type metadata accessor for Annotation(0);
  v19 = objc_msgSendSuper2(&v21, "init");
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a5, v16);
  return v19;
}

uint64_t type metadata accessor for Annotation(uint64_t a1)
{
  uint64_t result;

  result = qword_20F2E8;
  if (!qword_20F2E8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Annotation);
  return result;
}

void Annotation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("AEBookPlugins.Annotation", 24, "init()", 6, 0);
  __break(1u);
}

id Annotation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Annotation(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t Annotation.description.getter()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  Swift::String v12;
  Swift::String v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  char *v22;
  char v23;
  uint64_t v24;
  Swift::String v25;
  void *object;
  Swift::String v27;
  char *v28;
  uint64_t v29;
  Swift::String v30;
  void *v31;
  Swift::String v32;
  char *v33;
  uint64_t v34;
  Swift::String v35;
  void *v36;
  char v38[24];
  uint64_t v39;
  char v40;
  char v41[24];
  char v42[24];
  _QWORD v43[3];
  objc_super v44;
  uint64_t v45;
  unint64_t v46;

  v1 = v0;
  v43[0] = 0;
  v43[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(57);
  v45 = 0;
  v46 = 0xE000000000000000;
  v44.receiver = v0;
  v44.super_class = (Class)type metadata accessor for Annotation(0);
  v2 = objc_msgSendSuper2(&v44, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  v8._countAndFlagsBits = 0x203A6469757520;
  v8._object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  v9 = (uint64_t *)&v1[OBJC_IVAR___BEAnnotation_uuid];
  swift_beginAccess(&v1[OBJC_IVAR___BEAnnotation_uuid], v43, 0, 0);
  v10 = *v9;
  v11 = (void *)v9[1];
  swift_bridgeObjectRetain(v11);
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(v11);
  v13._countAndFlagsBits = 0x6F697461636F6C20;
  v13._object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v13);
  v14 = &v1[OBJC_IVAR___BEAnnotation_cfi];
  swift_beginAccess(&v1[OBJC_IVAR___BEAnnotation_cfi], v42, 0, 0);
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain(v15);
  v17 = Optional<A>.description.getter(v16, v15);
  v19 = v18;
  swift_bridgeObjectRelease(v15);
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  v21._countAndFlagsBits = 0x6D754E6567617020;
  v21._object = (void *)0xEC000000203A7265;
  String.append(_:)(v21);
  v22 = &v1[OBJC_IVAR___BEAnnotation_pageNumber];
  swift_beginAccess(&v1[OBJC_IVAR___BEAnnotation_pageNumber], v41, 0, 0);
  v23 = v22[8];
  v39 = *(_QWORD *)v22;
  v40 = v23;
  v24 = sub_108F90(&qword_20F2A0);
  v25._countAndFlagsBits = String.init<A>(describing:)(&v39, v24);
  object = v25._object;
  String.append(_:)(v25);
  swift_bridgeObjectRelease(object);
  v27._countAndFlagsBits = 0x203A6570797420;
  v27._object = (void *)0xE700000000000000;
  String.append(_:)(v27);
  v28 = &v1[OBJC_IVAR___BEAnnotation_type];
  swift_beginAccess(&v1[OBJC_IVAR___BEAnnotation_type], &v39, 0, 0);
  v29 = 8 * *v28;
  v30._countAndFlagsBits = *(_QWORD *)&aUnknown_1[v29];
  v31 = *(void **)&aPhysicalphysic[v29 + 16];
  v30._object = v31;
  String.append(_:)(v30);
  swift_bridgeObjectRelease(v31);
  v32._countAndFlagsBits = 0x203A656C79747320;
  v32._object = (void *)0xE800000000000000;
  String.append(_:)(v32);
  v33 = &v1[OBJC_IVAR___BEAnnotation_style];
  swift_beginAccess(v33, v38, 0, 0);
  v34 = 8 * *v33;
  v35._countAndFlagsBits = *(_QWORD *)&aNone_1[v34];
  v36 = *(void **)&aUnderlin[v34 + 8];
  v35._object = v36;
  String.append(_:)(v35);
  swift_bridgeObjectRelease(v36);
  return v45;
}

uint64_t Annotation.debugDescription.getter()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  Swift::String v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  Swift::String v20;
  Swift::String v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  Swift::String v28;
  Swift::String v29;
  char *v30;
  void (*v31)(_BYTE *, char *, uint64_t);
  unint64_t v32;
  Swift::String v33;
  void *object;
  void (*v35)(_BYTE *, uint64_t);
  Swift::String v36;
  char *v37;
  Swift::String v38;
  void *v39;
  uint64_t v40;
  void *v41;
  Swift::String v42;
  _BYTE v44[24];
  char v45[24];
  char v46[24];
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v1 = v0;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = &v44[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = objc_msgSend(v0, "description");
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6, v7);
  v10 = v9;

  v47 = v8;
  v48 = v10;
  swift_bridgeObjectRetain(v10);
  v11._countAndFlagsBits = 10;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v10);
  v13 = v47;
  v12 = v48;
  v47 = 0;
  v48 = 0xE000000000000000;
  _StringGuts.grow(_:)(45);
  swift_bridgeObjectRelease(v48);
  v49 = 0x3A746E65746E6F63;
  v50 = 0xE900000000000020;
  v14 = &v1[OBJC_IVAR___BEAnnotation_content];
  swift_beginAccess(&v1[OBJC_IVAR___BEAnnotation_content], &v47, 0, 0);
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain(v15);
  v17 = Optional<A>.description.getter(v16, v15);
  v19 = v18;
  swift_bridgeObjectRelease(v15);
  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease(v19);
  v21._countAndFlagsBits = 0x203A65746F6E20;
  v21._object = (void *)0xE700000000000000;
  String.append(_:)(v21);
  v22 = &v1[OBJC_IVAR___BEAnnotation_note];
  swift_beginAccess(&v1[OBJC_IVAR___BEAnnotation_note], v46, 0, 0);
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain(v23);
  v25 = Optional<A>.description.getter(v24, v23);
  v27 = v26;
  swift_bridgeObjectRelease(v23);
  v28._countAndFlagsBits = v25;
  v28._object = v27;
  String.append(_:)(v28);
  swift_bridgeObjectRelease(v27);
  v29._countAndFlagsBits = 0x6465746165726320;
  v29._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v29);
  v30 = &v1[OBJC_IVAR___BEAnnotation_creationDate];
  swift_beginAccess(&v1[OBJC_IVAR___BEAnnotation_creationDate], v45, 0, 0);
  v31 = *(void (**)(_BYTE *, char *, uint64_t))(v3 + 16);
  v31(v5, v30, v2);
  v32 = sub_113764();
  v33._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v32);
  object = v33._object;
  String.append(_:)(v33);
  swift_bridgeObjectRelease(object);
  v35 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v35(v5, v2);
  v36._countAndFlagsBits = 0x65696669646F6D20;
  v36._object = (void *)0xEB00000000203A64;
  String.append(_:)(v36);
  v37 = &v1[OBJC_IVAR___BEAnnotation_modificationDate];
  swift_beginAccess(&v1[OBJC_IVAR___BEAnnotation_modificationDate], v44, 0, 0);
  v31(v5, v37, v2);
  v38._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v2, v32);
  v39 = v38._object;
  String.append(_:)(v38);
  swift_bridgeObjectRelease(v39);
  v35(v5, v2);
  v40 = v49;
  v41 = (void *)v50;
  v49 = v13;
  v50 = v12;
  swift_bridgeObjectRetain(v12);
  v42._countAndFlagsBits = v40;
  v42._object = v41;
  String.append(_:)(v42);
  swift_bridgeObjectRelease(v12);
  swift_bridgeObjectRelease(v41);
  return v49;
}

unint64_t sub_113764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_20F2A8;
  if (!qword_20F2A8)
  {
    v1 = type metadata accessor for Date(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Date, v1);
    atomic_store(result, (unint64_t *)&qword_20F2A8);
  }
  return result;
}

unint64_t sub_1137B0()
{
  unint64_t result;

  result = qword_20F2B0;
  if (!qword_20F2B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Annotation.AnnotationType, &type metadata for Annotation.AnnotationType);
    atomic_store(result, (unint64_t *)&qword_20F2B0);
  }
  return result;
}

unint64_t sub_1137F8()
{
  unint64_t result;

  result = qword_20F2B8;
  if (!qword_20F2B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Annotation.Style, &type metadata for Annotation.Style);
    atomic_store(result, (unint64_t *)&qword_20F2B8);
  }
  return result;
}

uint64_t sub_11383C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_113918(a1, &OBJC_IVAR___BEAnnotation_cfi, a2);
}

uint64_t sub_113848(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_112510(a1, a2, a3, a4, &OBJC_IVAR___BEAnnotation_cfi);
}

uint64_t sub_113864@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (uint64_t *)(*a1 + OBJC_IVAR___BEAnnotation_rects);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = *v3;
  *a2 = *v3;
  return swift_bridgeObjectRetain(v4);
}

uint64_t sub_1138BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_113918(a1, &OBJC_IVAR___BEAnnotation_content, a2);
}

uint64_t sub_1138C8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_112510(a1, a2, a3, a4, &OBJC_IVAR___BEAnnotation_content);
}

uint64_t sub_1138E4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_113918(a1, &OBJC_IVAR___BEAnnotation_representativeContent, a2);
}

uint64_t sub_1138F0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_112510(a1, a2, a3, a4, &OBJC_IVAR___BEAnnotation_representativeContent);
}

uint64_t sub_11390C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_113918(a1, &OBJC_IVAR___BEAnnotation_note, a2);
}

uint64_t sub_113918@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  _BYTE v7[24];

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess(v4, v7, 0, 0);
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain(v5);
}

uint64_t sub_113968(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_112510(a1, a2, a3, a4, &OBJC_IVAR___BEAnnotation_note);
}

uint64_t sub_113984@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_112720(a1, &OBJC_IVAR___BEAnnotation_creationDate, a2);
}

uint64_t sub_1139A0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_112784(a1, a2, a3, a4, &OBJC_IVAR___BEAnnotation_creationDate);
}

uint64_t sub_1139BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_112720(a1, &OBJC_IVAR___BEAnnotation_modificationDate, a2);
}

uint64_t sub_1139D8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_112784(a1, a2, a3, a4, &OBJC_IVAR___BEAnnotation_modificationDate);
}

uint64_t sub_1139F4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_113A18(a1, &OBJC_IVAR___BEAnnotation_type, a2);
}

uint64_t sub_113A00(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_113A70(a1, a2, a3, a4, &OBJC_IVAR___BEAnnotation_type);
}

uint64_t sub_113A0C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_113A18(a1, &OBJC_IVAR___BEAnnotation_style, a2);
}

uint64_t sub_113A18@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;
  _BYTE v6[24];

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess(v4, v6, 0, 0);
  *a3 = *v4;
  return result;
}

uint64_t sub_113A64(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_113A70(a1, a2, a3, a4, &OBJC_IVAR___BEAnnotation_style);
}

uint64_t sub_113A70(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  _BYTE *v6;
  uint64_t result;
  _BYTE v8[24];

  v5 = *a1;
  v6 = (_BYTE *)(*a2 + *a5);
  result = swift_beginAccess(v6, v8, 1, 0);
  *v6 = v5;
  return result;
}

uint64_t sub_113AB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  _BYTE v6[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___BEAnnotation_uuid);
  swift_beginAccess(v3, v6, 0, 0);
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain(v4);
}

uint64_t sub_113B10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;
  _BYTE v6[24];

  v3 = *a1 + OBJC_IVAR___BEAnnotation_pageNumber;
  result = swift_beginAccess(v3, v6, 0, 0);
  v5 = *(_BYTE *)(v3 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_113B68(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;
  _BYTE v6[24];

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2 + OBJC_IVAR___BEAnnotation_pageNumber;
  result = swift_beginAccess(v4, v6, 1, 0);
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = v3;
  return result;
}

uint64_t sub_113BC4()
{
  return type metadata accessor for Annotation(0);
}

uint64_t sub_113BCC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v4[0] = &unk_173A48;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = &unk_173A48;
  v4[3] = &unk_173A48;
  v4[4] = &unk_173A48;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    v6 = v5;
    v7 = &unk_173A60;
    v8 = &unk_173A78;
    v9 = &unk_173A90;
    v10 = &unk_173AA8;
    result = swift_updateClassMetadata2(a1, 256, 11, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Annotation(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Annotation);
}

uint64_t dispatch thunk of Annotation.cfi.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Annotation.content.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Annotation.representativeContent.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Annotation.note.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of Page.$highlights.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of Page.$highlights.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Annotation.modificationDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.anchors.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.$anchors.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Page.$anchors.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Annotation.style.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of Page.mediaElements.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Annotation.uuid.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Annotation.uuid.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.$mediaElements.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Annotation.pageNumber.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Annotation.pageNumber.setter(uint64_t a1, char a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))&stru_1A8.sectname[swift_isaMask & *v2])(a1, a2 & 1);
}

uint64_t dispatch thunk of Page.physicalPageMarkers.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of Annotation.__allocating_init(uuid:type:style:creationDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 440))();
}

_BYTE *initializeBufferWithCopyOfBuffer for Annotation.AnnotationType(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Annotation.AnnotationType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Annotation.AnnotationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_113F94 + 4 * byte_1738C5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_113FC8 + 4 * byte_1738C0[v4]))();
}

uint64_t sub_113FC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_113FD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x113FD8);
  return result;
}

uint64_t sub_113FE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x113FECLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_113FF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_113FF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_114004(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_11400C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Annotation.AnnotationType()
{
  return &type metadata for Annotation.AnnotationType;
}

uint64_t getEnumTagSinglePayload for Annotation.Style(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Annotation.Style(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_114100 + 4 * byte_1738CF[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_114134 + 4 * byte_1738CA[v4]))();
}

uint64_t sub_114134(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_11413C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x114144);
  return result;
}

uint64_t sub_114150(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x114158);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_11415C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_114164(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Annotation.Style()
{
  return &type metadata for Annotation.Style;
}

double Page.contentOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___BEPage_contentOffset);
}

double Page.contentSize.getter()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___BEPage_contentSize);
}

double sub_1141C0()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR___BEPage_contentOffset);
}

uint64_t sub_1141EC()
{
  return 1;
}

uint64_t sub_1141FC()
{
  return 0;
}

uint64_t sub_114218()
{
  return sub_114BAC((uint64_t)&unk_173BF8, (uint64_t)&unk_173C20);
}

uint64_t sub_114240(uint64_t a1)
{
  return sub_114CC4(a1, (uint64_t)&unk_173BF8, (uint64_t)&unk_173C20);
}

uint64_t sub_114254@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_114D3C(a1, (uint64_t)&unk_173BF8, (uint64_t)&unk_173C20, a2);
}

uint64_t sub_11426C(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_114DCC(a1, a2, a3, a4, (uint64_t)&unk_173BF8, (uint64_t)&unk_173C20);
}

uint64_t (*sub_114284(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_173BF8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_173C20);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

uint64_t sub_1142FC()
{
  return sub_10F268(&OBJC_IVAR___BEPage__annotations, &qword_20F310);
}

uint64_t sub_114310(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F318, &OBJC_IVAR___BEPage__annotations, &qword_20F310);
}

void (*sub_11432C(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F318);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEPage__annotations;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F310);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

uint64_t sub_114408()
{
  return sub_114BAC((uint64_t)&unk_173C50, (uint64_t)&unk_173C78);
}

uint64_t sub_114430(uint64_t a1)
{
  return sub_114CC4(a1, (uint64_t)&unk_173C50, (uint64_t)&unk_173C78);
}

uint64_t sub_114444@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_114D3C(a1, (uint64_t)&unk_173C50, (uint64_t)&unk_173C78, a2);
}

uint64_t sub_11445C(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_114DCC(a1, a2, a3, a4, (uint64_t)&unk_173C50, (uint64_t)&unk_173C78);
}

uint64_t (*sub_114474(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_173C50);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_173C78);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

uint64_t sub_1144EC()
{
  return sub_10F268(&OBJC_IVAR___BEPage__bookmarks, &qword_20F310);
}

uint64_t sub_114500(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F318, &OBJC_IVAR___BEPage__bookmarks, &qword_20F310);
}

void (*sub_11451C(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F318);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEPage__bookmarks;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F310);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

Class sub_1145F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  uint64_t v9;
  Class isa;
  uint64_t v12;

  KeyPath = swift_getKeyPath(a3);
  v7 = swift_getKeyPath(a4);
  v8 = a1;
  static Published.subscript.getter(&v12, v8, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);

  v9 = v12;
  type metadata accessor for Annotation(0);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  return isa;
}

uint64_t sub_114694()
{
  return sub_114BAC((uint64_t)&unk_173CA8, (uint64_t)&unk_173CD0);
}

uint64_t sub_1146BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v9 = type metadata accessor for Annotation(0);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v9);
  KeyPath = swift_getKeyPath(a4);
  v12 = swift_getKeyPath(a5);
  v14 = v10;
  return static Published.subscript.setter(&v14, a1, KeyPath, v12);
}

uint64_t sub_114740(uint64_t a1)
{
  return sub_114CC4(a1, (uint64_t)&unk_173CA8, (uint64_t)&unk_173CD0);
}

uint64_t sub_114754@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_114D3C(a1, (uint64_t)&unk_173CA8, (uint64_t)&unk_173CD0, a2);
}

uint64_t sub_11476C(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_114DCC(a1, a2, a3, a4, (uint64_t)&unk_173CA8, (uint64_t)&unk_173CD0);
}

uint64_t (*sub_114784(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_173CA8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_173CD0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

uint64_t sub_1147FC()
{
  return sub_10F268(&OBJC_IVAR___BEPage__highlights, &qword_20F310);
}

uint64_t sub_114810(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F318, &OBJC_IVAR___BEPage__highlights, &qword_20F310);
}

void (*sub_11482C(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F318);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEPage__highlights;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F310);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

uint64_t sub_114908()
{
  return sub_114BAC((uint64_t)&unk_173D00, (uint64_t)&unk_173D28);
}

uint64_t sub_114930(uint64_t a1)
{
  return sub_114CC4(a1, (uint64_t)&unk_173D00, (uint64_t)&unk_173D28);
}

uint64_t sub_114944@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_114D3C(a1, (uint64_t)&unk_173D00, (uint64_t)&unk_173D28, a2);
}

uint64_t sub_11495C(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_114DCC(a1, a2, a3, a4, (uint64_t)&unk_173D00, (uint64_t)&unk_173D28);
}

uint64_t (*sub_114974(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_173D00);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_173D28);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

uint64_t sub_1149EC()
{
  return sub_10F268(&OBJC_IVAR___BEPage__anchors, &qword_20F338);
}

uint64_t sub_114A00(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F340, &OBJC_IVAR___BEPage__anchors, &qword_20F338);
}

void (*sub_114A1C(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F340);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEPage__anchors;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F338);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

Class sub_114AF8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  uint64_t v9;
  Class isa;
  uint64_t v12;

  KeyPath = swift_getKeyPath(a3);
  v7 = swift_getKeyPath(a4);
  v8 = a1;
  static Published.subscript.getter(&v12, v8, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);

  v9 = v12;
  sub_108F90(&qword_20F388);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  return isa;
}

uint64_t sub_114B98()
{
  return sub_114BAC((uint64_t)&unk_173D58, (uint64_t)&unk_173D80);
}

uint64_t sub_114BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  KeyPath = swift_getKeyPath(a1);
  v5 = swift_getKeyPath(a2);
  static Published.subscript.getter(&v7, v2, KeyPath, v5);
  swift_release(v5);
  swift_release(KeyPath);
  return v7;
}

uint64_t sub_114C28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v14;

  v9 = sub_108F90(&qword_20F388);
  v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(a3, v9);
  KeyPath = swift_getKeyPath(a4);
  v12 = swift_getKeyPath(a5);
  v14 = v10;
  return static Published.subscript.setter(&v14, a1, KeyPath, v12);
}

uint64_t sub_114CB0(uint64_t a1)
{
  return sub_114CC4(a1, (uint64_t)&unk_173D58, (uint64_t)&unk_173D80);
}

uint64_t sub_114CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t KeyPath;
  uint64_t v7;
  uint64_t v9;

  KeyPath = swift_getKeyPath(a2);
  v7 = swift_getKeyPath(a3);
  v9 = a1;
  return static Published.subscript.setter(&v9, v3, KeyPath, v7);
}

uint64_t sub_114D28@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_114D3C(a1, (uint64_t)&unk_173D58, (uint64_t)&unk_173D80, a2);
}

uint64_t sub_114D3C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = *a1;
  KeyPath = swift_getKeyPath(a2);
  v8 = swift_getKeyPath(a3);
  static Published.subscript.getter(&v10, v6, KeyPath, v8);
  swift_release(v8);
  result = swift_release(KeyPath);
  *a4 = v10;
  return result;
}

uint64_t sub_114DB8(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_114DCC(a1, a2, a3, a4, (uint64_t)&unk_173D58, (uint64_t)&unk_173D80);
}

uint64_t sub_114DCC(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  void *v8;
  uint64_t KeyPath;
  uint64_t v10;
  uint64_t v12;

  v7 = *a1;
  v8 = *a2;
  KeyPath = swift_getKeyPath(a5);
  v10 = swift_getKeyPath(a6);
  v12 = v7;
  swift_bridgeObjectRetain(v7);
  return static Published.subscript.setter(&v12, v8, KeyPath, v10);
}

uint64_t (*sub_114E40(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_173D58);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_173D80);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

uint64_t sub_114EB8()
{
  return sub_10F268(&OBJC_IVAR___BEPage__mediaElements, &qword_20F338);
}

uint64_t sub_114ECC(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F340, &OBJC_IVAR___BEPage__mediaElements, &qword_20F338);
}

void (*sub_114EE8(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F340);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEPage__mediaElements;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F338);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

uint64_t sub_114FC4()
{
  return sub_114BAC((uint64_t)&unk_173DB8, (uint64_t)&unk_173DE0);
}

uint64_t sub_114FEC(uint64_t a1)
{
  return sub_114CC4(a1, (uint64_t)&unk_173DB8, (uint64_t)&unk_173DE0);
}

uint64_t sub_115000@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_114D3C(a1, (uint64_t)&unk_173DB8, (uint64_t)&unk_173DE0, a2);
}

uint64_t sub_115018(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_114DCC(a1, a2, a3, a4, (uint64_t)&unk_173DB8, (uint64_t)&unk_173DE0);
}

uint64_t (*sub_115030(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_173DB8);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_173DE0);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

uint64_t sub_1150A8()
{
  return sub_10F268(&OBJC_IVAR___BEPage__physicalPageMarkers, &qword_20F358);
}

uint64_t sub_1150BC(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F360, &OBJC_IVAR___BEPage__physicalPageMarkers, &qword_20F358);
}

void (*sub_1150D8(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F360);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEPage__physicalPageMarkers;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F358);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

Class sub_1151B4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t KeyPath;
  uint64_t v7;
  id v8;
  uint64_t v9;
  Class isa;
  uint64_t v12;

  KeyPath = swift_getKeyPath(a3);
  v7 = swift_getKeyPath(a4);
  v8 = a1;
  static Published.subscript.getter(&v12, v8, KeyPath, v7);
  swift_release(v7);
  swift_release(KeyPath);

  v9 = v12;
  if (!v12)
    return (Class)0;
  sub_108F90(&qword_20F388);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v9);
  return isa;
}

uint64_t sub_115260()
{
  return sub_114BAC((uint64_t)&unk_173E18, (uint64_t)&unk_173E40);
}

uint64_t sub_115288(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v13;

  v7 = a3;
  if (a3)
  {
    v9 = sub_108F90(&qword_20F388);
    v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v9);
  }
  KeyPath = swift_getKeyPath(a4);
  v11 = swift_getKeyPath(a5);
  v13 = v7;
  return static Published.subscript.setter(&v13, a1, KeyPath, v11);
}

uint64_t sub_115314(uint64_t a1)
{
  return sub_114CC4(a1, (uint64_t)&unk_173E18, (uint64_t)&unk_173E40);
}

uint64_t sub_115328@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_114D3C(a1, (uint64_t)&unk_173E18, (uint64_t)&unk_173E40, a2);
}

uint64_t sub_115340(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_114DCC(a1, a2, a3, a4, (uint64_t)&unk_173E18, (uint64_t)&unk_173E40);
}

uint64_t (*sub_115358(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_173E18);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_173E40);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

uint64_t sub_1153D0()
{
  return sub_10F268(&OBJC_IVAR___BEPage__physicalChapterMarkers, &qword_20F358);
}

uint64_t sub_1153E4(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F360, &OBJC_IVAR___BEPage__physicalChapterMarkers, &qword_20F358);
}

void (*sub_115400(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F360);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEPage__physicalChapterMarkers;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F358);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

id Page.__allocating_init(contentOffset:contentSize:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return Page.init(contentOffset:contentSize:)(a1, a2, a3, a4);
}

id Page.init(contentOffset:contentSize:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  double *v34;
  double *v35;
  objc_class *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  objc_super v41;
  _QWORD *v42;

  v9 = sub_108F90(&qword_20F358);
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_108F90(&qword_20F338);
  v38 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_108F90(&qword_20F310);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = &v4[OBJC_IVAR___BEPage__annotations];
  v42 = _swiftEmptyArrayStorage;
  v20 = v4;
  v21 = sub_108F90(&qword_20F370);
  Published.init(initialValue:)(&v42, v21);
  v22 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v22(v19, v18, v15);
  v23 = &v20[OBJC_IVAR___BEPage__bookmarks];
  v42 = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(&v42, v21);
  v22(v23, v18, v15);
  v24 = &v20[OBJC_IVAR___BEPage__highlights];
  v42 = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(&v42, v21);
  v22(v24, v18, v15);
  v25 = &v20[OBJC_IVAR___BEPage__anchors];
  v42 = _swiftEmptyArrayStorage;
  v26 = sub_108F90(&qword_20F378);
  Published.init(initialValue:)(&v42, v26);
  v27 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v27(v25, v14, v12);
  v28 = &v20[OBJC_IVAR___BEPage__mediaElements];
  v42 = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(&v42, v26);
  v27(v28, v14, v12);
  v29 = &v20[OBJC_IVAR___BEPage__physicalPageMarkers];
  v42 = _swiftEmptyArrayStorage;
  v30 = sub_108F90(&qword_20F380);
  Published.init(initialValue:)(&v42, v30);
  v31 = v40;
  v32 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  v32(v29, v11, v40);
  v33 = &v20[OBJC_IVAR___BEPage__physicalChapterMarkers];
  v42 = _swiftEmptyArrayStorage;
  Published.init(initialValue:)(&v42, v30);
  v32(v33, v11, v31);
  v34 = (double *)&v20[OBJC_IVAR___BEPage_contentOffset];
  *v34 = a1;
  v34[1] = a2;
  v35 = (double *)&v20[OBJC_IVAR___BEPage_contentSize];
  *v35 = a3;
  v35[1] = a4;

  v36 = (objc_class *)type metadata accessor for Page(0);
  v41.receiver = v20;
  v41.super_class = v36;
  return objc_msgSendSuper2(&v41, "init");
}

uint64_t type metadata accessor for Page(uint64_t a1)
{
  uint64_t result;

  result = qword_20F3B8;
  if (!qword_20F3B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Page);
  return result;
}

void Page.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("AEBookPlugins.Page", 18, "init()", 6, 0);
  __break(1u);
}

id Page.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Page(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t Page.description.getter()
{
  char *v0;
  char *v1;
  Swift::String v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  Swift::String v8;
  Swift::String v9;
  __int128 v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t KeyPath;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  void *object;
  Swift::String v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  Swift::String v23;
  void *v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  void *v30;
  Swift::String v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  Swift::String v42;
  void *v43;
  Swift::String v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  void *v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  void *v54;
  _OWORD v56[2];
  objc_super v57;
  __int128 v58;

  v1 = v0;
  *(_QWORD *)&v56[0] = 0;
  *((_QWORD *)&v56[0] + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(248);
  v58 = v56[0];
  v2._countAndFlagsBits = 0x2020202020202020;
  v2._object = (void *)0xE800000000000000;
  String.append(_:)(v2);
  v57.receiver = v0;
  v57.super_class = (Class)type metadata accessor for Page(0);
  v3 = objc_msgSendSuper2(&v57, "description");
  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);
  v7 = v6;

  v8._countAndFlagsBits = v5;
  v8._object = v7;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(v7);
  v9._object = (void *)0x80000000001659B0;
  v9._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v9);
  v10 = *(_OWORD *)&v1[OBJC_IVAR___BEPage_contentSize];
  v56[0] = *(_OWORD *)&v1[OBJC_IVAR___BEPage_contentOffset];
  v56[1] = v10;
  type metadata accessor for CGRect(0);
  _print_unlocked<A, B>(_:_:)(v56, &v58, v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v12._object = (void *)0x80000000001659D0;
  v12._countAndFlagsBits = 0xD00000000000001ALL;
  String.append(_:)(v12);
  KeyPath = swift_getKeyPath(&unk_173BF8);
  v14 = swift_getKeyPath(&unk_173C20);
  static Published.subscript.getter(v56, v1, KeyPath, v14);
  swift_release(KeyPath);
  swift_release(v14);
  v15 = *(_QWORD *)&v56[0];
  v16 = type metadata accessor for Annotation(0);
  v17._countAndFlagsBits = Array.description.getter(v15, v16);
  object = v17._object;
  String.append(_:)(v17);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(object);
  v19._countAndFlagsBits = 0xD000000000000018;
  v19._object = (void *)0x80000000001659F0;
  String.append(_:)(v19);
  v20 = swift_getKeyPath(&unk_173C50);
  v21 = swift_getKeyPath(&unk_173C78);
  static Published.subscript.getter(v56, v1, v20, v21);
  swift_release(v20);
  swift_release(v21);
  v22 = *(_QWORD *)&v56[0];
  v23._countAndFlagsBits = Array.description.getter(*(_QWORD *)&v56[0], v16);
  v24 = v23._object;
  String.append(_:)(v23);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v24);
  v25._countAndFlagsBits = 0xD000000000000019;
  v25._object = (void *)0x8000000000165A10;
  String.append(_:)(v25);
  v26 = swift_getKeyPath(&unk_173CA8);
  v27 = swift_getKeyPath(&unk_173CD0);
  static Published.subscript.getter(v56, v1, v26, v27);
  swift_release(v26);
  swift_release(v27);
  v28 = *(_QWORD *)&v56[0];
  v29._countAndFlagsBits = Array.description.getter(*(_QWORD *)&v56[0], v16);
  v30 = v29._object;
  String.append(_:)(v29);
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v30);
  v31._countAndFlagsBits = 0xD000000000000016;
  v31._object = (void *)0x8000000000165A30;
  String.append(_:)(v31);
  v32 = swift_getKeyPath(&unk_173D00);
  v33 = swift_getKeyPath(&unk_173D28);
  static Published.subscript.getter(v56, v1, v32, v33);
  swift_release(v32);
  swift_release(v33);
  v34 = *(_QWORD *)&v56[0];
  v35 = sub_108F90(&qword_20F388);
  v36._countAndFlagsBits = Array.description.getter(v34, v35);
  v37 = v36._object;
  String.append(_:)(v36);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v37);
  v38._countAndFlagsBits = 0xD00000000000001CLL;
  v38._object = (void *)0x8000000000165A50;
  String.append(_:)(v38);
  v39 = swift_getKeyPath(&unk_173D58);
  v40 = swift_getKeyPath(&unk_173D80);
  static Published.subscript.getter(v56, v1, v39, v40);
  swift_release(v39);
  swift_release(v40);
  v41 = *(_QWORD *)&v56[0];
  v42._countAndFlagsBits = Array.description.getter(*(_QWORD *)&v56[0], v35);
  v43 = v42._object;
  String.append(_:)(v42);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v43);
  v44._countAndFlagsBits = 0xD000000000000022;
  v44._object = (void *)0x8000000000165A70;
  String.append(_:)(v44);
  v45 = swift_getKeyPath(&unk_173DB8);
  v46 = swift_getKeyPath(&unk_173DE0);
  static Published.subscript.getter(v56, v1, v45, v46);
  swift_release(v45);
  swift_release(v46);
  v47 = sub_108F90(&qword_20F380);
  v48._countAndFlagsBits = String.init<A>(describing:)(v56, v47);
  v49 = v48._object;
  String.append(_:)(v48);
  swift_bridgeObjectRelease(v49);
  v50._countAndFlagsBits = 0xD000000000000025;
  v50._object = (void *)0x8000000000165AA0;
  String.append(_:)(v50);
  v51 = swift_getKeyPath(&unk_173E18);
  v52 = swift_getKeyPath(&unk_173E40);
  static Published.subscript.getter(v56, v1, v51, v52);
  swift_release(v51);
  swift_release(v52);
  v53._countAndFlagsBits = String.init<A>(describing:)(v56, v47);
  v54 = v53._object;
  String.append(_:)(v53);
  swift_bridgeObjectRelease(v54);
  return v58;
}

uint64_t static Page._contentOffset(forPaginationDirection:size:index:totalPageCount:)(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[3];

  switch(result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return result;
    default:
      v3[1] = v1;
      v3[2] = v2;
      v3[0] = result;
      result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for ContentPageDirection, v3, &type metadata for ContentPageDirection, &type metadata for Int);
      __break(1u);
      break;
  }
  return result;
}

uint64_t sub_116050@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  _BOOL8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t result;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  CGFloat v42;
  CGFloat v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  id v63;
  __int128 v64;
  id v65;
  unint64_t v66;
  CGFloat v67;
  CGFloat v68;
  _OWORD v69[2];
  _OWORD v70[2];
  _QWORD *v71;
  CGRect v72;
  CGRect v73;

  v13 = type metadata accessor for Date(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for UUID(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_109490(a1 + 16, (uint64_t)v69);
  sub_118C44(v69, v70);
  sub_109490((uint64_t)v70, (uint64_t)&v67);
  v20 = sub_1093C0(0, &qword_20F3F8, NSValue_ptr);
  if (swift_dynamicCast(&v65, &v67, (char *)&type metadata for Any + 8, v20, 6))
  {
    *(_QWORD *)&v64 = v6;
    v21 = v65;
    objc_msgSend(v65, "CGRectValue");
    x = v72.origin.x;
    y = v72.origin.y;
    width = v72.size.width;
    height = v72.size.height;
    v73.origin.x = a3;
    v73.origin.y = a4;
    v73.size.width = a5;
    v73.size.height = a6;
    v26 = CGRectIntersectsRect(v72, v73);
    if (v26)
    {
      v27 = UUID.init()(v26);
      v28 = UUID.uuidString.getter(v27);
      v30 = v29;
      v31 = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      LOBYTE(v67) = 1;
      LOBYTE(v65) = 0;
      Date.init()(v31);
      v32 = objc_allocWithZone((Class)type metadata accessor for Annotation(0));
      v33 = (char *)Annotation.init(uuid:type:style:creationDate:)(v28, v30, (char *)&v67, (char *)&v65, (uint64_t)v15);
      v34 = sub_108F90(&qword_20F408);
      v35 = swift_allocObject(v34, 64, 7);
      *(_OWORD *)(v35 + 16) = xmmword_173340;
      *(CGFloat *)(v35 + 32) = x;
      *(CGFloat *)(v35 + 40) = y;
      *(CGFloat *)(v35 + 48) = width;
      *(CGFloat *)(v35 + 56) = height;
      v36 = (uint64_t *)&v33[OBJC_IVAR___BEAnnotation_rects];
      swift_beginAccess(&v33[OBJC_IVAR___BEAnnotation_rects], &v67, 1, 0);
      v37 = *v36;
      *v36 = v35;

      swift_bridgeObjectRelease(v37);
      result = sub_10D65C(v70);
    }
    else
    {
      v63 = v21;
      v71 = a2;
      v62 = sub_108F90(&qword_20F0B0);
      v49 = swift_allocObject(v62, 112, 7);
      *(_OWORD *)(v49 + 16) = xmmword_173EA0;
      v65 = 0;
      v66 = 0xE000000000000000;
      v67 = x;
      v68 = y;
      *(CGFloat *)v69 = width;
      *((CGFloat *)v69 + 1) = height;
      type metadata accessor for CGRect(0);
      v51 = v50;
      _print_unlocked<A, B>(_:_:)(&v67, &v65, v50, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v52 = v65;
      v53 = v66;
      *(_QWORD *)(v49 + 56) = &type metadata for String;
      v54 = sub_118C54();
      *(_QWORD *)(v49 + 64) = v54;
      *(_QWORD *)(v49 + 32) = v52;
      *(_QWORD *)(v49 + 40) = v53;
      v65 = 0;
      v66 = 0xE000000000000000;
      v67 = a3;
      v68 = a4;
      *(CGFloat *)v69 = a5;
      *((CGFloat *)v69 + 1) = a6;
      v55 = _print_unlocked<A, B>(_:_:)(&v67, &v65, v51, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v56 = v65;
      v57 = v66;
      *(_QWORD *)(v49 + 96) = &type metadata for String;
      *(_QWORD *)(v49 + 104) = v54;
      *(_QWORD *)(v49 + 72) = v56;
      *(_QWORD *)(v49 + 80) = v57;
      v58 = static os_log_type_t.debug.getter(v55);
      if (qword_20EA70 != -1)
        swift_once(&qword_20EA70, sub_10C5FC);
      v59 = (void *)qword_20F0A8;
      v60 = swift_allocObject(v62, 72, 7);
      *(_OWORD *)(v60 + 16) = xmmword_173340;
      *(_QWORD *)(v60 + 56) = sub_108F90(&qword_20F0B8);
      *(_QWORD *)(v60 + 64) = sub_10C760();
      *(_QWORD *)(v60 + 32) = v49;
      v61 = v59;
      swift_bridgeObjectRetain(v49);
      os_log(_:dso:log:_:_:)(v58, &dword_0, v61, "AnnotationFrame: %@ does not intersect our page frame %@", 56, 2, v60);
      swift_bridgeObjectRelease(v49);

      swift_bridgeObjectRelease(v60);
      result = sub_10D65C(v70);
      v33 = 0;
      a2 = v71;
    }
  }
  else
  {
    v39 = a2;
    v40 = sub_108F90(&qword_20F0B0);
    v41 = swift_allocObject(v40, 72, 7);
    v64 = xmmword_173340;
    *(_OWORD *)(v41 + 16) = xmmword_173340;
    v67 = 0.0;
    v68 = -2.68156159e154;
    _print_unlocked<A, B>(_:_:)(v70, &v67, (char *)&type metadata for Any + 8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v42 = v67;
    v43 = v68;
    *(_QWORD *)(v41 + 56) = &type metadata for String;
    v44 = sub_118C54();
    *(_QWORD *)(v41 + 64) = v44;
    *(CGFloat *)(v41 + 32) = v42;
    *(CGFloat *)(v41 + 40) = v43;
    v45 = static os_log_type_t.error.getter(v44);
    if (qword_20EA70 != -1)
      swift_once(&qword_20EA70, sub_10C5FC);
    v46 = (void *)qword_20F0A8;
    v47 = swift_allocObject(v40, 72, 7);
    *(_OWORD *)(v47 + 16) = v64;
    *(_QWORD *)(v47 + 56) = sub_108F90(&qword_20F0B8);
    *(_QWORD *)(v47 + 64) = sub_10C760();
    *(_QWORD *)(v47 + 32) = v41;
    v48 = v46;
    swift_bridgeObjectRetain(v41);
    os_log(_:dso:log:_:_:)(v45, &dword_0, v48, "Failed to get value as NSValue %@", 33, 2, v47);
    swift_bridgeObjectRelease(v41);

    swift_bridgeObjectRelease(v47);
    result = sub_10D65C(v70);
    v33 = 0;
    a2 = v39;
  }
  *a2 = v33;
  return result;
}

id sub_1165D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t countAndFlagsBits;
  unint64_t v13;
  char v14;
  void *object;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  id v29;
  id result;
  uint64_t v31;
  uint64_t v32;
  Swift::String v33;
  void *v34;
  Swift::String v35;
  Swift::String v36;
  void *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  Swift::String v48;
  __int128 v49;
  Swift::String v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v4 = type metadata accessor for Date(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_109490(a1, (uint64_t)&v51);
  v11 = sub_108F90(&qword_20F3E8);
  if ((swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, v11, 6) & 1) == 0)
    goto LABEL_15;
  countAndFlagsBits = v50._countAndFlagsBits;
  if (!*(_QWORD *)(v50._countAndFlagsBits + 16))
    goto LABEL_13;
  v13 = sub_117308(0x666572486C6C7566, 0xE800000000000000);
  if ((v14 & 1) == 0)
    goto LABEL_13;
  sub_109490(*(_QWORD *)(countAndFlagsBits + 56) + 32 * v13, (uint64_t)&v51);
  if ((swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    goto LABEL_13;
  object = v50._object;
  if (!*(_QWORD *)(countAndFlagsBits + 16)
    || (v53 = v50._countAndFlagsBits,
        *(_QWORD *)&v49 = v50._object,
        v16 = sub_117308(1701667182, 0xE400000000000000),
        object = (void *)v49,
        (v17 & 1) == 0))
  {
    v20 = object;
LABEL_12:
    swift_bridgeObjectRelease(v20);
LABEL_13:
    v21 = countAndFlagsBits;
    goto LABEL_14;
  }
  sub_109490(*(_QWORD *)(countAndFlagsBits + 56) + 32 * v16, (uint64_t)&v51);
  if ((swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
  {
    v20 = (void *)v49;
    goto LABEL_12;
  }
  v48 = v50;
  if (*(_QWORD *)(countAndFlagsBits + 16)
    && (v18 = sub_117308(0x746E656D75636F64, 0xEE0074657366664FLL), (v19 & 1) != 0))
  {
    sub_109490(*(_QWORD *)(countAndFlagsBits + 56) + 32 * v18, (uint64_t)&v51);
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  swift_bridgeObjectRelease(countAndFlagsBits);
  if (!*((_QWORD *)&v52 + 1))
  {
    swift_bridgeObjectRelease(v48._object);
    swift_bridgeObjectRelease(v49);
    sub_10988C((uint64_t)&v51, &qword_20EDB0);
    goto LABEL_15;
  }
  if ((swift_dynamicCast(&v50, &v51, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0)
  {
    v47 = v50._countAndFlagsBits;
    v31 = sub_108F90(&qword_20F418);
    v32 = swift_allocObject(v31, 64, 7);
    *(_OWORD *)(v32 + 16) = xmmword_173340;
    *(_QWORD *)&v51 = v53;
    *((_QWORD *)&v51 + 1) = v49;
    v33._countAndFlagsBits = 32;
    v33._object = (void *)0xE100000000000000;
    String.append(_:)(v33);
    v34 = v48._object;
    String.append(_:)(v48);
    swift_bridgeObjectRelease(v34);
    v35._countAndFlagsBits = 32;
    v35._object = (void *)0xE100000000000000;
    String.append(_:)(v35);
    v50._countAndFlagsBits = v47;
    v36._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v37 = v36._object;
    String.append(_:)(v36);
    swift_bridgeObjectRelease(v37);
    v38 = v51;
    *(_QWORD *)(v32 + 56) = &type metadata for String;
    *(_OWORD *)(v32 + 32) = v38;
    print(_:separator:terminator:)(v32, 32, 0xE100000000000000, 10, 0xE100000000000000);
    v39 = swift_bridgeObjectRelease(v32);
    v40 = UUID.init()(v39);
    v41 = UUID.uuidString.getter(v40);
    v43 = v42;
    v44 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    LOBYTE(v51) = 1;
    LOBYTE(v50._countAndFlagsBits) = 0;
    Date.init()(v44);
    v45 = objc_allocWithZone((Class)type metadata accessor for Annotation(0));
    result = Annotation.init(uuid:type:style:creationDate:)(v41, v43, (char *)&v51, (char *)&v50, (uint64_t)v6);
    goto LABEL_18;
  }
  swift_bridgeObjectRelease(v48._object);
  v21 = v49;
LABEL_14:
  swift_bridgeObjectRelease(v21);
LABEL_15:
  v22 = sub_108F90(&qword_20F0B0);
  v23 = swift_allocObject(v22, 72, 7);
  v49 = xmmword_173340;
  *(_OWORD *)(v23 + 16) = xmmword_173340;
  sub_109490(a1, (uint64_t)&v51);
  v24 = sub_108F90(&qword_20F410);
  v25 = swift_dynamicCast(v23 + 32, &v51, (char *)&type metadata for Any + 8, v24, 7);
  v26 = static os_log_type_t.error.getter(v25);
  if (qword_20EA70 != -1)
    swift_once(&qword_20EA70, sub_10C5FC);
  v27 = (void *)qword_20F0A8;
  v28 = swift_allocObject(v22, 72, 7);
  *(_OWORD *)(v28 + 16) = v49;
  *(_QWORD *)(v28 + 56) = sub_108F90(&qword_20F0B8);
  *(_QWORD *)(v28 + 64) = sub_10C760();
  *(_QWORD *)(v28 + 32) = v23;
  v29 = v27;
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRelease(v23);

  swift_bridgeObjectRelease(v28);
  result = 0;
LABEL_18:
  *a2 = result;
  return result;
}

void sub_116AC4(uint64_t a1@<X0>, id a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  char v9;
  _QWORD *v10;
  id v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  Swift::String v33;
  void *object;
  __int128 v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;
  id v43[2];
  __int128 v44;
  __int128 v45;

  sub_109490(a1, (uint64_t)&v44);
  v6 = sub_108F90(&qword_20F3E8);
  if ((swift_dynamicCast(v43, &v44, (char *)&type metadata for Any + 8, v6, 6) & 1) == 0)
    goto LABEL_10;
  v7 = v43[0];
  if (!*((_QWORD *)v43[0] + 2)
    || (v8 = sub_117308(0x44497463656A626FLL, 0xE800000000000000), (v9 & 1) == 0)
    || (sub_109490(v7[7] + 32 * v8, (uint64_t)&v44),
        (swift_dynamicCast(v43, &v44, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0))
  {
    v14 = v7;
LABEL_9:
    swift_bridgeObjectRelease(v14);
LABEL_10:
    v15 = sub_108F90(&qword_20F0B0);
    v16 = swift_allocObject(v15, 72, 7);
    *(_OWORD *)(v16 + 16) = xmmword_173340;
    sub_109490(a1, (uint64_t)&v44);
    v17 = sub_108F90(&qword_20F410);
    v18 = swift_dynamicCast(v16 + 32, &v44, (char *)&type metadata for Any + 8, v17, 7);
    v19 = static os_log_type_t.error.getter(v18);
    if (qword_20EA70 != -1)
      swift_once(&qword_20EA70, sub_10C5FC);
    v20 = (void *)qword_20F0A8;
    v21 = swift_allocObject(v15, 72, 7);
    *(_OWORD *)(v21 + 16) = xmmword_173340;
    *(_QWORD *)(v21 + 56) = sub_108F90(&qword_20F0B8);
    *(_QWORD *)(v21 + 64) = sub_10C760();
    *(_QWORD *)(v21 + 32) = v16;
    v22 = v20;
    swift_bridgeObjectRetain(v16);
    os_log(_:dso:log:_:_:)(v19, &dword_0, v22, "Failed to get ObjectID or Range from data %@", 44, 2, v21);
    swift_bridgeObjectRelease(v16);

    v23 = v21;
    goto LABEL_13;
  }
  v11 = v43[0];
  v10 = v43[1];
  if (v7[2] && (v12 = sub_117308(0x65676E6172, 0xE500000000000000), (v13 & 1) != 0))
  {
    sub_109490(v7[7] + 32 * v12, (uint64_t)&v44);
  }
  else
  {
    v44 = 0u;
    v45 = 0u;
  }
  swift_bridgeObjectRelease(v7);
  if (!*((_QWORD *)&v45 + 1))
  {
    swift_bridgeObjectRelease(v10);
    sub_10988C((uint64_t)&v44, &qword_20EDB0);
    goto LABEL_10;
  }
  v24 = sub_1093C0(0, &qword_20F3F8, NSValue_ptr);
  if ((swift_dynamicCast(v43, &v44, (char *)&type metadata for Any + 8, v24, 6) & 1) == 0)
  {
    v14 = v10;
    goto LABEL_9;
  }
  v25 = v11;
  v26 = v43[0];
  v27 = objc_msgSend(v43[0], "rangeValue");
  if (v27 == a2)
  {
    v29 = v28;
    v30 = sub_108F90(&qword_20F418);
    v31 = swift_allocObject(v30, 64, 7);
    *(_OWORD *)(v31 + 16) = xmmword_173340;
    *(_QWORD *)&v44 = v25;
    *((_QWORD *)&v44 + 1) = v10;
    v32._countAndFlagsBits = 32;
    v32._object = (void *)0xE100000000000000;
    String.append(_:)(v32);
    v33._countAndFlagsBits = _NSRange.description.getter(a2, v29);
    object = v33._object;
    String.append(_:)(v33);
    swift_bridgeObjectRelease(object);
    v35 = v44;
    *(_QWORD *)(v31 + 56) = &type metadata for String;
    *(_OWORD *)(v31 + 32) = v35;
    print(_:separator:terminator:)(v31, 32, 0xE100000000000000, 10, 0xE100000000000000);
    swift_bridgeObjectRelease(v31);

    goto LABEL_14;
  }
  v36 = v27;
  swift_bridgeObjectRelease(v10);
  v37 = sub_108F90(&qword_20F0B0);
  v38 = swift_allocObject(v37, 112, 7);
  *(_OWORD *)(v38 + 16) = xmmword_173EA0;
  *(_QWORD *)(v38 + 56) = &type metadata for Int;
  *(_QWORD *)(v38 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v38 + 32) = a2;
  *(_QWORD *)(v38 + 96) = &type metadata for Int;
  *(_QWORD *)(v38 + 104) = &protocol witness table for Int;
  *(_QWORD *)(v38 + 72) = v36;
  v39 = static os_log_type_t.error.getter(v38);
  if (qword_20EA70 != -1)
    swift_once(&qword_20EA70, sub_10C5FC);
  v40 = (void *)qword_20F0A8;
  v41 = swift_allocObject(v37, 72, 7);
  *(_OWORD *)(v41 + 16) = xmmword_173340;
  *(_QWORD *)(v41 + 56) = sub_108F90(&qword_20F0B8);
  *(_QWORD *)(v41 + 64) = sub_10C760();
  *(_QWORD *)(v41 + 32) = v38;
  v42 = v40;
  swift_bridgeObjectRetain(v38);
  os_log(_:dso:log:_:_:)(v39, &dword_0, v42, "User Annotation is not on our page (%@). AnnotationLocation: %@", 63, 2, v41);
  swift_bridgeObjectRelease(v38);

  v23 = v41;
LABEL_13:
  swift_bridgeObjectRelease(v23);
LABEL_14:
  *a3 = 0;
}

void sub_116F50(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  void *object;
  __int128 v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v34;

  sub_109490(a1, (uint64_t)&v33);
  v4 = sub_108F90(&qword_20F3E8);
  if ((swift_dynamicCast(&v32, &v33, (char *)&type metadata for Any + 8, v4, 6) & 1) != 0)
  {
    v5 = v32;
    if (v32[2]
      && (v6 = sub_117308(0x7366664F65676170, 0xEA00000000007465), (v7 & 1) != 0)
      && (sub_109490(v5[7] + 32 * v6, (uint64_t)&v33),
          (swift_dynamicCast(&v32, &v33, (char *)&type metadata for Any + 8, &type metadata for Int, 6) & 1) != 0))
    {
      v8 = v32;
      if (v5[2] && (v9 = sub_117308(0x726F747369484B42, 0xEF797469746E4579), (v10 & 1) != 0))
      {
        sub_109490(v5[7] + 32 * v9, (uint64_t)&v33);
      }
      else
      {
        v33 = 0u;
        v34 = 0u;
      }
      swift_bridgeObjectRelease(v5);
      if (*((_QWORD *)&v34 + 1))
      {
        v19 = sub_1093C0(0, &qword_20F420, NSObject_ptr);
        if ((swift_dynamicCast(&v32, &v33, (char *)&type metadata for Any + 8, v19, 6) & 1) != 0)
        {
          v20 = v32;
          v21 = sub_108F90(&qword_20F418);
          v22 = swift_allocObject(v21, 64, 7);
          *(_OWORD *)(v22 + 16) = xmmword_173340;
          v23 = objc_msgSend(v20, "description");
          v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);
          v27 = v26;

          *(_QWORD *)&v33 = v25;
          *((_QWORD *)&v33 + 1) = v27;
          v28._countAndFlagsBits = 32;
          v28._object = (void *)0xE100000000000000;
          String.append(_:)(v28);
          v32 = v8;
          v29._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
          object = v29._object;
          String.append(_:)(v29);
          swift_bridgeObjectRelease(object);
          v31 = v33;
          *(_QWORD *)(v22 + 56) = &type metadata for String;
          *(_OWORD *)(v22 + 32) = v31;
          print(_:separator:terminator:)(v22, 32, 0xE100000000000000, 10, 0xE100000000000000);
          swift_bridgeObjectRelease(v22);

          goto LABEL_12;
        }
      }
      else
      {
        sub_10988C((uint64_t)&v33, &qword_20EDB0);
      }
    }
    else
    {
      swift_bridgeObjectRelease(v5);
    }
  }
  v11 = sub_108F90(&qword_20F0B0);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_173340;
  sub_109490(a1, (uint64_t)&v33);
  v13 = sub_108F90(&qword_20F410);
  v14 = swift_dynamicCast(v12 + 32, &v33, (char *)&type metadata for Any + 8, v13, 7);
  v15 = static os_log_type_t.error.getter(v14);
  if (qword_20EA70 != -1)
    swift_once(&qword_20EA70, sub_10C5FC);
  v16 = (void *)qword_20F0A8;
  v17 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v17 + 16) = xmmword_173340;
  *(_QWORD *)(v17 + 56) = sub_108F90(&qword_20F0B8);
  *(_QWORD *)(v17 + 64) = sub_10C760();
  *(_QWORD *)(v17 + 32) = v12;
  v18 = v16;
  swift_bridgeObjectRetain(v12);
  os_log(_:dso:log:_:_:)(v15, &dword_0, v18, "Failed to get pageOffset & HistoryEntity from %@", 48, 2, v17);
  swift_bridgeObjectRelease(v12);

  swift_bridgeObjectRelease(v17);
LABEL_12:
  *a2 = 0;
}

unint64_t sub_1172D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_11736C(a1, v4);
}

unint64_t sub_117308(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_117430(a1, a2, v5);
}

unint64_t sub_11736C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_118C98(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_10945C((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_117430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_117510(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_117598(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = (uint64_t *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v6 = *v5;
    v7 = v5[1];
    sub_109490(*(_QWORD *)(a5 + 56) + 32 * a2, result);
    swift_bridgeObjectRetain(v7);
    return v6;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t _s13AEBookPlugins4PageC10_pageCount4from0D4Size19paginationDirectionSiSo6CGSizeV_AiA07ContentcI0OtFZ_0(unint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t result;
  _QWORD v9[3];

  if (a1 > 4)
    goto LABEL_11;
  if (a1 == 2)
  {
    a4 = a5;
    a2 = a3;
  }
  v7 = ceil(a2 / a4);
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) != 0)
  {
    if (v7 > -9.22337204e18)
    {
      if (v7 < 9.22337204e18)
        return (uint64_t)v7;
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  v9[1] = v5;
  v9[2] = v6;
  v9[0] = a1;
  result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for ContentPageDirection, v9, &type metadata for ContentPageDirection, &type metadata for Int);
  __break(1u);
  return result;
}

uint64_t sub_1176B8(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char i;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t j;
  uint64_t v30;
  void *v31;
  id v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t result;
  _OWORD v36[3];
  __int128 v37;
  _OWORD v38[2];
  _QWORD v39[2];
  _BYTE v40[32];
  uint64_t v41;
  _QWORD *v42;

  sub_109490(a1, (uint64_t)v39);
  v9 = sub_108F90(&qword_20F3E8);
  if (!swift_dynamicCast(&v37, v39, (char *)&type metadata for Any + 8, v9, 6))
  {
LABEL_24:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000050, 0x8000000000165BC0, "AEBookPlugins/Page.swift", 24, 2, 157, 0);
    __break(1u);
    return result;
  }
  v10 = v37;
  v11 = *(_QWORD *)(v37 + 16);
  v12 = _swiftEmptyArrayStorage;
  if (v11)
  {
    v42 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v11);
    v13 = sub_117510(v10);
    v15 = v14;
    for (i = v16 & 1; ; i = 0)
    {
      --v11;
      v18 = sub_117598((uint64_t)v40, v13, v15, i & 1, v10);
      v20 = v19;
      v39[0] = v18;
      v39[1] = v19;
      *(_QWORD *)&v37 = v18;
      *((_QWORD *)&v37 + 1) = v19;
      sub_109490((uint64_t)v40, (uint64_t)v38);
      v36[0] = v37;
      v36[1] = v38[0];
      v36[2] = v38[1];
      swift_bridgeObjectRetain(v20);
      sub_10988C((uint64_t)v39, &qword_20F3F0);
      sub_116050((uint64_t)v36, &v41, a2, a3, a4, a5);
      v21 = sub_10988C((uint64_t)v36, &qword_20F3F0);
      v22 = v41;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
      v23 = v42[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v23);
      v24 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v23, v22);
      specialized ContiguousArray._endMutation()(v24);
      if (v13 < 0)
        break;
      v25 = -1 << *(_BYTE *)(v10 + 32);
      if (v13 >= -v25)
        break;
      if (((*(_QWORD *)(v10 + 64 + (((unint64_t)v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(v10 + 36) != (_DWORD)v15)
        goto LABEL_23;
      v26 = _HashTable.occupiedBucket(after:)(v13, v10 + 64, ~v25);
      if (!v11)
      {
        v27 = v42;
        swift_bridgeObjectRelease(v10);
        v12 = _swiftEmptyArrayStorage;
        goto LABEL_12;
      }
      v13 = v26;
      v15 = *(unsigned int *)(v10 + 36);
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    sub_118C38(v13, v15, (char)&v42);
    swift_release(v42);
    __break(1u);
    goto LABEL_24;
  }
  swift_bridgeObjectRelease(v37);
  v27 = _swiftEmptyArrayStorage;
LABEL_12:
  v39[0] = _swiftEmptyArrayStorage;
  v28 = v27[2];
  if (v28)
  {
    swift_bridgeObjectRetain(v27);
    for (j = 0; j != v28; ++j)
    {
      v31 = (void *)v27[j + 4];
      if (v31)
      {
        v32 = v31;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v34 = *(_QWORD *)((char *)&dword_10 + (v39[0] & 0xFFFFFFFFFFFFFF8));
        v33 = *(_QWORD *)((char *)&dword_18 + (v39[0] & 0xFFFFFFFFFFFFFF8));
        if (v34 >= v33 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
        v30 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v32);
        specialized Array._endMutation()(v30);
      }
    }
    swift_bridgeObjectRelease(v27);
    v12 = (_QWORD *)v39[0];
  }
  swift_bridgeObjectRelease(v27);
  return (uint64_t)v12;
}

_QWORD *sub_117A04(uint64_t a1, void *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  void *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  unint64_t v21;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    v21 = (unint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v6 = a1 + 32;
    do
    {
      sub_116AC4(v6, a2, &v20);
      v7 = v20;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
      v9 = *(_QWORD *)(v21 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
      specialized ContiguousArray._endMutation()(v10);
      v6 += 32;
      --v2;
    }
    while (v2);
    v11 = (_QWORD *)v21;
  }
  else
  {
    v11 = _swiftEmptyArrayStorage;
  }
  v21 = (unint64_t)_swiftEmptyArrayStorage;
  v12 = v11[2];
  if (v12)
  {
    swift_bridgeObjectRetain(v11);
    for (i = 0; i != v12; ++i)
    {
      v15 = (void *)v11[i + 4];
      if (v15)
      {
        v16 = v15;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v18 = *(_QWORD *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8));
        v17 = *(_QWORD *)((char *)&dword_18 + (v21 & 0xFFFFFFFFFFFFFF8));
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
        specialized Array._endMutation()(v14);
      }
    }
    swift_bridgeObjectRelease(v11);
    v3 = (_QWORD *)v21;
  }
  swift_bridgeObjectRelease(v11);
  return v3;
}

void *sub_117B80(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v2;
  void *v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t i;
  uint64_t v14;
  void *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  unint64_t v21;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = &_swiftEmptyArrayStorage;
  if (v2)
  {
    v21 = (unint64_t)&_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v2);
    v6 = a1 + 32;
    do
    {
      v7 = a2(&v20, v6);
      v8 = v20;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v7);
      v9 = *(_QWORD *)(v21 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v9);
      v10 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v8);
      specialized ContiguousArray._endMutation()(v10);
      v6 += 32;
      --v2;
    }
    while (v2);
    v11 = (_QWORD *)v21;
  }
  else
  {
    v11 = &_swiftEmptyArrayStorage;
  }
  v21 = (unint64_t)&_swiftEmptyArrayStorage;
  v12 = v11[2];
  if (v12)
  {
    swift_bridgeObjectRetain(v11);
    for (i = 0; i != v12; ++i)
    {
      v15 = (void *)v11[i + 4];
      if (v15)
      {
        v16 = v15;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v18 = *(_QWORD *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8));
        v17 = *(_QWORD *)((char *)&dword_18 + (v21 & 0xFFFFFFFFFFFFFF8));
        if (v18 >= v17 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
        v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
        specialized Array._endMutation()(v14);
      }
    }
    swift_bridgeObjectRelease(v11);
    v3 = (void *)v21;
  }
  swift_bridgeObjectRelease(v11);
  return v3;
}

_QWORD *_s13AEBookPlugins4PageC13generatePages4fromSayACGAA30DocumentPaginationDataProvider_p_tFZ_0(void *a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  char **v6;
  id v7;
  __n128 v8;
  __n128 v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t KeyPath;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t i;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void *v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  uint64_t v85;
  void *v86;
  char *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  double v94;
  double v95;
  uint64_t v96;
  char *v97;
  id v98;
  _QWORD v99[3];
  uint64_t v100;
  char v101[24];
  char v102[24];
  char v103[24];
  unint64_t v104;

  v104 = (unint64_t)_swiftEmptyArrayStorage;
  objc_msgSend(a1, "pageSize");
  v3 = v2;
  v5 = v4;
  v98 = a1;
  if ((uint64_t)objc_msgSend(a1, "pageCount") <= 1)
  {
    v6 = &selRef_buildHoverControlRegionWithBuilder_;
    v7 = objc_msgSend(v98, "contentSize");
    v10 = v8.n128_f64[0];
    v11 = v9.n128_f64[0];
    if ((v8.n128_f64[0] != 0.0 || v9.n128_f64[0] != 0.0)
      && (CGSize.isNan.getter(v7, v8, v9) & 1) == 0
      && (CGSize.isInfinite.getter(v10, v11) & 1) == 0)
    {
      goto LABEL_88;
    }
  }
  v12 = (uint64_t)objc_msgSend(v98, "pageCount");
  v13 = v12;
  if (v12 < 0)
  {
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    v99[0] = v12;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)(&type metadata for ContentPageDirection, v99, &type metadata for ContentPageDirection, &type metadata for Int);
    __break(1u);
    JUMPOUT(0x1186ECLL);
  }
LABEL_7:
  v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    v15 = 0;
    v16 = v3 * (double)v13;
    v96 = v13;
    while (1)
    {
      if (v15 == (char *)v13)
        goto LABEL_91;
      v12 = (uint64_t)objc_msgSend(v98, "paginationDirection");
      v17 = (double)(uint64_t)v15;
      switch(v12)
      {
        case 0:
        case 3:
          v18 = v3 * v17;
          goto LABEL_13;
        case 1:
        case 4:
          v18 = v16 - v3 * v17;
LABEL_13:
          v19 = 0.0;
          goto LABEL_15;
        case 2:
          v19 = v5 * v17;
          v18 = 0.0;
LABEL_15:
          v20 = objc_allocWithZone((Class)type metadata accessor for Page(0));
          v21 = (char *)Page.init(contentOffset:contentSize:)(v18, v19, v3, v5);
          v22 = objc_msgSend(v98, "navigationAnchors");
          if (v22)
          {
            v23 = v22;
            type metadata accessor for CGRect(0);
            v25 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v23, &type metadata for String, v24, &protocol witness table for String);

            v100 = sub_108F90(&qword_20F3E0);
            v99[0] = v25;
            v26 = sub_1176B8((uint64_t)v99, *(CGFloat *)&v21[OBJC_IVAR___BEPage_contentOffset], *(CGFloat *)&v21[OBJC_IVAR___BEPage_contentOffset + 8], *(CGFloat *)&v21[OBJC_IVAR___BEPage_contentSize], *(CGFloat *)&v21[OBJC_IVAR___BEPage_contentSize + 8]);
            sub_10D65C(v99);
            if ((unint64_t)v26 >> 62)
            {
              if (v26 < 0)
                v56 = v26;
              else
                v56 = v26 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v26);
              v57 = sub_108F90(&qword_20F388);
              v28 = _bridgeCocoaArray<A>(_:)(v56, v57);
              swift_bridgeObjectRelease(v26);
            }
            else
            {
              v27 = swift_bridgeObjectRetain(v26);
              dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v27);
              v28 = v26;
            }
            swift_bridgeObjectRelease(v26);
            KeyPath = swift_getKeyPath(&unk_173D00);
            v30 = swift_getKeyPath(&unk_173D28);
            v99[0] = v28;
            static Published.subscript.setter(v99, v21, KeyPath, v30);
          }
          v31 = objc_msgSend(v98, "mediaElements");
          if (v31)
          {
            v32 = v31;
            type metadata accessor for CGRect(0);
            v34 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v32, &type metadata for String, v33, &protocol witness table for String);

            v100 = sub_108F90(&qword_20F3E0);
            v99[0] = v34;
            v35 = sub_1176B8((uint64_t)v99, *(CGFloat *)&v21[OBJC_IVAR___BEPage_contentOffset], *(CGFloat *)&v21[OBJC_IVAR___BEPage_contentOffset + 8], *(CGFloat *)&v21[OBJC_IVAR___BEPage_contentSize], *(CGFloat *)&v21[OBJC_IVAR___BEPage_contentSize + 8]);
            sub_10D65C(v99);
            if ((unint64_t)v35 >> 62)
            {
              if (v35 < 0)
                v58 = v35;
              else
                v58 = v35 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v35);
              v59 = sub_108F90(&qword_20F388);
              v37 = _bridgeCocoaArray<A>(_:)(v58, v59);
              swift_bridgeObjectRelease(v35);
            }
            else
            {
              v36 = swift_bridgeObjectRetain(v35);
              dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v36);
              v37 = v35;
            }
            swift_bridgeObjectRelease(v35);
            v38 = swift_getKeyPath(&unk_173D58);
            v39 = swift_getKeyPath(&unk_173D80);
            v99[0] = v37;
            static Published.subscript.setter(v99, v21, v38, v39);
          }
          v40 = objc_msgSend(v98, "bookmarks");
          if (!v40)
            goto LABEL_71;
          v41 = v40;
          v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, (char *)&type metadata for Any + 8);

          v43 = (uint64_t)sub_117A04(v42, v15);
          swift_bridgeObjectRelease(v42);
          v6 = (char **)swift_getKeyPath(&unk_173BF8);
          v44 = swift_getKeyPath(&unk_173C20);
          v99[0] = v43;
          v45 = v21;
          swift_bridgeObjectRetain(v43);
          static Published.subscript.setter(v99, v45, v6, v44);
          v99[0] = _swiftEmptyArrayStorage;
          if ((unint64_t)v43 >> 62)
          {
            if (v43 < 0)
              v6 = (char **)v43;
            else
              v6 = (char **)(v43 & 0xFFFFFFFFFFFFFF8);
            swift_bridgeObjectRetain(v43);
            swift_unknownObjectRetain(v98);
            v46 = _CocoaArrayWrapper.endIndex.getter(v6);
            if (v46)
            {
LABEL_26:
              v97 = v45;
              v47 = 0;
              while (1)
              {
                if ((v43 & 0xC000000000000001) != 0)
                {
                  v48 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v43);
                }
                else
                {
                  if (v47 >= *(_QWORD *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFFF8)))
                    goto LABEL_87;
                  v48 = (char *)*(id *)(v43 + 8 * v47 + 32);
                }
                v49 = v48;
                v50 = v47 + 1;
                if (__OFADD__(v47, 1))
                  break;
                v6 = (char **)&v48[OBJC_IVAR___BEAnnotation_type];
                swift_beginAccess(&v48[OBJC_IVAR___BEAnnotation_type], v103, 0, 0);
                if (*(_BYTE *)v6 != 1)
                  goto LABEL_27;
                v12 = (uint64_t)objc_msgSend(v98, "pageOffset");
                v51 = &v15[v12];
                if (__OFADD__(v12, v15))
                  goto LABEL_90;
                v6 = (char **)&v49[OBJC_IVAR___BEAnnotation_pageNumber];
                v52 = swift_beginAccess(&v49[OBJC_IVAR___BEAnnotation_pageNumber], v102, 0, 0);
                if (((_BYTE)v6[1] & 1) == 0 && v51 == *v6)
                {
                  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v52);
                  v53 = *(_QWORD *)(v99[0] + 16);
                  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v53);
                  v54 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v49);
                  v6 = (char **)v99;
                  specialized ContiguousArray._endMutation()(v54);
                }
                else
                {
LABEL_27:

                }
                ++v47;
                if (v50 == v46)
                {
                  v55 = (_QWORD *)v99[0];
                  v45 = v97;
                  goto LABEL_53;
                }
              }
              __break(1u);
LABEL_87:
              __break(1u);
LABEL_88:
              objc_msgSend(v98, v6[287]);
              v12 = _s13AEBookPlugins4PageC10_pageCount4from0D4Size19paginationDirectionSiSo6CGSizeV_AiA07ContentcI0OtFZ_0((unint64_t)objc_msgSend(v98, "paginationDirection"), v94, v95, v3, v5);
              v13 = v12;
              if (v12 < 0)
                goto LABEL_89;
              goto LABEL_7;
            }
          }
          else
          {
            v46 = *(_QWORD *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFF8));
            swift_bridgeObjectRetain(v43);
            swift_unknownObjectRetain(v98);
            if (v46)
              goto LABEL_26;
          }
          v55 = _swiftEmptyArrayStorage;
LABEL_53:
          swift_bridgeObjectRelease(v43);
          swift_unknownObjectRelease(v98);
          v60 = swift_getKeyPath(&unk_173C50);
          v61 = swift_getKeyPath(&unk_173C78);
          v99[0] = v55;
          v62 = v45;
          v12 = static Published.subscript.setter(v99, v62, v60, v61);
          v99[0] = _swiftEmptyArrayStorage;
          if ((unint64_t)v43 >> 62)
          {
            if (v43 < 0)
              v72 = v43;
            else
              v72 = v43 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v43);
            v63 = _CocoaArrayWrapper.endIndex.getter(v72);
            v12 = swift_bridgeObjectRelease(v43);
            if (v63)
            {
LABEL_55:
              if (v63 < 1)
                goto LABEL_92;
              for (i = 0; i != v63; ++i)
              {
                if ((v43 & 0xC000000000000001) != 0)
                  v67 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v43);
                else
                  v67 = (char *)*(id *)(v43 + 8 * i + 32);
                v68 = v67;
                v69 = &v67[OBJC_IVAR___BEAnnotation_type];
                v70 = swift_beginAccess(&v67[OBJC_IVAR___BEAnnotation_type], v101, 0, 0);
                if (*v69 == 2)
                {
                  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v70);
                  v65 = *(_QWORD *)(v99[0] + 16);
                  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v65);
                  v66 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v65, v68);
                  specialized ContiguousArray._endMutation()(v66);
                }
                else
                {

                }
              }
              swift_bridgeObjectRelease(v43);
              v71 = (_QWORD *)v99[0];
              goto LABEL_70;
            }
          }
          else
          {
            v63 = *(_QWORD *)((char *)&dword_10 + (v43 & 0xFFFFFFFFFFFFF8));
            if (v63)
              goto LABEL_55;
          }
          swift_bridgeObjectRelease(v43);
          v71 = _swiftEmptyArrayStorage;
LABEL_70:
          v73 = swift_getKeyPath(&unk_173CA8);
          v74 = swift_getKeyPath(&unk_173CD0);
          v99[0] = v71;
          static Published.subscript.setter(v99, v62, v73, v74);
          v13 = v96;
LABEL_71:
          v75 = objc_msgSend(v98, "physicalPageAnchors");
          if (v75)
          {
            v76 = v75;
            v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v75, (char *)&type metadata for Any + 8);

            v78 = (uint64_t)sub_117B80(v77, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_1165D8);
            swift_bridgeObjectRelease(v77);
            if ((unint64_t)v78 >> 62)
            {
              if (v78 < 0)
                v91 = v78;
              else
                v91 = v78 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v78);
              v92 = sub_108F90(&qword_20F388);
              v80 = _bridgeCocoaArray<A>(_:)(v91, v92);
              swift_bridgeObjectRelease_n(v78, 2);
            }
            else
            {
              v79 = swift_bridgeObjectRetain(v78);
              dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v79);
              swift_bridgeObjectRelease(v78);
              v80 = v78;
            }
            v81 = swift_getKeyPath(&unk_173DB8);
            v82 = swift_getKeyPath(&unk_173DE0);
            v99[0] = v80;
            static Published.subscript.setter(v99, v21, v81, v82);
          }
          v83 = objc_msgSend(v98, "historyEntries");
          if (v83)
          {
            v84 = v83;
            v85 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v83, (char *)&type metadata for Any + 8);

            v86 = sub_117B80(v85, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t))sub_116F50);
            swift_bridgeObjectRelease(v85);
            swift_bridgeObjectRelease(v86);
          }
          v87 = v21;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          v89 = *(_QWORD *)((char *)&dword_10 + (v104 & 0xFFFFFFFFFFFFFF8));
          v88 = *(_QWORD *)((char *)&dword_18 + (v104 & 0xFFFFFFFFFFFFFF8));
          if (v89 >= v88 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v88 > 1, v89 + 1, 1);
          ++v15;
          v90 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v89, v87);
          specialized Array._endMutation()(v90);

          if (v15 == (char *)v13)
            return (_QWORD *)v104;
          break;
        default:
          goto LABEL_93;
      }
    }
  }
  return v14;
}

uint64_t sub_118700(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEPage__annotations, &qword_20F310);
}

uint64_t sub_118724(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F318, &OBJC_IVAR___BEPage__annotations, &qword_20F310);
}

uint64_t sub_118750(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEPage__bookmarks, &qword_20F310);
}

uint64_t sub_118774(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F318, &OBJC_IVAR___BEPage__bookmarks, &qword_20F310);
}

uint64_t sub_1187A0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEPage__highlights, &qword_20F310);
}

uint64_t sub_1187C4(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F318, &OBJC_IVAR___BEPage__highlights, &qword_20F310);
}

uint64_t sub_1187F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEPage__anchors, &qword_20F338);
}

uint64_t sub_118814(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F340, &OBJC_IVAR___BEPage__anchors, &qword_20F338);
}

uint64_t sub_118840(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEPage__mediaElements, &qword_20F338);
}

uint64_t sub_118864(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F340, &OBJC_IVAR___BEPage__mediaElements, &qword_20F338);
}

uint64_t sub_118890(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEPage__physicalPageMarkers, &qword_20F358);
}

uint64_t sub_1188B4(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F360, &OBJC_IVAR___BEPage__physicalPageMarkers, &qword_20F358);
}

uint64_t sub_1188E0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEPage__physicalChapterMarkers, &qword_20F358);
}

uint64_t sub_118904(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F360, &OBJC_IVAR___BEPage__physicalChapterMarkers, &qword_20F358);
}

uint64_t sub_118930()
{
  return type metadata accessor for Page(0);
}

void sub_118938(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[2];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8[0] = &unk_173E88;
  v8[1] = &unk_173E88;
  sub_118BEC(319, &qword_20F3C8, &qword_20F370);
  if (v3 <= 0x3F)
  {
    v9 = *(_QWORD *)(v2 - 8) + 64;
    v10 = v9;
    v11 = v9;
    sub_118BEC(319, &qword_20F3D0, &qword_20F378);
    if (v5 <= 0x3F)
    {
      v12 = *(_QWORD *)(v4 - 8) + 64;
      v13 = v12;
      sub_118BEC(319, &qword_20F3D8, &qword_20F380);
      if (v7 <= 0x3F)
      {
        v14 = *(_QWORD *)(v6 - 8) + 64;
        v15 = v14;
        swift_updateClassMetadata2(a1, 256, 9, v8, a1 + 80);
      }
    }
  }
}

uint64_t method lookup function for Page(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Page);
}

uint64_t dispatch thunk of Document.file_size.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Document.protocolCacheItem.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.annotations.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of Page.$annotations.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Page.$bookmarks.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_B8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.highlights.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of Page.anchors.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_108.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.mediaElements.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_158.segname[(swift_isaMask & *v0) + 8])();
}

uint64_t dispatch thunk of Page.$mediaElements.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.offset + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.physicalPageMarkers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_158.reserved2 + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.$physicalPageMarkers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Page.$physicalPageMarkers.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1A8.segname[(swift_isaMask & *v0) + 16])();
}

uint64_t dispatch thunk of Page.physicalChapterMarkers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.size + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.physicalChapterMarkers.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.$physicalChapterMarkers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_1A8.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Page.$physicalChapterMarkers.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_1F8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Page.__allocating_init(contentOffset:contentSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 512))();
}

void sub_118BEC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = sub_10937C(a3);
    v6 = type metadata accessor for Published(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_118C38(uint64_t result, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease(result);
  return result;
}

_OWORD *sub_118C44(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_118C54()
{
  unint64_t result;

  result = qword_20F400;
  if (!qword_20F400)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_20F400);
  }
  return result;
}

uint64_t sub_118C98(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

id AEBookInfo.epub.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char **v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  objc_class *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  char *v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  objc_super v90;
  _QWORD *v91;
  _QWORD *v92;

  v1 = sub_108F90(&qword_20F428);
  v85 = *(_QWORD *)(v1 - 8);
  v86 = v1;
  __chkstk_darwin(v1);
  v84 = (char *)&v69 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_108F90(&qword_20F180);
  v82 = *(_QWORD *)(v3 - 8);
  v83 = v3;
  __chkstk_darwin(v3);
  v81 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v0, "assetID");
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = result;
  v8 = static String._unconditionallyBridgeFromObjectiveC(_:)(result, v6);
  v77 = v9;

  result = objc_msgSend(v0, "bookTitle");
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v11 = result;
  v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(result, v10);
  v75 = v13;
  v76 = v12;

  result = objc_msgSend(v0, "bookAuthor");
  if (!result)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v15 = result;
  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(result, v14);
  v73 = v17;
  v74 = v16;

  v18 = objc_msgSend(v0, "sampleContent");
  if (v18)
  {
    v19 = v18;
    v72 = objc_msgSend(v18, "BOOLValue");

  }
  else
  {
    v72 = 0;
  }
  result = objc_msgSend(v0, "bookBundlePath");
  if (!result)
    goto LABEL_39;
  v21 = result;
  v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(result, v20);
  v70 = v22;

  result = objc_msgSend(v0, "linearDocuments");
  if (!result)
  {
LABEL_40:
    __break(1u);
    return result;
  }
  v23 = result;
  v24 = sub_1192B8();
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

  if ((unint64_t)v25 >> 62)
    goto LABEL_27;
  v26 = *(_QWORD *)((char *)&dword_10 + (v25 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    v69 = v8;
    if (!v26)
      break;
    v92 = _swiftEmptyArrayStorage;
    result = (id)specialized ContiguousArray.reserveCapacity(_:)(v26);
    if (v26 < 0)
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    v8 = 0;
    v79 = v25;
    v80 = v25 & 0xC000000000000001;
    v27 = &selRef_layoutScrubberCallout_;
    v78 = v26;
    while (v26 != v8)
    {
      if (v80)
        v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8, v25);
      else
        v28 = *(id *)(v25 + 8 * v8 + 32);
      v29 = v28;
      result = objc_msgSend(v29, "documentOrdinal", v69);
      if (!result)
        goto LABEL_32;
      v30 = result;
      v31 = objc_msgSend(result, "integerValue");

      result = objc_msgSend(v29, "href");
      if (!result)
        goto LABEL_33;
      v33 = result;
      v34 = static String._unconditionallyBridgeFromObjectiveC(_:)(result, v32);
      v89 = v35;

      result = objc_msgSend(v29, v27[96]);
      if (!result)
        goto LABEL_34;
      v37 = result;
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(result, v36);
      v40 = v39;

      result = objc_msgSend(v29, v27[96]);
      if (!result)
        goto LABEL_35;
      v42 = result;
      ++v8;
      v43 = static String._unconditionallyBridgeFromObjectiveC(_:)(result, v41);
      v87 = v44;
      v88 = v43;

      v45 = (objc_class *)type metadata accessor for Document(0);
      v46 = (char *)objc_allocWithZone(v45);
      v47 = &v46[OBJC_IVAR___BEDocument__pageOffset];
      v91 = 0;
      v48 = v46;
      v49 = v81;
      Published.init(initialValue:)(&v91, &type metadata for Int);
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v47, v49, v83);
      v50 = &v48[OBJC_IVAR___BEDocument__pages];
      v91 = _swiftEmptyArrayStorage;
      v51 = sub_108F90(&qword_20F230);
      v52 = v84;
      Published.init(initialValue:)(&v91, v51);
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v50, v52, v86);
      *(_QWORD *)&v48[OBJC_IVAR___BEDocument_paginationData] = 0;
      *(_QWORD *)&v48[OBJC_IVAR___BEDocument_ordinal] = v31;
      v53 = (uint64_t *)&v48[OBJC_IVAR___BEDocument_href];
      v54 = v89;
      *v53 = v34;
      v53[1] = v54;
      v55 = (uint64_t *)&v48[OBJC_IVAR___BEDocument_manifestId];
      *v55 = v38;
      v55[1] = v40;
      v56 = (uint64_t *)&v48[OBJC_IVAR___BEDocument_assetId];
      v57 = v87;
      *v56 = v88;
      v56[1] = v57;
      v58 = &v48[OBJC_IVAR___BEDocument_title];
      *(_QWORD *)v58 = 0;
      *((_QWORD *)v58 + 1) = 0;
      *(_QWORD *)&v48[OBJC_IVAR___BEDocument_file_size] = 0;

      v90.receiver = v48;
      v90.super_class = v45;
      v59 = objc_msgSendSuper2(&v90, "init");

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v60);
      v61 = v92[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v61);
      v62 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v61, v59);
      specialized ContiguousArray._endMutation()(v62);
      v26 = v78;
      v25 = v79;
      v27 = &selRef_layoutScrubberCallout_;
      if (v78 == v8)
      {
        v63 = v92;
        swift_bridgeObjectRelease(v79);
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    if (v25 < 0)
      v68 = v25;
    else
      v68 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v25);
    v26 = _CocoaArrayWrapper.endIndex.getter(v68);
    swift_bridgeObjectRelease(v25);
  }
  swift_bridgeObjectRelease(v25);
  v63 = _swiftEmptyArrayStorage;
LABEL_25:
  v64 = sub_108F90(&qword_20F1A8);
  v65 = swift_allocObject(v64, 48, 7);
  *(_OWORD *)(v65 + 16) = xmmword_173340;
  v66 = v73;
  *(_QWORD *)(v65 + 32) = v74;
  *(_QWORD *)(v65 + 40) = v66;
  v67 = objc_allocWithZone((Class)type metadata accessor for BookViewModel(0));
  return BookViewModel.init(uuid:title:authors:sample:path:documents:)(v69, v77, v76, v75, v65, v72, v71, v70, (uint64_t)v63);
}

unint64_t sub_1192B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_20F430;
  if (!qword_20F430)
  {
    v1 = objc_opt_self(BKDocument);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_20F430);
  }
  return result;
}

id Document.__allocating_init(document:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Document.init(document:)(a1);
}

_QWORD *sub_119324(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFF8));
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_1108B8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      v7 = objc_msgSend(v5, "description");
      v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);
      v11 = v10;

      v13 = _swiftEmptyArrayStorage[2];
      v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1)
        sub_1108B8(v12 > 1, v13 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      v14[5] = v11;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v15 = a1;
    else
      v15 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v15);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

id Document.__allocating_init(ordinal:href:manifestId:assetId:title:fileSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  objc_class *v10;
  id v18;

  v18 = objc_allocWithZone(v10);
  return Document.init(ordinal:href:manifestId:assetId:title:fileSize:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_119534(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = sub_108F90(&qword_20F470);
    v6 = _bridgeCocoaArray<A>(_:)(v4, v5);
    swift_bridgeObjectRelease(a1);
    return v6;
  }
  else
  {
    v2 = swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v2);
    return a1;
  }
}

uint64_t Document.ordinal.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR___BEDocument_ordinal);
}

uint64_t Document.href.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BEDocument_href);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BEDocument_href + 8));
  return v1;
}

uint64_t Document.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BEDocument_title);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BEDocument_title + 8));
  return v1;
}

uint64_t Document.manifestId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BEDocument_manifestId);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BEDocument_manifestId + 8));
  return v1;
}

uint64_t Document.assetId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___BEDocument_assetId);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR___BEDocument_assetId + 8));
  return v1;
}

uint64_t sub_119770()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___BEDocument_file_size;
  swift_beginAccess(v0 + OBJC_IVAR___BEDocument_file_size, v3, 0, 0);
  return *(_QWORD *)v1;
}

uint64_t sub_1197FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(v1 + OBJC_IVAR___BEDocument_file_size);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = a1;
  return result;
}

uint64_t (*sub_119844(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + OBJC_IVAR___BEDocument_file_size, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_119948()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  KeyPath = swift_getKeyPath(&unk_173EC0);
  v2 = swift_getKeyPath(&unk_173EE8);
  static Published.subscript.getter(&v9, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  v3 = v9;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v7 = v9;
    else
      v7 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v8 = sub_108F90(&qword_20F470);
    v5 = _bridgeCocoaArray<A>(_:)(v7, v8);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = swift_bridgeObjectRetain(v9);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    v5 = v3;
  }
  swift_bridgeObjectRelease(v3);
  return v5;
}

id Document.init(document:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  id v42;
  objc_class *v43;
  id v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t KeyPath;
  uint64_t v50;
  id v51;
  objc_super v53;
  id v54;
  _QWORD v55[3];

  v3 = sub_108F90(&qword_20F428);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_108F90(&qword_20F180);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v1[OBJC_IVAR___BEDocument__pageOffset];
  v55[0] = 0;
  v12 = v1;
  Published.init(initialValue:)(v55, &type metadata for Int);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  v13 = &v12[OBJC_IVAR___BEDocument__pages];
  v55[0] = _swiftEmptyArrayStorage;
  v14 = sub_108F90(&qword_20F230);
  Published.init(initialValue:)(v55, v14);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  *(_QWORD *)&v12[OBJC_IVAR___BEDocument_paginationData] = 0;
  v15 = objc_msgSend(a1, "ordinal");
  *(_QWORD *)&v12[OBJC_IVAR___BEDocument_ordinal] = v15;
  v16 = objc_msgSend(a1, "href");
  v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16, v17);
  v20 = v19;

  v21 = (uint64_t *)&v12[OBJC_IVAR___BEDocument_href];
  *v21 = v18;
  v21[1] = v20;
  v22 = objc_msgSend(a1, "pageOffset");
  swift_beginAccess(v11, v55, 33, 0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  v54 = v22;
  Published.init(initialValue:)(&v54, &type metadata for Int);
  swift_endAccess(v55);
  v23 = objc_msgSend(a1, "title");
  if (v23)
  {
    v25 = v23;
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  v29 = (uint64_t *)&v12[OBJC_IVAR___BEDocument_title];
  *v29 = v26;
  v29[1] = v28;
  v30 = objc_msgSend(a1, "manifestId");
  v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);
  v34 = v33;

  v35 = (uint64_t *)&v12[OBJC_IVAR___BEDocument_manifestId];
  *v35 = v32;
  v35[1] = v34;
  v36 = objc_msgSend(a1, "assetId");
  v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);
  v40 = v39;

  v41 = (uint64_t *)&v12[OBJC_IVAR___BEDocument_assetId];
  *v41 = v38;
  v41[1] = v40;
  v42 = objc_msgSend(a1, "file_size");
  *(_QWORD *)&v12[OBJC_IVAR___BEDocument_file_size] = v42;

  v43 = (objc_class *)type metadata accessor for Document(0);
  v53.receiver = v12;
  v53.super_class = v43;
  v44 = objc_msgSendSuper2(&v53, "init");
  v45 = objc_msgSend(a1, "contentFragments");
  v46 = sub_108F90(&qword_20F470);
  v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v45, v46);

  v48 = sub_119E40(v47);
  swift_bridgeObjectRelease(v47);
  if (v48)
  {
    KeyPath = swift_getKeyPath(&unk_173EC0);
    v50 = swift_getKeyPath(&unk_173EE8);
    v55[0] = v48;
    v51 = v44;
    static Published.subscript.setter(v55, v51, KeyPath, v50);
    swift_unknownObjectRelease(a1);

  }
  else
  {
    swift_unknownObjectRelease(a1);

  }
  return v44;
}

uint64_t sub_119DD8(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_173F20);
  v4 = swift_getKeyPath(&unk_173F48);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

_QWORD *sub_119E40(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)));
  v2 = *(_QWORD *)((char *)&dword_10 + (v1 & 0xFFFFFFFFFFFFFF8));
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
        v5 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v6 = v4;
        v7 = type metadata accessor for Page(0);
        v8 = swift_dynamicCastClass(v6, v7);
        if (!v8)
        {
          swift_unknownObjectRelease(v6);
          goto LABEL_15;
        }
        v9 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v10 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
        v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
        specialized ContiguousArray._endMutation()(v11);
        if (v5 == v2)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v12 = 0;
      v13 = v1 + 32;
      while (1)
      {
        v14 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        v15 = *(_QWORD *)(v13 + 8 * v12);
        v16 = type metadata accessor for Page(0);
        v17 = swift_dynamicCastClass(v15, v16);
        if (!v17)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v1 = v17;
        v18 = swift_unknownObjectRetain(v15);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
        v19 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v19);
        v20 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v1);
        specialized ContiguousArray._endMutation()(v20);
        ++v12;
        if (v14 == v2)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v1 < 0)
      v22 = v1;
    else
      v22 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v1);
    specialized ContiguousArray.reserveCapacity(_:)(v23);
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v22);
    swift_bridgeObjectRelease(v1);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_11A020(uint64_t a1)
{
  void *v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_173EC0);
  v4 = swift_getKeyPath(&unk_173EE8);
  v6 = a1;
  return static Published.subscript.setter(&v6, v1, KeyPath, v4);
}

id Document.init(ordinal:href:manifestId:assetId:title:fileSize:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  objc_class *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  objc_super v43;
  _QWORD *v44;

  v39 = a6;
  v40 = a7;
  v36 = a4;
  v37 = a5;
  v34 = a2;
  v35 = a3;
  v41 = a10;
  v42 = a8;
  v38 = a9;
  v12 = sub_108F90(&qword_20F428);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_108F90(&qword_20F180);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v10[OBJC_IVAR___BEDocument__pageOffset];
  v44 = 0;
  v21 = v10;
  Published.init(initialValue:)(&v44, &type metadata for Int);
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v19, v16);
  v22 = &v21[OBJC_IVAR___BEDocument__pages];
  v44 = _swiftEmptyArrayStorage;
  v23 = sub_108F90(&qword_20F230);
  Published.init(initialValue:)(&v44, v23);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v15, v12);
  *(_QWORD *)&v21[OBJC_IVAR___BEDocument_paginationData] = 0;
  *(_QWORD *)&v21[OBJC_IVAR___BEDocument_ordinal] = a1;
  v24 = &v21[OBJC_IVAR___BEDocument_href];
  v25 = v35;
  *(_QWORD *)v24 = v34;
  *((_QWORD *)v24 + 1) = v25;
  v26 = &v21[OBJC_IVAR___BEDocument_manifestId];
  v27 = v37;
  *(_QWORD *)v26 = v36;
  *((_QWORD *)v26 + 1) = v27;
  v28 = &v21[OBJC_IVAR___BEDocument_assetId];
  v29 = v40;
  *(_QWORD *)v28 = v39;
  *((_QWORD *)v28 + 1) = v29;
  v30 = &v21[OBJC_IVAR___BEDocument_title];
  v31 = v38;
  *(_QWORD *)v30 = v42;
  *((_QWORD *)v30 + 1) = v31;
  *(_QWORD *)&v21[OBJC_IVAR___BEDocument_file_size] = v41;

  v32 = (objc_class *)type metadata accessor for Document(0);
  v43.receiver = v21;
  v43.super_class = v32;
  return objc_msgSendSuper2(&v43, "init");
}

uint64_t sub_11A30C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_173F20);
  v2 = swift_getKeyPath(&unk_173F48);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_11A3E8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_173F20);
  v5 = swift_getKeyPath(&unk_173F48);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_11A464(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_173F20);
  v5 = swift_getKeyPath(&unk_173F48);
  v7 = v2;
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t (*sub_11A4D0(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_173F20);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_173F48);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

uint64_t sub_11A548()
{
  return sub_10F268(&OBJC_IVAR___BEDocument__pageOffset, &qword_20F180);
}

uint64_t sub_11A55C(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F1C0, &OBJC_IVAR___BEDocument__pageOffset, &qword_20F180);
}

void (*sub_11A578(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F1C0);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEDocument__pageOffset;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F180);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

uint64_t sub_11A6E0()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v4;

  KeyPath = swift_getKeyPath(&unk_173EC0);
  v2 = swift_getKeyPath(&unk_173EE8);
  static Published.subscript.getter(&v4, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  return v4;
}

uint64_t sub_11A7D4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_173EC0);
  v5 = swift_getKeyPath(&unk_173EE8);
  static Published.subscript.getter(&v7, v3, KeyPath, v5);
  swift_release(v5);
  result = swift_release(KeyPath);
  *a2 = v7;
  return result;
}

uint64_t sub_11A854(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  KeyPath = swift_getKeyPath(&unk_173EC0);
  v5 = swift_getKeyPath(&unk_173EE8);
  v7 = v2;
  swift_bridgeObjectRetain(v2);
  return static Published.subscript.setter(&v7, v3, KeyPath, v5);
}

uint64_t type metadata accessor for Document(uint64_t a1)
{
  uint64_t result;

  result = qword_20F4B0;
  if (!qword_20F4B0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for Document);
  return result;
}

uint64_t (*sub_11A910(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t KeyPath;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  KeyPath = swift_getKeyPath(&unk_173EC0);
  v3[4] = KeyPath;
  v5 = swift_getKeyPath(&unk_173EE8);
  v3[5] = v5;
  v3[6] = static Published.subscript.modify(v3, v1, KeyPath, v5);
  return sub_10ED4C;
}

uint64_t sub_11A988()
{
  return sub_10F268(&OBJC_IVAR___BEDocument__pages, &qword_20F428);
}

uint64_t sub_11A99C(uint64_t a1)
{
  return sub_10F2E8(a1, &qword_20F480, &OBJC_IVAR___BEDocument__pages, &qword_20F428);
}

void (*sub_11A9B8(_QWORD *a1))(uint64_t, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_108F90(&qword_20F480);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR___BEDocument__pages;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess(v1 + v8, v3, 33, 0);
  v9 = sub_108F90(&qword_20F428);
  v3[16] = v9;
  Published.projectedValue.getter(v9);
  swift_endAccess(v3);
  return sub_10EE48;
}

uint64_t sub_11AA80()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  KeyPath = swift_getKeyPath(&unk_173EC0);
  v2 = swift_getKeyPath(&unk_173EE8);
  static Published.subscript.getter(&v7, v0, KeyPath, v2);
  swift_release(v2);
  swift_release(KeyPath);
  v3 = v7;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v6 = v7;
    else
      v6 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v4 = _CocoaArrayWrapper.endIndex.getter(v6);
    swift_bridgeObjectRelease(v3);
  }
  else
  {
    v4 = *(_QWORD *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease(v3);
  return v4;
}

BOOL static CGPoint.< infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a2 < a4 || a1 < a3;
}

void Document.init()()
{
  _swift_stdlib_reportUnimplementedInitializer("AEBookPlugins.Document", 22, "init()", 6, 0);
  __break(1u);
}

id Document.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Document(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t Document.description.getter()
{
  char *v0;
  char *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  Swift::String v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;
  void *v16;
  uint64_t v18;
  uint64_t v19;
  objc_super v20;
  uint64_t v21;
  unint64_t v22;

  v1 = v0;
  v21 = 0;
  v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(28);
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for Document(0);
  v2 = objc_msgSendSuper2(&v20, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  v6 = v5;
  swift_bridgeObjectRelease(0xE000000000000000);

  v21 = v4;
  v22 = v6;
  v7._countAndFlagsBits = 0x6C616E6964724F20;
  v7._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v7);
  v19 = *(_QWORD *)&v0[OBJC_IVAR___BEDocument_ordinal];
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v8._object;
  String.append(_:)(v8);
  swift_bridgeObjectRelease(object);
  v10._countAndFlagsBits = 0x756F436567615020;
  v10._object = (void *)0xEC000000203A746ELL;
  String.append(_:)(v10);
  KeyPath = swift_getKeyPath(&unk_173EC0);
  v12 = swift_getKeyPath(&unk_173EE8);
  static Published.subscript.getter(&v19, v1, KeyPath, v12);
  swift_release(KeyPath);
  swift_release(v12);
  v13 = v19;
  if ((unint64_t)v19 >> 62)
  {
    if (v19 < 0)
      v18 = v19;
    else
      v18 = v19 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v19);
    v14 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v14 = *(_QWORD *)((char *)&dword_10 + (v19 & 0xFFFFFFFFFFFFF8));
  }
  swift_bridgeObjectRelease(v13);
  v19 = v14;
  v15._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v16 = v15._object;
  String.append(_:)(v15);
  swift_bridgeObjectRelease(v16);
  return v21;
}

uint64_t Document.debugDescription.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  Swift::String v19;
  _QWORD *v21;
  uint64_t v22;

  v1 = v0;
  v2 = objc_msgSend(v0, "description");
  v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);
  v6 = v5;

  v21 = (_QWORD *)v4;
  v22 = v6;
  swift_bridgeObjectRetain(v6);
  v7._countAndFlagsBits = 10;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  swift_bridgeObjectRelease(v6);
  v9 = v4;
  v8 = v6;
  KeyPath = swift_getKeyPath(&unk_173EC0);
  v11 = swift_getKeyPath(&unk_173EE8);
  static Published.subscript.getter(&v21, v1, KeyPath, v11);
  swift_release(KeyPath);
  swift_release(v11);
  v12 = (uint64_t)v21;
  v13 = sub_119324((uint64_t)v21);
  swift_bridgeObjectRelease(v12);
  v21 = v13;
  v14 = sub_108F90(&qword_20F1C8);
  v15 = sub_11B060();
  v16 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v14, v15);
  v18 = v17;
  swift_bridgeObjectRelease(v13);
  v21 = (_QWORD *)v9;
  v22 = v8;
  swift_bridgeObjectRetain(v8);
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v18);
  return (uint64_t)v21;
}

unint64_t sub_11B060()
{
  unint64_t result;
  uint64_t v1;

  result = qword_20F1D0;
  if (!qword_20F1D0)
  {
    v1 = sub_10937C(&qword_20F1C8);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_20F1D0);
  }
  return result;
}

uint64_t sub_11B0AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___BEDocument_file_size);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

uint64_t sub_11B0FC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___BEDocument_file_size);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = v2;
  return result;
}

uint64_t sub_11B148(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEDocument__pageOffset, &qword_20F180);
}

uint64_t sub_11B16C(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F1C0, &OBJC_IVAR___BEDocument__pageOffset, &qword_20F180);
}

uint64_t sub_11B198(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_10F0D0(a1, a2, a3, &OBJC_IVAR___BEDocument__pages, &qword_20F428);
}

uint64_t sub_11B1BC(_BYTE *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_10F13C(a1, a2, a3, a4, &qword_20F480, &OBJC_IVAR___BEDocument__pages, &qword_20F428);
}

uint64_t sub_11B1E8()
{
  return type metadata accessor for Document(0);
}

void sub_11B1F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = (char *)&value witness table for Builtin.Int64 + 64;
  v6[1] = &unk_173F98;
  v6[2] = &unk_173FB0;
  v6[3] = &unk_173F98;
  v6[4] = &unk_173F98;
  v6[5] = (char *)&value witness table for Builtin.Int64 + 64;
  sub_111520();
  if (v3 <= 0x3F)
  {
    v6[6] = *(_QWORD *)(v2 - 8) + 64;
    sub_11B320(319);
    if (v5 <= 0x3F)
    {
      v6[7] = *(_QWORD *)(v4 - 8) + 64;
      v6[8] = &unk_173FC8;
      swift_updateClassMetadata2(a1, 256, 9, v6, a1 + 80);
    }
  }
}

uint64_t method lookup function for Document(uint64_t a1, uint64_t a2)
{
  return swift_lookUpClassMethod(a1, a2, &nominal type descriptor for Document);
}

uint64_t dispatch thunk of Document.file_size.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Document.file_size.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((char *)&stru_68.flags + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of Document.contentFragments.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))&stru_B8.sectname[swift_isaMask & *v0])();
}

uint64_t dispatch thunk of Document.__allocating_init(document:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of Document.__allocating_init(ordinal:href:manifestId:assetId:title:fileSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

void sub_11B320(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_20F4C0)
  {
    v2 = sub_10937C(&qword_20F230);
    v3 = type metadata accessor for Published(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_20F4C0);
  }
}

uint64_t sub_11B378(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  Swift::Int v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_11BFBC(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  v5 = sub_11B3F0(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

Swift::Int sub_11B3F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int result;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  Swift::Int v12;
  uint64_t v13;
  unint64_t v14;
  Swift::Int v15;
  uint64_t v16;
  double v17;
  double *v18;
  _BOOL4 v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t *v23;
  Swift::Int v24;
  Swift::Int v25;
  uint64_t *v26;
  uint64_t v27;
  Swift::Int v28;
  uint64_t *v29;
  uint64_t v30;
  Swift::Int v31;
  uint64_t *v32;
  uint64_t v33;
  double *v34;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  char v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  Swift::Int v98;
  Swift::Int v99;
  uint64_t v100;
  char *__dst;
  uint64_t v102;

  v2 = v1;
  v4 = a1[1];
  result = _minimumMergeRunLength(_:)(v4);
  if (result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4)
        return sub_11BADC(0, v4, 1, a1);
      return result;
    }
    goto LABEL_144;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
  {
LABEL_152:
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return result;
  }
  v7 = result;
  v96 = a1;
  if (v4 < 2)
  {
    v11 = (char *)_swiftEmptyArrayStorage;
    v102 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v14 = _swiftEmptyArrayStorage[2];
LABEL_110:
      v88 = v11;
      if (v14 < 2)
        goto LABEL_107;
      v90 = *v96;
      while (1)
      {
        v91 = v14 - 2;
        if (v14 < 2)
          goto LABEL_139;
        if (!v90)
          goto LABEL_151;
        v87 = v88;
        v92 = *(_QWORD *)&v88[16 * v91 + 32];
        v93 = *(_QWORD *)&v88[16 * v14 + 24];
        sub_11BB5C((char *)(v90 + 8 * v92), (char *)(v90 + 8 * *(_QWORD *)&v88[16 * v14 + 16]), v90 + 8 * v93, __dst);
        if (v2)
          goto LABEL_106;
        if (v93 < v92)
          goto LABEL_140;
        if ((swift_isUniquelyReferenced_nonNull_native(v87) & 1) == 0)
          v87 = sub_11BFA8((uint64_t)v87);
        if (v91 >= *((_QWORD *)v87 + 2))
          goto LABEL_141;
        v94 = &v87[16 * v91 + 32];
        *(_QWORD *)v94 = v92;
        *((_QWORD *)v94 + 1) = v93;
        v95 = *((_QWORD *)v87 + 2);
        if (v14 > v95)
          goto LABEL_142;
        memmove(&v87[16 * v14 + 16], &v87[16 * v14 + 32], 16 * (v95 - v14));
        v88 = v87;
        *((_QWORD *)v87 + 2) = v95 - 1;
        v14 = v95 - 1;
        if (v95 <= 2)
          goto LABEL_107;
      }
    }
  }
  else
  {
    v8 = v6 >> 1;
    v9 = type metadata accessor for Page(0);
    v10 = static Array._allocateBufferUninitialized(minimumCapacity:)(v8, v9);
    *(_QWORD *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8)) = v8;
    __dst = (char *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v102 = v10;
  }
  v12 = 0;
  v13 = *a1;
  v97 = *a1 - 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v98 = v7;
  v99 = v4;
  v100 = *a1;
  while (1)
  {
    v15 = v12++;
    if (v12 >= v4)
      goto LABEL_38;
    v16 = *(_QWORD *)(v13 + 8 * v12);
    v17 = *(double *)(v16 + OBJC_IVAR___BEPage_contentOffset);
    v18 = (double *)(*(_QWORD *)(v13 + 8 * v15) + OBJC_IVAR___BEPage_contentOffset);
    if (v17 >= *v18)
    {
      v19 = *(double *)(v16 + OBJC_IVAR___BEPage_contentOffset + 8) < v18[1];
      v12 = v15 + 2;
      if (v15 + 2 >= v4)
        goto LABEL_29;
    }
    else
    {
      v12 = v15 + 2;
      if (v15 + 2 >= v4)
        goto LABEL_31;
      v19 = 1;
    }
    v20 = v4 <= v12 + 1 ? v12 + 1 : v4;
    do
    {
      v21 = v17;
      v22 = *(_QWORD *)(v13 + 8 * v12);
      v17 = *(double *)(v22 + OBJC_IVAR___BEPage_contentOffset);
      if (v17 >= v21)
      {
        if (v19 == *(double *)(v22 + OBJC_IVAR___BEPage_contentOffset + 8) >= *(double *)(v16
                                                                                         + OBJC_IVAR___BEPage_contentOffset
                                                                                         + 8))
          goto LABEL_29;
      }
      else if (!v19)
      {
        goto LABEL_38;
      }
      ++v12;
      v16 = v22;
    }
    while (v12 < v4);
    v12 = v20;
LABEL_29:
    if (v19)
    {
      if (v12 < v15)
        goto LABEL_145;
LABEL_31:
      if (v15 < v12)
      {
        v23 = (uint64_t *)(v97 + 8 * v12);
        v24 = v12;
        v25 = v15;
        v26 = (uint64_t *)(v13 + 8 * v15);
        do
        {
          if (v25 != --v24)
          {
            if (!v13)
              goto LABEL_150;
            v27 = *v26;
            *v26 = *v23;
            *v23 = v27;
          }
          ++v25;
          --v23;
          ++v26;
        }
        while (v25 < v24);
      }
    }
LABEL_38:
    if (v12 < v4)
    {
      if (__OFSUB__(v12, v15))
        goto LABEL_143;
      if (v12 - v15 < v7)
      {
        v28 = v15 + v7;
        if (__OFADD__(v15, v7))
          goto LABEL_146;
        if (v28 >= v4)
          v28 = v4;
        if (v28 < v15)
          goto LABEL_147;
        if (v12 != v28)
        {
          v29 = (uint64_t *)(v97 + 8 * v12);
          do
          {
            v30 = *(_QWORD *)(v13 + 8 * v12);
            v31 = v15;
            v32 = v29;
            do
            {
              v33 = *v32;
              v34 = (double *)(*v32 + OBJC_IVAR___BEPage_contentOffset);
              if (*(double *)(v30 + OBJC_IVAR___BEPage_contentOffset) >= *v34
                && *(double *)(v30 + OBJC_IVAR___BEPage_contentOffset + 8) >= v34[1])
              {
                break;
              }
              if (!v13)
                goto LABEL_148;
              *v32 = v30;
              v32[1] = v33;
              --v32;
              ++v31;
            }
            while (v12 != v31);
            ++v12;
            ++v29;
          }
          while (v12 != v28);
          v12 = v28;
        }
      }
    }
    if (v12 < v15)
    {
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
      goto LABEL_152;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_11BE08(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v37 = *((_QWORD *)v11 + 2);
    v36 = *((_QWORD *)v11 + 3);
    v14 = v37 + 1;
    v13 = v100;
    if (v37 >= v36 >> 1)
    {
      v86 = sub_11BE08((char *)(v36 > 1), v37 + 1, 1, v11);
      v13 = v100;
      v11 = v86;
    }
    *((_QWORD *)v11 + 2) = v14;
    v38 = v11 + 32;
    v39 = &v11[16 * v37 + 32];
    *(_QWORD *)v39 = v15;
    *((_QWORD *)v39 + 1) = v12;
    if (v37)
      break;
    v14 = 1;
LABEL_14:
    v7 = v98;
    v4 = v99;
    if (v12 >= v99)
    {
      v2 = v1;
      goto LABEL_110;
    }
  }
  while (1)
  {
    v40 = v14 - 1;
    if (v14 >= 4)
    {
      v45 = &v38[16 * v14];
      v46 = *((_QWORD *)v45 - 8);
      v47 = *((_QWORD *)v45 - 7);
      v51 = __OFSUB__(v47, v46);
      v48 = v47 - v46;
      if (v51)
        goto LABEL_127;
      v50 = *((_QWORD *)v45 - 6);
      v49 = *((_QWORD *)v45 - 5);
      v51 = __OFSUB__(v49, v50);
      v43 = v49 - v50;
      v44 = v51;
      if (v51)
        goto LABEL_128;
      v52 = v14 - 2;
      v53 = &v38[16 * v14 - 32];
      v55 = *(_QWORD *)v53;
      v54 = *((_QWORD *)v53 + 1);
      v51 = __OFSUB__(v54, v55);
      v56 = v54 - v55;
      if (v51)
        goto LABEL_130;
      v51 = __OFADD__(v43, v56);
      v57 = v43 + v56;
      if (v51)
        goto LABEL_133;
      if (v57 >= v48)
      {
        v75 = &v38[16 * v40];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v51 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v51)
          goto LABEL_137;
        v68 = v43 < v78;
        goto LABEL_95;
      }
    }
    else
    {
      if (v14 != 3)
      {
        v69 = *((_QWORD *)v11 + 4);
        v70 = *((_QWORD *)v11 + 5);
        v51 = __OFSUB__(v70, v69);
        v62 = v70 - v69;
        v63 = v51;
        goto LABEL_89;
      }
      v42 = *((_QWORD *)v11 + 4);
      v41 = *((_QWORD *)v11 + 5);
      v51 = __OFSUB__(v41, v42);
      v43 = v41 - v42;
      v44 = v51;
    }
    if ((v44 & 1) != 0)
      goto LABEL_129;
    v52 = v14 - 2;
    v58 = &v38[16 * v14 - 32];
    v60 = *(_QWORD *)v58;
    v59 = *((_QWORD *)v58 + 1);
    v61 = __OFSUB__(v59, v60);
    v62 = v59 - v60;
    v63 = v61;
    if (v61)
      goto LABEL_132;
    v64 = &v38[16 * v40];
    v66 = *(_QWORD *)v64;
    v65 = *((_QWORD *)v64 + 1);
    v51 = __OFSUB__(v65, v66);
    v67 = v65 - v66;
    if (v51)
      goto LABEL_135;
    if (__OFADD__(v62, v67))
      goto LABEL_136;
    if (v62 + v67 >= v43)
    {
      v68 = v43 < v67;
LABEL_95:
      if (v68)
        v40 = v52;
      goto LABEL_97;
    }
LABEL_89:
    if ((v63 & 1) != 0)
      goto LABEL_131;
    v71 = &v38[16 * v40];
    v73 = *(_QWORD *)v71;
    v72 = *((_QWORD *)v71 + 1);
    v51 = __OFSUB__(v72, v73);
    v74 = v72 - v73;
    if (v51)
      goto LABEL_134;
    if (v74 < v62)
      goto LABEL_14;
LABEL_97:
    v79 = v40 - 1;
    if (v40 - 1 >= v14)
    {
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    if (!v13)
      goto LABEL_149;
    v80 = v11;
    v81 = &v38[16 * v79];
    v82 = *(_QWORD *)v81;
    v83 = &v38[16 * v40];
    v84 = *((_QWORD *)v83 + 1);
    sub_11BB5C((char *)(v13 + 8 * *(_QWORD *)v81), (char *)(v13 + 8 * *(_QWORD *)v83), v13 + 8 * v84, __dst);
    if (v1)
      break;
    if (v84 < v82)
      goto LABEL_124;
    if (v40 > *((_QWORD *)v80 + 2))
      goto LABEL_125;
    *(_QWORD *)v81 = v82;
    *(_QWORD *)&v38[16 * v79 + 8] = v84;
    v85 = *((_QWORD *)v80 + 2);
    if (v40 >= v85)
      goto LABEL_126;
    v11 = v80;
    v14 = v85 - 1;
    memmove(&v38[16 * v40], v83 + 16, 16 * (v85 - 1 - v40));
    *((_QWORD *)v80 + 2) = v85 - 1;
    v13 = v100;
    if (v85 <= 2)
      goto LABEL_14;
  }
  v87 = v80;
LABEL_106:
  v88 = v87;
LABEL_107:
  v89 = swift_bridgeObjectRelease(v88);
  *(_QWORD *)((char *)&dword_10 + (v102 & 0xFFFFFFFFFFFFF8)) = 0;
  specialized Array._endMutation()(v89);
  return swift_bridgeObjectRelease(v102);
}

uint64_t sub_11BADC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  double *v10;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(_QWORD *)(v4 + 8 * a3);
    v7 = result;
    v8 = (uint64_t *)v5;
    while (1)
    {
      v9 = *v8;
      v10 = (double *)(*v8 + OBJC_IVAR___BEPage_contentOffset);
      if (*(double *)(v6 + OBJC_IVAR___BEPage_contentOffset) >= *v10
        && *(double *)(v6 + OBJC_IVAR___BEPage_contentOffset + 8) >= v10[1])
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_11BB5C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double *v15;
  double *v16;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  double *v24;
  uint64_t result;
  char *v27;
  char *v28;
  char *v29;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v29 = __src;
  v28 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v19 = &v4[8 * v13];
      v27 = v19;
      v29 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v20 = (char *)(a3 - 8);
        while (1)
        {
          v21 = v20 + 8;
          v22 = v6 - 8;
          v23 = *((_QWORD *)v6 - 1);
          v24 = (double *)(*((_QWORD *)v19 - 1) + OBJC_IVAR___BEPage_contentOffset);
          if (*v24 < *(double *)(v23 + OBJC_IVAR___BEPage_contentOffset)
            || v24[1] < *(double *)(v23 + OBJC_IVAR___BEPage_contentOffset + 8))
          {
            if (v21 != v6 || v20 >= v6)
              *(_QWORD *)v20 = v23;
            v29 = v6 - 8;
            v6 -= 8;
            if (v22 <= v7)
              goto LABEL_50;
          }
          else
          {
            v27 = v19 - 8;
            if (v21 < v19 || v20 >= v19 || v21 != v19)
              *(_QWORD *)v20 = *((_QWORD *)v19 - 1);
            v19 -= 8;
            if (v6 <= v7)
              goto LABEL_50;
          }
          v20 -= 8;
          if (v19 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v27 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        v15 = (double *)(*(_QWORD *)v6 + OBJC_IVAR___BEPage_contentOffset);
        v16 = (double *)(*(_QWORD *)v4 + OBJC_IVAR___BEPage_contentOffset);
        if (*v15 < *v16 || v15[1] < v16[1])
        {
          v18 = v6 + 8;
          if (v7 < v6 || v7 >= v18 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        else
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v28 = v4;
          v18 = v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v18;
      }
      while ((unint64_t)v18 < a3);
      v29 = v7;
    }
LABEL_50:
    sub_11BF00((void **)&v29, (const void **)&v28, &v27);
    return 1;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_11BE08(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_108F90(&qword_20F4C8);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)&_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

char *sub_11BF00(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_11BFA8(uint64_t a1)
{
  return sub_11BE08(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_11BFBC(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_11BFD0(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = OBJC_IVAR___BEDocument_paginationData;
  v3 = *(_QWORD *)&v1[OBJC_IVAR___BEDocument_paginationData];
  *(_QWORD *)&v1[OBJC_IVAR___BEDocument_paginationData] = a1;
  swift_unknownObjectRetain(a1);
  result = swift_unknownObjectRelease(v3);
  v5 = *(_QWORD *)&v1[v2];
  if (v5)
  {
    v6 = (void *)swift_unknownObjectRetain(*(_QWORD *)&v1[v2]);
    v7 = (unint64_t)_s13AEBookPlugins4PageC13generatePages4fromSayACGAA30DocumentPaginationDataProvider_p_tFZ_0(v6);
    v8 = v7;
    if ((v7 & 0x8000000000000000) != 0 || (v7 & 0x4000000000000000) != 0)
    {
      v13 = swift_bridgeObjectRetain(v7);
      v9 = (uint64_t)sub_10FC24(v13);
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      v9 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v7);
    }
    v14 = v9;
    sub_11B378(&v14);
    swift_bridgeObjectRelease(v8);
    v10 = v14;
    KeyPath = swift_getKeyPath(&unk_173EC0);
    v12 = swift_getKeyPath(&unk_173EE8);
    v14 = v10;
    static Published.subscript.setter(&v14, v1, KeyPath, v12);
    return swift_unknownObjectRelease(v5);
  }
  return result;
}

Swift::Void __swiftcall BCAppIntentsAssetViewController.notifyAppIntentsInfoChanged()()
{
  ((void (*)())BCAppIntentsAssetViewControllerNotifyInfoChanged)();
}

void sub_11C0DC(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;

  v3 = 138543618;
  v4 = a1;
  v5 = 2114;
  v6 = a2;
}

void sub_11C160(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
}

void sub_11C1A0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2C820();
}

void sub_11C204(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2C810(&dword_0, a2, a3, "Accessibility unable to perform selector: %{public}@", a5, a6, a7, a8, 2u);
  sub_2C820();
}

void sub_11C268(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2C810(&dword_0, a2, a3, "Unresolved error: %{public}@", a5, a6, a7, a8, 2u);
  sub_2C820();
}

void sub_11C2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2F7A8(&dword_0, &_os_log_default, a3, "invalid value for fixed layout height", a5, a6, a7, a8, 0);
}

void sub_11C304()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_2F7B8();
  sub_2F798(&dword_0, &_os_log_default, v0, "%s %s:%d", v1, v2, v3, v4, v5);
}

void sub_11C394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2F7A8(&dword_0, &_os_log_default, a3, "invalid value for fixed layout width", a5, a6, a7, a8, 0);
}

void sub_11C3CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_2F7B8();
  sub_2F798(&dword_0, &_os_log_default, v0, "%s %s:%d", v1, v2, v3, v4, v5);
}

void sub_11C45C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_365D0(&dword_0, a1, a3, "fontScale is missing", a5, a6, a7, a8, 0);
}

void sub_11C490(os_log_t log, double a2, double a3)
{
  int v3;
  double v4;
  __int16 v5;
  double v6;

  v3 = 134218240;
  v4 = a2;
  v5 = 2048;
  v6 = a3;
  _os_log_debug_impl(&dword_0, log, OS_LOG_TYPE_DEBUG, "CPL %.0f given content width %.0f", (uint8_t *)&v3, 0x16u);
}

void sub_11C514(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138412290;
  v3 = a1;
  _os_log_debug_impl(&dword_0, a2, OS_LOG_TYPE_DEBUG, "failed finding font %@", (uint8_t *)&v2, 0xCu);
}

void sub_11C588(void *a1, void *a2, NSObject *a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  int v11;
  void *v12;
  __int16 v13;
  id v14;
  __int16 v15;
  void *v16;
  __int16 v17;
  void *v18;

  objc_opt_class(a1);
  v7 = v6;
  v8 = v6;
  v9 = objc_msgSend(a1, "tocContentType");
  v10 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a2, "userInfo"));
  v11 = 138413058;
  v12 = v7;
  v13 = 2048;
  v14 = v9;
  v15 = 2114;
  v16 = a2;
  v17 = 2114;
  v18 = v10;
  _os_log_fault_impl(&dword_0, a3, OS_LOG_TYPE_FAULT, "%@; type:%ld; performFetch Failed. error:%{public}@ info:%{public}@",
    (uint8_t *)&v11,
    0x2Au);

}

void sub_11C678(uint64_t a1, uint64_t a2, os_log_t log)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = 138412546;
  v5 = v3;
  v6 = 2114;
  v7 = a2;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "AEPDFPlugin coordinateReadingItemAtURL Error taking coordinate read for %@;  Error: %{public}@",
    (uint8_t *)&v4,
    0x16u);
}

void sub_11C700(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2C810(&dword_0, a1, a3, "No presenter for type: %ld", a5, a6, a7, a8, 0);
  sub_2C820();
}

void sub_11C768()
{
  os_log_t v0;
  uint8_t v1[24];

  sub_5E3E4();
  _os_log_debug_impl(&dword_0, v0, OS_LOG_TYPE_DEBUG, "%@", v1, 0xCu);
  sub_2C820();
}

void sub_11C7D4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_5E3E4();
  sub_2C810(&dword_0, v0, v1, "Error saving MOC: %{public}@", v2, v3, v4, v5, v6);
  sub_2C820();
}

void sub_11C834()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_5E3E4();
  sub_2C810(&dword_0, v0, v1, "Unresolved error %{public}@", v2, v3, v4, v5, v6);
  sub_2C820();
}

void sub_11C894()
{
  uint64_t v0;
  os_log_t v1;
  uint8_t v2[12];
  __int16 v3;
  uint64_t v4;

  sub_5E3E4();
  v3 = 2112;
  v4 = v0;
  _os_log_debug_impl(&dword_0, v1, OS_LOG_TYPE_DEBUG, "edited annotation: %@\nNote text:\n%@", v2, 0x16u);
  sub_2C820();
}

void sub_11C910(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 67109120;
  *((_DWORD *)buf + 1) = a1 != 0;
  _os_log_fault_impl(&dword_0, log, OS_LOG_TYPE_FAULT, "missing contentData, assetViewControllerDelegate still exist ? %d", buf, 8u);

}

void sub_11C96C(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_fault_impl(&dword_0, log, OS_LOG_TYPE_FAULT, "missing start date, unbalanced analytics visibility calls", v1, 2u);
}

void sub_11C9AC()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_63D80();
  sub_2F7A8(&dword_0, v0, v1, "No valid pages found for spread.", v2, v3, v4, v5, v6);
  sub_63D78();
}

void sub_11C9D8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_63D80();
  sub_2F7A8(&dword_0, v0, v1, "Page is landscape, falling back to single page spread.", v2, v3, v4, v5, v6);
  sub_63D78();
}

void sub_11CA04()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_63D80();
  sub_2F7A8(&dword_0, v0, v1, "Aspect ratio of adjacent pages do not match, falling back to single page spread.", v2, v3, v4, v5, v6);
  sub_63D78();
}

void sub_11CA30()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_63D80();
  sub_2F7A8(&dword_0, v0, v1, "Only one page available, falling back to single page spread.", v2, v3, v4, v5, v6);
  sub_63D78();
}

void sub_11CA5C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2C810(&dword_0, a2, a3, "dismissCurrentPopoverWithCompletion: failed because %@ is being presented or dismissed", a5, a6, a7, a8, 2u);
}

void sub_11CAC4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2C810(&dword_0, a2, a3, "showOverlayViewController: failed because %@ is being presented or dismissed", a5, a6, a7, a8, 2u);
}

void sub_11CB30(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;

  v2 = 138543362;
  v3 = a1;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Unresolved error %{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_11CBA4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Unexpected tocContentType when setting up trailing swipe actions.", v1, 2u);
}

void sub_11CBE4(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 138412290;
  v4 = a1;
  sub_79868(&dword_0, a2, a3, "didBeginMultipleSelectionInteractionAtIndexPath:%@", (uint8_t *)&v3);
}

void sub_11CC50(void *a1, NSObject *a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  int v6;
  void *v7;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "editingToolbar"));
  v4 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v3, "superview"));
  v6 = 138412290;
  v7 = v4;
  sub_79868(&dword_0, a2, v5, "Skipping edit mode toolbar install, seems it already has a superview:%@", (uint8_t *)&v6);

}

void sub_11CCF4(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_debug_impl(&dword_0, log, OS_LOG_TYPE_DEBUG, "Removing _editingToolbar", v1, 2u);
}

void sub_11CD34(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;

  v3 = 134217984;
  v4 = a1;
  sub_79868(&dword_0, a2, a3, "Updating toolbar content: %lu items selected", (uint8_t *)&v3);
}

void sub_11CDA0(uint8_t *buf, _BYTE *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_error_impl(&dword_0, log, OS_LOG_TYPE_ERROR, "Unexpected condition: document with nil href", buf, 2u);
}

void sub_11CDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2F7A8(&dword_0, &_os_log_default, a3, "could not find annotation provider for book", a5, a6, a7, a8, 0);
  sub_63D78();
}

void sub_11CE10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_C8174();
  sub_2F7B8();
  sub_2F798(&dword_0, &_os_log_default, v0, "%s %s:%d", v1, v2, v3, v4, v5);
  sub_C8184();
}

void sub_11CE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2F7A8(&dword_0, &_os_log_default, a3, "[AEAnnotationProvider sharedInstance] returned nil", a5, a6, a7, a8, 0);
  sub_63D78();
}

void sub_11CEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_C8174();
  sub_2F7B8();
  sub_2F798(&dword_0, &_os_log_default, v0, "%s %s:%d", v1, v2, v3, v4, v5);
  sub_C8184();
}

void sub_11CF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2F7A8(&dword_0, &_os_log_default, a3, "assetUrl is nil", a5, a6, a7, a8, 0);
  sub_63D78();
}

void sub_11CF80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_C8174();
  sub_2F7B8();
  sub_2F798(&dword_0, &_os_log_default, v0, "%s %s:%d", v1, v2, v3, v4, v5);
  sub_C8184();
}

void sub_11D004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2F7A8(&dword_0, &_os_log_default, a3, "could not find annotationProvider for assetUrl", a5, a6, a7, a8, 0);
  sub_63D78();
}

void sub_11D038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_C8174();
  sub_2F7B8();
  sub_2F798(&dword_0, &_os_log_default, v0, "%s %s:%d", v1, v2, v3, v4, v5);
  sub_C8184();
}

void sub_11D0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2F7A8(&dword_0, &_os_log_default, a3, "could not find helper for assetUrl", a5, a6, a7, a8, 0);
  sub_63D78();
}

void sub_11D0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_C8174();
  sub_2F7B8();
  sub_2F798(&dword_0, &_os_log_default, v0, "%s %s:%d", v1, v2, v3, v4, v5);
  sub_C8184();
}

void sub_11D174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_2F7A8(&dword_0, &_os_log_default, a3, "could not find plugin for assetUrl", a5, a6, a7, a8, 0);
  sub_63D78();
}

void sub_11D1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t v5;

  sub_C8174();
  sub_2F7B8();
  sub_2F798(&dword_0, &_os_log_default, v0, "%s %s:%d", v1, v2, v3, v4, v5);
  sub_C8184();
}

void sub_11D22C(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_C818C(&dword_0, a2, a3, "deleted annotation: %@", a5, a6, a7, a8, 2u);
}

void sub_11D294(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_C818C(&dword_0, a2, a3, "added annotation: %@", a5, a6, a7, a8, 2u);
}

void sub_11D2FC(void *a1, NSObject *a2)
{
  void *v3;
  int v4;
  void *v5;

  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(a1, "storageKey"));
  v4 = 138412290;
  v5 = v3;
  _os_log_error_impl(&dword_0, a2, OS_LOG_TYPE_ERROR, "Error: Timed out waiting for First Paint ending operation [Key: %@]", (uint8_t *)&v4, 0xCu);

}

void sub_11D390()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_63D80();
  sub_2F7A8(&dword_0, v0, v1, "AEPdfCache didn't contain a valid PDFDocument and it should have", v2, v3, v4, v5, v6);
  sub_63D78();
}

void sub_11D3BC()
{
  os_log_t v0;
  uint8_t v1[16];

  sub_63D80();
  _os_log_debug_impl(&dword_0, v0, OS_LOG_TYPE_DEBUG, "toggleEditAssetMode", v1, 2u);
  sub_63D78();
}

void sub_11D3F4(char a1, NSObject *a2, uint64_t a3)
{
  const __CFString *v3;
  int v4;
  const __CFString *v5;

  v3 = CFSTR("disabled");
  if ((a1 & 1) != 0)
    v3 = CFSTR("ENABLED");
  v4 = 138412290;
  v5 = v3;
  sub_79868(&dword_0, a2, a3, "setAssetEditingEnabled: %@", (uint8_t *)&v4);
}

void sub_11D478(uint64_t a1, NSObject *a2, uint64_t a3)
{
  const __CFString *v3;
  int v4;
  const __CFString *v5;

  if (*(_BYTE *)(*(_QWORD *)a1 + 24))
    v3 = CFSTR("YES");
  else
    v3 = CFSTR("NO");
  v4 = 138412290;
  v5 = v3;
  sub_79868(&dword_0, a2, a3, "_needToSaveChanges: %@", (uint8_t *)&v4);
}

void sub_11D504()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_63D80();
  sub_2F7A8(&dword_0, v0, v1, "Unexpected pageIndex: NSNotFound", v2, v3, v4, v5, v6);
  sub_63D78();
}

void sub_11D530()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_63D80();
  sub_2F7A8(&dword_0, v0, v1, "Cannot scroll to page past end of document", v2, v3, v4, v5, v6);
  sub_63D78();
}

void sub_11D55C()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  sub_63D80();
  sub_2F7A8(&dword_0, v0, v1, "ModernPDF: visiblePageBookmarks SHOULD NOT GET CALLED", v2, v3, v4, v5, v6);
  sub_63D78();
}

void sub_11D588(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  objc_msgSend(a1, "isBookmarked");
  sub_E4790(&dword_0, v1, v2, "%@ bookmark at location: %@", v3, v4, v5, v6, 2u);
  sub_E47A4();
}

void sub_11D620(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", a1));
  v10 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithBool:](NSNumber, "numberWithBool:", objc_msgSend(a2, "isBookmarked")));
  sub_E4790(&dword_0, v4, v5, "PDF page did change: index#: %@, isBookmarked: %@", v6, v7, v8, v9, 2u);

}

void sub_11D6EC(uint64_t a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  int v5;
  void *v6;

  v3 = (void *)objc_claimAutoreleasedReturnValue(+[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", a1));
  v5 = 138412290;
  v6 = v3;
  sub_79868(&dword_0, a2, v4, "Annotation did change: index#: %@", (uint8_t *)&v5);

  sub_E47A4();
}

void sub_11D77C(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = 138412290;
  v2 = a1;
  _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Failed to archive: %@", (uint8_t *)&v1, 0xCu);
}

void sub_11D7F8(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = 138543362;
  v2 = a1;
  _os_log_error_impl(&dword_0, (os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR, "Snapshotting a CGSizeZero view: %{public}@", (uint8_t *)&v1, 0xCu);
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

id objc_msgSend_ARModelDataURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ARModelDataURL");
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGColor");
}

id objc_msgSend_CGContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGContext");
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGImage");
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGPath");
}

id objc_msgSend_CGPointValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGPointValue");
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGRectValue");
}

id objc_msgSend_CGSizeValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGSizeValue");
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "JSONObjectWithData:options:error:");
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URL");
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLForDirectory_inDomain_appropriateForURL_create_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForDirectory:inDomain:appropriateForURL:create:error:");
}

id objc_msgSend_URLForLoadingDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForLoadingDocument");
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:");
}

id objc_msgSend_URLFragmentString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLFragmentString");
}

id objc_msgSend_URLPathAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLPathAllowedCharacterSet");
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_URLWithString_relativeToURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:relativeToURL:");
}

id objc_msgSend_URLsForResourcesWithExtension_subdirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLsForResourcesWithExtension:subdirectory:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UTF8String");
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUID");
}

id objc_msgSend_Xj3eVHDeBoTD6fVn6fY8_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "Xj3eVHDeBoTD6fVn6fY8:completion:");
}

id objc_msgSend___highlightContainerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__highlightContainerView");
}

id objc_msgSend___layoutSizeForSpreadPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__layoutSizeForSpreadPages:");
}

id objc_msgSend___webView2_performHighlighterActionWithGestureState_location_isTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "__webView2_performHighlighterActionWithGestureState:location:isTouch:");
}

id objc_msgSend__accessibilityLoadAccessibilityInformation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityLoadAccessibilityInformation");
}

id objc_msgSend__accessibilityQuickSpeakContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilityQuickSpeakContent");
}

id objc_msgSend__accessibilitySetSortPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_accessibilitySetSortPriority:");
}

id objc_msgSend__activityItemsConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_activityItemsConfiguration");
}

id objc_msgSend__addResultsFromSearch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addResultsFromSearch:");
}

id objc_msgSend__addResultsWithPhysicalPageHrefs_selectedRangeResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addResultsWithPhysicalPageHrefs:selectedRangeResult:");
}

id objc_msgSend__addUserStyleSheet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addUserStyleSheet:");
}

id objc_msgSend__adjustAnnotation_withLocation_selectedText_representativeText_updateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustAnnotation:withLocation:selectedText:representativeText:updateStyle:");
}

id objc_msgSend__adjustToNewSize_withOptionalTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_adjustToNewSize:withOptionalTransitionCoordinator:");
}

id objc_msgSend__allPageViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allPageViews");
}

id objc_msgSend__allowZoom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_allowZoom");
}

id objc_msgSend__analyticsSessionHost(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_analyticsSessionHost");
}

id objc_msgSend__analyticsSubmitInBookSearchEventWithSearchText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_analyticsSubmitInBookSearchEventWithSearchText:");
}

id objc_msgSend__animationDidStop_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_animationDidStop:");
}

id objc_msgSend__annotationChanged_forceRender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_annotationChanged:forceRender:");
}

id objc_msgSend__annotationUuidIntersectingPoint_inView_annotationLayerRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_annotationUuidIntersectingPoint:inView:annotationLayerRect:");
}

id objc_msgSend__appearanceStruct(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_appearanceStruct");
}

id objc_msgSend__applyAdditionalScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyAdditionalScale:");
}

id objc_msgSend__applyCurrentTheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyCurrentTheme");
}

id objc_msgSend__applyMaskAndGutter_isRight_contentSize_containerBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_applyMaskAndGutter:isRight:contentSize:containerBounds:");
}

id objc_msgSend__audioBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_audioBarButtonItem");
}

id objc_msgSend__autoCurlToSinglePageOffset_forwardCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autoCurlToSinglePageOffset:forwardCurl:");
}

id objc_msgSend__autoCurlToSpreadPageOffset_forwardCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autoCurlToSpreadPageOffset:forwardCurl:");
}

id objc_msgSend__autoSlideToSpreadPageOffset_forwardCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_autoSlideToSpreadPageOffset:forwardCurl:");
}

id objc_msgSend__averageCharacterWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_averageCharacterWidth");
}

id objc_msgSend__axIsLoading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axIsLoading");
}

id objc_msgSend__axTurnPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_axTurnPage:");
}

id objc_msgSend__backColor0AtPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backColor0AtPosition:");
}

id objc_msgSend__backColor1AtPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backColor1AtPosition:");
}

id objc_msgSend__backPageCurlFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_backPageCurlFrame");
}

id objc_msgSend__beginReadingSessionForEventType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_beginReadingSessionForEventType:");
}

id objc_msgSend__bkAccessibilityValueDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bkAccessibilityValueDidChange");
}

id objc_msgSend__bk_backgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bk_backgroundColor");
}

id objc_msgSend__bk_getDelegateZoomView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bk_getDelegateZoomView");
}

id objc_msgSend__bkaxCheckCanPerformEditActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bkaxCheckCanPerformEditActions");
}

id objc_msgSend__bkaxPerformEditAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bkaxPerformEditAction:");
}

id objc_msgSend__bkaxPerformSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bkaxPerformSelector:");
}

id objc_msgSend__bookContentViewImageOfPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookContentViewImageOfPage:");
}

id objc_msgSend__bookContentViewImageOfPage_boundingSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookContentViewImageOfPage:boundingSize:");
}

id objc_msgSend__bookHasCapability_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookHasCapability:");
}

id objc_msgSend__bookInfoForAssetAtURL_withMoc_error_needsCoordination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookInfoForAssetAtURL:withMoc:error:needsCoordination:");
}

id objc_msgSend__bookInfoForAssetAtURL_withMoc_error_needsCoordination_updateDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookInfoForAssetAtURL:withMoc:error:needsCoordination:updateDate:");
}

id objc_msgSend__bookRenditionFlowIsScrolled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookRenditionFlowIsScrolled");
}

id objc_msgSend__bookRenditionFlowIsScrolledContinuous(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookRenditionFlowIsScrolledContinuous");
}

id objc_msgSend__bookmarkBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookmarkBarButtonItem");
}

id objc_msgSend__bookmarkButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookmarkButton");
}

id objc_msgSend__bookmarkDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookmarkDirectory");
}

id objc_msgSend__bookmarkSelectionAndAnnotate_showColorEditor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookmarkSelectionAndAnnotate:showColorEditor:");
}

id objc_msgSend__bookmarkSelectionAndAnnotate_showColorEditor_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_bookmarkSelectionAndAnnotate:showColorEditor:completion:");
}

id objc_msgSend__brightnessBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_brightnessBarButtonItem");
}

id objc_msgSend__buildConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buildConstraints");
}

id objc_msgSend__buyBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_buyBarButtonItem");
}

id objc_msgSend__cacheKeyForFontFamily_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheKeyForFontFamily:size:");
}

id objc_msgSend__cacheURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cacheURL");
}

id objc_msgSend__cachedIndexFileNameForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedIndexFileNameForName:");
}

id objc_msgSend__cachedIndexFileNameForName_createIndicesDirectoryIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cachedIndexFileNameForName:createIndicesDirectoryIfNeeded:");
}

id objc_msgSend__calculateLineNumbersForLabel_withFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculateLineNumbersForLabel:withFont:");
}

id objc_msgSend__calculatedWidthOfFontFamily_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculatedWidthOfFontFamily:size:");
}

id objc_msgSend__calculatedWidthOfFontFamily_size_cache_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_calculatedWidthOfFontFamily:size:cache:key:");
}

id objc_msgSend__cancelCachingAndCleanupSnapshotWebViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cancelCachingAndCleanupSnapshotWebViews");
}

id objc_msgSend__charactersPerLineForContentWidth_columns_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_charactersPerLineForContentWidth:columns:");
}

id objc_msgSend__charactersPerLineForContentWidthRaw_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_charactersPerLineForContentWidthRaw:");
}

id objc_msgSend__cleanDocumentElementForMediaOverlay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanDocumentElementForMediaOverlay:");
}

id objc_msgSend__cleanup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanup");
}

id objc_msgSend__cleanupFootnoteViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupFootnoteViewController");
}

id objc_msgSend__cleanupPageIndicesIfNecessaryWithDocument_currentPageIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupPageIndicesIfNecessaryWithDocument:currentPageIndex:");
}

id objc_msgSend__cleanupSnapshotWebViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_cleanupSnapshotWebViews");
}

id objc_msgSend__clearAllChapterPageCountEntities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearAllChapterPageCountEntities:");
}

id objc_msgSend__clearDocumentIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearDocumentIfNeeded");
}

id objc_msgSend__clearTransient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_clearTransient");
}

id objc_msgSend__combineAnnotation_withAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_combineAnnotation:withAnnotation:");
}

id objc_msgSend__commonInit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_commonInit");
}

id objc_msgSend__compositingFilterToUse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_compositingFilterToUse");
}

id objc_msgSend__computeFixedLayoutDimensionsFrom_forBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeFixedLayoutDimensionsFrom:forBook:");
}

id objc_msgSend__computeSegmentCountForRect_segmentSize_idealCount_orientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_computeSegmentCountForRect:segmentSize:idealCount:orientation:");
}

id objc_msgSend__configureAnnotationCell_forAnnotation_forRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureAnnotationCell:forAnnotation:forRowAtIndexPath:");
}

id objc_msgSend__configureLoadingCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureLoadingCell:");
}

id objc_msgSend__configurePointAnnotationCell_forRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configurePointAnnotationCell:forRowAtIndexPath:");
}

id objc_msgSend__configureRangeAnnotationCell_forRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureRangeAnnotationCell:forRowAtIndexPath:");
}

id objc_msgSend__configureResultsCell_forRow_inTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureResultsCell:forRow:inTableView:");
}

id objc_msgSend__configureTOCCell_forRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureTOCCell:forRowAtIndexPath:");
}

id objc_msgSend__configureWebTOCCell_forRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureWebTOCCell:forRowAtIndexPath:");
}

id objc_msgSend__configureWebView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureWebView");
}

id objc_msgSend__constructAndActivateConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_constructAndActivateConstraints");
}

id objc_msgSend__containerBoundsForGeometry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_containerBoundsForGeometry");
}

id objc_msgSend__contentAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentAspectRatio");
}

id objc_msgSend__contentController_hasMediaElementAtPoint_inView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentController:hasMediaElementAtPoint:inView:");
}

id objc_msgSend__contentControllerThatHasCopyableSelection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentControllerThatHasCopyableSelection");
}

id objc_msgSend__contentForSelectedRangeWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentForSelectedRangeWithCompletion:");
}

id objc_msgSend__contentHasSpreadPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentHasSpreadPages");
}

id objc_msgSend__contentRectForLocation_visible_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentRectForLocation:visible:completion:");
}

id objc_msgSend__contentRectFromRects_visible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentRectFromRects:visible:");
}

id objc_msgSend__contentSettingsDataFromReadingSessionData_optedIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentSettingsDataFromReadingSessionData:optedIn:");
}

id objc_msgSend__contentWidthForAvailableWidth_columns_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_contentWidthForAvailableWidth:columns:");
}

id objc_msgSend__convertPointFromContentsToView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_convertPointFromContentsToView:");
}

id objc_msgSend__countMarkupAnnotationsInArray_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_countMarkupAnnotationsInArray:result:");
}

id objc_msgSend__createEndOfBookExperience(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createEndOfBookExperience");
}

id objc_msgSend__createZoomingScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createZoomingScrollView");
}

id objc_msgSend__currentChapterInfo_uniqueID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentChapterInfo:uniqueID:");
}

id objc_msgSend__currentReadingProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentReadingProgress");
}

id objc_msgSend__currentZoomingScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentZoomingScrollView");
}

id objc_msgSend__defaultFontName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_defaultFontName");
}

id objc_msgSend__detailsForFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_detailsForFont:");
}

id objc_msgSend__didFinishConfiguringWebView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didFinishConfiguringWebView");
}

id objc_msgSend__didFinishCreatingWebView_forTrackingID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didFinishCreatingWebView:forTrackingID:completion:");
}

id objc_msgSend__didScrollPDFViewToPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_didScrollPDFViewToPage");
}

id objc_msgSend__directoryController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_directoryController");
}

id objc_msgSend__directoryForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_directoryForType:");
}

id objc_msgSend__directorySwitchBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_directorySwitchBarButtonItem");
}

id objc_msgSend__displayPagesForOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_displayPagesForOffset:");
}

id objc_msgSend__doAfterNextPresentationUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doAfterNextPresentationUpdate:");
}

id objc_msgSend__doAfterNextStablePresentationUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doAfterNextStablePresentationUpdate:");
}

id objc_msgSend__doInitialWebViewPositionAndLoad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doInitialWebViewPositionAndLoad");
}

id objc_msgSend__doSearch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doSearch");
}

id objc_msgSend__doSearchWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_doSearchWithString:");
}

id objc_msgSend__documentOrdinalForHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_documentOrdinalForHref:");
}

id objc_msgSend__dumpCachedWebContentAndReload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_dumpCachedWebContentAndReload");
}

id objc_msgSend__editToolboxBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_editToolboxBarButtonItem");
}

id objc_msgSend__effectWithBlurRadius_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_effectWithBlurRadius:scale:");
}

id objc_msgSend__emitAnnotationActionEventIfNeededForAnnotationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_emitAnnotationActionEventIfNeededForAnnotationType:");
}

id objc_msgSend__enableMarkupMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_enableMarkupMode:");
}

id objc_msgSend__endReadingSessionForEventType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_endReadingSessionForEventType:");
}

id objc_msgSend__errorForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_errorForURL:");
}

id objc_msgSend__escapedSearchString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_escapedSearchString");
}

id objc_msgSend__evaluateUndoRedoEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_evaluateUndoRedoEnabled");
}

id objc_msgSend__excerptCitedStringForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_excerptCitedStringForAnnotation:");
}

id objc_msgSend__exposeContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_exposeContentView");
}

id objc_msgSend__extractSelectedTextWithSender_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_extractSelectedTextWithSender:completion:");
}

id objc_msgSend__fetchImageForKey_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchImageForKey:size:");
}

id objc_msgSend__fetchMissingCfiLocationRects_forAnnotations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fetchMissingCfiLocationRects:forAnnotations:");
}

id objc_msgSend__findString_options_maxCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_findString:options:maxCount:");
}

id objc_msgSend__focusOnPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_focusOnPage:");
}

id objc_msgSend__fontAdjustedForCurrentContentSizeCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fontAdjustedForCurrentContentSizeCategory");
}

id objc_msgSend__fontBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fontBarButtonItem");
}

id objc_msgSend__fontDescriptorLookupQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fontDescriptorLookupQueue");
}

id objc_msgSend__fontSizeAdjustmentForFontFamily_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fontSizeAdjustmentForFontFamily:");
}

id objc_msgSend__fontSizeCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fontSizeCache");
}

id objc_msgSend__fontSizeWithCurrentStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fontSizeWithCurrentStyle");
}

id objc_msgSend__footNoteTitleHTML(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_footNoteTitleHTML");
}

id objc_msgSend__footnoteViewController2ForResource_stylesheetSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_footnoteViewController2ForResource:stylesheetSet:");
}

id objc_msgSend__footnoteViewControllerPreparationForDisplayFailed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_footnoteViewControllerPreparationForDisplayFailed:");
}

id objc_msgSend__footnoteViewControllerReadyForDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_footnoteViewControllerReadyForDisplay");
}

id objc_msgSend__forceWebContentBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_forceWebContentBackgroundColor");
}

id objc_msgSend__frameForPageAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForPageAtIndex:");
}

id objc_msgSend__frameForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_frameForPageNumber:");
}

id objc_msgSend__fullParse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_fullParse");
}

id objc_msgSend__generateAndLoadContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateAndLoadContent");
}

id objc_msgSend__generateCacheKey_maxSpan_baseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateCacheKey:maxSpan:baseURL:");
}

id objc_msgSend__generateLeftPageImageAtPageOffset_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateLeftPageImageAtPageOffset:completion:");
}

id objc_msgSend__generateRightPageImageAtPageOffset_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_generateRightPageImageAtPageOffset:completion:");
}

id objc_msgSend__getContentsAsStringWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getContentsAsStringWithCompletionHandler:");
}

id objc_msgSend__getDestination(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getDestination");
}

id objc_msgSend__getURLToLoad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_getURLToLoad");
}

id objc_msgSend__gotSnapshotWithMask_bookInfo_containerBounds_contentSize_isRight_key_pageNumber_snapshot_scale_size_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_gotSnapshotWithMask:bookInfo:containerBounds:contentSize:isRight:key:pageNumber:snapshot:scale:size:completion:");
}

id objc_msgSend__grayThemeButtonImageSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_grayThemeButtonImageSelected:");
}

id objc_msgSend__gutterWidthWithSpreadPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_gutterWidthWithSpreadPages:");
}

id objc_msgSend__hasMediaElementAtTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasMediaElementAtTouch:");
}

id objc_msgSend__hasSearchableCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasSearchableCharacters:");
}

id objc_msgSend__hasValidActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hasValidActions");
}

id objc_msgSend__highlightAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_highlightAnnotation:");
}

id objc_msgSend__highlightAnnotation_rects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_highlightAnnotation:rects:");
}

id objc_msgSend__highlightAnnotationWK2_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_highlightAnnotationWK2:");
}

id objc_msgSend__highlightElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_highlightElement:");
}

id objc_msgSend__highlightLocation_withHighlightType_owner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_highlightLocation:withHighlightType:owner:");
}

id objc_msgSend__highlightRects_withHighlightType_owner_forWK2_clearSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_highlightRects:withHighlightType:owner:forWK2:clearSelection:");
}

id objc_msgSend__imageViewForPageContentImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imageViewForPageContentImage:");
}

id objc_msgSend__imaxBrightnessSlider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxBrightnessSlider");
}

id objc_msgSend__imaxSizeLargerButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxSizeLargerButton");
}

id objc_msgSend__imaxSizeSmallerButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_imaxSizeSmallerButton");
}

id objc_msgSend__inAnalyticsReadSession(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_inAnalyticsReadSession");
}

id objc_msgSend__indexForView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexForView:");
}

id objc_msgSend__indexPathForRowNearestPageNumber_pageNumberForObjectSelector_isExactPageMatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathForRowNearestPageNumber:pageNumberForObjectSelector:isExactPageMatch:");
}

id objc_msgSend__indexPathForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexPathForURL:");
}

id objc_msgSend__indexTextContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_indexTextContent:");
}

id objc_msgSend__infoHUDHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_infoHUDHeight");
}

id objc_msgSend__installClickHandlers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_installClickHandlers:");
}

id objc_msgSend__installViewAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_installViewAtIndex:");
}

id objc_msgSend__isCachedAnnotationRectVisible_considerEntirePage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCachedAnnotationRectVisible:considerEntirePage:");
}

id objc_msgSend__isCompactHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isCompactHeight");
}

id objc_msgSend__isDocumentOrdinalSearchable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDocumentOrdinalSearchable:");
}

id objc_msgSend__isDoubleWide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isDoubleWide");
}

id objc_msgSend__isEmailAllowedForBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isEmailAllowedForBook:");
}

id objc_msgSend__isFocusedOnSecondPageOfSpread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isFocusedOnSecondPageOfSpread");
}

id objc_msgSend__isFreeScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isFreeScale");
}

id objc_msgSend__isInPopoverPresentation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isInPopoverPresentation");
}

id objc_msgSend__isManualCurlInProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isManualCurlInProgress");
}

id objc_msgSend__isNightMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isNightMode");
}

id objc_msgSend__isPageAllZeros_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isPageAllZeros:");
}

id objc_msgSend__isPageEmpty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isPageEmpty:");
}

id objc_msgSend__isPrintingAllowedForBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isPrintingAllowedForBook:");
}

id objc_msgSend__isRTL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isRTL");
}

id objc_msgSend__isUsingContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_isUsingContent:");
}

id objc_msgSend__itemIndexForCurrentPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_itemIndexForCurrentPage");
}

id objc_msgSend__jumpToLocationForVerticalScroll_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_jumpToLocationForVerticalScroll:animated:");
}

id objc_msgSend__jumpToLocationPaged_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_jumpToLocationPaged:animated:");
}

id objc_msgSend__keyForAsset_size_pageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_keyForAsset:size:pageNumber:");
}

id objc_msgSend__killSpreadManualCurl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_killSpreadManualCurl");
}

id objc_msgSend__lastScrollViewSizeLayoutWasGeneratedFor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lastScrollViewSizeLayoutWasGeneratedFor");
}

id objc_msgSend__libraryBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_libraryBarButtonItem");
}

id objc_msgSend__loadWebView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWebView");
}

id objc_msgSend__loadWebView_bookSnapshot_paginationOptions_stylesheetSet_cleanupOptions_cfiOptions_isConfigured_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWebView:bookSnapshot:paginationOptions:stylesheetSet:cleanupOptions:cfiOptions:isConfigured:");
}

id objc_msgSend__loadWebViewFromMainThread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadWebViewFromMainThread");
}

id objc_msgSend__loadingCellForTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_loadingCellForTableView:");
}

id objc_msgSend__locationForChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_locationForChapter:");
}

id objc_msgSend__lookupKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lookupKey");
}

id objc_msgSend__lookupLocalizedNameForAttrs_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_lookupLocalizedNameForAttrs:withCompletion:");
}

id objc_msgSend__mainViewControllerForTransaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_mainViewControllerForTransaction:");
}

id objc_msgSend__manageSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manageSafeAreaInsets");
}

id objc_msgSend__manualCurlToSinglePage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_manualCurlToSinglePage:");
}

id objc_msgSend__markupDocumentElementForMediaOverlay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_markupDocumentElementForMediaOverlay:");
}

id objc_msgSend__maxFontStepsForFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maxFontStepsForFont:");
}

id objc_msgSend__maxValueView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_maxValueView");
}

id objc_msgSend__minValueView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_minValueView");
}

id objc_msgSend__needToSaveChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_needToSaveChanges");
}

id objc_msgSend__needsFullReparseForRecordedChapterPageCountForDocumentInfos_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_needsFullReparseForRecordedChapterPageCountForDocumentInfos:context:");
}

id objc_msgSend__newBADoNotDisturbDataWithStartStatus_tracker_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newBADoNotDisturbDataWithStartStatus:tracker:completion:");
}

id objc_msgSend__newSearchOperationForOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_newSearchOperationForOrdinal:");
}

id objc_msgSend__nextPageHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nextPageHint:");
}

id objc_msgSend__nightThemeButtonImageSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nightThemeButtonImageSelected:");
}

id objc_msgSend__noBookmarksView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_noBookmarksView");
}

id objc_msgSend__nonUpdatedAnnotationsForDocumentOrdinal_assetID_moc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_nonUpdatedAnnotationsForDocumentOrdinal:assetID:moc:");
}

id objc_msgSend__normalizedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_normalizedLocation:");
}

id objc_msgSend__notifyBookmarkObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyBookmarkObservers");
}

id objc_msgSend__notifyDelegateContentDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyDelegateContentDidChange");
}

id objc_msgSend__notifyRequesterAndSendNextRequestOfPreferredHeight_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_notifyRequesterAndSendNextRequestOfPreferredHeight:error:");
}

id objc_msgSend__originPointForPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_originPointForPoint:");
}

id objc_msgSend__overrideViewportWithArguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_overrideViewportWithArguments:");
}

id objc_msgSend__pageCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageCount");
}

id objc_msgSend__pageDictionaryToPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageDictionaryToPageNumber:");
}

id objc_msgSend__pageDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageDirectory");
}

id objc_msgSend__pageIndexForOutline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageIndexForOutline:");
}

id objc_msgSend__pageNumberForAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageNumberForAnchor:");
}

id objc_msgSend__pageOffsetAfter_whenCurlingForward_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageOffsetAfter:whenCurlingForward:");
}

id objc_msgSend__pageOffsetForXOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageOffsetForXOffset:");
}

id objc_msgSend__pageOffsetsForFrames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageOffsetsForFrames:");
}

id objc_msgSend__pageRangeAtIndex_segmentCount_pageCount_orientation_layoutDirection_spread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageRangeAtIndex:segmentCount:pageCount:orientation:layoutDirection:spread:");
}

id objc_msgSend__pageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageSize:");
}

id objc_msgSend__pageViewInZoomingScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageViewInZoomingScrollView:");
}

id objc_msgSend__pageViewShouldHaveRoundedCorners(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pageViewShouldHaveRoundedCorners");
}

id objc_msgSend__paginationMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_paginationMode");
}

id objc_msgSend__payloadForKey_fromSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_payloadForKey:fromSender:");
}

id objc_msgSend__pdfBookmarkDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pdfBookmarkDirectory");
}

id objc_msgSend__pdfOutlineDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pdfOutlineDirectory");
}

id objc_msgSend__pdfPageDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_pdfPageDirectory");
}

id objc_msgSend__perUserBookURLForBookURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_perUserBookURLForBookURL:");
}

id objc_msgSend__performWithLock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWithLock:");
}

id objc_msgSend__placeholderLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_placeholderLabel");
}

id objc_msgSend__playNextItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_playNextItem");
}

id objc_msgSend__populateTOCEntriesFromNavigationInfoAnchors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_populateTOCEntriesFromNavigationInfoAnchors:");
}

id objc_msgSend__positionForPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_positionForPages");
}

id objc_msgSend__postLoadComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postLoadComplete:");
}

id objc_msgSend__postSearch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_postSearch:");
}

id objc_msgSend__preferredContentSizeIsMinimum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredContentSizeIsMinimum:");
}

id objc_msgSend__preferredFontForTextStyle_maximumContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:maximumContentSizeCategory:");
}

id objc_msgSend__preferredFontForTextStyle_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preferredFontForTextStyle:weight:");
}

id objc_msgSend__preflightTapLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_preflightTapLocation:");
}

id objc_msgSend__prepareImageShowOriginal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareImageShowOriginal:");
}

id objc_msgSend__prepareSmilMapOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prepareSmilMapOn:");
}

id objc_msgSend__presetsFileNameForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presetsFileNameForLanguage:");
}

id objc_msgSend__presetsForFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presetsForFileName:");
}

id objc_msgSend__presetsForFontName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_presetsForFontName:");
}

id objc_msgSend__prewarmThumbnailsForVerticalScrubber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_prewarmThumbnailsForVerticalScrubber");
}

id objc_msgSend__promptToLoadExternalContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_promptToLoadExternalContent:");
}

id objc_msgSend__readPlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readPlayer");
}

id objc_msgSend__readyToShow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readyToShow");
}

id objc_msgSend__recheckRemoveAccessApproval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_recheckRemoveAccessApproval");
}

id objc_msgSend__rectForPresenting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_rectForPresenting");
}

id objc_msgSend__refreshAnnotationsAndSearchResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_refreshAnnotationsAndSearchResult");
}

id objc_msgSend__releaseData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_releaseData:");
}

id objc_msgSend__reloadResultsAndResizeIfNecessary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_reloadResultsAndResizeIfNecessary:");
}

id objc_msgSend__removeClickHandlers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeClickHandlers:");
}

id objc_msgSend__removeHighlightOnElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeHighlightOnElement:");
}

id objc_msgSend__removeUserStyleSheet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_removeUserStyleSheet:");
}

id objc_msgSend__resetBookInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetBookInfo:");
}

id objc_msgSend__resetCurlContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetCurlContainer");
}

id objc_msgSend__resetCurlContainerFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetCurlContainerFrame");
}

id objc_msgSend__resetInteractionTracking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetInteractionTracking");
}

id objc_msgSend__resetSinglePageCurlContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetSinglePageCurlContainer");
}

id objc_msgSend__resetSinglePageCurlContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetSinglePageCurlContainer:");
}

id objc_msgSend__resetSinglePageCurlContainerFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetSinglePageCurlContainerFrame");
}

id objc_msgSend__resizeOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resizeOperation");
}

id objc_msgSend__restoreAutoNightModeSwitch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restoreAutoNightModeSwitch");
}

id objc_msgSend__restoreViewHierarchyWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_restoreViewHierarchyWithArray:");
}

id objc_msgSend__resultsCellForRow_inTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resultsCellForRow:inTableView:");
}

id objc_msgSend__resultsChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resultsChanged");
}

id objc_msgSend__resultsHeaderHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resultsHeaderHeight");
}

id objc_msgSend__resumeAllMediaPlayback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resumeAllMediaPlayback");
}

id objc_msgSend__resumeBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resumeBarButtonItem");
}

id objc_msgSend__safeInsetRect_widthInset_heightInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_safeInsetRect:widthInset:heightInset:");
}

id objc_msgSend__sampleCorpus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sampleCorpus");
}

id objc_msgSend__scaledValueForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scaledValueForValue:");
}

id objc_msgSend__scheduleInteractionReset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleInteractionReset");
}

id objc_msgSend__scheduleRenderWithKey_options_size_bookInfoSnapshot_documentUrl_pageNumber_priority_target_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleRenderWithKey:options:size:bookInfoSnapshot:documentUrl:pageNumber:priority:target:context:");
}

id objc_msgSend__scheduleRenderWithKey_size_pageNumber_priority_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleRenderWithKey:size:pageNumber:priority:completion:");
}

id objc_msgSend__scheduleSearchAfterDelay_reportAnalytics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scheduleSearchAfterDelay:reportAnalytics:");
}

id objc_msgSend__scrollPageCountFromCurrentPageSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollPageCountFromCurrentPageSize");
}

id objc_msgSend__scrollToRect_inPageAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollToRect:inPageAtIndex:");
}

id objc_msgSend__scrubberFrameHorizontalOriginY(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrubberFrameHorizontalOriginY");
}

id objc_msgSend__search(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_search");
}

id objc_msgSend__searchBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchBarButtonItem");
}

id objc_msgSend__searchOnCandidateOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchOnCandidateOrdinal:");
}

id objc_msgSend__searchOnOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchOnOrdinal:");
}

id objc_msgSend__searchQueryFromSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchQueryFromSender:");
}

id objc_msgSend__searchQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_searchQueue");
}

id objc_msgSend__segmentSizeForMaxScrubberSize_orientation_cellAspectRatio_spread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_segmentSizeForMaxScrubberSize:orientation:cellAspectRatio:spread:");
}

id objc_msgSend__selectionImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_selectionImage");
}

id objc_msgSend__semanticFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_semanticFontSize");
}

id objc_msgSend__semanticSideInsetWithSpreadPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_semanticSideInsetWithSpreadPages:");
}

id objc_msgSend__semaphoreWaitTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_semaphoreWaitTime");
}

id objc_msgSend__sendActionsForAutoNightSwitchWithPreviousState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendActionsForAutoNightSwitchWithPreviousState:");
}

id objc_msgSend__sendNextInfoRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendNextInfoRequest");
}

id objc_msgSend__sendNextRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sendNextRequest");
}

id objc_msgSend__sepiaThemeButtonImageSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_sepiaThemeButtonImageSelected:");
}

id objc_msgSend__setActivities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setActivities");
}

id objc_msgSend__setAudioSessionMix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAudioSessionMix:");
}

id objc_msgSend__setAutoDisableCancelButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setAutoDisableCancelButton:");
}

id objc_msgSend__setBackgroundViewConfigurationProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBackgroundViewConfigurationProvider:");
}

id objc_msgSend__setBitMask_enabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBitMask:enabled:");
}

id objc_msgSend__setBottomPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setBottomPadding:");
}

id objc_msgSend__setCentersPopoverIfSourceViewNotSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setCentersPopoverIfSourceViewNotSet:");
}

id objc_msgSend__setEffectiveLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setEffectiveLabelFont");
}

id objc_msgSend__setFindDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setFindDelegate:");
}

id objc_msgSend__setHidesShadow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHidesShadow:");
}

id objc_msgSend__setHighlightedPopoverAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setHighlightedPopoverAppearance:");
}

id objc_msgSend__setIgnoreBarButtonItemSiblings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIgnoreBarButtonItemSiblings:");
}

id objc_msgSend__setMouseEventPolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setMouseEventPolicy:");
}

id objc_msgSend__setOverrideBackgroundExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setOverrideBackgroundExtension:");
}

id objc_msgSend__setPageOffsetUncheckedImmediate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPageOffsetUncheckedImmediate:");
}

id objc_msgSend__setPopoverScrolling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setPopoverScrolling");
}

id objc_msgSend__setSegmentedControlAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSegmentedControlAppearance:");
}

id objc_msgSend__setSelectedAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSelectedAppearance:");
}

id objc_msgSend__setSelectedBackgroundViewFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setSelectedBackgroundViewFrame:");
}

id objc_msgSend__setShowsBackgroundShadow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShowsBackgroundShadow:");
}

id objc_msgSend__setTextZoomFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTextZoomFactor:");
}

id objc_msgSend__setToolbarHidden_edge_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setToolbarHidden:edge:duration:");
}

id objc_msgSend__setTopPadding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setTopPadding:");
}

id objc_msgSend__setValidMediaOverlayElementCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setValidMediaOverlayElementCount:");
}

id objc_msgSend__setupAnnotationRectCachesFromClientRects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupAnnotationRectCachesFromClientRects:");
}

id objc_msgSend__setupCompactWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupCompactWidth");
}

id objc_msgSend__setupDefault(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupDefault");
}

id objc_msgSend__setupGestureRecognizers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupGestureRecognizers");
}

id objc_msgSend__setupGestures(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupGestures");
}

id objc_msgSend__setupManualCurlForIndirectRecognizerForTranslation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupManualCurlForIndirectRecognizerForTranslation:");
}

id objc_msgSend__setupPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupPageNumber:");
}

id objc_msgSend__setupPortraitCompactWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupPortraitCompactWidth");
}

id objc_msgSend__setupRegularWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupRegularWidth");
}

id objc_msgSend__setupScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupScrollView");
}

id objc_msgSend__setupScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupScrollView:");
}

id objc_msgSend__setupView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupView");
}

id objc_msgSend__setupViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setupViews");
}

id objc_msgSend__shareAnnotation_annotationRects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shareAnnotation:annotationRects:");
}

id objc_msgSend__shouldDoubleTapReceiveTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldDoubleTapReceiveTouch:");
}

id objc_msgSend__shouldIgnoreNavigationTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldIgnoreNavigationTouch:");
}

id objc_msgSend__shouldLayoutRectInsetContentRectBySafeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldLayoutRectInsetContentRectBySafeAreaInsets");
}

id objc_msgSend__shouldNavBarShowTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldNavBarShowTitle");
}

id objc_msgSend__shouldShowAlertForError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowAlertForError:");
}

id objc_msgSend__shouldShowAudioToolbarButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowAudioToolbarButton");
}

id objc_msgSend__shouldShowAutoNightMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowAutoNightMode");
}

id objc_msgSend__shouldShowSearchResultsView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_shouldShowSearchResultsView");
}

id objc_msgSend__showAlertForError_forAssetAtURL_transaction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAlertForError:forAssetAtURL:transaction:");
}

id objc_msgSend__showAnnotationWithState_showColorEditor_forAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAnnotationWithState:showColorEditor:forAnnotation:");
}

id objc_msgSend__showAnnotations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showAnnotations:");
}

id objc_msgSend__showExpandedContentForResource_atLocation_presentingFromTOC_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showExpandedContentForResource:atLocation:presentingFromTOC:completion:");
}

id objc_msgSend__showMenuForRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_showMenuForRect:");
}

id objc_msgSend__singlePageVisibleContentViewControllerForPageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_singlePageVisibleContentViewControllerForPageOffset:");
}

id objc_msgSend__snapshotCurrentContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_snapshotCurrentContent");
}

id objc_msgSend__spaceBetweenPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_spaceBetweenPages");
}

id objc_msgSend__startFind(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startFind");
}

id objc_msgSend__startFindPerformIndexing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startFindPerformIndexing:");
}

id objc_msgSend__startFindPerformIndexingFromMainThread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startFindPerformIndexingFromMainThread:");
}

id objc_msgSend__startLocationInViewWithGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startLocationInViewWithGesture:");
}

id objc_msgSend__startQueuedCurls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startQueuedCurls");
}

id objc_msgSend__startWebKitFind(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startWebKitFind");
}

id objc_msgSend__startedManualCurlAnimation_isRightSide_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_startedManualCurlAnimation:isRightSide:");
}

id objc_msgSend__stylesheetSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stylesheetSet");
}

id objc_msgSend__stylesheetSetForSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_stylesheetSetForSnapshot:");
}

id objc_msgSend__suspendAllMediaPlayback(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_suspendAllMediaPlayback");
}

id objc_msgSend__swapImageProtocols(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_swapImageProtocols");
}

id objc_msgSend__syncVerticalLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_syncVerticalLabel");
}

id objc_msgSend__systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_systemImageNamed:");
}

id objc_msgSend__takeSnapshotWithConfiguration_retryOnBlank_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_takeSnapshotWithConfiguration:retryOnBlank:completionHandler:");
}

id objc_msgSend__tapLocationForTouchLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tapLocationForTouchLocation:");
}

id objc_msgSend__tapLocationIsInTextOverlapArea_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tapLocationIsInTextOverlapArea:");
}

id objc_msgSend__teardownContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_teardownContentView");
}

id objc_msgSend__teardownPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_teardownPageNumber:");
}

id objc_msgSend__templateCompatibleThemesForTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_templateCompatibleThemesForTraitCollection:");
}

id objc_msgSend__textRangeViewClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_textRangeViewClass");
}

id objc_msgSend__themeButtonImageWithColor_unselectedBorderColor_selected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_themeButtonImageWithColor:unselectedBorderColor:selected:");
}

id objc_msgSend__themeButtonImageWithColor_unselectedBorderColor_selectedImageColor_selected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_themeButtonImageWithColor:unselectedBorderColor:selectedImageColor:selected:");
}

id objc_msgSend__thumbnailBookViewConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_thumbnailBookViewConfiguration");
}

id objc_msgSend__thumbnailShouldTrackWithScrubber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_thumbnailShouldTrackWithScrubber");
}

id objc_msgSend__thumbnailingOperation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_thumbnailingOperation");
}

id objc_msgSend__timeIntervalForHighlightGesture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_timeIntervalForHighlightGesture");
}

id objc_msgSend__titleForPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_titleForPage");
}

id objc_msgSend__tocBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tocBarButtonItem");
}

id objc_msgSend__tocDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_tocDirectory");
}

id objc_msgSend__touchIsNoNoClassOrMediaElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_touchIsNoNoClassOrMediaElement:");
}

id objc_msgSend__touchUpParse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_touchUpParse");
}

id objc_msgSend__trackPlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_trackPlayer");
}

id objc_msgSend__turnAutoNightModeSwitchOff(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_turnAutoNightModeSwitchOff");
}

id objc_msgSend__turnPendingPagesAfterFinishing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_turnPendingPagesAfterFinishing");
}

id objc_msgSend__uncheckedPageOffsetRangeForRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uncheckedPageOffsetRangeForRect:");
}

id objc_msgSend__uncheckedSnapshotWithMask_assetID_bookInfo_containerBounds_contentSize_isRight_pageNumber_scale_size_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uncheckedSnapshotWithMask:assetID:bookInfo:containerBounds:contentSize:isRight:pageNumber:scale:size:completion:");
}

id objc_msgSend__uniqueIDForOutline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_uniqueIDForOutline:");
}

id objc_msgSend__unscheduleSearch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_unscheduleSearch");
}

id objc_msgSend__update(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_update");
}

id objc_msgSend__updateBook_onMoc_forCurrentURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBook:onMoc:forCurrentURL:");
}

id objc_msgSend__updateBookScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBookScale");
}

id objc_msgSend__updateBookmark(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBookmark");
}

id objc_msgSend__updateBuyButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateBuyButton");
}

id objc_msgSend__updateCalloutPageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCalloutPageView");
}

id objc_msgSend__updateCancelButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateCancelButton");
}

id objc_msgSend__updateColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateColors");
}

id objc_msgSend__updateContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContent");
}

id objc_msgSend__updateContentInformationWithRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContentInformationWithRequest:");
}

id objc_msgSend__updateContentInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContentInsets");
}

id objc_msgSend__updateContentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContentOffset");
}

id objc_msgSend__updateContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateContentSize:");
}

id objc_msgSend__updateDirectorySwitch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDirectorySwitch");
}

id objc_msgSend__updateDoneButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateDoneButton");
}

id objc_msgSend__updateFooterConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateFooterConstraint");
}

id objc_msgSend__updateHUDVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHUDVisibility");
}

id objc_msgSend__updateHoverInteraction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateHoverInteraction");
}

id objc_msgSend__updateImageAndTextConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateImageAndTextConstraints");
}

id objc_msgSend__updateLibraryBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLibraryBarButtonItem");
}

id objc_msgSend__updateLoadingCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLoadingCell:");
}

id objc_msgSend__updateLocationFromAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateLocationFromAnnotation:");
}

id objc_msgSend__updateMetaViewportArguments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateMetaViewportArguments");
}

id objc_msgSend__updatePageNumberHUDVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePageNumberHUDVisible:");
}

id objc_msgSend__updatePageViewScrollStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePageViewScrollStates");
}

id objc_msgSend__updatePages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updatePages");
}

id objc_msgSend__updateReadingState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateReadingState");
}

id objc_msgSend__updateReadingStateVisibilityPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateReadingStateVisibilityPossible:");
}

id objc_msgSend__updateReadingStateVisibilityPossible_knownDOMRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateReadingStateVisibilityPossible:knownDOMRange:");
}

id objc_msgSend__updateShadowPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateShadowPath");
}

id objc_msgSend__updateSignal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSignal");
}

id objc_msgSend__updateSurroundingZoomScales(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateSurroundingZoomScales");
}

id objc_msgSend__updateThumb(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateThumb");
}

id objc_msgSend__updateThumbnails(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateThumbnails");
}

id objc_msgSend__updateToolbarPositionAndBackgroundExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateToolbarPositionAndBackgroundExtension");
}

id objc_msgSend__updateToolbarVisibilityAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateToolbarVisibilityAnimated:");
}

id objc_msgSend__updateWebProcessPluginObject_withParameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWebProcessPluginObject:withParameter:");
}

id objc_msgSend__updateWebsearchButtonsStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateWebsearchButtonsStatus");
}

id objc_msgSend__urlToLoad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_urlToLoad");
}

id objc_msgSend__useCompactStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_useCompactStrings");
}

id objc_msgSend__viewForPresenting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewForPresenting");
}

id objc_msgSend__viewportWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewportWidth");
}

id objc_msgSend__visibleAreaChangedInScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_visibleAreaChangedInScrollView:");
}

id objc_msgSend__visitPageTree_visitBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_visitPageTree:visitBlock:");
}

id objc_msgSend__waitForFindSemaphore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_waitForFindSemaphore");
}

id objc_msgSend__waitForLoadSemaphore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_waitForLoadSemaphore");
}

id objc_msgSend__webkit2LocationForContentViewPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_webkit2LocationForContentViewPoint:");
}

id objc_msgSend__whiteThemeButtonImageSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_whiteThemeButtonImageSelected:");
}

id objc_msgSend__willScrollPDFViewToPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_willScrollPDFViewToPageNumber:");
}

id objc_msgSend_abortCurrentBatch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "abortCurrentBatch");
}

id objc_msgSend_absoluteOrder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteOrder");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteString");
}

id objc_msgSend_absoluteURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "absoluteURL");
}

id objc_msgSend_accessibilityActivationPoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityActivationPoint");
}

id objc_msgSend_accessibilityFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityFrame");
}

id objc_msgSend_accessibilityLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityLabel");
}

id objc_msgSend_accessibilityRequiresActivateForSearchField(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityRequiresActivateForSearchField");
}

id objc_msgSend_accessibilityTraits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityTraits");
}

id objc_msgSend_accessibilityValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessibilityValue");
}

id objc_msgSend_accessoryView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "accessoryView");
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "action");
}

id objc_msgSend_actionController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionController");
}

id objc_msgSend_actionControllerWillShow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionControllerWillShow:");
}

id objc_msgSend_actionWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithHandler:");
}

id objc_msgSend_actionWithTitle_image_identifier_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:image:identifier:handler:");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_activateChapterForBook_chapterID_title_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateChapterForBook:chapterID:title:completion:");
}

id objc_msgSend_activateChapterForBook_chapterID_title_currentPage_chapterRange_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateChapterForBook:chapterID:title:currentPage:chapterRange:completion:");
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activateConstraints:");
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activationState");
}

id objc_msgSend_activeAccount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeAccount");
}

id objc_msgSend_activeContextWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activeContextWithCompletion:");
}

id objc_msgSend_activityDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityDidFinish:");
}

id objc_msgSend_activityIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityIndicator");
}

id objc_msgSend_activityIndicatorOverlayView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityIndicatorOverlayView");
}

id objc_msgSend_activityItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityItems");
}

id objc_msgSend_activityViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "activityViewController");
}

id objc_msgSend_actualSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actualSize");
}

id objc_msgSend_actualSizeForContentSize_drawsSpine_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actualSizeForContentSize:drawsSpine:");
}

id objc_msgSend_adaptivePresentationStyleForPresentationController_traitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adaptivePresentationStyleForPresentationController:traitCollection:");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addAnimations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimations:");
}

id objc_msgSend_addAnnotation_location_selectedText_representativeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnnotation:location:selectedText:representativeText:");
}

id objc_msgSend_addArrangedSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addArrangedSubview:");
}

id objc_msgSend_addAttributes_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAttributes:range:");
}

id objc_msgSend_addAudioMuxingObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAudioMuxingObserver:");
}

id objc_msgSend_addChapters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChapters:");
}

id objc_msgSend_addChaptersObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChaptersObject:");
}

id objc_msgSend_addCharactersInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCharactersInRange:");
}

id objc_msgSend_addCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCharactersInString:");
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChildViewController:");
}

id objc_msgSend_addClip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addClip");
}

id objc_msgSend_addCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCompletion:");
}

id objc_msgSend_addConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addConstraints:");
}

id objc_msgSend_addDependency_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDependency:");
}

id objc_msgSend_addEdgeInsets_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEdgeInsets:forKey:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addExecutionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addExecutionBlock:");
}

id objc_msgSend_addExperience_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addExperience:");
}

id objc_msgSend_addExtraCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addExtraCompletion:");
}

id objc_msgSend_addFinishBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFinishBlock:");
}

id objc_msgSend_addFloat_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFloat:forKey:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addGutter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGutter:");
}

id objc_msgSend_addHighlight_forData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHighlight:forData:");
}

id objc_msgSend_addHighlightView_forWK2_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addHighlightView:forWK2:");
}

id objc_msgSend_addInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addInteraction:");
}

id objc_msgSend_addLandmarks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLandmarks:");
}

id objc_msgSend_addMarkupForReadAloudToDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addMarkupForReadAloudToDocument");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:selector:name:object:");
}

id objc_msgSend_addObserver_toObjectsAtIndexes_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:toObjectsAtIndexes:forKeyPath:options:context:");
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperation:");
}

id objc_msgSend_addOperations_waitUntilFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperations:waitUntilFinished:");
}

id objc_msgSend_addPendingContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPendingContent:");
}

id objc_msgSend_addPhysicalPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPhysicalPages:");
}

id objc_msgSend_addPrepareJob_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addPrepareJob:");
}

id objc_msgSend_addRegionWithRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addRegionWithRect:");
}

id objc_msgSend_addResultJob_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addResultJob:");
}

id objc_msgSend_addResultSentinel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addResultSentinel:");
}

id objc_msgSend_addScriptToEvaluate_key_transform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addScriptToEvaluate:key:transform:");
}

id objc_msgSend_addScriptsToLoader_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addScriptsToLoader:context:");
}

id objc_msgSend_addSinfInfoObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSinfInfoObject:");
}

id objc_msgSend_addStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addStore:");
}

id objc_msgSend_addString_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addString:forKey:");
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSublayer:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_addTOCEntries_ordinal_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTOCEntries:ordinal:completion:");
}

id objc_msgSend_addTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTarget:action:forControlEvents:");
}

id objc_msgSend_addTemplate_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTemplate:withName:");
}

id objc_msgSend_addTextFieldWithConfigurationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTextFieldWithConfigurationHandler:");
}

id objc_msgSend_addTextIndex_withName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTextIndex:withName:");
}

id objc_msgSend_addTextNodeCharacterCounts_ordinal_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTextNodeCharacterCounts:ordinal:completion:");
}

id objc_msgSend_addTimeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addTimeObserver:");
}

id objc_msgSend_addToRunLoop_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addToRunLoop:forMode:");
}

id objc_msgSend_addWithPredicate_adder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addWithPredicate:adder:");
}

id objc_msgSend_addhighlightForElementID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addhighlightForElementID:");
}

id objc_msgSend_additionalSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "additionalSafeAreaInsets");
}

id objc_msgSend_adjustGridMetrics(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustGridMetrics");
}

id objc_msgSend_adjustToNewSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "adjustToNewSize:");
}

id objc_msgSend_aeAssetType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aeAssetType");
}

id objc_msgSend_aeBookInfoSnapshotFromBookInfo_ordinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aeBookInfoSnapshotFromBookInfo:ordinal:");
}

id objc_msgSend_aeHighlightStyleName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aeHighlightStyleName");
}

id objc_msgSend_aeHighlightedTextLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aeHighlightedTextLabel");
}

id objc_msgSend_ae_didDismissPopoverContainingThisViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ae_didDismissPopoverContainingThisViewController");
}

id objc_msgSend_ae_reverseValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ae_reverseValues");
}

id objc_msgSend_ae_willDismissPopoverContainingThisViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ae_willDismissPopoverContainingThisViewController");
}

id objc_msgSend_afterEnsuringFirstPaintPerform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "afterEnsuringFirstPaintPerform:");
}

id objc_msgSend_akAnnotationEditingEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "akAnnotationEditingEnabled");
}

id objc_msgSend_akController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "akController");
}

id objc_msgSend_akRedoToolbarItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "akRedoToolbarItem");
}

id objc_msgSend_akToolbarView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "akToolbarView");
}

id objc_msgSend_akUndoToolbarItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "akUndoToolbarItem");
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_allBookmarkIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allBookmarkIdentifiers");
}

id objc_msgSend_allIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allIdentifiers");
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeys");
}

id objc_msgSend_allKeysForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeysForObject:");
}

id objc_msgSend_allNavigationInfosByOrdinal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allNavigationInfosByOrdinal");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allObjects");
}

id objc_msgSend_allTouches(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allTouches");
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allValues");
}

id objc_msgSend_allViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allViewControllers");
}

id objc_msgSend_allViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allViews");
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_allowCitationForProtectedBooks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowCitationForProtectedBooks");
}

id objc_msgSend_allowsDocumentAssembly(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsDocumentAssembly");
}

id objc_msgSend_allowsDocumentChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsDocumentChanges");
}

id objc_msgSend_allowsRemoteInspection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsRemoteInspection");
}

id objc_msgSend_allowsScrollMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allowsScrollMode");
}

id objc_msgSend_alpha(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alpha");
}

id objc_msgSend_alreadyRevealed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alreadyRevealed");
}

id objc_msgSend_ams_DSID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_DSID");
}

id objc_msgSend_ams_iTunesAccountWithUsername_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ams_iTunesAccountWithUsername:");
}

id objc_msgSend_analysisInteraction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analysisInteraction");
}

id objc_msgSend_analyticsContentDataForAssetViewController_contentSubType_tracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsContentDataForAssetViewController:contentSubType:tracker:");
}

id objc_msgSend_analyticsContentSettingData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsContentSettingData");
}

id objc_msgSend_analyticsReadStartDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsReadStartDate");
}

id objc_msgSend_analyticsReadStartProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsReadStartProgress");
}

id objc_msgSend_analyticsReadingSettingsData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsReadingSettingsData");
}

id objc_msgSend_analyticsSessionHost(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "analyticsSessionHost");
}

id objc_msgSend_ancestorViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ancestorViewController");
}

id objc_msgSend_anchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anchor");
}

id objc_msgSend_anchorFrameForAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anchorFrameForAnchor:");
}

id objc_msgSend_anchorFrames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anchorFrames");
}

id objc_msgSend_anchorFramesScript(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anchorFramesScript");
}

id objc_msgSend_anchorLocations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anchorLocations");
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "andPredicateWithSubpredicates:");
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateAlongsideTransition:completion:");
}

id objc_msgSend_animateRotationWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateRotationWithDuration:");
}

id objc_msgSend_animateVerticalScrubberIn_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateVerticalScrubberIn:animated:");
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:");
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_animateWithDuration_delay_options_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:delay:options:animations:completion:");
}

id objc_msgSend_animating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animating");
}

id objc_msgSend_animationForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationForKey:");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_annotateSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotateSelection:");
}

id objc_msgSend_annotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotation");
}

id objc_msgSend_annotationAssetID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationAssetID");
}

id objc_msgSend_annotationAttributedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationAttributedString");
}

id objc_msgSend_annotationBlendMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationBlendMode");
}

id objc_msgSend_annotationCFIStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationCFIStrings");
}

id objc_msgSend_annotationChangeRequiresPaginationUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationChangeRequiresPaginationUpdate");
}

id objc_msgSend_annotationCreationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationCreationDate");
}

id objc_msgSend_annotationCreatorIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationCreatorIdentifier");
}

id objc_msgSend_annotationDataProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationDataProvider");
}

id objc_msgSend_annotationHasNote(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationHasNote");
}

id objc_msgSend_annotationIndexPathForRowNearestPageNumber_isExactPageMatch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationIndexPathForRowNearestPageNumber:isExactPageMatch:");
}

id objc_msgSend_annotationIsBookmark(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationIsBookmark");
}

id objc_msgSend_annotationIsUnderline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationIsUnderline");
}

id objc_msgSend_annotationLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationLocation");
}

id objc_msgSend_annotationNote(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationNote");
}

id objc_msgSend_annotationPageTheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationPageTheme");
}

id objc_msgSend_annotationProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationProvider");
}

id objc_msgSend_annotationProviderForOfflineDBWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationProviderForOfflineDBWithAssetID:");
}

id objc_msgSend_annotationProviderWithCoordination_forAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationProviderWithCoordination:forAssetID:");
}

id objc_msgSend_annotationRectUnionCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationRectUnionCache");
}

id objc_msgSend_annotationRectsCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationRectsCache");
}

id objc_msgSend_annotationRectsData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationRectsData");
}

id objc_msgSend_annotationSelectedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationSelectedText");
}

id objc_msgSend_annotationSerializationManagerWithAssetID_assetURL_bookVersionString_pathToAssetContextDirectory_isManagedBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationSerializationManagerWithAssetID:assetURL:bookVersionString:pathToAssetContextDirectory:isManagedBook:");
}

id objc_msgSend_annotationStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationStyle");
}

id objc_msgSend_annotationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationType");
}

id objc_msgSend_annotationUuid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationUuid");
}

id objc_msgSend_annotationUuidForHighlightLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationUuidForHighlightLayer:");
}

id objc_msgSend_annotationVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationVersion");
}

id objc_msgSend_annotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotations");
}

id objc_msgSend_annotationsPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationsPredicate:");
}

id objc_msgSend_annotationsToUpgrade(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotationsToUpgrade");
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anyObject");
}

id objc_msgSend_anySnapshotForBookInfo_pageNumber_containerBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "anySnapshotForBookInfo:pageNumber:containerBounds:");
}

id objc_msgSend_appInfoMgr(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appInfoMgr");
}

id objc_msgSend_appIntentsSearchQuery(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appIntentsSearchQuery");
}

id objc_msgSend_appearanceColorContainerHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceColorContainerHeight");
}

id objc_msgSend_appearanceColorPotHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceColorPotHeight");
}

id objc_msgSend_appearanceColorPotSeparator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceColorPotSeparator");
}

id objc_msgSend_appearanceColorPotWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceColorPotWidth");
}

id objc_msgSend_appearanceFontViewController_didChangeToFontWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceFontViewController:didChangeToFontWithName:");
}

id objc_msgSend_appearanceMenuItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceMenuItems");
}

id objc_msgSend_appearanceRowHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceRowHeight");
}

id objc_msgSend_appearanceStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceStyle");
}

id objc_msgSend_appearanceViewController_brightnessLevelDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceViewController:brightnessLevelDidChange:");
}

id objc_msgSend_appearanceViewController_didChangeAutoNightMode_previousValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceViewController:didChangeAutoNightMode:previousValue:");
}

id objc_msgSend_appearanceViewController_didChangeFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceViewController:didChangeFont:");
}

id objc_msgSend_appearanceViewController_didChangeFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceViewController:didChangeFontSize:");
}

id objc_msgSend_appearanceViewController_willChangeTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceViewController:willChangeTheme:");
}

id objc_msgSend_appearanceViewControllerShouldDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appearanceViewControllerShouldDismiss");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_appleDisplayOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appleDisplayOptions");
}

id objc_msgSend_application_openURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "application:openURL:options:");
}

id objc_msgSend_applicationActivities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationActivities");
}

id objc_msgSend_applicationCacheDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applicationCacheDirectory");
}

id objc_msgSend_applyClassName_toOnlyLinkWithHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyClassName:toOnlyLinkWithHref:");
}

id objc_msgSend_applyContentBlockingRule_toWebView_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyContentBlockingRule:toWebView:completion:");
}

id objc_msgSend_applyLabelFonts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyLabelFonts");
}

id objc_msgSend_applyPageColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyPageColor");
}

id objc_msgSend_applyToWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "applyToWebView:");
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_areAnimationsEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areAnimationsEnabled");
}

id objc_msgSend_areCitationsAllowedForBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "areCitationsAllowedForBook:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "array");
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayOfVisibleRectsFromRects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayOfVisibleRectsFromRects:");
}

id objc_msgSend_arrayOfVisibleRectsFromRects_contentRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayOfVisibleRectsFromRects:contentRect:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObject:");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_arrowBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrowBackgroundView");
}

id objc_msgSend_ascender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ascender");
}

id objc_msgSend_aspectRatioFromPDF(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "aspectRatioFromPDF");
}

id objc_msgSend_asset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "asset");
}

id objc_msgSend_assetDetailManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetDetailManager");
}

id objc_msgSend_assetEditingEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetEditingEnabled");
}

id objc_msgSend_assetEditingRequested(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetEditingRequested");
}

id objc_msgSend_assetID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetID");
}

id objc_msgSend_assetIDForAssetAtURLOnMainThread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetIDForAssetAtURLOnMainThread:");
}

id objc_msgSend_assetIDFromPlistEntry_forAssetAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetIDFromPlistEntry:forAssetAtPath:");
}

id objc_msgSend_assetLogID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetLogID");
}

id objc_msgSend_assetReloading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetReloading");
}

id objc_msgSend_assetSharingConnectionClient(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetSharingConnectionClient");
}

id objc_msgSend_assetSharingConnectionServer_didChangeSelectedAnnotationsCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetSharingConnectionServer:didChangeSelectedAnnotationsCount:");
}

id objc_msgSend_assetType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetType");
}

id objc_msgSend_assetURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetURL");
}

id objc_msgSend_assetViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewController");
}

id objc_msgSend_assetViewController_assetPropertyChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewController:assetPropertyChanged:");
}

id objc_msgSend_assetViewController_didShowContentWithCFIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewController:didShowContentWithCFIs:");
}

id objc_msgSend_assetViewController_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewController:presentViewController:animated:completion:");
}

id objc_msgSend_assetViewController_requestClose_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewController:requestClose:error:");
}

id objc_msgSend_assetViewController_requestOpenURL_likelyUserInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewController:requestOpenURL:likelyUserInitiated:");
}

id objc_msgSend_assetViewController_setFinishedAndCloseForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewController:setFinishedAndCloseForAssetID:");
}

id objc_msgSend_assetViewController_willClose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewController:willClose:");
}

id objc_msgSend_assetViewController_willHideContentWithCFIs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewController:willHideContentWithCFIs:");
}

id objc_msgSend_assetViewController_willOpen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewController:willOpen:");
}

id objc_msgSend_assetViewControllerBuyButtonItem_isSample_isPreorder_storeID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerBuyButtonItem:isSample:isPreorder:storeID:");
}

id objc_msgSend_assetViewControllerDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerDelegate");
}

id objc_msgSend_assetViewControllerDelegateForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerDelegateForContentViewController:");
}

id objc_msgSend_assetViewControllerMinifiedBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerMinifiedBarButtonItem:");
}

id objc_msgSend_assetViewControllerPaginationCompletedForBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerPaginationCompletedForBook:");
}

id objc_msgSend_assetViewControllerProductProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerProductProfile:");
}

id objc_msgSend_assetViewControllerProductProfileProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerProductProfileProtocol:");
}

id objc_msgSend_assetViewControllerRequestToBuy_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerRequestToBuy:completion:");
}

id objc_msgSend_assetViewControllerSignificantReadingLocationChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerSignificantReadingLocationChange:");
}

id objc_msgSend_assetViewControllerUpdateToolbars(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerUpdateToolbars");
}

id objc_msgSend_assetViewControllerWillUnload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetViewControllerWillUnload");
}

id objc_msgSend_assetWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "assetWithURL:");
}

id objc_msgSend_attemptRotationToDeviceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attemptRotationToDeviceOrientation");
}

id objc_msgSend_attributedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributedString");
}

id objc_msgSend_attributes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributes");
}

id objc_msgSend_attributesByName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesByName");
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_audioController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioController");
}

id objc_msgSend_audioEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioEnd");
}

id objc_msgSend_audioHref(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioHref");
}

id objc_msgSend_audioStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "audioStart");
}

id objc_msgSend_author(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "author");
}

id objc_msgSend_authorFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "authorFromPlistEntry:");
}

id objc_msgSend_autoHyphenate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoHyphenate");
}

id objc_msgSend_autoHyphenation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoHyphenation");
}

id objc_msgSend_autoNightModeSwitch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoNightModeSwitch");
}

id objc_msgSend_autoScaleFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoScaleFactor");
}

id objc_msgSend_autoSlideFromPages_toPages_inContainer_isForwardAnimation_isRTL_isZoomedToSpread_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoSlideFromPages:toPages:inContainer:isForwardAnimation:isRTL:isZoomedToSpread:completion:");
}

id objc_msgSend_autoresizingMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "autoresizingMask");
}

id objc_msgSend_ba_analyticsTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ba_analyticsTracker");
}

id objc_msgSend_ba_effectiveAnalyticsTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ba_effectiveAnalyticsTracker");
}

id objc_msgSend_ba_setupNewAnalyticsTrackerWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ba_setupNewAnalyticsTrackerWithName:");
}

id objc_msgSend_backColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backColor");
}

id objc_msgSend_backPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backPage");
}

id objc_msgSend_backPageArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backPageArray");
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "background");
}

id objc_msgSend_backgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColor");
}

id objc_msgSend_backgroundColorForTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColorForTraitCollection:");
}

id objc_msgSend_backgroundColorForTraitEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundColorForTraitEnvironment:");
}

id objc_msgSend_backgroundImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundImageView");
}

id objc_msgSend_backgroundMini(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundMini");
}

id objc_msgSend_backgroundSelected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundSelected");
}

id objc_msgSend_backgroundSelectedMini(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundSelectedMini");
}

id objc_msgSend_backgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundView");
}

id objc_msgSend_backgroundsByLevel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "backgroundsByLevel");
}

id objc_msgSend_barButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "barButtonItem");
}

id objc_msgSend_barButtonItemForButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "barButtonItemForButton:");
}

id objc_msgSend_baseHref(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseHref");
}

id objc_msgSend_basePlusContentPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "basePlusContentPath");
}

id objc_msgSend_baseURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "baseURL");
}

id objc_msgSend_batchDeleteEntity_matching_prefetchRelationships_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchDeleteEntity:matching:prefetchRelationships:");
}

id objc_msgSend_batchEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchEnded:");
}

id objc_msgSend_batchJob(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "batchJob");
}

id objc_msgSend_bcTracker(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bcTracker");
}

id objc_msgSend_bc_accessibilityFontSizesEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_accessibilityFontSizesEnabled");
}

id objc_msgSend_bc_allAPITraits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_allAPITraits");
}

id objc_msgSend_bc_analyticsVisibilitySubtreeDidDisappear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilitySubtreeDidDisappear");
}

id objc_msgSend_bc_analyticsVisibilitySubtreeWillDisappear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilitySubtreeWillDisappear");
}

id objc_msgSend_bc_analyticsVisibilityUpdateSubtree(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_analyticsVisibilityUpdateSubtree");
}

id objc_msgSend_bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_applyTraitOverridesWithOverrideUserInterfaceStyleFromViewController:");
}

id objc_msgSend_bc_booksBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksBackground");
}

id objc_msgSend_bc_booksGreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksGreen");
}

id objc_msgSend_bc_booksKeyColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksKeyColor");
}

id objc_msgSend_bc_booksLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksLabelColor");
}

id objc_msgSend_bc_booksQuaternaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksQuaternaryLabelColor");
}

id objc_msgSend_bc_booksSecondaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksSecondaryLabelColor");
}

id objc_msgSend_bc_booksTertiaryLabelColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksTertiaryLabelColor");
}

id objc_msgSend_bc_booksWhite(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_booksWhite");
}

id objc_msgSend_bc_constraintsToFitInSuperviewCentered(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_constraintsToFitInSuperviewCentered");
}

id objc_msgSend_bc_contentSizeCategoryIsGreaterThan_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_contentSizeCategoryIsGreaterThan:");
}

id objc_msgSend_bc_contextualPresentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_contextualPresentedViewController");
}

id objc_msgSend_bc_cssFontFamily(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_cssFontFamily");
}

id objc_msgSend_bc_cssFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_cssFontSize");
}

id objc_msgSend_bc_cssFontWeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_cssFontWeight");
}

id objc_msgSend_bc_darkSystemBackgroundForTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_darkSystemBackgroundForTraitCollection:");
}

id objc_msgSend_bc_deepestPresentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_deepestPresentedViewController");
}

id objc_msgSend_bc_defaultPortraitStatusBarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_defaultPortraitStatusBarHeight");
}

id objc_msgSend_bc_fakeSourceView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_fakeSourceView");
}

id objc_msgSend_bc_imageWithConfiguration_limitedToContentSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_imageWithConfiguration:limitedToContentSizeCategory:");
}

id objc_msgSend_bc_invertedDynamicColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_invertedDynamicColor");
}

id objc_msgSend_bc_pathWithoutPrecedingSlash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_pathWithoutPrecedingSlash");
}

id objc_msgSend_bc_presentViewController_animated_tintColor_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_presentViewController:animated:tintColor:completion:");
}

id objc_msgSend_bc_presentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_presentingViewController");
}

id objc_msgSend_bc_readingExperienceBarItem_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_readingExperienceBarItem:target:action:");
}

id objc_msgSend_bc_realSourceBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_realSourceBarButtonItem");
}

id objc_msgSend_bc_redactedCFIString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_redactedCFIString");
}

id objc_msgSend_bc_rgbaHexValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_rgbaHexValue");
}

id objc_msgSend_bc_rgbaString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_rgbaString");
}

id objc_msgSend_bc_windowForViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bc_windowForViewController");
}

id objc_msgSend_be_PDFPageViewControllerClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_PDFPageViewControllerClass");
}

id objc_msgSend_be_addScriptMessageHandler_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_addScriptMessageHandler:name:");
}

id objc_msgSend_be_associatedPageViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_associatedPageViewController");
}

id objc_msgSend_be_autoScaleFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_autoScaleFactor");
}

id objc_msgSend_be_clearSelection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_clearSelection");
}

id objc_msgSend_be_contentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_contentView");
}

id objc_msgSend_be_estimatedContentSizeValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_estimatedContentSizeValue");
}

id objc_msgSend_be_evaluateJavaScript_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_evaluateJavaScript:completion:");
}

id objc_msgSend_be_hasSelectablePositionAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_hasSelectablePositionAtPoint:");
}

id objc_msgSend_be_hasSelection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_hasSelection");
}

id objc_msgSend_be_isEquivalentToURL_ignoringFragment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_isEquivalentToURL:ignoringFragment:");
}

id objc_msgSend_be_navigationHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_navigationHandler");
}

id objc_msgSend_be_overrideAutoScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_overrideAutoScale");
}

id objc_msgSend_be_pageLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_pageLength");
}

id objc_msgSend_be_pdfView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_pdfView");
}

id objc_msgSend_be_requestedContentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_requestedContentOffset");
}

id objc_msgSend_be_scale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_scale");
}

id objc_msgSend_be_selectForWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_selectForWebView:");
}

id objc_msgSend_be_selectionRects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_selectionRects");
}

id objc_msgSend_be_setContentOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_setContentOffset:");
}

id objc_msgSend_be_takeSnapshotWithDefaultConfigurationCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_takeSnapshotWithDefaultConfigurationCompletion:");
}

id objc_msgSend_be_textInputChild(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_textInputChild");
}

id objc_msgSend_be_uiHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_uiHandler");
}

id objc_msgSend_be_updateAXCurrentReadingStateWithMessage_forValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_updateAXCurrentReadingStateWithMessage:forValue:");
}

id objc_msgSend_be_updateAXValueForMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_updateAXValueForMessage:");
}

id objc_msgSend_be_useOverrideAutoScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_useOverrideAutoScale");
}

id objc_msgSend_be_webSelectionRects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_webSelectionRects");
}

id objc_msgSend_be_wkContentViewClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "be_wkContentViewClass");
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeFirstResponder");
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "begin");
}

id objc_msgSend_beginAppearanceTransition_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginAppearanceTransition:animated:");
}

id objc_msgSend_beginEditingMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginEditingMode");
}

id objc_msgSend_beginManualAnimationAtLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginManualAnimationAtLocation:");
}

id objc_msgSend_beginManualCurl_atLocation_inPage_fromPages_backPage_inContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginManualCurl:atLocation:inPage:fromPages:backPage:inContainer:");
}

id objc_msgSend_beginManualCurlAtLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginManualCurlAtLocation:");
}

id objc_msgSend_beginSearchWithReportAnalytics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginSearchWithReportAnalytics:");
}

id objc_msgSend_beginUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginUpdates");
}

id objc_msgSend_bezierPathWithOvalInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithOvalInRect:");
}

id objc_msgSend_bezierPathWithRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRect:");
}

id objc_msgSend_bezierPathWithRoundedRect_cornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithRoundedRect:cornerRadius:");
}

id objc_msgSend_bkAccessibilityAnnouncementString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkAccessibilityAnnouncementString");
}

id objc_msgSend_bkAccessibilityDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkAccessibilityDelegate");
}

id objc_msgSend_bkAccessibilityIsPageBookmarked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkAccessibilityIsPageBookmarked");
}

id objc_msgSend_bkEffectiveFontForText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkEffectiveFontForText:");
}

id objc_msgSend_bkLongPressGestureCanTransitionToRecognizedState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkLongPressGestureCanTransitionToRecognizedState:");
}

id objc_msgSend_bkPageProgressionDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkPageProgressionDirection");
}

id objc_msgSend_bkSetText_font_lineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkSetText:font:lineBreakMode:");
}

id objc_msgSend_bkSizeForString_constrainedToSize_font_lineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkSizeForString:constrainedToSize:font:lineBreakMode:");
}

id objc_msgSend_bkSizeForString_font_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkSizeForString:font:");
}

id objc_msgSend_bkTextHighlightTypeForIMTextHighlightType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkTextHighlightTypeForIMTextHighlightType:");
}

id objc_msgSend_bk_isWKSyntheticTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bk_isWKSyntheticTapGestureRecognizer");
}

id objc_msgSend_bkaxAccessibilityUserIsRequestingControlsVisibilityToggle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxAccessibilityUserIsRequestingControlsVisibilityToggle");
}

id objc_msgSend_bkaxDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxDelegate");
}

id objc_msgSend_bkaxIndentationDepth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxIndentationDepth");
}

id objc_msgSend_bkaxIsExcludedFromSample(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxIsExcludedFromSample");
}

id objc_msgSend_bkaxNeedsPersistentControls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxNeedsPersistentControls");
}

id objc_msgSend_bkaxNoteLabelText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxNoteLabelText");
}

id objc_msgSend_bkaxPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxPageNumber");
}

id objc_msgSend_bkaxProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxProgress");
}

id objc_msgSend_bkaxTarget(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxTarget");
}

id objc_msgSend_bkaxTextLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxTextLabel");
}

id objc_msgSend_bkaxThumb(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bkaxThumb");
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blackColor");
}

id objc_msgSend_blockOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blockOperationWithBlock:");
}

id objc_msgSend_blueTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "blueTheme:");
}

id objc_msgSend_body(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "body");
}

id objc_msgSend_bodyLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bodyLabel");
}

id objc_msgSend_bodyTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bodyTopConstraint");
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldSystemFontOfSize:");
}

id objc_msgSend_book(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "book");
}

id objc_msgSend_bookAnnotationProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookAnnotationProvider");
}

id objc_msgSend_bookAuthor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookAuthor");
}

id objc_msgSend_bookAuthorLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookAuthorLabel");
}

id objc_msgSend_bookAuthorTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookAuthorTopConstraint");
}

id objc_msgSend_bookBundlePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookBundlePath");
}

id objc_msgSend_bookCachedDataPathForBookWithKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookCachedDataPathForBookWithKey:");
}

id objc_msgSend_bookCanBeBookmarked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookCanBeBookmarked");
}

id objc_msgSend_bookContainerView_beginManualCurl_atLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerView:beginManualCurl:atLocation:completion:");
}

id objc_msgSend_bookContainerView_cancelManualCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerView:cancelManualCurl:");
}

id objc_msgSend_bookContainerView_finishManualCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerView:finishManualCurl:");
}

id objc_msgSend_bookContainerView_hasMediaElementUnderTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerView:hasMediaElementUnderTouch:");
}

id objc_msgSend_bookContainerView_pageTurnShouldRequireFailureOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerView:pageTurnShouldRequireFailureOf:");
}

id objc_msgSend_bookContainerView_tapToTurnPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerView:tapToTurnPages:");
}

id objc_msgSend_bookContainerView_turnChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerView:turnChapter:");
}

id objc_msgSend_bookContainerView_turnPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerView:turnPages:");
}

id objc_msgSend_bookContainerView_updateManualCurl_toLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerView:updateManualCurl:toLocation:");
}

id objc_msgSend_bookContainerViewShouldBeginManualCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerViewShouldBeginManualCurl:");
}

id objc_msgSend_bookContainerViewShouldTurnPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContainerViewShouldTurnPage:");
}

id objc_msgSend_bookContentDidLoad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContentDidLoad");
}

id objc_msgSend_bookContentSubpath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContentSubpath");
}

id objc_msgSend_bookContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContentView");
}

id objc_msgSend_bookContentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContentViewController");
}

id objc_msgSend_bookContentViewControllerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContentViewControllerView");
}

id objc_msgSend_bookContentViewImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookContentViewImage:");
}

id objc_msgSend_bookCoverEdgeInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookCoverEdgeInsets");
}

id objc_msgSend_bookDatabaseKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookDatabaseKey");
}

id objc_msgSend_bookDescriptionForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookDescriptionForAssetID:");
}

id objc_msgSend_bookEnvironment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookEnvironment");
}

id objc_msgSend_bookEpubId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookEpubId");
}

id objc_msgSend_bookEpubIdFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookEpubIdFromPlistEntry:");
}

id objc_msgSend_bookEpubIdWithUUIDScheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookEpubIdWithUUIDScheme");
}

id objc_msgSend_bookExtraInfoCacheDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookExtraInfoCacheDirectory");
}

id objc_msgSend_bookFormatByFilePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookFormatByFilePath:");
}

id objc_msgSend_bookFromDatabaseKey_withMOC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookFromDatabaseKey:withMOC:");
}

id objc_msgSend_bookID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookID");
}

id objc_msgSend_bookIndexWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookIndexWithName:");
}

id objc_msgSend_bookInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookInfo");
}

id objc_msgSend_bookInfoForURL_fromManagedObjectContext_error_needsCoordination_updateDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookInfoForURL:fromManagedObjectContext:error:needsCoordination:updateDate:");
}

id objc_msgSend_bookInfoSnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookInfoSnapshot");
}

id objc_msgSend_bookLanguage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookLanguage");
}

id objc_msgSend_bookMilestoneReached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookMilestoneReached:");
}

id objc_msgSend_bookObjectID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookObjectID");
}

id objc_msgSend_bookPositionProcessor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookPositionProcessor");
}

id objc_msgSend_bookSectionChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookSectionChanged:");
}

id objc_msgSend_bookSectionWithStartPosition_endPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookSectionWithStartPosition:endPosition:");
}

id objc_msgSend_bookSnapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookSnapshot");
}

id objc_msgSend_bookTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookTitle");
}

id objc_msgSend_bookTitleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookTitleLabel");
}

id objc_msgSend_bookTitleTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookTitleTopConstraint");
}

id objc_msgSend_bookURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookURL");
}

id objc_msgSend_bookViewDidAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookViewDidAppear:");
}

id objc_msgSend_bookViewWillDisappear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookViewWillDisappear:");
}

id objc_msgSend_bookmarkHotspotDimensionForBookContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarkHotspotDimensionForBookContainerView:");
}

id objc_msgSend_bookmarkObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarkObservers");
}

id objc_msgSend_bookmarkPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarkPage:");
}

id objc_msgSend_bookmarkPageCounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarkPageCounts");
}

id objc_msgSend_bookmarkTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarkTime");
}

id objc_msgSend_bookmarkTimeTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarkTimeTimestamp");
}

id objc_msgSend_bookmarkedPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarkedPages");
}

id objc_msgSend_bookmarks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarks");
}

id objc_msgSend_bookmarksChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarksChanged");
}

id objc_msgSend_bookmarksFetchRequestForBook_moc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarksFetchRequestForBook:moc:");
}

id objc_msgSend_bookmarksFetchedResultsController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarksFetchedResultsController");
}

id objc_msgSend_bookmarksUpdated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bookmarksUpdated");
}

id objc_msgSend_books_chapterBackward_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_chapterBackward:");
}

id objc_msgSend_books_chapterForward_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_chapterForward:");
}

id objc_msgSend_books_disableContinuousScroll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_disableContinuousScroll:");
}

id objc_msgSend_books_enableContinuousScroll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_enableContinuousScroll:");
}

id objc_msgSend_books_pageBackward_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_pageBackward:");
}

id objc_msgSend_books_pageForward_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_pageForward:");
}

id objc_msgSend_books_pageLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_pageLeft:");
}

id objc_msgSend_books_pageRight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_pageRight:");
}

id objc_msgSend_books_showBookmarks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_showBookmarks:");
}

id objc_msgSend_books_showContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_showContent:");
}

id objc_msgSend_books_showTableOfContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_showTableOfContents:");
}

id objc_msgSend_books_showThumbnails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "books_showThumbnails:");
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLValue");
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomAnchor");
}

id objc_msgSend_bottomBarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomBarHeight");
}

id objc_msgSend_bottomFullWidthToolbarFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomFullWidthToolbarFrame");
}

id objc_msgSend_bottomLeftToolbarFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomLeftToolbarFrame");
}

id objc_msgSend_bottomPadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomPadding");
}

id objc_msgSend_bottomPagesView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomPagesView");
}

id objc_msgSend_bottomRightToolbarFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomRightToolbarFrame");
}

id objc_msgSend_bottomViewFromCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomViewFromCenter");
}

id objc_msgSend_bottomViewToCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bottomViewToCenter");
}

id objc_msgSend_boundingRectWithSize_options_attributes_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:attributes:context:");
}

id objc_msgSend_boundingRectWithSize_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingRectWithSize:options:context:");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_boundsForBox_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundsForBox:");
}

id objc_msgSend_boundsForPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundsForPage:");
}

id objc_msgSend_brightness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "brightness");
}

id objc_msgSend_brightnessController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "brightnessController");
}

id objc_msgSend_brightnessSlider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "brightnessSlider");
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bringSubviewToFront:");
}

id objc_msgSend_bu_arrayByInvokingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_arrayByInvokingBlock:");
}

id objc_msgSend_bu_dataURIString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_dataURIString");
}

id objc_msgSend_bu_fileAllocatedSizeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_fileAllocatedSizeWithError:");
}

id objc_msgSend_bu_indexOfObjectWithValue_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_indexOfObjectWithValue:forKeyPath:");
}

id objc_msgSend_bu_isNoSuchFileError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_isNoSuchFileError");
}

id objc_msgSend_bu_sha256(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_sha256");
}

id objc_msgSend_bu_sharedAccountStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bu_sharedAccountStore");
}

id objc_msgSend_buildContextTree_forBook_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buildContextTree:forBook:completion:");
}

id objc_msgSend_bumpAnnotationVersionToMinimumVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bumpAnnotationVersionToMinimumVersion:");
}

id objc_msgSend_bumpReadingLocationAnnotationVersionToMinimumVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bumpReadingLocationAnnotationVersionToMinimumVersion:");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_button(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "button");
}

id objc_msgSend_buttonColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonColor");
}

id objc_msgSend_buttonContainerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonContainerView");
}

id objc_msgSend_buttonContainerWidthConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonContainerWidthConstraint");
}

id objc_msgSend_buttonFillColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonFillColor");
}

id objc_msgSend_buttonTitleColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonTitleColor");
}

id objc_msgSend_buttonWithConfiguration_primaryAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithConfiguration:primaryAction:");
}

id objc_msgSend_buttonWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buttonWithType:");
}

id objc_msgSend_buyButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyButton");
}

id objc_msgSend_buyButtonColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyButtonColor");
}

id objc_msgSend_buyButtonTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyButtonTopConstraint");
}

id objc_msgSend_buyDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyDelegate");
}

id objc_msgSend_buyWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "buyWithCompletion:");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bytes");
}

id objc_msgSend_cStringUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cStringUsingEncoding:");
}

id objc_msgSend_cacheForPath_maxSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheForPath:maxSize:");
}

id objc_msgSend_cacheItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheItem");
}

id objc_msgSend_cacheKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheKey");
}

id objc_msgSend_cacheQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cacheQueue");
}

id objc_msgSend_cachedContentData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedContentData");
}

id objc_msgSend_cachedFallbackInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedFallbackInfo");
}

id objc_msgSend_cachedImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedImage");
}

id objc_msgSend_cachedRowContents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedRowContents");
}

id objc_msgSend_cachedVisibleRectForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cachedVisibleRectForAnnotation:");
}

id objc_msgSend_calculateFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calculateFontSize");
}

id objc_msgSend_calculateFramesAtScale_contentFrame_leftContentFrame_rightContentFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calculateFramesAtScale:contentFrame:leftContentFrame:rightContentFrame:");
}

id objc_msgSend_calculatePageCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calculatePageCount");
}

id objc_msgSend_calculatePageCountExcludingUpsell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calculatePageCountExcludingUpsell");
}

id objc_msgSend_calculatePasswordRequired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calculatePasswordRequired");
}

id objc_msgSend_calculatingPageLocations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calculatingPageLocations");
}

id objc_msgSend_callout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "callout");
}

id objc_msgSend_calloutImageSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "calloutImageSize");
}

id objc_msgSend_canAirDrop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canAirDrop");
}

id objc_msgSend_canBeEdited(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canBeEdited");
}

id objc_msgSend_canChangeBrightness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canChangeBrightness");
}

id objc_msgSend_canCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canCopy");
}

id objc_msgSend_canCopyContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canCopyContent");
}

id objc_msgSend_canDecreaseFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDecreaseFontSize");
}

id objc_msgSend_canDismissControls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canDismissControls");
}

id objc_msgSend_canEmailBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canEmailBook");
}

id objc_msgSend_canGoToNextPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canGoToNextPage");
}

id objc_msgSend_canGoToPreviousPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canGoToPreviousPage");
}

id objc_msgSend_canIncreaseFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canIncreaseFontSize");
}

id objc_msgSend_canMarkupAsPDF(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canMarkupAsPDF");
}

id objc_msgSend_canNavigateByChapter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canNavigateByChapter");
}

id objc_msgSend_canOrdinalOnlyLocationsBeVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canOrdinalOnlyLocationsBeVisible");
}

id objc_msgSend_canPerformAction_withSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPerformAction:withSender:");
}

id objc_msgSend_canPrintBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPrintBook");
}

id objc_msgSend_canPrintURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canPrintURL:");
}

id objc_msgSend_canSearch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canSearch");
}

id objc_msgSend_canShowBookmarks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canShowBookmarks");
}

id objc_msgSend_canShowContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canShowContent");
}

id objc_msgSend_canShowControlsDuringOpenClose(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canShowControlsDuringOpenClose");
}

id objc_msgSend_canShowTableOfContents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canShowTableOfContents");
}

id objc_msgSend_canShowThumbnails(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canShowThumbnails");
}

id objc_msgSend_canUpdateLibraryBarButtonItem_withOldString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canUpdateLibraryBarButtonItem:withOldString:");
}

id objc_msgSend_canZoomMore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canZoomMore");
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancel");
}

id objc_msgSend_cancelActions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelActions");
}

id objc_msgSend_cancelAllOperations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelAllOperations");
}

id objc_msgSend_cancelDownload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelDownload");
}

id objc_msgSend_cancelFindString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelFindString");
}

id objc_msgSend_cancelManualAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelManualAnimation");
}

id objc_msgSend_cancelManualCurl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelManualCurl");
}

id objc_msgSend_cancelPagination(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPagination");
}

id objc_msgSend_cancelPendingHidePageControls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPendingHidePageControls");
}

id objc_msgSend_cancelPendingRenderRequests(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPendingRenderRequests");
}

id objc_msgSend_cancelPendingSavePageControlVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPendingSavePageControlVisibility");
}

id objc_msgSend_cancelPreloadForContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreloadForContent:");
}

id objc_msgSend_cancelPreviousPerformRequestsWithTarget_selector_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelPreviousPerformRequestsWithTarget:selector:object:");
}

id objc_msgSend_cancelRecognizing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRecognizing");
}

id objc_msgSend_cancelRenderingCacheOperationsForTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRenderingCacheOperationsForTarget:");
}

id objc_msgSend_cancelRenderingCacheOperationsForTarget_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelRenderingCacheOperationsForTarget:context:");
}

id objc_msgSend_cancelSearch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cancelSearch");
}

id objc_msgSend_candidateIdentifiersForStringQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "candidateIdentifiersForStringQuery:");
}

id objc_msgSend_canonicalLanguageIdentifierFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canonicalLanguageIdentifierFromString:");
}

id objc_msgSend_canonicalPathFromURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canonicalPathFromURL:");
}

id objc_msgSend_capitalizedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "capitalizedString");
}

id objc_msgSend_captureSelectionRectValueForTap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "captureSelectionRectValueForTap:");
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_catalystToolbarActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "catalystToolbarActive");
}

id objc_msgSend_cell_matchesPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cell:matchesPageNumber:");
}

id objc_msgSend_cellAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellAspectRatio");
}

id objc_msgSend_cellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellAtIndex:");
}

id objc_msgSend_cellClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellClass");
}

id objc_msgSend_cellContentWithHeight_cacheKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellContentWithHeight:cacheKey:");
}

id objc_msgSend_cellForIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForIndex:");
}

id objc_msgSend_cellForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellForRowAtIndexPath:");
}

id objc_msgSend_cellHeightForCellWidth_chapterString_dateString_pageString_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellHeightForCellWidth:chapterString:dateString:pageString:layoutDirection:");
}

id objc_msgSend_cellHeightForCellWidth_pageLabelWidth_text_indentationLevel_indentationWidth_font_usesPopoverStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellHeightForCellWidth:pageLabelWidth:text:indentationLevel:indentationWidth:font:usesPopoverStyle:");
}

id objc_msgSend_cellHeightInPopoverForBounds_highlightFont_annotation_dateString_pageString_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellHeightInPopoverForBounds:highlightFont:annotation:dateString:pageString:layoutDirection:");
}

id objc_msgSend_cellLoadingOperationCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellLoadingOperationCount");
}

id objc_msgSend_cellSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellSize");
}

id objc_msgSend_cellWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cellWidth");
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "center");
}

id objc_msgSend_centerContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerContent");
}

id objc_msgSend_centerWebView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerWebView");
}

id objc_msgSend_centerXAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerXAnchor");
}

id objc_msgSend_centerYAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centerYAnchor");
}

id objc_msgSend_centeringInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "centeringInsets");
}

id objc_msgSend_cfi(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfi");
}

id objc_msgSend_cfiForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiForAnnotation:");
}

id objc_msgSend_cfiForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiForLocation:");
}

id objc_msgSend_cfiOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiOptions");
}

id objc_msgSend_cfiSetWithCFIString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiSetWithCFIString:");
}

id objc_msgSend_cfiString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiString");
}

id objc_msgSend_cfiUtilitiesJSOptionsForBookInfoSnapshot_ordinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiUtilitiesJSOptionsForBookInfoSnapshot:ordinal:");
}

id objc_msgSend_cfiWithAdjustedSpineIndex_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiWithAdjustedSpineIndex:error:");
}

id objc_msgSend_cfiWithSpineIndexAdjustedUsingAssertionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiWithSpineIndexAdjustedUsingAssertionBlock:");
}

id objc_msgSend_cfiWithString_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfiWithString:error:");
}

id objc_msgSend_cfisForHrefs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfisForHrefs");
}

id objc_msgSend_cfisForHrefsScript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cfisForHrefsScript:");
}

id objc_msgSend_changeAnnotationStyle_annotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "changeAnnotationStyle:annotation:");
}

id objc_msgSend_chapterArrayWithLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterArrayWithLookupKey:");
}

id objc_msgSend_chapterFontForPopover(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterFontForPopover");
}

id objc_msgSend_chapterForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterForIndexPath:");
}

id objc_msgSend_chapterForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterForPageNumber:");
}

id objc_msgSend_chapterIndexForHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterIndexForHref:");
}

id objc_msgSend_chapterIndexForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterIndexForPageNumber:");
}

id objc_msgSend_chapterIndexForPageNumber_getFirstChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterIndexForPageNumber:getFirstChapter:");
}

id objc_msgSend_chapterInfoForCurrentNode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterInfoForCurrentNode");
}

id objc_msgSend_chapterInfoForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterInfoForPageNumber:");
}

id objc_msgSend_chapterSubLevelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterSubLevelFont");
}

id objc_msgSend_chapterTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterTitle");
}

id objc_msgSend_chapterTitleForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterTitleForLocation:");
}

id objc_msgSend_chapterTitleForOrdinal_pageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterTitleForOrdinal:pageOffset:");
}

id objc_msgSend_chapterTitleFrameForString_font_bounds_pageLabelFrame_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterTitleFrameForString:font:bounds:pageLabelFrame:layoutDirection:");
}

id objc_msgSend_chapterTitleFrameForString_font_letMargin_numberOfLines_bounds_pageLabelFrame_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterTitleFrameForString:font:letMargin:numberOfLines:bounds:pageLabelFrame:layoutDirection:");
}

id objc_msgSend_chapterTitleFrameInPopoverForString_font_bounds_pageLabelFrame_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterTitleFrameInPopoverForString:font:bounds:pageLabelFrame:layoutDirection:");
}

id objc_msgSend_chapterTopLevelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapterTopLevelFont");
}

id objc_msgSend_chapters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "chapters");
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterSetWithCharactersInString:");
}

id objc_msgSend_characterSetWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterSetWithRange:");
}

id objc_msgSend_charactersPerLine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "charactersPerLine");
}

id objc_msgSend_checkStateSynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkStateSynchronously:");
}

id objc_msgSend_checkStateSynchronously_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkStateSynchronously:completion:");
}

id objc_msgSend_checkmarkHeightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkmarkHeightConstraint");
}

id objc_msgSend_checkmarkImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkmarkImageView");
}

id objc_msgSend_checkmarkTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkmarkTopConstraint");
}

id objc_msgSend_checkmarkWidthConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkmarkWidthConstraint");
}

id objc_msgSend_childAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childAtIndex:");
}

id objc_msgSend_childDictionaryReferencesParent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childDictionaryReferencesParent:");
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "childViewControllers");
}

id objc_msgSend_citationAllowedForStoreFrontID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "citationAllowedForStoreFrontID:");
}

id objc_msgSend_classForResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "classForResource:");
}

id objc_msgSend_classNameFromChapterInfo_excludedFromSample_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "classNameFromChapterInfo:excludedFromSample:");
}

id objc_msgSend_classicScrubberHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "classicScrubberHeight");
}

id objc_msgSend_cleanDocumentForMediaOverlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanDocumentForMediaOverlay");
}

id objc_msgSend_cleanup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanup");
}

id objc_msgSend_cleanupAfterRotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupAfterRotation");
}

id objc_msgSend_cleanupJSOptionsForBookInfoSnapshot_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupJSOptionsForBookInfoSnapshot:withConfiguration:");
}

id objc_msgSend_cleanupOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupOptions");
}

id objc_msgSend_cleanupPopovers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cleanupPopovers");
}

id objc_msgSend_clear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clear");
}

id objc_msgSend_clearAvoidSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearAvoidSync");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_clearCurrentHighlighting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearCurrentHighlighting");
}

id objc_msgSend_clearHighlights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearHighlights");
}

id objc_msgSend_clearHighlightsForSearchResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearHighlightsForSearchResults");
}

id objc_msgSend_clearInactiveContentViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearInactiveContentViewControllers");
}

id objc_msgSend_clearMediaOverlayElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearMediaOverlayElement:");
}

id objc_msgSend_clearNativeObjectCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearNativeObjectCache");
}

id objc_msgSend_clearPaginationResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearPaginationResults");
}

id objc_msgSend_clearSearchResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSearchResult");
}

id objc_msgSend_clearSearchResultForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSearchResultForContentViewController:");
}

id objc_msgSend_clearSelectedAnnotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSelectedAnnotation");
}

id objc_msgSend_clearSelection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSelection");
}

id objc_msgSend_clearSelectionHighlights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearSelectionHighlights");
}

id objc_msgSend_clientApplicationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientApplicationController");
}

id objc_msgSend_clientRectForEpubLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRectForEpubLocation:completion:");
}

id objc_msgSend_clientRectsForLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRectsForLocation:completion:");
}

id objc_msgSend_clientRectsForLocations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clientRectsForLocations:completion:");
}

id objc_msgSend_close_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "close:");
}

id objc_msgSend_closeIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeIndex");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "code");
}

id objc_msgSend_collapsedLineRectsFromArrayOfRectDictionaries_isVerticalDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collapsedLineRectsFromArrayOfRectDictionaries:isVerticalDocument:");
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithAlphaComponent:");
}

id objc_msgSend_colorWithDynamicProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithDynamicProvider:");
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithRed:green:blue:alpha:");
}

id objc_msgSend_colorWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithWhite:alpha:");
}

id objc_msgSend_colors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colors");
}

id objc_msgSend_commandWithTitle_image_action_input_modifierFlags_propertyList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandWithTitle:image:action:input:modifierFlags:propertyList:");
}

id objc_msgSend_commandWithTitle_image_action_propertyList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commandWithTitle:image:action:propertyList:");
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commit");
}

id objc_msgSend_compactWidthPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compactWidthPredicate");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_compare_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:range:");
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completion");
}

id objc_msgSend_completionBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "completionBlock");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_compressionAlgorithm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compressionAlgorithm");
}

id objc_msgSend_conditional(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conditional");
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configuration");
}

id objc_msgSend_configurationHasABookCover(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationHasABookCover");
}

id objc_msgSend_configurationHasABottomLeftToolbar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationHasABottomLeftToolbar");
}

id objc_msgSend_configurationHasATopLeftToolbar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationHasATopLeftToolbar");
}

id objc_msgSend_configurationWithActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithActions:");
}

id objc_msgSend_configurationWithFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithFont:");
}

id objc_msgSend_configurationWithFont_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithFont:scale:");
}

id objc_msgSend_configurationWithIdentifier_previewProvider_actionProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithIdentifier:previewProvider:actionProvider:");
}

id objc_msgSend_configurationWithPointSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:");
}

id objc_msgSend_configurationWithPointSize_weight_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithPointSize:weight:scale:");
}

id objc_msgSend_configurationWithTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithTextStyle:");
}

id objc_msgSend_configurationWithTextStyle_scale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configurationWithTextStyle:scale:");
}

id objc_msgSend_configureCell_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureCell:atIndex:");
}

id objc_msgSend_configureCell_atIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureCell:atIndexPath:");
}

id objc_msgSend_configureCell_pageRange_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureCell:pageRange:context:");
}

id objc_msgSend_configureFocusRing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureFocusRing");
}

id objc_msgSend_configureForImageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureForImageSize:");
}

id objc_msgSend_configureForNewBoundsAndRestoreCenterPoint_andScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureForNewBoundsAndRestoreCenterPoint:andScale:");
}

id objc_msgSend_configureHorizontalScrollSwitchCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureHorizontalScrollSwitchCell:");
}

id objc_msgSend_configureRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureRequest");
}

id objc_msgSend_configureScrollSwitchCell_text_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureScrollSwitchCell:text:");
}

id objc_msgSend_configureSelectedBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureSelectedBackgroundView");
}

id objc_msgSend_configureVerticalScrollSwitchCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureVerticalScrollSwitchCell:");
}

id objc_msgSend_configureWithPageString_dateString_insets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithPageString:dateString:insets:");
}

id objc_msgSend_configureWithProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "configureWithProfile:");
}

id objc_msgSend_confirmBagContents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "confirmBagContents");
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_constrainedScrollToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constrainedScrollToPoint:");
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:");
}

id objc_msgSend_constraintEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:constant:");
}

id objc_msgSend_constraintEqualToAnchor_multiplier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:multiplier:");
}

id objc_msgSend_constraintEqualToAnchor_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToAnchor:multiplier:constant:");
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintEqualToConstant:");
}

id objc_msgSend_constraintGreaterThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintGreaterThanOrEqualToConstant:");
}

id objc_msgSend_constraintLessThanOrEqualToAnchor_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintLessThanOrEqualToAnchor:constant:");
}

id objc_msgSend_constraintWithItem_attribute_relatedBy_toItem_attribute_multiplier_constant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:");
}

id objc_msgSend_constraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constraints");
}

id objc_msgSend_constructBKDocumentWithPdfTocParser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructBKDocumentWithPdfTocParser:");
}

id objc_msgSend_constructBKDocumentWithReadable_chapters_landmarks_physicalPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructBKDocumentWithReadable:chapters:landmarks:physicalPages:");
}

id objc_msgSend_constructBKIdCfiMappingsWithEpub_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructBKIdCfiMappingsWithEpub:");
}

id objc_msgSend_constructBKLandmarkInfoWithReadable_withAnchorInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructBKLandmarkInfoWithReadable:withAnchorInfo:");
}

id objc_msgSend_constructBKNavigationInfoWithPdfTocEntry_absoluteOrder_indentationLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructBKNavigationInfoWithPdfTocEntry:absoluteOrder:indentationLevel:");
}

id objc_msgSend_constructBKNavigationInfoWithPdfTocParser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructBKNavigationInfoWithPdfTocParser:");
}

id objc_msgSend_constructBKNavigationInfoWithReadable_withAnchorInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructBKNavigationInfoWithReadable:withAnchorInfo:");
}

id objc_msgSend_constructBKPhysicalPageWithReadable_withAnchorInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructBKPhysicalPageWithReadable:withAnchorInfo:");
}

id objc_msgSend_constructBKProtectionInfoWithReadable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructBKProtectionInfoWithReadable:");
}

id objc_msgSend_constructEntity_withNavPoint_absoluteOrder_indentationLevel_withAnchorInfo_createdObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructEntity:withNavPoint:absoluteOrder:indentationLevel:withAnchorInfo:createdObjects:");
}

id objc_msgSend_constructViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "constructViews");
}

id objc_msgSend_container(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "container");
}

id objc_msgSend_containerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containerView");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_containsTextUnitWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsTextUnitWithIdentifier:");
}

id objc_msgSend_containsTextUnitWithOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsTextUnitWithOrdinal:");
}

id objc_msgSend_content(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "content");
}

id objc_msgSend_contentBasedOverlayRefreshScheduled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentBasedOverlayRefreshScheduled");
}

id objc_msgSend_contentBeganLoadingForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentBeganLoadingForRequest:");
}

id objc_msgSend_contentBlockingRule(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentBlockingRule");
}

id objc_msgSend_contentContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentContainer");
}

id objc_msgSend_contentContainerFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentContainerFrame");
}

id objc_msgSend_contentData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentData");
}

id objc_msgSend_contentDataForSearchViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentDataForSearchViewController:");
}

id objc_msgSend_contentFinishedLoadingForRequest_preferredHeight_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentFinishedLoadingForRequest:preferredHeight:error:");
}

id objc_msgSend_contentHasSpreadPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentHasSpreadPages");
}

id objc_msgSend_contentInfoRequestWithLocation_bookSnapshot_ordinal_configuration_stylesheetSet_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInfoRequestWithLocation:bookSnapshot:ordinal:configuration:stylesheetSet:completion:");
}

id objc_msgSend_contentInfoRequestWithPaginationOptions_cleanupOptions_cfiOptions_ordinal_stylesheetSet_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInfoRequestWithPaginationOptions:cleanupOptions:cfiOptions:ordinal:stylesheetSet:completion:");
}

id objc_msgSend_contentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInset");
}

id objc_msgSend_contentInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentInsets");
}

id objc_msgSend_contentIsPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentIsPages");
}

id objc_msgSend_contentLayoutSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentLayoutSize");
}

id objc_msgSend_contentLoadFailed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentLoadFailed");
}

id objc_msgSend_contentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentOffset");
}

id objc_msgSend_contentOffsetToScrollToForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentOffsetToScrollToForPageNumber:");
}

id objc_msgSend_contentOpenAnimator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentOpenAnimator");
}

id objc_msgSend_contentProcessDidTerminate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentProcessDidTerminate");
}

id objc_msgSend_contentReady(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentReady");
}

id objc_msgSend_contentRectForBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentRectForBounds:");
}

id objc_msgSend_contentRectForVisibleContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentRectForVisibleContent");
}

id objc_msgSend_contentRectForVisiblePage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentRectForVisiblePage");
}

id objc_msgSend_contentScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentScale");
}

id objc_msgSend_contentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentSize");
}

id objc_msgSend_contentSubType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentSubType");
}

id objc_msgSend_contentTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentTextColor");
}

id objc_msgSend_contentToViewTopAnchorConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentToViewTopAnchorConstraint");
}

id objc_msgSend_contentType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentType");
}

id objc_msgSend_contentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentView");
}

id objc_msgSend_contentView_didSelectMediaOverlayElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentView:didSelectMediaOverlayElement:");
}

id objc_msgSend_contentView_unhandledClickAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentView:unhandledClickAtPoint:");
}

id objc_msgSend_contentViewController_addAnnotation_location_selectedText_representativeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:addAnnotation:location:selectedText:representativeText:");
}

id objc_msgSend_contentViewController_didUpdateCurrentVisibleCFILocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:didUpdateCurrentVisibleCFILocation:");
}

id objc_msgSend_contentViewController_encounteredIssueWithContent_failureCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:encounteredIssueWithContent:failureCount:");
}

id objc_msgSend_contentViewController_expandAnnotation_location_selectedText_representativeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:expandAnnotation:location:selectedText:representativeText:");
}

id objc_msgSend_contentViewController_goToURL_likelyUserInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:goToURL:likelyUserInitiated:");
}

id objc_msgSend_contentViewController_handleUserRequestForFrameToLoadExternalURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:handleUserRequestForFrameToLoadExternalURL:completion:");
}

id objc_msgSend_contentViewController_hostViewForActivityIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:hostViewForActivityIndicator:");
}

id objc_msgSend_contentViewController_locationRectsForAnnotations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:locationRectsForAnnotations:");
}

id objc_msgSend_contentViewController_navigatePageDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:navigatePageDirection:");
}

id objc_msgSend_contentViewController_presentAlertController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:presentAlertController:completion:");
}

id objc_msgSend_contentViewController_searchEncyclopediaForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:searchEncyclopediaForString:");
}

id objc_msgSend_contentViewController_searchForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:searchForString:");
}

id objc_msgSend_contentViewController_searchWebForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:searchWebForString:");
}

id objc_msgSend_contentViewController_setEndOfBookToLocation_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:setEndOfBookToLocation:range:");
}

id objc_msgSend_contentViewController_setFinishedAndCloseForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:setFinishedAndCloseForAssetID:");
}

id objc_msgSend_contentViewController_setReadAloudState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:setReadAloudState:");
}

id objc_msgSend_contentViewController_setSearchString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:setSearchString:");
}

id objc_msgSend_contentViewController_setTurnState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:setTurnState:");
}

id objc_msgSend_contentViewController_shareAnnotation_annotationRects_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:shareAnnotation:annotationRects:completion:");
}

id objc_msgSend_contentViewController_showExpandedContentForResource_atLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:showExpandedContentForResource:atLocation:");
}

id objc_msgSend_contentViewController_showHighlightingMenuForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:showHighlightingMenuForAnnotation:");
}

id objc_msgSend_contentViewController_showLookupForString_fromView_onClose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:showLookupForString:fromView:onClose:");
}

id objc_msgSend_contentViewController_showNoteForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:showNoteForAnnotation:");
}

id objc_msgSend_contentViewController_showTranslateForText_fromView_onClose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewController:showTranslateForText:fromView:onClose:");
}

id objc_msgSend_contentViewControllerAnnotationCacheDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerAnnotationCacheDidChange:");
}

id objc_msgSend_contentViewControllerAnnotationsDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerAnnotationsDidChange:");
}

id objc_msgSend_contentViewControllerAttemptingReload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerAttemptingReload:");
}

id objc_msgSend_contentViewControllerDidEnterFullscreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerDidEnterFullscreen:");
}

id objc_msgSend_contentViewControllerDidExitFullscreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerDidExitFullscreen:");
}

id objc_msgSend_contentViewControllerDidFinishLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerDidFinishLayout:");
}

id objc_msgSend_contentViewControllerForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerForAnnotation:");
}

id objc_msgSend_contentViewControllerForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerForLocation:");
}

id objc_msgSend_contentViewControllerForMediaOverlayElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerForMediaOverlayElement:");
}

id objc_msgSend_contentViewControllerForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerForPageNumber:");
}

id objc_msgSend_contentViewControllerIgnoreNextSwipe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerIgnoreNextSwipe:");
}

id objc_msgSend_contentViewControllerReadAloudState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerReadAloudState");
}

id objc_msgSend_contentViewControllerWillExitFullscreen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllerWillExitFullscreen:");
}

id objc_msgSend_contentViewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewControllers");
}

id objc_msgSend_contentViewFailedToLoad_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewFailedToLoad:error:");
}

id objc_msgSend_contentViewImage_afterScreenUpdates_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewImage:afterScreenUpdates:completion:");
}

id objc_msgSend_contentViewReady(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewReady");
}

id objc_msgSend_contentViewReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentViewReady:");
}

id objc_msgSend_contents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contents");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "context");
}

id objc_msgSend_contextDirectoryForAssetWithID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextDirectoryForAssetWithID:");
}

id objc_msgSend_contextualActionWithStyle_title_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextualActionWithStyle:title:handler:");
}

id objc_msgSend_contextualBottomViewFromCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextualBottomViewFromCenter");
}

id objc_msgSend_contextualBottomViewToCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextualBottomViewToCenter");
}

id objc_msgSend_contextualTopViewFromCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextualTopViewFromCenter");
}

id objc_msgSend_contextualTopViewToCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contextualTopViewToCenter");
}

id objc_msgSend_continueDownloading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueDownloading");
}

id objc_msgSend_continueLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueLabel");
}

id objc_msgSend_continueReadAloudAfterReady(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueReadAloudAfterReady");
}

id objc_msgSend_continueSearch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "continueSearch");
}

id objc_msgSend_controlSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlSize");
}

id objc_msgSend_controlsTapRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlsTapRecognizer");
}

id objc_msgSend_controlsVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "controlsVisible");
}

id objc_msgSend_convertPoint_fromLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:fromLayer:");
}

id objc_msgSend_convertPoint_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:fromView:");
}

id objc_msgSend_convertPoint_fromWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:fromWindow:");
}

id objc_msgSend_convertPoint_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:toView:");
}

id objc_msgSend_convertPoint_toWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:toWindow:");
}

id objc_msgSend_convertRect_fromPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:fromPage:");
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:fromView:");
}

id objc_msgSend_convertRect_toLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:toLayer:");
}

id objc_msgSend_convertRect_toView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRect:toView:");
}

id objc_msgSend_coordinateAccessWithIntents_queue_byAccessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinateAccessWithIntents:queue:byAccessor:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copy");
}

id objc_msgSend_copyCGImageForKey_resourceSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCGImageForKey:resourceSize:");
}

id objc_msgSend_copyCacheObjectForBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCacheObjectForBook:");
}

id objc_msgSend_copyCacheObjectForPdfPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCacheObjectForPdfPath:");
}

id objc_msgSend_copyCacheObjectForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyCacheObjectForURL:");
}

id objc_msgSend_copyContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyContent");
}

id objc_msgSend_copyDocumentArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyDocumentArray:");
}

id objc_msgSend_copyEntityPropertiesArray_fromEntityName_withPredicate_sortBy_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:");
}

id objc_msgSend_copyEntityProperty_fromEntityName_withPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyEntityProperty:fromEntityName:withPredicate:");
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyItemAtURL:toURL:error:");
}

id objc_msgSend_copyNavigationInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyNavigationInfos:");
}

id objc_msgSend_copyPropertiesFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyPropertiesFrom:");
}

id objc_msgSend_copyState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyState:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_countEntity_withPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countEntity:withPredicate:");
}

id objc_msgSend_countForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countForObject:");
}

id objc_msgSend_countMarkupAnnotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countMarkupAnnotations");
}

id objc_msgSend_countMarkupAnnotationsWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countMarkupAnnotationsWithCompletion:");
}

id objc_msgSend_countPaginatedChapters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countPaginatedChapters:");
}

id objc_msgSend_countPaginatedDocuments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countPaginatedDocuments:");
}

id objc_msgSend_countRowsOfChildren_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countRowsOfChildren:");
}

id objc_msgSend_coverImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverImage");
}

id objc_msgSend_coverNeedsUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverNeedsUpdate");
}

id objc_msgSend_coverPathFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverPathFromPlistEntry:");
}

id objc_msgSend_coverWebView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverWebView");
}

id objc_msgSend_coverWritingModeFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverWritingModeFromPlistEntry:");
}

id objc_msgSend_coverWritingModeString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coverWritingModeString");
}

id objc_msgSend_createBookExtraInfoCacheDirectoryIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createBookExtraInfoCacheDirectoryIfNecessary");
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createEpubParser_errorCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createEpubParser:errorCode:");
}

id objc_msgSend_createPaginationControllerIfNeeded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createPaginationControllerIfNeeded:");
}

id objc_msgSend_credential(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "credential");
}

id objc_msgSend_curlAnimationAngle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlAnimationAngle");
}

id objc_msgSend_curlAnimationBackColor0(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlAnimationBackColor0");
}

id objc_msgSend_curlAnimationBackColor1(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlAnimationBackColor1");
}

id objc_msgSend_curlAnimationRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlAnimationRadius");
}

id objc_msgSend_curlAnimationShadowColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlAnimationShadowColor");
}

id objc_msgSend_curlAnimationTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlAnimationTime");
}

id objc_msgSend_curlContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlContainer");
}

id objc_msgSend_curlPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlPage");
}

id objc_msgSend_curlPageForReadAloud_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlPageForReadAloud:");
}

id objc_msgSend_curlPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlPages");
}

id objc_msgSend_curlPages_backPage_inContainer_curlPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "curlPages:backPage:inContainer:curlPage:");
}

id objc_msgSend_current(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "current");
}

id objc_msgSend_currentAudiobook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentAudiobook");
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentDevice");
}

id objc_msgSend_currentEntity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentEntity");
}

id objc_msgSend_currentFirstVisbleCFILocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentFirstVisbleCFILocation");
}

id objc_msgSend_currentHighlightSearchSelection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHighlightSearchSelection");
}

id objc_msgSend_currentImage_withFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentImage:withFilter:");
}

id objc_msgSend_currentInfoRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentInfoRequest");
}

id objc_msgSend_currentLocale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLocale");
}

id objc_msgSend_currentLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLocation");
}

id objc_msgSend_currentLookupKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentLookupKey");
}

id objc_msgSend_currentMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentMode");
}

id objc_msgSend_currentOutline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentOutline");
}

id objc_msgSend_currentOverlayViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentOverlayViewController");
}

id objc_msgSend_currentPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPage");
}

id objc_msgSend_currentPageIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPageIndex");
}

id objc_msgSend_currentPageLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPageLocation");
}

id objc_msgSend_currentPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPageNumber");
}

id objc_msgSend_currentPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentPages");
}

id objc_msgSend_currentReachabilityStatus(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentReachabilityStatus");
}

id objc_msgSend_currentReadingPositionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentReadingPositionView");
}

id objc_msgSend_currentRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentRequest");
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentRunLoop");
}

id objc_msgSend_currentScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentScale");
}

id objc_msgSend_currentScrubber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentScrubber");
}

id objc_msgSend_currentSearchResultForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSearchResultForContentViewController:");
}

id objc_msgSend_currentSelection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSelection");
}

id objc_msgSend_currentSelectionCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSelectionCFI");
}

id objc_msgSend_currentSelectionContainsAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSelectionContainsAnchor");
}

id objc_msgSend_currentSoundtrack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSoundtrack");
}

id objc_msgSend_currentSymbolName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentSymbolName");
}

id objc_msgSend_currentTextSelection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTextSelection");
}

id objc_msgSend_currentTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTime");
}

id objc_msgSend_currentTraitCollectionLimitedToSizeCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentTraitCollectionLimitedToSizeCategory:");
}

id objc_msgSend_currentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentView");
}

id objc_msgSend_currentVisbleCFILocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentVisbleCFILocation");
}

id objc_msgSend_currentlyHighlighting(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentlyHighlighting");
}

id objc_msgSend_cursor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cursor");
}

id objc_msgSend_customContentWithAttributedLabel_attributedValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customContentWithAttributedLabel:attributedValue:");
}

id objc_msgSend_customView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "customView");
}

id objc_msgSend_darkGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "darkGrayColor");
}

id objc_msgSend_dataForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataForKey:");
}

id objc_msgSend_dataFromRange_documentAttributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromRange:documentAttributes:error:");
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataSource");
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:");
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:options:error:");
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithJSONObject:options:error:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_databaseKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseKey");
}

id objc_msgSend_databaseKeyFromLibraryManagerInfo_forAssetAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseKeyFromLibraryManagerInfo:forAssetAtURL:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "date");
}

id objc_msgSend_dateFontForPopover(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFontForPopover");
}

id objc_msgSend_dateFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFontSize");
}

id objc_msgSend_dateFormatter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFormatter");
}

id objc_msgSend_dateLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateLabel");
}

id objc_msgSend_dateLabelFrameForString_font_bounds_minY_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateLabelFrameForString:font:bounds:minY:layoutDirection:");
}

id objc_msgSend_dateLabelFrameForString_font_bounds_pageLabelFrame_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateLabelFrameForString:font:bounds:pageLabelFrame:layoutDirection:");
}

id objc_msgSend_dateLabelFrameInPopoverForString_font_bounds_minY_pageLabelFrame_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateLabelFrameInPopoverForString:font:bounds:minY:pageLabelFrame:layoutDirection:");
}

id objc_msgSend_dateLabelSizeForString_font_bounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateLabelSizeForString:font:bounds:");
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateWithTimeIntervalSinceNow:");
}

id objc_msgSend_deactivateConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deactivateConstraints:");
}

id objc_msgSend_debugDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "debugDescription");
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeBoolForKey:");
}

id objc_msgSend_decodeDoubleForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeDoubleForKey:");
}

id objc_msgSend_decodeFloatForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeFloatForKey:");
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeIntegerForKey:");
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_decreaseFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decreaseFontSize");
}

id objc_msgSend_defaultAnnotationCreatorIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultAnnotationCreatorIdentifier");
}

id objc_msgSend_defaultBag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultBag");
}

id objc_msgSend_defaultBookLibrary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultBookLibrary");
}

id objc_msgSend_defaultCellAspectRatio(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCellAspectRatio");
}

id objc_msgSend_defaultCellSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCellSize");
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultCenter");
}

id objc_msgSend_defaultDirectoryType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultDirectoryType");
}

id objc_msgSend_defaultFontNameForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultFontNameForLanguage:");
}

id objc_msgSend_defaultFontSizeIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultFontSizeIndex");
}

id objc_msgSend_defaultIdentityStore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultIdentityStore");
}

id objc_msgSend_defaultLayoutToUse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultLayoutToUse");
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultManager");
}

id objc_msgSend_defaultPageNumberHUDWidthConstraintConstant(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultPageNumberHUDWidthConstraintConstant");
}

id objc_msgSend_defaultPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultPredicate");
}

id objc_msgSend_defaultStatusBarHeightInOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultStatusBarHeightInOrientation:");
}

id objc_msgSend_defaultWebpagePreferences(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultWebpagePreferences");
}

id objc_msgSend_defaultWritingDirectionForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "defaultWritingDirectionForLanguage:");
}

id objc_msgSend_delay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delay");
}

id objc_msgSend_delayedSavePageControlVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delayedSavePageControlVisibility");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_deleteAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAnnotation:");
}

id objc_msgSend_deleteAnnotationAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteAnnotationAtIndexPath:");
}

id objc_msgSend_deleteCharactersInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCharactersInRange:");
}

id objc_msgSend_deleteObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteObject:");
}

id objc_msgSend_deleteParsedRelationships(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteParsedRelationships");
}

id objc_msgSend_deleteRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_deleteSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSections:withRowAnimation:");
}

id objc_msgSend_deleteSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSelected:");
}

id objc_msgSend_deleteSelectedAnnotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSelectedAnnotations");
}

id objc_msgSend_deleteSelfMaintainedRelationships(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSelfMaintainedRelationships");
}

id objc_msgSend_deleteSwipeAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteSwipeAction:");
}

id objc_msgSend_dequeueRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueRequest");
}

id objc_msgSend_dequeueReusableCell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCell");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:");
}

id objc_msgSend_dequeueReusableCellWithIdentifier_forIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:");
}

id objc_msgSend_dequeueReusableHeaderFooterViewWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dequeueReusableHeaderFooterViewWithIdentifier:");
}

id objc_msgSend_descender(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descender");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "description");
}

id objc_msgSend_descriptionLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionLabel");
}

id objc_msgSend_deselectRowAtIndexPath_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deselectRowAtIndexPath:animated:");
}

id objc_msgSend_deserializeLocationFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deserializeLocationFromDictionary:");
}

id objc_msgSend_desiredBoundsForNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredBoundsForNavigationController");
}

id objc_msgSend_desiredContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredContentSize");
}

id objc_msgSend_desiredPopoverWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredPopoverWidth");
}

id objc_msgSend_desiredSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredSize");
}

id objc_msgSend_desiredSleepTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredSleepTime");
}

id objc_msgSend_desiredWebViewFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "desiredWebViewFrame");
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destination");
}

id objc_msgSend_destroyFetchedResultsController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destroyFetchedResultsController");
}

id objc_msgSend_destroyIvars(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destroyIvars");
}

id objc_msgSend_destroyPersistentStoreAtURL_withType_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "destroyPersistentStoreAtURL:withType:options:error:");
}

id objc_msgSend_detailTextLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "detailTextLabel");
}

id objc_msgSend_determinedOriginalFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "determinedOriginalFont");
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionary");
}

id objc_msgSend_dictionaryForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryForKey:");
}

id objc_msgSend_dictionaryRepresentationsForAnnotations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryRepresentationsForAnnotations:");
}

id objc_msgSend_dictionaryResultForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryResultForKey:");
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithCapacity:");
}

id objc_msgSend_dictionaryWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfFile:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dictionaryWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjectsAndKeys:");
}

id objc_msgSend_dictionaryWithValuesForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithValuesForKeys:");
}

id objc_msgSend_didAccessValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didAccessValueForKey:");
}

id objc_msgSend_didChangeLocationClosing_suspending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeLocationClosing:suspending:");
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeValueForKey:");
}

id objc_msgSend_didChangeValueForKey_withSetMutation_usingObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didChangeValueForKey:withSetMutation:usingObjects:");
}

id objc_msgSend_didCloseBookWithAssetID_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didCloseBookWithAssetID:completion:");
}

id objc_msgSend_didComputeMailingAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didComputeMailingAllowed");
}

id objc_msgSend_didComputePrintingAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didComputePrintingAllowed");
}

id objc_msgSend_didFinishLoading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFinishLoading");
}

id objc_msgSend_didFinishRendering(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFinishRendering");
}

id objc_msgSend_didFinishUpdateForAssetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didFinishUpdateForAssetViewController:");
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didMoveToParentViewController:");
}

id objc_msgSend_didReceiveMemoryWarning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReceiveMemoryWarning");
}

id objc_msgSend_didSelectBookmarkForLocation_annotationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSelectBookmarkForLocation:annotationUUID:");
}

id objc_msgSend_didSelectHighlightForLocation_annotationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSelectHighlightForLocation:annotationUUID:");
}

id objc_msgSend_didSelectLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didSelectLocation:");
}

id objc_msgSend_direction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "direction");
}

id objc_msgSend_directoryContent_didSelectBookmarkForLocation_annotationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryContent:didSelectBookmarkForLocation:annotationUUID:");
}

id objc_msgSend_directoryContent_didSelectHighlightForLocation_annotationUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryContent:didSelectHighlightForLocation:annotationUUID:");
}

id objc_msgSend_directoryContent_didSelectLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryContent:didSelectLocation:");
}

id objc_msgSend_directoryContent_didSelectLocation_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryContent:didSelectLocation:animated:");
}

id objc_msgSend_directoryContent_locationForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryContent:locationForPageNumber:");
}

id objc_msgSend_directoryContent_pageNumberForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryContent:pageNumberForLocation:");
}

id objc_msgSend_directoryContent_pageTitleForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryContent:pageTitleForPageNumber:");
}

id objc_msgSend_directoryController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryController");
}

id objc_msgSend_directoryDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryDelegate");
}

id objc_msgSend_directoryTOCIsVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryTOCIsVisible");
}

id objc_msgSend_directoryTOCViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryTOCViewController");
}

id objc_msgSend_directoryTOCViewControllerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryTOCViewControllerView");
}

id objc_msgSend_directoryType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryType");
}

id objc_msgSend_directoryTypeForBookmarks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryTypeForBookmarks");
}

id objc_msgSend_directoryTypeForPageThumbnails(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryTypeForPageThumbnails");
}

id objc_msgSend_directoryTypeForSegmentIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryTypeForSegmentIndex:");
}

id objc_msgSend_directoryTypeForTOC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryTypeForTOC");
}

id objc_msgSend_directoryTypeToSegmentIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "directoryTypeToSegmentIndex");
}

id objc_msgSend_disableAutoFontDownload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableAutoFontDownload");
}

id objc_msgSend_disableContentSpreadPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableContentSpreadPages");
}

id objc_msgSend_disableEditingAndSaveIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "disableEditingAndSaveIfNecessary");
}

id objc_msgSend_dismissAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissAnimated:");
}

id objc_msgSend_dismissCompletionHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissCompletionHandler");
}

id objc_msgSend_dismissCurrentPopover(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissCurrentPopover");
}

id objc_msgSend_dismissCurrentPopoverAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissCurrentPopoverAnimated:");
}

id objc_msgSend_dismissCurrentPopoverWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissCurrentPopoverWithCompletion:");
}

id objc_msgSend_dismissCurrentPopoverWithCompletion_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissCurrentPopoverWithCompletion:animated:");
}

id objc_msgSend_dismissPopover(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPopover");
}

id objc_msgSend_dismissPopoverAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissPopoverAnimated:");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_dispatchSemaphore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dispatchSemaphore");
}

id objc_msgSend_displayHTMLWithContents_fontFamily_fontSize_maxSpan_baseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayHTMLWithContents:fontFamily:fontSize:maxSpan:baseURL:");
}

id objc_msgSend_displayLink(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayLink");
}

id objc_msgSend_displayLinkWithTarget_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayLinkWithTarget:selector:");
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayName");
}

id objc_msgSend_displaySleepController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displaySleepController");
}

id objc_msgSend_displayTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayTitle");
}

id objc_msgSend_displayVerticalScrubberBackground(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayVerticalScrubberBackground");
}

id objc_msgSend_displaysRTL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displaysRTL");
}

id objc_msgSend_divider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "divider");
}

id objc_msgSend_dividerLeftPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dividerLeftPressed");
}

id objc_msgSend_dividerMini(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dividerMini");
}

id objc_msgSend_dividerRightPressed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dividerRightPressed");
}

id objc_msgSend_dividerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dividerView");
}

id objc_msgSend_doNotDisturbStatusAtStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doNotDisturbStatusAtStart");
}

id objc_msgSend_document(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "document");
}

id objc_msgSend_documentAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentAtPath:");
}

id objc_msgSend_documentChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentChanged");
}

id objc_msgSend_documentContainingLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentContainingLocation:");
}

id objc_msgSend_documentForDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentForDirectory");
}

id objc_msgSend_documentForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentForLocation:");
}

id objc_msgSend_documentForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentForURL:");
}

id objc_msgSend_documentHref(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentHref");
}

id objc_msgSend_documentKeyWithHref_documentOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentKeyWithHref:documentOrdinal:");
}

id objc_msgSend_documentOrdinal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentOrdinal");
}

id objc_msgSend_documentPageCountForDocumentOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentPageCountForDocumentOrdinal:");
}

id objc_msgSend_documentRef(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentRef");
}

id objc_msgSend_documentScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentScrollView");
}

id objc_msgSend_documentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentView");
}

id objc_msgSend_documentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentViewController");
}

id objc_msgSend_documentWithOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentWithOrdinal:");
}

id objc_msgSend_documentsWithPath_sortBy_limit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentsWithPath:sortBy:limit:");
}

id objc_msgSend_doesBookIndexWithNameExist_isLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doesBookIndexWithNameExist:isLoaded:");
}

id objc_msgSend_doesNotRecognizeSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doesNotRecognizeSelector:");
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "domain");
}

id objc_msgSend_doneButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doneButton");
}

id objc_msgSend_doubleTapGesture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleTapGesture");
}

id objc_msgSend_doubleTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleTapGestureRecognizer");
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "doubleValue");
}

id objc_msgSend_download(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "download");
}

id objc_msgSend_downloadProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "downloadProgress");
}

id objc_msgSend_dragDismissManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dragDismissManager");
}

id objc_msgSend_drawHighlights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawHighlights");
}

id objc_msgSend_drawInRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:");
}

id objc_msgSend_drawInRect_blendMode_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:blendMode:alpha:");
}

id objc_msgSend_drawsShadow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawsShadow");
}

id objc_msgSend_drawsSpine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawsSpine");
}

id objc_msgSend_dummyAnnotationForSelectionWK2WithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dummyAnnotationForSelectionWK2WithCompletion:");
}

id objc_msgSend_dummyLocation2(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dummyLocation2");
}

id objc_msgSend_duration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "duration");
}

id objc_msgSend_edgeInsetsForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "edgeInsetsForContentViewController:");
}

id objc_msgSend_edgeInsetsForKey_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "edgeInsetsForKey:context:");
}

id objc_msgSend_editRedoBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editRedoBarButtonItem");
}

id objc_msgSend_editToolbarFooterTextWithCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editToolbarFooterTextWithCount:");
}

id objc_msgSend_editUndoBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editUndoBarButtonItem");
}

id objc_msgSend_editingToolbar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editingToolbar");
}

id objc_msgSend_editorController_setTheme_forAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "editorController:setTheme:forAnnotation:");
}

id objc_msgSend_effectWithPreview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithPreview:");
}

id objc_msgSend_effectWithRoundedRect_cornerRadius_curve_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithRoundedRect:cornerRadius:curve:");
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectWithStyle:");
}

id objc_msgSend_effectiveUserInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveUserInterfaceLayoutDirection");
}

id objc_msgSend_effectiveZoomScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "effectiveZoomScale");
}

id objc_msgSend_elementId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elementId");
}

id objc_msgSend_elementIdForChapterInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elementIdForChapterInfo:");
}

id objc_msgSend_elementIdForCurrentNode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elementIdForCurrentNode");
}

id objc_msgSend_elseSteps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "elseSteps");
}

id objc_msgSend_embeddedArtHref(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "embeddedArtHref");
}

id objc_msgSend_embeddedArtHrefMinusSubpath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "embeddedArtHrefMinusSubpath");
}

id objc_msgSend_embeddedArtHrefRejected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "embeddedArtHrefRejected");
}

id objc_msgSend_embeddedArtSinf(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "embeddedArtSinf");
}

id objc_msgSend_embeddedArtURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "embeddedArtURL");
}

id objc_msgSend_emitAnnotationActionEventWithTracker_contentData_viewData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitAnnotationActionEventWithTracker:contentData:viewData:");
}

id objc_msgSend_emitInBookSearchEventWithTracker_readingSessionData_contentData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitInBookSearchEventWithTracker:readingSessionData:contentData:");
}

id objc_msgSend_emitReadEventWithTracker_readingSessionData_contentData_readingSettingsData_upSellData_contentSettingsData_doNotDisturbData_startTime_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitReadEventWithTracker:readingSessionData:contentData:readingSettingsData:upSellData:contentSettingsData:doNotDisturbData:startTime:completion:");
}

id objc_msgSend_emitReadingAutoNightSettingChangeEventWithTracker_readingSessionData_contentData_isOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitReadingAutoNightSettingChangeEventWithTracker:readingSessionData:contentData:isOn:");
}

id objc_msgSend_emitReadingBackgroundColorChangeEventWithTracker_readingSessionData_contentData_backgroundColorData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitReadingBackgroundColorChangeEventWithTracker:readingSessionData:contentData:backgroundColorData:");
}

id objc_msgSend_emitReadingFontChangeEventWithTracker_readingSessionData_contentData_fontName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitReadingFontChangeEventWithTracker:readingSessionData:contentData:fontName:");
}

id objc_msgSend_emitReadingFontSizeChangeEventWithTracker_readingSessionData_contentData_fontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitReadingFontSizeChangeEventWithTracker:readingSessionData:contentData:fontSize:");
}

id objc_msgSend_emitReadingOrientationChangeEventWithTracker_readingSessionData_contentData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitReadingOrientationChangeEventWithTracker:readingSessionData:contentData:");
}

id objc_msgSend_emitReadingScrollViewSettingChangeEventWithTracker_readingSessionData_contentData_fontSize_isOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitReadingScrollViewSettingChangeEventWithTracker:readingSessionData:contentData:fontSize:isOn:");
}

id objc_msgSend_emitScrubEventStartPosition_endPosition_totalLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitScrubEventStartPosition:endPosition:totalLength:");
}

id objc_msgSend_emitScrubEventWithTracker_contentData_readingSettingsData_startPosition_endPosition_totalLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitScrubEventWithTracker:contentData:readingSettingsData:startPosition:endPosition:totalLength:");
}

id objc_msgSend_emitter_bookMilestoneReached_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitter:bookMilestoneReached:");
}

id objc_msgSend_emitter_bookPositionChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitter:bookPositionChanged:");
}

id objc_msgSend_emitter_bookSectionChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emitter:bookSectionChanged:");
}

id objc_msgSend_emptyBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "emptyBackgroundColor");
}

id objc_msgSend_enableAutoNightModeSwitch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableAutoNightModeSwitch");
}

id objc_msgSend_enablePullToDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enablePullToDismiss");
}

id objc_msgSend_enableSwipeToDismiss(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enableSwipeToDismiss");
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeBool:forKey:");
}

id objc_msgSend_encodeDouble_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeDouble:forKey:");
}

id objc_msgSend_encodeFloat_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeFloat:forKey:");
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeInteger:forKey:");
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodeWithCoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeWithCoder:");
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodedData");
}

id objc_msgSend_encryptionAlgorithm(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encryptionAlgorithm");
}

id objc_msgSend_endAppearanceTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endAppearanceTransition");
}

id objc_msgSend_endOfBookConfidence(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endOfBookConfidence");
}

id objc_msgSend_endOfBookExperienceFeatureEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endOfBookExperienceFeatureEnabled");
}

id objc_msgSend_endOfBookExperiencesFromItunesMetadataEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endOfBookExperiencesFromItunesMetadataEntry:");
}

id objc_msgSend_endOfBookLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endOfBookLocation");
}

id objc_msgSend_endOfBookValidRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endOfBookValidRange");
}

id objc_msgSend_endOfBookVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endOfBookVersion");
}

id objc_msgSend_endOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endOffset");
}

id objc_msgSend_endPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endPath");
}

id objc_msgSend_endPoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endPoint");
}

id objc_msgSend_endSearch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSearch");
}

id objc_msgSend_endTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endTime");
}

id objc_msgSend_endUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endUpdates");
}

id objc_msgSend_enqueueContentInfoRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueContentInfoRequest:");
}

id objc_msgSend_enqueuePageCurlWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueuePageCurlWithType:");
}

id objc_msgSend_enqueueRenderingCacheOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueRenderingCacheOperation:");
}

id objc_msgSend_enqueueRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enqueueRequest:");
}

id objc_msgSend_ensureCurlFilterOnLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ensureCurlFilterOnLayer:");
}

id objc_msgSend_ensureRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ensureRange");
}

id objc_msgSend_enterSinglePageMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enterSinglePageMode");
}

id objc_msgSend_entity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entity");
}

id objc_msgSend_entity_withPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entity:withPredicate:");
}

id objc_msgSend_entity_withPredicate_sortBy_ascending_fetchLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entity:withPredicate:sortBy:ascending:fetchLimit:");
}

id objc_msgSend_entity_withPredicate_sortDescriptors_fetchLimit_prefetchRelationships_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entity:withPredicate:sortDescriptors:fetchLimit:prefetchRelationships:");
}

id objc_msgSend_entityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entityForName:inManagedObjectContext:");
}

id objc_msgSend_entryForRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entryForRequest:");
}

id objc_msgSend_enumerateAttributesInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateAttributesInRange:options:usingBlock:");
}

id objc_msgSend_enumerateIndexesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateIndexesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_environment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "environment");
}

id objc_msgSend_environmentOverrideViewForPaginationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "environmentOverrideViewForPaginationController:");
}

id objc_msgSend_environmentOverrideViewForSearchController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "environmentOverrideViewForSearchController:");
}

id objc_msgSend_environmentOverrideViewForSearchViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "environmentOverrideViewForSearchViewController:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_establishChapterFonts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "establishChapterFonts");
}

id objc_msgSend_estimatedFixedLayoutViewFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "estimatedFixedLayoutViewFrame");
}

id objc_msgSend_evaluateJavaScript_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateJavaScript:completionHandler:");
}

id objc_msgSend_evaluateTemplateWithName_withData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateTemplateWithName:withData:error:");
}

id objc_msgSend_evaluateTemplateWithURL_data_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateTemplateWithURL:data:error:");
}

id objc_msgSend_evaluateWithData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateWithData:error:");
}

id objc_msgSend_evaluateWithData_templateSet_cycleContext_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "evaluateWithData:templateSet:cycleContext:error:");
}

id objc_msgSend_eventEngagement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "eventEngagement");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_excludeDeletedBooksPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "excludeDeletedBooksPredicate");
}

id objc_msgSend_excludedActivityTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "excludedActivityTypes");
}

id objc_msgSend_execute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "execute");
}

id objc_msgSend_executeFetchRequest_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeFetchRequest:error:");
}

id objc_msgSend_existingBookInfoForDatabaseKey_fromManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingBookInfoForDatabaseKey:fromManagedObjectContext:");
}

id objc_msgSend_existingBookInfoForURL_fromManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingBookInfoForURL:fromManagedObjectContext:");
}

id objc_msgSend_existingBookInfoWithPredicate_fromManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingBookInfoWithPredicate:fromManagedObjectContext:");
}

id objc_msgSend_existingContentViewControllerForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingContentViewControllerForPageNumber:");
}

id objc_msgSend_existingObjectWithID_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingObjectWithID:error:");
}

id objc_msgSend_existingPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "existingPages");
}

id objc_msgSend_exists(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exists");
}

id objc_msgSend_expandAnnotation_location_selectedText_representativeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandAnnotation:location:selectedText:representativeText:");
}

id objc_msgSend_expandedContentControllerForResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentControllerForResource:");
}

id objc_msgSend_expandedContentOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentOptions");
}

id objc_msgSend_expandedContentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentViewController");
}

id objc_msgSend_expandedContentViewController_handleExternalLoadRequest_likelyUserInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentViewController:handleExternalLoadRequest:likelyUserInitiated:");
}

id objc_msgSend_expandedContentViewController_handleInternalLoadRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentViewController:handleInternalLoadRequest:");
}

id objc_msgSend_expandedContentViewController_handleInternalLoadRequestForNewWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentViewController:handleInternalLoadRequestForNewWindow:");
}

id objc_msgSend_expandedContentViewController_handleUserRequestForFrameToLoadExternalURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentViewController:handleUserRequestForFrameToLoadExternalURL:completion:");
}

id objc_msgSend_expandedContentViewController_presentAlertController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentViewController:presentAlertController:completion:");
}

id objc_msgSend_expandedContentViewController_shareText_sourceRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentViewController:shareText:sourceRect:");
}

id objc_msgSend_expandedContentViewController_stringForCopyFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentViewController:stringForCopyFromString:");
}

id objc_msgSend_expandedContentViewDidFinishLoad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "expandedContentViewDidFinishLoad:");
}

id objc_msgSend_experienceConfidenceFromExperienceParamEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experienceConfidenceFromExperienceParamEntry:");
}

id objc_msgSend_experienceKindFromExperienceEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experienceKindFromExperienceEntry:");
}

id objc_msgSend_experienceLocationFromExperienceEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experienceLocationFromExperienceEntry:");
}

id objc_msgSend_experienceLocationTypeFromExperienceEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experienceLocationTypeFromExperienceEntry:");
}

id objc_msgSend_experienceManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experienceManager");
}

id objc_msgSend_experienceParamsFromExperienceEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experienceParamsFromExperienceEntry:");
}

id objc_msgSend_experienceVersionFromExperienceEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "experienceVersionFromExperienceEntry:");
}

id objc_msgSend_extendSelectionForLineBoundaries(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "extendSelectionForLineBoundaries");
}

id objc_msgSend_externalGestureRecognizerCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "externalGestureRecognizerCount");
}

id objc_msgSend_fallbackId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fallbackId");
}

id objc_msgSend_fallbacks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fallbacks");
}

id objc_msgSend_fallbacksForFontFamily_language_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fallbacksForFontFamily:language:");
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "familyName");
}

id objc_msgSend_fetchBookmarkPageCounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchBookmarkPageCounts");
}

id objc_msgSend_fetchCurrentState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchCurrentState:");
}

id objc_msgSend_fetchImageForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchImageForKey:");
}

id objc_msgSend_fetchedObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchedObjects");
}

id objc_msgSend_fetchedResultsController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchedResultsController");
}

id objc_msgSend_fetchedResultsControllerAscendingOrder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fetchedResultsControllerAscendingOrder");
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExtension");
}

id objc_msgSend_fileNamePrefix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileNamePrefix");
}

id objc_msgSend_fileNames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileNames");
}

id objc_msgSend_fileSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileSize");
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_fill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fill");
}

id objc_msgSend_filledButtonConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filledButtonConfiguration");
}

id objc_msgSend_filterWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filterWithType:");
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_filteredSetUsingPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filteredSetUsingPredicate:");
}

id objc_msgSend_filters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filters");
}

id objc_msgSend_finalFrameForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finalFrameForViewController:");
}

id objc_msgSend_findOutlineForRow_fromRowCount_fromOutline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findOutlineForRow:fromRowCount:fromOutline:");
}

id objc_msgSend_findRenderingCacheOperationWithStorageKey_target_selector_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findRenderingCacheOperationWithStorageKey:target:selector:context:");
}

id objc_msgSend_findSemaphore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findSemaphore");
}

id objc_msgSend_findString_fromSelection_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "findString:fromSelection:withOptions:");
}

id objc_msgSend_finishDecoding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishDecoding");
}

id objc_msgSend_finishEncoding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishEncoding");
}

id objc_msgSend_finishManualAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishManualAnimation");
}

id objc_msgSend_finishManualCurl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishManualCurl");
}

id objc_msgSend_finishManualCurlAtPostion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishManualCurlAtPostion:");
}

id objc_msgSend_finished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finished");
}

id objc_msgSend_finishedButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedButton");
}

id objc_msgSend_finishedButtonBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedButtonBackgroundColor");
}

id objc_msgSend_finishedButtonBottomConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedButtonBottomConstraint");
}

id objc_msgSend_finishedButtonDisabledBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedButtonDisabledBackgroundColor");
}

id objc_msgSend_finishedButtonLeadingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedButtonLeadingConstraint");
}

id objc_msgSend_finishedButtonTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedButtonTextColor");
}

id objc_msgSend_finishedButtonTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedButtonTopConstraint");
}

id objc_msgSend_finishedButtonTrailingConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedButtonTrailingConstraint");
}

id objc_msgSend_finishedCheckmarkColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedCheckmarkColor");
}

id objc_msgSend_finishedSnapshottingForCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishedSnapshottingForCache:");
}

id objc_msgSend_firstDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstDocument");
}

id objc_msgSend_firstDocumentHref(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstDocumentHref");
}

id objc_msgSend_firstDocumentLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstDocumentLocation");
}

id objc_msgSend_firstIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstIndex");
}

id objc_msgSend_firstMatchInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstMatchInString:options:range:");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_fixedLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixedLayout");
}

id objc_msgSend_fixedLayoutFlow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixedLayoutFlow");
}

id objc_msgSend_fixedLayoutHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixedLayoutHeight");
}

id objc_msgSend_fixedLayoutOptionsWithLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixedLayoutOptionsWithLanguage:");
}

id objc_msgSend_fixedLayoutSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixedLayoutSize");
}

id objc_msgSend_fixedLayoutSizeForDocumentWithOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixedLayoutSizeForDocumentWithOrdinal:");
}

id objc_msgSend_fixedLayoutSpread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixedLayoutSpread");
}

id objc_msgSend_fixedLayoutWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fixedLayoutWidth");
}

id objc_msgSend_flashScrollIndicators(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flashScrollIndicators");
}

id objc_msgSend_flexibleSpaceItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flexibleSpaceItem");
}

id objc_msgSend_floatForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatForKey:");
}

id objc_msgSend_floatForKey_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatForKey:context:");
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "floatValue");
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flush");
}

id objc_msgSend_font(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "font");
}

id objc_msgSend_fontAppearanceWidthPadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontAppearanceWidthPadding");
}

id objc_msgSend_fontDescriptorWithDesign_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontDescriptorWithDesign:");
}

id objc_msgSend_fontFaceLookupByFileName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontFaceLookupByFileName");
}

id objc_msgSend_fontFaceMappings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontFaceMappings");
}

id objc_msgSend_fontFamily(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontFamily");
}

id objc_msgSend_fontForChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontForChapter:");
}

id objc_msgSend_fontFromFamilyName_language_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontFromFamilyName:language:");
}

id objc_msgSend_fontLookupByFileName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontLookupByFileName");
}

id objc_msgSend_fontName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontName");
}

id objc_msgSend_fontNameFromSummaryString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontNameFromSummaryString:");
}

id objc_msgSend_fontObserver(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontObserver");
}

id objc_msgSend_fontScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontScale");
}

id objc_msgSend_fontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontSize");
}

id objc_msgSend_fontSizeButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontSizeButtons");
}

id objc_msgSend_fontSizeConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontSizeConfiguration");
}

id objc_msgSend_fontSizeFactorForViewportSize_useOldFontStepsAndSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontSizeFactorForViewportSize:useOldFontStepsAndSpacing:");
}

id objc_msgSend_fontSizeForFont_presetIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontSizeForFont:presetIndex:");
}

id objc_msgSend_fontSizeForFontFamilyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontSizeForFontFamilyName:");
}

id objc_msgSend_fontSpecWithPostscriptName_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontSpecWithPostscriptName:size:");
}

id objc_msgSend_fontVC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontVC");
}

id objc_msgSend_fontWithDescriptor_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithDescriptor:size:");
}

id objc_msgSend_fontWithName_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontWithName:size:");
}

id objc_msgSend_fonts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fonts");
}

id objc_msgSend_fontsByFileName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontsByFileName");
}

id objc_msgSend_fontsForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontsForLanguage:");
}

id objc_msgSend_fontsForLanguage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fontsForLanguage:completion:");
}

id objc_msgSend_footerFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footerFrame");
}

id objc_msgSend_footerMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footerMask");
}

id objc_msgSend_footerToolbarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footerToolbarHeight");
}

id objc_msgSend_footnoteController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footnoteController");
}

id objc_msgSend_footnoteViewController_handleExternalLoadRequest_likelyUserInitiated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footnoteViewController:handleExternalLoadRequest:likelyUserInitiated:");
}

id objc_msgSend_footnoteViewController_handleInternalLoadRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footnoteViewController:handleInternalLoadRequest:");
}

id objc_msgSend_footnoteViewController_handleInternalLoadRequestForNewWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footnoteViewController:handleInternalLoadRequestForNewWindow:");
}

id objc_msgSend_footnoteViewController_handleUserRequestForFrameToLoadExternalURL_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footnoteViewController:handleUserRequestForFrameToLoadExternalURL:completion:");
}

id objc_msgSend_footnoteViewController_presentAlertController_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footnoteViewController:presentAlertController:completion:");
}

id objc_msgSend_footnoteViewDidDisappear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footnoteViewDidDisappear:");
}

id objc_msgSend_footnoteViewDidFinishLoad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "footnoteViewDidFinishLoad:");
}

id objc_msgSend_forcePopoverInsteadOfSheet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forcePopoverInsteadOfSheet");
}

id objc_msgSend_forceReflowText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceReflowText");
}

id objc_msgSend_forceTileRefresh(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forceTileRefresh");
}

id objc_msgSend_forwardCurl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "forwardCurl");
}

id objc_msgSend_fragment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fragment");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_frameForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameForPageNumber:");
}

id objc_msgSend_frameForSegmentAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameForSegmentAtIndex:");
}

id objc_msgSend_frameForThumbnailAtLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameForThumbnailAtLocation:");
}

id objc_msgSend_frameWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frameWidth");
}

id objc_msgSend_freeze(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "freeze");
}

id objc_msgSend_fromValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fromValue");
}

id objc_msgSend_fullCleanup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullCleanup");
}

id objc_msgSend_fullLineRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullLineRect");
}

id objc_msgSend_fullScreenNoteEditorForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fullScreenNoteEditorForAnnotation:");
}

id objc_msgSend_functionWithControlPoints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithControlPoints:");
}

id objc_msgSend_functionWithControlPoints__::(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithControlPoints::::");
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_gaijiImageFilter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gaijiImageFilter");
}

id objc_msgSend_gapBetweenPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gapBetweenPages");
}

id objc_msgSend_generalPasteboard(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generalPasteboard");
}

id objc_msgSend_generateImageForDocument_pageIndex_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateImageForDocument:pageIndex:size:");
}

id objc_msgSend_generateMasterImageForPageNumber_asset_priority_callbackBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateMasterImageForPageNumber:asset:priority:callbackBlock:");
}

id objc_msgSend_generatePaginationDataCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generatePaginationDataCompletion:");
}

id objc_msgSend_generatePositionForAllPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generatePositionForAllPages:");
}

id objc_msgSend_generateRenderingPiggyBackForAllPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateRenderingPiggyBackForAllPages");
}

id objc_msgSend_generateSnapshotWithAsset_size_pageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateSnapshotWithAsset:size:pageNumber:");
}

id objc_msgSend_generateSnapshotsForCurrentPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateSnapshotsForCurrentPages");
}

id objc_msgSend_generateWithOldLeftPageNumber_oldRightPageNumber_newLeftPageNumber_newRightPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateWithOldLeftPageNumber:oldRightPageNumber:newLeftPageNumber:newRightPageNumber:");
}

id objc_msgSend_generateWithOldLeftPageNumber_oldRightPageNumber_newLeftPageNumber_newRightPageNumber_useMirrorForBackImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateWithOldLeftPageNumber:oldRightPageNumber:newLeftPageNumber:newRightPageNumber:useMirrorForBackImage:");
}

id objc_msgSend_genericCoverTemplate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genericCoverTemplate");
}

id objc_msgSend_genre(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genre");
}

id objc_msgSend_genreFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "genreFromPlistEntry:");
}

id objc_msgSend_geometryWithContentSize_configuration_drawsSpine_containerBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "geometryWithContentSize:configuration:drawsSpine:containerBounds:");
}

id objc_msgSend_geometryWithContentSize_configuration_drawsSpine_ignoresPadding_containerBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "geometryWithContentSize:configuration:drawsSpine:ignoresPadding:containerBounds:");
}

id objc_msgSend_gesture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gesture");
}

id objc_msgSend_gestureRecognizers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gestureRecognizers");
}

id objc_msgSend_get_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "get:");
}

id objc_msgSend_getAnimationRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getAnimationRect");
}

id objc_msgSend_getBookKeyWithBook_style_geometry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBookKeyWithBook:style:geometry:");
}

id objc_msgSend_getInlineStyleSheetForConfiguration_bookInfo_contentLayoutSize_webkit2_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getInlineStyleSheetForConfiguration:bookInfo:contentLayoutSize:webkit2:");
}

id objc_msgSend_getNonBlockingError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getNonBlockingError:");
}

id objc_msgSend_getPictureBookUserStyleSheetWithLegacyBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPictureBookUserStyleSheetWithLegacyBook:");
}

id objc_msgSend_getSelectedRangeScript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getSelectedRangeScript:");
}

id objc_msgSend_getWebViews_result_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getWebViews:result:");
}

id objc_msgSend_goToPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goToPage:");
}

id objc_msgSend_goToPage_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goToPage:animated:");
}

id objc_msgSend_goToPath_fragment_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "goToPath:fragment:animated:");
}

id objc_msgSend_grayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "grayColor");
}

id objc_msgSend_greenTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "greenTheme:");
}

id objc_msgSend_gridInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridInset");
}

id objc_msgSend_gridView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gridView");
}

id objc_msgSend_groupedBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "groupedBackgroundColor");
}

id objc_msgSend_gutter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gutter");
}

id objc_msgSend_gutterWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "gutterWidth");
}

id objc_msgSend_hairlineImageURIWithColor_horizontal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hairlineImageURIWithColor:horizontal:");
}

id objc_msgSend_handleAppearanceViewControllerDismissal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleAppearanceViewControllerDismissal");
}

id objc_msgSend_handleContentScaling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleContentScaling:");
}

id objc_msgSend_handleSinglePageManualCurlGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSinglePageManualCurlGesture:");
}

id objc_msgSend_handleSpreadManualCurlGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleSpreadManualCurlGesture:");
}

id objc_msgSend_hasBuiltInFonts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasBuiltInFonts");
}

id objc_msgSend_hasCachedLoadExternalContentApprovalForBookID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCachedLoadExternalContentApprovalForBookID:");
}

id objc_msgSend_hasCalculatedMinZoomScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasCalculatedMinZoomScale");
}

id objc_msgSend_hasChanges(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasChanges");
}

id objc_msgSend_hasComputedFixedLayoutSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasComputedFixedLayoutSize");
}

id objc_msgSend_hasContinuousScrollingBehavior(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasContinuousScrollingBehavior");
}

id objc_msgSend_hasDuplicatedDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasDuplicatedDocument");
}

id objc_msgSend_hasHighlightedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasHighlightedText");
}

id objc_msgSend_hasImageForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasImageForKey:");
}

id objc_msgSend_hasItemConformingToTypeIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasItemConformingToTypeIdentifier:");
}

id objc_msgSend_hasItemForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasItemForKey:");
}

id objc_msgSend_hasLandmarkElements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasLandmarkElements");
}

id objc_msgSend_hasMediaElementAtPoint_inView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasMediaElementAtPoint:inView:");
}

id objc_msgSend_hasMediaOverlayElements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasMediaOverlayElements");
}

id objc_msgSend_hasPartialResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPartialResults");
}

id objc_msgSend_hasPhysicalElements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPhysicalElements");
}

id objc_msgSend_hasPhysicalPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPhysicalPages");
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasRemoteResources(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRemoteResources");
}

id objc_msgSend_hasRibbon(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasRibbon");
}

id objc_msgSend_hasSelectablePositionAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSelectablePositionAtPoint:");
}

id objc_msgSend_hasSoundtrack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSoundtrack");
}

id objc_msgSend_hasSpreadPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSpreadPages");
}

id objc_msgSend_hasSpreadPagesForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSpreadPagesForContentViewController:");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasTextSelected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasTextSelected");
}

id objc_msgSend_hasTocElements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasTocElements");
}

id objc_msgSend_hasTurnedToInitialPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasTurnedToInitialPage");
}

id objc_msgSend_hasUpsellPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasUpsellPage");
}

id objc_msgSend_hasWKWebView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasWKWebView");
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hash");
}

id objc_msgSend_hashTableWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hashTableWithOptions:");
}

id objc_msgSend_havePartialResults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "havePartialResults");
}

id objc_msgSend_head(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "head");
}

id objc_msgSend_headCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headCFI");
}

id objc_msgSend_headerFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerFrame");
}

id objc_msgSend_headerMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerMask");
}

id objc_msgSend_headerTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerTextColor");
}

id objc_msgSend_headerTextColorDimmed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerTextColorDimmed");
}

id objc_msgSend_headerToolbarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "headerToolbarHeight");
}

id objc_msgSend_heartbeatRate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heartbeatRate");
}

id objc_msgSend_height(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "height");
}

id objc_msgSend_heightAllowanceScalar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightAllowanceScalar");
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "heightAnchor");
}

id objc_msgSend_helper(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helper");
}

id objc_msgSend_helper_coverImageForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helper:coverImageForURL:");
}

id objc_msgSend_helperCoverImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperCoverImage");
}

id objc_msgSend_helperCoverImageOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperCoverImageOfSize:");
}

id objc_msgSend_helperForURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperForURL:withOptions:");
}

id objc_msgSend_helperMetadataForKey_needsCoordination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "helperMetadataForKey:needsCoordination:");
}

id objc_msgSend_hide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hide");
}

id objc_msgSend_hideIndicatorAnimated_animationDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideIndicatorAnimated:animationDelay:");
}

id objc_msgSend_hideLoadingViewAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideLoadingViewAnimated:");
}

id objc_msgSend_hideMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideMenu");
}

id objc_msgSend_hideOverlayViewControllerWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideOverlayViewControllerWithCompletion:");
}

id objc_msgSend_hidePageControls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hidePageControls:");
}

id objc_msgSend_hideReloadUIAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideReloadUIAnimated:");
}

id objc_msgSend_hideThumbView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideThumbView");
}

id objc_msgSend_hideVerticalScrubber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hideVerticalScrubber");
}

id objc_msgSend_hidesPageControlsOnOpen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hidesPageControlsOnOpen");
}

id objc_msgSend_hidesPageControlsOnOpenDelay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hidesPageControlsOnOpenDelay");
}

id objc_msgSend_hidesSpine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hidesSpine");
}

id objc_msgSend_highlightAnnotations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightAnnotations:");
}

id objc_msgSend_highlightCurrentNode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightCurrentNode");
}

id objc_msgSend_highlightLayers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightLayers");
}

id objc_msgSend_highlightMediaOverlayElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightMediaOverlayElement:");
}

id objc_msgSend_highlightRangeFromRects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightRangeFromRects:");
}

id objc_msgSend_highlightRenderingController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightRenderingController");
}

id objc_msgSend_highlightSearchLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightSearchLocation:");
}

id objc_msgSend_highlightSearchResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightSearchResult:");
}

id objc_msgSend_highlightSearchResult_forceVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightSearchResult:forceVisible:");
}

id objc_msgSend_highlightType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightType");
}

id objc_msgSend_highlightViewContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightViewContainer");
}

id objc_msgSend_highlightViewContainerWK2(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightViewContainerWK2");
}

id objc_msgSend_highlightViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightViews");
}

id objc_msgSend_highlightWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightWithData:");
}

id objc_msgSend_highlightedAnnotationBlendMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedAnnotationBlendMode");
}

id objc_msgSend_highlightedBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedBackgroundView");
}

id objc_msgSend_highlightedTextFrameForAnnotation_font_bounds_letMargin_numberOfLines_pageLabelFrame_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedTextFrameForAnnotation:font:bounds:letMargin:numberOfLines:pageLabelFrame:layoutDirection:");
}

id objc_msgSend_highlightedTextFrameForAnnotation_font_bounds_pageLabelFrame_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedTextFrameForAnnotation:font:bounds:pageLabelFrame:layoutDirection:");
}

id objc_msgSend_highlightedTextFrameInPopoverForAnnotation_font_bounds_pageLabelFrame_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedTextFrameInPopoverForAnnotation:font:bounds:pageLabelFrame:layoutDirection:");
}

id objc_msgSend_highlightedTextLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedTextLabel");
}

id objc_msgSend_highlightedTextLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedTextLabelFont");
}

id objc_msgSend_highlightedTextSizeInPopover(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightedTextSizeInPopover");
}

id objc_msgSend_highlightsPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "highlightsPredicate:");
}

id objc_msgSend_historyEntities(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "historyEntities");
}

id objc_msgSend_hitTest_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hitTest:withEvent:");
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "horizontalSizeClass");
}

id objc_msgSend_href(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "href");
}

id objc_msgSend_hrefForChapterAtPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hrefForChapterAtPageNumber:");
}

id objc_msgSend_hrefForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hrefForPageNumber:");
}

id objc_msgSend_html(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "html");
}

id objc_msgSend_htmlContentString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "htmlContentString");
}

id objc_msgSend_htmlMarkup(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "htmlMarkup");
}

id objc_msgSend_htmlName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "htmlName");
}

id objc_msgSend_humanReadablePublicationVersionFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "humanReadablePublicationVersionFromPlistEntry:");
}

id objc_msgSend_iPad10SizeClassPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iPad10SizeClassPredicate");
}

id objc_msgSend_iPadOtherSizeClassPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iPadOtherSizeClassPredicate");
}

id objc_msgSend_iPadSizeClassPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iPadSizeClassPredicate");
}

id objc_msgSend_iTunesArtHref(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iTunesArtHref");
}

id objc_msgSend_iconImageViewWidthAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iconImageViewWidthAnchor");
}

id objc_msgSend_idealCacheSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idealCacheSize");
}

id objc_msgSend_idealCellCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idealCellCount");
}

id objc_msgSend_idealSinglePageSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "idealSinglePageSize");
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "identifier");
}

id objc_msgSend_ignoreKeyboardInteraction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreKeyboardInteraction");
}

id objc_msgSend_ignoreNextGesture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ignoreNextGesture");
}

id objc_msgSend_imIsDefaultWritingMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imIsDefaultWritingMode");
}

id objc_msgSend_imIsVerticalWritingMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imIsVerticalWritingMode");
}

id objc_msgSend_imSanitizedFontFamilyName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imSanitizedFontFamilyName");
}

id objc_msgSend_im_ancestorViewControllerConformingToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_ancestorViewControllerConformingToProtocol:");
}

id objc_msgSend_im_frameEnvironmentSafeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_frameEnvironmentSafeAreaInsets");
}

id objc_msgSend_im_imageWithAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_imageWithAlpha:");
}

id objc_msgSend_im_isCompactHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_isCompactHeight");
}

id objc_msgSend_im_isCompactWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_isCompactWidth");
}

id objc_msgSend_im_isFullScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_isFullScreen");
}

id objc_msgSend_im_isLikelyBlank(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_isLikelyBlank");
}

id objc_msgSend_im_snapshotInContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "im_snapshotInContext");
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "image");
}

id objc_msgSend_imageAnalyzer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageAnalyzer");
}

id objc_msgSend_imageCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageCache");
}

id objc_msgSend_imageForSize_data_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageForSize:data:");
}

id objc_msgSend_imageIsFilteringCandidate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageIsFilteringCandidate:");
}

id objc_msgSend_imageMaskWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageMaskWithColor:");
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:");
}

id objc_msgSend_imageOfSize_forBox_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageOfSize:forBox:withOptions:");
}

id objc_msgSend_imageOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageOrientation");
}

id objc_msgSend_imageResizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageResizer");
}

id objc_msgSend_imageResizerDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageResizerDelegate");
}

id objc_msgSend_imageScroller(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageScroller");
}

id objc_msgSend_imageSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSize");
}

id objc_msgSend_imageSizeForScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSizeForScale:");
}

id objc_msgSend_imageSizeForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSizeForSize:");
}

id objc_msgSend_imageSizeForSpread_landscape_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageSizeForSpread:landscape:");
}

id objc_msgSend_imageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageView");
}

id objc_msgSend_imageWithActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithActions:");
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:");
}

id objc_msgSend_imageWithCGImage_scale_orientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithCGImage:scale:orientation:");
}

id objc_msgSend_imageWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithConfiguration:");
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithData:");
}

id objc_msgSend_imageWithRenderingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithRenderingMode:");
}

id objc_msgSend_imageWithTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageWithTintColor:");
}

id objc_msgSend_imaxIdentification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxIdentification");
}

id objc_msgSend_imaxLocalizedPercentage_maximumNumberOfDigitsAfterDecimalSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxLocalizedPercentage:maximumNumberOfDigitsAfterDecimalSeparator:");
}

id objc_msgSend_imaxLocalizedUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxLocalizedUnsignedInteger:");
}

id objc_msgSend_imaxLocalizedUnsignedInteger_usesGroupingSeparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxLocalizedUnsignedInteger:usesGroupingSeparator:");
}

id objc_msgSend_imaxSetIdentification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxSetIdentification:");
}

id objc_msgSend_imaxUnignoredDescendant(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxUnignoredDescendant");
}

id objc_msgSend_imaxValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxValueForKey:");
}

id objc_msgSend_imaxWholeAnnotationDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imaxWholeAnnotationDescription");
}

id objc_msgSend_impactOccurred(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "impactOccurred");
}

id objc_msgSend_inLiveResize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inLiveResize");
}

id objc_msgSend_inSinglePageMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inSinglePageMode");
}

id objc_msgSend_includedActivityTypes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "includedActivityTypes");
}

id objc_msgSend_increaseFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "increaseFontSize");
}

id objc_msgSend_indentationLevel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indentationLevel");
}

id objc_msgSend_indentationLevelForChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indentationLevelForChapter:");
}

id objc_msgSend_indentationWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indentationWidth");
}

id objc_msgSend_index(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "index");
}

id objc_msgSend_indexForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexForLocation:");
}

id objc_msgSend_indexForPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexForPage:");
}

id objc_msgSend_indexForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexForPageNumber:");
}

id objc_msgSend_indexGreaterThanIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexGreaterThanIndex:");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObjectWithOptions_passingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectWithOptions:passingTest:");
}

id objc_msgSend_indexPathForRow_inSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForRow:inSection:");
}

id objc_msgSend_indexPathForSelectedFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForSelectedFont");
}

id objc_msgSend_indexPathForSelectedRow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathForSelectedRow");
}

id objc_msgSend_indexPathOfLastRow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathOfLastRow");
}

id objc_msgSend_indexPathsForSelectedRows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathsForSelectedRows");
}

id objc_msgSend_indexPathsForVisibleRows(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexPathsForVisibleRows");
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndex:");
}

id objc_msgSend_indexSetWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndexesInRange:");
}

id objc_msgSend_indexTextUnit_withIdentifier_indexSynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexTextUnit:withIdentifier:indexSynchronously:");
}

id objc_msgSend_indexTextUnit_withOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexTextUnit:withOrdinal:");
}

id objc_msgSend_indexTextUnit_withOrdinal_indexSynchronously_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexTextUnit:withOrdinal:indexSynchronously:");
}

id objc_msgSend_indexesOfObjectsWithOptions_passingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsWithOptions:passingTest:");
}

id objc_msgSend_infoHUDTapped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "infoHUDTapped:");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init");
}

id objc_msgSend_init_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init:");
}

id objc_msgSend_init_paginationOperationController_annotationProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "init:paginationOperationController:annotationProvider:");
}

id objc_msgSend_initFileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFileURLWithPath:");
}

id objc_msgSend_initFileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFileURLWithPath:isDirectory:");
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingFromData:error:");
}

id objc_msgSend_initRequiringSecureCoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initRequiringSecureCoding:");
}

id objc_msgSend_initWithActivityIndicatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityIndicatorStyle:");
}

id objc_msgSend_initWithActivityItems_applicationActivities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityItems:applicationActivities:");
}

id objc_msgSend_initWithActivityItems_applicationActivities_shareType_propertySource_tracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithActivityItems:applicationActivities:shareType:propertySource:tracker:");
}

id objc_msgSend_initWithAllFrameStylesheets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAllFrameStylesheets:");
}

id objc_msgSend_initWithAnnotation_propertySource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnnotation:propertySource:");
}

id objc_msgSend_initWithAnnotations_propertySource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAnnotations:propertySource:");
}

id objc_msgSend_initWithArrangedSubviews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArrangedSubviews:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAssetDetailManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetDetailManager:");
}

id objc_msgSend_initWithAssetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAssetViewController:");
}

id objc_msgSend_initWithAttributedString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAttributedString:");
}

id objc_msgSend_initWithBackgroundColor_foregroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBackgroundColor:foregroundColor:");
}

id objc_msgSend_initWithBarButtonSystemItem_primaryAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:primaryAction:");
}

id objc_msgSend_initWithBarButtonSystemItem_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBarButtonSystemItem:target:action:");
}

id objc_msgSend_initWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBlock:");
}

id objc_msgSend_initWithBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBook:");
}

id objc_msgSend_initWithBook_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBook:delegate:");
}

id objc_msgSend_initWithBook_storeID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBook:storeID:");
}

id objc_msgSend_initWithBook_storeID_pdfDocumentCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBook:storeID:pdfDocumentCache:");
}

id objc_msgSend_initWithBookInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBookInfo:");
}

id objc_msgSend_initWithBookmarkCount_noteCount_highlightCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBookmarkCount:noteCount:highlightCount:");
}

id objc_msgSend_initWithBookmarkTime_bookmarkTimeTimestamp_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBookmarkTime:bookmarkTimeTimestamp:");
}

id objc_msgSend_initWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBool:");
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:encoding:");
}

id objc_msgSend_initWithBytes_objCType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:objCType:");
}

id objc_msgSend_initWithCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCFI:");
}

id objc_msgSend_initWithCFI_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCFI:error:");
}

id objc_msgSend_initWithCIImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCIImage:");
}

id objc_msgSend_initWithCallbackBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCallbackBlock:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithCoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCoder:");
}

id objc_msgSend_initWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCompletion:");
}

id objc_msgSend_initWithConcurrencyType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConcurrencyType:");
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithConfiguration:");
}

id objc_msgSend_initWithContentSize_configuration_drawsSpine_ignoresPadding_containerBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentSize:configuration:drawsSpine:ignoresPadding:containerBounds:");
}

id objc_msgSend_initWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfFile:");
}

id objc_msgSend_initWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:");
}

id objc_msgSend_initWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContentsOfURL:options:error:");
}

id objc_msgSend_initWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithContext:");
}

id objc_msgSend_initWithCustomView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCustomView:");
}

id objc_msgSend_initWithDSID_altDSID_username_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDSID:altDSID:username:options:");
}

id objc_msgSend_initWithData_MIMEType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:MIMEType:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithData_optimalSize_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:optimalSize:options:");
}

id objc_msgSend_initWithDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataSource:");
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:");
}

id objc_msgSend_initWithDelegate_forURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:forURL:");
}

id objc_msgSend_initWithDelegate_view_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDelegate:view:");
}

id objc_msgSend_initWithDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDocument:");
}

id objc_msgSend_initWithDuration_timingParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDuration:timingParameters:");
}

id objc_msgSend_initWithEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEffect:");
}

id objc_msgSend_initWithFetchRequest_managedObjectContext_sectionNameKeyPath_cacheName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:");
}

id objc_msgSend_initWithFixedSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFixedSize:");
}

id objc_msgSend_initWithFontFamily_andDetails_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFontFamily:andDetails:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:");
}

id objc_msgSend_initWithFrame_pageNumber_navigationDelegate_thumbnailingDelegate_imageResizerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:pageNumber:navigationDelegate:thumbnailingDelegate:imageResizerDelegate:");
}

id objc_msgSend_initWithFrame_style_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:style:");
}

id objc_msgSend_initWithFrame_theme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:theme:");
}

id objc_msgSend_initWithFrame_theme_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFrame:theme:delegate:");
}

id objc_msgSend_initWithHTML_maxSpan_selectedColor_baseURL_forObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHTML:maxSpan:selectedColor:baseURL:forObject:");
}

id objc_msgSend_initWithHelper_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHelper:");
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:");
}

id objc_msgSend_initWithIdentifier_configuration_webViewBuilder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:configuration:webViewBuilder:");
}

id objc_msgSend_initWithIdentifier_memorySize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:memorySize:");
}

id objc_msgSend_initWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:");
}

id objc_msgSend_initWithImage_borderColor_isLeft_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:borderColor:isLeft:");
}

id objc_msgSend_initWithImage_requestType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:requestType:");
}

id objc_msgSend_initWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIndexesInRange:");
}

id objc_msgSend_initWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInt:");
}

id objc_msgSend_initWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInteger:");
}

id objc_msgSend_initWithItemProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItemProvider:");
}

id objc_msgSend_initWithItemProviders_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItemProviders:");
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithItems:");
}

id objc_msgSend_initWithKey_ascending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:ascending:");
}

id objc_msgSend_initWithKey_ascending_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:ascending:selector:");
}

id objc_msgSend_initWithLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLanguage:");
}

id objc_msgSend_initWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLength:");
}

id objc_msgSend_initWithLocation_bookSnapshot_ordinal_configuration_stylesheetSet_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocation:bookSnapshot:ordinal:configuration:stylesheetSet:completion:");
}

id objc_msgSend_initWithLocationDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLocationDictionary:");
}

id objc_msgSend_initWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLongLong:");
}

id objc_msgSend_initWithMainframeOnlyStylesheets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMainframeOnlyStylesheets:");
}

id objc_msgSend_initWithMainframeOnlyStylesheets_allFrameStylesheets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMainframeOnlyStylesheets:allFrameStylesheets:");
}

id objc_msgSend_initWithManifestId_assetId_chapterIndex_spineIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithManifestId:assetId:chapterIndex:spineIndex:");
}

id objc_msgSend_initWithMass_stiffness_damping_initialVelocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMass:stiffness:damping:initialVelocity:");
}

id objc_msgSend_initWithMode_useNewTextStyling_fontFamily_language_respectImageSizeClass_respectImageSizeClassIsPrefix_hasBuiltInFonts_justification_fontWeight_overrideLineHeight_overrideLetterSpacing_overrideWordSpacing_readingMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMode:useNewTextStyling:fontFamily:language:respectImageSizeClass:respectImageSizeClassIsPrefix:hasBuiltInFonts:justification:fontWeight:overrideLineHeight:overrideLetterSpacing:overrideWordSpacing:readingMode:");
}

id objc_msgSend_initWithMode_usePaginationLineGrid_respectPageBreaks_isHorizontalScroll_contentLayoutSize_gapBetweenPages_viewportWidth_fixedLayoutSize_pageLength_fontSize_developerExtrasEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithMode:usePaginationLineGrid:respectPageBreaks:isHorizontalScroll:contentLayoutSize:gapBetweenPages:viewportWidth:fixedLayoutSize:pageLength:fontSize:developerExtrasEnabled:");
}

id objc_msgSend_initWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:");
}

id objc_msgSend_initWithNibName_bundle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNibName:bundle:");
}

id objc_msgSend_initWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:");
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:");
}

id objc_msgSend_initWithObjects_forKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:forKeys:");
}

id objc_msgSend_initWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjectsAndKeys:");
}

id objc_msgSend_initWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:");
}

id objc_msgSend_initWithOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrdinal:");
}

id objc_msgSend_initWithOrdinal_anchor_andPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrdinal:anchor:andPath:");
}

id objc_msgSend_initWithOrdinal_andAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrdinal:andAnchor:");
}

id objc_msgSend_initWithOrdinal_andOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrdinal:andOffset:");
}

id objc_msgSend_initWithOrdinals_allOrdinals_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOrdinals:allOrdinals:");
}

id objc_msgSend_initWithPDFDocument_currentPageIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPDFDocument:currentPageIndex:");
}

id objc_msgSend_initWithPaginationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPaginationController:");
}

id objc_msgSend_initWithPaginationOptions_cleanupOptions_cfiOptions_ordinal_stylesheetSet_fontSize_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPaginationOptions:cleanupOptions:cfiOptions:ordinal:stylesheetSet:fontSize:completion:");
}

id objc_msgSend_initWithPaginationOptions_ordinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPaginationOptions:ordinal:");
}

id objc_msgSend_initWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:");
}

id objc_msgSend_initWithPdfDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPdfDocument:");
}

id objc_msgSend_initWithPercentCompletionStart_percentCompletionEnd_isFreeSample_deviceOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPercentCompletionStart:percentCompletionEnd:isFreeSample:deviceOrientation:");
}

id objc_msgSend_initWithPlayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPlayer:");
}

id objc_msgSend_initWithPrimaryAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPrimaryAction:");
}

id objc_msgSend_initWithPropertySource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPropertySource:");
}

id objc_msgSend_initWithPurchasedDSID_downloadedDSID_familyID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPurchasedDSID:downloadedDSID:familyID:");
}

id objc_msgSend_initWithRequest_presentingViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRequest:presentingViewController:");
}

id objc_msgSend_initWithResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResource:");
}

id objc_msgSend_initWithResource_stylesheetSet_backgroundColor_textColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithResource:stylesheetSet:backgroundColor:textColor:");
}

id objc_msgSend_initWithReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReuseIdentifier:");
}

id objc_msgSend_initWithRootViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRootViewController:");
}

id objc_msgSend_initWithScrollViewStatus_autoNightThemeStatus_backgroundColor_font_fontSize_brightnessLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithScrollViewStatus:autoNightThemeStatus:backgroundColor:font:fontSize:brightnessLevel:");
}

id objc_msgSend_initWithSize_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSize:format:");
}

id objc_msgSend_initWithSource_forMainFrameOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSource:forMainFrameOnly:");
}

id objc_msgSend_initWithStartPoint_endPoint_duration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartPoint:endPoint:duration:");
}

id objc_msgSend_initWithStartStatus_endStatus_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStartStatus:endStatus:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithString_attributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:attributes:");
}

id objc_msgSend_initWithString_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:error:");
}

id objc_msgSend_initWithString_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:range:");
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:");
}

id objc_msgSend_initWithStyle_reuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStyle:reuseIdentifier:");
}

id objc_msgSend_initWithSystemApplicationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSystemApplicationType:");
}

id objc_msgSend_initWithTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initWithTestName_scrollView_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTestName:scrollView:completionHandler:");
}

id objc_msgSend_initWithTitle_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:action:");
}

id objc_msgSend_initWithTitle_style_target_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTitle:style:target:action:");
}

id objc_msgSend_initWithTocParser_pdfDictionary_forDocument_parent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTocParser:pdfDictionary:forDocument:parent:");
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:");
}

id objc_msgSend_initWithType_action_location_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:action:location:");
}

id objc_msgSend_initWithType_subpredicates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithType:subpredicates:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:error:");
}

id objc_msgSend_initWithUserInteractionLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUserInteractionLevel:");
}

id objc_msgSend_initWithView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithView:");
}

id objc_msgSend_initWithViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithViewController:");
}

id objc_msgSend_initWithViewController_configurationEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithViewController:configurationEnvironment:");
}

id objc_msgSend_initWithWhite_alpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWhite:alpha:");
}

id objc_msgSend_initialJumpLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialJumpLocation");
}

id objc_msgSend_initialZoomFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialZoomFactor");
}

id objc_msgSend_initialZoomScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialZoomScale");
}

id objc_msgSend_initializeAnnotationProviderWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initializeAnnotationProviderWithAssetID:");
}

id objc_msgSend_initiateManualAnimationFromPages_toPages_inContainer_isForwardAnimation_isRTL_isZoomedToSpread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initiateManualAnimationFromPages:toPages:inContainer:isForwardAnimation:isRTL:isZoomedToSpread:");
}

id objc_msgSend_innerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "innerView");
}

id objc_msgSend_insertAnnotationWithAssetID_creatorIdentifier_annotationUuid_intoManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertAnnotationWithAssetID:creatorIdentifier:annotationUuid:intoManagedObjectContext:");
}

id objc_msgSend_insertNewObjectForEntityForName_inManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertNewObjectForEntityForName:inManagedObjectContext:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_insertSections_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSections:withRowAnimation:");
}

id objc_msgSend_insertSiblingMenu_afterMenuForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSiblingMenu:afterMenuForIdentifier:");
}

id objc_msgSend_insertSubview_aboveSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:aboveSubview:");
}

id objc_msgSend_insertSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:atIndex:");
}

id objc_msgSend_insertSubview_below_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:below:");
}

id objc_msgSend_insertSubview_belowSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertSubview:belowSubview:");
}

id objc_msgSend_installEditModeToolbar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installEditModeToolbar");
}

id objc_msgSend_installJavaScriptWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installJavaScriptWithCompletionBlock:");
}

id objc_msgSend_installReadAloudClickHandlersOnMediaOverlayElements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installReadAloudClickHandlersOnMediaOverlayElements:");
}

id objc_msgSend_installTapHandlersOnElementIDs_withHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "installTapHandlersOnElementIDs:withHref:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intValue");
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerForKey:");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_interfaceOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceOrientation");
}

id objc_msgSend_internalGestureRecognizersSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "internalGestureRecognizersSet");
}

id objc_msgSend_intersectWithRangeFromHeadOf_toTailOf_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectWithRangeFromHeadOf:toTailOf:");
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidate");
}

id objc_msgSend_invalidateContentBasedOverlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateContentBasedOverlay");
}

id objc_msgSend_invalidateContentBasedOverlayCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateContentBasedOverlayCache");
}

id objc_msgSend_invalidateFollowingThemeChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateFollowingThemeChange");
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateIntrinsicContentSize");
}

id objc_msgSend_invalidateRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidateRequest");
}

id objc_msgSend_invalidated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invalidated");
}

id objc_msgSend_invertedImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertedImage:");
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invertedSet");
}

id objc_msgSend_invokedSMILControlAction_withSMILTurnStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invokedSMILControlAction:withSMILTurnStyle:");
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isActive");
}

id objc_msgSend_isAddingHighlights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAddingHighlights");
}

id objc_msgSend_isAnimated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnimated");
}

id objc_msgSend_isAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnimating");
}

id objc_msgSend_isAnnotationDeleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnnotationDeleted");
}

id objc_msgSend_isAnnotationSharingSupportedForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnnotationSharingSupportedForContentViewController:");
}

id objc_msgSend_isAnnotationVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnnotationVisible:");
}

id objc_msgSend_isAnnotationVisible_forIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAnnotationVisible:forIndex:");
}

id objc_msgSend_isAssetOfflineWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAssetOfflineWithAssetID:");
}

id objc_msgSend_isAtEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAtEnd");
}

id objc_msgSend_isAtTopOfStack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAtTopOfStack");
}

id objc_msgSend_isAutoCurl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAutoCurl");
}

id objc_msgSend_isAutoNightModeEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAutoNightModeEnabled");
}

id objc_msgSend_isAvailable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isAvailable");
}

id objc_msgSend_isBeingDismissed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeingDismissed");
}

id objc_msgSend_isBeingPresented(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeingPresented");
}

id objc_msgSend_isBookSample(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBookSample");
}

id objc_msgSend_isBookVersioned(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBookVersioned");
}

id objc_msgSend_isBookmarked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBookmarked");
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCancelled");
}

id objc_msgSend_isCandidateOrdinal_isMissing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCandidateOrdinal:isMissing:");
}

id objc_msgSend_isCompactHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCompactHeight");
}

id objc_msgSend_isCompactWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCompactWidth");
}

id objc_msgSend_isConnectedToInternet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isConnectedToInternet");
}

id objc_msgSend_isContentLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isContentLoaded");
}

id objc_msgSend_isContentManaged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isContentManaged");
}

id objc_msgSend_isContentRenderComplete(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isContentRenderComplete");
}

id objc_msgSend_isCorrectPassword_forDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCorrectPassword:forDocument:");
}

id objc_msgSend_isCurrentlyZoomed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCurrentlyZoomed");
}

id objc_msgSend_isDecelerating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDecelerating");
}

id objc_msgSend_isDeleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDeleted");
}

id objc_msgSend_isDifferentParserVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDifferentParserVersion:");
}

id objc_msgSend_isDirty(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDirty");
}

id objc_msgSend_isDone(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDone");
}

id objc_msgSend_isDownloading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDownloading");
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDragging");
}

id objc_msgSend_isDuplicateSpineEntry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDuplicateSpineEntry");
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEditing");
}

id objc_msgSend_isEmpty(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEmpty");
}

id objc_msgSend_isEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEnabled");
}

id objc_msgSend_isEncrypted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEncrypted");
}

id objc_msgSend_isEpubURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEpubURL:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToFlowingBookFontSizeConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToFlowingBookFontSizeConfiguration:");
}

id objc_msgSend_isEqualToFlowingBookLayoutConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToFlowingBookLayoutConfiguration:");
}

id objc_msgSend_isEqualToFlowingBookPlistConfigurationEnvironment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToFlowingBookPlistConfigurationEnvironment:");
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToNumber:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isExcludedFromSample(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExcludedFromSample");
}

id objc_msgSend_isExcludedFromSampleHash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isExcludedFromSampleHash:");
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFileURL");
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFirstResponder");
}

id objc_msgSend_isFixedLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFixedLayout");
}

id objc_msgSend_isForwardCurl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isForwardCurl");
}

id objc_msgSend_isFragmentEpubCFIFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isFragmentEpubCFIFunction:");
}

id objc_msgSend_isGoingToNextPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isGoingToNextPage");
}

id objc_msgSend_isHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHidden");
}

id objc_msgSend_isHighlighted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHighlighted");
}

id objc_msgSend_isHorizontalScroll(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHorizontalScroll");
}

id objc_msgSend_isHovering(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHovering");
}

id objc_msgSend_isInserted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInserted");
}

id objc_msgSend_isInstalled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInstalled");
}

id objc_msgSend_isInterfaceRTL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInterfaceRTL");
}

id objc_msgSend_isInternalInstall(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isInternalInstall");
}

id objc_msgSend_isJobGenerationValid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isJobGenerationValid");
}

id objc_msgSend_isLandscape(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLandscape");
}

id objc_msgSend_isLandscapeProhibited(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLandscapeProhibited");
}

id objc_msgSend_isLeft(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLeft");
}

id objc_msgSend_isLeftPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLeftPage");
}

id objc_msgSend_isLegalCompression_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLegalCompression:");
}

id objc_msgSend_isLegalEncryption_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLegalEncryption:");
}

id objc_msgSend_isLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLoaded");
}

id objc_msgSend_isLoading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLoading");
}

id objc_msgSend_isLocationFromThisDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocationFromThisDocument:");
}

id objc_msgSend_isLocationOnCurrentPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocationOnCurrentPage:");
}

id objc_msgSend_isLocationOnVisiblePages_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocationOnVisiblePages:completion:");
}

id objc_msgSend_isLocationSame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocationSame:");
}

id objc_msgSend_isLocationVisible_annotation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocationVisible:annotation:completion:");
}

id objc_msgSend_isLocationVisible_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocationVisible:completion:");
}

id objc_msgSend_isLocked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLocked");
}

id objc_msgSend_isLowLight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isLowLight");
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMainThread");
}

id objc_msgSend_isManagedBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isManagedBook");
}

id objc_msgSend_isManagedBookFromURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isManagedBookFromURL:");
}

id objc_msgSend_isManualCurlInProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isManualCurlInProgress");
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMemberOfClass:");
}

id objc_msgSend_isMenuVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMenuVisible");
}

id objc_msgSend_isModalSheet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isModalSheet");
}

id objc_msgSend_isNight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNight:");
}

id objc_msgSend_isNightMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNightMode");
}

id objc_msgSend_isNotWhitespace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isNotWhitespace");
}

id objc_msgSend_isOn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOn");
}

id objc_msgSend_isOnLastPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOnLastPage");
}

id objc_msgSend_isOpen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isOpen");
}

id objc_msgSend_isPageBookmarked(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPageBookmarked");
}

id objc_msgSend_isPageLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPageLocation");
}

id objc_msgSend_isPageProgressionRTL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPageProgressionRTL");
}

id objc_msgSend_isPageTheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPageTheme");
}

id objc_msgSend_isPasswordDialogNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPasswordDialogNeeded");
}

id objc_msgSend_isPasswordRequired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPasswordRequired");
}

id objc_msgSend_isPastEndOfBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPastEndOfBook:");
}

id objc_msgSend_isPastLimit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPastLimit");
}

id objc_msgSend_isPdfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPdfURL:");
}

id objc_msgSend_isPlaying(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPlaying");
}

id objc_msgSend_isPortraitProhibited(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPortraitProhibited");
}

id objc_msgSend_isPreorder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPreorder");
}

id objc_msgSend_isPrintingAllowed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPrintingAllowed");
}

id objc_msgSend_isProtected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isProtected");
}

id objc_msgSend_isRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRange");
}

id objc_msgSend_isReadAloudPaused(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReadAloudPaused");
}

id objc_msgSend_isReading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReading");
}

id objc_msgSend_isRequestValid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRequestValid");
}

id objc_msgSend_isRight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRight");
}

id objc_msgSend_isRightPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRightPage");
}

id objc_msgSend_isRotationInProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isRotationInProgress");
}

id objc_msgSend_isSampleFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSampleFromPlistEntry:");
}

id objc_msgSend_isSaving(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSaving");
}

id objc_msgSend_isScroll(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isScroll");
}

id objc_msgSend_isScrollModeDisabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isScrollModeDisabled");
}

id objc_msgSend_isScrolledContinuousFixedLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isScrolledContinuousFixedLayout");
}

id objc_msgSend_isScrolling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isScrolling");
}

id objc_msgSend_isScrubberDisabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isScrubberDisabled");
}

id objc_msgSend_isScrubbing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isScrubbing");
}

id objc_msgSend_isSearching(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSearching");
}

id objc_msgSend_isSeeking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSeeking");
}

id objc_msgSend_isSelected(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSelected");
}

id objc_msgSend_isSentinel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSentinel");
}

id objc_msgSend_isSharingSupported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSharingSupported");
}

id objc_msgSend_isShowingContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isShowingContent");
}

id objc_msgSend_isSkipping(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSkipping");
}

id objc_msgSend_isSpread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isSpread");
}

id objc_msgSend_isStoreBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStoreBook");
}

id objc_msgSend_isStyleRequiredForPagination(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isStyleRequiredForPagination");
}

id objc_msgSend_isTOCURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTOCURL:");
}

id objc_msgSend_isTemporaryID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTemporaryID");
}

id objc_msgSend_isThemeFlowingBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isThemeFlowingBook");
}

id objc_msgSend_isTracking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTracking");
}

id objc_msgSend_isTrackingAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isTrackingAssetID:");
}

id objc_msgSend_isUnderline(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUnderline");
}

id objc_msgSend_isUndesirableImageData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUndesirableImageData:");
}

id objc_msgSend_isUserInteractionEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isUserInteractionEnabled");
}

id objc_msgSend_isVertical(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVertical");
}

id objc_msgSend_isVerticalDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVerticalDocument");
}

id objc_msgSend_isVerticalScrubberVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVerticalScrubberVisible");
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isViewLoaded");
}

id objc_msgSend_isVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isVisible");
}

id objc_msgSend_isZoomBouncing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZoomBouncing");
}

id objc_msgSend_isZoomedBeyondPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZoomedBeyondPage");
}

id objc_msgSend_isZoomedCloseToSpread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZoomedCloseToSpread");
}

id objc_msgSend_isZoomedToRightPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZoomedToRightPage");
}

id objc_msgSend_isZoomedToSinglePage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZoomedToSinglePage");
}

id objc_msgSend_isZoomedToSpread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZoomedToSpread");
}

id objc_msgSend_isZooming(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZooming");
}

id objc_msgSend_itemProviderWithAnnotation_propertyProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "itemProviderWithAnnotation:propertyProvider:");
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "items");
}

id objc_msgSend_javascriptForSwappingAllImages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "javascriptForSwappingAllImages");
}

id objc_msgSend_job(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "job");
}

id objc_msgSend_jobGeneration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jobGeneration");
}

id objc_msgSend_jobName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jobName");
}

id objc_msgSend_jsonObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jsonObject");
}

id objc_msgSend_jumpToLocation_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "jumpToLocation:animated:completion:");
}

id objc_msgSend_justification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "justification");
}

id objc_msgSend_keyColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyColor");
}

id objc_msgSend_keyCommandWithInput_modifierFlags_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyCommandWithInput:modifierFlags:action:");
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyEnumerator");
}

id objc_msgSend_keyForAssetID_prefix_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyForAssetID:prefix:size:");
}

id objc_msgSend_keyPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyPath");
}

id objc_msgSend_keyPrefixForPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyPrefixForPage:");
}

id objc_msgSend_keyboardAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyboardAppearance");
}

id objc_msgSend_keyedRectsFromKeyedDOMRects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyedRectsFromKeyedDOMRects:");
}

id objc_msgSend_killACurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "killACurl:");
}

id objc_msgSend_killAllCurls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "killAllCurls");
}

id objc_msgSend_killCurl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "killCurl");
}

id objc_msgSend_killCurlingSourceViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "killCurlingSourceViews");
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "kind");
}

id objc_msgSend_label(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "label");
}

id objc_msgSend_labelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelFont");
}

id objc_msgSend_labelText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "labelText");
}

id objc_msgSend_landmarkAnchors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "landmarkAnchors");
}

id objc_msgSend_landmarks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "landmarks");
}

id objc_msgSend_landscapePredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "landscapePredicate");
}

id objc_msgSend_language(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "language");
}

id objc_msgSend_languageCode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageCode");
}

id objc_msgSend_languageDefaultsToHorizontalOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageDefaultsToHorizontalOrientation:");
}

id objc_msgSend_languageDefaultsToHorizontalTextFlow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageDefaultsToHorizontalTextFlow");
}

id objc_msgSend_languageDefaultsToPageProgressLeftToRight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageDefaultsToPageProgressLeftToRight:");
}

id objc_msgSend_languageFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageFromPlistEntry:");
}

id objc_msgSend_languageIsArabic_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsArabic:");
}

id objc_msgSend_languageIsHebrew_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsHebrew:");
}

id objc_msgSend_languageIsSimplifiedChinese_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageIsSimplifiedChinese:");
}

id objc_msgSend_languageSuffix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "languageSuffix");
}

id objc_msgSend_largePhoneSizeClassPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "largePhoneSizeClassPredicate");
}

id objc_msgSend_largeSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "largeSize");
}

id objc_msgSend_largeSizeFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "largeSizeFactor");
}

id objc_msgSend_lastAnalyticsDeviceOrientationReported(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastAnalyticsDeviceOrientationReported");
}

id objc_msgSend_lastCompletedTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastCompletedTransition");
}

id objc_msgSend_lastDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastDocument");
}

id objc_msgSend_lastIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastIndex");
}

id objc_msgSend_lastLayoutUsedKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastLayoutUsedKey");
}

id objc_msgSend_lastLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastLocation");
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastObject");
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastPathComponent");
}

id objc_msgSend_lastSavedSearchResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lastSavedSearchResult");
}

id objc_msgSend_launchedToTest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "launchedToTest");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_layer_containsHighlightAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer:containsHighlightAtPoint:");
}

id objc_msgSend_layout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layout");
}

id objc_msgSend_layoutComplete_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutComplete:");
}

id objc_msgSend_layoutDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutDelegate");
}

id objc_msgSend_layoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutDirection");
}

id objc_msgSend_layoutDocumentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutDocumentView");
}

id objc_msgSend_layoutFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutFrame");
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutIfNeeded");
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutMarginsGuide");
}

id objc_msgSend_layoutQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutQueue");
}

id objc_msgSend_layoutScrubberCallout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutScrubberCallout:");
}

id objc_msgSend_layoutSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutSize");
}

id objc_msgSend_layoutSubviewsNotEditingWithBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layoutSubviewsNotEditingWithBounds:");
}

id objc_msgSend_leading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leading");
}

id objc_msgSend_leadingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leadingAnchor");
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftAnchor");
}

id objc_msgSend_leftCalloutPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftCalloutPageNumber");
}

id objc_msgSend_leftContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftContentView");
}

id objc_msgSend_leftPageIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftPageIndex");
}

id objc_msgSend_leftPageNumberAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftPageNumberAtIndex:");
}

id objc_msgSend_leftPageNumberForSinglePageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftPageNumberForSinglePageOffset:");
}

id objc_msgSend_leftPageNumberForSpreadPageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftPageNumberForSpreadPageOffset:");
}

id objc_msgSend_leftPageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftPageView");
}

id objc_msgSend_leftSourceView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftSourceView");
}

id objc_msgSend_leftToolbarItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftToolbarItems");
}

id objc_msgSend_leftView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "leftView");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_libraryButtonItemForViewController_selector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "libraryButtonItemForViewController:selector:");
}

id objc_msgSend_libraryMgr(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "libraryMgr");
}

id objc_msgSend_lightGrayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lightGrayColor");
}

id objc_msgSend_lightenBlend(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lightenBlend");
}

id objc_msgSend_lineHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lineHeight");
}

id objc_msgSend_linearDocumentCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linearDocumentCount");
}

id objc_msgSend_linearDocumentPredicateForDatabaseKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linearDocumentPredicateForDatabaseKey:");
}

id objc_msgSend_linearDocuments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linearDocuments");
}

id objc_msgSend_linearIndexForOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linearIndexForOrdinal:");
}

id objc_msgSend_lines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lines");
}

id objc_msgSend_linkActiveColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkActiveColor");
}

id objc_msgSend_linkColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkColor");
}

id objc_msgSend_linkVisitedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkVisitedColor");
}

id objc_msgSend_load(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "load");
}

id objc_msgSend_loadAKToolbarView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadAKToolbarView");
}

id objc_msgSend_loadAnyMissingThumbnails(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadAnyMissingThumbnails");
}

id objc_msgSend_loadData_MIMEType_characterEncodingName_baseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadData:MIMEType:characterEncodingName:baseURL:");
}

id objc_msgSend_loadDataRepresentationForTypeIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadDataRepresentationForTypeIdentifier:completionHandler:");
}

id objc_msgSend_loadFailureCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadFailureCount");
}

id objc_msgSend_loadFonts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadFonts");
}

id objc_msgSend_loadHTML(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadHTML");
}

id objc_msgSend_loadMetadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadMetadata");
}

id objc_msgSend_loadMore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadMore");
}

id objc_msgSend_loadPersistentStoresWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadPersistentStoresWithCompletionHandler:");
}

id objc_msgSend_loadRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadRequest:");
}

id objc_msgSend_loadRequestWithContents_template_fontFamily_fontSize_maxSpan_textColor_selectedColor_backgroundColor_baseURL_forObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadRequestWithContents:template:fontFamily:fontSize:maxSpan:textColor:selectedColor:backgroundColor:baseURL:forObject:");
}

id objc_msgSend_loadRequestWithHTML_maxSpan_selectedColor_baseURL_forObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadRequestWithHTML:maxSpan:selectedColor:baseURL:forObject:");
}

id objc_msgSend_loadSemaphore(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadSemaphore");
}

id objc_msgSend_loadViewIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadViewIfNeeded");
}

id objc_msgSend_loadViewUIImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadViewUIImage");
}

id objc_msgSend_loader(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loader");
}

id objc_msgSend_loadingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loadingView");
}

id objc_msgSend_localeWithLocaleIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeWithLocaleIdentifier:");
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedName");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_location(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "location");
}

id objc_msgSend_locationAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationAtIndex:");
}

id objc_msgSend_locationEnsuredFirstPaintWorkBlock(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationEnsuredFirstPaintWorkBlock");
}

id objc_msgSend_locationForAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationForAnchor:");
}

id objc_msgSend_locationForCFI_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationForCFI:error:");
}

id objc_msgSend_locationForCfi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationForCfi:");
}

id objc_msgSend_locationForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationForPageNumber:");
}

id objc_msgSend_locationForPath_fragment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationForPath:fragment:");
}

id objc_msgSend_locationForSelection_offset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationForSelection:offset:");
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationInView:");
}

id objc_msgSend_locationModificationDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationModificationDate");
}

id objc_msgSend_locationOfTouch_inView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationOfTouch:inView:");
}

id objc_msgSend_locationWithAdjustedSpineIndex_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationWithAdjustedSpineIndex:error:");
}

id objc_msgSend_locations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locations");
}

id objc_msgSend_logRecursively(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logRecursively");
}

id objc_msgSend_logger(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "logger");
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longLongValue");
}

id objc_msgSend_longPressGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "longPressGestureRecognizer");
}

id objc_msgSend_lookupKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lookupKey");
}

id objc_msgSend_lookupKeyForStyle_geometry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lookupKeyForStyle:geometry:");
}

id objc_msgSend_loupeGesture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loupeGesture");
}

id objc_msgSend_loupeHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loupeHeight");
}

id objc_msgSend_loupeMask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loupeMask");
}

id objc_msgSend_loupePointForPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loupePointForPoint:");
}

id objc_msgSend_loupeSheen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loupeSheen");
}

id objc_msgSend_loupeWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "loupeWidth");
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowercaseString");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainRunLoop");
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainScreen");
}

id objc_msgSend_mainSystem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainSystem");
}

id objc_msgSend_makeContentVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeContentVisible");
}

id objc_msgSend_makeKeyAndVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeKeyAndVisible");
}

id objc_msgSend_makeObjectsPerformSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeObjectsPerformSelector:");
}

id objc_msgSend_makeObjectsPerformSelector_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeObjectsPerformSelector:withObject:");
}

id objc_msgSend_makeSelectedBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeSelectedBackgroundView");
}

id objc_msgSend_makeTOCVisible(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "makeTOCVisible");
}

id objc_msgSend_managedBooksAllowedToSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedBooksAllowedToSync");
}

id objc_msgSend_managedObjectContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "managedObjectContext");
}

id objc_msgSend_manifestId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manifestId");
}

id objc_msgSend_manifestProperties(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manifestProperties");
}

id objc_msgSend_manualCurlHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manualCurlHandler");
}

id objc_msgSend_manualCurlStartPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "manualCurlStartPosition");
}

id objc_msgSend_markupDocumentForMediaOverlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "markupDocumentForMediaOverlay");
}

id objc_msgSend_mask(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mask");
}

id objc_msgSend_matchesTarget_andAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "matchesTarget:andAction:");
}

id objc_msgSend_maxContentHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxContentHeight");
}

id objc_msgSend_maxScaleFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxScaleFactor");
}

id objc_msgSend_maxSpanForTextWithIndentation_font_width_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxSpanForTextWithIndentation:font:width:");
}

id objc_msgSend_maximumContentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumContentOffset");
}

id objc_msgSend_maximumSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumSize");
}

id objc_msgSend_maximumZoomScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumZoomScale");
}

id objc_msgSend_mediaActiveClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaActiveClass");
}

id objc_msgSend_mediaFrames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaFrames");
}

id objc_msgSend_mediaFramesScript(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaFramesScript");
}

id objc_msgSend_mediaOverlayElements(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaOverlayElements");
}

id objc_msgSend_mediaOverlayHref(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaOverlayHref");
}

id objc_msgSend_mediaOverlayHrefForManifestInfo_readable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaOverlayHrefForManifestInfo:readable:");
}

id objc_msgSend_mediaOverlayParsed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaOverlayParsed");
}

id objc_msgSend_mediaSource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediaSource");
}

id objc_msgSend_mediumSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mediumSize");
}

id objc_msgSend_megaPadSizeClassPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "megaPadSizeClassPredicate");
}

id objc_msgSend_megaPhoneSizeClassPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "megaPhoneSizeClassPredicate");
}

id objc_msgSend_memoryCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "memoryCache");
}

id objc_msgSend_menuFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuFrame");
}

id objc_msgSend_menuItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuItems");
}

id objc_msgSend_menuWithChildren_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuWithChildren:");
}

id objc_msgSend_menuWithTitle_image_identifier_options_children_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "menuWithTitle:image:identifier:options:children:");
}

id objc_msgSend_mergePredicate_andPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mergePredicate:andPredicate:");
}

id objc_msgSend_metadataForAssetAtURL_needsCoordination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataForAssetAtURL:needsCoordination:");
}

id objc_msgSend_metadataForKey_forURL_needsCoordination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metadataForKey:forURL:needsCoordination:");
}

id objc_msgSend_metricsForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "metricsForTextStyle:");
}

id objc_msgSend_mime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mime");
}

id objc_msgSend_minCPLForSpreadPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minCPLForSpreadPages");
}

id objc_msgSend_minScaleFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minScaleFactor");
}

id objc_msgSend_miniHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "miniHeight");
}

id objc_msgSend_minifiedControllerDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minifiedControllerDelegate");
}

id objc_msgSend_minifiedControllerLoadedAssetViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minifiedControllerLoadedAssetViewController");
}

id objc_msgSend_minifiedControllerRequestClose_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minifiedControllerRequestClose:error:");
}

id objc_msgSend_minimumBoundingBox(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumBoundingBox");
}

id objc_msgSend_minimumContentOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumContentOffset");
}

id objc_msgSend_minimumGestureInterval(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumGestureInterval");
}

id objc_msgSend_minimumZoomScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumZoomScale");
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_mode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mode");
}

id objc_msgSend_monospacedDigitSystemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "monospacedDigitSystemFontOfSize:weight:");
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableBytes");
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopy");
}

id objc_msgSend_mutableSearchResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableSearchResult");
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "name");
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationBar");
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationController");
}

id objc_msgSend_navigationHandler_didFinishLoadOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationHandler:didFinishLoadOfURL:");
}

id objc_msgSend_navigationHistory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationHistory");
}

id objc_msgSend_navigationInfoAnchors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationInfoAnchors");
}

id objc_msgSend_navigationInfoHrefsForOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationInfoHrefsForOrdinal:");
}

id objc_msgSend_navigationInfosForDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationInfosForDocument:");
}

id objc_msgSend_navigationOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationOrientation");
}

id objc_msgSend_navigationType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "navigationType");
}

id objc_msgSend_needPiggyBackOperationForOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needPiggyBackOperationForOrdinal:");
}

id objc_msgSend_needTOCEntriesForOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needTOCEntriesForOrdinal:");
}

id objc_msgSend_needTextNodeCharacterCountsForOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needTextNodeCharacterCountsForOrdinal:");
}

id objc_msgSend_needsBookManagedObjectContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsBookManagedObjectContext");
}

id objc_msgSend_needsReparsing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsReparsing");
}

id objc_msgSend_negated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "negated");
}

id objc_msgSend_newAugmentedExperienceManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newAugmentedExperienceManager");
}

id objc_msgSend_newBackgroundContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newBackgroundContext");
}

id objc_msgSend_newBookmarkPageArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newBookmarkPageArray");
}

id objc_msgSend_newByClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newByClass:");
}

id objc_msgSend_newEmptyChapterPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newEmptyChapterPageNumber:");
}

id objc_msgSend_newEmptyDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newEmptyDocument:");
}

id objc_msgSend_newEmptyDocumentPageCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newEmptyDocumentPageCount:");
}

id objc_msgSend_newEmptyNavigationInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newEmptyNavigationInfo:");
}

id objc_msgSend_newEmptyProtectionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newEmptyProtectionInfo:");
}

id objc_msgSend_newGlassButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newGlassButton");
}

id objc_msgSend_newHistoryEntityResultsArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newHistoryEntityResultsArray");
}

id objc_msgSend_newLandmarkInfoAnchorArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newLandmarkInfoAnchorArray");
}

id objc_msgSend_newManagedObjectContextWithPrivateQueueConcurrency(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newManagedObjectContextWithPrivateQueueConcurrency");
}

id objc_msgSend_newMediaOverlayElement_withParserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newMediaOverlayElement:withParserInfo:");
}

id objc_msgSend_newNavigationInfoAnchorArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newNavigationInfoAnchorArray");
}

id objc_msgSend_newPageLocationArrayWithAnchorInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newPageLocationArrayWithAnchorInfos:");
}

id objc_msgSend_newPaginationControllerForBook_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newPaginationControllerForBook:delegate:");
}

id objc_msgSend_newPhysicalPageAnchorArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newPhysicalPageAnchorArray");
}

id objc_msgSend_newSessionAssertion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newSessionAssertion");
}

id objc_msgSend_newViewControllerForAEBookInfo_storeID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newViewControllerForAEBookInfo:storeID:");
}

id objc_msgSend_newestAnnotationWithPredicate_rangeCheck_moc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newestAnnotationWithPredicate:rangeCheck:moc:");
}

id objc_msgSend_newlineCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newlineCharacterSet");
}

id objc_msgSend_nextEntity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextEntity");
}

id objc_msgSend_nextObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextObject");
}

id objc_msgSend_nextSearchResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextSearchResult");
}

id objc_msgSend_nextTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nextTime");
}

id objc_msgSend_nightMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nightMode");
}

id objc_msgSend_noAutoHyphenation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noAutoHyphenation");
}

id objc_msgSend_noJustification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noJustification");
}

id objc_msgSend_nonlinearElement(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "nonlinearElement");
}

id objc_msgSend_noteEditorHighlightedTextFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteEditorHighlightedTextFont");
}

id objc_msgSend_noteFontForPopover(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteFontForPopover");
}

id objc_msgSend_noteLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteLabel");
}

id objc_msgSend_noteSideLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteSideLength");
}

id objc_msgSend_noteTextFontInTable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteTextFontInTable");
}

id objc_msgSend_noteTextFrameForString_font_bounds_highlightedTextFrame_pageLabelFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteTextFrameForString:font:bounds:highlightedTextFrame:pageLabelFrame:");
}

id objc_msgSend_noteTextFrameForString_font_bounds_spacingToItemAbove_numberOfLines_matchesWidthOfHighlightedText_highlightedTextFrame_pageLabelFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteTextFrameForString:font:bounds:spacingToItemAbove:numberOfLines:matchesWidthOfHighlightedText:highlightedTextFrame:pageLabelFrame:");
}

id objc_msgSend_noteTextFrameInPopoverForString_font_bounds_highlightedTextFrame_pageLabelFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "noteTextFrameInPopoverForString:font:bounds:highlightedTextFrame:pageLabelFrame:");
}

id objc_msgSend_notifyAppIntentsInfoChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyAppIntentsInfoChanged");
}

id objc_msgSend_notifyBookController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyBookController:");
}

id objc_msgSend_notifyBookSharingClientSelectionChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyBookSharingClientSelectionChanged");
}

id objc_msgSend_notifyPlaybackWillStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyPlaybackWillStart:");
}

id objc_msgSend_notifyStyleChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifyStyleChanged");
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "null");
}

id objc_msgSend_numberOfCellsInGridView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfCellsInGridView:");
}

id objc_msgSend_numberOfChapters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfChapters");
}

id objc_msgSend_numberOfChildren(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfChildren");
}

id objc_msgSend_numberOfLines(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfLines");
}

id objc_msgSend_numberOfMarkupAnnotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfMarkupAnnotations");
}

id objc_msgSend_numberOfMarkupAnnotationsWithPopups(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfMarkupAnnotationsWithPopups");
}

id objc_msgSend_numberOfMatchesInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfMatchesInString:options:range:");
}

id objc_msgSend_numberOfObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfObjects");
}

id objc_msgSend_numberOfQueuedCurls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfQueuedCurls");
}

id objc_msgSend_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfRowsInSection:");
}

id objc_msgSend_numberOfSections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfSections");
}

id objc_msgSend_numberOfSectionsInTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfSectionsInTableView:");
}

id objc_msgSend_numberOfSegments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfSegments");
}

id objc_msgSend_numberOfTapsRequired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfTapsRequired");
}

id objc_msgSend_numberOfTouches(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfTouches");
}

id objc_msgSend_numberOfTouchesRequired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberOfTouchesRequired");
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_obeyPageBreaks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "obeyPageBreaks");
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "object");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexPath:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectForMatchingAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForMatchingAnnotation:");
}

id objc_msgSend_objectID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectID");
}

id objc_msgSend_objectIDsWithPredicate_forEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectIDsWithPredicate:forEntity:");
}

id objc_msgSend_objects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objects");
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsAtIndexes:");
}

id objc_msgSend_observer_didChangeFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observer:didChangeFont:");
}

id objc_msgSend_observer_didChangeLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observer:didChangeLayout:");
}

id objc_msgSend_observer_didChangeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observer:didChangeStyle:");
}

id objc_msgSend_observerDidDecreaseFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observerDidDecreaseFontSize:");
}

id objc_msgSend_observerDidIncreaseFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "observerDidIncreaseFontSize:");
}

id objc_msgSend_offset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "offset");
}

id objc_msgSend_ongoingAnimationCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ongoingAnimationCount");
}

id objc_msgSend_onlySupportsScrollingLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "onlySupportsScrollingLayout");
}

id objc_msgSend_opacity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "opacity");
}

id objc_msgSend_openToSpread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openToSpread");
}

id objc_msgSend_openURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURL:options:completionHandler:");
}

id objc_msgSend_openURLUsingNSString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openURLUsingNSString:");
}

id objc_msgSend_openingLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openingLocation");
}

id objc_msgSend_operationClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationClass");
}

id objc_msgSend_operationCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationCount");
}

id objc_msgSend_operationQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operationQueue");
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "operations");
}

id objc_msgSend_optedIn(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optedIn");
}

id objc_msgSend_optimizeLegibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optimizeLegibility");
}

id objc_msgSend_optimizedRepresentativeTextForSerialization_selectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optimizedRepresentativeTextForSerialization:selectedText:");
}

id objc_msgSend_optimizedSelectedTextForSerialization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "optimizedSelectedTextForSerialization:");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "options");
}

id objc_msgSend_ordinal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ordinal");
}

id objc_msgSend_orientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orientation");
}

id objc_msgSend_origin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "origin");
}

id objc_msgSend_originForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originForPageNumber:");
}

id objc_msgSend_originForPageNumber_pagesContainerSize_isSpread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "originForPageNumber:pagesContainerSize:isSpread:");
}

id objc_msgSend_orthography(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "orthography");
}

id objc_msgSend_osBuildVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "osBuildVersion");
}

id objc_msgSend_outlineItemForSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outlineItemForSelection:");
}

id objc_msgSend_outlineRoot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "outlineRoot");
}

id objc_msgSend_overlayContentBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overlayContentBackgroundColor");
}

id objc_msgSend_overrideBuildMenuLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideBuildMenuLocation");
}

id objc_msgSend_overrideFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideFontSize");
}

id objc_msgSend_overrideProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideProvider");
}

id objc_msgSend_overrideUserInterfaceStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overrideUserInterfaceStyle");
}

id objc_msgSend_owner(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "owner");
}

id objc_msgSend_pK0gFZ9QOdm17E9p9cpP_sinfData_refetch_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pK0gFZ9QOdm17E9p9cpP:sinfData:refetch:error:");
}

id objc_msgSend_pNumColumnsForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pNumColumnsForSize:");
}

id objc_msgSend_p_annotationForIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_annotationForIndexPath:");
}

id objc_msgSend_p_annotationsForRowItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_annotationsForRowItems:");
}

id objc_msgSend_p_kitImageWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_kitImageWithName:");
}

id objc_msgSend_p_releaseDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_releaseDictionary");
}

id objc_msgSend_p_selectedAnnotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_selectedAnnotations");
}

id objc_msgSend_p_standardSearchBar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_standardSearchBar");
}

id objc_msgSend_p_willUseWebViewForCellWithChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_willUseWebViewForCellWithChapter:");
}

id objc_msgSend_page(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "page");
}

id objc_msgSend_pageAnimation_didFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageAnimation:didFinish:");
}

id objc_msgSend_pageAnimationDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageAnimationDelegate");
}

id objc_msgSend_pageAnimationWillBegin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageAnimationWillBegin:");
}

id objc_msgSend_pageArray(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageArray");
}

id objc_msgSend_pageAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageAtIndex:");
}

id objc_msgSend_pageBookmarksPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageBookmarksPredicate:");
}

id objc_msgSend_pageCacheDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCacheDistance");
}

id objc_msgSend_pageColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageColor");
}

id objc_msgSend_pageContentBoundsForBookContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageContentBoundsForBookContainerView:");
}

id objc_msgSend_pageCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCount");
}

id objc_msgSend_pageCountDidUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCountDidUpdate");
}

id objc_msgSend_pageCountExcludingUpsell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCountExcludingUpsell");
}

id objc_msgSend_pageCountIncludingUpsell(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCountIncludingUpsell");
}

id objc_msgSend_pageCurl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurl");
}

id objc_msgSend_pageCurl_finished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurl:finished:");
}

id objc_msgSend_pageCurlConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlConfiguration");
}

id objc_msgSend_pageCurlManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlManager");
}

id objc_msgSend_pageCurlManager_delayForCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlManager:delayForCurl:");
}

id objc_msgSend_pageCurlManager_didFinishCurl_transitionCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlManager:didFinishCurl:transitionCompleted:");
}

id objc_msgSend_pageCurlManager_durationForCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlManager:durationForCurl:");
}

id objc_msgSend_pageCurlManager_willBeginCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlManager:willBeginCurl:");
}

id objc_msgSend_pageCurlManager_willCancelCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlManager:willCancelCurl:");
}

id objc_msgSend_pageCurlManagerRemovesViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlManagerRemovesViews:");
}

id objc_msgSend_pageCurlManagerShouldKillLastOpposingCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlManagerShouldKillLastOpposingCurl:");
}

id objc_msgSend_pageCurlManagerStabilizationFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlManagerStabilizationFactor");
}

id objc_msgSend_pageCurlWillCancel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlWillCancel");
}

id objc_msgSend_pageCurlWillCancelWithDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageCurlWillCancelWithDuration:");
}

id objc_msgSend_pageDictionaryToPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageDictionaryToPageNumber");
}

id objc_msgSend_pageForLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageForLookupKey:");
}

id objc_msgSend_pageIndexForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageIndexForLocation:");
}

id objc_msgSend_pageIndexForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageIndexForPageNumber:");
}

id objc_msgSend_pageIndexFromChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageIndexFromChapter:");
}

id objc_msgSend_pageLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageLabel");
}

id objc_msgSend_pageLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageLabelFont");
}

id objc_msgSend_pageLabelFrameForString_font_bounds_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageLabelFrameForString:font:bounds:layoutDirection:");
}

id objc_msgSend_pageLabelFrameForString_font_bounds_topMargin_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageLabelFrameForString:font:bounds:topMargin:layoutDirection:");
}

id objc_msgSend_pageLabelFrameInPopoverForString_font_bounds_layoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageLabelFrameInPopoverForString:font:bounds:layoutDirection:");
}

id objc_msgSend_pageLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageLength");
}

id objc_msgSend_pageLocationForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageLocationForPageNumber:");
}

id objc_msgSend_pageNavigationContentViewWillAppear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationContentViewWillAppear:");
}

id objc_msgSend_pageNavigationController_shouldDelayChangeToPageOffset_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationController:shouldDelayChangeToPageOffset:completion:");
}

id objc_msgSend_pageNavigationCurrentReadAloudPageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationCurrentReadAloudPageOffset:");
}

id objc_msgSend_pageNavigationDidBeginInteracting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationDidBeginInteracting:");
}

id objc_msgSend_pageNavigationDidChangeLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationDidChangeLocation:");
}

id objc_msgSend_pageNavigationDidRemoveContentForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationDidRemoveContentForPageNumber:");
}

id objc_msgSend_pageNavigationDidRemoveContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationDidRemoveContentViewController:");
}

id objc_msgSend_pageNavigationDidSwipeToNextPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationDidSwipeToNextPage:");
}

id objc_msgSend_pageNavigationDidTryToSwipePastEndOfBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationDidTryToSwipePastEndOfBook:");
}

id objc_msgSend_pageNavigationIsVertical(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationIsVertical");
}

id objc_msgSend_pageNavigationSnapshotForPageNumber_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationSnapshotForPageNumber:completion:");
}

id objc_msgSend_pageNavigationSnapshotForPageNumber_size_isRight_zoomScale_applyMaskAndGutter_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationSnapshotForPageNumber:size:isRight:zoomScale:applyMaskAndGutter:completion:");
}

id objc_msgSend_pageNavigationToggleControls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationToggleControls:");
}

id objc_msgSend_pageNavigationViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNavigationViewController");
}

id objc_msgSend_pageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumber");
}

id objc_msgSend_pageNumberAndHighlightedTextFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberAndHighlightedTextFontSize");
}

id objc_msgSend_pageNumberAtContentOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberAtContentOffset:");
}

id objc_msgSend_pageNumberBeforeScrubbing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberBeforeScrubbing");
}

id objc_msgSend_pageNumberBeforeTransition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberBeforeTransition");
}

id objc_msgSend_pageNumberFontForPopover(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberFontForPopover");
}

id objc_msgSend_pageNumberFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberFontSize");
}

id objc_msgSend_pageNumberForCellIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberForCellIndex:");
}

id objc_msgSend_pageNumberForChapter_directoryDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberForChapter:directoryDelegate:");
}

id objc_msgSend_pageNumberForCurrentLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberForCurrentLocation");
}

id objc_msgSend_pageNumberForDocumentOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberForDocumentOrdinal:");
}

id objc_msgSend_pageNumberForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberForLocation:");
}

id objc_msgSend_pageNumberForOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberForOrdinal:");
}

id objc_msgSend_pageNumberForPageIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberForPageIndex:");
}

id objc_msgSend_pageNumberForTouchBarPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberForTouchBarPosition:");
}

id objc_msgSend_pageNumberForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberForValue:");
}

id objc_msgSend_pageNumberFromChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberFromChapter:");
}

id objc_msgSend_pageNumberFromRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberFromRange:");
}

id objc_msgSend_pageNumberHUD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberHUD");
}

id objc_msgSend_pageNumberHUDHeightConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberHUDHeightConstraint");
}

id objc_msgSend_pageNumberHUDTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberHUDTopConstraint");
}

id objc_msgSend_pageNumberHUDWidthConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberHUDWidthConstraint");
}

id objc_msgSend_pageNumberLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberLabel");
}

id objc_msgSend_pageNumberStringForChapter_directoryDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageNumberStringForChapter:directoryDelegate:");
}

id objc_msgSend_pageOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageOffset");
}

id objc_msgSend_pageOffsetForAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageOffsetForAnchor:");
}

id objc_msgSend_pageOffsetForCFILocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageOffsetForCFILocation:");
}

id objc_msgSend_pageOffsetForHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageOffsetForHref:");
}

id objc_msgSend_pageOffsetForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageOffsetForLocation:");
}

id objc_msgSend_pageOffsetRangeForLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageOffsetRangeForLocation:completion:");
}

id objc_msgSend_pageOffsetRangeForRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageOffsetRangeForRect:");
}

id objc_msgSend_pagePositionForTouchBarPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pagePositionForTouchBarPosition:");
}

id objc_msgSend_pageProgressionDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageProgressionDirection");
}

id objc_msgSend_pageProgressionDirectionForAssetAtURLOnMainThread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageProgressionDirectionForAssetAtURLOnMainThread:");
}

id objc_msgSend_pageProgressionFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageProgressionFromPlistEntry:");
}

id objc_msgSend_pageRangeAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageRangeAtIndex:");
}

id objc_msgSend_pageRangeForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageRangeForAnnotation:");
}

id objc_msgSend_pageRangeForChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageRangeForChapter:");
}

id objc_msgSend_pageRangeForChapterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageRangeForChapterAtIndex:");
}

id objc_msgSend_pageRangeForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageRangeForLocation:");
}

id objc_msgSend_pageRangeForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageRangeForPageNumber:");
}

id objc_msgSend_pageScrollerPageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageScrollerPageView");
}

id objc_msgSend_pageSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageSize");
}

id objc_msgSend_pageSlideAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageSlideAnimation");
}

id objc_msgSend_pageTextDirectionIsRTL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageTextDirectionIsRTL");
}

id objc_msgSend_pageTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageTitle");
}

id objc_msgSend_pageTitleForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageTitleForAnnotation:");
}

id objc_msgSend_pageTitleForChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageTitleForChapter:");
}

id objc_msgSend_pageTitleForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageTitleForLocation:");
}

id objc_msgSend_pageTitleForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageTitleForPageNumber:");
}

id objc_msgSend_pageTotal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageTotal");
}

id objc_msgSend_pageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageView");
}

id objc_msgSend_pageViewControllersDidChange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageViewControllersDidChange");
}

id objc_msgSend_pageViewForPageAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageViewForPageAtIndex:");
}

id objc_msgSend_pageViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pageViews");
}

id objc_msgSend_pages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pages");
}

id objc_msgSend_pagesContainerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pagesContainerView");
}

id objc_msgSend_pagesInDocumentOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pagesInDocumentOrdinal:");
}

id objc_msgSend_pagination(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pagination");
}

id objc_msgSend_paginationArrayWithLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationArrayWithLookupKey:");
}

id objc_msgSend_paginationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationController");
}

id objc_msgSend_paginationControllerFinishedBookPagination_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationControllerFinishedBookPagination:");
}

id objc_msgSend_paginationInfoForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationInfoForPageNumber:");
}

id objc_msgSend_paginationOperationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationOperationController");
}

id objc_msgSend_paginationOptions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationOptions");
}

id objc_msgSend_paginationOptionsForBookInfoSnapshot_withConfiguration_contentLayoutSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationOptionsForBookInfoSnapshot:withConfiguration:contentLayoutSize:");
}

id objc_msgSend_paginationRetryCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationRetryCount");
}

id objc_msgSend_paginationRevision(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationRevision");
}

id objc_msgSend_paginationUpdateRequired(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationUpdateRequired");
}

id objc_msgSend_paginationUpdateRequiredForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "paginationUpdateRequiredForContentViewController:");
}

id objc_msgSend_pagingScrollView_didAddView_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pagingScrollView:didAddView:atIndex:");
}

id objc_msgSend_pagingScrollView_didRemoveView_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pagingScrollView:didRemoveView:atIndex:");
}

id objc_msgSend_pagingScrollView_viewAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pagingScrollView:viewAtIndex:");
}

id objc_msgSend_pagingScrollView_viewDidAppear_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pagingScrollView:viewDidAppear:atIndex:");
}

id objc_msgSend_pagingScrollView_viewDidDisappear_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pagingScrollView:viewDidDisappear:atIndex:");
}

id objc_msgSend_panGesture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "panGesture");
}

id objc_msgSend_parent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parent");
}

id objc_msgSend_parse(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parse");
}

id objc_msgSend_parse_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parse:");
}

id objc_msgSend_parseBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseBook:");
}

id objc_msgSend_parseDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseDate");
}

id objc_msgSend_parseSMIL_contentSubpath_bookBasePath_bookDatabaseKey_managedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseSMIL:contentSubpath:bookBasePath:bookDatabaseKey:managedObjectContext:");
}

id objc_msgSend_parseTemplate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parseTemplate:error:");
}

id objc_msgSend_parserForBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parserForBook:");
}

id objc_msgSend_parserNCXPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parserNCXPath");
}

id objc_msgSend_parserOPFPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parserOPFPath");
}

id objc_msgSend_parserVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "parserVersion");
}

id objc_msgSend_password(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "password");
}

id objc_msgSend_pasteboardString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pasteboardString");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path");
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathComponents");
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathExtension");
}

id objc_msgSend_pathForResource_ofType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForResource:ofType:");
}

id objc_msgSend_pathForSoundtrack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathForSoundtrack");
}

id objc_msgSend_pathRelativeToContentBase_forRelativePath_startingFromAbsoluteFolderPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathRelativeToContentBase:forRelativePath:startingFromAbsoluteFolderPath:");
}

id objc_msgSend_pathWithComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathWithComponents:");
}

id objc_msgSend_pause(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pause");
}

id objc_msgSend_pauseReadAloud(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseReadAloud");
}

id objc_msgSend_pauseSearch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pauseSearch");
}

id objc_msgSend_pausedTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pausedTime");
}

id objc_msgSend_pdfAnchorToPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pdfAnchorToPageNumber:");
}

id objc_msgSend_pdfDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pdfDocument");
}

id objc_msgSend_pdfDocumentCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pdfDocumentCache");
}

id objc_msgSend_pdfObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pdfObject");
}

id objc_msgSend_pdfOutlineRoot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pdfOutlineRoot");
}

id objc_msgSend_pdfScrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pdfScrollView");
}

id objc_msgSend_pdfUndoManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pdfUndoManager");
}

id objc_msgSend_pdfView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pdfView");
}

id objc_msgSend_pendingInfoRequest(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pendingInfoRequest");
}

id objc_msgSend_percentCompletionEnd(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "percentCompletionEnd");
}

id objc_msgSend_percentCompletionStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "percentCompletionStart");
}

id objc_msgSend_performActionForSender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performActionForSender:");
}

id objc_msgSend_performAfterLoad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAfterLoad");
}

id objc_msgSend_performAfterLoadCompleteOrFailure_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAfterLoadCompleteOrFailure:");
}

id objc_msgSend_performAfterPrivateDataFetchedWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAfterPrivateDataFetchedWithCompletionHandler:");
}

id objc_msgSend_performAuthentication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAuthentication");
}

id objc_msgSend_performBackgroundAnnotationsBlockAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBackgroundAnnotationsBlockAndWait:");
}

id objc_msgSend_performBackgroundTaskAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBackgroundTaskAndWait:");
}

id objc_msgSend_performBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlock:");
}

id objc_msgSend_performBlockAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockAndWait:");
}

id objc_msgSend_performBlockOnUserSideQueueAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performBlockOnUserSideQueueAndWait:");
}

id objc_msgSend_performFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performFetch:");
}

id objc_msgSend_performMainQueueTaskWithNewContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performMainQueueTaskWithNewContext:");
}

id objc_msgSend_performMainQueueTaskWithNewContextAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performMainQueueTaskWithNewContextAndWait:");
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:");
}

id objc_msgSend_performSelector_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:");
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:afterDelay:");
}

id objc_msgSend_performSelectorOnMainThread_withObject_waitUntilDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelectorOnMainThread:withObject:waitUntilDone:");
}

id objc_msgSend_performSelectorProxy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelectorProxy");
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performWithoutAnimation:");
}

id objc_msgSend_persistentCachePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentCachePath");
}

id objc_msgSend_persistentContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentContainer");
}

id objc_msgSend_persistentContainerWithName_managedObjectModel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentContainerWithName:managedObjectModel:");
}

id objc_msgSend_persistentID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentID");
}

id objc_msgSend_persistentStoreCoordinator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreCoordinator");
}

id objc_msgSend_persistentStoreDescriptionWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreDescriptionWithURL:");
}

id objc_msgSend_persistentStoreDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreDirectory");
}

id objc_msgSend_persistentStoreFileName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "persistentStoreFileName");
}

id objc_msgSend_phase(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phase");
}

id objc_msgSend_phoneSizeClassPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "phoneSizeClassPredicate");
}

id objc_msgSend_physicalPageAnchors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "physicalPageAnchors");
}

id objc_msgSend_physicalPageIndexForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "physicalPageIndexForPageNumber:");
}

id objc_msgSend_physicalPageMap(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "physicalPageMap");
}

id objc_msgSend_physicalPageMapForDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "physicalPageMapForDocument:");
}

id objc_msgSend_physicalPageMapForPageTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "physicalPageMapForPageTitle:");
}

id objc_msgSend_physicalPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "physicalPageNumber");
}

id objc_msgSend_physicalPageTitlesForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "physicalPageTitlesForPageNumber:");
}

id objc_msgSend_physicalPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "physicalPages");
}

id objc_msgSend_physicalPagesArrayWithLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "physicalPagesArrayWithLookupKey:");
}

id objc_msgSend_pictureBookRenderingCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pictureBookRenderingCache");
}

id objc_msgSend_pictureBookRenderingCacheIfLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pictureBookRenderingCacheIfLoaded");
}

id objc_msgSend_pictureBookVerticalNavigationInteractionDidStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pictureBookVerticalNavigationInteractionDidStart:");
}

id objc_msgSend_pictureBookVerticalNavigationpreferredPageNumberHUDVisibilityChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pictureBookVerticalNavigationpreferredPageNumberHUDVisibilityChanged:");
}

id objc_msgSend_piggyBack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "piggyBack");
}

id objc_msgSend_pinkTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pinkTheme:");
}

id objc_msgSend_plLocationRangeStart(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plLocationRangeStart");
}

id objc_msgSend_plUserData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "plUserData");
}

id objc_msgSend_play(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "play");
}

id objc_msgSend_playCurrentSoundtrack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playCurrentSoundtrack");
}

id objc_msgSend_playFirstVisibleAutoplayMediaObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playFirstVisibleAutoplayMediaObject");
}

id objc_msgSend_playFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playFrom:");
}

id objc_msgSend_playbackSpeedFrom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "playbackSpeedFrom:");
}

id objc_msgSend_player(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "player");
}

id objc_msgSend_pluginForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pluginForURL:");
}

id objc_msgSend_pointForValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointForValue:");
}

id objc_msgSend_pointSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointSize");
}

id objc_msgSend_pointToCenterAfterRotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointToCenterAfterRotation");
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popViewControllerAnimated:");
}

id objc_msgSend_popoverArrowDirections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popoverArrowDirections");
}

id objc_msgSend_popoverBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popoverBackgroundColor");
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popoverPresentationController");
}

id objc_msgSend_popoverPresentationRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popoverPresentationRect");
}

id objc_msgSend_populateRecordJob_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "populateRecordJob:");
}

id objc_msgSend_portraitPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "portraitPredicate");
}

id objc_msgSend_positionWithCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "positionWithCFI:");
}

id objc_msgSend_postEvent_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postEvent:sender:");
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:");
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postNotificationName:object:userInfo:");
}

id objc_msgSend_postPaginationLoadedNotification(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postPaginationLoadedNotification");
}

id objc_msgSend_postscriptBoldName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postscriptBoldName");
}

id objc_msgSend_postscriptName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "postscriptName");
}

id objc_msgSend_predicateForAnnotationsIncludingDeletedWithUUIDInList_assetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAnnotationsIncludingDeletedWithUUIDInList:assetID:");
}

id objc_msgSend_predicateForAnnotationsWithAssetID_ordinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAnnotationsWithAssetID:ordinal:");
}

id objc_msgSend_predicateForAnnotationsWithLocation_includingDeleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForAnnotationsWithLocation:includingDeleted:");
}

id objc_msgSend_predicateForGlobalAnnotationWithAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForGlobalAnnotationWithAssetID:");
}

id objc_msgSend_predicateForOverlayCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForOverlayCache");
}

id objc_msgSend_predicateForUserAnnotationsWithAssetID_includingDeleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateForUserAnnotationsWithAssetID:includingDeleted:");
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithBlock:");
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithFormat:");
}

id objc_msgSend_predicateWithValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "predicateWithValue:");
}

id objc_msgSend_preferredContentHeightWithMax_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentHeightWithMax:");
}

id objc_msgSend_preferredContentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSize");
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSizeCategory");
}

id objc_msgSend_preferredDirectoryTypeForBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredDirectoryTypeForBook:");
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontDescriptorWithTextStyle:");
}

id objc_msgSend_preferredFontDescriptorWithTextStyle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:");
}

id objc_msgSend_preferredFontForTextStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:");
}

id objc_msgSend_preferredFontForTextStyle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontForTextStyle:compatibleWithTraitCollection:");
}

id objc_msgSend_preferredFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFontSize");
}

id objc_msgSend_preferredFormat(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredFormat");
}

id objc_msgSend_preferredLanguages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredLanguages");
}

id objc_msgSend_preferredLayoutCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredLayoutCache");
}

id objc_msgSend_preferredPageNumberHUDVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredPageNumberHUDVisibility");
}

id objc_msgSend_preferredRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredRange");
}

id objc_msgSend_preferredStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredStyle");
}

id objc_msgSend_preloadContentViewController_highPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preloadContentViewController:highPriority:");
}

id objc_msgSend_prepareForContentScaling(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForContentScaling");
}

id objc_msgSend_prepareForDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForDisplay");
}

id objc_msgSend_prepareForScrubberAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareForScrubberAnimation");
}

id objc_msgSend_prepareQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareQueue");
}

id objc_msgSend_prepareToRotateWithDestinationSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareToRotateWithDestinationSize:");
}

id objc_msgSend_presentAppearanceViewControllerFromItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentAppearanceViewControllerFromItem:");
}

id objc_msgSend_presentFromRect_view_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentFromRect:view:");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentViewController_transaction_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:transaction:animated:completion:");
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationController");
}

id objc_msgSend_presentationLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationLayer");
}

id objc_msgSend_presentationRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationRect");
}

id objc_msgSend_presentationView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentationView");
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedViewController");
}

id objc_msgSend_presenterForExperienceType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presenterForExperienceType:");
}

id objc_msgSend_presentingFromTOC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingFromTOC");
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingViewController");
}

id objc_msgSend_presentingViewControllerDidChangeLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingViewControllerDidChangeLayout:");
}

id objc_msgSend_preservedSelectionHighlights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preservedSelectionHighlights");
}

id objc_msgSend_presetPostscriptsLookupForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presetPostscriptsLookupForLanguage:");
}

id objc_msgSend_presetSettingsForFontFamily_language_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presetSettingsForFontFamily:language:");
}

id objc_msgSend_presetsByFileName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presetsByFileName");
}

id objc_msgSend_presetsForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presetsForLanguage:");
}

id objc_msgSend_previewCssTemplate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previewCssTemplate");
}

id objc_msgSend_previousEntity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previousEntity");
}

id objc_msgSend_previousSearchResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "previousSearchResult");
}

id objc_msgSend_prewarmFontsForLanguage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmFontsForLanguage:completion:");
}

id objc_msgSend_prewarmThumbnailsForScrubberSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prewarmThumbnailsForScrubberSize:");
}

id objc_msgSend_primaryImageSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryImageSize");
}

id objc_msgSend_primaryTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primaryTextColor");
}

id objc_msgSend_primitiveValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "primitiveValueForKey:");
}

id objc_msgSend_processRequest_progressHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processRequest:progressHandler:completionHandler:");
}

id objc_msgSend_profileFuture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "profileFuture");
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progress");
}

id objc_msgSend_promptForRemoteResourcesIfNecessary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promptForRemoteResourcesIfNecessary");
}

id objc_msgSend_propertyList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyList");
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_propertyProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyProvider");
}

id objc_msgSend_propertySourceFromBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertySourceFromBook:");
}

id objc_msgSend_proposedBeginState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "proposedBeginState");
}

id objc_msgSend_provideWebView_protocolCacheItem_paginationOptions_cleanupOptions_cfiOptions_stylesheetSet_styleManager_contentSupportMode_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "provideWebView:protocolCacheItem:paginationOptions:cleanupOptions:cfiOptions:stylesheetSet:styleManager:contentSupportMode:completion:");
}

id objc_msgSend_publisherLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherLocation");
}

id objc_msgSend_publisherName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherName");
}

id objc_msgSend_publisherYear(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "publisherYear");
}

id objc_msgSend_purgeFromCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purgeFromCache:");
}

id objc_msgSend_purpleTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "purpleTheme:");
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pushViewController:animated:");
}

id objc_msgSend_quarternaryTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quarternaryTextColor");
}

id objc_msgSend_queryForString_maxOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryForString:maxOrdinal:");
}

id objc_msgSend_quit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "quit");
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_range(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "range");
}

id objc_msgSend_rangeIntersectsCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeIntersectsCFI:");
}

id objc_msgSend_rangeOfCharacterFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:");
}

id objc_msgSend_rangeOfCharacterFromSet_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:options:");
}

id objc_msgSend_rangeOfCharacterFromSet_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:options:range:");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_rangeOfString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:range:");
}

id objc_msgSend_rangeOfVisibleCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfVisibleCells");
}

id objc_msgSend_rangeValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeValue");
}

id objc_msgSend_rawPageNumberForOffset_pageFraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rawPageNumberForOffset:pageFraction:");
}

id objc_msgSend_readAloudEventHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readAloudEventHandler");
}

id objc_msgSend_readAloudEventHandler_audioElementEnded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readAloudEventHandler:audioElementEnded:");
}

id objc_msgSend_readAloudEventHandler_foundMediaSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readAloudEventHandler:foundMediaSource:");
}

id objc_msgSend_readAloudEventHandler_performedAction_turnStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readAloudEventHandler:performedAction:turnStyle:");
}

id objc_msgSend_readAloudEventHandler_tappedElementID_inHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readAloudEventHandler:tappedElementID:inHref:");
}

id objc_msgSend_readAloudEventHandlerWithMediaClass_delegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readAloudEventHandlerWithMediaClass:delegate:");
}

id objc_msgSend_readAloudState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readAloudState");
}

id objc_msgSend_readAloudViewControllerReady_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readAloudViewControllerReady:");
}

id objc_msgSend_readNextPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readNextPages:");
}

id objc_msgSend_readPages_from_to_waitOnEmpty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readPages:from:to:waitOnEmpty:");
}

id objc_msgSend_readSessionDidEnd_readTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readSessionDidEnd:readTime:");
}

id objc_msgSend_readableBookInfoForDatabaseKey_sync_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readableBookInfoForDatabaseKey_sync:block:");
}

id objc_msgSend_readableContentGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readableContentGuide");
}

id objc_msgSend_readingDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingDirection");
}

id objc_msgSend_readingDocumentCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingDocumentCount");
}

id objc_msgSend_readingIntentWithURL_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingIntentWithURL:options:");
}

id objc_msgSend_readingLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingLocation");
}

id objc_msgSend_readingLocationAnnotation_moc_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingLocationAnnotation:moc:");
}

id objc_msgSend_readingLocationChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingLocationChanged");
}

id objc_msgSend_readingLocationHighwaterMark(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingLocationHighwaterMark");
}

id objc_msgSend_readingProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingProgress");
}

id objc_msgSend_readingProgressHighWaterMark(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingProgressHighWaterMark");
}

id objc_msgSend_readingSessionData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingSessionData");
}

id objc_msgSend_readingSessionDataForSearchViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingSessionDataForSearchViewController:");
}

id objc_msgSend_readingStatisticsCollectorWithAssetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingStatisticsCollectorWithAssetViewController:");
}

id objc_msgSend_readingStatisticsEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readingStatisticsEnabled");
}

id objc_msgSend_rebaseCFIWithHead_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rebaseCFIWithHead:");
}

id objc_msgSend_rebuildHoverRegions(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rebuildHoverRegions");
}

id objc_msgSend_rebuildRegionWithKey_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rebuildRegionWithKey:block:");
}

id objc_msgSend_recenteredIndexPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recenteredIndexPath");
}

id objc_msgSend_recomputeFixedLayoutDimensionsForBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recomputeFixedLayoutDimensionsForBook:");
}

id objc_msgSend_recordAnnotationPageNumbers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordAnnotationPageNumbers:");
}

id objc_msgSend_recordDocumentPageCountForDocumentInfos_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordDocumentPageCountForDocumentInfos:context:");
}

id objc_msgSend_recordJumpFromCurrentLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordJumpFromCurrentLocation");
}

id objc_msgSend_recordedJumpToLocation_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recordedJumpToLocation:animated:completion:");
}

id objc_msgSend_recreatePersistentStoreDirectory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "recreatePersistentStoreDirectory");
}

id objc_msgSend_rect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rect");
}

id objc_msgSend_rectForAnnotation_visible_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForAnnotation:visible:withCompletion:");
}

id objc_msgSend_rectForAnnotation_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForAnnotation:withCompletion:");
}

id objc_msgSend_rectForCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForCellAtIndex:");
}

id objc_msgSend_rectForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForLocation:");
}

id objc_msgSend_rectForLocation_adjustedForContentOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForLocation:adjustedForContentOffset:");
}

id objc_msgSend_rectForLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForLocation:completion:");
}

id objc_msgSend_rectForPageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForPageOffset:");
}

id objc_msgSend_rectForPresentedMenuForTextInteraction(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectForPresentedMenuForTextInteraction");
}

id objc_msgSend_rectValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rectValue");
}

id objc_msgSend_redactedString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "redactedString");
}

id objc_msgSend_referenceLibraryViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "referenceLibraryViewController");
}

id objc_msgSend_refreshObject_mergeChanges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "refreshObject:mergeChanges:");
}

id objc_msgSend_regionWithRect_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regionWithRect:identifier:");
}

id objc_msgSend_registerAEPersistencePlugins(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerAEPersistencePlugins");
}

id objc_msgSend_registerClass_forCellReuseIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerClass:forCellReuseIdentifier:");
}

id objc_msgSend_registerDataRepresentationForTypeIdentifier_visibility_loadHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDataRepresentationForTypeIdentifier:visibility:loadHandler:");
}

id objc_msgSend_registerDefaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDefaults:");
}

id objc_msgSend_registerForTraitChanges_withAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForTraitChanges:withAction:");
}

id objc_msgSend_registerForVisibleCFIUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerForVisibleCFIUpdates");
}

id objc_msgSend_registerScriptMessageHandlersWithUserContentController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerScriptMessageHandlersWithUserContentController:");
}

id objc_msgSend_registeredTypeIdentifiers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registeredTypeIdentifiers");
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularExpressionWithPattern:options:error:");
}

id objc_msgSend_regularWidthPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularWidthPredicate");
}

id objc_msgSend_relativePath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "relativePath");
}

id objc_msgSend_releaseAuxiliaryCachedViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseAuxiliaryCachedViews");
}

id objc_msgSend_releasePaginationInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releasePaginationInfo");
}

id objc_msgSend_releaseViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseViews");
}

id objc_msgSend_reload(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reload");
}

id objc_msgSend_reloadCellAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadCellAtIndex:");
}

id objc_msgSend_reloadData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadData");
}

id objc_msgSend_reloadExternalWebFrames(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadExternalWebFrames");
}

id objc_msgSend_reloadInputViewsWithoutReset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadInputViewsWithoutReset");
}

id objc_msgSend_reloadPDFDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadPDFDocument");
}

id objc_msgSend_reloadPDFDocumentCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadPDFDocumentCompletion:");
}

id objc_msgSend_reloadRowsAtIndexPaths_withRowAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadRowsAtIndexPaths:withRowAnimation:");
}

id objc_msgSend_reloadView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadView");
}

id objc_msgSend_reloadViewDidBeginReloading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadViewDidBeginReloading:");
}

id objc_msgSend_remainingPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "remainingPages");
}

id objc_msgSend_removeAllAnimations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllAnimations");
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllObjects");
}

id objc_msgSend_removeAllTimeObservers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAllTimeObservers");
}

id objc_msgSend_removeAnimationForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAnimationForKey:");
}

id objc_msgSend_removeAudioMuxingObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeAudioMuxingObserver:");
}

id objc_msgSend_removeCacheObjectForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCacheObjectForURL:");
}

id objc_msgSend_removeChapters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeChapters:");
}

id objc_msgSend_removeConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeConstraints:");
}

id objc_msgSend_removeDummyHighlight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeDummyHighlight");
}

id objc_msgSend_removeEditModeToolbar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeEditModeToolbar");
}

id objc_msgSend_removeExperienceOfType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeExperienceOfType:");
}

id objc_msgSend_removeFromParentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromParentViewController");
}

id objc_msgSend_removeFromRunLoop_forMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromRunLoop:forMode:");
}

id objc_msgSend_removeFromSuperlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperlayer");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_removeGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeGestureRecognizer:");
}

id objc_msgSend_removeHighlightForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHighlightForAnnotation:");
}

id objc_msgSend_removeHighlightForData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHighlightForData:");
}

id objc_msgSend_removeHighlightForElementID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHighlightForElementID:");
}

id objc_msgSend_removeHighlightFromCurrentLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHighlightFromCurrentLocation");
}

id objc_msgSend_removeHighlightView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeHighlightView:");
}

id objc_msgSend_removeInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeInteraction:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeLandmarks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLandmarks:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeLastObject");
}

id objc_msgSend_removeMarkupForReadAloudToDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeMarkupForReadAloudToDocument");
}

id objc_msgSend_removeMenuForIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeMenuForIdentifier:");
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsForKeys:");
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:");
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeObserver_fromObjectsAtIndexes_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:fromObjectsAtIndexes:forKeyPath:");
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removePendingContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePendingContent:");
}

id objc_msgSend_removePhysicalPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removePhysicalPages:");
}

id objc_msgSend_removeReadAloudClickHandlersOnMediaOverlayElements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeReadAloudClickHandlersOnMediaOverlayElements:");
}

id objc_msgSend_removeScriptMessageHandlerForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeScriptMessageHandlerForName:");
}

id objc_msgSend_removeSinfInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSinfInfo:");
}

id objc_msgSend_removeSubview_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeSubview:atIndex:");
}

id objc_msgSend_removeTapHandlersOnElementIDs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTapHandlersOnElementIDs:");
}

id objc_msgSend_removeTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTarget:action:");
}

id objc_msgSend_removeTarget_action_forControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTarget:action:forControlEvents:");
}

id objc_msgSend_removeTextIndexWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeTextIndexWithName:");
}

id objc_msgSend_renderCacheWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderCacheWithOptions:");
}

id objc_msgSend_renderInContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderInContext:");
}

id objc_msgSend_renderingCacheCallbackImage_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingCacheCallbackImage:context:");
}

id objc_msgSend_renderingCacheCallbackInvocationWithImage_pageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingCacheCallbackInvocationWithImage:pageNumber:");
}

id objc_msgSend_renderingCacheOperationCompleted_textNodeCharacterCounts_cfisForHrefs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingCacheOperationCompleted:textNodeCharacterCounts:cfisForHrefs:");
}

id objc_msgSend_renderingCacheOperationsForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingCacheOperationsForSize:");
}

id objc_msgSend_renderingPiggyBack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingPiggyBack");
}

id objc_msgSend_renderingPiggyBackForPageNumber_asset_priority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "renderingPiggyBackForPageNumber:asset:priority:");
}

id objc_msgSend_repaginateWithStyle_geometry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "repaginateWithStyle:geometry:");
}

id objc_msgSend_replaceCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceCharactersInRange:withString:");
}

id objc_msgSend_replaceChildrenOfMenuForIdentifier_fromChildrenBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceChildrenOfMenuForIdentifier:fromChildrenBlock:");
}

id objc_msgSend_replaceFileAndUpdateMetadata_metadata_error_fileWritingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceFileAndUpdateMetadata:metadata:error:fileWritingBlock:");
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectAtIndex:withObject:");
}

id objc_msgSend_replaceObjectsInRange_withObjectsFromArray_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceObjectsInRange:withObjectsFromArray:range:");
}

id objc_msgSend_reportedLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reportedLocation");
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "request");
}

id objc_msgSend_requestID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestID");
}

id objc_msgSend_requestQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestQueue");
}

id objc_msgSend_requestToIndexPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestToIndexPath");
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requestWithURL:");
}

id objc_msgSend_requester(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requester");
}

id objc_msgSend_requireGestureRecognizerToFail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requireGestureRecognizerToFail:");
}

id objc_msgSend_requiresMainThread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "requiresMainThread");
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reset");
}

id objc_msgSend_resetAsNewlyDownloaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetAsNewlyDownloaded");
}

id objc_msgSend_resetBookForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetBookForURL:");
}

id objc_msgSend_resetButtonState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetButtonState");
}

id objc_msgSend_resetCover_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetCover:");
}

id objc_msgSend_resetImages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetImages");
}

id objc_msgSend_resetItunesMetadata(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetItunesMetadata");
}

id objc_msgSend_resetPDFDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetPDFDocument");
}

id objc_msgSend_resetPersistentCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetPersistentCache");
}

id objc_msgSend_resetPrioritiesForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetPrioritiesForPageNumber:");
}

id objc_msgSend_resetZoomScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetZoomScale");
}

id objc_msgSend_resetZoomScaleForScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resetZoomScaleForScrollView:");
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resignFirstResponder");
}

id objc_msgSend_resizableSnapshotViewFromRect_afterScreenUpdates_withCapInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:");
}

id objc_msgSend_resizeAnimationInProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizeAnimationInProgress");
}

id objc_msgSend_resizeImage_toSize_callback_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizeImage:toSize:callback:");
}

id objc_msgSend_resizeRequestPending(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resizeRequestPending");
}

id objc_msgSend_resource(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resource");
}

id objc_msgSend_resourceForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourceForURL:");
}

id objc_msgSend_respectImageSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respectImageSizeClass");
}

id objc_msgSend_respectImageSizeClassIsPrefix(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respectImageSizeClassIsPrefix");
}

id objc_msgSend_restoreSavedLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "restoreSavedLocation");
}

id objc_msgSend_resultLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultLabel");
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "results");
}

id objc_msgSend_resultsQueue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resultsQueue");
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resume");
}

id objc_msgSend_resumeLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeLocation");
}

id objc_msgSend_resumeReadAloudForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resumeReadAloudForContentViewController:");
}

id objc_msgSend_retrieveAndClearSelectionRectValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "retrieveAndClearSelectionRectValue");
}

id objc_msgSend_reuseIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reuseIdentifier");
}

id objc_msgSend_reuseIdentifierForCellType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reuseIdentifierForCellType:");
}

id objc_msgSend_revealSearchResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revealSearchResult:");
}

id objc_msgSend_revealSearchResult_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revealSearchResult:animated:");
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reverseObjectEnumerator");
}

id objc_msgSend_rewind(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rewind");
}

id objc_msgSend_rightAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightAnchor");
}

id objc_msgSend_rightCalloutPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightCalloutPageNumber");
}

id objc_msgSend_rightContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightContentView");
}

id objc_msgSend_rightPageIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightPageIndex");
}

id objc_msgSend_rightPageNumberAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightPageNumberAtIndex:");
}

id objc_msgSend_rightPageNumberForSinglePageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightPageNumberForSinglePageOffset:");
}

id objc_msgSend_rightPageNumberForSpreadPageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightPageNumberForSpreadPageOffset:");
}

id objc_msgSend_rightPageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightPageView");
}

id objc_msgSend_rightSourceView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightSourceView");
}

id objc_msgSend_rightToolbarItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rightToolbarItems");
}

id objc_msgSend_rotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rotation");
}

id objc_msgSend_row(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "row");
}

id objc_msgSend_runTestWithParameters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "runTestWithParameters:");
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaInsets");
}

id objc_msgSend_safeAreaInsetsAdjustingForNotch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaInsetsAdjustingForNotch:");
}

id objc_msgSend_safeAreaLayoutGuide(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeAreaLayoutGuide");
}

id objc_msgSend_safeToShowToolbarItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "safeToShowToolbarItems");
}

id objc_msgSend_sampleContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sampleContent");
}

id objc_msgSend_savableLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savableLocation");
}

id objc_msgSend_savableLocationForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savableLocationForLocation:");
}

id objc_msgSend_save(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "save");
}

id objc_msgSend_save_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "save:");
}

id objc_msgSend_saveAnnotationsManagedObjectContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveAnnotationsManagedObjectContext");
}

id objc_msgSend_saveBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveBook");
}

id objc_msgSend_saveManagedObjectContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveManagedObjectContext:");
}

id objc_msgSend_savePageControlVisibilityDelay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savePageControlVisibilityDelay");
}

id objc_msgSend_saveReadingLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveReadingLocation:");
}

id objc_msgSend_saveStateClosing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveStateClosing:");
}

id objc_msgSend_saveStateClosing_suspending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saveStateClosing:suspending:");
}

id objc_msgSend_savedLocationIsEndOfBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "savedLocationIsEndOfBook");
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scale");
}

id objc_msgSend_scaleAdjustedImageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaleAdjustedImageSize:");
}

id objc_msgSend_scaleFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaleFactor");
}

id objc_msgSend_scaleForSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaleForSize:");
}

id objc_msgSend_scaleForSpread_landscape_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaleForSpread:landscape:");
}

id objc_msgSend_scaleImage_toSize_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaleImage:toSize:options:");
}

id objc_msgSend_scalePDFContent_locationInView_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scalePDFContent:locationInView:animated:");
}

id objc_msgSend_scaleToRestoreAfterRotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaleToRestoreAfterRotation");
}

id objc_msgSend_scaledFontForFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledFontForFont:");
}

id objc_msgSend_scaledFontForFont_maximumPointSize_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scaledFontForFont:maximumPointSize:compatibleWithTraitCollection:");
}

id objc_msgSend_scanCharactersFromSet_intoString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanCharactersFromSet:intoString:");
}

id objc_msgSend_scanLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanLocation");
}

id objc_msgSend_scanLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanLongLong:");
}

id objc_msgSend_scanString_intoString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanString:intoString:");
}

id objc_msgSend_scanUpToCharactersFromSet_intoString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanUpToCharactersFromSet:intoString:");
}

id objc_msgSend_scanUpToString_intoString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanUpToString:intoString:");
}

id objc_msgSend_scannerWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scannerWithString:");
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:");
}

id objc_msgSend_scriptsDidCompleteForLoader_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scriptsDidCompleteForLoader:context:");
}

id objc_msgSend_scroll(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scroll");
}

id objc_msgSend_scrollDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollDirection");
}

id objc_msgSend_scrollDirectionFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollDirectionFromPlistEntry:");
}

id objc_msgSend_scrollLayoutForBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollLayoutForBook:");
}

id objc_msgSend_scrollModeOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollModeOrientation");
}

id objc_msgSend_scrollPageLength(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollPageLength");
}

id objc_msgSend_scrollPosition(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollPosition");
}

id objc_msgSend_scrollSwitch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollSwitch");
}

id objc_msgSend_scrollSwitchEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollSwitchEnabled");
}

id objc_msgSend_scrollToCellAtIndex_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToCellAtIndex:animated:");
}

id objc_msgSend_scrollToItemId_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToItemId:completionBlock:");
}

id objc_msgSend_scrollToLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToLocation:");
}

id objc_msgSend_scrollToPageNumber_animate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToPageNumber:animate:");
}

id objc_msgSend_scrollToRowAtIndexPath_atScrollPosition_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollToRowAtIndexPath:atScrollPosition:animated:");
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollView");
}

id objc_msgSend_scrollingElementSizeScript(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollingElementSizeScript");
}

id objc_msgSend_scrollingPageWidthForPaginationMode_configuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollingPageWidthForPaginationMode:configuration:");
}

id objc_msgSend_scrollingRowHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrollingRowHeight");
}

id objc_msgSend_scrub_isScrubbing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrub:isScrubbing:");
}

id objc_msgSend_scrubber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubber");
}

id objc_msgSend_scrubberBarButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberBarButtonItem");
}

id objc_msgSend_scrubberCallout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberCallout");
}

id objc_msgSend_scrubberContainerView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberContainerView");
}

id objc_msgSend_scrubberContainerViewFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberContainerViewFrame");
}

id objc_msgSend_scrubberFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberFrame");
}

id objc_msgSend_scrubberHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberHeight");
}

id objc_msgSend_scrubberLeftRightInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberLeftRightInset");
}

id objc_msgSend_scrubberStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberStyle");
}

id objc_msgSend_scrubberVerticalInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberVerticalInset");
}

id objc_msgSend_scrubberWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scrubberWidth");
}

id objc_msgSend_searchBook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchBook");
}

id objc_msgSend_searchButtonItem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchButtonItem");
}

id objc_msgSend_searchConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchConfiguration");
}

id objc_msgSend_searchController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchController");
}

id objc_msgSend_searchControllerDidFinishSearching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchControllerDidFinishSearching:");
}

id objc_msgSend_searchControllerFinishedSearchingChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchControllerFinishedSearchingChapter:");
}

id objc_msgSend_searchControllerResultsChanged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchControllerResultsChanged:");
}

id objc_msgSend_searchControllerWillBeginSearching_reportAnalytics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchControllerWillBeginSearching:reportAnalytics:");
}

id objc_msgSend_searchDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchDelegate");
}

id objc_msgSend_searchDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchDidFinish:");
}

id objc_msgSend_searchDidTimeOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchDidTimeOut:");
}

id objc_msgSend_searchField(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchField");
}

id objc_msgSend_searchHasPartialResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchHasPartialResults:");
}

id objc_msgSend_searchLimitHit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchLimitHit:");
}

id objc_msgSend_searchLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchLocation");
}

id objc_msgSend_searchModuleWithSearchString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchModuleWithSearchString:");
}

id objc_msgSend_searchResult(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchResult");
}

id objc_msgSend_searchString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchString");
}

id objc_msgSend_searchStringIsPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchStringIsPageNumber");
}

id objc_msgSend_searchStringLengthLimit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchStringLengthLimit");
}

id objc_msgSend_searchStringRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchStringRange");
}

id objc_msgSend_searchViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchViewController");
}

id objc_msgSend_searchViewController_chapterNameForSearchResult_pageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchViewController:chapterNameForSearchResult:pageNumber:");
}

id objc_msgSend_searchViewController_didTransitionToSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchViewController:didTransitionToSize:");
}

id objc_msgSend_searchViewController_pageNumberForDocumentOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchViewController:pageNumberForDocumentOrdinal:");
}

id objc_msgSend_searchViewController_revealSearchResult_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchViewController:revealSearchResult:animated:");
}

id objc_msgSend_searchViewController_turnToLocation_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchViewController:turnToLocation:animated:");
}

id objc_msgSend_searchViewController_turnToPageNumber_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchViewController:turnToPageNumber:animated:");
}

id objc_msgSend_searchViewController_willTransitionToSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchViewController:willTransitionToSize:");
}

id objc_msgSend_searchViewControllerIfLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchViewControllerIfLoaded");
}

id objc_msgSend_searchWasCancelled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchWasCancelled:");
}

id objc_msgSend_searchWasCompleted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchWasCompleted");
}

id objc_msgSend_secondaryBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryBackgroundColor");
}

id objc_msgSend_secondaryGroupedBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryGroupedBackgroundColor");
}

id objc_msgSend_secondaryTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "secondaryTextColor");
}

id objc_msgSend_section(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "section");
}

id objc_msgSend_sections(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sections");
}

id objc_msgSend_segmentCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentCount");
}

id objc_msgSend_segmentIndexForDirectoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentIndexForDirectoryType:");
}

id objc_msgSend_segmentIndexForPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentIndexForPage:");
}

id objc_msgSend_segmentIndexToDirectoryType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentIndexToDirectoryType");
}

id objc_msgSend_segmentSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentSize");
}

id objc_msgSend_segmentStrokeColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "segmentStrokeColor");
}

id objc_msgSend_selectAll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectAll:");
}

id objc_msgSend_selectAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectAnnotation:");
}

id objc_msgSend_selectLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectLocation:completion:");
}

id objc_msgSend_selectNone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectNone:");
}

id objc_msgSend_selectRowAtIndexPath_animated_scrollPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectRowAtIndexPath:animated:scrollPosition:");
}

id objc_msgSend_selectTextWithGranularity_atPoint_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectTextWithGranularity:atPoint:completionHandler:");
}

id objc_msgSend_selectedAnnotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedAnnotation");
}

id objc_msgSend_selectedBackgroundView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedBackgroundView");
}

id objc_msgSend_selectedCacheKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedCacheKey");
}

id objc_msgSend_selectedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedColor");
}

id objc_msgSend_selectedIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedIndex");
}

id objc_msgSend_selectedSegmentIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedSegmentIndex");
}

id objc_msgSend_selectedText(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedText");
}

id objc_msgSend_selectedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectedViewController");
}

id objc_msgSend_selection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selection");
}

id objc_msgSend_selectionHighlightType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectionHighlightType");
}

id objc_msgSend_selectionRects(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectionRects");
}

id objc_msgSend_selectionView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectionView");
}

id objc_msgSend_selectorForTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "selectorForTarget:");
}

id objc_msgSend_semanticContentAttribute(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "semanticContentAttribute");
}

id objc_msgSend_semanticSideInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "semanticSideInset");
}

id objc_msgSend_sendActionsForControlEvents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendActionsForControlEvents:");
}

id objc_msgSend_sendError_toCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendError:toCompletion:");
}

id objc_msgSend_sendReaderEventNewSectionViaToC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendReaderEventNewSectionViaToC");
}

id objc_msgSend_sendSubviewToBack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendSubviewToBack:");
}

id objc_msgSend_sendViewControllerForBook_toCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sendViewControllerForBook:toCompletion:");
}

id objc_msgSend_separatorColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorColor");
}

id objc_msgSend_separatorInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorInsets");
}

id objc_msgSend_separatorInsetsForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "separatorInsetsForContentViewController:");
}

id objc_msgSend_serialData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serialData");
}

id objc_msgSend_serialString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serialString");
}

id objc_msgSend_serializeFormat(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializeFormat");
}

id objc_msgSend_serializeLocationToData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializeLocationToData");
}

id objc_msgSend_serializeLocationToDictionary(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "serializeLocationToDictionary");
}

id objc_msgSend_seriesTitleForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seriesTitleForAssetID:");
}

id objc_msgSend_sessionID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sessionID");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set");
}

id objc_msgSend_setARModelDataURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setARModelDataURL:");
}

id objc_msgSend_setAborted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAborted:");
}

id objc_msgSend_setAbsoluteOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAbsoluteOrder:");
}

id objc_msgSend_setAccessibilityContainerType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityContainerType:");
}

id objc_msgSend_setAccessibilityElementsHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityElementsHidden:");
}

id objc_msgSend_setAccessibilityHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityHint:");
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIdentifier:");
}

id objc_msgSend_setAccessibilityIgnoresInvertColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityIgnoresInvertColors:");
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityLabel:");
}

id objc_msgSend_setAccessibilityTraits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityTraits:");
}

id objc_msgSend_setAccessibilityValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessibilityValue:");
}

id objc_msgSend_setAccessoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryType:");
}

id objc_msgSend_setAccessoryView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAccessoryView:");
}

id objc_msgSend_setAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAction:");
}

id objc_msgSend_setActionInfoViewHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActionInfoViewHidden:");
}

id objc_msgSend_setActions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActions:");
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:");
}

id objc_msgSend_setActive_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActive:error:");
}

id objc_msgSend_setActiveInteractionTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActiveInteractionTypes:");
}

id objc_msgSend_setActivityIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityIndicator:");
}

id objc_msgSend_setActivityIndicatorVisible_animated_afterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityIndicatorVisible:animated:afterDelay:");
}

id objc_msgSend_setActivityItemsConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityItemsConfiguration:");
}

id objc_msgSend_setActivityViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setActivityViewController:");
}

id objc_msgSend_setAddingHighlights_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAddingHighlights:");
}

id objc_msgSend_setAdditionalSafeAreaInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdditionalSafeAreaInsets:");
}

id objc_msgSend_setAdjustsFontSizeToFitWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAdjustsFontSizeToFitWidth:");
}

id objc_msgSend_setAkAnnotationEditingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAkAnnotationEditingEnabled:");
}

id objc_msgSend_setAkToolbarViewItemTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAkToolbarViewItemTintColor:");
}

id objc_msgSend_setAkToolbarViewTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAkToolbarViewTintColor:");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAllNavigationInfosByOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllNavigationInfosByOrdinal:");
}

id objc_msgSend_setAllowDoubleTapToZoom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowDoubleTapToZoom:");
}

id objc_msgSend_setAllowedScrollTypesMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedScrollTypesMask:");
}

id objc_msgSend_setAllowedTouchTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedTouchTypes:");
}

id objc_msgSend_setAllowedUnits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowedUnits:");
}

id objc_msgSend_setAllowsAutomaticMirroring_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsAutomaticMirroring:");
}

id objc_msgSend_setAllowsHandlingNonAuthenticationDialogs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsHandlingNonAuthenticationDialogs:");
}

id objc_msgSend_setAllowsMultipleSelectionDuringEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsMultipleSelectionDuringEditing:");
}

id objc_msgSend_setAllowsRemoteInspection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAllowsRemoteInspection:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setAlreadyRevealed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlreadyRevealed:");
}

id objc_msgSend_setAlwaysBounceHorizontal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysBounceHorizontal:");
}

id objc_msgSend_setAlwaysBounceVertical_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlwaysBounceVertical:");
}

id objc_msgSend_setAnalysis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnalysis:");
}

id objc_msgSend_setAnalysisButtonRequiresVisibleContentGating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnalysisButtonRequiresVisibleContentGating:");
}

id objc_msgSend_setAnalysisInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnalysisInteraction:");
}

id objc_msgSend_setAnalyticsReadStartDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnalyticsReadStartDate:");
}

id objc_msgSend_setAnalyticsReadStartProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnalyticsReadStartProgress:");
}

id objc_msgSend_setAncestorViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAncestorViewController:");
}

id objc_msgSend_setAnchorFrames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnchorFrames:");
}

id objc_msgSend_setAnchorLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnchorLocations:");
}

id objc_msgSend_setAnimating_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimating:");
}

id objc_msgSend_setAnimationsEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnimationsEnabled:");
}

id objc_msgSend_setAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotation:");
}

id objc_msgSend_setAnnotationAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationAssetID:");
}

id objc_msgSend_setAnnotationBlendMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationBlendMode:");
}

id objc_msgSend_setAnnotationCFIStrings_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationCFIStrings:");
}

id objc_msgSend_setAnnotationChangeRequiresPaginationUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationChangeRequiresPaginationUpdate:");
}

id objc_msgSend_setAnnotationCountResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationCountResults:");
}

id objc_msgSend_setAnnotationCounter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationCounter:");
}

id objc_msgSend_setAnnotationCreationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationCreationDate:");
}

id objc_msgSend_setAnnotationCreatorIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationCreatorIdentifier:");
}

id objc_msgSend_setAnnotationDeleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationDeleted:");
}

id objc_msgSend_setAnnotationIsUnderline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationIsUnderline:");
}

id objc_msgSend_setAnnotationLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationLocation:");
}

id objc_msgSend_setAnnotationNote_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationNote:");
}

id objc_msgSend_setAnnotationRectUnionCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationRectUnionCache:");
}

id objc_msgSend_setAnnotationRectsCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationRectsCache:");
}

id objc_msgSend_setAnnotationRectsData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationRectsData:");
}

id objc_msgSend_setAnnotationRepresentativeText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationRepresentativeText:");
}

id objc_msgSend_setAnnotationSelectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationSelectedText:");
}

id objc_msgSend_setAnnotationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationStyle:");
}

id objc_msgSend_setAnnotationTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationTheme:");
}

id objc_msgSend_setAnnotationType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationType:");
}

id objc_msgSend_setAnnotationUuid_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationUuid:");
}

id objc_msgSend_setAnnotationVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationVersion:");
}

id objc_msgSend_setAnnotationsToUpgrade_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotationsToUpgrade:");
}

id objc_msgSend_setAppearanceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppearanceStyle:");
}

id objc_msgSend_setAppleDisplayOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleDisplayOptions:");
}

id objc_msgSend_setAppleDisplayOptionsFromParser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAppleDisplayOptionsFromParser:");
}

id objc_msgSend_setApplyMaskAndGutter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setApplyMaskAndGutter:");
}

id objc_msgSend_setArtworkTemplateFromPlist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArtworkTemplateFromPlist:");
}

id objc_msgSend_setAspectRatioFromPDF_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAspectRatioFromPDF:");
}

id objc_msgSend_setAsset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAsset:");
}

id objc_msgSend_setAssetEditingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetEditingEnabled:");
}

id objc_msgSend_setAssetEditingRequested_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetEditingRequested:");
}

id objc_msgSend_setAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetID:");
}

id objc_msgSend_setAssetLogID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetLogID:");
}

id objc_msgSend_setAssetSharingConnectionClient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetSharingConnectionClient:");
}

id objc_msgSend_setAssetURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetURL:");
}

id objc_msgSend_setAssetViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAssetViewController:");
}

id objc_msgSend_setAttributedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributedText:");
}

id objc_msgSend_setAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributes:");
}

id objc_msgSend_setAudioController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioController:");
}

id objc_msgSend_setAudioEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioEnd:");
}

id objc_msgSend_setAudioHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioHref:");
}

id objc_msgSend_setAudioStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAudioStart:");
}

id objc_msgSend_setAuthenticationProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAuthenticationProvider:");
}

id objc_msgSend_setAutoCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoCurl:");
}

id objc_msgSend_setAutoHyphenate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoHyphenate:");
}

id objc_msgSend_setAutoHyphenation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoHyphenation:");
}

id objc_msgSend_setAutoNightModeEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoNightModeEnabled:");
}

id objc_msgSend_setAutoScales_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoScales:");
}

id objc_msgSend_setAutomaticallyShowVisualSearchResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutomaticallyShowVisualSearchResults:");
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAutoresizingMask:");
}

id objc_msgSend_setAvoidSync(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAvoidSync");
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAxis:");
}

id objc_msgSend_setBackColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackColor:");
}

id objc_msgSend_setBackPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackPage:");
}

id objc_msgSend_setBackPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackPages:");
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundColor:");
}

id objc_msgSend_setBackgroundFillColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundFillColor:");
}

id objc_msgSend_setBackgroundFillHighlightColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundFillHighlightColor:");
}

id objc_msgSend_setBackgroundImage_forBarMetrics_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundImage:forBarMetrics:");
}

id objc_msgSend_setBackgroundImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBackgroundImageView:");
}

id objc_msgSend_setBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarButtonItem:");
}

id objc_msgSend_setBarStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarStyle:");
}

id objc_msgSend_setBarTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarTintColor:");
}

id objc_msgSend_setBaseBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseBackgroundColor:");
}

id objc_msgSend_setBaseForegroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseForegroundColor:");
}

id objc_msgSend_setBaseHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseHref:");
}

id objc_msgSend_setBaseURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBaseURL:");
}

id objc_msgSend_setBcTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBcTracker:");
}

id objc_msgSend_setBc_fakeSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBc_fakeSourceView:");
}

id objc_msgSend_setBc_realSourceBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBc_realSourceBarButtonItem:");
}

id objc_msgSend_setBe_estimatedContentSizeValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBe_estimatedContentSizeValue:");
}

id objc_msgSend_setBe_gestureDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBe_gestureDelay:");
}

id objc_msgSend_setBe_overrideAutoScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBe_overrideAutoScale:");
}

id objc_msgSend_setBe_textInteractionAssistantDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBe_textInteractionAssistantDelegate:");
}

id objc_msgSend_setBe_textInteractionDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBe_textInteractionDelegate:");
}

id objc_msgSend_setBe_useOverrideAutoScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBe_useOverrideAutoScale:");
}

id objc_msgSend_setBkAccessibilityAnnouncementString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBkAccessibilityAnnouncementString:");
}

id objc_msgSend_setBkAccessibilityDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBkAccessibilityDelegate:");
}

id objc_msgSend_setBkPageProgressionDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBkPageProgressionDirection:");
}

id objc_msgSend_setBkaxAccessibilityUserIsRequestingControlsVisibilityToggle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBkaxAccessibilityUserIsRequestingControlsVisibilityToggle:");
}

id objc_msgSend_setBkaxIsExcludedFromSample_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBkaxIsExcludedFromSample:");
}

id objc_msgSend_setBoldColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoldColor:");
}

id objc_msgSend_setBoldRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBoldRange:");
}

id objc_msgSend_setBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBook:");
}

id objc_msgSend_setBookAuthor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookAuthor:");
}

id objc_msgSend_setBookBundlePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookBundlePath:");
}

id objc_msgSend_setBookContentSubpath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookContentSubpath:");
}

id objc_msgSend_setBookDatabaseKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookDatabaseKey:");
}

id objc_msgSend_setBookEpubId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookEpubId:");
}

id objc_msgSend_setBookEpubIdWithUUIDScheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookEpubIdWithUUIDScheme:");
}

id objc_msgSend_setBookID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookID:");
}

id objc_msgSend_setBookInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookInfo:");
}

id objc_msgSend_setBookInfoSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookInfoSnapshot:");
}

id objc_msgSend_setBookLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookLanguage:");
}

id objc_msgSend_setBookPositionProcessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookPositionProcessor:");
}

id objc_msgSend_setBookSnapshot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookSnapshot:");
}

id objc_msgSend_setBookTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookTitle:");
}

id objc_msgSend_setBookURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookURL:");
}

id objc_msgSend_setBookUniqueId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookUniqueId:");
}

id objc_msgSend_setBookmarkPageCounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookmarkPageCounts:");
}

id objc_msgSend_setBookmarked_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookmarked:");
}

id objc_msgSend_setBookmarkedPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookmarkedPages:");
}

id objc_msgSend_setBookmarks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBookmarks:");
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBool:forKey:");
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderColor:");
}

id objc_msgSend_setBorderWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBorderWidth:");
}

id objc_msgSend_setBounces_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounces:");
}

id objc_msgSend_setBouncesZoom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBouncesZoom:");
}

id objc_msgSend_setBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBounds:");
}

id objc_msgSend_setBrightness_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrightness:");
}

id objc_msgSend_setBrightnessController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBrightnessController:");
}

id objc_msgSend_setButtonFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setButtonFont:");
}

id objc_msgSend_setBuyDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuyDelegate:");
}

id objc_msgSend_setBuyStateBackgroundFillColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuyStateBackgroundFillColor:");
}

id objc_msgSend_setBuyStateFrameColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuyStateFrameColor:");
}

id objc_msgSend_setBuyStateTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBuyStateTextColor:");
}

id objc_msgSend_setCacheItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCacheItem:");
}

id objc_msgSend_setCacheKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCacheKey:");
}

id objc_msgSend_setCachedContentData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedContentData:");
}

id objc_msgSend_setCachedRowContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCachedRowContents:");
}

id objc_msgSend_setCallout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCallout:");
}

id objc_msgSend_setCanMakeAccountActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanMakeAccountActive:");
}

id objc_msgSend_setCanOverlapSourceViewRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanOverlapSourceViewRect:");
}

id objc_msgSend_setCanUseFilters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCanUseFilters:");
}

id objc_msgSend_setCancelsTouchesInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancelsTouchesInView:");
}

id objc_msgSend_setCategory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategory:");
}

id objc_msgSend_setCategory_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCategory:error:");
}

id objc_msgSend_setCellAspectRatio_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellAspectRatio:");
}

id objc_msgSend_setCellClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellClass:");
}

id objc_msgSend_setCellLayoutMarginsFollowReadableWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellLayoutMarginsFollowReadableWidth:");
}

id objc_msgSend_setCellLoadingOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellLoadingOperationCount:");
}

id objc_msgSend_setCellWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCellWidth:");
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenter:");
}

id objc_msgSend_setCenteringInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenteringInsets:");
}

id objc_msgSend_setCfi_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCfi:");
}

id objc_msgSend_setCfisForHrefs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCfisForHrefs:");
}

id objc_msgSend_setChapterSubLevelFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChapterSubLevelFont:");
}

id objc_msgSend_setChapterTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChapterTitle:");
}

id objc_msgSend_setChapterTopLevelFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setChapterTopLevelFont:");
}

id objc_msgSend_setCharactersToBeSkipped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCharactersToBeSkipped:");
}

id objc_msgSend_setCitationsAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCitationsAllowed:");
}

id objc_msgSend_setClearsContextBeforeDrawing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClearsContextBeforeDrawing:");
}

id objc_msgSend_setClientInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClientInfo:");
}

id objc_msgSend_setClipsToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setClipsToBounds:");
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColor:");
}

id objc_msgSend_setColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setColors:");
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionBlock:");
}

id objc_msgSend_setCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletionHandler:");
}

id objc_msgSend_setCompositingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompositingFilter:");
}

id objc_msgSend_setCompressionAlgorithm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompressionAlgorithm:");
}

id objc_msgSend_setConditional_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConditional:");
}

id objc_msgSend_setConfidence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfidence:");
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfiguration:");
}

id objc_msgSend_setConfigureRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConfigureRequest:");
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstant:");
}

id objc_msgSend_setContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContainer:");
}

id objc_msgSend_setContentBasedOverlayRefreshScheduled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentBasedOverlayRefreshScheduled:");
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentCompressionResistancePriority:forAxis:");
}

id objc_msgSend_setContentEdgeInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentEdgeInsets:");
}

id objc_msgSend_setContentHorizontalAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentHorizontalAlignment:");
}

id objc_msgSend_setContentInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInset:");
}

id objc_msgSend_setContentInsetAdjustmentBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsetAdjustmentBehavior:");
}

id objc_msgSend_setContentInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentInsets:");
}

id objc_msgSend_setContentLayoutSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentLayoutSize:");
}

id objc_msgSend_setContentLoadPending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentLoadPending:");
}

id objc_msgSend_setContentLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentLoaded:");
}

id objc_msgSend_setContentMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentMode:");
}

id objc_msgSend_setContentOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffset:");
}

id objc_msgSend_setContentOffset_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOffset:animated:");
}

id objc_msgSend_setContentOpenAnimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentOpenAnimator:");
}

id objc_msgSend_setContentProcessDidTerminate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentProcessDidTerminate:");
}

id objc_msgSend_setContentScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentScale:");
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentSize:");
}

id objc_msgSend_setContentToViewTopAnchorConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentToViewTopAnchorConstraint:");
}

id objc_msgSend_setContentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentType:");
}

id objc_msgSend_setContentViewImageCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentViewImageCache:");
}

id objc_msgSend_setContents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContents:");
}

id objc_msgSend_setContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContext:");
}

id objc_msgSend_setContinueDownloading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContinueDownloading:");
}

id objc_msgSend_setControlsTapRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlsTapRecognizer:");
}

id objc_msgSend_setControlsVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlsVisible:");
}

id objc_msgSend_setControlsVisible_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlsVisible:animated:");
}

id objc_msgSend_setControlsVisible_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setControlsVisible:animated:completion:");
}

id objc_msgSend_setCornerCurve_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerCurve:");
}

id objc_msgSend_setCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerRadius:");
}

id objc_msgSend_setCornerStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCornerStyle:");
}

id objc_msgSend_setCoverImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverImage:");
}

id objc_msgSend_setCoverImage_isUndesirable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverImage:isUndesirable:");
}

id objc_msgSend_setCoverNeedsUpdate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverNeedsUpdate:");
}

id objc_msgSend_setCoverWritingModeFromPlist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverWritingModeFromPlist:");
}

id objc_msgSend_setCoverWritingModeString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCoverWritingModeString:");
}

id objc_msgSend_setCreatesCompositingGroup_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCreatesCompositingGroup:");
}

id objc_msgSend_setCurlContainer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurlContainer:");
}

id objc_msgSend_setCurlPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurlPages:");
}

id objc_msgSend_setCurlThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurlThreshold:");
}

id objc_msgSend_setCurrentFirstVisbleCFILocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentFirstVisbleCFILocation:");
}

id objc_msgSend_setCurrentHighlightSearchSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentHighlightSearchSelection:");
}

id objc_msgSend_setCurrentInfoRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentInfoRequest:");
}

id objc_msgSend_setCurrentLastVisbleCFILocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentLastVisbleCFILocation:");
}

id objc_msgSend_setCurrentLineRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentLineRect:");
}

id objc_msgSend_setCurrentOutline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentOutline:");
}

id objc_msgSend_setCurrentOverlayViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentOverlayViewController:");
}

id objc_msgSend_setCurrentPageIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentPageIndex:");
}

id objc_msgSend_setCurrentScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentScale:");
}

id objc_msgSend_setCurrentSelection_animate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentSelection:animate:");
}

id objc_msgSend_setCurrentSelectionCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentSelectionCFI:");
}

id objc_msgSend_setCurrentSelectionContainsAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentSelectionContainsAnchor:");
}

id objc_msgSend_setCurrentSymbolName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentSymbolName:");
}

id objc_msgSend_setCurrentTextSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTextSelection:");
}

id objc_msgSend_setCurrentTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentTime:");
}

id objc_msgSend_setCurrentVisbleCFILocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCurrentVisbleCFILocation:");
}

id objc_msgSend_setCursor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCursor:");
}

id objc_msgSend_setCursorInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCursorInsets:");
}

id objc_msgSend_setDamping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDamping:");
}

id objc_msgSend_setDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataSource:");
}

id objc_msgSend_setDatabaseKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDatabaseKey:");
}

id objc_msgSend_setDateLastOpened_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateLastOpened:");
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDateStyle:");
}

id objc_msgSend_setDcTermsContributor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDcTermsContributor:");
}

id objc_msgSend_setDcTermsModified_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDcTermsModified:");
}

id objc_msgSend_setDecelerationRate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDecelerationRate:");
}

id objc_msgSend_setDefaultFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultFontSize");
}

id objc_msgSend_setDefaultMarkupTool(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDefaultMarkupTool");
}

id objc_msgSend_setDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelay:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setDesiredContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesiredContentSize:");
}

id objc_msgSend_setDesiredSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesiredSize:");
}

id objc_msgSend_setDesiredWebViewFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDesiredWebViewFrame:");
}

id objc_msgSend_setDeterminedOriginalFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDeterminedOriginalFont:");
}

id objc_msgSend_setDidComputeMailingAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidComputeMailingAllowed:");
}

id objc_msgSend_setDidComputePrintingAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidComputePrintingAllowed:");
}

id objc_msgSend_setDidFinishLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidFinishLoading:");
}

id objc_msgSend_setDidFinishRendering_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidFinishRendering:");
}

id objc_msgSend_setDifferentString_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDifferentString:forKey:");
}

id objc_msgSend_setDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirection:");
}

id objc_msgSend_setDirectionalLockEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirectionalLockEnabled:");
}

id objc_msgSend_setDirectoryDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirectoryDelegate:");
}

id objc_msgSend_setDirectoryType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDirectoryType:");
}

id objc_msgSend_setDisableAutoFontDownload_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisableAutoFontDownload:");
}

id objc_msgSend_setDisabledBackgroundFillColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisabledBackgroundFillColor:");
}

id objc_msgSend_setDisabledTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisabledTextColor:");
}

id objc_msgSend_setDisappearing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisappearing:");
}

id objc_msgSend_setDismissCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDismissCompletionHandler:");
}

id objc_msgSend_setDispatchSemaphore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDispatchSemaphore:");
}

id objc_msgSend_setDisplayDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayDirection:");
}

id objc_msgSend_setDisplayLink_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayLink:");
}

id objc_msgSend_setDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayMode:");
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplayName:");
}

id objc_msgSend_setDisplaysBookmarksForPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplaysBookmarksForPages:");
}

id objc_msgSend_setDisplaysRTL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDisplaysRTL:");
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDistribution:");
}

id objc_msgSend_setDividerColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDividerColor:");
}

id objc_msgSend_setDoNotDisturbStatusAtStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoNotDisturbStatusAtStart:");
}

id objc_msgSend_setDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocument:");
}

id objc_msgSend_setDocumentAbsoluteOrder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocumentAbsoluteOrder:");
}

id objc_msgSend_setDocumentHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocumentHref:");
}

id objc_msgSend_setDocumentOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocumentOrdinal:");
}

id objc_msgSend_setDocumentPageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocumentPageOffset:");
}

id objc_msgSend_setDocuments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDocuments:");
}

id objc_msgSend_setDoesRelativeDateFormatting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDoesRelativeDateFormatting:");
}

id objc_msgSend_setDownloadProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDownloadProgress:");
}

id objc_msgSend_setDragDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDragDelegate:");
}

id objc_msgSend_setDrawSpecialGrayHighlights_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDrawSpecialGrayHighlights:");
}

id objc_msgSend_setDrawsShadow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDrawsShadow:");
}

id objc_msgSend_setDrawsSpine_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDrawsSpine:");
}

id objc_msgSend_setDummyLocation2_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDummyLocation2:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setEdges_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEdges:");
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditing:animated:");
}

id objc_msgSend_setEditsOnLaunch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEditsOnLaunch:");
}

id objc_msgSend_setElementId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setElementId:");
}

id objc_msgSend_setElseSteps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setElseSteps:");
}

id objc_msgSend_setEmbeddedArtHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmbeddedArtHref:");
}

id objc_msgSend_setEmbeddedArtHrefRejected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEmbeddedArtHrefRejected:");
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEnabled:");
}

id objc_msgSend_setEncryptionAlgorithm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEncryptionAlgorithm:");
}

id objc_msgSend_setEndOfBookConfidence_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndOfBookConfidence:");
}

id objc_msgSend_setEndOfBookExperienceFromPlist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndOfBookExperienceFromPlist:");
}

id objc_msgSend_setEndOfBookLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndOfBookLocation:");
}

id objc_msgSend_setEndOfBookValidRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndOfBookValidRange:");
}

id objc_msgSend_setEndOfBookVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndOfBookVersion:");
}

id objc_msgSend_setEndOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndOffset:");
}

id objc_msgSend_setEndPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndPath:");
}

id objc_msgSend_setEndPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndPoint:");
}

id objc_msgSend_setEndTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEndTime:");
}

id objc_msgSend_setEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntity:");
}

id objc_msgSend_setEstimatedRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstimatedRowHeight:");
}

id objc_msgSend_setEstimatedSectionFooterHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstimatedSectionFooterHeight:");
}

id objc_msgSend_setEstimatedSectionHeaderHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEstimatedSectionHeaderHeight:");
}

id objc_msgSend_setExcludedActivityTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExcludedActivityTypes:");
}

id objc_msgSend_setExclusiveTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExclusiveTouch:");
}

id objc_msgSend_setExistingPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExistingPages:");
}

id objc_msgSend_setExpandedContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExpandedContentViewController:");
}

id objc_msgSend_setExperienceManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperienceManager:");
}

id objc_msgSend_setExperiencePoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExperiencePoint:");
}

id objc_msgSend_setExternalGestureRecognizerCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExternalGestureRecognizerCount:");
}

id objc_msgSend_setFailedToLoad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFailedToLoad:");
}

id objc_msgSend_setFallbackId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFallbackId:");
}

id objc_msgSend_setFallbacks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFallbacks:");
}

id objc_msgSend_setFamilyName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFamilyName:");
}

id objc_msgSend_setFetchBatchSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchBatchSize:");
}

id objc_msgSend_setFetchLimit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFetchLimit:");
}

id objc_msgSend_setFileNames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFileNames:");
}

id objc_msgSend_setFileSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFileSize:");
}

id objc_msgSend_setFill(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFill");
}

id objc_msgSend_setFillMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillMode:");
}

id objc_msgSend_setFilters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFilters:");
}

id objc_msgSend_setFindSemaphore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFindSemaphore:");
}

id objc_msgSend_setFinished_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFinished:");
}

id objc_msgSend_setFinishedForAssetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFinishedForAssetID:");
}

id objc_msgSend_setFirstDocumentHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFirstDocumentHref:");
}

id objc_msgSend_setFixedLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFixedLayout:");
}

id objc_msgSend_setFixedLayoutFlow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFixedLayoutFlow:");
}

id objc_msgSend_setFixedLayoutHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFixedLayoutHeight:");
}

id objc_msgSend_setFixedLayoutSpread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFixedLayoutSpread:");
}

id objc_msgSend_setFixedLayoutWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFixedLayoutWidth:");
}

id objc_msgSend_setFocusEffect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFocusEffect:");
}

id objc_msgSend_setFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFont:");
}

id objc_msgSend_setFontFaceLookupByFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontFaceLookupByFileName:");
}

id objc_msgSend_setFontFamily_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontFamily:");
}

id objc_msgSend_setFontLookupByFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontLookupByFileName:");
}

id objc_msgSend_setFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontSize:");
}

id objc_msgSend_setFontSizeConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontSizeConfiguration:");
}

id objc_msgSend_setFonts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFonts:");
}

id objc_msgSend_setFontsByFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFontsByFileName:");
}

id objc_msgSend_setForce_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForce:");
}

id objc_msgSend_setForcePopoverInsteadOfSheet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForcePopoverInsteadOfSheet:");
}

id objc_msgSend_setForwardCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setForwardCurl:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFrameAndPositionWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrameAndPositionWebView:");
}

id objc_msgSend_setFrameColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrameColor:");
}

id objc_msgSend_setFrameWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrameWidth:");
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromValue:");
}

id objc_msgSend_setFullLineRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullLineRect:");
}

id objc_msgSend_setFullLineWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFullLineWidth:");
}

id objc_msgSend_setGenericCoverTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGenericCoverTemplate:");
}

id objc_msgSend_setGenre_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGenre:");
}

id objc_msgSend_setGridInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setGridInset:");
}

id objc_msgSend_setHasBuiltInFonts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasBuiltInFonts:");
}

id objc_msgSend_setHasCalculatedMinZoomScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasCalculatedMinZoomScale:");
}

id objc_msgSend_setHasComputedFixedLayoutSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasComputedFixedLayoutSize:");
}

id objc_msgSend_setHasLandmarkElements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasLandmarkElements:");
}

id objc_msgSend_setHasPhysicalElements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasPhysicalElements:");
}

id objc_msgSend_setHasRibbon_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasRibbon:");
}

id objc_msgSend_setHasTocElements_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasTocElements:");
}

id objc_msgSend_setHasTurnedToInitialPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasTurnedToInitialPage:");
}

id objc_msgSend_setHasWKWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHasWKWebView:");
}

id objc_msgSend_setHavePartialResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHavePartialResults:");
}

id objc_msgSend_setHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHeight:");
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidden:");
}

id objc_msgSend_setHideThumbView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHideThumbView:");
}

id objc_msgSend_setHidesSpine_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesSpine:");
}

id objc_msgSend_setHidesWhenStopped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHidesWhenStopped:");
}

id objc_msgSend_setHighlightBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightBackgroundColor:");
}

id objc_msgSend_setHighlightType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightType:");
}

id objc_msgSend_setHighlightViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightViews:");
}

id objc_msgSend_setHighlightedAnnotationBlendMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightedAnnotationBlendMode:");
}

id objc_msgSend_setHighlightedBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightedBackgroundView:");
}

id objc_msgSend_setHighlightedTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightedTextColor:");
}

id objc_msgSend_setHighlightedTextFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlightedTextFont:");
}

id objc_msgSend_setHistoryEntities_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHistoryEntities:");
}

id objc_msgSend_setHorizontal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHorizontal:");
}

id objc_msgSend_setHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHref:");
}

id objc_msgSend_setIconImageViewWidthAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconImageViewWidthAnchor:");
}

id objc_msgSend_setIconSymbol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIconSymbol:");
}

id objc_msgSend_setIdealSinglePageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdealSinglePageSize:");
}

id objc_msgSend_setIdentity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentity:");
}

id objc_msgSend_setIdentityStore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIdentityStore:");
}

id objc_msgSend_setIgnoreKeyboardInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreKeyboardInteraction:");
}

id objc_msgSend_setIgnoreNextGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnoreNextGesture:");
}

id objc_msgSend_setIgnorePageTurnGestures_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIgnorePageTurnGestures:");
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:");
}

id objc_msgSend_setImage_forSearchBarIcon_state_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forSearchBarIcon:state:");
}

id objc_msgSend_setImage_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImage:forState:");
}

id objc_msgSend_setImageAnalyzer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageAnalyzer:");
}

id objc_msgSend_setImageCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageCache:");
}

id objc_msgSend_setImageResizerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageResizerDelegate:");
}

id objc_msgSend_setImageScroller_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageScroller:");
}

id objc_msgSend_setImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setImageView:");
}

id objc_msgSend_setIncludedActivityTypes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludedActivityTypes:");
}

id objc_msgSend_setIncludesCapSpace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIncludesCapSpace:");
}

id objc_msgSend_setIndentationLevel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIndentationLevel:");
}

id objc_msgSend_setIndentationWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIndentationWidth:");
}

id objc_msgSend_setInfoText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInfoText:");
}

id objc_msgSend_setInitialJumpLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialJumpLocation:");
}

id objc_msgSend_setInitialVelocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialVelocity:");
}

id objc_msgSend_setInitialZoomFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialZoomFactor:");
}

id objc_msgSend_setInitialZoomScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInitialZoomScale:");
}

id objc_msgSend_setInnerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInnerView:");
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteger:forKey:");
}

id objc_msgSend_setInteractionTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractionTintColor:");
}

id objc_msgSend_setInteractive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setInteractive:");
}

id objc_msgSend_setIsAccessibilityElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsAccessibilityElement:");
}

id objc_msgSend_setIsContentManaged_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsContentManaged:");
}

id objc_msgSend_setIsDirty_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDirty:");
}

id objc_msgSend_setIsDownloading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDownloading:");
}

id objc_msgSend_setIsDuplicateSpineEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDuplicateSpineEntry:");
}

id objc_msgSend_setIsFixedLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsFixedLayout:");
}

id objc_msgSend_setIsGoingToNextPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsGoingToNextPage:");
}

id objc_msgSend_setIsInteractive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsInteractive:");
}

id objc_msgSend_setIsLeftPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsLeftPage:");
}

id objc_msgSend_setIsMailingAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMailingAllowed:");
}

id objc_msgSend_setIsOpen_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsOpen:");
}

id objc_msgSend_setIsPasswordRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPasswordRequired:");
}

id objc_msgSend_setIsPreorder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPreorder:");
}

id objc_msgSend_setIsPrintingAllowed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsPrintingAllowed:");
}

id objc_msgSend_setIsRightPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsRightPage:");
}

id objc_msgSend_setIsSourceEditable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsSourceEditable:");
}

id objc_msgSend_setIsVerticalDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsVerticalDocument:");
}

id objc_msgSend_setIsWithinGravitationalPointReach_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsWithinGravitationalPointReach:");
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItems:");
}

id objc_msgSend_setItems_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setItems:animated:");
}

id objc_msgSend_setJobGeneration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setJobGeneration:");
}

id objc_msgSend_setJustification_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setJustification:");
}

id objc_msgSend_setKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyPath:");
}

id objc_msgSend_setKeyboardAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyboardAppearance:");
}

id objc_msgSend_setKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKind:");
}

id objc_msgSend_setLabelFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelFont:");
}

id objc_msgSend_setLabelText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLabelText:");
}

id objc_msgSend_setLandmarkAnchors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLandmarkAnchors:");
}

id objc_msgSend_setLandscapeProhibited_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLandscapeProhibited:");
}

id objc_msgSend_setLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguage:");
}

id objc_msgSend_setLanguageFromPlist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLanguageFromPlist:");
}

id objc_msgSend_setLargeSizeFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLargeSizeFactor:");
}

id objc_msgSend_setLastAnalyticsDeviceOrientationReported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastAnalyticsDeviceOrientationReported:");
}

id objc_msgSend_setLastCurlUnderPageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastCurlUnderPageView:");
}

id objc_msgSend_setLastLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastLocation:");
}

id objc_msgSend_setLastSavedSearchResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastSavedSearchResult:");
}

id objc_msgSend_setLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayout:");
}

id objc_msgSend_setLayoutDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutDelegate:");
}

id objc_msgSend_setLayoutDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutDirection:");
}

id objc_msgSend_setLayoutGeometry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLayoutGeometry:");
}

id objc_msgSend_setLeftContentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftContentView:");
}

id objc_msgSend_setLeftImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftImage:");
}

id objc_msgSend_setLeftItems_rightItems_title_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftItems:rightItems:title:animated:");
}

id objc_msgSend_setLeftItems_rightItems_titleView_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftItems:rightItems:titleView:animated:");
}

id objc_msgSend_setLeftPageText_shortenString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftPageText:shortenString:");
}

id objc_msgSend_setLeftSideMovementThreshold_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftSideMovementThreshold:");
}

id objc_msgSend_setLeftSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLeftSourceView:");
}

id objc_msgSend_setLightenBlend_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLightenBlend:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setLineHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineHeight:");
}

id objc_msgSend_setLinearDocumentIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLinearDocumentIndex:");
}

id objc_msgSend_setLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLines:");
}

id objc_msgSend_setLoadFailureCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoadFailureCount:");
}

id objc_msgSend_setLoadSemaphore_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoadSemaphore:");
}

id objc_msgSend_setLoader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoader:");
}

id objc_msgSend_setLocalFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalFrame:");
}

id objc_msgSend_setLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocation:");
}

id objc_msgSend_setLocationEnsuredFirstPaintWorkBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocationEnsuredFirstPaintWorkBlock:");
}

id objc_msgSend_setLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocations:");
}

id objc_msgSend_setLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLookupKey:");
}

id objc_msgSend_setLoops_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLoops:");
}

id objc_msgSend_setMagnificationFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMagnificationFilter:");
}

id objc_msgSend_setMaintainZoomScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaintainZoomScale:");
}

id objc_msgSend_setManagedBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManagedBook:");
}

id objc_msgSend_setManifestId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManifestId:");
}

id objc_msgSend_setManifestProperties_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManifestProperties:");
}

id objc_msgSend_setManualCurlCurrentTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManualCurlCurrentTime:");
}

id objc_msgSend_setManualCurlHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManualCurlHandler:");
}

id objc_msgSend_setManualCurlStartPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setManualCurlStartPosition:");
}

id objc_msgSend_setMask_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMask:");
}

id objc_msgSend_setMaskedCorners_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaskedCorners:");
}

id objc_msgSend_setMasksToBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasksToBounds:");
}

id objc_msgSend_setMass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMass:");
}

id objc_msgSend_setMasterImageKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMasterImageKey:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setMaxResizeScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxResizeScale:");
}

id objc_msgSend_setMaxScaleFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxScaleFactor:");
}

id objc_msgSend_setMaxSimulatedZoomScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxSimulatedZoomScale:");
}

id objc_msgSend_setMaxWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxWidth:");
}

id objc_msgSend_setMaxZoomScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxZoomScale:");
}

id objc_msgSend_setMaximumTrackTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumTrackTintColor:");
}

id objc_msgSend_setMaximumValueImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumValueImage:");
}

id objc_msgSend_setMaximumZoomScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaximumZoomScale:");
}

id objc_msgSend_setMediaActiveClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaActiveClass:");
}

id objc_msgSend_setMediaFrames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaFrames:");
}

id objc_msgSend_setMediaLocations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaLocations:");
}

id objc_msgSend_setMediaOverlayHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaOverlayHref:");
}

id objc_msgSend_setMediaOverlayParsed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMediaOverlayParsed:");
}

id objc_msgSend_setMenuItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMenuItems:");
}

id objc_msgSend_setMergePolicy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMergePolicy:");
}

id objc_msgSend_setMetadata_forKey_forURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMetadata:forKey:forURL:");
}

id objc_msgSend_setMime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMime:");
}

id objc_msgSend_setMinScaleFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinScaleFactor:");
}

id objc_msgSend_setMinimumFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumFontSize:");
}

id objc_msgSend_setMinimumGridSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumGridSpacing:");
}

id objc_msgSend_setMinimumPressDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumPressDuration:");
}

id objc_msgSend_setMinimumScaleFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumScaleFactor:");
}

id objc_msgSend_setMinimumTrackTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumTrackTintColor:");
}

id objc_msgSend_setMinimumValueImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumValueImage:");
}

id objc_msgSend_setMinimumZoomScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMinimumZoomScale:");
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setModalPresentationStyle:");
}

id objc_msgSend_setMultipleTouchEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMultipleTouchEnabled:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNavDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavDelegate:");
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:");
}

id objc_msgSend_setNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationBarHidden:animated:");
}

id objc_msgSend_setNavigationDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationDelegate:");
}

id objc_msgSend_setNavigationHistory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationHistory:");
}

id objc_msgSend_setNavigationInfoAnchors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationInfoAnchors:");
}

id objc_msgSend_setNavigationOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNavigationOrientation:");
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsDisplay");
}

id objc_msgSend_setNeedsLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsLayout");
}

id objc_msgSend_setNeedsRebuild(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsRebuild");
}

id objc_msgSend_setNeedsStatusBarAppearanceUpdate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsStatusBarAppearanceUpdate");
}

id objc_msgSend_setNeedsUpdateConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUpdateConstraints");
}

id objc_msgSend_setNeedsUpdateOfHomeIndicatorAutoHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsUpdateOfHomeIndicatorAutoHidden");
}

id objc_msgSend_setNegated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNegated:");
}

id objc_msgSend_setNextTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNextTime:");
}

id objc_msgSend_setNonlinearElement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNonlinearElement:");
}

id objc_msgSend_setNormalBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNormalBackgroundColor:");
}

id objc_msgSend_setNumberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfLines:");
}

id objc_msgSend_setNumberOfMarkupAnnotations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfMarkupAnnotations:");
}

id objc_msgSend_setNumberOfMarkupAnnotationsWithPopups_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfMarkupAnnotationsWithPopups:");
}

id objc_msgSend_setNumberOfTapsRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfTapsRequired:");
}

id objc_msgSend_setNumberOfTouchesRequired_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNumberOfTouchesRequired:");
}

id objc_msgSend_setObeyPageBreaks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObeyPageBreaks:");
}

id objc_msgSend_setObeyPageBreaksFromPlist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObeyPageBreaksFromPlist:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKey_cost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:cost:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setOn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOn:");
}

id objc_msgSend_setOn_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOn:animated:");
}

id objc_msgSend_setOnTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOnTintColor:");
}

id objc_msgSend_setOngoingAnimationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOngoingAnimationCount:");
}

id objc_msgSend_setOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpacity:");
}

id objc_msgSend_setOpaque_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpaque:");
}

id objc_msgSend_setOpenToSpread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpenToSpread:");
}

id objc_msgSend_setOpeningLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOpeningLocation:");
}

id objc_msgSend_setOperationFactory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationFactory:");
}

id objc_msgSend_setOperationQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOperationQueue:");
}

id objc_msgSend_setOptimizeLegibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOptimizeLegibility:");
}

id objc_msgSend_setOption_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOption:forKey:");
}

id objc_msgSend_setOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrdinal:");
}

id objc_msgSend_setOrientation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrientation:");
}

id objc_msgSend_setOriginalURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOriginalURL:");
}

id objc_msgSend_setOrthography_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOrthography:");
}

id objc_msgSend_setOverrideBuildMenuLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideBuildMenuLocation:");
}

id objc_msgSend_setOverrideProvider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideProvider:");
}

id objc_msgSend_setOverrideUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOverrideUserInterfaceStyle:");
}

id objc_msgSend_setOwner_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOwner:");
}

id objc_msgSend_setPDFAKControllerDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPDFAKControllerDelegate:");
}

id objc_msgSend_setPage_forLookupKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPage:forLookupKey:");
}

id objc_msgSend_setPageAnimationDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageAnimationDelegate:");
}

id objc_msgSend_setPageBreakMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageBreakMargins:");
}

id objc_msgSend_setPageCacheDistance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageCacheDistance:");
}

id objc_msgSend_setPageColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageColor:");
}

id objc_msgSend_setPageCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageCount:");
}

id objc_msgSend_setPageCountIncludingUpsell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageCountIncludingUpsell:");
}

id objc_msgSend_setPageCurl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageCurl:");
}

id objc_msgSend_setPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageNumber:");
}

id objc_msgSend_setPageNumberBeforeTransition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageNumberBeforeTransition:");
}

id objc_msgSend_setPageNumberHUDHeightConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageNumberHUDHeightConstraint:");
}

id objc_msgSend_setPageNumberHUDTopConstraint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageNumberHUDTopConstraint:");
}

id objc_msgSend_setPageNumberHudTextLabelForValidatedPageNumber_visiblePageCount_validatedPageCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageNumberHudTextLabelForValidatedPageNumber:visiblePageCount:validatedPageCount:");
}

id objc_msgSend_setPageOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageOffset:");
}

id objc_msgSend_setPageOffset_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageOffset:completion:");
}

id objc_msgSend_setPageProgressionDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageProgressionDirection:");
}

id objc_msgSend_setPageProgressionIsRTL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageProgressionIsRTL:");
}

id objc_msgSend_setPageScrollerPageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageScrollerPageView:");
}

id objc_msgSend_setPageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageSize:");
}

id objc_msgSend_setPageSlideAnimation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageSlideAnimation:");
}

id objc_msgSend_setPageTextDirectionIsRTL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageTextDirectionIsRTL:");
}

id objc_msgSend_setPageTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageTheme:");
}

id objc_msgSend_setPageTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageTitle:");
}

id objc_msgSend_setPageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPageView:");
}

id objc_msgSend_setPaginationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaginationController:");
}

id objc_msgSend_setPaginationDataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaginationDataSource:");
}

id objc_msgSend_setPaginationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaginationOptions:");
}

id objc_msgSend_setPaginationRetryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaginationRetryCount:");
}

id objc_msgSend_setPaginationRevision_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPaginationRevision:");
}

id objc_msgSend_setPagingEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPagingEnabled:");
}

id objc_msgSend_setParseDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParseDate:");
}

id objc_msgSend_setParserNCXPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParserNCXPath:");
}

id objc_msgSend_setParserOPFPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParserOPFPath:");
}

id objc_msgSend_setParserVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setParserVersion:");
}

id objc_msgSend_setPartialResults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPartialResults:");
}

id objc_msgSend_setPassthroughViews_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPassthroughViews:");
}

id objc_msgSend_setPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPassword:");
}

id objc_msgSend_setPausedTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPausedTime:");
}

id objc_msgSend_setPdfChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPdfChapter:");
}

id objc_msgSend_setPdfDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPdfDocument:");
}

id objc_msgSend_setPdfOutlineRoot_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPdfOutlineRoot:");
}

id objc_msgSend_setPdfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPdfView:");
}

id objc_msgSend_setPendingInfoRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPendingInfoRequest:");
}

id objc_msgSend_setPerformsFirstActionWithFullSwipe_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPerformsFirstActionWithFullSwipe:");
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPermittedArrowDirections:");
}

id objc_msgSend_setPersistentCachePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentCachePath:");
}

id objc_msgSend_setPersistentStoreCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStoreCoordinator:");
}

id objc_msgSend_setPersistentStoreDescriptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPersistentStoreDescriptions:");
}

id objc_msgSend_setPhysicalPageAnchors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhysicalPageAnchors:");
}

id objc_msgSend_setPhysicalPageMap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhysicalPageMap:");
}

id objc_msgSend_setPhysicalPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPhysicalPageNumber:");
}

id objc_msgSend_setPiggyBack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPiggyBack:");
}

id objc_msgSend_setPlLocationRangeStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlLocationRangeStart:");
}

id objc_msgSend_setPlUserData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlUserData:");
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaceholder:");
}

id objc_msgSend_setPlaybackSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPlaybackSpeed:");
}

id objc_msgSend_setPortraitProhibited_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPortraitProhibited:");
}

id objc_msgSend_setPostscriptBoldName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPostscriptBoldName:");
}

id objc_msgSend_setPostscriptName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPostscriptName:");
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPredicate:");
}

id objc_msgSend_setPreferredContentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredContentSize:");
}

id objc_msgSend_setPreferredDirectoryType_forBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredDirectoryType:forBook:");
}

id objc_msgSend_setPreferredFontSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredFontSize:");
}

id objc_msgSend_setPreferredPageNumberHUDVisibility_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredPageNumberHUDVisibility:");
}

id objc_msgSend_setPreferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreferredStyle:");
}

id objc_msgSend_setPresentationViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentationViewController:");
}

id objc_msgSend_setPresenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresenter:");
}

id objc_msgSend_setPresentingFromTOC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresentingFromTOC:");
}

id objc_msgSend_setPreservesSuperviewLayoutMargins_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreservesSuperviewLayoutMargins:");
}

id objc_msgSend_setPresetsByFileName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPresetsByFileName:");
}

id objc_msgSend_setPreviewTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPreviewTitle:");
}

id objc_msgSend_setPrimaryImageSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimaryImageSize:");
}

id objc_msgSend_setPrimitiveValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPrimitiveValue:forKey:");
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPriority:");
}

id objc_msgSend_setProductProfile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProductProfile:");
}

id objc_msgSend_setProfileFuture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProfileFuture:");
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgress:");
}

id objc_msgSend_setProgressThickness_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressThickness:");
}

id objc_msgSend_setPropertiesOfBook_withPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropertiesOfBook:withPlistEntry:");
}

id objc_msgSend_setPropertiesToFetch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPropertiesToFetch:");
}

id objc_msgSend_setPublisherInfoFromParser_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublisherInfoFromParser:");
}

id objc_msgSend_setPublisherLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublisherLocation:");
}

id objc_msgSend_setPublisherName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublisherName:");
}

id objc_msgSend_setPublisherYear_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPublisherYear:");
}

id objc_msgSend_setQueuePriority_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQueuePriority:");
}

id objc_msgSend_setReadAloudState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadAloudState:");
}

id objc_msgSend_setReadingDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingDirection:");
}

id objc_msgSend_setReadingLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingLocation:");
}

id objc_msgSend_setReadingLocationHighwaterMark_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadingLocationHighwaterMark:");
}

id objc_msgSend_setReadyForDisplay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadyForDisplay:");
}

id objc_msgSend_setRecenteredIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRecenteredIndexPath:");
}

id objc_msgSend_setRectForPresentedMenuForTextInteraction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRectForPresentedMenuForTextInteraction:");
}

id objc_msgSend_setReferenceLibraryViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReferenceLibraryViewController:");
}

id objc_msgSend_setRemoved_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemoved:");
}

id objc_msgSend_setRemovedOnCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemovedOnCompletion:");
}

id objc_msgSend_setRenderingPiggyBack_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRenderingPiggyBack:");
}

id objc_msgSend_setReportedLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReportedLocation:");
}

id objc_msgSend_setRequestToIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRequestToIndexPath:");
}

id objc_msgSend_setResizeAnimationInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResizeAnimationInProgress:");
}

id objc_msgSend_setResizeRequestPending_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResizeRequestPending:");
}

id objc_msgSend_setResizeViewsWhenZoomed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResizeViewsWhenZoomed:");
}

id objc_msgSend_setResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResource:");
}

id objc_msgSend_setRespectImageSizeClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRespectImageSizeClass:");
}

id objc_msgSend_setRespectImageSizeClassIsPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRespectImageSizeClassIsPrefix:");
}

id objc_msgSend_setRestoreFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRestoreFrame:");
}

id objc_msgSend_setResultType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResultType:");
}

id objc_msgSend_setResumeLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResumeLocation:");
}

id objc_msgSend_setReturnsObjectsAsFaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReturnsObjectsAsFaults:");
}

id objc_msgSend_setRight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRight:");
}

id objc_msgSend_setRightContentView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightContentView:");
}

id objc_msgSend_setRightImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightImage:");
}

id objc_msgSend_setRightPageText_shortenString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightPageText:shortenString:");
}

id objc_msgSend_setRightSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRightSourceView:");
}

id objc_msgSend_setRootPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRootPath:");
}

id objc_msgSend_setRotationInProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRotationInProgress:");
}

id objc_msgSend_setRowHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRowHeight:");
}

id objc_msgSend_setSafeToShowToolbarItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSafeToShowToolbarItems:");
}

id objc_msgSend_setSampleContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSampleContent:");
}

id objc_msgSend_setScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScale:");
}

id objc_msgSend_setScaleFactor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScaleFactor:");
}

id objc_msgSend_setScaleFactor_anchorPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScaleFactor:anchorPoint:");
}

id objc_msgSend_setScroll_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScroll:");
}

id objc_msgSend_setScrollAxisModeFromPlist_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollAxisModeFromPlist:");
}

id objc_msgSend_setScrollDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollDirection:");
}

id objc_msgSend_setScrollEdgeAppearance_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEdgeAppearance:");
}

id objc_msgSend_setScrollEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollEnabled:");
}

id objc_msgSend_setScrollIndicatorInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollIndicatorInsets:");
}

id objc_msgSend_setScrollIndicatorsNeedToBeFlashed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollIndicatorsNeedToBeFlashed:");
}

id objc_msgSend_setScrollModeOn_notifyingCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollModeOn:notifyingCoordinator:");
}

id objc_msgSend_setScrollState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrollState:");
}

id objc_msgSend_setScrolling_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrolling:");
}

id objc_msgSend_setScrubberContainerView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrubberContainerView:");
}

id objc_msgSend_setScrubbing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScrubbing:");
}

id objc_msgSend_setSearchBook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchBook:");
}

id objc_msgSend_setSearchCompleted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchCompleted:");
}

id objc_msgSend_setSearchDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchDelegate:");
}

id objc_msgSend_setSearchLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchLocation:");
}

id objc_msgSend_setSearchResult_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchResult:");
}

id objc_msgSend_setSearchString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchString:");
}

id objc_msgSend_setSearchStringRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearchStringRange:");
}

id objc_msgSend_setSearching_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSearching:");
}

id objc_msgSend_setSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSection:");
}

id objc_msgSend_setSection_animated_adjustScrollToReveal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSection:animated:adjustScrollToReveal:");
}

id objc_msgSend_setSectionFooterHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionFooterHeight:");
}

id objc_msgSend_setSectionHeaderHeight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSectionHeaderHeight:");
}

id objc_msgSend_setSecureTextEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSecureTextEntry:");
}

id objc_msgSend_setSegmentCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegmentCount:");
}

id objc_msgSend_setSegmentSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegmentSize:");
}

id objc_msgSend_setSegmentStrokeColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSegmentStrokeColor:");
}

id objc_msgSend_setSelected_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelected:");
}

id objc_msgSend_setSelected_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelected:animated:");
}

id objc_msgSend_setSelectedBackgroundView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedBackgroundView:");
}

id objc_msgSend_setSelectedIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedIndex:");
}

id objc_msgSend_setSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelection:");
}

id objc_msgSend_setSelectionHighlightType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionHighlightType:");
}

id objc_msgSend_setSelectionHighlightsVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionHighlightsVisible:");
}

id objc_msgSend_setSelectionRects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionRects:");
}

id objc_msgSend_setSelectionStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectionStyle:");
}

id objc_msgSend_setSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelector:");
}

id objc_msgSend_setSentinel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSentinel:");
}

id objc_msgSend_setSeparatorColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorColor:");
}

id objc_msgSend_setSeparatorInset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorInset:");
}

id objc_msgSend_setSeparatorInsets_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorInsets:");
}

id objc_msgSend_setSeparatorStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSeparatorStyle:");
}

id objc_msgSend_setSequenceSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSequenceSource:");
}

id objc_msgSend_setSerialData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSerialData:");
}

id objc_msgSend_setSerializeFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSerializeFormat:");
}

id objc_msgSend_setSessionID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSessionID:");
}

id objc_msgSend_setShadowColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowColor:");
}

id objc_msgSend_setShadowOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowOffset:");
}

id objc_msgSend_setShadowOpacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowOpacity:");
}

id objc_msgSend_setShadowPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowPath:");
}

id objc_msgSend_setShadowRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShadowRadius:");
}

id objc_msgSend_setShareType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShareType:");
}

id objc_msgSend_setSharedBookCoverResetter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedBookCoverResetter:");
}

id objc_msgSend_setSharedWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSharedWebView:");
}

id objc_msgSend_setShouldAllowRemoteInspection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAllowRemoteInspection:");
}

id objc_msgSend_setShouldAnimate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldAnimate:");
}

id objc_msgSend_setShouldDim_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDim:");
}

id objc_msgSend_setShouldDisableOptimizeSpeed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDisableOptimizeSpeed:");
}

id objc_msgSend_setShouldDisplayPageInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldDisplayPageInfo:");
}

id objc_msgSend_setShouldHaveGradient_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldHaveGradient:");
}

id objc_msgSend_setShouldHaveLeftImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldHaveLeftImage:");
}

id objc_msgSend_setShouldHaveRightImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldHaveRightImage:");
}

id objc_msgSend_setShouldInvertContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShouldInvertContent:");
}

id objc_msgSend_setShowBookmarks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowBookmarks:");
}

id objc_msgSend_setShowBookmarksOnly_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowBookmarksOnly:");
}

id objc_msgSend_setShowSelectionView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowSelectionView:");
}

id objc_msgSend_setShowSpreads_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowSpreads:");
}

id objc_msgSend_setShowsAnnotations_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsAnnotations:");
}

id objc_msgSend_setShowsCancelButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsCancelButton:");
}

id objc_msgSend_setShowsHorizontalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsHorizontalScrollIndicator:");
}

id objc_msgSend_setShowsPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsPageNumber:");
}

id objc_msgSend_setShowsScrollIndicators_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsScrollIndicators:");
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShowsVerticalScrollIndicator:");
}

id objc_msgSend_setSinfBlob_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSinfBlob:");
}

id objc_msgSend_setSinfInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSinfInfo:");
}

id objc_msgSend_setSinfNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSinfNumber:");
}

id objc_msgSend_setSinglePage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSinglePage:");
}

id objc_msgSend_setSingletonAnnotationType_location_modificationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSingletonAnnotationType:location:modificationHandler:");
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSize:");
}

id objc_msgSend_setSizeOfCachedFonts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSizeOfCachedFonts:");
}

id objc_msgSend_setSkipToast_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSkipToast:");
}

id objc_msgSend_setSnapshotSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnapshotSize:");
}

id objc_msgSend_setSnapshotWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSnapshotWidth:");
}

id objc_msgSend_setSortAuthor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortAuthor:");
}

id objc_msgSend_setSortDescriptors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortDescriptors:");
}

id objc_msgSend_setSortTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSortTitle:");
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceRect:");
}

id objc_msgSend_setSourceURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceURL:");
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceView:");
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpacing:");
}

id objc_msgSend_setSpecialization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecialization:");
}

id objc_msgSend_setSpecifiedWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpecifiedWidth:");
}

id objc_msgSend_setSpineIndexInPackage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpineIndexInPackage:");
}

id objc_msgSend_setSpineIndexUpdated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpineIndexUpdated:");
}

id objc_msgSend_setSpineLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSpineLocation:");
}

id objc_msgSend_setStabilization_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStabilization:");
}

id objc_msgSend_setStartOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartOffset:");
}

id objc_msgSend_setStartPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartPath:");
}

id objc_msgSend_setStartPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartPoint:");
}

id objc_msgSend_setStartSearchFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartSearchFromIndex:");
}

id objc_msgSend_setStartSearchIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartSearchIndex:");
}

id objc_msgSend_setStartTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStartTime:");
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setState:");
}

id objc_msgSend_setStateShouldClose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStateShouldClose:");
}

id objc_msgSend_setStatusBarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusBarHidden:animated:");
}

id objc_msgSend_setStatusBarHidden_animated_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStatusBarHidden:animated:animations:completion:");
}

id objc_msgSend_setSteps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSteps:");
}

id objc_msgSend_setStiffness_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStiffness:");
}

id objc_msgSend_setStorageKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStorageKey:");
}

id objc_msgSend_setStoreDialogResponseHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreDialogResponseHandler:");
}

id objc_msgSend_setStoreFrontId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreFrontId:");
}

id objc_msgSend_setStoreID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreID:");
}

id objc_msgSend_setStoreId_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStoreId:");
}

id objc_msgSend_setStroke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStroke");
}

id objc_msgSend_setStrokeColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeColor:");
}

id objc_msgSend_setStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStyle:");
}

id objc_msgSend_setSublayerTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSublayerTransform:");
}

id objc_msgSend_setSuccessfulLoad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSuccessfulLoad:");
}

id objc_msgSend_setSupportsTheming_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSupportsTheming:");
}

id objc_msgSend_setSwipeToShowScrubberEnable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSwipeToShowScrubberEnable:");
}

id objc_msgSend_setSystemName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSystemName:");
}

id objc_msgSend_setTableFooterView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTableFooterView:");
}

id objc_msgSend_setTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTag:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setTargetPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTargetPageNumber:");
}

id objc_msgSend_setTempOwnerID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTempOwnerID:");
}

id objc_msgSend_setTemporaryItemIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTemporaryItemIdentifier:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTextAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextAlignment:");
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextColor:");
}

id objc_msgSend_setTextContent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextContent:");
}

id objc_msgSend_setTextDirectionDetermined_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextDirectionDetermined:");
}

id objc_msgSend_setTextHilightColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextHilightColor:");
}

id objc_msgSend_setTextLabelTrailingAnchor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextLabelTrailingAnchor:");
}

id objc_msgSend_setTextNodeCharacterCounts_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTextNodeCharacterCounts:");
}

id objc_msgSend_setTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTheme:");
}

id objc_msgSend_setThenSteps_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThenSteps:");
}

id objc_msgSend_setThumbnail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThumbnail:");
}

id objc_msgSend_setThumbnail_forPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThumbnail:forPage:");
}

id objc_msgSend_setThumbnail_forPage_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThumbnail:forPage:context:");
}

id objc_msgSend_setThumbnailingDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThumbnailingDelegate:");
}

id objc_msgSend_setTimeOut_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeOut:");
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimeStyle:");
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimingFunction:");
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTintColor:");
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:");
}

id objc_msgSend_setTitle_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitle:forState:");
}

id objc_msgSend_setTitleAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleAlignment:");
}

id objc_msgSend_setTitleColor_forState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleColor:forState:");
}

id objc_msgSend_setTitleTextAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTitleTextAttributes:");
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToValue:");
}

id objc_msgSend_setTocContentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTocContentType:");
}

id objc_msgSend_setTocCurrentLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTocCurrentLocation:");
}

id objc_msgSend_setTocIdCssRules_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTocIdCssRules:");
}

id objc_msgSend_setTocPageHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTocPageHref:");
}

id objc_msgSend_setToolBarHidden_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolBarHidden:animated:");
}

id objc_msgSend_setToolbarHidden_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarHidden:");
}

id objc_msgSend_setToolbarItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToolbarItems:");
}

id objc_msgSend_setTopToolBarVisible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopToolBarVisible:");
}

id objc_msgSend_setTopView_isRightPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTopView:isRightPage:");
}

id objc_msgSend_setTotalPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalPages:");
}

id objc_msgSend_setTotalZoomScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalZoomScale:");
}

id objc_msgSend_setTrackDiameter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackDiameter:");
}

id objc_msgSend_setTrackState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackState:");
}

id objc_msgSend_setTrackState_persistSetting_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackState:persistSetting:");
}

id objc_msgSend_setTrackingTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTrackingTouch:");
}

id objc_msgSend_setTransform_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTransform:");
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslatesAutoresizingMaskIntoConstraints:");
}

id objc_msgSend_setTranslationViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslationViewController:");
}

id objc_msgSend_setTranslucent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTranslucent:");
}

id objc_msgSend_setTurnState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTurnState:");
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setType:");
}

id objc_msgSend_setURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setURL:");
}

id objc_msgSend_setUnderlineDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlineDirection:");
}

id objc_msgSend_setUnderlinePosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlinePosition:");
}

id objc_msgSend_setUndoManager_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUndoManager:");
}

id objc_msgSend_setUnitsStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnitsStyle:");
}

id objc_msgSend_setUpdateDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpdateDate:");
}

id objc_msgSend_setUpsellPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUpsellPageNumber:");
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUrl:");
}

id objc_msgSend_setUseGlobalContentStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseGlobalContentStyle:");
}

id objc_msgSend_setUseInvertedColors_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseInvertedColors:");
}

id objc_msgSend_setUseRoundedCornerRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUseRoundedCornerRadius:");
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInteractionEnabled:");
}

id objc_msgSend_setUserNavigated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserNavigated:");
}

id objc_msgSend_setUsesExternalPlaybackWhileExternalScreenIsActive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesExternalPlaybackWhileExternalScreenIsActive:");
}

id objc_msgSend_setUsesMonospacedDigitFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesMonospacedDigitFont:");
}

id objc_msgSend_setUsesMonospacedDigitFontForSubtitle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesMonospacedDigitFontForSubtitle:");
}

id objc_msgSend_setUsesPopoverStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUsesPopoverStyle:");
}

id objc_msgSend_setValidRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValidRange:");
}

id objc_msgSend_setValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:");
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKey:");
}

id objc_msgSend_setValue_forKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forKeyPath:");
}

id objc_msgSend_setValue_forPasteboardType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValue:forPasteboardType:");
}

id objc_msgSend_setVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVersion:");
}

id objc_msgSend_setVertical_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVertical:");
}

id objc_msgSend_setVerticalScrubber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerticalScrubber:");
}

id objc_msgSend_setVerticalScrubberAnimator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVerticalScrubberAnimator:");
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setView:");
}

id objc_msgSend_setViewControllers_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setViewControllers:");
}

id objc_msgSend_setVisibleCFIString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVisibleCFIString:");
}

id objc_msgSend_setVolume_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVolume:");
}

id objc_msgSend_setWantsPriorityOverSystemBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWantsPriorityOverSystemBehavior:");
}

id objc_msgSend_setWebView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWebView:");
}

id objc_msgSend_setWebViewBuilder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWebViewBuilder:");
}

id objc_msgSend_setWebViewLoaded_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWebViewLoaded:");
}

id objc_msgSend_setWebViewTrackingID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWebViewTrackingID:");
}

id objc_msgSend_setWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWidth:");
}

id objc_msgSend_setWidth_forSegmentAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWidth:forSegmentAtIndex:");
}

id objc_msgSend_setWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWindow:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWk1EpubLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWk1EpubLocation:");
}

id objc_msgSend_setZeroFormattingBehavior_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZeroFormattingBehavior:");
}

id objc_msgSend_setZoomScale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomScale:");
}

id objc_msgSend_setZoomScale_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomScale:animated:");
}

id objc_msgSend_setZoomScale_animated_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZoomScale:animated:completionBlock:");
}

id objc_msgSend_set_lastScrollViewSizeLayoutWasGeneratedFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_lastScrollViewSizeLayoutWasGeneratedFor:");
}

id objc_msgSend_set_positionForPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_positionForPages:");
}

id objc_msgSend_set_resizeOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_resizeOperation:");
}

id objc_msgSend_set_thumbnailingOperation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set_thumbnailingOperation:");
}

id objc_msgSend_settlingDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settlingDuration");
}

id objc_msgSend_setupAppearanceViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupAppearanceViewController");
}

id objc_msgSend_setupBackgroundImageViewWithImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupBackgroundImageViewWithImage:");
}

id objc_msgSend_setupBaseURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupBaseURL");
}

id objc_msgSend_setupNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupNotifications");
}

id objc_msgSend_setupSelectedBackgroundNil(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupSelectedBackgroundNil");
}

id objc_msgSend_setupSlideAnimationFromPages_toPages_inContainer_isForwardAnimation_isRTL_isZoomedToSpread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupSlideAnimationFromPages:toPages:inContainer:isForwardAnimation:isRTL:isZoomedToSpread:");
}

id objc_msgSend_setupVerticalScrubber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupVerticalScrubber");
}

id objc_msgSend_setupWithBookInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setupWithBookInfo:");
}

id objc_msgSend_shadowColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shadowColor");
}

id objc_msgSend_shadowOpacity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shadowOpacity");
}

id objc_msgSend_shapeWithRoundedRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shapeWithRoundedRect:");
}

id objc_msgSend_shareAnnotation_fromRect_inView_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareAnnotation:fromRect:inView:completion:");
}

id objc_msgSend_shareAnnotations_fromRect_inView_excerpt_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareAnnotations:fromRect:inView:excerpt:completion:");
}

id objc_msgSend_shareItemAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareItemAtIndexPath:");
}

id objc_msgSend_shareSelectedAnnotationsFromSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareSelectedAnnotationsFromSourceView:");
}

id objc_msgSend_shareSwipeAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareSwipeAction:");
}

id objc_msgSend_shareType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareType");
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shared");
}

id objc_msgSend_sharedAnnotationProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedAnnotationProvider");
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedApplication");
}

id objc_msgSend_sharedBookCoverResetter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedBookCoverResetter");
}

id objc_msgSend_sharedController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedController");
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedInstance");
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedManager");
}

id objc_msgSend_sharedMenuController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedMenuController");
}

id objc_msgSend_sharedPrintController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedPrintController");
}

id objc_msgSend_sharedReachabilityForInternetConnection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedReachabilityForInternetConnection");
}

id objc_msgSend_sharedRegistry(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedRegistry");
}

id objc_msgSend_sharedReporter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedReporter");
}

id objc_msgSend_shortBookTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shortBookTitle");
}

id objc_msgSend_shouldAcceptLocationUpdateFromGlobalAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAcceptLocationUpdateFromGlobalAnnotation:");
}

id objc_msgSend_shouldAllowRemoteInspection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldAllowRemoteInspection");
}

id objc_msgSend_shouldApplyPageColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldApplyPageColor");
}

id objc_msgSend_shouldBookmarkButtonsBeEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldBookmarkButtonsBeEnabled");
}

id objc_msgSend_shouldControlsBeVisibleOnOpen(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldControlsBeVisibleOnOpen");
}

id objc_msgSend_shouldDisableOptimizeSpeed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDisableOptimizeSpeed");
}

id objc_msgSend_shouldDisplayReadaloudControls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDisplayReadaloudControls");
}

id objc_msgSend_shouldDisplaySpread(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldDisplaySpread");
}

id objc_msgSend_shouldHandleSwipeGesture_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHandleSwipeGesture:");
}

id objc_msgSend_shouldHaveLeftImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHaveLeftImage");
}

id objc_msgSend_shouldHaveRightImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHaveRightImage");
}

id objc_msgSend_shouldHighlightReceiveTouch_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldHighlightReceiveTouch:");
}

id objc_msgSend_shouldIgnoreViewLayoutUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldIgnoreViewLayoutUpdates");
}

id objc_msgSend_shouldInvertContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldInvertContent");
}

id objc_msgSend_shouldMonitorLightLevel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldMonitorLightLevel");
}

id objc_msgSend_shouldSavePageControlVisibility(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSavePageControlVisibility");
}

id objc_msgSend_shouldShowBookmarkControl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowBookmarkControl");
}

id objc_msgSend_shouldShowBrightnessControl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowBrightnessControl");
}

id objc_msgSend_shouldShowExpandedContentForURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowExpandedContentForURL:");
}

id objc_msgSend_shouldShowHUDs(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowHUDs");
}

id objc_msgSend_shouldShowTOCControl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowTOCControl");
}

id objc_msgSend_shouldShowUndoControls(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldShowUndoControls");
}

id objc_msgSend_shouldSyncLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldSyncLocation:");
}

id objc_msgSend_shouldUseVerticalScrubber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldUseVerticalScrubber");
}

id objc_msgSend_showBookmarks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBookmarks");
}

id objc_msgSend_showBookmarksOnly(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showBookmarksOnly");
}

id objc_msgSend_showContextMenuAtLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showContextMenuAtLocation:");
}

id objc_msgSend_showExpandedContentForResource_atLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showExpandedContentForResource:atLocation:completion:");
}

id objc_msgSend_showFootnoteInContentViewController_resource_fromView_stylesheetSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showFootnoteInContentViewController:resource:fromView:stylesheetSet:");
}

id objc_msgSend_showHighlightingMenuForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showHighlightingMenuForAnnotation:");
}

id objc_msgSend_showIndicatorCenteredInView_animated_animationDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showIndicatorCenteredInView:animated:animationDelay:");
}

id objc_msgSend_showLoadingViewAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showLoadingViewAnimated:");
}

id objc_msgSend_showMenuFromView_rect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showMenuFromView:rect:");
}

id objc_msgSend_showOriginalFontOption(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showOriginalFontOption");
}

id objc_msgSend_showOverlayViewController_fromItem_popoverOnPhone_passthroughViews_popoverBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showOverlayViewController:fromItem:popoverOnPhone:passthroughViews:popoverBackgroundColor:");
}

id objc_msgSend_showOverlayViewController_fromView_popoverOnPhone_popoverBackgroundColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showOverlayViewController:fromView:popoverOnPhone:popoverBackgroundColor:");
}

id objc_msgSend_showPasswordDialogForBook_transaction_withCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPasswordDialogForBook:transaction:withCompletion:");
}

id objc_msgSend_showPhysicalPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showPhysicalPages");
}

id objc_msgSend_showRowForCurrentLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showRowForCurrentLocation");
}

id objc_msgSend_showScrim_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showScrim:");
}

id objc_msgSend_showSearchWithString_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSearchWithString:sender:");
}

id objc_msgSend_showSpreads(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSpreads");
}

id objc_msgSend_showTOC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showTOC:");
}

id objc_msgSend_showVerticalScrubber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showVerticalScrubber");
}

id objc_msgSend_showingTOC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showingTOC");
}

id objc_msgSend_showsLoadingIndicator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showsLoadingIndicator");
}

id objc_msgSend_showsPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showsPageNumber");
}

id objc_msgSend_sideContentInset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sideContentInset");
}

id objc_msgSend_sideInsetFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sideInsetFactor");
}

id objc_msgSend_signalBookContentDidLoad_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "signalBookContentDidLoad:");
}

id objc_msgSend_simulateZoomScaleByResizingView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "simulateZoomScaleByResizingView");
}

id objc_msgSend_sinfBlob(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sinfBlob");
}

id objc_msgSend_sinfInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sinfInfo");
}

id objc_msgSend_sinfNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sinfNumber");
}

id objc_msgSend_singlePage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singlePage");
}

id objc_msgSend_singlePageAspectFits(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singlePageAspectFits");
}

id objc_msgSend_singlePageCurlContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singlePageCurlContainer");
}

id objc_msgSend_singlePagePadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singlePagePadding");
}

id objc_msgSend_singlePageZoomScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "singlePageZoomScale");
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "size");
}

id objc_msgSend_sizeChangesRequireBookRepagination(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeChangesRequireBookRepagination");
}

id objc_msgSend_sizeForAnnotation_font_width_numberOfLines_useSelectedText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeForAnnotation:font:width:numberOfLines:useSelectedText:");
}

id objc_msgSend_sizeForSpread_landscape_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeForSpread:landscape:");
}

id objc_msgSend_sizeForString_font_width_numberOfLines_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeForString:font:width:numberOfLines:");
}

id objc_msgSend_sizeLargerButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeLargerButton");
}

id objc_msgSend_sizeOfCachedFonts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeOfCachedFonts");
}

id objc_msgSend_sizeSeparatorLine(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeSeparatorLine");
}

id objc_msgSend_sizeSmallerButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeSmallerButton");
}

id objc_msgSend_sizeThatFits_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeThatFits:");
}

id objc_msgSend_sizeToFit(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeToFit");
}

id objc_msgSend_sizeWithAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeWithAttributes:");
}

id objc_msgSend_sizes(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizes");
}

id objc_msgSend_skip(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "skip");
}

id objc_msgSend_skipController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "skipController");
}

id objc_msgSend_sleepForTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sleepForTimeInterval:");
}

id objc_msgSend_slide_animated_withDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "slide:animated:withDelay:");
}

id objc_msgSend_smallSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smallSize");
}

id objc_msgSend_smilMapOnPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "smilMapOnPages:");
}

id objc_msgSend_snapToGravitationalPoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapToGravitationalPoint");
}

id objc_msgSend_snapshot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshot");
}

id objc_msgSend_snapshotForBookInfo_pageNumber_size_maxSize_isRight_zoomScale_applyMaskAndGutter_containerBounds_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotForBookInfo:pageNumber:size:maxSize:isRight:zoomScale:applyMaskAndGutter:containerBounds:completion:");
}

id objc_msgSend_snapshotSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotSize");
}

id objc_msgSend_snapshotViewAfterScreenUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotViewAfterScreenUpdates:");
}

id objc_msgSend_snapshotWithPageNumber_size_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "snapshotWithPageNumber:size:completion:");
}

id objc_msgSend_sortAuthor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortAuthor");
}

id objc_msgSend_sortAuthorFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortAuthorFromPlistEntry:");
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingSelector:");
}

id objc_msgSend_sortedDocuments(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedDocuments");
}

id objc_msgSend_sourceURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sourceURL");
}

id objc_msgSend_span(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "span");
}

id objc_msgSend_specifiedWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "specifiedWidth");
}

id objc_msgSend_spineIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spineIndex");
}

id objc_msgSend_spineIndexInPackage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spineIndexInPackage");
}

id objc_msgSend_spineIndexUpdated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spineIndexUpdated");
}

id objc_msgSend_spineLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spineLocation");
}

id objc_msgSend_spreadView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "spreadView");
}

id objc_msgSend_springAnimationForKeyPath_stiffness_damping_from_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "springAnimationForKeyPath:stiffness:damping:from:to:");
}

id objc_msgSend_stableIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stableIdentifier");
}

id objc_msgSend_stack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stack");
}

id objc_msgSend_stackView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stackView");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_standardizedURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardizedURL");
}

id objc_msgSend_startAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimating");
}

id objc_msgSend_startAnimation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAnimation");
}

id objc_msgSend_startAutoCurl(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startAutoCurl");
}

id objc_msgSend_startCFIsForNavigationInfoHrefs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCFIsForNavigationInfoHrefs:");
}

id objc_msgSend_startCountingAnnotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startCountingAnnotations");
}

id objc_msgSend_startFetchingAnnotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startFetchingAnnotations");
}

id objc_msgSend_startFetchingBookmarks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startFetchingBookmarks");
}

id objc_msgSend_startLocationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startLocationInView:");
}

id objc_msgSend_startManualCurlAtPostion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startManualCurlAtPostion:");
}

id objc_msgSend_startOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startOffset");
}

id objc_msgSend_startPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPath");
}

id objc_msgSend_startPoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startPoint");
}

id objc_msgSend_startReadAloud(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startReadAloud");
}

id objc_msgSend_startSearchFromIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSearchFromIndex");
}

id objc_msgSend_startSearchIndex(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSearchIndex");
}

id objc_msgSend_startSleepTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSleepTimer");
}

id objc_msgSend_startTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startTime");
}

id objc_msgSend_startTracking(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startTracking");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "state");
}

id objc_msgSend_stateForRegionWithKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateForRegionWithKey:");
}

id objc_msgSend_stateShouldClose(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stateShouldClose");
}

id objc_msgSend_statusBarFrame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarFrame");
}

id objc_msgSend_statusBarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarHeight");
}

id objc_msgSend_statusBarHeightForWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarHeightForWindow:");
}

id objc_msgSend_statusBarManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "statusBarManager");
}

id objc_msgSend_steps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "steps");
}

id objc_msgSend_stopActivityIndicator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopActivityIndicator:");
}

id objc_msgSend_stopAnimating(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopAnimating");
}

id objc_msgSend_stopFetchingAnnotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopFetchingAnnotations");
}

id objc_msgSend_stopFetchingBookmarks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopFetchingBookmarks");
}

id objc_msgSend_stopLoading(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopLoading");
}

id objc_msgSend_stopPlayingMedia_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopPlayingMedia:");
}

id objc_msgSend_stopReadAloud(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopReadAloud");
}

id objc_msgSend_stopSleepTimer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSleepTimer");
}

id objc_msgSend_stopSoundtrack(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stopSoundtrack");
}

id objc_msgSend_storageKey(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storageKey");
}

id objc_msgSend_storeDefaultStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeDefaultStyle:");
}

id objc_msgSend_storeFront(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeFront");
}

id objc_msgSend_storeFrontId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeFrontId");
}

id objc_msgSend_storeId(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeId");
}

id objc_msgSend_storeIdFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeIdFromPlistEntry:");
}

id objc_msgSend_storeImage_forKey_size_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeImage:forKey:size:format:");
}

id objc_msgSend_storeMgr(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeMgr");
}

id objc_msgSend_storeShortURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeShortURL");
}

id objc_msgSend_storeShortURLForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeShortURLForStoreId:dataSource:");
}

id objc_msgSend_storeURLForBookStoreId_isAudiobook_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeURLForBookStoreId:isAudiobook:");
}

id objc_msgSend_storeURLForStoreId_dataSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeURLForStoreId:dataSource:");
}

id objc_msgSend_storeURLPreferShort(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "storeURLPreferShort");
}

id objc_msgSend_stores(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stores");
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "string");
}

id objc_msgSend_stringByAddingPercentEncodingWithAllowedCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAddingPercentEncodingWithAllowedCharacters:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathExtension:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByConvertingControlCharactersToSpace(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByConvertingControlCharactersToSpace");
}

id objc_msgSend_stringByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByDeletingLastPathComponent");
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByDeletingPathExtension");
}

id objc_msgSend_stringByRemovingPercentEncoding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByRemovingPercentEncoding");
}

id objc_msgSend_stringByRemovingURLFragment(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByRemovingURLFragment");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByStandardizingPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByStandardizingPath");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:");
}

id objc_msgSend_stringForKey_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringForKey:context:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringFromTimeInterval_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromTimeInterval:");
}

id objc_msgSend_stringResultForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringResultForKey:");
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringValue");
}

id objc_msgSend_stringWithCharacters_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCharacters:length:");
}

id objc_msgSend_stringWithContentsOfFile_encoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithContentsOfFile:encoding:error:");
}

id objc_msgSend_stringWithContentsOfURL_usedEncoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithContentsOfURL:usedEncoding:error:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithPercentEscape(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithPercentEscape");
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithString:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_stroke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stroke");
}

id objc_msgSend_strokeColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "strokeColor");
}

id objc_msgSend_style(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "style");
}

id objc_msgSend_styleForFont_presetIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "styleForFont:presetIndex:");
}

id objc_msgSend_styleManager(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "styleManager");
}

id objc_msgSend_styleManagerWithLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "styleManagerWithLanguage:");
}

id objc_msgSend_styleWithEffect_shape_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "styleWithEffect:shape:");
}

id objc_msgSend_stylesheetSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylesheetSet");
}

id objc_msgSend_stylizeBCNavigationBar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeBCNavigationBar:");
}

id objc_msgSend_stylizeBCNavigationBarTranslucent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeBCNavigationBarTranslucent:");
}

id objc_msgSend_stylizeButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeButton:");
}

id objc_msgSend_stylizeForTheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeForTheme");
}

id objc_msgSend_stylizeNavigationController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeNavigationController:");
}

id objc_msgSend_stylizeScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeScrollView:");
}

id objc_msgSend_stylizeSlider_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeSlider:");
}

id objc_msgSend_stylizeTableView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeTableView:");
}

id objc_msgSend_stylizeTableViewCell_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stylizeTableViewCell:");
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_sublayerTransform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sublayerTransform");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_subviews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subviews");
}

id objc_msgSend_successfulLoad(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "successfulLoad");
}

id objc_msgSend_suffixForLanguage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suffixForLanguage:");
}

id objc_msgSend_summaryString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "summaryString");
}

id objc_msgSend_superMegaPhonePortraitExactSizePredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superMegaPhonePortraitExactSizePredicate");
}

id objc_msgSend_superPhoneLandscapeExactSizePredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superPhoneLandscapeExactSizePredicate");
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superview");
}

id objc_msgSend_supportsBrightness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsBrightness");
}

id objc_msgSend_supportsDocumentEditing(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsDocumentEditing");
}

id objc_msgSend_supportsExpandedContent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsExpandedContent");
}

id objc_msgSend_supportsNotesAndHighlights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsNotesAndHighlights");
}

id objc_msgSend_supportsResource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsResource:");
}

id objc_msgSend_supportsScrollLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsScrollLayout");
}

id objc_msgSend_supportsSinglePageMode(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsSinglePageMode");
}

id objc_msgSend_supportsSpreadForVerticalLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "supportsSpreadForVerticalLayout");
}

id objc_msgSend_suppressTOC(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suppressTOC");
}

id objc_msgSend_surroundingViews(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "surroundingViews");
}

id objc_msgSend_suspend(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "suspend");
}

id objc_msgSend_swipeGesture(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "swipeGesture");
}

id objc_msgSend_switchColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "switchColor");
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBackgroundColor");
}

id objc_msgSend_systemBlackColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlackColor");
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlueColor");
}

id objc_msgSend_systemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:");
}

id objc_msgSend_systemFontOfSize_weight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:weight:");
}

id objc_msgSend_systemFontOfSize_weight_design_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemFontOfSize:weight:design:");
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:");
}

id objc_msgSend_systemImageNamed_withConfiguration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemImageNamed:withConfiguration:");
}

id objc_msgSend_systemLayoutSizeFittingSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemLayoutSizeFittingSize:");
}

id objc_msgSend_systemName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemName");
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemRedColor");
}

id objc_msgSend_systemVersion(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemVersion");
}

id objc_msgSend_tableFooterView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableFooterView");
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView");
}

id objc_msgSend_tableView_heightForFooterInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:heightForFooterInSection:");
}

id objc_msgSend_tableView_heightForHeaderInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:heightForHeaderInSection:");
}

id objc_msgSend_tableView_heightForRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:heightForRowAtIndexPath:");
}

id objc_msgSend_tableView_numberOfRowsInSection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:numberOfRowsInSection:");
}

id objc_msgSend_tableView_shouldHighlightRowAtIndexPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableView:shouldHighlightRowAtIndexPath:");
}

id objc_msgSend_tableViewBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewBackgroundColor");
}

id objc_msgSend_tableViewCellBackgroundColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewCellBackgroundColor");
}

id objc_msgSend_tableViewCellSelectedColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewCellSelectedColor");
}

id objc_msgSend_tableViewHeaderView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewHeaderView");
}

id objc_msgSend_tableViewSeparatorColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewSeparatorColor");
}

id objc_msgSend_tableViewSeparatorStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tableViewSeparatorStyle");
}

id objc_msgSend_tag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tag");
}

id objc_msgSend_tailCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tailCFI");
}

id objc_msgSend_takeBookOfflineIfManagedWithAnnotationProvider_assetID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeBookOfflineIfManagedWithAnnotationProvider:assetID:");
}

id objc_msgSend_takeSnapshotOfView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeSnapshotOfView:");
}

id objc_msgSend_takeSnapshotOfView_rect_afterScreenUpdates_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeSnapshotOfView:rect:afterScreenUpdates:");
}

id objc_msgSend_takeSnapshotWithConfiguration_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "takeSnapshotWithConfiguration:completionHandler:");
}

id objc_msgSend_tallPhoneSizeClassPredicate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tallPhoneSizeClassPredicate");
}

id objc_msgSend_tapActionForLocation_view_ignoreOppositePage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapActionForLocation:view:ignoreOppositePage:");
}

id objc_msgSend_tapGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapGestureRecognizer");
}

id objc_msgSend_tapToTurnWidth(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tapToTurnWidth");
}

id objc_msgSend_target(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "target");
}

id objc_msgSend_targetPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetPageNumber");
}

id objc_msgSend_targetTimestamp(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetTimestamp");
}

id objc_msgSend_targetTransform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetTransform");
}

id objc_msgSend_targetView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetView");
}

id objc_msgSend_teardown(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teardown");
}

id objc_msgSend_teardownNotifications(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "teardownNotifications");
}

id objc_msgSend_tempOwnerID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tempOwnerID");
}

id objc_msgSend_template(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "template");
}

id objc_msgSend_templateSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "templateSet");
}

id objc_msgSend_templateWithString_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "templateWithString:error:");
}

id objc_msgSend_templateWithURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "templateWithURL:error:");
}

id objc_msgSend_templates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "templates");
}

id objc_msgSend_temporaryItemIdentifierFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "temporaryItemIdentifierFromPlistEntry:");
}

id objc_msgSend_tertiaryTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tertiaryTextColor");
}

id objc_msgSend_testIsRunning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testIsRunning");
}

id objc_msgSend_testStateProvider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testStateProvider");
}

id objc_msgSend_testingLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "testingLayout");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "text");
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textColor");
}

id objc_msgSend_textContentScript(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textContentScript");
}

id objc_msgSend_textDirectionDetermined(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textDirectionDetermined");
}

id objc_msgSend_textDirectionScript(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textDirectionScript");
}

id objc_msgSend_textFields(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textFields");
}

id objc_msgSend_textHighlightType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textHighlightType");
}

id objc_msgSend_textIndexWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textIndexWithName:");
}

id objc_msgSend_textLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textLabel");
}

id objc_msgSend_textLabelTrailingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textLabelTrailingAnchor");
}

id objc_msgSend_textNodeCharacterCounts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textNodeCharacterCounts");
}

id objc_msgSend_textNodeCharacterCountsScriptForSpineIndex_documentOrdinal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textNodeCharacterCountsScriptForSpineIndex:documentOrdinal:");
}

id objc_msgSend_textShadowOffset(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textShadowOffset");
}

id objc_msgSend_theme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "theme");
}

id objc_msgSend_themeContainer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeContainer");
}

id objc_msgSend_themeForAnnotationStyle_pageTheme_isUnderline_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeForAnnotationStyle:pageTheme:isUnderline:");
}

id objc_msgSend_themeForEPUBTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeForEPUBTheme:");
}

id objc_msgSend_themeIdentifier(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeIdentifier");
}

id objc_msgSend_themePage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themePage");
}

id objc_msgSend_themeWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "themeWithIdentifier:");
}

id objc_msgSend_thenSteps(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thenSteps");
}

id objc_msgSend_thumb(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumb");
}

id objc_msgSend_thumbRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbRect");
}

id objc_msgSend_thumbnailBookViewConfiguration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailBookViewConfiguration");
}

id objc_msgSend_thumbnailDirectory_cancelPreviousRenderRequestsWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailDirectory:cancelPreviousRenderRequestsWithContext:");
}

id objc_msgSend_thumbnailDirectory_thumbnailForPage_size_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailDirectory:thumbnailForPage:size:context:");
}

id objc_msgSend_thumbnailDirectoryWantsPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailDirectoryWantsPageNumber:");
}

id objc_msgSend_thumbnailForPage_asset_size_renderingCacheCallbackTarget_renderingCacheCallbackContext_priority_containerBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailForPage:asset:size:renderingCacheCallbackTarget:renderingCacheCallbackContext:priority:containerBounds:");
}

id objc_msgSend_thumbnailForPageNumber_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailForPageNumber:size:");
}

id objc_msgSend_thumbnailScrubber_cancelPreviousRenderRequestsWithContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailScrubber:cancelPreviousRenderRequestsWithContext:");
}

id objc_msgSend_thumbnailScrubber_pageTitleForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailScrubber:pageTitleForPageNumber:");
}

id objc_msgSend_thumbnailScrubber_thumbnailForPage_size_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailScrubber:thumbnailForPage:size:context:");
}

id objc_msgSend_thumbnailSizeForAspectRatio_showSpreads_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailSizeForAspectRatio:showSpreads:");
}

id objc_msgSend_thumbnailingContentSizeForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailingContentSizeForPageNumber:");
}

id objc_msgSend_thumbnailingDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailingDelegate");
}

id objc_msgSend_thumbnailingGenerateImageForPageNumber_size_callbackBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "thumbnailingGenerateImageForPageNumber:size:callbackBlock:");
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceNow");
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeIntervalSinceReferenceDate");
}

id objc_msgSend_timeOut(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeOut");
}

id objc_msgSend_timeRangeInAudiobook(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "timeRangeInAudiobook");
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tintColor");
}

id objc_msgSend_tintColorForNavbarButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tintColorForNavbarButtons");
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "title");
}

id objc_msgSend_titleFontSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleFontSize");
}

id objc_msgSend_titleForChapterAtPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleForChapterAtPageNumber:");
}

id objc_msgSend_titleFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleFromPlistEntry:");
}

id objc_msgSend_titleLabel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleLabel");
}

id objc_msgSend_titlePadding(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titlePadding");
}

id objc_msgSend_titleSizeForText_indentation_font_width_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleSizeForText:indentation:font:width:");
}

id objc_msgSend_titleTopConstraint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "titleTopConstraint");
}

id objc_msgSend_toValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toValue");
}

id objc_msgSend_tocContentType(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocContentType");
}

id objc_msgSend_tocData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocData");
}

id objc_msgSend_tocDataIndexFromChapterHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocDataIndexFromChapterHref:");
}

id objc_msgSend_tocDelegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocDelegate");
}

id objc_msgSend_tocHTMLWithFetchedResultsController_directoryDelegate_chapterTopLevelFont_chapterSubLevelFont_pageLabelFont_themeContentBackgroundColor_textColor_selectedTextColor_pageNumberTextColor_separatorColor_highlightedBackgroundColor_highlightedTextColor_contentInsets_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocHTMLWithFetchedResultsController:directoryDelegate:chapterTopLevelFont:chapterSubLevelFont:pageLabelFont:themeContentBackgroundColor:textColor:selectedTextColor:pageNumberTextColor:separatorColor:highlightedBackgroundColor:highlightedTextColor:contentInsets:completionBlock:");
}

id objc_msgSend_tocIdCssRules(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocIdCssRules");
}

id objc_msgSend_tocIndexPathForRowNearestPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocIndexPathForRowNearestPageNumber:");
}

id objc_msgSend_tocPageHref(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocPageHref");
}

id objc_msgSend_tocPageNumberTextColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocPageNumberTextColor");
}

id objc_msgSend_tocRoot(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocRoot");
}

id objc_msgSend_tocViewController_chapterTitleForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewController:chapterTitleForAnnotation:");
}

id objc_msgSend_tocViewController_didSelectChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewController:didSelectChapter:");
}

id objc_msgSend_tocViewController_pageNumberForChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewController:pageNumberForChapter:");
}

id objc_msgSend_tocViewController_pageTitleForAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewController:pageTitleForAnnotation:");
}

id objc_msgSend_tocViewController_pageTitleForChapter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewController:pageTitleForChapter:");
}

id objc_msgSend_tocViewController_shareAnnotations_sourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewController:shareAnnotations:sourceView:");
}

id objc_msgSend_tocViewController_willTransitionToSize_withTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewController:willTransitionToSize:withTransitionCoordinator:");
}

id objc_msgSend_tocViewControllerContentDidChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewControllerContentDidChange:");
}

id objc_msgSend_tocViewControllerCurrentLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewControllerCurrentLocation:");
}

id objc_msgSend_tocViewControllerDidChangeEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewControllerDidChangeEditing:");
}

id objc_msgSend_tocViewControllerTocIdCssRules_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tocViewControllerTocIdCssRules:");
}

id objc_msgSend_toggleBookmark_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleBookmark:");
}

id objc_msgSend_toggleBookmarkForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleBookmarkForContentViewController:");
}

id objc_msgSend_toggleControls_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleControls:");
}

id objc_msgSend_toggleControlsForContentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toggleControlsForContentViewController:");
}

id objc_msgSend_tokenCountWithEnumerationOptions_maxTokenCount_outLimitLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tokenCountWithEnumerationOptions:maxTokenCount:outLimitLength:");
}

id objc_msgSend_toolbar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toolbar");
}

id objc_msgSend_toolbarButtonMargin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toolbarButtonMargin");
}

id objc_msgSend_toolbarHidden(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toolbarHidden");
}

id objc_msgSend_toolbarItems(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toolbarItems");
}

id objc_msgSend_toolbarTitleColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "toolbarTitleColor");
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topAnchor");
}

id objc_msgSend_topBarHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topBarHeight");
}

id objc_msgSend_topPagesView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topPagesView");
}

id objc_msgSend_topToolbar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topToolbar");
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewController");
}

id objc_msgSend_topViewFromCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewFromCenter");
}

id objc_msgSend_topViewToCenter(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "topViewToCenter");
}

id objc_msgSend_totalPages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalPages");
}

id objc_msgSend_totalZoomScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "totalZoomScale");
}

id objc_msgSend_touchBarController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchBarController");
}

id objc_msgSend_touchBarPositionForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchBarPositionForPageNumber:");
}

id objc_msgSend_touchBarScrollerBookIsRightToLeft(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchBarScrollerBookIsRightToLeft");
}

id objc_msgSend_touchInProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchInProgress");
}

id objc_msgSend_touchesEnded_withEvent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "touchesEnded:withEvent:");
}

id objc_msgSend_track(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "track");
}

id objc_msgSend_trackOrientation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackOrientation");
}

id objc_msgSend_trackReadingSessionBeganWithAssetID_sessionID_trackerEventType_readingFeatureFlags_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackReadingSessionBeganWithAssetID:sessionID:trackerEventType:readingFeatureFlags:completion:");
}

id objc_msgSend_trackReadingSessionEndedWithAssetID_sessionID_trackerEventType_readingFeatureFlags_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackReadingSessionEndedWithAssetID:sessionID:trackerEventType:readingFeatureFlags:completion:");
}

id objc_msgSend_trackState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackState");
}

id objc_msgSend_trackingTouch(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trackingTouch");
}

id objc_msgSend_tracks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tracks");
}

id objc_msgSend_trailingAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "trailingAnchor");
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "traitCollection");
}

id objc_msgSend_transform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transform");
}

id objc_msgSend_transitionContentView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionContentView");
}

id objc_msgSend_transitionDidFinish_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionDidFinish:");
}

id objc_msgSend_transitionDuration(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionDuration");
}

id objc_msgSend_transitionDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionDuration:");
}

id objc_msgSend_transitionLocationForNavigationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionLocationForNavigationController");
}

id objc_msgSend_transitionWasCancelled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transitionWasCancelled");
}

id objc_msgSend_translationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "translationInView:");
}

id objc_msgSend_translationViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "translationViewController");
}

id objc_msgSend_truncateHistory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "truncateHistory");
}

id objc_msgSend_tryEmbeddedHrefForCoverArtHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tryEmbeddedHrefForCoverArtHref:");
}

id objc_msgSend_turnPageInDirection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "turnPageInDirection:");
}

id objc_msgSend_turnState(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "turnState");
}

id objc_msgSend_turnToInitialPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "turnToInitialPage:");
}

id objc_msgSend_turnToNextPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "turnToNextPage");
}

id objc_msgSend_turnToPageNumber_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "turnToPageNumber:animated:");
}

id objc_msgSend_turnToPageNumber_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "turnToPageNumber:animated:completion:");
}

id objc_msgSend_turnToPreviousPage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "turnToPreviousPage");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "type");
}

id objc_msgSend_uiManagedObjectContext(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uiManagedObjectContext");
}

id objc_msgSend_unbatchedObjectsWithPredicate_forEntity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unbatchedObjectsWithPredicate:forEntity:");
}

id objc_msgSend_unbookmarkPage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unbookmarkPage:");
}

id objc_msgSend_unboxedDocumentOrdinal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unboxedDocumentOrdinal");
}

id objc_msgSend_uncurlAnimationAngle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uncurlAnimationAngle");
}

id objc_msgSend_uncurlAnimationRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uncurlAnimationRadius");
}

id objc_msgSend_uncurlAnimationShadowColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uncurlAnimationShadowColor");
}

id objc_msgSend_uncurlAnimationTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uncurlAnimationTime");
}

id objc_msgSend_underlinePercent(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "underlinePercent");
}

id objc_msgSend_underlineTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "underlineTheme:");
}

id objc_msgSend_unfreeze(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unfreeze");
}

id objc_msgSend_unhandledClickAtPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unhandledClickAtPoint:");
}

id objc_msgSend_unifedAllFrameStylesheet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unifedAllFrameStylesheet");
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_unionWithCFI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionWithCFI:");
}

id objc_msgSend_uniqueIdFromPlistEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uniqueIdFromPlistEntry:");
}

id objc_msgSend_unknownCFI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unknownCFI");
}

id objc_msgSend_unknownCFIString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unknownCFIString");
}

id objc_msgSend_unknownLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unknownLocation");
}

id objc_msgSend_unlockWithPassword_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unlockWithPassword:");
}

id objc_msgSend_unpaginatedAnnotations(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unpaginatedAnnotations");
}

id objc_msgSend_unregisterFiles(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterFiles");
}

id objc_msgSend_unregisterForVisibleCFIUpdates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unregisterForVisibleCFIUpdates");
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntValue");
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedIntegerValue");
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedLongLongValue");
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unsignedLongValue");
}

id objc_msgSend_upSellData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upSellData");
}

id objc_msgSend_updateAnchorInformation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAnchorInformation:");
}

id objc_msgSend_updateAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateAppearance");
}

id objc_msgSend_updateBookContentConstraints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBookContentConstraints");
}

id objc_msgSend_updateBookProgress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBookProgress:completion:");
}

id objc_msgSend_updateBookProgress_currentPage_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBookProgress:currentPage:completion:");
}

id objc_msgSend_updateBookmarkButton_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBookmarkButton:");
}

id objc_msgSend_updateBottomToolbar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBottomToolbar:");
}

id objc_msgSend_updateBrightness(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateBrightness");
}

id objc_msgSend_updateButton(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateButton");
}

id objc_msgSend_updateButtonAppearance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateButtonAppearance");
}

id objc_msgSend_updateButtonTitle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateButtonTitle");
}

id objc_msgSend_updateCachedURLFrom_to_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCachedURLFrom:to:");
}

id objc_msgSend_updateConstraintsIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateConstraintsIfNeeded");
}

id objc_msgSend_updateContentInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContentInsets");
}

id objc_msgSend_updateContentScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateContentScale");
}

id objc_msgSend_updateControlStates(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateControlStates");
}

id objc_msgSend_updateCurlPercent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCurlPercent:");
}

id objc_msgSend_updateCurrentReadingPositionViewIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateCurrentReadingPositionViewIfNeeded");
}

id objc_msgSend_updateDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDate");
}

id objc_msgSend_updateFixedLayoutWebView_fixedLayoutSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFixedLayoutWebView:fixedLayoutSize:");
}

id objc_msgSend_updateFonts(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateFonts");
}

id objc_msgSend_updateHUDVisibilityAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHUDVisibilityAnimated:");
}

id objc_msgSend_updateHighlightImage(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateHighlightImage");
}

id objc_msgSend_updateLabelFont(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLabelFont");
}

id objc_msgSend_updateLayout(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLayout");
}

id objc_msgSend_updateLocationIfNeeded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateLocationIfNeeded");
}

id objc_msgSend_updateManualAnimationToLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateManualAnimationToLocation:");
}

id objc_msgSend_updateManualCurl_toLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateManualCurl:toLocation:");
}

id objc_msgSend_updateManualCurlToLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateManualCurlToLocation:");
}

id objc_msgSend_updateManualCurlToPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateManualCurlToPosition:");
}

id objc_msgSend_updateMediaForBook_chapter_mediaCFI_progress_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMediaForBook:chapter:mediaCFI:progress:completion:");
}

id objc_msgSend_updateMediaFrames_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateMediaFrames:");
}

id objc_msgSend_updateOrdinalForBookInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateOrdinalForBookInfo:");
}

id objc_msgSend_updatePageCount(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePageCount");
}

id objc_msgSend_updatePageNumberHUD(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePageNumberHUD");
}

id objc_msgSend_updatePageNumberStrings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePageNumberStrings");
}

id objc_msgSend_updatePageStylesheet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePageStylesheet");
}

id objc_msgSend_updatePaginationCache_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePaginationCache:");
}

id objc_msgSend_updatePaginationOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePaginationOptions:");
}

id objc_msgSend_updatePaginationProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePaginationProgress:");
}

id objc_msgSend_updatePopoverSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatePopoverSize");
}

id objc_msgSend_updateProgress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateProgress");
}

id objc_msgSend_updateProgressKitForNewLocation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateProgressKitForNewLocation");
}

id objc_msgSend_updateReadingProgressAndBumpHighWaterMarkToProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateReadingProgressAndBumpHighWaterMarkToProgress:");
}

id objc_msgSend_updateRowHeight(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateRowHeight");
}

id objc_msgSend_updateScriptWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateScriptWithOptions:");
}

id objc_msgSend_updateScriptWithOptions_gapBetweenPages_paginatedTopToBottom_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateScriptWithOptions:gapBetweenPages:paginatedTopToBottom:");
}

id objc_msgSend_updateScriptWithOptions_pageLength_gapBetweenPages_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateScriptWithOptions:pageLength:gapBetweenPages:");
}

id objc_msgSend_updateScrubber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateScrubber:");
}

id objc_msgSend_updateScrubberUsingTouchbar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateScrubberUsingTouchbar:");
}

id objc_msgSend_updateSelectionHighlights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSelectionHighlights");
}

id objc_msgSend_updateSelectionWithExtentPoint_withBoundary_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateSelectionWithExtentPoint:withBoundary:completionHandler:");
}

id objc_msgSend_updateThemeButtons(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateThemeButtons");
}

id objc_msgSend_updateToolbarController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateToolbarController");
}

id objc_msgSend_updateTopToolbar_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTopToolbar:");
}

id objc_msgSend_updateTouchBarController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateTouchBarController");
}

id objc_msgSend_updateUI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUI");
}

id objc_msgSend_updateUIForSmartInvert(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUIForSmartInvert");
}

id objc_msgSend_updateUpsellZoomScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateUpsellZoomScale");
}

id objc_msgSend_updateView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateView");
}

id objc_msgSend_updateVisibleArtwork(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVisibleArtwork");
}

id objc_msgSend_updateVisibleContentViewControllerForOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateVisibleContentViewControllerForOffset:");
}

id objc_msgSend_updatedHighlight_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updatedHighlight:");
}

id objc_msgSend_upgradeAnnotationsScript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upgradeAnnotationsScript:");
}

id objc_msgSend_upsellContentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upsellContentViewController");
}

id objc_msgSend_upsellOrdinal(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upsellOrdinal");
}

id objc_msgSend_upsellPageNumber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upsellPageNumber");
}

id objc_msgSend_upsellThumbnailForAsset_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upsellThumbnailForAsset:size:");
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "url");
}

id objc_msgSend_urlForDocument_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlForDocument:");
}

id objc_msgSend_urlForHref_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlForHref:");
}

id objc_msgSend_urlScheme(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlScheme");
}

id objc_msgSend_urlToDocumentCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlToDocumentCache");
}

id objc_msgSend_urlToStringCache(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "urlToStringCache");
}

id objc_msgSend_useEnhancedEditMenu(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useEnhancedEditMenu");
}

id objc_msgSend_useGlobalContentStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useGlobalContentStyle");
}

id objc_msgSend_useInnerRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useInnerRect:");
}

id objc_msgSend_useInvertedColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useInvertedColors");
}

id objc_msgSend_useNightColors(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useNightColors");
}

id objc_msgSend_usePageViewController_withViewOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usePageViewController:withViewOptions:");
}

id objc_msgSend_usePaginationLineGrid(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usePaginationLineGrid");
}

id objc_msgSend_useRoundedCornerRadius(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useRoundedCornerRadius");
}

id objc_msgSend_useSelectedFont_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "useSelectedFont:");
}

id objc_msgSend_userAnnotationTypeValues(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userAnnotationTypeValues");
}

id objc_msgSend_userContentController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userContentController");
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInfo");
}

id objc_msgSend_userInteractionOccurred(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInteractionOccurred");
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceIdiom");
}

id objc_msgSend_userInterfaceLayoutDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLayoutDirection");
}

id objc_msgSend_userInterfaceLayoutDirectionForSemanticContentAttribute_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceLayoutDirectionForSemanticContentAttribute:");
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userInterfaceStyle");
}

id objc_msgSend_userNavigated(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "userNavigated");
}

id objc_msgSend_usesPopoverStyle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usesPopoverStyle");
}

id objc_msgSend_validLayoutForBook_desiredLayout_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validLayoutForBook:desiredLayout:");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "value");
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueForKey_fromNamespace_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:fromNamespace:");
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKeyPath:");
}

id objc_msgSend_valueForPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForPoint:");
}

id objc_msgSend_valueResultForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueResultForKey:");
}

id objc_msgSend_valueWithBytes_objCType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithBytes:objCType:");
}

id objc_msgSend_valueWithCGPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCGPoint:");
}

id objc_msgSend_valueWithCGRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCGRect:");
}

id objc_msgSend_valueWithCGSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCGSize:");
}

id objc_msgSend_valueWithPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithPoint:");
}

id objc_msgSend_valueWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithRange:");
}

id objc_msgSend_valueWithRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithRect:");
}

id objc_msgSend_velocity(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "velocity");
}

id objc_msgSend_velocityInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "velocityInView:");
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "version");
}

id objc_msgSend_versionNumberHumanReadable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "versionNumberHumanReadable");
}

id objc_msgSend_verticalCenteringInsets(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalCenteringInsets");
}

id objc_msgSend_verticalScrollFeatureEnabled(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalScrollFeatureEnabled");
}

id objc_msgSend_verticalScrubber(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalScrubber");
}

id objc_msgSend_verticalScrubberAnimator(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalScrubberAnimator");
}

id objc_msgSend_verticalSizeClass(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "verticalSizeClass");
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "view");
}

id objc_msgSend_viewAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewAtIndex:");
}

id objc_msgSend_viewConfiguredForCoverContent_bookID_protocolCacheItem_paginationOptions_cfiOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewConfiguredForCoverContent:bookID:protocolCacheItem:paginationOptions:cfiOptions:");
}

id objc_msgSend_viewConfiguredForPictureBooks_fixedLayoutSize_protocolCacheItem_paginationOptions_cleanupOptions_cfiOptions_stylesheetSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewConfiguredForPictureBooks:fixedLayoutSize:protocolCacheItem:paginationOptions:cleanupOptions:cfiOptions:stylesheetSet:");
}

id objc_msgSend_viewConfiguredForPreview_enableDeveloperExtras_bookID_imageFilterMode_protocolCacheItem_cleanupOptions_stylesheetSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewConfiguredForPreview:enableDeveloperExtras:bookID:imageFilterMode:protocolCacheItem:cleanupOptions:stylesheetSet:");
}

id objc_msgSend_viewConfiguredForSearch_protocolCacheItem_paginationOptions_cleanupOptions_cfiOptions_stylesheetSet_styleManager_contentSupportMode_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewConfiguredForSearch:protocolCacheItem:paginationOptions:cleanupOptions:cfiOptions:stylesheetSet:styleManager:contentSupportMode:completion:");
}

id objc_msgSend_viewConfiguredForWebTOC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewConfiguredForWebTOC:");
}

id objc_msgSend_viewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewController");
}

id objc_msgSend_viewControllerForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllerForKey:");
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewControllers");
}

id objc_msgSend_viewForLiveResize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewForLiveResize");
}

id objc_msgSend_viewForPageNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewForPageNumber:");
}

id objc_msgSend_viewForZoomingInScrollView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewForZoomingInScrollView:");
}

id objc_msgSend_viewIfLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewIfLoaded");
}

id objc_msgSend_viewSizeChanged(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewSizeChanged");
}

id objc_msgSend_viewWithTag_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "viewWithTag:");
}

id objc_msgSend_visibleCFIRange(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleCFIRange");
}

id objc_msgSend_visibleCFIString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleCFIString");
}

id objc_msgSend_visibleCells(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleCells");
}

id objc_msgSend_visibleContentViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleContentViewController");
}

id objc_msgSend_visiblePageBookmarks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visiblePageBookmarks");
}

id objc_msgSend_visiblePageHighlights(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visiblePageHighlights");
}

id objc_msgSend_visiblePages(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visiblePages");
}

id objc_msgSend_visibleRectForLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleRectForLocation:");
}

id objc_msgSend_visibleRectForLocation_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleRectForLocation:completion:");
}

id objc_msgSend_volume(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volume");
}

id objc_msgSend_volumeSlider(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "volumeSlider");
}

id objc_msgSend_waitUntilAllOperationsAreFinished(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "waitUntilAllOperationsAreFinished");
}

id objc_msgSend_wantsBottomToolbar(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsBottomToolbar");
}

id objc_msgSend_wantsDoubleTapGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsDoubleTapGestureRecognizer");
}

id objc_msgSend_wantsJumpBackHistory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsJumpBackHistory");
}

id objc_msgSend_wantsTapToHideToolbarGestureRecognizer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wantsTapToHideToolbarGestureRecognizer");
}

id objc_msgSend_wasAborted(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasAborted");
}

id objc_msgSend_wasParsed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wasParsed");
}

id objc_msgSend_webView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webView");
}

id objc_msgSend_webView2(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webView2");
}

id objc_msgSend_webViewCachedImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewCachedImageView");
}

id objc_msgSend_webViewForSnapshotting_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewForSnapshotting:size:");
}

id objc_msgSend_webViewLoaded(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewLoaded");
}

id objc_msgSend_webViewLoader_didChangeSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewLoader:didChangeSelection:");
}

id objc_msgSend_webViewLoader_didUpdateCurrentVisibleCFILocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewLoader:didUpdateCurrentVisibleCFILocation:");
}

id objc_msgSend_webViewProxy(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewProxy");
}

id objc_msgSend_webViewTrackingID(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "webViewTrackingID");
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whiteColor");
}

id objc_msgSend_whitePageForSize_right_scale_contentSize_applyMaskAndGutter_containerBounds_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitePageForSize:right:scale:contentSize:applyMaskAndGutter:containerBounds:");
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceAndNewlineCharacterSet");
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "whitespaceCharacterSet");
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "widthAnchor");
}

id objc_msgSend_willAccessValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willAccessValueForKey:");
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willChangeValueForKey:");
}

id objc_msgSend_willChangeValueForKey_withSetMutation_usingObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willChangeValueForKey:withSetMutation:usingObjects:");
}

id objc_msgSend_willMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willMoveToParentViewController:");
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "window");
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "windowScene");
}

id objc_msgSend_wkWebView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "wkWebView");
}

id objc_msgSend_writableBookInfoForDatabaseKey_sync_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writableBookInfoForDatabaseKey_sync:block:");
}

id objc_msgSend_writeAnnotationsToWebProcessPlugin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeAnnotationsToWebProcessPlugin");
}

id objc_msgSend_writeAnnotationsToWebProcessPlugin_andHighlights_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeAnnotationsToWebProcessPlugin:andHighlights:");
}

id objc_msgSend_writeControlVisibilityStateToWebProcessPlugin(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeControlVisibilityStateToWebProcessPlugin");
}

id objc_msgSend_writeControlVisibilityStateToWebProcessPlugin_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeControlVisibilityStateToWebProcessPlugin:");
}

id objc_msgSend_writeToFile_atomically_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToFile:atomically:");
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_writeToURL_withOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:withOptions:");
}

id objc_msgSend_writingDirection(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writingDirection");
}

id objc_msgSend_writingModeScript(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writingModeScript");
}

id objc_msgSend_yellowColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yellowColor");
}

id objc_msgSend_yellowTheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "yellowTheme:");
}

id objc_msgSend_zoom_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoom:animated:");
}

id objc_msgSend_zoomScale(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoomScale");
}

id objc_msgSend_zoomToLeadingPageAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoomToLeadingPageAnimated:");
}

id objc_msgSend_zoomToPage_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoomToPage:animated:");
}

id objc_msgSend_zoomToPoint_scale_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoomToPoint:scale:animated:");
}

id objc_msgSend_zoomToRect_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoomToRect:animated:");
}

id objc_msgSend_zoomToRect_animated_completionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoomToRect:animated:completionBlock:");
}

id objc_msgSend_zoomToSpread_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoomToSpread:");
}

id objc_msgSend_zoomVisiblePageToFit_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoomVisiblePageToFit:");
}

id objc_msgSend_zoomingScrollView_didSimulateZoomScale_onView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zoomingScrollView:didSimulateZoomScale:onView:");
}
